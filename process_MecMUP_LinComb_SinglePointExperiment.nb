(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1512159,      31623]
NotebookOptionsPosition[   1497632,      31397]
NotebookOutlinePosition[   1498046,      31414]
CellTagsIndexPosition[   1498003,      31411]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Finalizing per-experiment PDF export", "Title",
 CellChangeTimes->{{3.79251224856536*^9, 
  3.792512262003469*^9}},ExpressionUUID->"9b60d79d-3c73-4aa9-850b-\
573bae9ecd86"],

Cell["\<\
Want to make aesthetic and small functional changes to the per-experiment PDFs.

1. Consistent (bigger) font size.

2. Chamber indices -> Column and Row as separate columns in table.

3. Less confusing initial rate plots.
\t- Removing exponential fit.

4. May want to remove non-Val/Gly Zn2+ ligand mutants, but unsure of how I'm \
going to be able to do this, so will leave to last.\
\>", "Text",
 CellChangeTimes->{{3.792512277035367*^9, 3.792512302125533*^9}, {
  3.7925123739945717`*^9, 3.7925124984994164`*^9}, {3.792512567658847*^9, 
  3.792512574002761*^9}},ExpressionUUID->"4e06a056-e3ad-4a56-a94a-\
21fbcb1b2e6a"],

Cell[CellGroupData[{

Cell["Analysis and plotting functions:", "Section",
 CellChangeTimes->{{3.732732210052601*^9, 
  3.732732219292498*^9}},ExpressionUUID->"7391da35-e83f-4ccf-8600-\
5aa538c9335d"],

Cell["\<\
The hidden cell below contains all the necessary functions for analyzing \
HTMEK kinetic and inhibition data. Evaluate this cell first.\
\>", "Text",
 CellChangeTimes->{{3.7564382272871923`*^9, 
  3.756438260651802*^9}},ExpressionUUID->"55221bad-66f0-476d-89aa-\
a13745167883"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"importstandardcurve", "[", "path_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataIN", ",", "parsed", ",", "standardcurvedata"}], "}"}], ",",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dataIN", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"path", ",", "\"\<Data\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "iterating", " ", "n", " ", "from", " ", "2", " ", "drops", " ", 
        RowBox[{"the", " ", ".", "csv"}], " ", "header", " ", "text"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"parsed", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"dataIN", "[", 
            RowBox[{"[", 
             RowBox[{"n", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"dataIN", "[", 
            RowBox[{"[", 
             RowBox[{"n", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"dataIN", "[", 
            RowBox[{"[", 
             RowBox[{"n", ",", "9"}], "]"}], "]"}], ",", 
           RowBox[{"dataIN", "[", 
            RowBox[{"[", 
             RowBox[{"n", ",", "13"}], "]"}], "]"}], ",", 
           RowBox[{"dataIN", "[", 
            RowBox[{"[", 
             RowBox[{"n", ",", "8"}], "]"}], "]"}], ",", 
           RowBox[{"dataIN", "[", 
            RowBox[{"[", 
             RowBox[{"n", ",", "6"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "2", ",", 
           RowBox[{"Length", "[", "dataIN", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"convert", " ", "[", "]"}], " ", "brackets", " ", "to", " ", 
        "curly", " ", "brackets", " ", 
        RowBox[{"{", "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"standardcurvedata", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"StringDelete", "[", 
            RowBox[{
             RowBox[{"parsed", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", "\"\<\\\"\>\""}], 
            "]"}], ",", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{"parsed", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"\"\<(\>\"", "\[Rule]", "\"\<{\>\""}]}], "]"}], ",", 
              RowBox[{"\"\<)\>\"", "\[Rule]", "\"\<}\>\""}]}], "]"}], "]"}], 
           ",", 
           RowBox[{"parsed", "[", 
            RowBox[{"[", 
             RowBox[{"n", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"parsed", "[", 
            RowBox[{"[", 
             RowBox[{"n", ",", "4"}], "]"}], "]"}], ",", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"Riffle", "[", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"StringReplace", "[", 
                 RowBox[{
                  RowBox[{"StringReplace", "[", 
                   RowBox[{
                    RowBox[{"parsed", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "5"}], "]"}], "]"}], ",", 
                    RowBox[{"\"\<[\>\"", "\[Rule]", "\"\<{\>\""}]}], "]"}], 
                  ",", 
                  RowBox[{"\"\<]\>\"", "\[Rule]", "\"\<}\>\""}]}], "]"}], 
                "]"}], ",", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"StringReplace", "[", 
                 RowBox[{
                  RowBox[{"StringReplace", "[", 
                   RowBox[{
                    RowBox[{"parsed", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "6"}], "]"}], "]"}], ",", 
                    RowBox[{"\"\<[\>\"", "\[Rule]", "\"\<{\>\""}]}], "]"}], 
                  ",", 
                  RowBox[{"\"\<]\>\"", "\[Rule]", "\"\<}\>\""}]}], "]"}], 
                "]"}]}], "]"}], ",", "2"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", 
           RowBox[{"Length", "[", "parsed", "]"}]}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceBrackets", "[", "stringList_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"test1", ",", "stringReplaced"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"stringReplaced", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringQ", "[", "stringList", "]"}], "\[Equal]", "True"}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"StringContainsQ", "[", 
             RowBox[{"stringList", ",", "\"\<[\>\""}], "]"}], "\[Equal]", 
            "True"}], "||", 
           RowBox[{
            RowBox[{"StringContainsQ", "[", 
             RowBox[{"stringList", ",", "\"\<(\>\""}], "]"}], "\[Equal]", 
            "True"}]}], ")"}]}], ",", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"stringList", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<[\>\"", "\[Rule]", "\"\<{\>\""}], ",", 
             RowBox[{"\"\<(\>\"", "\[Rule]", "\"\<{\>\""}], ",", 
             RowBox[{"\"\<]\>\"", "\[Rule]", "\"\<}\>\""}], ",", 
             RowBox[{"\"\<)\>\"", "\[Rule]", "\"\<}\>\""}]}], "}"}]}], "]"}], 
         "]"}], ",", "stringList"}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceBracketsBack", "[", "in_", "]"}], ":=", 
   RowBox[{"Return", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ListQ", "[", "in", "]"}], "\[Equal]", "True"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"DecimalForm", "[", "in", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<{\>\"", "\[Rule]", "\"\<[\>\""}], ",", 
          RowBox[{"\"\<}\>\"", "\[Rule]", "\"\<]\>\""}]}], "}"}]}], "]"}], 
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "in"}], "]"}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeProgressCurvePlot", "[", 
    RowBox[{
    "timeData_", ",", "progressCurve_", ",", "rate_", ",", "intercept_", ",", 
     "pointsUsed_", ",", "substrateConc_", ",", "expFit_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "data", ",", "noPointsFit", ",", "xmin", ",", "ymin", ",", "padding", 
       ",", "xscale", ",", "yscale", ",", "firstPointY", ",", "expFitModel"}],
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Riffle", "[", 
           RowBox[{"timeData", ",", "progressCurve"}], "]"}], ",", "2"}], 
         "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "[", "progressCurve", "]"}], "||", 
        RowBox[{"MissingQ", "[", "expFit", "]"}], "||", 
        RowBox[{"MissingQ", "[", "rate", "]"}], "||", 
        RowBox[{"MissingQ", "[", "intercept", "]"}], "||", 
        RowBox[{"MissingQ", "[", "pointsUsed", "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"expFitModel", "=", 
         RowBox[{"expFit", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"timeData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{"progressCurve", "[", 
                RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", "timeData", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"noPointsFit", "=", 
         RowBox[{"Length", "[", "pointsUsed", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "set", " ", "plotting", " ", "and", " ", "padding", " ", "values"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"xmin", "=", 
         RowBox[{
          RowBox[{"Last", "[", "data", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ymin", "=", 
         RowBox[{
          RowBox[{"Last", "[", "data", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"padding", "=", "50"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"xscale", "=", "1.1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"yscale", "=", "1.4"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"firstPointY", "=", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", "0.5"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Overlay", "[", 
         RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{"data", ",", 
             RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "200"}], ",", 
                  RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"firstPointY", ",", 
                  RowBox[{"ymin", "+", "2.0"}]}], "}"}]}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", 
                RowBox[{"PointSize", "[", "0.015", "]"}]}], "]"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"False", ",", "True", ",", "True", ",", "False"}], 
               "}"}]}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Black", ",", "Black", ",", "Black", ",", "Black"}], 
               "}"}]}], ",", 
             RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
             RowBox[{"Axes", "\[Rule]", "False"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Time (s)\>\"", ",", "\"\<Product (uM)\>\"", ",", 
                "\"\<Time (s)\>\"", ",", "\"\<Product (uM)\>\""}], "}"}]}], 
             ",", 
             RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
             RowBox[{"GridLines", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"{", "substrateConc", "}"}]}], "}"}]}], ",", 
             RowBox[{"GridLinesStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Darker", "[", "Red", "]"}], ",", "Dashed"}], "]"}]}],
              ",", 
             RowBox[{"Epilog", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Inset", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<[S]=\>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", "substrateConc", "]"}], "]"}], ",", 
                    "\"\<uM\>\""}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"xmin", "/", "1.25"}], ",", 
                   RowBox[{"ymin", "*", 
                    RowBox[{"yscale", "/", "4"}]}]}], "}"}]}], "]"}], 
               "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"rate", "*", "time"}], "+", "intercept"}], ",", 
             RowBox[{"{", 
              RowBox[{"time", ",", 
               RowBox[{"-", "200"}], ",", 
               RowBox[{
                RowBox[{"data", "[", 
                 RowBox[{"[", 
                  RowBox[{"noPointsFit", ",", "1"}], "]"}], "]"}], "+", 
                "150."}]}], "}"}], ",", 
             RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
             RowBox[{"Axes", "\[Rule]", "False"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "200"}], ",", 
                  RowBox[{
                   RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"noPointsFit", ",", "1"}], "]"}], "]"}], "+", 
                   "150."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"firstPointY", ",", 
                  RowBox[{"ymin", "+", "2.0"}]}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Dashed", ",", 
                RowBox[{"Darker", "[", 
                 RowBox[{"Hue", "[", 
                  RowBox[{"1", "*", "0.1"}], "]"}], "]"}]}], "]"}]}]}], "]"}],
            ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"rate", "*", "time"}], "+", "intercept"}], ",", 
             RowBox[{"{", 
              RowBox[{"time", ",", 
               RowBox[{"-", "200"}], ",", 
               RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
             RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
             RowBox[{"Axes", "\[Rule]", "False"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "200"}], ",", 
                  RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"firstPointY", ",", 
                  RowBox[{"ymin", "+", "2.0"}]}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Dashed", ",", 
                RowBox[{"GrayLevel", "[", "0.4", "]"}]}], "]"}]}]}], "]"}], 
           ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "expFitModel", "]"}], "\[Equal]", "4"}], 
             ",", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"expFitModel", "[", "time", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"time", ",", 
                 RowBox[{"-", "200"}], ",", 
                 RowBox[{"xmin", "+", "2.0"}]}], "}"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
               RowBox[{"Frame", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
                 "}"}]}], ",", 
               RowBox[{"Axes", "\[Rule]", "False"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "200"}], ",", 
                    RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"firstPointY", ",", 
                    RowBox[{"ymin", "+", "2.0"}]}], "}"}]}], "}"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Dashed", ",", 
                  RowBox[{"Darker", "[", 
                   RowBox[{"Hue", "[", 
                    RowBox[{"1", "*", "0.1"}], "]"}], "]"}]}], "]"}]}]}], 
              "]"}], ",", "\"\<\>\""}], "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "noPointsFit"}], "]"}], "]"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "200"}], ",", 
                  RowBox[{
                   RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"noPointsFit", ",", "1"}], "]"}], "]"}], "+", 
                   "150."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"firstPointY", ",", 
                  RowBox[{"ymin", "+", "2.0"}]}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"True", ",", "False", ",", "False", ",", "True"}], 
               "}"}]}], ",", 
             RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Darker", "[", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", "+", "1"}], "]"}], "]"}], "]"}], ",", "Black",
                 ",", "Black", ",", 
                RowBox[{"Darker", "[", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", "+", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
             ",", 
             RowBox[{"Axes", "\[Rule]", "True"}], ",", 
             RowBox[{"AxesOrigin", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], ",", 
             RowBox[{"AxesStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Darker", "[", 
                RowBox[{
                 RowBox[{"ColorData", "[", 
                  RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", "+", "1"}], "]"}], "]"}], "]"}], "]"}]}], ",", 
             
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Darker", "[", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", "+", "1"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
                RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Time (s)\>\"", ",", "\"\<RFU\>\"", ",", 
                "\"\<Time (s)\>\"", ",", "\"\<RFU\>\""}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
             RowBox[{"GridLines", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"{", "65535.", "}"}]}], "}"}]}], ",", 
             RowBox[{"GridLinesStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"GrayLevel", "[", "0.5", "]"}], ",", "Dashed"}], 
               "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeProgressCurvePlotPBP", "[", 
    RowBox[{
    "timeData_", ",", "turnoverData_", ",", "rate_", ",", "intercept_", ",", 
     "pointsUsed_", ",", "substrateConc_", ",", "PBPconc_", ",", "coplotExp_",
      ",", "expFitModel_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "data", ",", "noPointsFit", ",", "xmin", ",", "ymin", ",", "padding", 
       ",", "xscale", ",", "yscale", ",", "kobstest"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Riffle", "[", 
          RowBox[{"timeData", ",", "turnoverData"}], "]"}], ",", "2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"noPointsFit", "=", 
       RowBox[{"Length", "[", "pointsUsed", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "set", " ", "plotting", " ", "and", " ", "padding", " ", "values"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"xmin", "=", 
       RowBox[{
        RowBox[{"Last", "[", "data", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"ymin", "=", 
         RowBox[{
          RowBox[{"Last", "[", "data", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ymin", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", 
            RowBox[{"Sort", "[", 
             RowBox[{"data", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ">", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "60.0"}], ",", 
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{"Sort", "[", 
            RowBox[{"data", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ">", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], "[", 
          
          RowBox[{"[", "2", "]"}], "]"}], ",", "60.0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"padding", "=", "50"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xscale", "=", "1.1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yscale", "=", "1.4"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"kobstest", "=", 
         RowBox[{"kobs", "/.", 
          RowBox[{"expFitModel", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "kobstest", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"noPointsFit", "\[GreaterEqual]", "1"}], ",", 
        RowBox[{"Overlay", "[", 
         RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{"data", ",", 
             RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "200"}], ",", 
                  RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"ymin", "*", "yscale"}]}], "}"}]}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", 
                RowBox[{"PointSize", "[", "0.015", "]"}]}], "]"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"False", ",", "True", ",", "True", ",", "False"}], 
               "}"}]}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Black", ",", "Black", ",", "Black", ",", "Black"}], 
               "}"}]}], ",", 
             RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
             RowBox[{"Axes", "\[Rule]", "False"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Time (s)\>\"", ",", "\"\<[Pi]\>\"", ",", 
                "\"\<Time (s)\>\"", ",", "\"\<[Pi]\>\""}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
             RowBox[{"GridLines", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"{", 
                 RowBox[{"substrateConc", ",", "PBPconc"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"GridLinesStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Darker", "[", "Red", "]"}], ",", "Dashed"}], "]"}]}],
              ",", 
             RowBox[{"Epilog", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Inset", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<[S]=\>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", "substrateConc", "]"}], "]"}], ",", 
                    "\"\<uM\>\""}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"xmin", "/", "1.25"}], ",", 
                   RowBox[{"ymin", "*", 
                    RowBox[{"yscale", "/", "4"}]}]}], "}"}]}], "]"}], 
               "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"rate", "*", "time"}], "+", "intercept"}], ",", 
             RowBox[{"{", 
              RowBox[{"time", ",", 
               RowBox[{"-", "200"}], ",", 
               RowBox[{
                RowBox[{"data", "[", 
                 RowBox[{"[", 
                  RowBox[{"noPointsFit", ",", "1"}], "]"}], "]"}], "+", 
                "150."}]}], "}"}], ",", 
             RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
             RowBox[{"Axes", "\[Rule]", "False"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "200"}], ",", 
                  RowBox[{
                   RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"noPointsFit", ",", "1"}], "]"}], "]"}], "+", 
                   "150."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"ymin", "*", "yscale"}]}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Dashed", ",", 
                RowBox[{"Darker", "[", 
                 RowBox[{"Hue", "[", 
                  RowBox[{"1", "*", "0.1"}], "]"}], "]"}]}], "]"}]}]}], "]"}],
            ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"rate", "*", "time"}], "+", "intercept"}], ",", 
             RowBox[{"{", 
              RowBox[{"time", ",", 
               RowBox[{"-", "200"}], ",", 
               RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
             RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
             RowBox[{"Axes", "\[Rule]", "False"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "200"}], ",", 
                  RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"ymin", "*", "yscale"}]}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Dashed", ",", 
                RowBox[{"GrayLevel", "[", "0.4", "]"}]}], "]"}]}]}], "]"}], 
           ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "expFitModel", "]"}], "\[Equal]", "4"}], 
             ",", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"expFitModel", "[", "time", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"time", ",", 
                 RowBox[{"-", "200"}], ",", 
                 RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
               RowBox[{"Frame", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
                 "}"}]}], ",", 
               RowBox[{"Axes", "\[Rule]", "False"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "200"}], ",", 
                    RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"ymin", "*", "yscale"}]}], "}"}]}], "}"}]}], ",", 
               
               RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Dashed", ",", 
                  RowBox[{"Darker", "[", 
                   RowBox[{"Hue", "[", 
                    RowBox[{"1", "*", "0.1"}], "]"}], "]"}]}], "]"}]}]}], 
              "]"}], ",", "\"\<\>\""}], "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "noPointsFit"}], "]"}], "]"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "200"}], ",", 
                  RowBox[{
                   RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"noPointsFit", ",", "1"}], "]"}], "]"}], "+", 
                   "150."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"ymin", "*", "yscale"}]}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"True", ",", "False", ",", "False", ",", "True"}], 
               "}"}]}], ",", 
             RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Darker", "[", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", "+", "1"}], "]"}], "]"}], "]"}], ",", "Black",
                 ",", "Black", ",", 
                RowBox[{"Darker", "[", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", "+", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
             ",", 
             RowBox[{"Axes", "\[Rule]", "True"}], ",", 
             RowBox[{"AxesOrigin", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], ",", 
             RowBox[{"AxesStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Darker", "[", 
                RowBox[{
                 RowBox[{"ColorData", "[", 
                  RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", "+", "1"}], "]"}], "]"}], "]"}], "]"}]}], ",", 
             
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Darker", "[", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", "+", "1"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
                RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Time (s)\>\"", ",", "\"\<[Pi]\>\"", ",", 
                "\"\<Time (s)\>\"", ",", "\"\<[Pi]\>\""}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
             RowBox[{"GridLines", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"{", "65535.", "}"}]}], "}"}]}], ",", 
             RowBox[{"GridLinesStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"GrayLevel", "[", "0.5", "]"}], ",", "Dashed"}], 
               "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isotherm", "[", 
    RowBox[{"kd_", ",", "ptot_", ",", "scale_", ",", "offset_", ",", "x_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.5", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"kd", "+", "x", "+", "ptot"}], ")"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"kd", "+", "x", "+", "ptot"}], ")"}], "^", "2"}], "-", 
            RowBox[{"(", 
             RowBox[{"4", "*", "x", "*", "ptot"}], ")"}]}], ")"}], "^", 
          "0.5"}]}], ")"}]}], ")"}], "*", "scale"}], "+", "offset"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inverseIsotherm", "[", 
    RowBox[{
    "kd_", ",", "ptot_", ",", "scale_", ",", "offset_", ",", "intensity_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1.`", " ", 
         SuperscriptBox["intensity", "2"]}], "-", 
        RowBox[{"2.`", " ", "intensity", " ", "offset"}], "+", 
        RowBox[{"1.`", " ", 
         SuperscriptBox["offset", "2"]}], "-", 
        RowBox[{"1.`", " ", "intensity", " ", "kd", " ", "scale"}], "+", 
        RowBox[{"1.`", " ", "kd", " ", "offset", " ", "scale"}], "-", 
        RowBox[{"1.`", " ", "intensity", " ", "ptot", " ", "scale"}], "+", 
        RowBox[{"1.`", " ", "offset", " ", "ptot", " ", "scale"}]}], ")"}]}], 
     ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"scale", " ", 
      RowBox[{"(", 
       RowBox[{"intensity", "-", 
        RowBox[{"1.`", " ", "offset"}], "-", 
        RowBox[{"1.`", " ", "ptot", " ", "scale"}]}], ")"}]}], ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"regenerateProgressCurve", "[", 
    RowBox[{
    "timeData_", ",", "medianIntensityData_", ",", "standardCurveParams_", 
     ",", "sensorConc_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "data", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Riffle", "[", 
          RowBox[{"timeData", ",", "medianIntensityData"}], "]"}], ",", "2"}],
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"inverseIsotherm", "[", 
           RowBox[{
            RowBox[{
            "standardCurveParams", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "standardCurveParams", "\[LeftDoubleBracket]", "2", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "standardCurveParams", "\[LeftDoubleBracket]", "3", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "standardCurveParams", "\[LeftDoubleBracket]", "4", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makePBPcurvePlot", "[", 
    RowBox[{"standardCurveParams_", ",", "standardCurveData_"}], "]"}], ":=", 
   
   RowBox[{"Show", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"standardCurveData", ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<[\!\(\*SubscriptBox[\(P\), \(i\)]\)] (uM)\>\"", ",", 
          "\"\<PBP Intensity\>\""}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"50", ",", "50"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Darker", "[", "Cyan", "]"}], ",", 
          RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"isotherm", "[", 
        RowBox[{
         RowBox[{"standardCurveParams", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"standardCurveParams", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"standardCurveParams", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"standardCurveParams", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", "Pi"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Pi", ",", "0", ",", "160"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "All"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Darker", "[", "Cyan", "]"}], "]"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Black"}]}], "]"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"convertTouM", "[", 
    RowBox[{"intensities_", ",", "slope_", ",", "intercept_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "[", "slope", "]"}], "||", 
        RowBox[{"MissingQ", "[", "intercept", "]"}], "||", 
        RowBox[{"MissingQ", "[", "intensities", "]"}]}], ",", 
       RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"intensities", "-", "intercept"}], ")"}], "/", "slope"}], 
        "]"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"linearFitWalkingProgressCurve", "[", 
    RowBox[{"timeData_", ",", "progressCurve_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "linFits"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"n", ".", "b", ".", " ", "had"}], " ", "to", " ", "add", " ", 
        "Select", " ", "because", " ", "1", " ", "point", " ", "is", " ", 
        "expressed", " ", "in", " ", "scientific", " ", "notation", " ", "in",
         " ", "input", " ", "csv"}], ",", " ", 
       RowBox[{"and", " ", 
        RowBox[{"doesn", "'"}], "t", " ", "parse", " ", "properly"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Riffle", "[", 
            RowBox[{"timeData", ",", "progressCurve"}], "]"}], ",", "2"}], 
          "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[Equal]", "Real"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"linFits", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"LinearModelFit", "[", 
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "n"}], "]"}], "]"}], ",", "x", ",", "x"}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "2", ",", 
           RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"linFits", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"linFits", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "2", ",", "1", ",", "2", ",", "2"}], "]"}], 
           "]"}], ",", 
          RowBox[{"linFits", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "2", ",", "1", ",", "2", ",", "1"}], "]"}], 
           "]"}], ",", 
          RowBox[{"linFits", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "linFits", "]"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"optimizeLinFit", "[", 
    RowBox[{
    "timeData_", ",", "progressCurve_", ",", "substrateConc_", ",", 
     "stdCurveSlope_", ",", "stdCurveIntercept_", ",", "cutoff_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "data", ",", "cutoffNew", ",", "dataForFit", ",", "sensorSat", ",", 
       "dataForFitTemp", ",", "fit"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "fit", " ", "all", " ", "points", " ", "under", " ", "30", "%", " ", 
        "of", " ", "total", " ", "expected", " ", "turnover"}], ",", " ", 
       RowBox[{
        RowBox[{"unless", " ", "this", " ", "leaves"}], " ", "<", " ", 
        RowBox[{
         RowBox[{
         "2", " ", "points", " ", "in", " ", "which", " ", "default", " ", 
          "to", " ", "a", " ", "2"}], "-", 
         RowBox[{"point", " ", "fit"}]}]}]}], " ", "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "[", "stdCurveSlope", "]"}], "||", 
        RowBox[{"MissingQ", "[", "stdCurveIntercept", "]"}], "||", 
        RowBox[{"MissingQ", "[", "progressCurve", "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"timeData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{"progressCurve", "[", 
                RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", "timeData", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"sensorSat", "=", 
         RowBox[{"65536.0", "*", "0.9"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"cutoffNew", "=", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"substrateConc", "*", "stdCurveSlope"}], "+", 
              "stdCurveIntercept"}], ")"}], "<", "sensorSat"}], ",", 
           RowBox[{"cutoff", "*", "substrateConc"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"substrateConc", "*", "stdCurveSlope"}], "+", 
               "stdCurveIntercept"}], ")"}], "\[GreaterEqual]", "sensorSat"}],
             "&&", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"substrateConc", "*", "cutoff", "*", "stdCurveSlope"}],
                "+", "stdCurveIntercept"}], ")"}], "<", "sensorSat"}]}], ",", 
           
           RowBox[{"cutoff", "*", "substrateConc"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"substrateConc", "*", "stdCurveSlope"}], "+", 
               "stdCurveIntercept"}], ")"}], "\[GreaterEqual]", "sensorSat"}],
             "&&", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"substrateConc", "*", "cutoff", "*", "stdCurveSlope"}],
                "+", "stdCurveIntercept"}], ")"}], "\[GreaterEqual]", 
             "sensorSat"}]}], ",", 
           RowBox[{"(", 
            FractionBox[
             RowBox[{"sensorSat", "-", "stdCurveIntercept"}], 
             "stdCurveSlope"], ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"dataForFitTemp", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"data", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "<", "cutoffNew"}], "&"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"dataForFit", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "dataForFitTemp", "]"}], "<", "2"}], ",", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", "dataForFitTemp"}], 
          "]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitOptimized", "[", "dataIN_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "linFit", ",", "params"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "works", " ", "for", " ", "both", " ", "cMUP", " ", "and", " ", "MeP", 
       " ", "assays"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MissingQ", "[", 
        RowBox[{"Normal", "[", "dataIN", "]"}], "]"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<OptLinFitSlope\>\"", "\[Rule]", 
           RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], ",", 
          RowBox[{"\"\<OptLinFitIntercept\>\"", "->", 
           RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], ",", 
          RowBox[{"\"\<OptLinFitModel\>\"", "->", 
           RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], ",", 
          RowBox[{"\"\<OptLinFitR2\>\"", "->", 
           RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Normal", "[", "dataIN", "]"}]}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"linFit", "=", 
         RowBox[{
          RowBox[{"LinearModelFit", "[", 
           RowBox[{"data", ",", "x", ",", "x"}], "]"}], "//", "Quiet"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"params", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "data", "]"}], "<", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
             RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
             RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
             RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"linFit", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"linFit", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2", ",", "1"}], "]"}], "]"}], ",", "linFit",
              ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "data", "]"}], ">", "2"}], ",", 
               RowBox[{"linFit", "[", "\"\<RSquared\>\"", "]"}], ",", "1.0"}],
               "]"}], ",", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<OptLinFitSlope\>\"", "\[Rule]", 
           RowBox[{"params", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"\"\<OptLinFitSlopeMinusTrueBackground\>\"", "\[Rule]", 
           RowBox[{
            RowBox[{"params", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "trueBackgroundRate"}]}], 
          ",", 
          RowBox[{"\"\<OptLinFitIntercept\>\"", "->", 
           RowBox[{"params", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"\"\<OptLinFitModel\>\"", "->", 
           RowBox[{"params", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{"\"\<OptLinFitR2\>\"", "->", 
           RowBox[{"params", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"optimizeLinFitPBP", "[", 
    RowBox[{
    "timeData_", ",", "progressCurve_", ",", "substrateConc_", ",", 
     "sensorConc_", ",", "cutoff_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "data", ",", "cutoffNew", ",", "dataForFitTemp", ",", "dataForFit"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Riffle", "[", 
          RowBox[{"timeData", ",", "progressCurve"}], "]"}], ",", "2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"for", " ", "the", " ", "PBP", " ", "coupled", " ", "assay"}],
         ",", " ", 
        RowBox[{
         RowBox[{
         "the", " ", "fitting", " ", "strategy", " ", "will", " ", "depend", 
          " ", "on", " ", "the", " ", "relative", " ", "concentrations", " ", 
          "of", " ", "substrate", " ", "and", " ", "PBP"}], " ", "\[Rule]", 
         " ", 
         RowBox[{
          RowBox[{"if", " ", "[", "S", "]"}], "<", 
          RowBox[{
           RowBox[{"[", "PBP", "]"}], " ", "use", " ", "cutoff", "*", 
           RowBox[{"[", "S", "]"}], " ", "as", " ", "cutoff"}]}]}], ",", " ", 
        
        RowBox[{"else", " ", "use", " ", "cutoff", "*", 
         RowBox[{"[", "PBP", "]"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"cutoffNew", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"substrateConc", "<", "sensorConc"}], ",", 
         RowBox[{"cutoff", "*", "substrateConc"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"cutoff", "*", "substrateConc"}], ")"}], ">", 
          RowBox[{"sensorConc", "*", 
           RowBox[{"2", "/", "3"}]}]}], ",", 
         RowBox[{"sensorConc", "*", 
          RowBox[{"2", "/", "3"}]}], ",", 
         RowBox[{
          RowBox[{"substrateConc", ">", "sensorConc"}], "&&", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"cutoff", "*", "substrateConc"}], ")"}], "<", 
           RowBox[{"sensorConc", "*", 
            RowBox[{"2", "/", "3"}]}]}]}], ",", 
         RowBox[{"cutoff", "*", "substrateConc"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dataForFitTemp", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"data", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", "cutoffNew"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dataForFit", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "dataForFitTemp", "]"}], "<", "2"}], ",", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", "dataForFitTemp"}], 
        "]"}]}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitOptimizedLinFitPointsPBP", "[", "dataIN_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"linFit", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"Normal", "[", "dataIN", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"linFit", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "data", "]"}], "\[GreaterEqual]", "2"}], ",", 
         RowBox[{"LinearModelFit", "[", 
          RowBox[{"data", ",", "x", ",", "x"}], "]"}], ",", "\"\<NaN\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "data", "]"}], "<", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<NaN\>\"", ",", "\"\<NaN\>\"", ",", "\"\<NaN\>\"", ",", 
          "\"\<NaN\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"linFit", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"linFit", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "data", "]"}], ">", "2"}], ",", 
            RowBox[{"linFit", "[", "\"\<RSquared\>\"", "]"}], ",", "1.0"}], 
           "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"exponentialFit", "[", 
    RowBox[{
    "timeData_", ",", "progressCurve_", ",", "substrateConc_", ",", 
     "stdCurveSlope_", ",", "stdCurveIntercept_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "forFit", ",", "expFit", ",", "kobsout", ",", "bout", ",", "cout", ",", 
       "forFitOnlyGoodPoints", ",", "out", ",", "data"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "[", "stdCurveSlope", "]"}], "||", 
        RowBox[{"MissingQ", "[", "stdCurveIntercept", "]"}], "||", 
        RowBox[{"MissingQ", "[", "progressCurve", "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"timeData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{"progressCurve", "[", 
                RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", "timeData", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"forFit", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"data", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[Equal]", "Real"}], 
            "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"out", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"stdCurveSlope", "*", "substrateConc"}], "+", 
              "stdCurveIntercept"}], ")"}], "\[LessEqual]", 
            RowBox[{"65536.0", "*", "0.9"}]}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"expFit", "=", 
              RowBox[{"NonlinearModelFit", "[", 
               RowBox[{"forFit", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "kobs"}], "*", "t"}], "]"}]}], ")"}], "*", 
                    "b"}], "+", "c"}], ",", 
                  RowBox[{
                   RowBox[{"b", ">", "0"}], "&&", 
                   RowBox[{"kobs", "<", "0.02"}], "&&", 
                   RowBox[{"b", "<", 
                    RowBox[{"substrateConc", "*", "1.25"}]}], "&&", 
                   RowBox[{"c", ">", 
                    RowBox[{"-", "4"}]}], "&&", 
                   RowBox[{"c", "<", "5"}], "&&", 
                   RowBox[{"kobs", ">", "0"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"kobs", ",", "0.00005"}], "}"}], ",", "b", ",", 
                  RowBox[{"{", 
                   RowBox[{"c", ",", "1.5"}], "}"}]}], "}"}], ",", "t", ",", 
                RowBox[{"MaxIterations", "\[Rule]", "50"}]}], "]"}]}], ";"}], 
            "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"expFit", "=", 
             RowBox[{"NonlinearModelFit", "[", 
              RowBox[{"forFit", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "kobs"}], "*", "t"}], "]"}]}], ")"}], "*", 
                   "b"}], "+", "c"}], ",", 
                 RowBox[{
                  RowBox[{"b", ">", "0"}], "&&", 
                  RowBox[{"kobs", "<", "0.2"}], "&&", 
                  RowBox[{"b", "<", 
                   RowBox[{"substrateConc", "*", "1.25"}]}], "&&", 
                  RowBox[{"c", ">", 
                   RowBox[{"-", "4"}]}], "&&", 
                  RowBox[{"c", "<", "5"}], "&&", 
                  RowBox[{"kobs", ">", "0"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"kobs", ",", "0.00005"}], "}"}], ",", "b", ",", 
                 RowBox[{"{", 
                  RowBox[{"c", ",", "1.5"}], "}"}]}], "}"}], ",", "t", ",", 
               RowBox[{"MaxIterations", "\[Rule]", "50"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"kobsout", "=", 
             RowBox[{"kobs", "/.", 
              RowBox[{"expFit", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"bout", "=", 
             RowBox[{"b", "/.", 
              RowBox[{"expFit", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"cout", "=", 
             RowBox[{"c", "/.", 
              RowBox[{"expFit", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"kobsout", ",", "bout", ",", "cout", ",", 
              RowBox[{"expFit", "[", "\"\<RSquared\>\"", "]"}], ",", 
              "expFit"}], "}"}]}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"forFitOnlyGoodPoints", "=", 
             RowBox[{"Select", "[", 
              RowBox[{"forFit", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "<", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"65536.0", "-", "stdCurveIntercept"}], ")"}], "/",
                     "stdCurveSlope"}], ")"}], "*", "0.9"}]}], "&"}]}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"expFit", "=", 
             RowBox[{"NonlinearModelFit", "[", 
              RowBox[{"forFitOnlyGoodPoints", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "kobs"}], "*", "t"}], "]"}]}], ")"}], "*", 
                   "substrateConc"}], "+", "c"}], ",", 
                 RowBox[{
                  RowBox[{"kobs", "<", "0.2"}], "&&", 
                  RowBox[{"c", ">", 
                   RowBox[{"-", "2"}]}], "&&", 
                  RowBox[{"c", "<", "5"}], "&&", 
                  RowBox[{"kobs", ">", "0"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"kobs", ",", "0.00005"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"c", ",", "1.5"}], "}"}]}], "}"}], ",", "t"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"kobsout", "=", 
             RowBox[{"kobs", "/.", 
              RowBox[{"expFit", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"bout", "=", "substrateConc"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"cout", "=", 
             RowBox[{"c", "/.", 
              RowBox[{"expFit", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"expFit", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "3"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"kobsout", ",", "bout", ",", "cout", ",", 
                RowBox[{"expFit", "[", "\"\<RSquared\>\"", "]"}], ",", 
                "expFit"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
                RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
                RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
                RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
                RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], 
               "}"}]}], "]"}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"exponentialFitPBP", "[", 
    RowBox[{
    "timeData_", ",", "progressCurve_", ",", "substrateConc_", ",", 
     "PBPconc_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "forFit", ",", "expFit", ",", "kobsout", ",", "bout", ",", "cout", ",", 
       "forFitOnlyGoodPoints", ",", "out"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"forFit", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Riffle", "[", 
            RowBox[{"timeData", ",", "progressCurve"}], "]"}], ",", "2"}], 
          "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"NumberQ", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[Equal]", "True"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"out", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"substrateConc", "\[LessEqual]", "PBPconc"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"expFit", "=", 
           RowBox[{"NonlinearModelFit", "[", 
            RowBox[{"forFit", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "kobs"}], "*", "t"}], "]"}]}], ")"}], "*", 
                 "b"}], "+", "c"}], ",", 
               RowBox[{
                RowBox[{"b", ">", 
                 RowBox[{"substrateConc", "*", "0.8"}]}], "&&", 
                RowBox[{"b", "<", 
                 RowBox[{"substrateConc", "*", "1.2"}]}], "&&", 
                RowBox[{"kobs", "<", "0.02"}], "&&", 
                RowBox[{"c", ">", 
                 RowBox[{"-", "4"}]}], "&&", 
                RowBox[{"c", "<", "3"}], "&&", 
                RowBox[{"kobs", ">", "0"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"kobs", ",", "b", ",", "c"}], "}"}], ",", "t"}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"kobsout", "=", 
           RowBox[{"kobs", "/.", 
            RowBox[{"expFit", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"bout", "=", 
           RowBox[{"b", "/.", 
            RowBox[{"expFit", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"cout", "=", 
           RowBox[{"c", "/.", 
            RowBox[{"expFit", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"kobsout", ",", "bout", ",", "cout", ",", 
            RowBox[{"expFit", "[", "\"\<RSquared\>\"", "]"}], ",", "expFit"}],
            "}"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"forFitOnlyGoodPoints", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"forFit", ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "<", 
                RowBox[{"PBPconc", "*", "0.85"}]}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ">", "0"}]}], "&"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"expFit", "=", 
           RowBox[{"NonlinearModelFit", "[", 
            RowBox[{"forFitOnlyGoodPoints", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "kobs"}], "*", "t"}], "]"}]}], ")"}], "*", 
                 "substrateConc"}], "+", "c"}], ",", 
               RowBox[{
                RowBox[{"kobs", "<", "0.02"}], "&&", 
                RowBox[{"c", ">", 
                 RowBox[{"-", "4"}]}], "&&", 
                RowBox[{"c", "<", "3"}], "&&", 
                RowBox[{"kobs", ">", "0"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"kobs", ",", "c"}], "}"}], ",", "t"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"kobsout", "=", 
           RowBox[{"kobs", "/.", 
            RowBox[{"expFit", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"bout", "=", "substrateConc"}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"cout", "=", 
           RowBox[{"c", "/.", 
            RowBox[{"expFit", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"expFit", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "3"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"kobsout", ",", "bout", ",", "cout", ",", 
              RowBox[{"expFit", "[", "\"\<RSquared\>\"", "]"}], ",", 
              "expFit"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<NaN\>\"", ",", "\"\<NaN\>\"", ",", "\"\<NaN\>\"", ",", 
              "\"\<NaN\>\"", ",", "\"\<NaN\>\""}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "out"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitStdCurveNew", "[", 
    RowBox[{"concentrations_", ",", "intensities_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fit", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MissingQ", "[", "intensities", "]"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"concentrations", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", 
             RowBox[{"intensities", "[", 
              RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", 
             RowBox[{"Length", "[", "concentrations", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"fit", "=", 
         RowBox[{"LinearModelFit", "[", 
          RowBox[{
           RowBox[{"Normal", "[", "data", "]"}], ",", "x", ",", "x"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "fit"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pCMU", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EdgeForm", "[", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "0.125", "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"FaceForm", "[", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Darker", "[", "Cyan", "]"}], ",", 
          RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], ",", 
       RowBox[{"Disk", "[", "]"}], ",", 
       RowBox[{"Opacity", "[", "0.1", "]"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeStdCurvePlotNew", "[", 
    RowBox[{
    "slope_", ",", "intercept_", ",", "concentrations_", ",", 
     "intensities_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "[", "slope", "]"}], "||", 
        RowBox[{"MissingQ", "[", "intercept", "]"}], "||", 
        RowBox[{"MissingQ", "[", "concentrations", "]"}], "||", 
        RowBox[{"MissingQ", "[", "intensities", "]"}]}], ",", 
       RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"concentrations", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", 
             RowBox[{"intensities", "[", 
              RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", 
             RowBox[{"Length", "[", "concentrations", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{"data", ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"20", ",", "Black", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], 
            ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<[cMU] (\[Mu]M)\>\"", ",", "\"\<cMU Intensity\>\""}], 
              "}"}]}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"90", ",", "10"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"58", ",", "2"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"PlotMarkers", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"pCMU", ",", "0.06"}], "}"}]}], ",", 
            RowBox[{"FrameTicks", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "#", "]"}], ",", "#", ",", 
                    RowBox[{"N", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
                  RowBox[{"FindDivisions", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], 
                    ",", "6"}], "]"}]}], ",", "None"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "#", "]"}], ",", "#", ",", 
                    RowBox[{"N", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
                  RowBox[{"FindDivisions", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
                    ",", "6"}], "]"}]}], ",", "None"}], "}"}]}], "}"}]}]}], 
           "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"slope", "*", "cMU"}], "+", "intercept"}], ",", 
            RowBox[{"{", 
             RowBox[{"cMU", ",", "0", ",", "105"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"Darker", "[", "Cyan", "]"}], ",", "Dashed", ",", 
               RowBox[{"Thickness", "[", "0.0075", "]"}]}], "]"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", "Black"}]}], "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "need", " ", "to", " ", "add", " ", "inhibitor", " ", "concentration", " ",
     "column", " ", "to", " ", "the", " ", "dataset"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitInhibition", "[", 
    RowBox[{"dataset_", ",", "rateKey_", ",", "keyAppend_", ",", 
     RowBox[{"scaleByGFP_", ":", "0"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "removeControl", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"reads", " ", "in", " ", "Dataset"}], ",", " ", 
       RowBox[{
        RowBox[{"fits", " ", "chosen", " ", "rates", " ", 
         RowBox[{"(", 
          RowBox[{"determined", " ", "by", " ", "key"}], ")"}], " ", "to", 
         " ", "linear", " ", "and", " ", "Michaelis"}], "-", 
        RowBox[{"Menten", " ", "models"}]}], ",", " ", 
       RowBox[{
       "returning", " ", "a", " ", "list", " ", "of", " ", "associations"}], 
       ",", " ", 
       RowBox[{
       "and", " ", "merging", " ", "fit", " ", "data", " ", "with", " ", 
        "input", " ", "data", " ", "to", " ", "create", " ", "a", " ", "new", 
        " ", "aggregate", " ", "dataset"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"removeControl", "=", 
       RowBox[{"dataset", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"#AssayType", "\[Equal]", "1"}], "&"}], "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"grouped", "=", 
       RowBox[{"removeControl", "[", 
        RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"onlyControl", "=", 
       RowBox[{"dataset", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"#AssayType", "\[Equal]", "0"}], "&"}], "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"groupedControl", "=", 
       RowBox[{"onlyControl", "[", 
        RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fitdata", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Clear", "[", 
            RowBox[{
            "fits", ",", "data", ",", "data2", ",", "dataNorm", ",", "rates", 
             ",", "inhibitorConcentrations", ",", "eGFPscalingList"}], "]"}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"inhibitorConcentrations", "=", 
            RowBox[{"Normal", "[", 
             RowBox[{"grouped", "[", 
              RowBox[{
              "n", ",", "All", ",", "\"\<InhibitorConcentrations\>\""}], 
              "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"eGFPscalingList", "=", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"scaleByGFP", "\[Equal]", "1"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Normal", "[", 
                 RowBox[{"grouped", "[", 
                  RowBox[{"n", ",", "All", ",", "\"\<eGFPSummedI\>\""}], 
                  "]"}], "]"}], "/", "eGFPslope"}], "/", "1000."}], ",", 
              RowBox[{"scaleByGFP", "\[Equal]", "0"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Normal", "[", 
                   RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "1", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "/", "eGFPslope"}], "/", "1000."}], ",", 
                RowBox[{"{", 
                 RowBox[{"Length", "[", "inhibitorconcentrations", "]"}], 
                 "}"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"rates", "=", 
            RowBox[{"Normal", "[", 
             RowBox[{"grouped", "[", 
              RowBox[{"n", ",", "All", ",", "rateKey"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"data", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"inhibitorConcentrations", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], ",", 
                RowBox[{"rates", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], ",", 
                RowBox[{"eGFPscalingList", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", 
                RowBox[{"Length", "[", "inhibitorConcentrations", "]"}]}], 
               "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"data2a", "=", 
              RowBox[{"Select", "[", 
               RowBox[{"data", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
                   "\"\<NaN\>\""}], "&&", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], "&&", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ">", "0"}]}], "&"}]}], 
               "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"data2a", "=", "data"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"data2b", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"data2a", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"data2a", "[", 
                  RowBox[{"[", 
                   RowBox[{"n", ",", "2"}], "]"}], "]"}], "/", 
                 RowBox[{"data2a", "[", 
                  RowBox[{"[", 
                   RowBox[{"n", ",", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", 
                RowBox[{"Length", "[", "data2a", "]"}]}], "}"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"dataMax", "=", 
            RowBox[{"Max", "[", 
             RowBox[{"data2b", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"data2", "=", "data2b"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"dataNorm", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"data2", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"data2", "[", 
                  RowBox[{"[", 
                   RowBox[{"n", ",", "2"}], "]"}], "]"}], "/", "dataMax"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", 
                RowBox[{"Length", "[", "data2", "]"}]}], "}"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"fits", "=", 
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{"dataNorm", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Vmax", "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"inhibitor", "/", "Ki"}]}], ")"}]}], ",", 
                RowBox[{
                 RowBox[{"Ki", ">", "0.0"}], "&&", 
                 RowBox[{"Vmax", ">", "0.75"}], "&&", 
                 RowBox[{"Vmax", "<", "1.5"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Ki", ",", "Vmax"}], "}"}], ",", "inhibitor"}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Vmaxout", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Vmax", "/.", 
               RowBox[{"fits", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "*", 
             "dataMax"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"KIout", "=", 
            RowBox[{"Ki", "/.", 
             RowBox[{"fits", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "drop", " ", "individual", " ", "points", " ", "and", " ", 
             "refit"}], " ", "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"droppedfits", "=", 
            RowBox[{
            "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"dataNorm", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], ",", 
                RowBox[{"NonlinearModelFit", "[", 
                 RowBox[{
                  RowBox[{"Drop", "[", 
                   RowBox[{"dataNorm", ",", 
                    RowBox[{"{", "n", "}"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Vmax", "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"inhibitor", "/", "Ki"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"Ki", ">", "0.0"}], "&&", 
                    RowBox[{"Vmax", ">", "0.75"}], "&&", 
                    RowBox[{"Vmax", "<", "1.5"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Ki", ",", "Vmax"}], "}"}], ",", "inhibitor"}], 
                 "]"}]}], "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]",
               ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", 
                RowBox[{"Length", "[", "dataNorm", "]"}]}], "}"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"extract", " ", "parameters"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"VmaxDropouts", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Vmax", "/.", 
               RowBox[{"droppedfits", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2", ",", "1", ",", "2"}], "]"}], 
                "]"}]}], ")"}], "*", "dataMax"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"KIDropouts", "=", 
            RowBox[{"Ki", "/.", 
             RowBox[{"droppedfits", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2", ",", "1", ",", "2"}], "]"}], 
              "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"eGFPscaleUnits", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"scaleByGFP", "\[Equal]", "1"}], ",", 
              "\"\<Scaled initial rate (\!\(\*SuperscriptBox[\(s\), \
\(-1\)]\))\>\"", ",", "\"\<Initial rate (uM/s)\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"control", " ", "data"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"controlData", "=", 
            RowBox[{"groupedControl", "[", "n", "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"inhibitorConcentrationsControl", "=", 
            RowBox[{"Normal", "[", 
             RowBox[{"controlData", "[", 
              RowBox[{"All", ",", "\"\<InhibitorConcentrations\>\""}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"eGFPscalingListControl", "=", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"scaleByGFP", "\[Equal]", "1"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Normal", "[", 
                 RowBox[{"controlData", "[", 
                  RowBox[{"All", ",", "\"\<eGFPSummedI\>\""}], "]"}], "]"}], 
                "/", "eGFPslope"}], "/", "1000."}], ",", 
              RowBox[{"scaleByGFP", "\[Equal]", "0"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Mean", "[", 
                   RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "1", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "]"}], "/", "eGFPslope"}], "/", "1000."}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"Length", "[", "inhibitorconcentrations", "]"}], 
                 "}"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"controlPlotTEMP", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"controlData", "[", 
                 RowBox[{"run", ",", "\"\<InhibitorConcentrations\>\""}], 
                 "]"}], ",", 
                RowBox[{"controlData", "[", 
                 RowBox[{"run", ",", "rateKey"}], "]"}], ",", 
                RowBox[{"eGFPscalingListControl", "[", 
                 RowBox[{"[", "run", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"run", ",", "1", ",", 
                RowBox[{"Length", "[", "controlData", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"controlPlot", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"controlPlotTEMP", "[", 
                 RowBox[{"[", 
                  RowBox[{"run", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"controlPlotTEMP", "[", 
                  RowBox[{"[", 
                   RowBox[{"run", ",", "2"}], "]"}], "]"}], "/", 
                 RowBox[{"controlPlotTEMP", "[", 
                  RowBox[{"[", 
                   RowBox[{"run", ",", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"run", ",", "1", ",", 
                RowBox[{"Length", "[", "controlPlotTEMP", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"controlPlotNorm", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"controlPlotTEMP", "[", 
                 RowBox[{"[", 
                  RowBox[{"run", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"controlPlotTEMP", "[", 
                   RowBox[{"[", 
                    RowBox[{"run", ",", "2"}], "]"}], "]"}], "/", 
                  RowBox[{"controlPlotTEMP", "[", 
                   RowBox[{"[", 
                    RowBox[{"run", ",", "3"}], "]"}], "]"}]}], "/", 
                 "Vmaxout"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"run", ",", "1", ",", 
                RowBox[{"Length", "[", "controlPlotTEMP", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"controlPlotReplace0", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"controlPlotTEMP", "[", 
                    RowBox[{"[", 
                    RowBox[{"run", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                   "0.0"}], ",", "0.1", ",", 
                  RowBox[{"controlPlotTEMP", "[", 
                   RowBox[{"[", 
                    RowBox[{"run", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{"controlPlotTEMP", "[", 
                  RowBox[{"[", 
                   RowBox[{"run", ",", "2"}], "]"}], "]"}], "/", 
                 RowBox[{"controlPlotTEMP", "[", 
                  RowBox[{"[", 
                   RowBox[{"run", ",", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"run", ",", "1", ",", 
                RowBox[{"Length", "[", "controlPlotTEMP", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"controlPlotNormReplace0", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"controlPlotTEMP", "[", 
                    RowBox[{"[", 
                    RowBox[{"run", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                   "0.0"}], ",", "0.1", ",", 
                  RowBox[{"controlPlotTEMP", "[", 
                   RowBox[{"[", 
                    RowBox[{"run", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"controlPlotTEMP", "[", 
                   RowBox[{"[", 
                    RowBox[{"run", ",", "2"}], "]"}], "]"}], "/", 
                  RowBox[{"controlPlotTEMP", "[", 
                   RowBox[{"[", 
                    RowBox[{"run", ",", "3"}], "]"}], "]"}]}], "/", 
                 "Vmaxout"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"run", ",", "1", ",", 
                RowBox[{"Length", "[", "controlPlotTEMP", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"controlPlotReplace02", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"controlPlotTEMP", "[", 
                    RowBox[{"[", 
                    RowBox[{"run", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                   "0.0"}], ",", "0.01", ",", 
                  RowBox[{"controlPlotTEMP", "[", 
                   RowBox[{"[", 
                    RowBox[{"run", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{"controlPlotTEMP", "[", 
                  RowBox[{"[", 
                   RowBox[{"run", ",", "2"}], "]"}], "]"}], "/", 
                 RowBox[{"controlPlotTEMP", "[", 
                  RowBox[{"[", 
                   RowBox[{"run", ",", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"run", ",", "1", ",", 
                RowBox[{"Length", "[", "controlPlotTEMP", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"controlPlotNormReplace02", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"controlPlotTEMP", "[", 
                    RowBox[{"[", 
                    RowBox[{"run", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                   "0.0"}], ",", "0.01", ",", 
                  RowBox[{"controlPlotTEMP", "[", 
                   RowBox[{"[", 
                    RowBox[{"run", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"controlPlotTEMP", "[", 
                   RowBox[{"[", 
                    RowBox[{"run", ",", "2"}], "]"}], "]"}], "/", 
                  RowBox[{"controlPlotTEMP", "[", 
                   RowBox[{"[", 
                    RowBox[{"run", ",", "3"}], "]"}], "]"}]}], "/", 
                 "Vmaxout"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"run", ",", "1", ",", 
                RowBox[{"Length", "[", "controlPlotTEMP", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"full", " ", "inhibition", " ", "fit"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"MMfitplot", "=", 
              RowBox[{"Show", "[", 
               RowBox[{
                RowBox[{"LogLinearPlot", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"fits", "[", "x", "]"}], "*", "dataMax"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"x", ",", "0.4", ",", "1250"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "All"}], "}"}]}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
                  RowBox[{"ImagePadding", "\[Rule]", "50"}], ",", 
                  RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                  RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                  RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", 
                  RowBox[{"FrameLabel", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<[I] (uM)\>\"", ",", "\"\<Initial rate (uM/s)\>\""}], 
                    "}"}]}]}], "]"}], ",", 
                RowBox[{"ListLogLinearPlot", "[", 
                 RowBox[{"data2", ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "All"}], "}"}]}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
                  RowBox[{"ImagePadding", "\[Rule]", "50"}], ",", 
                  RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                  RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                  RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", 
                  RowBox[{"GridLines", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", 
                    RowBox[{"{", 
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], "}"}]}], "}"}]}], 
                  ",", 
                  RowBox[{"GridLinesStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"Gray", ",", " ", "Dashed"}], "]"}]}], ",", 
                  RowBox[{"FrameLabel", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"\"\<[I] (uM)\>\"", ",", "eGFPscaleUnits"}], 
                    "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"ListLogLinearPlot", "[", 
                 RowBox[{"controlPlot", ",", 
                  RowBox[{"PlotStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"Black", ",", 
                    RowBox[{"PointSize", "[", "0.03", "]"}]}], "]"}]}]}], 
                 "]"}], ",", 
                RowBox[{"ListLogLinearPlot", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"controlPlot", "[", 
                    RowBox[{"[", "run", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"run", ",", "1", ",", 
                    RowBox[{"Length", "[", "controlPlot", "]"}]}], "}"}]}], 
                   "]"}], ",", 
                  RowBox[{"PlotStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"White", ",", 
                    RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}]}]}], 
                 "]"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"xticks", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"5", ",", "5"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"10", ",", "10"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"50", ",", "50"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"100", ",", "100"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"500", ",", "500"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1000", ",", "1000"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"5000", ",", "5000"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"10000", ",", "10000"}], "}"}]}], "}"}], ",", 
              "None"}], "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"xticks2", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.01", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.1", ",", "0.1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"5", ",", "5"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"10", ",", "10"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"50", ",", "50"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"100", ",", "100"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"500", ",", "500"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1000", ",", "1000"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"5000", ",", "5000"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"10000", ",", "10000"}], "}"}]}], "}"}], ",", 
              "None"}], "}"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"brokenAxisPlot", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{
                RowBox[{"ReplacePart", "[", 
                 RowBox[{"data2", ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "0.1"}]}], 
                 "]"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"PointSize", "[", "0.02", "]"}]}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                RowBox[{"FrameTicks", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
                   "xticks"}], "}"}]}], ",", 
                RowBox[{"GridLines", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0.12", ",", "0.13"}], "}"}], ",", "None"}], 
                  "}"}]}], ",", 
                RowBox[{"GridLinesStyle", "\[Rule]", "Black"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
                RowBox[{"FrameStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Black", ",", "18", ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                  "]"}]}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<[I] (\[Mu]M)\>\"", ",", "eGFPscaleUnits"}], 
                  "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{
                    RowBox[{"Max", "[", "inhibitorConcentrations", "]"}], "*",
                     "1.2"}]}], "}"}], ",", "All"}], "}"}]}]}], "]"}], ",", 
              RowBox[{"LogLinearPlot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"fits", "[", "x", "]"}], "*", "dataMax"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "0.13", ",", "5000"}], "}"}]}], "]"}], ",",
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{"controlPlotReplace0", ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Black", ",", 
                   RowBox[{"PointSize", "[", "0.03", "]"}]}], "]"}]}]}], 
               "]"}], ",", 
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"controlPlotReplace0", "[", 
                   RowBox[{"[", "run", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"run", ",", "1", ",", 
                    RowBox[{"Length", "[", "controlPlotReplace0", "]"}]}], 
                   "}"}]}], "]"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"White", ",", 
                   RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}]}]}], 
               "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}],
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"brokenAxisPlot2", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{
                RowBox[{"ReplacePart", "[", 
                 RowBox[{"data2", ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "0.01"}]}], 
                 "]"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"PointSize", "[", "0.02", "]"}]}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                RowBox[{"FrameTicks", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
                   "xticks2"}], "}"}]}], ",", 
                RowBox[{"GridLines", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0.015", ",", "0.018"}], "}"}], ",", "None"}], 
                  "}"}]}], ",", 
                RowBox[{"GridLinesStyle", "\[Rule]", "Black"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
                RowBox[{"FrameStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Black", ",", "18", ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                  "]"}]}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<[I] (\[Mu]M)\>\"", ",", "eGFPscaleUnits"}], 
                  "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{
                    RowBox[{"Max", "[", "inhibitorConcentrations", "]"}], "*",
                     "1.2"}]}], "}"}], ",", "All"}], "}"}]}]}], "]"}], ",", 
              RowBox[{"LogLinearPlot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"fits", "[", "x", "]"}], "*", "dataMax"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "0.01", ",", "5000"}], "}"}]}], "]"}], ",",
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{"controlPlotReplace02", ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Black", ",", 
                   RowBox[{"PointSize", "[", "0.03", "]"}]}], "]"}]}]}], 
               "]"}], ",", 
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"controlPlotReplace02", "[", 
                   RowBox[{"[", "run", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"run", ",", "1", ",", 
                    RowBox[{"Length", "[", "controlPlotReplace02", "]"}]}], 
                   "}"}]}], "]"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"White", ",", 
                   RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}]}]}], 
               "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}],
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"brokenAxisPlot3", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{
                RowBox[{"ReplacePart", "[", 
                 RowBox[{"data2", ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "0.1"}]}], 
                 "]"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"PointSize", "[", "0.02", "]"}]}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                RowBox[{"FrameTicks", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
                   "xticks2"}], "}"}]}], ",", 
                RowBox[{"GridLines", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0.12", ",", "0.13"}], "}"}], ",", "None"}], 
                  "}"}]}], ",", 
                RowBox[{"GridLinesStyle", "\[Rule]", "Black"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
                RowBox[{"FrameStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Black", ",", "18", ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                  "]"}]}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<[I] (\[Mu]M)\>\"", ",", "eGFPscaleUnits"}], 
                  "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{
                    RowBox[{"Max", "[", "inhibitorConcentrations", "]"}], "*",
                     "1.2"}]}], "}"}], ",", "All"}], "}"}]}]}], "]"}], ",", 
              RowBox[{"LogLinearPlot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"fits", "[", "x", "]"}], "*", "dataMax"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "0.13", ",", "5000"}], "}"}]}], "]"}], ",", 
              RowBox[{"LogLinearPlot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"fits", "[", "0.00001", "]"}], "*", "dataMax"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "0.01", ",", "0.118"}], "}"}]}], "]"}], 
              ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{"controlPlotReplace0", ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Black", ",", 
                   RowBox[{"PointSize", "[", "0.03", "]"}]}], "]"}]}]}], 
               "]"}], ",", 
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"controlPlotReplace0", "[", 
                   RowBox[{"[", "run", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"run", ",", "1", ",", 
                    RowBox[{"Length", "[", "controlPlotReplace0", "]"}]}], 
                   "}"}]}], "]"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"White", ",", 
                   RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}]}]}], 
               "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}],
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
             "normalized", " ", "broken", " ", "axis", " ", "loglinear", " ", 
              "plot"}], " ", "-", " ", 
             RowBox[{
             "normalization", " ", "is", " ", "to", " ", "fitted", " ", 
              "Vmax"}]}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"brokenAxisPlotNormalized", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{
                RowBox[{"ReplacePart", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/", "Vmaxout"}]}], "}"}],
                     "&"}], "/@", "data2"}], ")"}], ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "0.1"}]}], 
                 "]"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"PointSize", "[", "0.02", "]"}]}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                RowBox[{"FrameTicks", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
                   "xticks"}], "}"}]}], ",", 
                RowBox[{"GridLines", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0.12", ",", "0.13"}], "}"}], ",", "None"}], 
                  "}"}]}], ",", 
                RowBox[{"GridLinesStyle", "\[Rule]", "Black"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
                RowBox[{"GridLinesStyle", "\[Rule]", "Gray"}], ",", 
                RowBox[{"FrameStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Black", ",", "18", ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                  "]"}]}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<[I] (\[Mu]M)\>\"", ",", "eGFPscaleUnits"}], 
                  "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{
                    RowBox[{"Max", "[", "inhibitorConcentrations", "]"}], "*",
                     "1.2"}]}], "}"}], ",", "All"}], "}"}]}]}], "]"}], ",", 
              RowBox[{"LogLinearPlot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"fits", "[", "x", "]"}], "*", 
                 RowBox[{"dataMax", "/", "Vmaxout"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "0.13", ",", "5000"}], "}"}]}], "]"}], ",",
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{"controlPlotNormReplace0", ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Black", ",", 
                   RowBox[{"PointSize", "[", "0.03", "]"}]}], "]"}]}]}], 
               "]"}], ",", 
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"controlPlotNormReplace0", "[", 
                   RowBox[{"[", "run", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"run", ",", "1", ",", 
                    RowBox[{"Length", "[", "controlPlotNormReplace0", "]"}]}],
                    "}"}]}], "]"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"White", ",", 
                   RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}]}]}], 
               "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}],
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"brokenAxisPlotNormalized2", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{
                RowBox[{"ReplacePart", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/", "Vmaxout"}]}], "}"}],
                     "&"}], "/@", "data2"}], ")"}], ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "0.01"}]}], 
                 "]"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"PointSize", "[", "0.02", "]"}]}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                RowBox[{"FrameTicks", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
                   "xticks2"}], "}"}]}], ",", 
                RowBox[{"GridLines", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0.12", ",", "0.13"}], "}"}], ",", "None"}], 
                  "}"}]}], ",", 
                RowBox[{"GridLinesStyle", "\[Rule]", "Black"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
                RowBox[{"GridLinesStyle", "\[Rule]", "Gray"}], ",", 
                RowBox[{"FrameStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Black", ",", "18", ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                  "]"}]}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<[I] (\[Mu]M)\>\"", ",", "eGFPscaleUnits"}], 
                  "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{
                    RowBox[{"Max", "[", "inhibitorConcentrations", "]"}], "*",
                     "1.2"}]}], "}"}], ",", "All"}], "}"}]}]}], "]"}], ",", 
              RowBox[{"LogLinearPlot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"fits", "[", "x", "]"}], "*", 
                 RowBox[{"dataMax", "/", "Vmaxout"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "0.01", ",", "5000"}], "}"}]}], "]"}], ",",
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{"controlPlotNormReplace02", ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Black", ",", 
                   RowBox[{"PointSize", "[", "0.03", "]"}]}], "]"}]}]}], 
               "]"}], ",", 
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"controlPlotNormReplace02", "[", 
                   RowBox[{"[", "run", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"run", ",", "1", ",", 
                    RowBox[{
                    "Length", "[", "controlPlotNormReplace02", "]"}]}], 
                   "}"}]}], "]"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"White", ",", 
                   RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}]}]}], 
               "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}],
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"brokenAxisPlotNormalized3", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{
                RowBox[{"ReplacePart", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/", "Vmaxout"}]}], "}"}],
                     "&"}], "/@", "data2"}], ")"}], ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "0.1"}]}], 
                 "]"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"PointSize", "[", "0.02", "]"}]}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                RowBox[{"FrameTicks", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
                   "xticks2"}], "}"}]}], ",", 
                RowBox[{"GridLines", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0.12", ",", "0.13"}], "}"}], ",", "None"}], 
                  "}"}]}], ",", 
                RowBox[{"GridLinesStyle", "\[Rule]", "Black"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
                RowBox[{"GridLinesStyle", "\[Rule]", "Gray"}], ",", 
                RowBox[{"FrameStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Black", ",", "18", ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                  "]"}]}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<[I] (\[Mu]M)\>\"", ",", "eGFPscaleUnits"}], 
                  "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{
                    RowBox[{"Max", "[", "inhibitorConcentrations", "]"}], "*",
                     "1.2"}]}], "}"}], ",", "All"}], "}"}]}]}], "]"}], ",", 
              RowBox[{"LogLinearPlot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"fits", "[", "x", "]"}], "*", 
                 RowBox[{"dataMax", "/", "Vmaxout"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "0.13", ",", "5000"}], "}"}]}], "]"}], ",", 
              RowBox[{"LogLinearPlot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"fits", "[", "0.00001", "]"}], "*", "dataMax"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "0.01", ",", "0.118"}], "}"}]}], "]"}], 
              ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{"controlPlotNormReplace0", ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Black", ",", 
                   RowBox[{"PointSize", "[", "0.03", "]"}]}], "]"}]}]}], 
               "]"}], ",", 
              RowBox[{"ListLogLinearPlot", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"controlPlotNormReplace0", "[", 
                   RowBox[{"[", "run", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"run", ",", "1", ",", 
                    RowBox[{"Length", "[", "controlPlotNormReplace0", "]"}]}],
                    "}"}]}], "]"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"White", ",", 
                   RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}]}]}], 
               "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}],
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"plot", " ", "dropout", " ", "fitting"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"dropoutFitPlot", "=", 
              RowBox[{"Show", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"LogLinearPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"droppedfits", "[", 
                    RowBox[{"[", 
                    RowBox[{"run", ",", "2"}], "]"}], "]"}], "[", "x", "]"}], 
                    "*", "dataMax"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0.4", ",", "1250"}], "}"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "All"}], "}"}]}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Lighter", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}], ",", 
                    RowBox[{"ColorData", "[", 
                    RowBox[{"4", ",", "\"\<ColorList\>\""}], "]"}]}], "]"}], 
                    "[", 
                    RowBox[{"[", 
                    RowBox[{"run", "+", "1"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"ListLogLinearPlot", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"droppedfits", "[", 
                    RowBox[{"[", 
                    RowBox[{"run", ",", "1"}], "]"}], "]"}], "*", 
                    RowBox[{"{", 
                    RowBox[{"1.0", ",", "dataMax"}], "}"}]}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Black", ",", 
                    RowBox[{"PointSize", "[", "0.03", "]"}]}], "]"}]}]}], 
                    "]"}], ",", 
                    RowBox[{"ListLogLinearPlot", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"droppedfits", "[", 
                    RowBox[{"[", 
                    RowBox[{"run", ",", "1"}], "]"}], "]"}], "*", 
                    RowBox[{"{", 
                    RowBox[{"1.0", ",", "dataMax"}], "}"}]}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Lighter", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}], ",", 
                    RowBox[{"ColorData", "[", 
                    RowBox[{"4", ",", "\"\<ColorList\>\""}], "]"}]}], "]"}], 
                    "[", 
                    RowBox[{"[", 
                    RowBox[{"run", "+", "1"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}]}]}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"run", ",", "1", ",", 
                    RowBox[{"Length", "[", "droppedfits", "]"}]}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"ListLogLinearPlot", "[", 
                 RowBox[{"controlPlot", ",", 
                  RowBox[{"PlotStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"Black", ",", 
                    RowBox[{"PointSize", "[", "0.03", "]"}]}], "]"}]}]}], 
                 "]"}], ",", 
                RowBox[{"ListLogLinearPlot", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"controlPlot", "[", 
                    RowBox[{"[", "run", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"run", ",", "1", ",", 
                    RowBox[{"Length", "[", "controlPlot", "]"}]}], "}"}]}], 
                   "]"}], ",", 
                  RowBox[{"PlotStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"White", ",", 
                    RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}]}]}], 
                 "]"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
                RowBox[{"ImagePadding", "\[Rule]", "50"}], ",", 
                RowBox[{"GridLines", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"None", ",", 
                   RowBox[{"{", 
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], "}"}]}], "}"}]}], 
                ",", 
                RowBox[{"GridLinesStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Gray", ",", " ", "Dashed"}], "]"}]}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<[I] (uM)\>\"", ",", "eGFPscaleUnits"}], 
                  "}"}]}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"eGFPscaleAppend", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"scaleByGFP", "\[Equal]", "1"}], ",", 
              "\"\< PerPointScaled\>\"", ",", "\"\< Unscaled\>\""}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"StringJoin", "[", 
              RowBox[{
              "\"\<InhibitionFitPlot\>\"", ",", "\"\< \>\"", ",", "keyAppend",
                ",", "eGFPscaleAppend"}], "]"}], "\[Rule]", 
             RowBox[{
              RowBox[{
              "MMfitplot", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<InhibitionFitPlotAll\>\"", ",", "\"\< \>\"", ",", 
                 "keyAppend", ",", "eGFPscaleAppend"}], "]"}]}], "\[Rule]", 
              "dropoutFitPlot"}]}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", " ", "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "note", " ", "that", " ", "when", " ", "plotting", " ", 
             "MMFitObj", " ", "need", " ", "to", " ", "apply", " ", "the", 
             " ", "scale", " ", "factor"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Association", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<Indices\>\"", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"grouped", "[", 
                  RowBox[{"n", ",", "1", ",", "\"\<Indices\>\""}], "]"}], "//",
                  "Normal"}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<VmaxMMfit\>\"", ",", "\"\< \>\"", ",", "keyAppend", ",", 
                 "eGFPscaleAppend"}], "]"}], "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Vmax", "/.", 
                   RowBox[{"fits", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "*", 
                 "dataMax"}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<KiInhibitionFit\>\"", ",", "\"\< \>\"", ",", "keyAppend",
                  ",", "eGFPscaleAppend"}], "]"}], "->", 
               RowBox[{"(", 
                RowBox[{"Ki", "/.", 
                 RowBox[{"fits", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<InhibitionFitObj\>\"", ",", "\"\< \>\"", ",", 
                 "keyAppend", ",", "eGFPscaleAppend"}], "]"}], "\[Rule]", 
               RowBox[{"(", "fits", ")"}]}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<InhibitionFit ScaleFactor\>\"", ",", "\"\< \>\"", ",", 
                 "keyAppend"}], "]"}], "\[Rule]", 
               RowBox[{"(", "dataMax", ")"}]}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<InhibitionFitRsquared\>\"", ",", "\"\< \>\"", ",", 
                 "keyAppend", ",", "eGFPscaleAppend"}], "]"}], "\[Rule]", 
               RowBox[{"fits", "[", "\"\<RSquared\>\"", "]"}]}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<DataPointsUsedforInhibitionfitting\>\"", ",", 
                 "\"\< \>\"", ",", "keyAppend", ",", "eGFPscaleAppend"}], 
                "]"}], "\[Rule]", 
               RowBox[{"Normal", "[", 
                RowBox[{"DeleteCases", "[", 
                 RowBox[{
                  RowBox[{"grouped", "[", 
                   RowBox[{"n", ",", "All", ",", "rateKey"}], "]"}], ",", 
                  "\"\<NaN\>\""}], "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<BrokenAxisFitPlot\>\"", ",", "\"\< \>\"", ",", 
                 "keyAppend", ",", "eGFPscaleAppend"}], "]"}], "\[Rule]", 
               "brokenAxisPlot"}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<BrokenAxisFitPlot2\>\"", ",", "\"\< \>\"", ",", 
                 "keyAppend", ",", "eGFPscaleAppend"}], "]"}], "\[Rule]", 
               "brokenAxisPlot2"}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<BrokenAxisFitPlot3\>\"", ",", "\"\< \>\"", ",", 
                 "keyAppend", ",", "eGFPscaleAppend"}], "]"}], "\[Rule]", 
               "brokenAxisPlot3"}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<BrokenAxisFitPlotNormalized\>\"", ",", "\"\< \>\"", ",", 
                 "keyAppend", ",", "eGFPscaleAppend"}], "]"}], "\[Rule]", 
               "brokenAxisPlotNormalized"}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<BrokenAxisFitPlotNormalized2\>\"", ",", "\"\< \>\"", ",",
                  "keyAppend", ",", "eGFPscaleAppend"}], "]"}], "\[Rule]", 
               "brokenAxisPlotNormalized2"}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<BrokenAxisFitPlotNormalized3\>\"", ",", "\"\< \>\"", ",",
                  "keyAppend", ",", "eGFPscaleAppend"}], "]"}], "\[Rule]", 
               "brokenAxisPlotNormalized3"}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<DropoutFitObjects\>\"", ",", "\"\< \>\"", ",", 
                 "keyAppend", ",", "eGFPscaleAppend"}], "]"}], "\[Rule]", 
               "droppedfits"}], ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "\"\<ControlPoints\>\"", ",", "\"\< \>\"", ",", "keyAppend", 
                 ",", "eGFPscaleAppend"}], "]"}], "\[Rule]", 
               "controlPlot"}]}], "}"}], "]"}]}], ")"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", 
           RowBox[{"Length", "[", "grouped", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Dataset", "[", 
       RowBox[{"JoinAcross", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "dataset", "]"}], ",", "fitdata", ",", 
         "\"\<Indices\>\"", ",", "\"\<Left\>\""}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fitMichaelisMenten", "[", 
     RowBox[{"dataset_", ",", "rateKey_", ",", "keyAppend_", ",", 
      RowBox[{"scaleByGFP_", ":", "0"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "removeControl", ",", "grouped", ",", "fitdata", ",", "fits", ",", 
        "rates", ",", "data", ",", "data2", ",", "dataMax", ",", "dataNorm", 
        ",", "droppedfits", ",", "Vmaxout", ",", "KIout", ",", 
        "dropoutFitPlot", ",", "slopeout", ",", "interceptout", ",", 
        "dropoutLinearFitPlot", ",", "MMfitplot", ",", "fullLinearFitPlot", 
        ",", "eGFPscalingList", ",", "data2a", ",", "data2b", ",", 
        "eGFPscaleAppend", ",", "eGFPscaleUnits", ",", 
        "substrateconcentrations", ",", "onlyControl", ",", "groupedControl", 
        ",", "controlData", ",", "substrateConcentrationsControl", ",", 
        "eGFPscalingListControl", ",", "controlPlotTEMP", ",", "controlPlot", 
        ",", "jknifemmFitkcats", ",", "jknifemmFitKMs", ",", 
        "jknifelinFitSlopes", ",", "jknifelinFitIntercept", ",", 
        "Vmaxorkcat"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"reads", " ", "in", " ", "Dataset"}], ",", " ", 
        RowBox[{
         RowBox[{"fits", " ", "chosen", " ", "rates", " ", 
          RowBox[{"(", 
           RowBox[{"determined", " ", "by", " ", "key"}], ")"}], " ", "to", 
          " ", "linear", " ", "and", " ", "Michaelis"}], "-", 
         RowBox[{"Menten", " ", "models"}]}], ",", " ", 
        RowBox[{
        "returning", " ", "a", " ", "list", " ", "of", " ", "associations"}], 
        ",", " ", 
        RowBox[{
        "and", " ", "merging", " ", "fit", " ", "data", " ", "with", " ", 
         "input", " ", "data", " ", "to", " ", "create", " ", "a", " ", "new",
          " ", "aggregate", " ", "dataset"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"removeControl", "=", 
        RowBox[{"dataset", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"#AssayType", "\[Equal]", "1"}], "&"}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"grouped", "=", 
        RowBox[{"removeControl", "[", 
         RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"onlyControl", "=", 
        RowBox[{"dataset", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"#AssayType", "\[Equal]", "0"}], "&"}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"groupedControl", "=", 
        RowBox[{"onlyControl", "[", 
         RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"fitdata", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Clear", "[", 
             RowBox[{
             "fits", ",", "data", ",", "data2", ",", "rates", ",", 
              "substrateconcentrations", ",", "eGFPscalingList"}], "]"}], ";",
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"substrateconcentrations", "=", 
             RowBox[{"Normal", "[", 
              RowBox[{"grouped", "[", 
               RowBox[{"n", ",", "All", ",", "\"\<SubstrateConc\>\""}], "]"}],
               "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"eGFPscalingList", "=", 
             RowBox[{"Which", "[", 
              RowBox[{
               RowBox[{"scaleByGFP", "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Normal", "[", 
                  RowBox[{"grouped", "[", 
                   RowBox[{"n", ",", "All", ",", "\"\<eGFPSummedI\>\""}], 
                   "]"}], "]"}], "/", "eGFPslope"}], "/", "1000."}], ",", 
               RowBox[{"scaleByGFP", "\[Equal]", "0"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "1", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "/", "eGFPslope"}], "/", "1000."}], ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{"Length", "[", "grouped", "]"}]}], "}"}]}], 
                "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"rates", "=", 
             RowBox[{"Normal", "[", 
              RowBox[{"grouped", "[", 
               RowBox[{"n", ",", "All", ",", "rateKey"}], "]"}], "]"}]}], ";",
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"AnyTrue", "[", 
               RowBox[{"rates", ",", "MissingQ"}], "]"}], ",", 
              RowBox[{"Association", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<Indices\>\"", "\[Rule]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "1", ",", "\"\<Indices\>\""}], "]"}], "//",
                     "Normal"}], ")"}]}], ",", 
                 RowBox[{
                  RowBox[{"StringJoin", "[", 
                   RowBox[{
                   "\"\<fit_mm\>\"", ",", "\"\<_\>\"", ",", "\"\<kcat\>\""}], 
                   "]"}], "\[Rule]", 
                  RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"StringJoin", "[", 
                   RowBox[{
                   "\"\<fit_mm\>\"", ",", "\"\<_\>\"", ",", "\"\<kcat\>\"", 
                    ",", "\"\<_param_error\>\""}], "]"}], "\[Rule]", 
                  RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_KM\>\""}], "]"}], "->", 
                  RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_KM_param_error\>\""}],
                    "]"}], "->", 
                  RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_curved_model\>\""}], 
                   "]"}], "\[Rule]", 
                  RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_scale_factor\>\""}], 
                   "]"}], "\[Rule]", 
                  RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_curved_r2\>\""}], 
                   "]"}], "\[Rule]", 
                  RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], ",",
                  "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_datapoints\>\""}], 
                   "]"}], "\[Rule]", 
                  RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_numdatapoints\>\""}], 
                   "]"}], "\[Rule]", 
                  RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_curved_plot\>\""}], 
                   "]"}], "\[Rule]", 
                  RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], ",", 
                 RowBox[{"\"\<Km_Limit\>\"", "\[Rule]", 
                  RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"data", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"substrateconcentrations", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", 
                    RowBox[{"rates", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", 
                    RowBox[{"eGFPscalingList", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Length", "[", "substrateconcentrations", "]"}]}],
                    "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"data2a", "=", 
                  RowBox[{"Select", "[", 
                   RowBox[{"data", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
                    "\"\<NaN\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], "&&", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ">", "0"}]}], "&"}]}], 
                   "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"data2a", "=", "data"}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"data2b", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"data2a", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"data2a", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "2"}], "]"}], "]"}], "/", 
                    RowBox[{"data2a", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Length", "[", "data2a", "]"}]}], "}"}]}], 
                 "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"dataMax", "=", 
                RowBox[{"Max", "[", 
                 RowBox[{"data2b", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"data2", "=", "data2b"}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"dataNorm", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "2"}], "]"}], "]"}], "/", "dataMax"}]}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Length", "[", "data2", "]"}]}], "}"}]}], "]"}]}],
                ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"fits", "=", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"LinearModelFit", "[", 
                   RowBox[{"data2", ",", "x", ",", "x"}], "]"}], ",", 
                  RowBox[{"NonlinearModelFit", "[", 
                   RowBox[{"dataNorm", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Vmax", "*", 
                    RowBox[{"substrate", "/", 
                    RowBox[{"(", 
                    RowBox[{"KM", "+", "substrate"}], ")"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"KM", ">", "0.5"}], "&&", 
                    RowBox[{"Vmax", ">", "0"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Vmax", ",", "KM"}], "}"}], ",", "substrate"}], 
                   "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "drop", " ", "individual", " ", "points", " ", "and", " ", 
                 "refit"}], " ", "*)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"droppedfits", "=", 
                  RowBox[{
                  "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"dataNorm", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", 
                    RowBox[{"NonlinearModelFit", "[", 
                    RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{"dataNorm", ",", 
                    RowBox[{"{", "n", "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Vmax", "*", 
                    RowBox[{"substrate", "/", 
                    RowBox[{"(", 
                    RowBox[{"KM", "+", "substrate"}], ")"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"KM", ">", "0"}], "&&", 
                    RowBox[{"Vmax", ">", "0"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Vmax", ",", "KM"}], "}"}], ",", "substrate"}], 
                    "]"}], ",", 
                    RowBox[{"LinearModelFit", "[", 
                    RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{"data2", ",", 
                    RowBox[{"{", "n", "}"}]}], "]"}], ",", "x", ",", "x"}], 
                    "]"}]}], "}"}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Length", "[", "dataNorm", "]"}]}], "}"}]}], 
                   "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{"extract", " ", "parameters"}], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"Vmaxout", "=", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Vmax", "/.", 
                    RowBox[{"droppedfits", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2", ",", "1", ",", "2"}], "]"}], 
                    "]"}]}], ")"}], "*", "dataMax"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"KMout", "=", 
                  RowBox[{"KM", "/.", 
                   RowBox[{"droppedfits", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2", ",", "1", ",", "2"}], "]"}], 
                    "]"}]}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"slopeout", "=", 
                  RowBox[{"droppedfits", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "3", ",", "1", ",", "2", ",", "2"}], 
                    "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"interceptout", "=", 
                  RowBox[{"droppedfits", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "3", ",", "1", ",", "2", ",", "1"}], 
                    "]"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"eGFPscaleUnits", "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"scaleByGFP", "\[Equal]", "1"}], ",", 
                  "\"\<Scaled initial rate (\!\(\*SuperscriptBox[\(s\), \
\(-1\)]\))\>\"", ",", 
                  "\"\<Scaled initial rate (\!\(\*SuperscriptBox[\(s\), \
\(-1\)]\))\>\""}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"control", " ", "data"}], " ", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"controlData", "=", 
                RowBox[{"groupedControl", "[", "n", "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"substrateConcentrationsControl", "=", 
                RowBox[{"Normal", "[", 
                 RowBox[{"controlData", "[", 
                  RowBox[{"All", ",", "\"\<SubstrateConc\>\""}], "]"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "note", " ", "that", " ", "the", " ", "eGFP", " ", "control", 
                 " ", "point", " ", "scaling", " ", "uses", " ", "the", " ", 
                 "first", " ", "point", " ", "from", " ", "the", " ", 
                 "actual", " ", "data", " ", 
                 RowBox[{"(", 
                  RowBox[{"the", " ", "\"\<grouped\>\"", " ", "data"}], 
                  ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"eGFPscalingListControl", "=", 
                RowBox[{"Which", "[", 
                 RowBox[{
                  RowBox[{"scaleByGFP", "\[Equal]", "1"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"controlData", "[", 
                    RowBox[{"All", ",", "\"\<eGFPSummedI\>\""}], "]"}], "]"}],
                     "/", "eGFPslope"}], "/", "1000."}], ",", 
                  RowBox[{"scaleByGFP", "\[Equal]", "0"}], ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "1", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "/", "eGFPslope"}], "/", "1000."}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "Length", "[", "substrateConcentrationsControl", "]"}], 
                    "}"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"controlPlotTEMP", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"controlData", "[", 
                    RowBox[{"run", ",", "\"\<SubstrateConc\>\""}], "]"}], ",", 
                    RowBox[{"controlData", "[", 
                    RowBox[{"run", ",", "rateKey"}], "]"}], ",", 
                    RowBox[{"eGFPscalingListControl", "[", 
                    RowBox[{"[", "run", "]"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"run", ",", "1", ",", 
                    RowBox[{"Length", "[", "controlData", "]"}]}], "}"}]}], 
                 "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"controlPlot", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"controlPlotTEMP", "[", 
                    RowBox[{"[", 
                    RowBox[{"run", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"controlPlotTEMP", "[", 
                    RowBox[{"[", 
                    RowBox[{"run", ",", "2"}], "]"}], "]"}], "/", 
                    RowBox[{"controlPlotTEMP", "[", 
                    RowBox[{"[", 
                    RowBox[{"run", ",", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"run", ",", "1", ",", 
                    RowBox[{"Length", "[", "controlPlotTEMP", "]"}]}], 
                   "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"MMfitplot", "=", 
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"Plot", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"fits", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", "x", "]"}], "*", 
                    "dataMax"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"Last", "[", "substrateconcentrations", "]"}], 
                    "*", "1.25"}]}], "}"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "All"}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                    RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<[Substrate] (\[Mu]M)\>\"", ",", "eGFPscaleUnits"}], 
                    "}"}]}], ",", 
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"20", ",", "Black", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                    "]"}]}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Black", ",", "Dashed", ",", 
                    RowBox[{"Thickness", "[", "0.0075", "]"}]}], "]"}]}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "#", "]"}], ",", "#", ",", 
                    RowBox[{"N", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
                    RowBox[{"FindDivisions", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], 
                    ",", "7"}], "]"}]}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "#", "]"}], ",", "#", ",", 
                    RowBox[{"N", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
                    RowBox[{"FindDivisions", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
                    ",", "7"}], "]"}]}], ",", "None"}], "}"}]}], "}"}]}]}], 
                   "]"}], ",", 
                  RowBox[{"ListPlot", "[", 
                   RowBox[{"data2", ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "All"}], "}"}]}], ",", 
                    RowBox[{"PlotMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"p", ",", "0.05"}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
                    RowBox[{"ImagePadding", "\[Rule]", "50"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                    RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<[cMUP] (uM)\>\"", ",", "eGFPscaleUnits"}], 
                    "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"ListPlot", "[", 
                   RowBox[{"controlPlot", ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Black", ",", 
                    RowBox[{"PointSize", "[", "0.03", "]"}]}], "]"}]}]}], 
                   "]"}], ",", 
                  RowBox[{"ListPlot", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"controlPlot", "[", 
                    RowBox[{"[", "run", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"run", ",", "1", ",", 
                    RowBox[{"Length", "[", "controlPlot", "]"}]}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"White", ",", 
                    RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}]}]}], 
                   "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"eGFPscaleAppend", "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"scaleByGFP", "\[Equal]", "1"}], ",", 
                  "\"\<scaled\>\"", ",", "\"\<unscaled\>\""}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"jknifemmFitkcats", "=", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Vmax", "/.", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}]}], "}"}], 
                    "&"}], "/@", "droppedfits"}], "]"}], "*", "dataMax"}]}], 
                 ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"jknifemmFitKMs", "=", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"KM", "/.", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}]}], "}"}], 
                    "&"}], "/@", "droppedfits"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"jknifelinFitSlopes", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "1", ",", "2", ",", "2"}], "]"}], "]"}],
                     "&"}], "/@", "droppedfits"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"jknifelinFitIntercept", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "1", ",", "2", ",", "1"}], "]"}], "]"}],
                     "&"}], "/@", "droppedfits"}]}], ";"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "note", " ", "that", " ", "when", " ", "plotting", " ", 
                 "MMFitObj", " ", "need", " ", "to", " ", "apply", " ", "the",
                  " ", "scale", " ", "factor"}], " ", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"Association", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\"\<Indices\>\"", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "1", ",", "\"\<Indices\>\""}], "]"}], "//",
                     "Normal"}], ")"}]}], ",", 
                  RowBox[{
                   RowBox[{"StringJoin", "[", 
                    RowBox[{
                    "\"\<fit_mm\>\"", ",", "\"\<_\>\"", ",", "\"\<kcat\>\""}],
                     "]"}], "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Vmax", "/.", 
                    RowBox[{"fits", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}]}], ")"}], 
                    "*", "dataMax"}], ")"}]}], ",", 
                  RowBox[{
                   RowBox[{"StringJoin", "[", 
                    RowBox[{
                    "\"\<fit_mm\>\"", ",", "\"\<_\>\"", ",", "\"\<kcat\>\"", 
                    ",", "\"\<_param_error\>\""}], "]"}], "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"fits", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    "\"\<ParameterErrors\>\"", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ")"}], "*", "dataMax"}], 
                    ")"}]}], ",", 
                  RowBox[{
                   RowBox[{"StringJoin", "[", 
                    RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_KM\>\""}], "]"}], "->", 
                   RowBox[{"(", 
                    RowBox[{"KM", "/.", 
                    RowBox[{"fits", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}]}], 
                    ")"}]}], ",", 
                  RowBox[{
                   RowBox[{"StringJoin", "[", 
                    RowBox[{
                    "\"\<fit_mm\>\"", ",", "\"\<_KM_param_error\>\""}], "]"}],
                    "->", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"fits", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    "\"\<ParameterErrors\>\"", "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ")"}]}], ",", 
                  RowBox[{
                   RowBox[{"StringJoin", "[", 
                    RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_curved_model\>\""}], 
                    "]"}], "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"fits", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ")"}]}], ",", 
                  RowBox[{
                   RowBox[{"StringJoin", "[", 
                    RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_scale_factor\>\""}], 
                    "]"}], "\[Rule]", 
                   RowBox[{"(", "dataMax", ")"}]}], ",", 
                  RowBox[{
                   RowBox[{"StringJoin", "[", 
                    RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_curved_r2\>\""}], 
                    "]"}], "\[Rule]", 
                   RowBox[{
                    RowBox[{"fits", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<RSquared\>\"", 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"StringJoin", "[", 
                    RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_datapoints\>\""}], 
                    "]"}], "\[Rule]", "dataNorm"}], ",", 
                  RowBox[{
                   RowBox[{"StringJoin", "[", 
                    RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_numdatapoints\>\""}],
                     "]"}], "\[Rule]", 
                   RowBox[{"Length", "[", "dataNorm", "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"StringJoin", "[", 
                    RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_curved_plot\>\""}], 
                    "]"}], "\[Rule]", "MMfitplot"}], ",", 
                  RowBox[{"\"\<Km_Limit\>\"", "\[Rule]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"KM", "/.", 
                    RowBox[{"fits", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}]}], ")"}], 
                    "\[LessEqual]", "0.5"}], ",", "1", ",", "0"}], "]"}]}]}], 
                 "}"}], "]"}]}]}], "]"}]}], ")"}], ",", "\[IndentingNewLine]",
           "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "grouped", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Dataset", "[", 
        RowBox[{"JoinAcross", "[", 
         RowBox[{
          RowBox[{"Normal", "[", "dataset", "]"}], ",", "fitdata", ",", 
          "\"\<Indices\>\"", ",", "\"\<Left\>\""}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "local", " ", "background", " ", "interpolation", " ", "and", " ", 
    "plotting", " ", "functions"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interpolateDeadMutantsPerColumn", "[", 
    RowBox[{
    "mutantList_", ",", "expIndex_", ",", "column_", ",", "datasetIN_", ",", 
     "rateKey_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"selected", ",", "selectedRates", ",", "out", ",", "dataset"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dataset", "=", "datasetIN"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"selected", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"Normal", "[", 
            RowBox[{"Values", "[", 
             RowBox[{"dataset", "[", 
              RowBox[{
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Apply", "[", 
                    RowBox[{"Or", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"#MutantID", "\[Equal]", 
                    RowBox[{"mutantList", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Length", "[", "mutantList", "]"}]}], "}"}]}], 
                    "]"}]}], "]"}], ")"}], "&&", 
                  RowBox[{"#ExpIndex", "\[Equal]", "expIndex"}], "&&", 
                  RowBox[{
                   RowBox[{"#Indices", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "column"}]}], 
                 " ", "&"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Indices\>\"", ",", "rateKey", ",", "\"\<MutantID\>\""}], 
                "}"}]}], "]"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], "<", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"NumberQ", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[Equal]", "True"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "including", " ", "Abs", " ", "of", " ", "rates", " ", "to", " ", 
        "prevent", " ", "negative", " ", "LocalBackgroundRatios", " ", "due", 
        " ", "to", " ", "negative", " ", "interpolated", " ", "values"}], " ",
        "*)"}], "\[IndentingNewLine]", 
      RowBox[{"selectedRates", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"selected", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"out", "=", "selectedRates"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"out", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"selectedRates", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], ",", 
         "out", ",", 
         RowBox[{"Append", "[", 
          RowBox[{"out", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"column", ",", "1"}], "}"}], ",", " ", 
             RowBox[{"selectedRates", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"out", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"selectedRates", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "56"}], 
          "]"}], ",", "out", ",", 
         RowBox[{"Append", "[", 
          RowBox[{"out", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"column", ",", "56"}], "}"}], ",", " ", 
             RowBox[{"selectedRates", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", " ", "2"}], "]"}], "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"out", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"out", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", 
             RowBox[{"Length", "[", "out", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", " ", "56", ",", " ", "1"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"calculateLocalBGRatio", "[", 
    RowBox[{
    "chamber_", ",", "expIndex_", ",", "interpolation_", ",", "datasetIN_", 
     ",", "rateKey_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "column", ",", "measuredChamberRate", ",", "dataset", ",", 
       "backgroundRate"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dataset", "=", "datasetIN"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"measuredChamberRate", "=", 
       RowBox[{
        RowBox[{"Values", "[", 
         RowBox[{"Normal", "[", 
          RowBox[{"dataset", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#Indices", "\[Equal]", "chamber"}], "&&", 
               RowBox[{"#ExpIndex", "\[Equal]", "expIndex"}]}], "&"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Indices\>\"", ",", "rateKey", ",", "\"\<MutantID\>\""}], 
             "}"}]}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"backgroundRate", "=", 
       RowBox[{"interpolation", "[", 
        RowBox[{"[", 
         RowBox[{"chamber", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"measuredChamberRate", "/", "backgroundRate"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateLocalBGPlot", "[", 
    RowBox[{"chamber_", ",", "expIndex_", ",", "interpolation_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"column", ",", "row"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"column", "=", 
       RowBox[{"chamber", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"row", "=", 
       RowBox[{"chamber", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"MissingQ", "[", 
         RowBox[{
          RowBox[{"allinColumn", "[", 
           RowBox[{"{", 
            RowBox[{"column", ",", "row"}], "}"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"allinColumn", "[", 
           RowBox[{"{", 
            RowBox[{"column", ",", "row"}], "}"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "0.0"}], ",", 
        RowBox[{"Missing", "[", "\"\<NegativeRate\>\"", "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{
            RowBox[{"allinColumn", "[", 
             RowBox[{"{", 
              RowBox[{"column", ",", "row"}], "}"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[Equal]", "False"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{"allinColumn", "[", 
            RowBox[{"{", 
             RowBox[{"column", ",", "row"}], "}"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", "0.0"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ListLogPlot", "[", 
           RowBox[{"interpolation", ",", 
            RowBox[{"Joined", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"Dashed", ",", 
               RowBox[{"Darker", "[", "Red", "]"}]}], "]"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "56"}], "}"}], ",", 
               RowBox[{"{", " ", 
                RowBox[{
                 RowBox[{"10", "^", 
                  RowBox[{"-", "5"}]}], ",", " ", 
                 RowBox[{"10", "^", "0"}]}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Black", ",", 
               RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], 
            ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Chip Row Number\>\"", ",", 
               "\"\<Obs. - True BG Rate (\[Micro]M/s)\>\""}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", 
            RowBox[{"Epilog", "\[Rule]", 
             RowBox[{"Inset", "[", 
              RowBox[{
               RowBox[{"LineLegend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Darker", "[", "Red", "]"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<Background rate\>\"", ",", "Black", ",", "12", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                   "]"}], "}"}]}], "]"}], ",", 
               RowBox[{"Scaled", "[", 
                RowBox[{"{", 
                 RowBox[{"0.5", ",", "0.85"}], "}"}], "]"}]}], "]"}]}]}], 
           "]"}], ",", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"ListLogPlot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Callout", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"allinColumn", "[", 
                   RowBox[{"{", 
                    RowBox[{"column", ",", "row"}], "}"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"allinColumn", "[", 
                   RowBox[{"{", 
                    RowBox[{"column", ",", "row"}], "}"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{
                RowBox[{"allinColumn", "[", 
                 RowBox[{"{", 
                  RowBox[{"column", ",", "row"}], "}"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "}"}], ",", 
            RowBox[{"PlotMarkers", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Gray", ",", "4"}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"ListLogPlot", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"allinColumn", "[", 
                  RowBox[{"{", 
                   RowBox[{"column", ",", "n"}], "}"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"allinColumn", "[", 
                  RowBox[{"{", 
                   RowBox[{"column", ",", "n"}], "}"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", "56"}], "}"}]}], "]"}], ",", 
            RowBox[{"PlotMarkers", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Gray", ",", "4"}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "]"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getGFPImage", "[", 
    RowBox[{
    "mutantIN_", ",", "xindex_", ",", "yindex_", ",", "scalingFactor_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "mutant", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mutant", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"mutantIN", ",", 
         RowBox[{"\"\</\>\"", "\[Rule]", "\"\<_\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ImageResize", "[", 
       RowBox[{
        RowBox[{"Image", "[", 
         RowBox[{
          RowBox[{"ImageData", "[", 
           RowBox[{"Import", "[", 
            RowBox[{"StringJoin", "[", 
             RowBox[{
             "repoPath", ",", "mutant", ",", "\"\</\>\"", ",", "\"\<(\>\"", 
              ",", 
              RowBox[{"ToString", "[", "xindex", "]"}], ",", "\"\<, \>\"", 
              ",", 
              RowBox[{"ToString", "[", "yindex", "]"}], ",", "\"\<)/\>\"", 
              ",", "deviceID", ",", "\"\<_eGFP_500ms_ButtonQuant/\>\"", ",", 
              "\"\<(\>\"", ",", 
              RowBox[{"ToString", "[", "xindex", "]"}], ",", "\"\<, \>\"", 
              ",", 
              RowBox[{"ToString", "[", "yindex", "]"}], ",", "\"\<)_\>\"", 
              ",", "mutant", ",", "\"\<.png\>\""}], "]"}], "]"}], "]"}], "*", 
          "scalingFactor"}], "]"}], ",", "75"}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeGrid", "[", 
    RowBox[{
    "datasetIN_", ",", "indices_", ",", "assayType_", ",", "scaleKey_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grouped", ",", "progresscurves"}], "}"}], ",", 
     RowBox[{
      RowBox[{"grouped", "=", 
       RowBox[{"datasetIN", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"#Indices", "\[Equal]", "indices"}], "&"}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"progresscurves", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"grouped", "[", 
         RowBox[{"All", ",", "\"\<ProgressCurveOptFit2\>\""}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"grouped", "[", 
              RowBox[{"1", ",", "\"\<eGFPPostSDSImage\>\""}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Mutant\>\"", ",", "Bold", ",", "20", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Substrate\>\"", ",", "Bold", ",", "20", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Chamber\>\"", ",", "Bold", ",", "20", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<eGFP Intensity\\n(RFU)\>\"", ",", "Bold", ",", "20", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<[E] (nM)\>\"", ",", "Bold", ",", "20", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Local Lower\\nLimit of Quant.\>\"", ",", "Bold", ",", "20",
                ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"], \
\"cat\"]\) (\!\(\*SuperscriptBox[\(s\), \(-1\)]\))\>\"", ",", "Bold", ",", 
               "20", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[StyleBox[\"K\",FontSlant->\"Italic\"], \
\"M\"]\) (\[Mu]M)\>\"", ",", "Bold", ",", "20", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"], \
\"cat\"]\)/\!\(\*SubscriptBox[StyleBox[\"K\",FontSlant->\"Italic\"], \"M\"]\) \
(\!\(\*SuperscriptBox[\(M\), \(-1\)]\) \!\(\*SuperscriptBox[\(s\), \(-1\)]\))\
\>\"", ",", "Bold", ",", "20", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SuperscriptBox[\(R\), \(2\)]\)\>\"", ",", "Bold", 
               ",", "20", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], 
            "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"SpanFromAbove", ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"grouped", "[", 
                RowBox[{"1", ",", "\"\<MutantID\>\""}], "]"}], ",", "Bold", 
               ",", "20", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{"assayType", ",", "20", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"grouped", "[", 
                 RowBox[{"1", ",", "\"\<Indices\>\""}], "]"}], "]"}], ",", 
               "20", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"NumberForm", "[", 
                RowBox[{
                 RowBox[{"Normal", "[", 
                  RowBox[{"grouped", "[", 
                   RowBox[{"1", ",", "\"\<eGFPSummedI\>\""}], "]"}], "]"}], 
                 ",", 
                 RowBox[{"DigitBlock", "\[Rule]", "3"}]}], "]"}], ",", "20", 
               ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Round", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Normal", "[", 
                   RowBox[{"grouped", "[", 
                    RowBox[{"1", ",", "\"\<eGFPSummedI\>\""}], "]"}], "]"}], 
                  "/", 
                  RowBox[{"Normal", "[", 
                   RowBox[{"grouped", "[", 
                    RowBox[{"1", ",", "\"\<eGFPSlope\>\""}], "]"}], "]"}]}], 
                 ",", "0.1"}], "]"}], ",", "Bold", ",", "20", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{"grouped", "[", 
                   RowBox[{"whichExpt", ",", "\"\<LocalBackgroundRatio\>\""}],
                    "]"}], ",", "0.1"}], "]"}], "]"}], ",", "Bold", ",", "20",
                ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
             ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"assayType", "!=", "\"\<Inhibition\>\""}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"1", ",", "\"\<fit_mm_kcat\>\""}], "]"}], "]"}], 
                   ",", "0.01"}], "]"}], ",", "20", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
               ",", "\"\<NaN\>\""}], "]"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"assayType", "!=", "\"\<Inhibition\>\""}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{"grouped", "[", 
                    RowBox[{"1", ",", "\"\<fit_mm_KM\>\""}], "]"}], ",", 
                   "1"}], "]"}], ",", "Bold", ",", "20", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
               ",", "\"\<NaN\>\""}], "]"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"assayType", "!=", "\"\<Inhibition\>\""}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"MissingQ", "[", 
                  RowBox[{"grouped", "[", 
                   RowBox[{"1", ",", "\"\<fit_mm_kcat\>\""}], "]"}], "]"}], 
                 ",", 
                 RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"grouped", "[", 
                    RowBox[{"1", ",", "\"\<fit_mm_kcat\>\""}], "]"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"1", ",", "\"\<fit_mm_KM\>\""}], "]"}], "]"}], 
                    " ", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "6"}]}]}], ")"}]}], ",", "Bold", ",", "20", 
                   ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                  "]"}]}], "]"}], ",", "\"\<NaN\>\""}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"assayType", "!=", "\"\<Inhibition\>\""}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"ToString", "[", 
                  RowBox[{"DecimalForm", "[", 
                   RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"1", ",", "\"\<fit_mm_curved_r2\>\""}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "3"}], "}"}]}], "]"}], "]"}], ",", "20",
                  ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
               ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"ToString", "[", 
                  RowBox[{"Normal", "[", 
                   RowBox[{
                    RowBox[{"grouped", "[", 
                    RowBox[{
                    "1", ",", "\"\<InhibitionFitObj optlin Unscaled\>\""}], 
                    "]"}], "[", "\"\<RSquared\>\"", "]"}], "]"}], "]"}], ",", 
                 "20", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                "]"}]}], "]"}]}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"TableForm", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"assayType", "!=", "\"\<Inhibition\>\""}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"MissingQ", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"1", ",", "\"\<fit_mm_curved_plot\>\""}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
                    RowBox[{"Show", "[", 
                    RowBox[{
                    RowBox[{"grouped", "[", 
                    RowBox[{"1", ",", "\"\<fit_mm_curved_plot\>\""}], "]"}], 
                    ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "All"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}]}], "]"}]}], 
                   "]"}], ",", 
                  RowBox[{"grouped", "[", 
                   RowBox[{"1", ",", "\"\<InhibitionFitPlot\>\""}], "]"}]}], 
                 "]"}], ",", 
                RowBox[{"Normal", "[", 
                 RowBox[{"grouped", "[", 
                  RowBox[{"1", ",", "\"\<eGFPIntensityPlot\>\""}], "]"}], 
                 "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"assayType", "==", "\"\<MeP\>\""}], ",", 
                  RowBox[{"Show", "[", 
                   RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"1", ",", "\"\<IsothermFit\>\""}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<[Pi] (uM)\>\"", ",", "\"\<Intensity\>\""}], 
                    "}"}]}]}], "]"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"MissingQ", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"1", ",", "\"\<StandardCurvePlot\>\""}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
                    RowBox[{"Show", "[", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"1", ",", "\"\<StandardCurvePlot\>\""}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{
                    "\"\<\!\(\*SuperscriptBox[StyleBox[\"R\",FontSlant->\"\
Italic\"], \"2\"]\)=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"DecimalForm", "[", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"1", ",", "\"\<StdCurveRSquared\>\""}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "3"}], "}"}]}], "]"}], "]"}]}], ",", 
                    "20", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                    "]"}], ",", 
                    RowBox[{"Scaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.8", ",", "0.25"}], "}"}], "]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
                   "]"}]}], "]"}], ",", 
                RowBox[{"Normal", "[", 
                 RowBox[{"grouped", "[", 
                  RowBox[{
                   RowBox[{"Length", "[", "grouped", "]"}], ",", 
                   "\"\<MaxLocalBackgroundPlot\>\""}], "]"}], "]"}]}], "}"}], 
              "]"}], ",", "SpanFromLeft", ",", 
             RowBox[{"TableForm", "[", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"PadRight", "[", 
                 RowBox[{
                  RowBox[{"(", "progresscurves", ")"}], ",", 
                  RowBox[{
                   RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "progresscurves", "]"}], "/", 
                    "2"}], "]"}], "*", "2"}], ",", "\"\<\>\""}], "]"}], ",", 
                "2"}], "]"}], "]"}], ",", "SpanFromLeft"}], "}"}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], ",", 
        RowBox[{"Alignment", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Center", ",", "Top"}], "}"}]}], ",", 
        RowBox[{"ItemSize", "\[Rule]", "Full"}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"safeExport", "[", 
    RowBox[{"file_String", ",", "args___"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
     "ChoiceDialog", "[", "\"\<Is export filename correct?\>\"", "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FileExistsQ", "[", "file", "]"}]}], "||", 
        RowBox[{
        "ChoiceDialog", "[", "\"\<File already exists. Overwrite?\>\"", 
         "]"}]}], ",", 
       RowBox[{"Export", "[", 
        RowBox[{"file", ",", "args"}], "]"}], ",", "$Failed"}], "]"}], ",", 
     "$Failed"}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateLocalBGMMPlot", "[", 
    RowBox[{"chamber_", ",", "datasetIN_", ",", "rateKey_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "column", ",", "measuredChamberRate", ",", "dataset", ",", 
       "backgroundRates"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dataset", "=", "datasetIN"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"measuredChamberRate", "=", 
       RowBox[{
        RowBox[{"Values", "[", 
         RowBox[{"Normal", "[", 
          RowBox[{"dataset", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"#Indices", "\[Equal]", "chamber"}], "&"}], "]"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
             "\"\<Indices\>\"", ",", "rateKey", ",", "\"\<MutantID\>\"", ",", 
              "\"\<SubstrateConc\>\"", ",", "\"\<Interpolation\>\"", ",", 
              "\"\<eGFPSummedI\>\"", ",", "\"\<eGFPSlope\>\""}], "}"}]}], 
           "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "5", ",", "6", ",", "7"}], "}"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"backgroundRates", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"measuredChamberRate", "[", 
            RowBox[{"[", 
             RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"measuredChamberRate", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "2", ",", 
               RowBox[{"chamber", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"measuredChamberRate", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "3"}], "]"}], "]"}], "/", 
                RowBox[{"measuredChamberRate", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "4"}], "]"}], "]"}]}], ")"}], "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "3"}]}]}], ")"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", 
           RowBox[{"Length", "[", "measuredChamberRate", "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"backgroundRates", ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
            RowBox[{"GrayLevel", "[", "0.5", "]"}]}], "]"}]}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<[S] (\[Mu]M)\>\"", ",", 
            "\"\<BG Rate/[E] (\!\(\*SuperscriptBox[\(s\), \(-1\)]\))\>\""}], 
           "}"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", "50"}]}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getLagoonIntensity", "[", 
   RowBox[{"dataset_", ",", "indices_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"dataset", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
        RowBox[{"indices", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
        RowBox[{"indices", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "3"}], "]"}], "]"}]}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.732734519313447*^9, 3.7327345196081133`*^9}, 
   3.7327347490239773`*^9, {3.732816795354333*^9, 3.732816923862208*^9}, {
   3.732817108610519*^9, 3.732817133925861*^9}, {3.732817916793426*^9, 
   3.732817917236841*^9}, {3.732817957911532*^9, 3.732817968559558*^9}, {
   3.732818744915225*^9, 3.732818778441243*^9}, {3.732819682017524*^9, 
   3.732819682703261*^9}, {3.732819713850809*^9, 3.7328197494685926`*^9}, {
   3.7328199689110518`*^9, 3.7328199978194027`*^9}, {3.732820032345057*^9, 
   3.7328200450938473`*^9}, 3.732820247429782*^9, {3.732821310369616*^9, 
   3.732821379044612*^9}, {3.732821427444298*^9, 3.732821443586916*^9}, {
   3.7328214959574966`*^9, 3.7328215665296383`*^9}, {3.7328217499603777`*^9, 
   3.732821769973604*^9}, {3.732821889876337*^9, 3.732821893708391*^9}, {
   3.732827678461425*^9, 3.732827996439777*^9}, {3.732828030379079*^9, 
   3.732828058610034*^9}, {3.7328282995683603`*^9, 3.732828299713214*^9}, {
   3.732828374802285*^9, 3.732828376060054*^9}, {3.732828408738184*^9, 
   3.73282841095273*^9}, {3.732828465926602*^9, 3.7328284711041307`*^9}, {
   3.732828696137602*^9, 3.732828719001034*^9}, {3.732829078498312*^9, 
   3.732829079084334*^9}, {3.7328291248049*^9, 3.732829220794536*^9}, {
   3.732829320938328*^9, 3.732829322684307*^9}, {3.732830061758718*^9, 
   3.732830085241437*^9}, {3.7328301205055437`*^9, 3.732830204045191*^9}, {
   3.7328304884940767`*^9, 3.7328305373073177`*^9}, {3.732830638817354*^9, 
   3.732830642442947*^9}, {3.732830685052309*^9, 3.732830712525044*^9}, {
   3.732830757872312*^9, 3.732830758866479*^9}, {3.732831049085156*^9, 
   3.732831051305684*^9}, {3.732831509171523*^9, 3.7328315235149117`*^9}, {
   3.732831560308303*^9, 3.732831562269196*^9}, {3.732832612641382*^9, 
   3.73283263889312*^9}, {3.7328327357011423`*^9, 3.732832777578816*^9}, {
   3.73283292059835*^9, 3.732832926404221*^9}, {3.732832989877523*^9, 
   3.73283301795411*^9}, {3.732833051028429*^9, 3.732833139644775*^9}, {
   3.732833277925747*^9, 3.732833288796887*^9}, 3.7328333349390173`*^9, {
   3.732833384496855*^9, 3.732833392030738*^9}, {3.7328338927022047`*^9, 
   3.732833894829845*^9}, {3.732900899557596*^9, 3.732900935441663*^9}, {
   3.732901367394619*^9, 3.732901377706794*^9}, {3.732901769517828*^9, 
   3.732901787255741*^9}, {3.73290307923744*^9, 3.732903176329398*^9}, {
   3.732903345221506*^9, 3.732903354967257*^9}, {3.732904174108536*^9, 
   3.732904184487029*^9}, {3.7329105287055597`*^9, 3.732910556222013*^9}, {
   3.7329113090682173`*^9, 3.732911346832547*^9}, {3.732914079585999*^9, 
   3.732914105962956*^9}, {3.732974145736065*^9, 3.732974173173771*^9}, {
   3.7329742242867613`*^9, 3.7329742410056467`*^9}, 3.732974278238517*^9, {
   3.7329743497072287`*^9, 3.7329743986938963`*^9}, {3.732975280109962*^9, 
   3.732975340732807*^9}, {3.732975443996851*^9, 3.732975511175679*^9}, {
   3.732975617720545*^9, 3.732975618960536*^9}, {3.7329757659111834`*^9, 
   3.732975826450919*^9}, {3.732976127826898*^9, 3.7329761905475597`*^9}, {
   3.732976408778714*^9, 3.7329764135262747`*^9}, {3.7329764781054497`*^9, 
   3.732976490556306*^9}, {3.732976594358453*^9, 3.732976601351533*^9}, {
   3.7329781807604094`*^9, 3.732978186385721*^9}, {3.732978289620611*^9, 
   3.732978308233391*^9}, {3.7329785000837708`*^9, 3.7329785060958977`*^9}, {
   3.732978571732277*^9, 3.732978575159197*^9}, {3.732978744166198*^9, 
   3.732978769075718*^9}, {3.732978805708539*^9, 3.732978866854314*^9}, {
   3.732986234380019*^9, 3.732986235630916*^9}, {3.732986269887087*^9, 
   3.732986315845764*^9}, 3.732986440197185*^9, {3.7329864717463923`*^9, 
   3.732986509294257*^9}, {3.732986778419056*^9, 3.732986812471532*^9}, {
   3.7329868575940723`*^9, 3.73298686237047*^9}, {3.732986936813566*^9, 
   3.732987015889592*^9}, {3.732987641441877*^9, 3.732987672151244*^9}, {
   3.732988314755776*^9, 3.732988407359716*^9}, {3.732992851563038*^9, 
   3.7329928592062187`*^9}, {3.732994063423956*^9, 3.732994117559099*^9}, {
   3.732994570266694*^9, 3.732994583163463*^9}, {3.73299469377363*^9, 
   3.732994699210587*^9}, {3.7329947394190063`*^9, 3.732994742874988*^9}, {
   3.733071262016165*^9, 3.733071270157156*^9}, {3.7330714850743847`*^9, 
   3.733071563833626*^9}, {3.7330734622294397`*^9, 3.7330735186273727`*^9}, {
   3.733073729282876*^9, 3.7330737608412848`*^9}, 3.733169206923683*^9, {
   3.7335233088329144`*^9, 3.733523309426903*^9}, {3.73352362789248*^9, 
   3.73352362856034*^9}, {3.733524795761491*^9, 3.733524796121278*^9}, {
   3.7335252140619802`*^9, 3.7335252217079678`*^9}, {3.733525584267128*^9, 
   3.733525681772966*^9}, 3.733526171688204*^9, 3.733526304008156*^9, 
   3.733526463370901*^9, {3.733527091076243*^9, 3.733527097641474*^9}, {
   3.733539934823739*^9, 3.7335399773576317`*^9}, {3.7335400413774433`*^9, 
   3.7335400697682943`*^9}, {3.733580032045431*^9, 3.733580121628709*^9}, 
   3.733580153452415*^9, {3.7335813405652227`*^9, 3.733581437247617*^9}, {
   3.733581682438512*^9, 3.733581686342469*^9}, {3.733581720503249*^9, 
   3.73358173786865*^9}, {3.733581804197515*^9, 3.7335818287569036`*^9}, {
   3.733581859794587*^9, 3.733581884356617*^9}, {3.733581927633657*^9, 
   3.733581930226996*^9}, {3.733581969823296*^9, 3.733582054015933*^9}, {
   3.733582639515339*^9, 3.733582641572007*^9}, {3.733582684276441*^9, 
   3.733582750335287*^9}, {3.733582785567206*^9, 3.73358287435598*^9}, {
   3.733584600930997*^9, 3.733584607194882*^9}, {3.733584714054255*^9, 
   3.733584716356299*^9}, {3.73358506776369*^9, 3.733585092481868*^9}, 
   3.733585448128916*^9, 3.733585497874857*^9, {3.7335855472924137`*^9, 
   3.733585577019393*^9}, {3.7335857627448883`*^9, 3.733585800406435*^9}, {
   3.7335860334726133`*^9, 3.7335861079667664`*^9}, {3.733586175079207*^9, 
   3.733586188616827*^9}, {3.733586244151793*^9, 3.73358626744171*^9}, {
   3.733586550540979*^9, 3.7335866068478203`*^9}, {3.7335866390357103`*^9, 
   3.733586664931033*^9}, {3.733586714172065*^9, 3.7335868153162823`*^9}, {
   3.733586974376109*^9, 3.733586974627686*^9}, 3.733588072743037*^9, {
   3.7336019045417213`*^9, 3.733601905303759*^9}, {3.7336206136293364`*^9, 
   3.7336206193441687`*^9}, {3.733621024353992*^9, 3.7336210517205133`*^9}, {
   3.733669699076766*^9, 3.733669752368237*^9}, {3.733669783903408*^9, 
   3.733669788953875*^9}, {3.7336699762465467`*^9, 3.733670048856525*^9}, {
   3.7336701335704603`*^9, 3.733670141827681*^9}, {3.733670882390532*^9, 
   3.7336710292956944`*^9}, {3.73367124841921*^9, 3.7336712807891417`*^9}, {
   3.733672555488739*^9, 3.733672586877502*^9}, {3.733672921850686*^9, 
   3.733673008619944*^9}, {3.7336730598959627`*^9, 3.7336730615052643`*^9}, {
   3.7336730938064337`*^9, 3.7336730994558992`*^9}, {3.733675371695413*^9, 
   3.7336754827263823`*^9}, {3.7336761723595953`*^9, 
   3.7336761874767838`*^9}, {3.733676226896441*^9, 3.733676227231368*^9}, 
   3.7336762932643337`*^9, {3.7336764360894136`*^9, 3.733676462987051*^9}, {
   3.733676654228499*^9, 3.733676655555245*^9}, {3.733676781291296*^9, 
   3.733676842221814*^9}, {3.7336770016928387`*^9, 3.7336771667108192`*^9}, 
   3.73367722337584*^9, {3.7336772607324057`*^9, 3.7336772632865057`*^9}, {
   3.733677393485457*^9, 3.733677418702405*^9}, {3.7336774792091703`*^9, 
   3.733677571764861*^9}, 3.733677616369994*^9, {3.733677657216261*^9, 
   3.733677670558032*^9}, {3.733677712087888*^9, 3.733677731217332*^9}, {
   3.7336784185058537`*^9, 3.733678451369204*^9}, {3.733678524648044*^9, 
   3.733678623411716*^9}, {3.733678715300603*^9, 3.7336787485152493`*^9}, {
   3.733678786818431*^9, 3.733678789098339*^9}, {3.733678832306197*^9, 
   3.7336788607933207`*^9}, {3.733688712406824*^9, 3.7336887125394707`*^9}, {
   3.733693090493923*^9, 3.733693097169958*^9}, {3.733693139136533*^9, 
   3.733693161138483*^9}, {3.733697474970674*^9, 3.733697565740472*^9}, {
   3.7336976485036077`*^9, 3.7336977247546387`*^9}, {3.73369775477815*^9, 
   3.733697858983171*^9}, 3.733698752852519*^9, {3.733711919122966*^9, 
   3.733712033602973*^9}, {3.733712142476025*^9, 3.73371215601793*^9}, {
   3.733712194644359*^9, 3.733712205317951*^9}, {3.733712410242655*^9, 
   3.7337124226400337`*^9}, {3.733840091140026*^9, 3.733840195195918*^9}, {
   3.733840237752372*^9, 3.733840250250374*^9}, {3.733840319598802*^9, 
   3.7338403582445498`*^9}, {3.733840397392871*^9, 3.7338404552781687`*^9}, {
   3.733840688229357*^9, 3.733840723278563*^9}, {3.73384079132439*^9, 
   3.733840791488686*^9}, {3.733840953527513*^9, 3.7338409689735107`*^9}, {
   3.7338410020657663`*^9, 3.733841071497875*^9}, {3.733841291839361*^9, 
   3.733841487710513*^9}, {3.733841560770466*^9, 3.733841562278227*^9}, {
   3.733842253577468*^9, 3.733842326858755*^9}, {3.733842373993767*^9, 
   3.733842403221422*^9}, {3.733852719154397*^9, 3.733852719855132*^9}, {
   3.733852852385244*^9, 3.733852869757676*^9}, {3.733854210801893*^9, 
   3.7338542758856897`*^9}, {3.733854359455984*^9, 3.7338543664343452`*^9}, 
   3.7338558767417173`*^9, {3.733855936522031*^9, 3.733856049895083*^9}, {
   3.733856081016286*^9, 3.733856145772255*^9}, 3.733857969472001*^9, {
   3.7338580539832287`*^9, 3.733858127782983*^9}, {3.7338581725775337`*^9, 
   3.733858304114077*^9}, {3.733858341065535*^9, 3.733858545854528*^9}, {
   3.73385903349981*^9, 3.733859036715982*^9}, {3.733877074842589*^9, 
   3.733877076248534*^9}, {3.7338771885352*^9, 3.733877192595757*^9}, {
   3.733877229237485*^9, 3.733877232295741*^9}, {3.7338776420395*^9, 
   3.733877661547361*^9}, {3.733877739334601*^9, 3.7338777402666063`*^9}, {
   3.733879387042007*^9, 3.733879414348316*^9}, {3.7339672498584433`*^9, 
   3.7339673046655493`*^9}, {3.73402356371062*^9, 3.73402356770019*^9}, {
   3.734023708136651*^9, 3.734023710750595*^9}, {3.7340238903443203`*^9, 
   3.7340238935148287`*^9}, {3.734024110417019*^9, 3.734024110752839*^9}, {
   3.7340245036924*^9, 3.734024711147957*^9}, {3.734030229005494*^9, 
   3.734030406068544*^9}, {3.734030442620573*^9, 3.734030456662874*^9}, {
   3.734030657291059*^9, 3.73403068034512*^9}, {3.734030882338685*^9, 
   3.734030886987094*^9}, {3.734031150862287*^9, 3.734031154991104*^9}, {
   3.734031189116404*^9, 3.734031196749164*^9}, {3.734031231800437*^9, 
   3.734031234085478*^9}, {3.7340313002582827`*^9, 3.734031306409092*^9}, {
   3.73403134806138*^9, 3.734031370079598*^9}, {3.734031443006906*^9, 
   3.73403146240981*^9}, {3.734031514290284*^9, 3.734031527778647*^9}, {
   3.734031618394594*^9, 3.73403162197003*^9}, {3.734031665887533*^9, 
   3.734031699044362*^9}, {3.734031740216502*^9, 3.734031786584784*^9}, {
   3.7340318240303926`*^9, 3.734031899010791*^9}, {3.7340329575265427`*^9, 
   3.734032968224812*^9}, {3.734033063800127*^9, 3.7340330673321953`*^9}, {
   3.734033114111987*^9, 3.734033158882132*^9}, {3.734033199067768*^9, 
   3.734033254847139*^9}, {3.734035004771326*^9, 3.734035048476191*^9}, {
   3.734035291331463*^9, 3.734035314116694*^9}, {3.734037345464484*^9, 
   3.734037435681094*^9}, {3.734037466606188*^9, 3.734037498229741*^9}, {
   3.734037557017335*^9, 3.734037558733577*^9}, {3.7340376222451277`*^9, 
   3.734037646054015*^9}, {3.734037694865665*^9, 3.734037728186798*^9}, 
   3.734037794450131*^9, {3.73403783023135*^9, 3.734037869263329*^9}, {
   3.734038097448037*^9, 3.734038105047957*^9}, {3.734038164043486*^9, 
   3.734038176019947*^9}, {3.734038464593*^9, 3.734038464972134*^9}, {
   3.73403850113256*^9, 3.734038537190089*^9}, {3.734038572244535*^9, 
   3.7340386489158983`*^9}, {3.7340387961618757`*^9, 3.734038861783283*^9}, {
   3.734038910402994*^9, 3.734038913425106*^9}, {3.7340391341577177`*^9, 
   3.7340391347845287`*^9}, {3.7340391747633533`*^9, 3.734039174922222*^9}, {
   3.734039271544156*^9, 3.7340393041820583`*^9}, {3.734039396109185*^9, 
   3.7340393965435867`*^9}, {3.7340394299324493`*^9, 3.734039430269527*^9}, {
   3.734056471256012*^9, 3.734056482887496*^9}, {3.734108907826023*^9, 
   3.7341089227366734`*^9}, {3.73413962721021*^9, 3.734139628347063*^9}, {
   3.734139698531764*^9, 3.734139744891881*^9}, {3.7341399261448793`*^9, 
   3.7341400191751547`*^9}, {3.734140118004689*^9, 3.734140121513126*^9}, {
   3.734140632137581*^9, 3.734140632713992*^9}, {3.734140903494321*^9, 
   3.73414090741297*^9}, {3.734140949191661*^9, 3.734141003867133*^9}, {
   3.734147348669187*^9, 3.734147355569417*^9}, {3.734147391867716*^9, 
   3.734147400977798*^9}, {3.734147443110043*^9, 3.7341474580540237`*^9}, {
   3.734147493527686*^9, 3.734147501496972*^9}, {3.734188446102886*^9, 
   3.734188450724017*^9}, {3.734188576599265*^9, 3.734188582673435*^9}, {
   3.734188622211691*^9, 3.7341886438921843`*^9}, {3.7341886916288843`*^9, 
   3.734188710253643*^9}, {3.7341893542820044`*^9, 3.734189355315675*^9}, {
   3.734210636503215*^9, 3.734210741856217*^9}, {3.734210969450945*^9, 
   3.7342110210210752`*^9}, {3.734211079707856*^9, 3.734211157430358*^9}, {
   3.734214225623418*^9, 3.7342142405478897`*^9}, {3.734214294908456*^9, 
   3.734214298283016*^9}, {3.7342143654675837`*^9, 3.734214365686014*^9}, {
   3.7342153449348373`*^9, 3.734215351088167*^9}, {3.7342154277597218`*^9, 
   3.7342154545046883`*^9}, {3.734215664995411*^9, 3.734215682294071*^9}, {
   3.734215747184712*^9, 3.734215748385208*^9}, {3.7342157952308817`*^9, 
   3.734215795535522*^9}, {3.734274435732127*^9, 3.73427448218687*^9}, {
   3.7342745406714087`*^9, 3.734274556427906*^9}, {3.734274990625436*^9, 
   3.734274991783163*^9}, {3.734276215609601*^9, 3.734276234499785*^9}, {
   3.734276364515594*^9, 3.7342763768166*^9}, {3.734276409839817*^9, 
   3.734276426324629*^9}, {3.7342820287414427`*^9, 3.734282058805512*^9}, {
   3.734282114732484*^9, 3.734282119865986*^9}, {3.734282182240958*^9, 
   3.7342822553612833`*^9}, {3.734283319508627*^9, 3.7342833309648952`*^9}, {
   3.734286856145506*^9, 3.734286874439314*^9}, {3.734288919988215*^9, 
   3.7342889384716883`*^9}, {3.734289081477953*^9, 3.734289083528413*^9}, {
   3.734289135010078*^9, 3.7342891444539013`*^9}, {3.734293095771418*^9, 
   3.7342931273060904`*^9}, {3.734530010413245*^9, 3.734530027482436*^9}, 
   3.734892518207178*^9, {3.734969161037169*^9, 3.734969161633851*^9}, {
   3.734972772092067*^9, 3.734972772580101*^9}, {3.734973117358954*^9, 
   3.734973117773056*^9}, {3.7349749078387423`*^9, 3.7349749211932507`*^9}, {
   3.734975908092991*^9, 3.73497591316818*^9}, {3.7349760112254477`*^9, 
   3.734976011778899*^9}, {3.73497619988389*^9, 3.73497620397626*^9}, {
   3.734976523392186*^9, 3.734976523565981*^9}, 3.7350630215811996`*^9, {
   3.735239982723688*^9, 3.735240021703841*^9}, {3.7352535564937897`*^9, 
   3.735253569134162*^9}, {3.735253628404776*^9, 3.735253672342433*^9}, {
   3.737570471338642*^9, 3.7375704755693617`*^9}, {3.737570525194326*^9, 
   3.737570548665976*^9}, {3.737570683139051*^9, 3.737570685774927*^9}, {
   3.737570716961128*^9, 3.737570721101488*^9}, {3.737571442244533*^9, 
   3.7375714475913153`*^9}, {3.737571598261306*^9, 3.7375716245116*^9}, {
   3.737571655561507*^9, 3.7375716770568237`*^9}, {3.737571811612252*^9, 
   3.7375718770374804`*^9}, {3.737571922241153*^9, 3.7375719612053823`*^9}, 
   3.7375773779167767`*^9, {3.737577463953577*^9, 3.737577476061975*^9}, {
   3.737577551662818*^9, 3.7375776364112577`*^9}, {3.7376542397741117`*^9, 
   3.73765424079217*^9}, {3.737658264561183*^9, 3.7376582897249117`*^9}, {
   3.737667970068084*^9, 3.737667970493943*^9}, {3.737669244351408*^9, 
   3.7376692476825037`*^9}, 3.737759040610319*^9, {3.7377641368929653`*^9, 
   3.737764138660573*^9}, {3.737769872828918*^9, 3.7377698763578587`*^9}, {
   3.73785412611405*^9, 3.737854176033641*^9}, {3.737916837752796*^9, 
   3.7379168424257936`*^9}, {3.737916875441382*^9, 3.737916896696247*^9}, {
   3.737916992595715*^9, 3.73791713363774*^9}, {3.737917445583084*^9, 
   3.7379174766238413`*^9}, 3.7379175127391243`*^9, {3.7379178466336117`*^9, 
   3.737917930779887*^9}, {3.737918039034185*^9, 3.737918068434218*^9}, {
   3.737918130159965*^9, 3.737918160234638*^9}, {3.737918232900326*^9, 
   3.737918241123665*^9}, {3.737918422693502*^9, 3.737918532926385*^9}, {
   3.7379186125954313`*^9, 3.737918612811882*^9}, {3.737918667754281*^9, 
   3.737918800948429*^9}, {3.737918893719441*^9, 3.7379188938841867`*^9}, {
   3.737937723263713*^9, 3.737937786241351*^9}, {3.737937883837834*^9, 
   3.737937884261117*^9}, {3.7379990144955378`*^9, 3.7379990392878103`*^9}, {
   3.7379995356414013`*^9, 3.737999541219558*^9}, {3.738084818854475*^9, 
   3.738084823213779*^9}, {3.738084923388687*^9, 3.738084925587632*^9}, 
   3.738361069534914*^9, {3.738361360483739*^9, 3.7383613609756117`*^9}, {
   3.738372571096882*^9, 3.738372573898559*^9}, {3.7390359121640787`*^9, 
   3.739035965052684*^9}, {3.739036069027746*^9, 3.7390360860507307`*^9}, {
   3.739148746346395*^9, 3.739148856536462*^9}, {3.7391489080428467`*^9, 
   3.739148951436638*^9}, {3.7391499761112843`*^9, 3.7391499807862167`*^9}, 
   3.7392096860878468`*^9, 3.739225460698892*^9, 3.7392266512209806`*^9, {
   3.7392268510507193`*^9, 3.739226862119904*^9}, {3.739288075673464*^9, 
   3.739288101968483*^9}, {3.7392896798765583`*^9, 3.73928968434632*^9}, {
   3.73928986218896*^9, 3.739289875236154*^9}, {3.739289908158998*^9, 
   3.7392899090340033`*^9}, {3.742224439940547*^9, 3.742224447661696*^9}, {
   3.742224538307603*^9, 3.742224538938814*^9}, {3.742224642844996*^9, 
   3.742224678153907*^9}, {3.742224743443242*^9, 3.74222474409764*^9}, {
   3.742227556604864*^9, 3.742227560854061*^9}, {3.742329152647215*^9, 
   3.7423292545993567`*^9}, {3.742329317158984*^9, 3.742329317512218*^9}, {
   3.74232936315471*^9, 3.742329413405532*^9}, {3.742330091477186*^9, 
   3.7423301042685423`*^9}, {3.742336852880432*^9, 3.742336856384544*^9}, {
   3.742337013544416*^9, 3.742337085116579*^9}, {3.7423377680067263`*^9, 
   3.742337769553334*^9}, {3.742337876377363*^9, 3.742337876815234*^9}, {
   3.742400988101449*^9, 3.742400989564479*^9}, {3.742401158648314*^9, 
   3.7424011607082443`*^9}, {3.7424013317098827`*^9, 3.742401372754129*^9}, {
   3.7424014150421333`*^9, 3.742401443234839*^9}, {3.7424016312033157`*^9, 
   3.7424017051667767`*^9}, {3.7424017477827063`*^9, 3.742401761376645*^9}, {
   3.742403100371982*^9, 3.742403111317441*^9}, {3.742406476261313*^9, 
   3.742406479579471*^9}, {3.742406532190673*^9, 3.742406599621166*^9}, {
   3.742406817412684*^9, 3.7424068825853643`*^9}, {3.7424069876102743`*^9, 
   3.742406989719503*^9}, {3.742407043739781*^9, 3.742407102498275*^9}, {
   3.742407659240632*^9, 3.742407664142395*^9}, {3.742407947966217*^9, 
   3.742408021489871*^9}, {3.7424082205334663`*^9, 3.742408244812108*^9}, {
   3.742484312795879*^9, 3.742484324696354*^9}, {3.742484385121903*^9, 
   3.742484432999587*^9}, {3.7424844901728897`*^9, 3.742484556639249*^9}, {
   3.742484604665175*^9, 3.742484617099135*^9}, {3.742484667011324*^9, 
   3.742484697310604*^9}, {3.7424847315015907`*^9, 3.74248475299867*^9}, {
   3.7424847867794447`*^9, 3.742484813500937*^9}, {3.742488656275077*^9, 
   3.742488689844284*^9}, {3.7424887305171537`*^9, 3.7424887704892673`*^9}, {
   3.742492169142069*^9, 3.742492194518332*^9}, {3.742740706144685*^9, 
   3.742740749298997*^9}, {3.7427461976477003`*^9, 3.7427462810554867`*^9}, {
   3.742746950433608*^9, 3.7427469794935093`*^9}, {3.742747184068451*^9, 
   3.742747184807315*^9}, {3.742748079635243*^9, 3.742748155841671*^9}, {
   3.74274902973811*^9, 3.742749094773481*^9}, {3.742749892565727*^9, 
   3.742749900741918*^9}, {3.742758309411875*^9, 3.742758319191327*^9}, {
   3.742835097584693*^9, 3.742835106789473*^9}, 3.7428420461260023`*^9, {
   3.74291003447348*^9, 3.742910086619381*^9}, {3.742910412364387*^9, 
   3.7429104739789333`*^9}, {3.7429130463392563`*^9, 3.742913097150812*^9}, {
   3.742913132150887*^9, 3.742913149643331*^9}, {3.742918918605036*^9, 
   3.742918937677882*^9}, {3.742927097568115*^9, 3.742927100013342*^9}, 
   3.742927353965307*^9, {3.742927490202506*^9, 3.7429274924390163`*^9}, {
   3.7520041496573887`*^9, 3.75200415100222*^9}, {3.752019112393065*^9, 
   3.752019123450185*^9}, {3.752022888817384*^9, 3.752022902699222*^9}, {
   3.752024309108433*^9, 3.752024309793751*^9}, {3.752028484486722*^9, 
   3.752028485350422*^9}, {3.752028522418043*^9, 3.752028527687737*^9}, {
   3.752028587871409*^9, 3.752028599500024*^9}, {3.752200473982185*^9, 
   3.752200484044595*^9}, {3.752804132365212*^9, 3.7528041394595346`*^9}, {
   3.7528066679477463`*^9, 3.752806669223419*^9}, {3.757558225752104*^9, 
   3.757558229208365*^9}, {3.757558276307562*^9, 3.7575582774104633`*^9}, 
   3.757874030075857*^9, {3.759347447114423*^9, 3.759347464726899*^9}, {
   3.759349276935472*^9, 3.759349277503755*^9}, {3.75934996672112*^9, 
   3.759349977307921*^9}, {3.759350140089383*^9, 3.759350227959701*^9}, {
   3.7593502792305393`*^9, 3.7593502806324997`*^9}, {3.761236387796117*^9, 
   3.761236400629051*^9}, {3.7612379938713827`*^9, 3.761238001277614*^9}, {
   3.761238041590514*^9, 3.7612380532404613`*^9}, {3.761238104083747*^9, 
   3.761238134082617*^9}, {3.7612382055392036`*^9, 3.761238224791182*^9}, 
   3.76123953891201*^9, {3.761240184349931*^9, 3.761240225229135*^9}, {
   3.761863344721733*^9, 3.761863346660695*^9}, {3.761863421710754*^9, 
   3.76186354039179*^9}, {3.7618655007480927`*^9, 3.761865529092486*^9}, 
   3.761865602668796*^9, {3.7618656935775146`*^9, 3.76186574476346*^9}, {
   3.763141769821855*^9, 3.763141812513338*^9}, {3.7631431534378157`*^9, 
   3.76314316670321*^9}, {3.7631434328320503`*^9, 3.763143433033471*^9}, {
   3.763143568341361*^9, 3.763143578193264*^9}, {3.7631437208799963`*^9, 
   3.763143792668941*^9}, {3.7633190768423*^9, 3.763319133708756*^9}, {
   3.7633192170613422`*^9, 3.76331927775095*^9}, {3.763319478464369*^9, 
   3.763319478941*^9}, {3.7633198345314207`*^9, 3.763319910995913*^9}, {
   3.763320336740574*^9, 3.7633204311536007`*^9}, {3.763320818192428*^9, 
   3.7633208262947474`*^9}, {3.7633254344411*^9, 3.7633254567483063`*^9}, {
   3.763325735473833*^9, 3.7633257445923157`*^9}, {3.7633258370902977`*^9, 
   3.763325863745228*^9}, {3.763325894284994*^9, 3.763325895882687*^9}, {
   3.7633259877449093`*^9, 3.763325996718651*^9}, {3.763326612634492*^9, 
   3.763326643609993*^9}, {3.7633266945216703`*^9, 3.763326747643875*^9}, {
   3.763333679484646*^9, 3.763333684414564*^9}, {3.763334272454219*^9, 
   3.763334282384315*^9}, {3.7633345917303963`*^9, 3.7633345997925587`*^9}, {
   3.763334647490739*^9, 3.763334650169149*^9}, {3.763335425774601*^9, 
   3.763335516348495*^9}, 3.763335654774632*^9, {3.763336060051754*^9, 
   3.763336060690052*^9}, {3.763336101100032*^9, 3.763336124554884*^9}, {
   3.763336440015896*^9, 3.7633364738850203`*^9}, {3.763336687281159*^9, 
   3.763336719811283*^9}, {3.763336790206963*^9, 3.763336793120699*^9}, {
   3.7633368359715157`*^9, 3.7633368761217623`*^9}, {3.763336912196064*^9, 
   3.763336982577499*^9}, {3.7633370178824472`*^9, 3.763337019038075*^9}, {
   3.763337636388022*^9, 3.7633376372012033`*^9}, 3.763337669974227*^9, {
   3.763338252562633*^9, 3.763338262994429*^9}, {3.763339074694655*^9, 
   3.763339077231188*^9}, {3.7633396296218567`*^9, 3.7633396425815496`*^9}, {
   3.763339765165024*^9, 3.763339843671054*^9}, {3.763339987537401*^9, 
   3.763339993033984*^9}, {3.763340292046756*^9, 3.763340308567081*^9}, {
   3.763340401253006*^9, 3.763340459519611*^9}, {3.7633413802950974`*^9, 
   3.763341380921515*^9}, {3.763341988380292*^9, 3.763342176341322*^9}, 
   3.763342236964665*^9, {3.7634739679964237`*^9, 3.763473968444363*^9}, {
   3.76347457381831*^9, 3.763474573938587*^9}, {3.763474656262084*^9, 
   3.76347465641502*^9}, {3.763477372824603*^9, 3.763477374127203*^9}, {
   3.763477447731777*^9, 3.763477476733918*^9}, {3.763477571800713*^9, 
   3.7634775744027033`*^9}, {3.763488057220046*^9, 3.763488089046433*^9}, {
   3.76349049548755*^9, 3.763490660303359*^9}, {3.764603090137055*^9, 
   3.764603091424403*^9}, {3.764603620784231*^9, 3.7646036246984873`*^9}, {
   3.7646036578596373`*^9, 3.764603669955345*^9}, {3.76460378636796*^9, 
   3.76460378880891*^9}, {3.764604410095043*^9, 3.7646044439515657`*^9}, {
   3.765655432034747*^9, 3.765655584359003*^9}, {3.765655803728656*^9, 
   3.765655823792241*^9}, {3.7656755100034723`*^9, 3.7656755639292707`*^9}, 
   3.765720530257605*^9, 3.776360416356163*^9, {3.776360455260848*^9, 
   3.7763604649838457`*^9}, {3.7763605005349493`*^9, 3.776360530121867*^9}, {
   3.776360649775593*^9, 3.776360697429265*^9}, {3.78422138235775*^9, 
   3.78422139634696*^9}, {3.78422199880898*^9, 3.784222014754757*^9}, {
   3.784222993510854*^9, 3.784222996813251*^9}, {3.7842242690343637`*^9, 
   3.784224270464324*^9}, {3.7842243009035788`*^9, 3.784224301114068*^9}, {
   3.784342096470786*^9, 3.784342121152666*^9}, {3.784343755504899*^9, 
   3.784343761593663*^9}, {3.784425880084114*^9, 3.784425881451964*^9}, {
   3.7844259456815042`*^9, 3.784425966331558*^9}, {3.792861570275591*^9, 
   3.792861609794448*^9}, {3.7928616561521883`*^9, 3.792861683539857*^9}, {
   3.792861856115205*^9, 3.792861856673489*^9}, {3.7928658988376503`*^9, 
   3.792865910948436*^9}, {3.793038224497892*^9, 3.793038253838516*^9}, {
   3.793038305667427*^9, 3.793038305964476*^9}, {3.793039498669478*^9, 
   3.79303949948279*^9}, {3.7930396334916153`*^9, 3.793039664075802*^9}, 
   3.793039709047784*^9, {3.793039895051839*^9, 3.793039917417472*^9}, {
   3.7930403492428627`*^9, 3.793040371357341*^9}, {3.793040404409552*^9, 
   3.7930404947504797`*^9}, {3.7930407299795027`*^9, 3.793040739642559*^9}, {
   3.793040787727357*^9, 3.793040824749352*^9}, {3.793041051379258*^9, 
   3.793041058970337*^9}, {3.793041280017475*^9, 3.793041285935711*^9}, {
   3.79304133730263*^9, 3.793041359631241*^9}, {3.793042055251103*^9, 
   3.7930420594482613`*^9}, {3.7930420931212797`*^9, 3.79304209344431*^9}, {
   3.793042142730053*^9, 3.793042224873193*^9}, {3.7930430753354797`*^9, 
   3.7930430764414883`*^9}, {3.79304619908255*^9, 3.7930462092966633`*^9}, {
   3.7930462499426117`*^9, 3.793046250080312*^9}, {3.793046280483221*^9, 
   3.793046290409607*^9}, {3.793048154681027*^9, 3.793048155997383*^9}, {
   3.793399160621101*^9, 3.793399169576914*^9}, {3.793399204555914*^9, 
   3.793399209314941*^9}, {3.7933995213357487`*^9, 3.793399529176114*^9}, {
   3.7934008342460012`*^9, 3.7934008408723087`*^9}, 3.7934012133609457`*^9, {
   3.793473728062006*^9, 3.793473760141912*^9}, {3.793473816673665*^9, 
   3.7934738590054703`*^9}, {3.793473920668126*^9, 3.7934739208122253`*^9}, {
   3.79347429175086*^9, 3.793474292278181*^9}, {3.7934743518452997`*^9, 
   3.7934743766429987`*^9}, {3.7934745498784647`*^9, 3.793474605361286*^9}, {
   3.793474719348978*^9, 3.7934747347577753`*^9}, 3.793485053581587*^9, {
   3.793485267123506*^9, 3.793485279078417*^9}, {3.793485905149825*^9, 
   3.793486007716476*^9}, {3.79348642841118*^9, 3.793486435840679*^9}, {
   3.79348662027815*^9, 3.7934866300323477`*^9}, {3.793487363806924*^9, 
   3.793487435809469*^9}, {3.79348747243509*^9, 3.793487474634262*^9}, {
   3.793487729813982*^9, 3.793487739108055*^9}, {3.793487856318099*^9, 
   3.793487904397994*^9}, {3.793493611844008*^9, 3.793493626323978*^9}, 
   3.793493675617901*^9, 3.793536848749448*^9, {3.7935368893173857`*^9, 
   3.79353689632992*^9}, 3.793536948560233*^9, {3.7935395222002087`*^9, 
   3.7935397090768003`*^9}, {3.79362739408668*^9, 3.793627464621166*^9}, {
   3.793627769290358*^9, 3.793627780453302*^9}, {3.793627889418334*^9, 
   3.793627895963977*^9}, {3.793627927178837*^9, 3.793627927870612*^9}, {
   3.793627959662096*^9, 3.793627967376595*^9}, {3.793650348867193*^9, 
   3.793650370251377*^9}, {3.793653215555936*^9, 3.793653228487904*^9}, {
   3.7936534578826*^9, 3.793653460031248*^9}, {3.793655172501029*^9, 
   3.7936552512688847`*^9}, {3.793990360291472*^9, 3.7939903642843857`*^9}, {
   3.793990399268813*^9, 3.793990414488402*^9}, {3.7939904551758537`*^9, 
   3.793990464856848*^9}, 3.793997555803751*^9, {3.7939990467752666`*^9, 
   3.793999075650279*^9}, {3.794143448522334*^9, 3.794143455923582*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b11feaba-9b65-439a-84d8-a6f263a575fb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"remapNames", "[", "dataset_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"replaced1", ",", "replaced2", ",", "newDs"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"remappingRules", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<P76G\>\"", "\[Rule]", "\"\<P92G\>\""}], ",", 
         RowBox[{"\"\<H172G\>\"", "\[Rule]", "\"\<I188G*\>\""}], ",", 
         RowBox[{"\"\<T268G\>\"", "\[Rule]", "\"\<D284G\>\""}], ",", 
         RowBox[{"\"\<A364G\>\"", "\[Rule]", "\"\<M380G\>\""}], ",", 
         RowBox[{"\"\<N460G\>\"", "\[Rule]", "\"\<L476G\>\""}], ",", 
         RowBox[{"\"\<T84V\>\"", "\[Rule]", "\"\<D101V\>\""}], ",", 
         RowBox[{"\"\<T189V\>\"", "\[Rule]", "\"\<N206V\>\""}], ",", 
         RowBox[{"\"\<G289V\>\"", "\[Rule]", "\"\<G308V\>\""}], ",", 
         RowBox[{"\"\<I393V\>\"", "\[Rule]", "\"\<D411V\>\""}], ",", 
         RowBox[{"\"\<P497V\>\"", "\[Rule]", "\"\<P513V\>\""}], ",", 
         RowBox[{"\"\<H486E\>\"", "\[Rule]", "\"\<H353E\>\""}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"addFlags", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<P448V\>\"", "\[Rule]", "\"\<P448V*\>\""}], ",", 
         RowBox[{"\"\<Q131V\>\"", "\[Rule]", "\"\<Q131V*\>\""}], ",", 
         RowBox[{"\"\<T425G\>\"", "\[Rule]", "\"\<T425G*\>\""}], ",", 
         RowBox[{"\"\<N205G\>\"", "\[Rule]", "\"\<N205G*\>\""}], ",", 
         RowBox[{"\"\<Y192G\>\"", "\[Rule]", "\"\<Y192G*\>\""}], ",", 
         RowBox[{"\"\<G289V\>\"", "\[Rule]", "\"\<G289V*\>\""}], ",", 
         RowBox[{"\"\<I188G\>\"", "\[Rule]", "\"\<I188G*\>\""}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dsToAssociation", "=", 
       RowBox[{"Normal", "[", "dataset", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"replaced1", "=", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"#1", ",", "#2", ",", "Infinity"}], "]"}], "&"}], ",", 
         "dsToAssociation", ",", "remappingRules"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"replaced2", "=", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"#1", ",", "#2", ",", "Infinity"}], "]"}], "&"}], ",", 
         "replaced1", ",", "addFlags"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"newDs", "=", 
       RowBox[{"Dataset", "[", "replaced2", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"newDs", "[", 
       RowBox[{"All", ",", 
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"#", ",", 
           RowBox[{"\"\<KnownBadMutant\>\"", "\[Rule]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"addFlags", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "#MutantID"}],
                "]"}], ",", "1", ",", "0"}], "]"}]}]}], "]"}], "&"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EdgeForm", "[", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "0.125", "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"FaceForm", "[", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"GrayLevel", "[", "0.5", "]"}], ",", 
          RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], ",", 
       RowBox[{"Disk", "[", "]"}], ",", 
       RowBox[{"Opacity", "[", "0.1", "]"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeProgressCurvePlotNew", "[", 
    RowBox[{
    "timeData_", ",", "progressCurve_", ",", "rate_", ",", "intercept_", ",", 
     "pointsUsed_", ",", "substrateConc_", ",", "mutantID_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "data", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "[", "progressCurve", "]"}], "||", 
        RowBox[{"MissingQ", "[", "rate", "]"}], "||", 
        RowBox[{"MissingQ", "[", "intercept", "]"}], "||", 
        RowBox[{"MissingQ", "[", "pointsUsed", "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"timeData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{"progressCurve", "[", 
                RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", "timeData", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"noPointsFit", "=", 
         RowBox[{"Length", "[", "pointsUsed", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"pUsed", "=", "pointsUsed"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "set", " ", "plotting", " ", "and", " ", "padding", " ", "values"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"xmin", "=", 
         RowBox[{
          RowBox[{"Last", "[", "data", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ymin", "=", 
         RowBox[{
          RowBox[{"Last", "[", "data", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"padding", "=", "50"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"xscale", "=", "1.4"}], ";", "\[IndentingNewLine]", 
        RowBox[{"yscale", "=", "1.1"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"firstPointY", "=", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
          RowBox[{"substrateConc", "*", "0.05"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"dataPlot", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"data", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"pUsed", ",", "#"}], "]"}], "\[Equal]", "False"}], 
              "&"}]}], "]"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "200"}], ",", 
                RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"firstPointY", ",", 
                RowBox[{
                 RowBox[{"(", "substrateConc", ")"}], "*", "yscale"}]}], 
               "}"}]}], "}"}]}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"20", ",", "Black", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], 
           ",", 
           RowBox[{"PlotMarkers", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"p", ",", "0.03"}], "}"}]}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", "substrateConc", "}"}]}], "}"}]}], ",", 
           RowBox[{"GridLinesStyle", "\[Rule]", "Dashed"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Gray", ",", 
              RowBox[{"PointSize", "[", "0.015", "]"}]}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Time (s)\>\"", ",", "\"\<[Product] (\[Mu]M)\>\""}], 
             "}"}]}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
           RowBox[{"FrameTicks", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"IntegerQ", "[", "#", "]"}], ",", "#", ",", 
                    RowBox[{"N", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
                 RowBox[{"FindDivisions", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{"substrateConc", "*", "0.025"}]}], ",", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
                    RowBox[{"substrateConc", "*", "1.05"}]}]}], "}"}], ",", 
                   "6"}], "]"}]}], ",", "None"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"IntegerQ", "[", "#", "]"}], ",", "#", ",", 
                    RowBox[{"N", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
                 RowBox[{"FindDivisions", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
                   ",", "6"}], "]"}]}], ",", "None"}], "}"}]}], "}"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"dataPlotFitPoints", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{"pointsUsed", ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "200"}], ",", 
                RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"firstPointY", ",", 
                RowBox[{
                 RowBox[{"(", "substrateConc", ")"}], "*", "yscale"}]}], 
               "}"}]}], "}"}]}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"20", ",", "Black", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], 
           ",", 
           RowBox[{"PlotMarkers", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"p", ",", "0.06"}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Gray", ",", 
              RowBox[{"PointSize", "[", "0.025", "]"}]}], "]"}]}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"fitPlot", "=", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"rate", "*", "time"}], "+", "intercept"}], ",", 
           RowBox[{"{", 
            RowBox[{"time", ",", 
             RowBox[{"-", "200"}], ",", 
             RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "200"}], ",", 
                RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"firstPointY", ",", 
                RowBox[{
                 RowBox[{"(", "substrateConc", ")"}], "*", "yscale"}]}], 
               "}"}]}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"mutantList", ",", "mutantID"}], "]"}], ",", 
                RowBox[{"Darker", "[", "Red", "]"}], ",", "Black"}], "]"}], 
              ",", "Dashed", ",", 
              RowBox[{"Thickness", "[", "0.0075", "]"}]}], "]"}]}]}], "]"}]}],
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"dataPlot", ",", "dataPlotFitPoints", ",", "fitPlot", ",", 
          RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeProgressCurveForColumn", "[", 
    RowBox[{
    "timeData_", ",", "progressCurve_", ",", "rate_", ",", "intercept_", ",", 
     "pointsUsed_", ",", "substrateConc_", ",", "mutantID_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "data", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "[", "progressCurve", "]"}], "||", 
        RowBox[{"MissingQ", "[", "rate", "]"}], "||", 
        RowBox[{"MissingQ", "[", "intercept", "]"}], "||", 
        RowBox[{"MissingQ", "[", "pointsUsed", "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"timeData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{"progressCurve", "[", 
                RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", "timeData", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"noPointsFit", "=", 
         RowBox[{"Length", "[", "pointsUsed", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"pUsed", "=", "pointsUsed"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "set", " ", "plotting", " ", "and", " ", "padding", " ", "values"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"xmin", "=", 
         RowBox[{
          RowBox[{"Last", "[", "data", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ymin", "=", 
         RowBox[{
          RowBox[{"Last", "[", "data", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"padding", "=", "50"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"xscale", "=", "1.3"}], ";", "\[IndentingNewLine]", 
        RowBox[{"yscale", "=", "1.4"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"firstPointY", "=", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
          RowBox[{"substrateConc", "*", "0.25"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"dataPlot", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"data", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"pUsed", ",", "#"}], "]"}], "\[Equal]", "False"}], 
              "&"}]}], "]"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "200"}], ",", 
                RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"data", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
                 RowBox[{"substrateConc", "*", "0.003"}]}], ",", 
                RowBox[{
                 RowBox[{"Max", "[", 
                  RowBox[{"data", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
                 RowBox[{"substrateConc", "*", "0.003"}]}]}], "}"}]}], 
             "}"}]}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"20", ",", "Black", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], 
           ",", 
           RowBox[{"PlotMarkers", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"p", ",", "0.05"}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Gray", ",", 
              RowBox[{"PointSize", "[", "0.015", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "0.3"}], ",", 
           RowBox[{"FrameTicks", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"IntegerQ", "[", "#", "]"}], ",", "#", ",", 
                  RowBox[{"N", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
               RowBox[{"FindDivisions", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{"substrateConc", "*", "0.002"}]}], ",", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
                    RowBox[{"substrateConc", "*", "0.002"}]}]}], "}"}], ",", 
                 "3"}], "]"}]}]}], "}"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"69", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"10", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"dataPlotFitPoints", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{"pointsUsed", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"20", ",", "Black", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], 
           ",", 
           RowBox[{"PlotMarkers", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"p", ",", "0.09"}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "0.3"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Gray", ",", 
              RowBox[{"PointSize", "[", "0.025", "]"}]}], "]"}]}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"fitPlot", "=", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"rate", "*", "time"}], "+", "intercept"}], ",", 
           RowBox[{"{", 
            RowBox[{"time", ",", 
             RowBox[{"-", "200"}], ",", 
             RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"mutantList", ",", "mutantID"}], "]"}], ",", 
                RowBox[{"Darker", "[", "Red", "]"}], ",", "Black"}], "]"}], 
              ",", "Dashed", ",", 
              RowBox[{"Thickness", "[", "0.0075", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "0.3"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"dataPlot", ",", "dataPlotFitPoints", ",", "fitPlot"}], 
         "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeLocalBackgroundRatePlot", "[", 
    RowBox[{
    "timeData_", ",", "progressCurve_", ",", "rate_", ",", "intercept_", ",", 
     "pointsUsed_", ",", "substrateConc_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "[", "progressCurve", "]"}], "||", 
        RowBox[{"MissingQ", "[", "rate", "]"}], "||", 
        RowBox[{"MissingQ", "[", "intercept", "]"}], "||", 
        RowBox[{"MissingQ", "[", "pointsUsed", "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"timeData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{"progressCurve", "[", 
                RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", "timeData", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"noPointsFit", "=", 
         RowBox[{"Length", "[", "pointsUsed", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"pUsed", "=", "pointsUsed"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "set", " ", "plotting", " ", "and", " ", "padding", " ", "values"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"xmin", "=", 
         RowBox[{
          RowBox[{"Last", "[", "data", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ymin", "=", 
         RowBox[{
          RowBox[{"Last", "[", "data", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"padding", "=", "50"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"xscale", "=", "1.3"}], ";", "\[IndentingNewLine]", 
        RowBox[{"yscale", "=", "1.4"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"firstPointY", "=", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
          RowBox[{"substrateConc", "*", "0.25"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"dataPlot", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{"data", ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "200"}], ",", 
                RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"firstPointY", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"firstPointY", "+", "substrateConc"}], ")"}], "*", 
                 "yscale"}]}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"20", ",", "Black", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], 
           ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"Darker", "[", "Red", "]"}], ",", 
              RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Time (s)\>\"", ",", "\"\<[Product] (\[Mu]M)\>\""}], 
             "}"}]}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "0.8"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"fitPlot", "=", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"rate", "*", "time"}], "+", "intercept"}], ",", 
           RowBox[{"{", 
            RowBox[{"time", ",", 
             RowBox[{"-", "200"}], ",", 
             RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "200"}], ",", 
                RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"firstPointY", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"firstPointY", "+", "substrateConc"}], ")"}], "*", 
                 "yscale"}]}], "}"}]}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"Darker", "[", "Red", "]"}], ",", 
              RowBox[{"Opacity", "[", "0.5", "]"}], ",", "Dashed"}], 
             "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"dataPlot", ",", "fitPlot", ",", 
          RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mutantList", "=", 
    RowBox[{"{", 
     RowBox[{"\"\<T79G\>\"", ",", "\"\<Skipped\>\""}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findNearestBackgroundChambers", "[", 
   RowBox[{"dataset_", ",", "indices_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "column", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"column", "=", 
      RowBox[{"indices", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"lbChambers", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{
        RowBox[{"dataset", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"mutantList", ",", "#MutantID"}], "]"}], "&&", 
            RowBox[{"#x", "\[Equal]", "column"}]}], "&"}], "]"}], "]"}], "[", 
        
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Indices\>\"", ",", "\"\<x\>\"", ",", "\"\<y\>\""}], 
          "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"sortedList", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"lbChambers", "[", 
              RowBox[{"n", ",", "\"\<y\>\""}], "]"}], "-", 
             RowBox[{"indices", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"lbChambers", "[", 
             RowBox[{"n", ",", "\"\<Indices\>\""}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "lbChambers", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"nearest", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"sortedList", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "<", "0"}], "&"}]}], "]"}], "]"}], 
           "\[GreaterEqual]", "1"}], ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"sortedList", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "<", "0"}], "&"}]}], "]"}], "]"}], ",", 
          RowBox[{"Missing", "[", "]"}]}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"sortedList", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}], 
           "\[GreaterEqual]", "1"}], ",", 
          RowBox[{"Min", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"sortedList", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}], ",", 
          RowBox[{"Missing", "[", "]"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Normal", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NumberQ", "[", 
             RowBox[{"nearest", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"sortedList", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                  RowBox[{"nearest", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"Missing", "[", "]"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NumberQ", "[", 
             RowBox[{"nearest", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"sortedList", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                  RowBox[{"nearest", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"Missing", "[", "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"Missing", "[", "]"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.792512588738029*^9, 3.792512684908637*^9}, {
   3.792512716966742*^9, 3.7925127181938763`*^9}, {3.792512750297155*^9, 
   3.792512910847747*^9}, {3.792513217095192*^9, 3.792513217395967*^9}, {
   3.7925132526610937`*^9, 3.792513276036131*^9}, {3.7925133474845133`*^9, 
   3.792513363938306*^9}, {3.792513408652465*^9, 3.792513539333538*^9}, {
   3.792513579852869*^9, 3.792513612516953*^9}, 3.792513678741858*^9, {
   3.792513740588335*^9, 3.7925137409125557`*^9}, 3.792513805707863*^9, {
   3.7925138457157907`*^9, 3.792514025431993*^9}, {3.792514077283537*^9, 
   3.79251411007856*^9}, {3.7925141615154343`*^9, 3.7925142224516363`*^9}, {
   3.792514269131424*^9, 3.7925143021905327`*^9}, {3.7925143322876263`*^9, 
   3.7925144077745256`*^9}, {3.792514444507687*^9, 3.792514453352578*^9}, {
   3.792790907410221*^9, 3.7927909083973207`*^9}, {3.7928881239186077`*^9, 
   3.79288812633424*^9}, {3.7928887070046873`*^9, 3.792888710275608*^9}, {
   3.792890620738483*^9, 3.792890620912527*^9}, {3.79294933888015*^9, 
   3.7929493905059633`*^9}, {3.792967379922966*^9, 3.792967400020512*^9}, {
   3.792967498020282*^9, 3.7929674997525806`*^9}, {3.7929675565463533`*^9, 
   3.792967566432143*^9}, {3.7929680169842854`*^9, 3.792968023386298*^9}, {
   3.792970840318304*^9, 3.7929709121605043`*^9}, {3.793038277145069*^9, 
   3.7930382846115923`*^9}, {3.793038326810471*^9, 3.793038337214036*^9}, {
   3.793391385552006*^9, 3.793391385952086*^9}, {3.793391423671051*^9, 
   3.793391539109181*^9}, {3.793391584300694*^9, 3.793391600180553*^9}, {
   3.7933921910112867`*^9, 3.793392232202244*^9}, {3.793392925470729*^9, 
   3.7933929257059517`*^9}, 3.793392985924855*^9, {3.793394288904241*^9, 
   3.79339428957915*^9}, {3.7933943539694147`*^9, 3.7933943927952967`*^9}, {
   3.7933944571736107`*^9, 3.793394559803838*^9}, {3.793394594347253*^9, 
   3.793394649246131*^9}, {3.793401984355837*^9, 3.793402059835465*^9}, {
   3.7934064972286367`*^9, 3.793406521552915*^9}, {3.7934757977224627`*^9, 
   3.793475836368185*^9}, {3.793476550451915*^9, 3.793476582984643*^9}, {
   3.793476615701952*^9, 3.793476624776288*^9}, {3.793477580589815*^9, 
   3.7934776113413897`*^9}, {3.79347764540174*^9, 3.7934776692496243`*^9}, {
   3.793479688923099*^9, 3.793479691708997*^9}, {3.793480136603736*^9, 
   3.793480138419362*^9}, {3.7934810313131933`*^9, 3.793481041406597*^9}, {
   3.793485680702982*^9, 3.793485697215722*^9}, {3.793486366163221*^9, 
   3.7934864104968*^9}, {3.793488006731082*^9, 3.793488008751878*^9}, {
   3.793488676141395*^9, 3.793488713710888*^9}, {3.793489402237664*^9, 
   3.79348941552089*^9}, {3.7934895995145683`*^9, 3.793489599960064*^9}, {
   3.7934896802861357`*^9, 3.793489682786812*^9}, {3.793492064762759*^9, 
   3.793492065454651*^9}, {3.7934974130196*^9, 3.7934974134517183`*^9}, {
   3.793497603344038*^9, 3.793497606989853*^9}, {3.793497689799078*^9, 
   3.793497690050009*^9}, 3.7935369582695227`*^9, {3.793539426326148*^9, 
   3.793539428531986*^9}, {3.793640419781456*^9, 3.7936404240228148`*^9}, {
   3.7936404740593777`*^9, 3.793640474886428*^9}, {3.793723625737355*^9, 
   3.793723629264634*^9}, {3.793724485292006*^9, 3.793724490900524*^9}, {
   3.793724926341971*^9, 3.793724926479993*^9}, {3.793724990006173*^9, 
   3.793724991733633*^9}, {3.7937255187949963`*^9, 3.793725525546484*^9}, {
   3.793726205134506*^9, 3.7937262057663097`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"13147da3-16da-43e1-be47-14d842a63afe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"datasetIn", "=", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/craig/Dropbox/craig_analysis_and_simulation_code/aggregate_\
data_tables/aggregate_notebooks/cMUP/chipCorrection_191007/190630_S2d1PafA_\
cMUP_SlowChip_190918chipCorrected.csv.bz2\>\"", "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"keys", "=", 
     RowBox[{"datasetIn", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"dataset", "=", 
     RowBox[{"remapNames", "[", 
      RowBox[{"Dataset", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Association", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"keys", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "\[Rule]", 
                RowBox[{"datasetIn", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "n"}], "]"}], "]"}]}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", 
                RowBox[{"Length", "[", "keys", "]"}]}], "}"}]}], "]"}], "]"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "[", "datasetIn", "]"}], "-", "1"}]}], 
            "}"}]}], "]"}], ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"dataset", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "5"}], "]"}], "]"}]}], "*)"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataset", "=", 
     RowBox[{"remapNames", "[", 
      RowBox[{
      "Import", "[", 
       "\"\</Users/craig/Dropbox/HTMEK_processing/MecMUP_QC_200220/long_\
timecourse_191209/preprocessed.wxf\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"dataset", "[", 
    RowBox[{"1", ";;", "2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.792512361371608*^9, 3.7925123633454647`*^9}, {
   3.79251292160296*^9, 3.792512944594411*^9}, {3.792512977571871*^9, 
   3.792512986021023*^9}, {3.7925130322246027`*^9, 3.7925130953997793`*^9}, {
   3.792790911932152*^9, 3.792790914473176*^9}, {3.793630483897608*^9, 
   3.793630495895368*^9}, {3.79381990215135*^9, 3.7938199114836807`*^9}, {
   3.7938312002588863`*^9, 3.7938312575322933`*^9}, {3.7938807614682417`*^9, 
   3.7938807667134733`*^9}, {3.793883959628894*^9, 3.793883969325348*^9}, {
   3.793887776192258*^9, 3.7938877802624073`*^9}, {3.793894784981091*^9, 
   3.793894788943947*^9}, 3.793900331452413*^9, {3.793986953181116*^9, 
   3.793986963368672*^9}, {3.793986996127293*^9, 3.793986998124413*^9}, {
   3.7941434807400007`*^9, 3.79414350487959*^9}, 3.794151278965157*^9, 
   3.794152174998117*^9, 3.7941580445100203`*^9, {3.794165847795272*^9, 
   3.79416586162453*^9}, {3.794176506122348*^9, 3.7941765271091843`*^9}, {
   3.7952173505610437`*^9, 3.7952173889151487`*^9}, {3.795217599647032*^9, 
   3.795217630214446*^9}, {3.795222605735026*^9, 3.79522261127874*^9}, {
   3.795292472212422*^9, 3.7952924875071297`*^9}, {3.7952986181391697`*^9, 
   3.7952986187206163`*^9}, 3.795461616221799*^9, 3.7956381317340317`*^9, 
   3.7956423454812*^9, {3.795642413758376*^9, 3.795642422070634*^9}, {
   3.7956453623679857`*^9, 3.795645367688005*^9}, 3.795651969765709*^9, 
   3.7956571999352503`*^9, {3.795659525134777*^9, 3.795659525608671*^9}, {
   3.7957902529083347`*^9, 3.7957902591425867`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"310ed2cf-acb5-40d5-a698-3c525c3cd5e8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "GlobalExperimentIndex" -> "191208_S2_d3_MecMUP_1", "Date" -> "191208",
         "Experiment" -> "PafA_SlowestChip_LongMecMUP", "Setup" -> 2, 
        "Device" -> "d3", "PhosphateSensorConc" -> 0, "eGFPSlope" -> 143000., 
        "x" -> 28, "y" -> 19, "median_chamber" -> 988, "sum_chamber" -> 
        3580748, "std_chamber" -> 48, "x_center_chamber" -> 57, 
        "y_center_chamber" -> 53, "radius_chamber" -> 34, 
        "xslice" -> {2277, 2377}, "yslice" -> {5898, 5998}, "MutantID" -> 
        "T79G", "time_s" -> 27965, "median_button_Button_Quant" -> 1121, 
        "summed_button_Button_Quant" -> 2292511, "eGFPSummedI" -> 2244441, 
        "std_button_Button_Quant" -> 3643, "x_button_center_Button_Quant" -> 
        60, "y_button_center_Button_Quant" -> 47, 
        "radius_button_disk_Button_Quant" -> 15, 
        "median_button_annulus_Button_Quant" -> 36, 
        "summed_button_annulus_normed_Button_Quant" -> 48070, 
        "std_button_annulus_localBG_Button_Quant" -> 82, 
        "inner_radius_button_annulus_Button_Quant" -> 15, 
        "outer_radius_button_annulus_Button_Quant" -> 15, 
        "xslice_Button_Quant" -> {2277, 2377}, 
        "yslice_Button_Quant" -> {5898, 5998}, "MutantID_Button_Quant" -> 
        "T79G", "series_index" -> "2000uM_MecMUP", "Indices" -> {28, 19}, 
        "Times" -> {27965, 270, 71165, 181, 724, 542, 20765, 42365, 1865, 
         45965, 63965, 24365, 53165, 633, 38765, 13565, 2765, 90, 17165, 815, 
         3965, 1265, 56765, 965, 9965, 67565, 60365, 361, 49565, 451, 6365, 
         31565, 35165, 0}, 
        "MedianIntensities" -> {988, 995, 987, 994, 990, 992, 990, 987, 993, 
         987, 984, 990, 986, 991, 987, 990, 994, 995, 989, 991, 994, 993, 985,
          991, 990, 982, 983, 993, 984, 993, 989, 986, 987, 998}, "ExpIndex" -> 
        1, "AssayType" -> 1, "SubstrateConc" -> 2000., 
        "InhibitorConcentrations" -> 0., "Zn2+" -> 100., 
        "SC_Concentrations" -> {50, 5, 25, 2, 100, 10, 0}, 
        "SC_Median_Chamber" -> {7323, 1574, 3889, 1220, 13320, 2200, 984}, 
        "StdCurveFitObject" -> 
        FittedModel[{
          "Linear", {956.1830668526676, 
           124.04540902099652`}, {{$CellContext`x}, {1, $CellContext`x}}, {0, 
           0}}, {{1., 1., 1., 1., 1., 1., 1.}}, {{50, 7323}, {5, 1574}, {25, 
          3889}, {2, 1220}, {100, 13320}, {10, 2200}, {0, 984}}, {{1., 50.}, {
          1., 5.}, {1., 25.}, {1., 2.}, {1., 100.}, {1., 10.}, {1., 0.}}, 
          Function[Null, 
           Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]], 
        "StdCurveSlope" -> 124.04540902099652`, "StdCurveIntercept" -> 
        956.1830668526676, "StdCurveRSquared" -> 0.999527489777433, 
        "StandardCurvePlot" -> Graphics[{{{}, {{{
               Directive[
                AbsoluteThickness[1.6], 
                RGBColor[0, 
                 Rational[2, 3], 
                 Rational[2, 3]], 
                PointSize[0.02]], 
               
               Point[{{50., 7323.}, {5., 1574.}, {25., 3889.}, {2., 1220.}, {
                100., 13320.}, {10., 2200.}, {0., 984.}}]}}, {{
               Directive[
                AbsoluteThickness[1.6], 
                RGBColor[0, 
                 Rational[2, 3], 
                 Rational[2, 3]], 
                PointSize[0.02]]}, {}}, {{
               Directive[
                AbsoluteThickness[1.6], 
                RGBColor[0, 
                 Rational[2, 3], 
                 Rational[2, 3]], 
                PointSize[0.02]]}, {}}}, {{}, {}}}, {{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  Rational[2, 3], 
                  Rational[2, 3]]], 
                Line[CompressedData["
1:eJwVxX040wkAB/A5JReXdBzlZVaoyVtGUx37eslb8jKvW1eRrsJ1VA+iTXK9
0JM16g4pqSWrpKjJW0zeZr/S22Jnl5rkulTUvK7nctcfn+dD2ZbE/PkbEom0
8X9fNxI42opnWt3XXjVLS1PmYfr4hP8abhlDFZ6R+4sGD4VOKZGG3JuMytne
klgKDzu0RD9pcsUMcgRfvCGWh6Ax2VY15xFjDklzvoWSB8/X25UTnJeMhxFv
zkpenkTTC9uLKs4YoyaLpdQd42PmL372Jw4JvraW87aMFiBg06LkNHt9DJYt
0JnrXQi6YDC39+hiCMw8zZ2DS8DP/F50ud8CgeG7ewx8zmNz4vNXlwKs4CxL
NeF2X0DDEZucp79SEZ69qY9GCDC2lTzSPmIH25aE0XdT5SigVBgrqauglk88
y1wixDg1a3KKTkN/qlV7uPFVeC26Tkve64J9goML7Dwqwc4vuUY6Rod5eGaM
//oqjBosNzTKX4OBZA7Ok29iz36tAV7XOujM9nxZ4lSNxr0VSnO5G/BQJXZ1
qkG6ddDSnPnAk2G76j7fW5AZFt5vW+aBgXfl2nHRt3HqEU7r2Hhi3Hksjh8p
gt+B0zqHfbywoz34vXtCLWI/+pVph3hD+fuhjJOJd7AnqmLobtJ61FdJXGKz
6yBmyCirj/tAp3ZjNPl0PfapYjkN+b7YMXsp8+CpBpgWFh9NuuEHM77+0xhh
I6haTlWODf4Y2BaycuhqE1KninputwRgseWDt2HCu6iXXymNV2xAte1WuXdj
M2KOmJywGQoEM62tu6+xBf9S6FRTzSAID5eOT+wSox+UlkemwXjlraanfhQj
z3B1vUQ/BMusGdyu5FYIs28meJSFQP8aj/WnuhUpEQobWIViTmgXvenAPWyL
372zrCIUzh9K/Q3V9xCQIvts7MLEIodDn+x/a8PQ8EipUT0TE/zAc4s125Ee
Ii+29wvD0T+WvmjPa4eYnCIgHoTB5K5yqYdeB5Y7plOlIeH40M84Q+N1INeV
OU85EI6ks0LhsFEnzl1WqLhxERjPVNclFHWiUnetK00VgRVzo2JuLOuC4tbs
tH9WJIqzmesSKrvQJE6RDGtGQY9CN55cKUFRh3i0pCAKTnHWJzxrJbB2bLLq
M4rGps4vGjH0bsgU5vJ9Z6LRapF6TSXqBvdg5OCKFSzIzKdHfBlSyHPcP8dV
svDeLc5+d4sUziV2iTVVLITa7I250ioF/7qpglTNguiHQwWv26Twf6JuOCdi
IXO0dHKzRIoGkzsZfc0sLLzQ3xz0WIqzVQ7qgMcs0OYwgx1fSRErs5hZNclC
hhTJKi0CzcN68VnTLLyoDb7o8C2BJTNf5D1qFrwEW2SJOgSemD2vS5xlQZfD
cR3SI+C9s3h/uTYbpXZ1pGfGBKzV+tPGJmy08h3ya20IZOtq7NppxoYV173t
ky2BAfOxPhGZjdz4jRP2DgQKvXruMC3ZCPNMZFXQCGjnHU87YcfGkOoypehH
AtvPp//d78CG30tRmMydgLh6VxTViY3r99uPLPQgkN7rQ+9czUZq+eA/OesJ
9L5xqTBYw4Yi/6NJhy8Bp8+WRnHr2GBkkoI0AgjwvjM4Vu3GhiBBL8stkMBb
subULIONeVHmNelBBP4DbuhCYw==
                 "]]}, 
               "Charting`Private`Tag$1874670#1"]}}, {}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
           AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, True}, {True, True}}, 
           FrameLabel -> {{"cMU Intensity", None}, {"[cMU] (uM)", None}}, 
           FrameStyle -> GrayLevel[0], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> 50, ImageSize -> 450, 
           Method -> {
            "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotRange -> {{0, 100.}, {0, 13320.}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
        "TurnoverTimepoints(uM)" -> {0.2564942418944898, 0.31292518968406213`,
          0.2484326779245509, 0.30486362571412323`, 0.27261736983436763`, 
         0.28874049777424543`, 0.27261736983436763`, 0.2484326779245509, 
         0.29680206174418433`, 0.2484326779245509, 0.22424798601473417`, 
         0.27261736983436763`, 0.240371113954612, 0.28067893380430653`, 
         0.2484326779245509, 0.27261736983436763`, 0.30486362571412323`, 
         0.31292518968406213`, 0.26455580586442873`, 0.28067893380430653`, 
         0.30486362571412323`, 0.29680206174418433`, 0.2323095499846731, 
         0.28067893380430653`, 0.27261736983436763`, 0.20812485807485637`, 
         0.21618642204479527`, 0.29680206174418433`, 0.22424798601473417`, 
         0.29680206174418433`, 0.26455580586442873`, 0.240371113954612, 
         0.2484326779245509, 0.3371098815938789}, 
        "DataPointsOptLinFit" -> {{0, 0.3371098815938789}, {
          90, 0.31292518968406213`}, {181, 0.30486362571412323`}, {
          270, 0.31292518968406213`}, {361, 0.29680206174418433`}, {
          451, 0.29680206174418433`}, {542, 0.28874049777424543`}, {
          633, 0.28067893380430653`}, {724, 0.27261736983436763`}, {
          815, 0.28067893380430653`}, {965, 0.28067893380430653`}, {
          1265, 0.29680206174418433`}, {1865, 0.29680206174418433`}, {
          2765, 0.30486362571412323`}, {3965, 0.30486362571412323`}, {
          6365, 0.26455580586442873`}, {9965, 0.27261736983436763`}, {
          13565, 0.27261736983436763`}, {17165, 0.26455580586442873`}, {
          20765, 0.27261736983436763`}, {24365, 0.27261736983436763`}, {
          27965, 0.2564942418944898}, {31565, 0.240371113954612}, {
          35165, 0.2484326779245509}, {38765, 0.2484326779245509}, {
          42365, 0.2484326779245509}, {45965, 0.2484326779245509}, {
          49565, 0.22424798601473417`}, {53165, 0.240371113954612}, {
          56765, 0.2323095499846731}, {60365, 0.21618642204479527`}, {
          63965, 0.22424798601473417`}, {67565, 0.20812485807485637`}, {
          71165, 0.2484326779245509}}, 
        "OptLinFitSlope" -> -1.1393856417136762`*^-6, "OptLinFitIntercept" -> 
        0.2949534394507417, "OptLinFitModel" -> 
        FittedModel[{
          "Linear", {
           0.2949534394507417, -1.1393856417136762`*^-6}, {{$CellContext`x}, {
            1, $CellContext`x}}, {0, 0}}, {{1., 1., 1., 1., 1., 1., 1., 1., 
          1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 
          1., 1., 1., 1., 1., 1., 1., 1., 
          1.}}, {{0, 0.3371098815938789}, {90, 0.31292518968406213`}, {
           181, 0.30486362571412323`}, {270, 0.31292518968406213`}, {
           361, 0.29680206174418433`}, {451, 0.29680206174418433`}, {
           542, 0.28874049777424543`}, {633, 0.28067893380430653`}, {
           724, 0.27261736983436763`}, {815, 0.28067893380430653`}, {
           965, 0.28067893380430653`}, {1265, 0.29680206174418433`}, {
           1865, 0.29680206174418433`}, {2765, 0.30486362571412323`}, {
           3965, 0.30486362571412323`}, {6365, 0.26455580586442873`}, {
           9965, 0.27261736983436763`}, {13565, 0.27261736983436763`}, {
           17165, 0.26455580586442873`}, {20765, 0.27261736983436763`}, {
           24365, 0.27261736983436763`}, {27965, 0.2564942418944898}, {
           31565, 0.240371113954612}, {35165, 0.2484326779245509}, {
           38765, 0.2484326779245509}, {42365, 0.2484326779245509}, {
           45965, 0.2484326779245509}, {49565, 0.22424798601473417`}, {
           53165, 0.240371113954612}, {56765, 0.2323095499846731}, {
           60365, 0.21618642204479527`}, {63965, 0.22424798601473417`}, {
           67565, 0.20812485807485637`}, {
           71165, 0.2484326779245509}}, CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQEf7BlQAJTfEOaAwl+Qhsp/UIDKn1CGyjeoQeV/
aEDln2hGM78NlV/RicrX6EPlH5mMyleZi8qftRSV/2sdKv/uDhR+Q9lhVH7d
KRS+w+ELqHz3K6j809dR+f63UfmX76HwF2g/ROW/fYTKX/8ElV/4DJVv/AKV
//UlKn/7a1R+5VtUvvV7FP6Fug+o/PiPDgCFZ2Yy
          "], 
          Function[Null, 
           Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]], 
        "OptLinFitR2" -> 0.7833716764920652, "eGFPPostSDSImage" -> 
        Image[CompressedData["
1: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
jV4WbUxfPKPd+bo+5px0+6xXky5J06TLcdr1nLxX4CrJ1vrlSyKLJy5brG6B
cw+o6KVSj9EXap8v5bgbtsQ3JHHeDVoF2wI7O6HpLbPTSsg+IE2D6QNf8BG6
s5JYQ0Kztfo1E72DJheD4KnfrXzu3egWGXBbWD2h371z9AnQ4k4usabf/bzB
B2tx9Iatcgh0Zqt9j4WYp5daGYPxhsxjNQ02Bt4HXM6zJOa5LTA1UW0znXXZ
fEgL1r9JQvs3jsN2ZDMlAO+SzaxcrzxElTGwHyDfH+0bQogzBKqDBxDvWvQ6
3fnDloWTwSYVTd3Czse1ClvgKZUx8qfYUk+onTSKaSa+9dj4hi0QJsN4Sjis
HE1oM/jKe+7OjbBlV3WM57jv5MwHCMbYxbnCs17uWnjCc28g/bBoYzpYaKOb
p9dOsyWRH7aA6c5YAdYNtifmQdJxrbUp6MHdCGBGetcumU/4sGV+MLMXtKEt
HHfFA8iQfHRWhPyI1ruV+ARzeaREurR4BputQR5Gxz4BWvLAF57MLGmPTavy
gF7HeGY3tSl3XPclTerIsxTzls4tqyBk0rwFtK5bAC8W2EOyRdiuympVvnhZ
hvIbfhllSItn8AzBuNB/7PcKFLO/bHGNnX8a8IIdgWRHst23gNMgKrgbAbzQ
EdSPw1XdmuDVTFaO8yqEt+P+1Jr/8nGHmqaTI/qVrrTesEkX91L4JNLqCFvy
IVlhPgbw25i9BW+G68PybwZIGz29zJIKi074/FySFaYZS7qDM8lvsIaeeBXa
+dxSpXhh+jrMM1lDhG2GsVZBoxs4VGHRZfMGU83YEfXr+iZ6wOk7rnHCs14r
Z3Lcl3E0KmDv97YCN5KtzxtgVmE3iDtalQ+5kEbSeJ7wOW7FpKFIDH6NxQIq
6ZCheKJYbv2TOgb0LF3u8fvdH/jeDACfgmc5I8f8JD7FKN/UXddndxeoQfdY
E/MeKYl5vF3Y3mNjo/N9WUg0XU1z7mi0Kssq++8rPu7od2+b1CU+aWQgk+LL
28Oi3zKjy0jLcPYz+YzL7OV6uzO2Meekm51ye1PMjY4A8Ue4vqIPd+XzS/42
NC8r7LhV9YT5wa3KvvI4o2TaR7X43BbYqhyoDu8Lnz58EMe2y3jHesOCeL1U
sDFoK/wx2MAmSb734hn3rTu5Ez4nfOa9c0gWZ+y9RM8jtk1odNYLcSaiNJLg
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
OiA3kWztYyCVsicO9Jn6d8rGEjkN4N7CyfDFdDVxf6ts+n0boCyyBvRLHRWe
GF9FczQau3fHdexervbYPULV/76aBiwCeimJx56N34yCxh80QQ2gealU+iIe
2grLmx9sGAUsp3tBzytj4GW/asARQh5wYcVYkMxV+WZJ8FWwS6kUdooMia2V
WP4GRYOpWZLpJbDCjzuk0m2B5NGKJx63onvQKkGDKfY2xyLTuyoL2x+s3aH2
wdpk6y7x31cM9NnoJFvjVzWgcy2zm6eifkMvdas96we0+qAJ67tUunLm8VEN
Rv6r/j01TTEPv6qEqmTi43+2m7GzjPbnqqUMY2g1sryNbncjsL4Ipkg1m5qx
YI6oo8E9bgYI1FTS8dstNr0Mq6XSe3zMBCyX9ZdqpPpSKeuFWvn/2oP/qneI
FmkLlfjsd3ioiqfCE+vlzqHs11vKKvBW5lZ71yqGS8TcIgPojcBeQRL/XCFV
Q9fYxTTTmx2UFYF1Pn2freWn+OKKXkHxxJbZ8OjwymQfJno71KTSHovKGP80
vVTIk1hD+EYyCUZ/V4yxm9TEVmXCafhoWBDlXeDBjh+RSguLqvJZ5djryxdO
NjBz11JI//Z04nmI20Pzflkm5tXYCW1YNFs9ITLA9lXEg4wIsn5P30/9ad47
8MJAwV+W0UoK3s/OdMKqI7z2U23q33352zHZmUBbNU2wh/WGVL1EKHk6NKZ5
5UwgKeVtKUaiddq7Eb9lmvrnah/JPhx+JgM5DJ4hvtn5ql4Ejb313e9Oa1v1
7+HJqYlb7aFbG9M3piMWVw6B7UQlq1Yil4PxNH/1Fh9ywl81VE844fPa25QT
xgzejTigMsg7brVzX7/7Eyf8koPQZocavcuyOVZJXOEJlHm3kjJlNEPdm8U8
9sbCKcdhkSLiQ2P16q3KP+bgKmT9+92BElbZJ3c/1Qa3AY78v9X+D78kZM8=

          "], "Bit16", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "NewSubfileType" -> "Primary image", "ImageWidth" -> 2856, 
              "ImageLength" -> 5712, "BitsPerSample" -> 16, "Compression" -> 
              "Uncompressed", "PhotometricInterpretation" -> "Black Is Zero", 
              "ImageDescription" -> "{ shape : [5712, 2856]}", "StripOffsets" -> 
              270, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 5712, 
              "StripByteCounts" -> 32626944, "Software" -> "tifffile.py", 
              "DateTime" -> 
              DateObject[{2019, 12, 11, 16, 21, 0.}, "Instant", "Gregorian", 
                None], "SampleFormat" -> "Unsigned integer data"]]], 
        "ManualGFPFlag" -> 0, "KnownBadMutant" -> 0], 
       Association[
       "GlobalExperimentIndex" -> "191208_S2_d3_MecMUP_1", "Date" -> "191208",
         "Experiment" -> "PafA_SlowestChip_LongMecMUP", "Setup" -> 2, 
        "Device" -> "d3", "PhosphateSensorConc" -> 0, "eGFPSlope" -> 143000., 
        "x" -> 28, "y" -> 13, "median_chamber" -> 820, "sum_chamber" -> 
        2971535, "std_chamber" -> 49, "x_center_chamber" -> 55, 
        "y_center_chamber" -> 59, "radius_chamber" -> 34, 
        "xslice" -> {1680, 1780}, "yslice" -> {5897, 5997}, "MutantID" -> 
        "T79G", "time_s" -> 27965, "median_button_Button_Quant" -> 1138, 
        "summed_button_Button_Quant" -> 2274189, "eGFPSummedI" -> 2218608, 
        "std_button_Button_Quant" -> 3471, "x_button_center_Button_Quant" -> 
        57, "y_button_center_Button_Quant" -> 52, 
        "radius_button_disk_Button_Quant" -> 15, 
        "median_button_annulus_Button_Quant" -> 41, 
        "summed_button_annulus_normed_Button_Quant" -> 55581, 
        "std_button_annulus_localBG_Button_Quant" -> 94, 
        "inner_radius_button_annulus_Button_Quant" -> 15, 
        "outer_radius_button_annulus_Button_Quant" -> 15, 
        "xslice_Button_Quant" -> {1680, 1780}, 
        "yslice_Button_Quant" -> {5897, 5997}, "MutantID_Button_Quant" -> 
        "T79G", "series_index" -> "2000uM_MecMUP", "Indices" -> {28, 13}, 
        "Times" -> {27965, 270, 71165, 181, 724, 542, 20765, 42365, 1865, 
         45965, 63965, 24365, 53165, 633, 38765, 13565, 2765, 90, 17165, 815, 
         3965, 1265, 56765, 965, 9965, 67565, 60365, 361, 49565, 451, 6365, 
         31565, 35165, 0}, 
        "MedianIntensities" -> {820, 828, 817, 827, 821, 825, 823, 817, 825, 
         819, 816, 820, 814, 824, 817, 823, 827, 827, 822, 822, 826, 823, 815,
          823, 824, 816, 815, 824, 819, 826, 822, 817, 821, 830}, "ExpIndex" -> 
        1, "AssayType" -> 1, "SubstrateConc" -> 2000., 
        "InhibitorConcentrations" -> 0., "Zn2+" -> 100., 
        "SC_Concentrations" -> {50, 5, 25, 2, 100, 10, 0}, 
        "SC_Median_Chamber" -> {5770, 1271, 3072, 998, 10358, 1749, 816}, 
        "StdCurveFitObject" -> 
        FittedModel[{
          "Linear", {797.1878956969639, 
           96.11294130271487}, {{$CellContext`x}, {1, $CellContext`x}}, {0, 
           0}}, {{1., 1., 1., 1., 1., 1., 1.}}, {{50, 5770}, {5, 1271}, {25, 
          3072}, {2, 998}, {100, 10358}, {10, 1749}, {0, 816}}, {{1., 50.}, {
          1., 5.}, {1., 25.}, {1., 2.}, {1., 100.}, {1., 10.}, {1., 0.}}, 
          Function[Null, 
           Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]], 
        "StdCurveSlope" -> 96.11294130271487, "StdCurveIntercept" -> 
        797.1878956969639, "StdCurveRSquared" -> 0.9993574971175735, 
        "StandardCurvePlot" -> Graphics[{{{}, {{{
               Directive[
                AbsoluteThickness[1.6], 
                RGBColor[0, 
                 Rational[2, 3], 
                 Rational[2, 3]], 
                PointSize[0.02]], 
               
               Point[{{50., 5770.}, {5., 1271.}, {25., 3072.}, {2., 998.}, {
                100., 10358.}, {10., 1749.}, {0., 816.}}]}}, {{
               Directive[
                AbsoluteThickness[1.6], 
                RGBColor[0, 
                 Rational[2, 3], 
                 Rational[2, 3]], 
                PointSize[0.02]]}, {}}, {{
               Directive[
                AbsoluteThickness[1.6], 
                RGBColor[0, 
                 Rational[2, 3], 
                 Rational[2, 3]], 
                PointSize[0.02]]}, {}}}, {{}, {}}}, {{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  Rational[2, 3], 
                  Rational[2, 3]]], 
                Line[CompressedData["
1:eJwVxXk4lAkAB+CJch9pZyJHk5SMiMa6N/NzpCHkCM3XVltSjuRaoigrCY0c
q5CzJZKY5GhMjlHztWULW0JR28jqep5tSu6nZnf/eJ9X/0Ckb7AMhULx/M//
a1aZmwjnexyeZkTZ//IuA3NZ0262yZUsedlgLReZTBQy4wJoyTdYtsmcaTmd
TBySa/1RNlnIKo124nE9MuElGdy3kDTACiKoBkW8TDj9fVA8nfSK9XkjX4kX
l4WOv0x+m0qSsNT7pc/GlnAxP5ab+jmJAndaToKNdg7cd6+IOrZJA/FjKTN6
b/NhXTWeOZS+Cir6iu+YSheRe/K71prnaxCovFOJq1uMPeEvXle7r4ftErdt
56JLIThjnPHkKAOv3nE7yrIrINlH/yD6YAq1yE7DjfGXka9fqyVmbIZ8x4X0
Or0qfGGkzMxaWyAo9UJq09VqOK9osIiKscQ5rzCuin8NiLySespZa1ALDjE/
TdTiI3UDTTPPFgkmoo+zR+oQnSD38vzv9rjaOyPwWVmP2zG14tUjW2A37r3W
suo6Eg291mYoAYXSU4XhPo0YpBU+vGvgiIHI5etEszz8OoACZWMntJocNHwi
vAH2iQLlNFdnhFRf64m42IT9n9iVCt4ueDiydOOjPTcRHVg70Rm5FStz3XSG
LJshZA3qW2W5ok/ioClRbEHs1P4kQd42WKmxxX39LdAtLE6P5LGR1mjPDKxp
BUOO2WgucMNpZWef6qNtiJ8t6mvpdodEY/GEjMUttI/UlYeObodTSZmpkgIf
P53R4RpPeMBV7Ncw1MfHV31rhq6sF8yufWn2qGnHc+h3D+juQLqu670niQJk
06za72t4I3t7fQ2ddRtXU2+EOVZ64/jXBVUarQNx/qPGWO8DzSN7nfvHOnAg
NOJwZa0PDNJi0i5VdsI9bnBRy9IXVHq0h3pcFyYmP5RrtvuiLf70ONu+G4ne
I8Wb2H6oMBJKaYpCCOlxVX888oP9z+zp0AghNpgnMnq9dyKHWhd1r1+ITBtf
efHLnfCfOck7ZteDsprRqeQgf8S27fVXLu/BdRU7G4spfyzjN3dNKd7BaLN0
zi0lAJ5q4oaJ2DvoEMbdn5QNxD9OWkv5Q3dQRAo/luQHQqZdpPfK8S4MzTvW
D2vuwlHVE+Xvr9zF4OjqkdhLu5DXpnjlq7wIyacCxo2MONhwWTUyOEaEkQyH
xaDrHNDCdCp5T0X4vsQ0/GYjB/k7IubDhkXIbdAdpTRxoGbZ7Wv4TAS3xwuC
slYO5ClBy8rGRBDo3Do+3MXB3IVrYVmvRShtNFtw/5ODsR5by+BPIuwfXDO/
eYaDqlW7erVVSXRNqoemzHFAl9YZDKmR0J7/NtK3wEHpxGJS3nISj/Ve8MOl
HBTwKswUqCRcDhcnXFEgkL71TcG0NgnDBY05LR0CYdHx+waMSKSqLAk5rEdg
MuA+/5wxiZerJcOtdAIHftBesc2ERKFz3y3fdQR2y3eJOs1IKGRnHeOaEvAs
W2Zcb0XiYEXim+dmBB6kBp4+ZENC2BQSyGAS2BpSN6ZvRyJxyNX6nhUBBwvP
nKItJIbeWtZSbQnc1qp468ciwVxcpxlkT8D6m8RR3ZHEeVXq2aYtBFpeO5X0
OpF4T5edlbIImD8o+HLGhcS/3nc2+g==
                 "]]}, 
               "Charting`Private`Tag$1874075#1"]}}, {}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
           AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, True}, {True, True}}, 
           FrameLabel -> {{"cMU Intensity", None}, {"[cMU] (uM)", None}}, 
           FrameStyle -> GrayLevel[0], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> 50, ImageSize -> 450, 
           Method -> {
            "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotRange -> {{0, 100.}, {0, 10358.}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
        "TurnoverTimepoints(uM)" -> {0.23734685458420926`, 0.3205822637972454,
          0.20613357612932068`, 0.3101778376456159, 0.24775128073583877`, 
         0.2893689853423569, 0.2685601330390978, 0.20613357612932068`, 
         0.2893689853423569, 0.22694242843257972`, 0.19572914997769117`, 
         0.23734685458420926`, 0.17492029767443212`, 0.2789645591907273, 
         0.20613357612932068`, 0.2685601330390978, 0.3101778376456159, 
         0.3101778376456159, 0.2581557068874683, 0.2581557068874683, 
         0.2997734114939864, 0.2685601330390978, 0.18532472382606163`, 
         0.2685601330390978, 0.2789645591907273, 0.19572914997769117`, 
         0.18532472382606163`, 0.2789645591907273, 0.22694242843257972`, 
         0.2997734114939864, 0.2581557068874683, 0.20613357612932068`, 
         0.24775128073583877`, 0.3413911161005045}, 
        "DataPointsOptLinFit" -> {{0, 0.3413911161005045}, {
          90, 0.3101778376456159}, {181, 0.3101778376456159}, {
          270, 0.3205822637972454}, {361, 0.2789645591907273}, {
          451, 0.2997734114939864}, {542, 0.2893689853423569}, {
          633, 0.2789645591907273}, {724, 0.24775128073583877`}, {
          815, 0.2581557068874683}, {965, 0.2685601330390978}, {
          1265, 0.2685601330390978}, {1865, 0.2893689853423569}, {
          2765, 0.3101778376456159}, {3965, 0.2997734114939864}, {
          6365, 0.2581557068874683}, {9965, 0.2789645591907273}, {
          13565, 0.2685601330390978}, {17165, 0.2581557068874683}, {
          20765, 0.2685601330390978}, {24365, 0.23734685458420926`}, {
          27965, 0.23734685458420926`}, {31565, 0.20613357612932068`}, {
          35165, 0.24775128073583877`}, {38765, 0.20613357612932068`}, {
          42365, 0.20613357612932068`}, {45965, 0.22694242843257972`}, {
          49565, 0.22694242843257972`}, {53165, 0.17492029767443212`}, {
          56765, 0.18532472382606163`}, {60365, 0.18532472382606163`}, {
          63965, 0.19572914997769117`}, {67565, 0.19572914997769117`}, {
          71165, 0.20613357612932068`}}, 
        "OptLinFitSlope" -> -1.6084009618884572`*^-6, "OptLinFitIntercept" -> 
        0.2897244824644616, "OptLinFitModel" -> 
        FittedModel[{
          "Linear", {
           0.2897244824644616, -1.6084009618884572`*^-6}, {{$CellContext`x}, {
            1, $CellContext`x}}, {0, 0}}, {{1., 1., 1., 1., 1., 1., 1., 1., 
          1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 
          1., 1., 1., 1., 1., 1., 1., 1., 
          1.}}, {{0, 0.3413911161005045}, {90, 0.3101778376456159}, {
           181, 0.3101778376456159}, {270, 0.3205822637972454}, {
           361, 0.2789645591907273}, {451, 0.2997734114939864}, {
           542, 0.2893689853423569}, {633, 0.2789645591907273}, {
           724, 0.24775128073583877`}, {815, 0.2581557068874683}, {
           965, 0.2685601330390978}, {1265, 0.2685601330390978}, {
           1865, 0.2893689853423569}, {2765, 0.3101778376456159}, {
           3965, 0.2997734114939864}, {6365, 0.2581557068874683}, {
           9965, 0.2789645591907273}, {13565, 0.2685601330390978}, {
           17165, 0.2581557068874683}, {20765, 0.2685601330390978}, {
           24365, 0.23734685458420926`}, {27965, 0.23734685458420926`}, {
           31565, 0.20613357612932068`}, {35165, 0.24775128073583877`}, {
           38765, 0.20613357612932068`}, {42365, 0.20613357612932068`}, {
           45965, 0.22694242843257972`}, {49565, 0.22694242843257972`}, {
           53165, 0.17492029767443212`}, {56765, 0.18532472382606163`}, {
           60365, 0.18532472382606163`}, {63965, 0.19572914997769117`}, {
           67565, 0.19572914997769117`}, {
           71165, 0.20613357612932068`}}, CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQEf7BlQAJTfEOaAwl+Qhsp/UIDKn1CGyjeoQeV/
aEDln2hGM78NlV/RicrX6EPlH5mMyleZi8qftRSV/2sdKv/uDhR+Q9lhVH7d
KRS+w+ELqHz3K6j809dR+f63UfmX76HwF2g/ROW/fYTKX/8ElV/4DJVv/AKV
//UlKn/7a1R+5VtUvvV7FP6Fug+o/PiPDgCFZ2Yy
          "], 
          Function[Null, 
           Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]], 
        "OptLinFitR2" -> 0.7737753206101063, "eGFPPostSDSImage" -> 
        Image[CompressedData["
1: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
6md8RhYA5LM69KEncnH5/2PtvwA6N5pi
          "], "Bit16", ColorSpace -> 
          "Grayscale", Interleaving -> None, MetaInformation -> 
          Association[
           "Exif" -> Association[
             "NewSubfileType" -> "Primary image", "ImageWidth" -> 2856, 
              "ImageLength" -> 5712, "BitsPerSample" -> 16, "Compression" -> 
              "Uncompressed", "PhotometricInterpretation" -> "Black Is Zero", 
              "ImageDescription" -> "{ shape : [5712, 2856]}", "StripOffsets" -> 
              270, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 5712, 
              "StripByteCounts" -> 32626944, "Software" -> "tifffile.py", 
              "DateTime" -> 
              DateObject[{2019, 12, 11, 16, 21, 0.}, "Instant", "Gregorian", 
                None], "SampleFormat" -> "Unsigned integer data"]]], 
        "ManualGFPFlag" -> 0, "KnownBadMutant" -> 0]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "GlobalExperimentIndex"} -> 1, {All, "Date"} -> 
        1, {All, "Experiment"} -> 1, {All, "Setup"} -> 1, {All, "Device"} -> 
        1, {All, "PhosphateSensorConc"} -> 1, {All, "eGFPSlope"} -> 
        1, {All, "x"} -> 1, {All, "y"} -> 1, {All, "median_chamber"} -> 
        1, {All, "sum_chamber"} -> 1, {All, "std_chamber"} -> 
        1, {All, "x_center_chamber"} -> 1, {All, "y_center_chamber"} -> 
        1, {All, "radius_chamber"} -> 1, {All, "xslice"} -> 
        1, {All, "yslice"} -> 1, {All, "MutantID"} -> 1, {All, "time_s"} -> 
        1, {All, "median_button_Button_Quant"} -> 
        1, {All, "summed_button_Button_Quant"} -> 1, {All, "eGFPSummedI"} -> 
        1, {All, "std_button_Button_Quant"} -> 
        1, {All, "x_button_center_Button_Quant"} -> 
        1, {All, "y_button_center_Button_Quant"} -> 
        1, {All, "radius_button_disk_Button_Quant"} -> 
        1, {All, "median_button_annulus_Button_Quant"} -> 
        1, {All, "summed_button_annulus_normed_Button_Quant"} -> 
        1, {All, "std_button_annulus_localBG_Button_Quant"} -> 
        1, {All, "inner_radius_button_annulus_Button_Quant"} -> 
        1, {All, "outer_radius_button_annulus_Button_Quant"} -> 
        1, {All, "xslice_Button_Quant"} -> 1, {All, "yslice_Button_Quant"} -> 
        1, {All, "MutantID_Button_Quant"} -> 1, {All, "series_index"} -> 
        1, {All, "Indices"} -> 1, {All, "Times"} -> 
        6, {All, "MedianIntensities"} -> 6, {All, "ExpIndex"} -> 
        1, {All, "AssayType"} -> 1, {All, "SubstrateConc"} -> 
        1, {All, "InhibitorConcentrations"} -> 1, {All, "Zn2+"} -> 
        1, {All, "SC_Concentrations"} -> 1, {All, "SC_Median_Chamber"} -> 
        1, {All, "StdCurveFitObject"} -> 1, {All, "StdCurveSlope"} -> 
        1, {All, "StdCurveIntercept"} -> 1, {All, "StdCurveRSquared"} -> 
        1, {All, "StandardCurvePlot"} -> 1, {All, "TurnoverTimepoints(uM)"} -> 
        6, {All, "DataPointsOptLinFit"} -> 2, {All, "OptLinFitSlope"} -> 
        1, {All, "OptLinFitIntercept"} -> 1, {All, "OptLinFitModel"} -> 
        1, {All, "OptLinFitR2"} -> 1, {All, "eGFPPostSDSImage"} -> 
        1, {All, "ManualGFPFlag"} -> 1, {All, "KnownBadMutant"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "GlobalExperimentIndex" -> 
            TypeSystem`PackageScope`AtomShape[201.60000000000002`], "Date" -> 
            TypeSystem`PackageScope`AtomShape[57.60000000000001], 
            "Experiment" -> 
            TypeSystem`PackageScope`AtomShape[259.20000000000005`], "Setup" -> 
            TypeSystem`PackageScope`AtomShape[34], "Device" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
            "PhosphateSensorConc" -> TypeSystem`PackageScope`AtomShape[34], 
            "eGFPSlope" -> TypeSystem`PackageScope`AtomShape[60], "x" -> 
            TypeSystem`PackageScope`AtomShape[34], "y" -> 
            TypeSystem`PackageScope`AtomShape[34], "median_chamber" -> 
            TypeSystem`PackageScope`AtomShape[34], "sum_chamber" -> 
            TypeSystem`PackageScope`AtomShape[34], "std_chamber" -> 
            TypeSystem`PackageScope`AtomShape[34], "x_center_chamber" -> 
            TypeSystem`PackageScope`AtomShape[34], "y_center_chamber" -> 
            TypeSystem`PackageScope`AtomShape[34], "radius_chamber" -> 
            TypeSystem`PackageScope`AtomShape[34], "xslice" -> 
            TypeSystem`PackageScope`UnknownShape[False], "yslice" -> 
            TypeSystem`PackageScope`UnknownShape[False], "MutantID" -> 
            TypeSystem`PackageScope`AtomShape[38.400000000000006`], "time_s" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "median_button_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "summed_button_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], "eGFPSummedI" -> 
            TypeSystem`PackageScope`AtomShape[34], "std_button_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "x_button_center_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "y_button_center_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "radius_button_disk_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "median_button_annulus_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "summed_button_annulus_normed_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "std_button_annulus_localBG_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "inner_radius_button_annulus_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "outer_radius_button_annulus_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], "xslice_Button_Quant" -> 
            TypeSystem`PackageScope`UnknownShape[False], 
            "yslice_Button_Quant" -> 
            TypeSystem`PackageScope`UnknownShape[False], 
            "MutantID_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
            "series_index" -> 
            TypeSystem`PackageScope`AtomShape[124.80000000000001`], "Indices" -> 
            TypeSystem`PackageScope`UnknownShape[False], "Times" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`MulticolumnShape[6, 6, 34, 34], 34, 6, {
              All, "Times", All}], "MedianIntensities" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`MulticolumnShape[6, 6, 34, 34], 34, 6, {
              All, "MedianIntensities", All}], "ExpIndex" -> 
            TypeSystem`PackageScope`AtomShape[34], "AssayType" -> 
            TypeSystem`PackageScope`AtomShape[34], "SubstrateConc" -> 
            TypeSystem`PackageScope`AtomShape[60], "InhibitorConcentrations" -> 
            TypeSystem`PackageScope`AtomShape[60], "Zn2+" -> 
            TypeSystem`PackageScope`AtomShape[60], "SC_Concentrations" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`AtomShape[34]], 7, 
              DirectedInfinity[1], {All, "SC_Concentrations"}], 
            "SC_Median_Chamber" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`AtomShape[34]], 7, 
              DirectedInfinity[1], {All, "SC_Median_Chamber"}], 
            "StdCurveFitObject" -> 
            TypeSystem`PackageScope`UnknownShape[False], "StdCurveSlope" -> 
            TypeSystem`PackageScope`AtomShape[60], "StdCurveIntercept" -> 
            TypeSystem`PackageScope`AtomShape[60], "StdCurveRSquared" -> 
            TypeSystem`PackageScope`AtomShape[60], "StandardCurvePlot" -> 
            TypeSystem`PackageScope`AtomShape[60], "TurnoverTimepoints(uM)" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`MulticolumnShape[6, 6, 34, 60], 34, 6, {
              All, "TurnoverTimepoints(uM)", All}], "DataPointsOptLinFit" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[{
                  TypeSystem`PackageScope`AtomShape[34], 
                  TypeSystem`PackageScope`AtomShape[60]}], 
                DirectedInfinity[1], 2, {All, "DataPointsOptLinFit", All}]], 
              10, 
              DirectedInfinity[1], {All, "DataPointsOptLinFit"}], 
            "OptLinFitSlope" -> TypeSystem`PackageScope`AtomShape[60], 
            "OptLinFitIntercept" -> TypeSystem`PackageScope`AtomShape[60], 
            "OptLinFitModel" -> TypeSystem`PackageScope`UnknownShape[False], 
            "OptLinFitR2" -> TypeSystem`PackageScope`AtomShape[60], 
            "eGFPPostSDSImage" -> TypeSystem`PackageScope`AtomShape[48], 
            "ManualGFPFlag" -> TypeSystem`PackageScope`AtomShape[34], 
            "KnownBadMutant" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 10, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "GlobalExperimentIndex", "Date", "Experiment", "Setup", "Device", 
         "PhosphateSensorConc", "eGFPSlope", "x", "y", "median_chamber", 
         "sum_chamber", "std_chamber", "x_center_chamber", "y_center_chamber",
          "radius_chamber", "xslice", "yslice", "MutantID", "time_s", 
         "median_button_Button_Quant", "summed_button_Button_Quant", 
         "eGFPSummedI", "std_button_Button_Quant", 
         "x_button_center_Button_Quant", "y_button_center_Button_Quant", 
         "radius_button_disk_Button_Quant", 
         "median_button_annulus_Button_Quant", 
         "summed_button_annulus_normed_Button_Quant", 
         "std_button_annulus_localBG_Button_Quant", 
         "inner_radius_button_annulus_Button_Quant", 
         "outer_radius_button_annulus_Button_Quant", "xslice_Button_Quant", 
         "yslice_Button_Quant", "MutantID_Button_Quant", "series_index", 
         "Indices", "Times", "MedianIntensities", "ExpIndex", "AssayType", 
         "SubstrateConc", "InhibitorConcentrations", "Zn2+", 
         "SC_Concentrations", "SC_Median_Chamber", "StdCurveFitObject", 
         "StdCurveSlope", "StdCurveIntercept", "StdCurveRSquared", 
         "StandardCurvePlot", "TurnoverTimepoints(uM)", "DataPointsOptLinFit",
          "OptLinFitSlope", "OptLinFitIntercept", "OptLinFitModel", 
         "OptLinFitR2", "eGFPPostSDSImage", "ManualGFPFlag", 
         "KnownBadMutant"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 34], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 34], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 7], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 7], TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Graphics], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 34], 
         TypeSystem`Vector[
          TypeSystem`Tuple[{
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real]}], 34], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Image], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Meta" -> 
     Association["ID" -> 247231417546188], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "GlobalExperimentIndex"} -> 1, {All, "Date"} -> 
        1, {All, "Experiment"} -> 1, {All, "Setup"} -> 1, {All, "Device"} -> 
        1, {All, "PhosphateSensorConc"} -> 1, {All, "eGFPSlope"} -> 
        1, {All, "x"} -> 1, {All, "y"} -> 1, {All, "median_chamber"} -> 
        1, {All, "sum_chamber"} -> 1, {All, "std_chamber"} -> 
        1, {All, "x_center_chamber"} -> 1, {All, "y_center_chamber"} -> 
        1, {All, "radius_chamber"} -> 1, {All, "xslice"} -> 
        1, {All, "yslice"} -> 1, {All, "MutantID"} -> 1, {All, "time_s"} -> 
        1, {All, "median_button_Button_Quant"} -> 
        1, {All, "summed_button_Button_Quant"} -> 1, {All, "eGFPSummedI"} -> 
        1, {All, "std_button_Button_Quant"} -> 
        1, {All, "x_button_center_Button_Quant"} -> 
        1, {All, "y_button_center_Button_Quant"} -> 
        1, {All, "radius_button_disk_Button_Quant"} -> 
        1, {All, "median_button_annulus_Button_Quant"} -> 
        1, {All, "summed_button_annulus_normed_Button_Quant"} -> 
        1, {All, "std_button_annulus_localBG_Button_Quant"} -> 
        1, {All, "inner_radius_button_annulus_Button_Quant"} -> 
        1, {All, "outer_radius_button_annulus_Button_Quant"} -> 
        1, {All, "xslice_Button_Quant"} -> 1, {All, "yslice_Button_Quant"} -> 
        1, {All, "MutantID_Button_Quant"} -> 1, {All, "series_index"} -> 
        1, {All, "Indices"} -> 1, {All, "Times"} -> 
        6, {All, "MedianIntensities"} -> 6, {All, "ExpIndex"} -> 
        1, {All, "AssayType"} -> 1, {All, "SubstrateConc"} -> 
        1, {All, "InhibitorConcentrations"} -> 1, {All, "Zn2+"} -> 
        1, {All, "SC_Concentrations"} -> 1, {All, "SC_Median_Chamber"} -> 
        1, {All, "StdCurveFitObject"} -> 1, {All, "StdCurveSlope"} -> 
        1, {All, "StdCurveIntercept"} -> 1, {All, "StdCurveRSquared"} -> 
        1, {All, "StandardCurvePlot"} -> 1, {All, "TurnoverTimepoints(uM)"} -> 
        6, {All, "DataPointsOptLinFit"} -> 2, {All, "OptLinFitSlope"} -> 
        1, {All, "OptLinFitIntercept"} -> 1, {All, "OptLinFitModel"} -> 
        1, {All, "OptLinFitR2"} -> 1, {All, "eGFPPostSDSImage"} -> 
        1, {All, "ManualGFPFlag"} -> 1, {All, "KnownBadMutant"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "GlobalExperimentIndex" -> 
            TypeSystem`PackageScope`AtomShape[201.60000000000002`], "Date" -> 
            TypeSystem`PackageScope`AtomShape[57.60000000000001], 
            "Experiment" -> 
            TypeSystem`PackageScope`AtomShape[259.20000000000005`], "Setup" -> 
            TypeSystem`PackageScope`AtomShape[34], "Device" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
            "PhosphateSensorConc" -> TypeSystem`PackageScope`AtomShape[34], 
            "eGFPSlope" -> TypeSystem`PackageScope`AtomShape[60], "x" -> 
            TypeSystem`PackageScope`AtomShape[34], "y" -> 
            TypeSystem`PackageScope`AtomShape[34], "median_chamber" -> 
            TypeSystem`PackageScope`AtomShape[34], "sum_chamber" -> 
            TypeSystem`PackageScope`AtomShape[34], "std_chamber" -> 
            TypeSystem`PackageScope`AtomShape[34], "x_center_chamber" -> 
            TypeSystem`PackageScope`AtomShape[34], "y_center_chamber" -> 
            TypeSystem`PackageScope`AtomShape[34], "radius_chamber" -> 
            TypeSystem`PackageScope`AtomShape[34], "xslice" -> 
            TypeSystem`PackageScope`UnknownShape[False], "yslice" -> 
            TypeSystem`PackageScope`UnknownShape[False], "MutantID" -> 
            TypeSystem`PackageScope`AtomShape[38.400000000000006`], "time_s" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "median_button_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "summed_button_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], "eGFPSummedI" -> 
            TypeSystem`PackageScope`AtomShape[34], "std_button_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "x_button_center_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "y_button_center_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "radius_button_disk_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "median_button_annulus_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "summed_button_annulus_normed_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "std_button_annulus_localBG_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "inner_radius_button_annulus_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "outer_radius_button_annulus_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[34], "xslice_Button_Quant" -> 
            TypeSystem`PackageScope`UnknownShape[False], 
            "yslice_Button_Quant" -> 
            TypeSystem`PackageScope`UnknownShape[False], 
            "MutantID_Button_Quant" -> 
            TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
            "series_index" -> 
            TypeSystem`PackageScope`AtomShape[124.80000000000001`], "Indices" -> 
            TypeSystem`PackageScope`UnknownShape[False], "Times" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`MulticolumnShape[6, 6, 34, 34], 34, 6, {
              All, "Times", All}], "MedianIntensities" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`MulticolumnShape[6, 6, 34, 34], 34, 6, {
              All, "MedianIntensities", All}], "ExpIndex" -> 
            TypeSystem`PackageScope`AtomShape[34], "AssayType" -> 
            TypeSystem`PackageScope`AtomShape[34], "SubstrateConc" -> 
            TypeSystem`PackageScope`AtomShape[60], "InhibitorConcentrations" -> 
            TypeSystem`PackageScope`AtomShape[60], "Zn2+" -> 
            TypeSystem`PackageScope`AtomShape[60], "SC_Concentrations" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`AtomShape[34]], 7, 
              DirectedInfinity[1], {All, "SC_Concentrations"}], 
            "SC_Median_Chamber" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`AtomShape[34]], 7, 
              DirectedInfinity[1], {All, "SC_Median_Chamber"}], 
            "StdCurveFitObject" -> 
            TypeSystem`PackageScope`UnknownShape[False], "StdCurveSlope" -> 
            TypeSystem`PackageScope`AtomShape[60], "StdCurveIntercept" -> 
            TypeSystem`PackageScope`AtomShape[60], "StdCurveRSquared" -> 
            TypeSystem`PackageScope`AtomShape[60], "StandardCurvePlot" -> 
            TypeSystem`PackageScope`AtomShape[60], "TurnoverTimepoints(uM)" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`MulticolumnShape[6, 6, 34, 60], 34, 6, {
              All, "TurnoverTimepoints(uM)", All}], "DataPointsOptLinFit" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[{
                  TypeSystem`PackageScope`AtomShape[34], 
                  TypeSystem`PackageScope`AtomShape[60]}], 
                DirectedInfinity[1], 2, {All, "DataPointsOptLinFit", All}]], 
              10, 
              DirectedInfinity[1], {All, "DataPointsOptLinFit"}], 
            "OptLinFitSlope" -> TypeSystem`PackageScope`AtomShape[60], 
            "OptLinFitIntercept" -> TypeSystem`PackageScope`AtomShape[60], 
            "OptLinFitModel" -> TypeSystem`PackageScope`UnknownShape[False], 
            "OptLinFitR2" -> TypeSystem`PackageScope`AtomShape[60], 
            "eGFPPostSDSImage" -> TypeSystem`PackageScope`AtomShape[48], 
            "ManualGFPFlag" -> TypeSystem`PackageScope`AtomShape[34], 
            "KnownBadMutant" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 10, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "GlobalExperimentIndex", "Date", "Experiment", "Setup", "Device", 
         "PhosphateSensorConc", "eGFPSlope", "x", "y", "median_chamber", 
         "sum_chamber", "std_chamber", "x_center_chamber", "y_center_chamber",
          "radius_chamber", "xslice", "yslice", "MutantID", "time_s", 
         "median_button_Button_Quant", "summed_button_Button_Quant", 
         "eGFPSummedI", "std_button_Button_Quant", 
         "x_button_center_Button_Quant", "y_button_center_Button_Quant", 
         "radius_button_disk_Button_Quant", 
         "median_button_annulus_Button_Quant", 
         "summed_button_annulus_normed_Button_Quant", 
         "std_button_annulus_localBG_Button_Quant", 
         "inner_radius_button_annulus_Button_Quant", 
         "outer_radius_button_annulus_Button_Quant", "xslice_Button_Quant", 
         "yslice_Button_Quant", "MutantID_Button_Quant", "series_index", 
         "Indices", "Times", "MedianIntensities", "ExpIndex", "AssayType", 
         "SubstrateConc", "InhibitorConcentrations", "Zn2+", 
         "SC_Concentrations", "SC_Median_Chamber", "StdCurveFitObject", 
         "StdCurveSlope", "StdCurveIntercept", "StdCurveRSquared", 
         "StandardCurvePlot", "TurnoverTimepoints(uM)", "DataPointsOptLinFit",
          "OptLinFitSlope", "OptLinFitIntercept", "OptLinFitModel", 
         "OptLinFitR2", "eGFPPostSDSImage", "ManualGFPFlag", 
         "KnownBadMutant"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 34], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 34], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 7], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 7], TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Graphics], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 34], 
         TypeSystem`Vector[
          TypeSystem`Tuple[{
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real]}], 34], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Image], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     2, "DataColumnCount" -> 59, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["GlobalExperimentIndex", 
                  Style[
                  "GlobalExperimentIndex", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "GlobalExperimentIndex"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "GlobalExperimentIndex"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Date", 
                  Style[
                  "Date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Date"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Experiment", 
                  Style[
                  "Experiment", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Experiment"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Experiment"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Setup", 
                  Style[
                  "Setup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Setup"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Setup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Device", 
                  Style[
                  "Device", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Device"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Device"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PhosphateSensorConc", 
                  Style[
                  "PhosphateSensorConc", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "PhosphateSensorConc"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PhosphateSensorConc"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["eGFPSlope", 
                  Style[
                  "eGFPSlope", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "eGFPSlope"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "eGFPSlope"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["x", 
                  Style[
                  "x", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "x"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "x"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["y", 
                  Style[
                  "y", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "y"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "y"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["median_chamber", 
                  Style[
                  "median_chamber", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "median_chamber"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "median_chamber"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["191208_S2_d3_MecMUP_1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["GlobalExperimentIndex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["191208", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["PafA_SlowestChip_LongMecMUP", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Experiment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{259.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Setup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["d3", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Device"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["PhosphateSensorConc"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["143000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["eGFPSlope"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["28"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["y"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["988"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["median_chamber"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["191208_S2_d3_MecMUP_1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["GlobalExperimentIndex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["191208", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["PafA_SlowestChip_LongMecMUP", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Experiment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{259.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Setup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["d3", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Device"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["PhosphateSensorConc"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["143000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["eGFPSlope"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["28"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["y"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["820"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["median_chamber"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 59, 1], {1, 59 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 59, 1], {1, 59 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    59, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    59, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 59, 1], {1, 59 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 59, 1], {1, 59 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1065., {73.134033203125, 78.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1065., {73.134033203125, 78.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.795659751718738*^9, 3.79579027203913*^9, 
  3.795794488527416*^9, 3.7958100929159527`*^9, 3.795811337755941*^9, 
  3.807149270149189*^9, 3.812634896942945*^9, 3.812634939991004*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"912aecba-50be-4960-9e48-da290dfea696"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"keysToKeep", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<GlobalExperimentIndex\>\"", ",", "\"\<Date\>\"", ",", 
     "\"\<Experiment\>\"", ",", "\"\<Setup\>\"", ",", "\"\<Device\>\"", ",", 
     "\"\<PhosphateSensorConc\>\"", ",", "\"\<eGFPSlope\>\"", ",", 
     "\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<median_chamber\>\"", ",", 
     "\"\<sum_chamber\>\"", ",", "\"\<std_chamber\>\"", ",", 
     "\"\<x_center_chamber\>\"", ",", "\"\<y_center_chamber\>\"", ",", 
     "\"\<radius_chamber\>\"", ",", "\"\<xslice\>\"", ",", "\"\<yslice\>\"", 
     ",", "\"\<MutantID\>\"", ",", "\"\<time_s\>\"", ",", 
     "\"\<median_button_Button_Quant\>\"", ",", 
     "\"\<summed_button_Button_Quant\>\"", ",", "\"\<eGFPSummedI\>\"", ",", 
     "\"\<std_button_Button_Quant\>\"", ",", 
     "\"\<x_button_center_Button_Quant\>\"", ",", 
     "\"\<y_button_center_Button_Quant\>\"", ",", 
     "\"\<radius_button_disk_Button_Quant\>\"", ",", 
     "\"\<median_button_annulus_Button_Quant\>\"", ",", 
     "\"\<summed_button_annulus_normed_Button_Quant\>\"", ",", 
     "\"\<std_button_annulus_localBG_Button_Quant\>\"", ",", 
     "\"\<inner_radius_button_annulus_Button_Quant\>\"", ",", 
     "\"\<outer_radius_button_annulus_Button_Quant\>\"", ",", 
     "\"\<xslice_Button_Quant\>\"", ",", "\"\<yslice_Button_Quant\>\"", ",", 
     "\"\<MutantID_Button_Quant\>\"", ",", "\"\<series_index\>\"", ",", 
     "\"\<Times\>\"", ",", "\"\<MedianIntensities\>\"", ",", 
     "\"\<ExpIndex\>\"", ",", "\"\<AssayType\>\"", ",", 
     "\"\<SubstrateConc\>\"", ",", "\"\<InhibitorConcentrations\>\"", ",", 
     "\"\<Zn2+\>\"", ",", "\"\<SC_Concentrations\>\"", ",", 
     "\"\<SC_Median_Chamber\>\"", ",", "\"\<SC_Median_Chamber\>\"", ",", 
     "\"\<ManualGFPFlag\>\"", ",", "\"\<Indices\>\""}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7927904428744993`*^9, 3.792790448510099*^9}, {
   3.792791041271331*^9, 3.792791041494883*^9}, {3.7927923515675707`*^9, 
   3.7927923558256063`*^9}, 3.79279253392106*^9, {3.792794576736512*^9, 
   3.7927945902861643`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"f4df3f14-2c75-4523-b3c5-a6da62db2a65"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ds2", "=", 
    RowBox[{"dataset", "[", 
     RowBox[{"All", ",", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Indices2\>\"", "\[Rule]", 
           RowBox[{"ToExpression", "[", "#Indices", "]"}]}], "}"}]}], "]"}], 
       "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ds3", "=", 
    RowBox[{"ds2", "[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<GlobalExperimentIndex\>\"", ",", "\"\<Date\>\"", ",", 
        "\"\<Experiment\>\"", ",", "\"\<Setup\>\"", ",", "\"\<Device\>\"", 
        ",", "\"\<PhosphateSensorConc\>\"", ",", "\"\<eGFPSlope\>\"", ",", 
        "\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<median_chamber\>\"", ",", 
        "\"\<sum_chamber\>\"", ",", "\"\<std_chamber\>\"", ",", 
        "\"\<x_center_chamber\>\"", ",", "\"\<y_center_chamber\>\"", ",", 
        "\"\<radius_chamber\>\"", ",", "\"\<xslice\>\"", ",", 
        "\"\<yslice\>\"", ",", "\"\<MutantID\>\"", ",", "\"\<time_s\>\"", 
        ",", "\"\<median_button_Button_Quant\>\"", ",", 
        "\"\<summed_button_Button_Quant\>\"", ",", "\"\<eGFPSummedI\>\"", 
        ",", "\"\<std_button_Button_Quant\>\"", ",", 
        "\"\<x_button_center_Button_Quant\>\"", ",", 
        "\"\<y_button_center_Button_Quant\>\"", ",", 
        "\"\<radius_button_disk_Button_Quant\>\"", ",", 
        "\"\<median_button_annulus_Button_Quant\>\"", ",", 
        "\"\<summed_button_annulus_normed_Button_Quant\>\"", ",", 
        "\"\<std_button_annulus_localBG_Button_Quant\>\"", ",", 
        "\"\<inner_radius_button_annulus_Button_Quant\>\"", ",", 
        "\"\<outer_radius_button_annulus_Button_Quant\>\"", ",", 
        "\"\<xslice_Button_Quant\>\"", ",", "\"\<yslice_Button_Quant\>\"", 
        ",", "\"\<MutantID_Button_Quant\>\"", ",", "\"\<series_index\>\"", 
        ",", "\"\<Times\>\"", ",", "\"\<MedianIntensities\>\"", ",", 
        "\"\<ExpIndex\>\"", ",", "\"\<AssayType\>\"", ",", 
        "\"\<SubstrateConc\>\"", ",", "\"\<InhibitorConcentrations\>\"", ",", 
        "\"\<Zn2+\>\"", ",", "\"\<SC_Concentrations\>\"", ",", 
        "\"\<SC_Median_Chamber\>\"", ",", "\"\<SC_Median_Chamber\>\"", ",", 
        "\"\<ManualGFPFlag\>\"", ",", "\"\<Indices2\>\""}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ds4", "=", 
    RowBox[{
     RowBox[{"ds3", "[", 
      RowBox[{"All", ",", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"#", ",", 
          RowBox[{"\"\<Indices\>\"", "\[Rule]", "#Indices2"}]}], "]"}], 
        "&"}]}], "]"}], "[", 
     RowBox[{"All", ",", "keysToKeep"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ds4", "[", 
   RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}], "[", 
  RowBox[{
   RowBox[{"1", ";;", "2"}], ",", "All", ",", "\"\<eGFPSummedI\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.79279045031492*^9, 3.792790456709272*^9}, {
  3.79279180928874*^9, 3.792791832627873*^9}, {3.792792311884632*^9, 
  3.792792326458682*^9}, {3.792792357411006*^9, 3.792792389767234*^9}, {
  3.792792431440219*^9, 3.792792475627419*^9}, {3.792792509945599*^9, 
  3.7927925274619837`*^9}, {3.792792610392672*^9, 3.792792677808196*^9}, {
  3.79279459234797*^9, 3.7927945925204363`*^9}, {3.793640524674294*^9, 
  3.793640592337123*^9}, {3.793640725078432*^9, 3.793640726555874*^9}, {
  3.79364076721245*^9, 3.793640779812332*^9}, {3.794143641342843*^9, 
  3.79414365135362*^9}, {3.794158084976575*^9, 3.794158085104227*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"30e8db3b-c70e-42fa-ac42-c62b2b9bab0c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[{28, 19} -> {2244441}, {28, 13} -> {2218608}], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 2], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 1], 2], "Meta" -> 
     Association["ID" -> 247257187349967], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 2], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 1], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     2, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{28, 19}, ShowStringCharacters -> False], 
                  Style[
                   Style[{28, 19}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{28, 19}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{28, 19}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2244441}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2244441}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{28, 19}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{28, 19}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{28, 13}, ShowStringCharacters -> False], 
                  Style[
                   Style[{28, 13}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{28, 13}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{28, 13}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2218608}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2218608}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{28, 13}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{28, 13}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{162., {40.634033203125, 46.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{162., {40.634033203125, 46.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.795659862118823*^9, 3.795790278996353*^9, 
  3.7957944926136217`*^9, 3.795810096702198*^9, 3.795811346419424*^9, 
  3.807149273955854*^9, 3.81263489994324*^9, 3.812634943095621*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"2b1441b6-34cb-4108-b1b0-7ef50421eb42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ds4", "[", 
   RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}], "[", 
  RowBox[{
   RowBox[{"1", ";;", "2"}], ",", "All", ",", "\"\<SubstrateConc\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.795638278400128*^9, 3.795638295260908*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"37f734b5-d18a-4f06-b541-cfe810ef0f56"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> Association[{28, 19} -> {2000.}, {28, 13} -> {2000.}], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 2], 
       TypeSystem`Vector[
        TypeSystem`Atom[Real], 1], 2], "Meta" -> 
     Association["ID" -> 247265777284559], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 2], 
       TypeSystem`Vector[
        TypeSystem`Atom[Real], 1], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     2, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{28, 19}, ShowStringCharacters -> False], 
                  Style[
                   Style[{28, 19}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{28, 19}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{28, 19}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2000.}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2000.}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{28, 19}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{28, 19}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{28, 13}, ShowStringCharacters -> False], 
                  Style[
                   Style[{28, 13}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{28, 13}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{28, 13}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2000.}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2000.}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{28, 13}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{28, 13}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{140., {40.634033203125, 46.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{140., {40.634033203125, 46.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7956598632973423`*^9, 3.7957902818941803`*^9, 
  3.795794492808939*^9, 3.7958100968729563`*^9, 3.79581134658759*^9, 
  3.807149274123335*^9, 3.8126349000553923`*^9, 3.812634943224943*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"76a6bcd6-a137-433d-8a04-d8cfd4036595"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"egfpSameFlag", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.793640783230894*^9, 3.793640794332678*^9}, {
  3.793819949986812*^9, 3.7938199501833076`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"eb33ec6f-fd5a-4bf3-b245-fe037b4c88c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ds5", "=", 
   RowBox[{"ds4", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"#", ",", 
        RowBox[{"\"\<eGFPConstant\>\"", "\[Rule]", "egfpSameFlag"}]}], "]"}], 
      "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7936408091831713`*^9, 3.793640830881701*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"9f0a6cde-341a-4e1b-abf6-c3b652c0c6dd"],

Cell[CellGroupData[{

Cell["Mutant list for local background calculation:", "Subsubsection",
 CellChangeTimes->{{3.7934019368314238`*^9, 
  3.793401942453348*^9}},ExpressionUUID->"8de24dfb-a29c-4265-a0b6-\
a638da881702"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mutantList", "=", 
    RowBox[{"{", 
     RowBox[{"\"\<T79G\>\"", ",", "\"\<Skipped\>\""}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"whichExpt", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EcutoffForBG", "=", "0.3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trueBackgroundRate", "=", 
   RowBox[{
    RowBox[{"-", "2.3"}], " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7934019440760098`*^9, {3.793536934984495*^9, 3.793536935333414*^9}, {
   3.793629643981771*^9, 3.793629646025798*^9}, {3.7936480109579163`*^9, 
   3.793648014535141*^9}, 3.79388401727192*^9, {3.79388778728575*^9, 
   3.793887788094529*^9}, {3.793900399363014*^9, 3.7939003998174877`*^9}, {
   3.7941436644484*^9, 3.794143667114973*^9}, {3.7941581211692133`*^9, 
   3.794158134522079*^9}, {3.7952176631974773`*^9, 3.795217667134389*^9}, {
   3.7952925801053133`*^9, 3.795292580448656*^9}, {3.7956425744699297`*^9, 
   3.795642574623013*^9}, {3.795645579767762*^9, 3.795645579921363*^9}, {
   3.795657298962737*^9, 3.795657299101807*^9}, {3.795659976094977*^9, 
   3.795659976273543*^9}, {3.795790287969832*^9, 3.795790288285059*^9}, {
   3.7958034636381197`*^9, 3.7958034657589083`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"36d12bcb-54aa-413d-be25-58031906b595"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "2. Fit standard curve data, then generate and add standard curve plots (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "eval"], "=", "48"}], TraditionalForm]],ExpressionUUID->
  "12d6aff1-8b71-46e6-ae11-5e492fc8bcd4"],
 "s):"
}], "Subsubsection",
 CellChangeTimes->{{3.732982122369422*^9, 3.73298212984267*^9}, {
  3.7335198368618307`*^9, 3.733519840007523*^9}, {3.733520332191161*^9, 
  3.7335203379182167`*^9}, {3.7335221789957314`*^9, 3.733522179567046*^9}, {
  3.733523573728622*^9, 3.733523582310413*^9}, {3.737921877350267*^9, 
  3.737921881848196*^9}, {3.739148980554291*^9, 3.7391489854936113`*^9}, {
  3.739204195466918*^9, 
  3.7392041958405457`*^9}},ExpressionUUID->"7ca2c047-4fde-4ec7-8f9a-\
eaae5ba54cf8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dynamic", "[", "n", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"start", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataset", "=", 
    RowBox[{"ds5", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#ExpIndex", "\[Equal]", "1"}], "&&", 
        RowBox[{"#AssayType", "\[Equal]", "1"}]}], "&"}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", "[", "dataset", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Fitting standard curves...\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProgressIndicator", "[", 
   RowBox[{
    RowBox[{"Dynamic", "[", "count", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1568"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addStandardCurveFits", "=", 
    RowBox[{"Dataset", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Association", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Indices\>\"", "->", 
           RowBox[{"Normal", "[", 
            RowBox[{"dataset", "[", 
             RowBox[{"count", ",", "\"\<Indices\>\""}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<StdCurveFitObject\>\"", "->", 
           RowBox[{"fitStdCurveNew", "[", 
            RowBox[{
             RowBox[{"ToExpression", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"dataset", "[", 
                RowBox[{"count", ",", "\"\<SC_Concentrations\>\""}], "]"}], 
               "]"}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"NumberQ", "[", 
                RowBox[{
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"Normal", "[", 
                   RowBox[{"dataset", "[", 
                    RowBox[{"count", ",", "\"\<SC_Median_Chamber\>\""}], 
                    "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"Normal", "[", 
                 RowBox[{"dataset", "[", 
                  RowBox[{"count", ",", "\"\<SC_Median_Chamber\>\""}], "]"}], 
                 "]"}], "]"}], ",", 
               RowBox[{"Missing", "[", "]"}]}], "]"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"count", ",", "1", ",", "1568"}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addStandardCurveFits2", "=", 
    RowBox[{"addStandardCurveFits", "[", 
     RowBox[{"All", ",", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<StdCurveSlope\>\"", "\[Rule]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MissingQ", "[", "#StdCurveFitObject", "]"}], ",", 
              RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
              RowBox[{
               RowBox[{
               "#StdCurveFitObject", "[", "\"\<BestFitParameters\>\"", "]"}], 
               "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
           RowBox[{"\"\<StdCurveIntercept\>\"", "\[Rule]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MissingQ", "[", "#StdCurveFitObject", "]"}], ",", 
              RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
              RowBox[{
               RowBox[{
               "#StdCurveFitObject", "[", "\"\<BestFitParameters\>\"", "]"}], 
               "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
           RowBox[{"\"\<StdCurveRSquared\>\"", "\[Rule]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MissingQ", "[", "#StdCurveFitObject", "]"}], ",", 
              RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
              RowBox[{"#StdCurveFitObject", "[", "\"\<RSquared\>\"", "]"}]}], 
             "]"}]}]}], "}"}]}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"withStdCurveFits", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{"JoinAcross", "[", 
     RowBox[{
      RowBox[{"Normal", "[", "ds4", "]"}], ",", 
      RowBox[{"Normal", "[", "addStandardCurveFits2", "]"}], ",", 
      RowBox[{"{", "\"\<Indices\>\"", "}"}], ",", "\"\<Left\>\""}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Adding standard curve plots...\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProgressIndicator", "[", 
   RowBox[{
    RowBox[{"Dynamic", "[", "count2", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1568"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"withStdCurveFitsTemp", "=", 
    RowBox[{"withStdCurveFits", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#ExpIndex", "\[Equal]", "1"}], "&&", 
        RowBox[{"#AssayType", "\[Equal]", "1"}]}], "&"}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addStandardCurvePlots", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Association", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Indices\>\"", "->", 
          RowBox[{"Normal", "[", 
           RowBox[{"withStdCurveFitsTemp", "[", 
            RowBox[{"count2", ",", "\"\<Indices\>\""}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<StandardCurvePlot\>\"", "->", 
          RowBox[{"makeStdCurvePlotNew", "[", 
           RowBox[{
            RowBox[{"withStdCurveFitsTemp", "[", 
             RowBox[{"count2", ",", "\"\<StdCurveSlope\>\""}], "]"}], ",", 
            RowBox[{"withStdCurveFitsTemp", "[", 
             RowBox[{"count2", ",", "\"\<StdCurveIntercept\>\""}], "]"}], ",", 
            RowBox[{"withStdCurveFitsTemp", "[", 
             RowBox[{"count2", ",", "\"\<SC_Concentrations\>\""}], "]"}], ",", 
            RowBox[{"withStdCurveFitsTemp", "[", 
             RowBox[{"count2", ",", "\"\<SC_Median_Chamber\>\""}], "]"}]}], 
           "]"}]}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"count2", ",", "1", ",", "1568"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"withStdCurvePlot", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{"JoinAcross", "[", 
      RowBox[{
       RowBox[{"Normal", "[", "withStdCurveFits", "]"}], ",", 
       "addStandardCurvePlots", ",", 
       RowBox[{"{", "\"\<Indices\>\"", "}"}], ",", "\"\<Left\>\""}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}]}], "Input",
 CellChangeTimes->{{3.733523597976165*^9, 3.7335236150715837`*^9}, {
   3.733523648389865*^9, 3.733523734840747*^9}, {3.733535894563966*^9, 
   3.733535895351377*^9}, {3.734102877683872*^9, 3.734102889967964*^9}, {
   3.734103080475646*^9, 3.734103080797895*^9}, {3.734274751749447*^9, 
   3.7342747533398943`*^9}, {3.7342752728395576`*^9, 3.73427528819278*^9}, 
   3.734275476991047*^9, {3.734283094546897*^9, 3.734283100094578*^9}, {
   3.7342883494889393`*^9, 3.734288355678158*^9}, {3.7345301689225607`*^9, 
   3.7345301739354563`*^9}, {3.73523842968882*^9, 3.735238455546618*^9}, {
   3.736182447615982*^9, 3.73618245522029*^9}, {3.7369893404243193`*^9, 
   3.736989344887883*^9}, {3.73730785299961*^9, 3.7373078569747763`*^9}, {
   3.737919485484497*^9, 3.737919798122252*^9}, 3.737919836495226*^9, 
   3.737920021009149*^9, 3.739149136481941*^9, {3.7391496793942223`*^9, 
   3.73914984419083*^9}, {3.739149879634164*^9, 3.739149892767622*^9}, {
   3.73915013863456*^9, 3.7391501412033167`*^9}, {3.7391516277430573`*^9, 
   3.739151633803513*^9}, {3.742910184888803*^9, 3.742910185443789*^9}, {
   3.742910215906801*^9, 3.742910255093643*^9}, {3.7429103747792253`*^9, 
   3.7429103794196053`*^9}, {3.742910497140226*^9, 3.742910525728919*^9}, {
   3.742911486283687*^9, 3.7429115039860573`*^9}, {3.7519993307020683`*^9, 
   3.751999332153208*^9}, {3.751999512348351*^9, 3.7519995140687237`*^9}, {
   3.756421929603118*^9, 3.7564219422966948`*^9}, {3.756421982471552*^9, 
   3.7564219975284863`*^9}, {3.756422083228126*^9, 3.756422141483158*^9}, {
   3.7575592358862667`*^9, 3.7575592477047358`*^9}, {3.759349316617275*^9, 
   3.759349355066469*^9}, 3.763316062616713*^9, {3.76331621980005*^9, 
   3.763316247452601*^9}, {3.763316283026286*^9, 3.763316352794611*^9}, {
   3.76331946278226*^9, 3.763319634073126*^9}, {3.763319669093523*^9, 
   3.763319813124384*^9}, 3.7633199221232862`*^9, {3.7634738743156433`*^9, 
   3.763473874888348*^9}, {3.7927910841757727`*^9, 3.79279108465296*^9}, {
   3.7927912439449987`*^9, 3.79279125146587*^9}, {3.7927918421460733`*^9, 
   3.792791859600848*^9}, 3.7927920083450317`*^9, {3.7927922754629*^9, 
   3.792792282956759*^9}, {3.7927927126357107`*^9, 3.792792740480048*^9}, {
   3.792792772158093*^9, 3.792792774298769*^9}, {3.793653492722561*^9, 
   3.793653492883381*^9}, {3.7952178238096313`*^9, 3.7952178273044863`*^9}, 
   3.7956603144855413`*^9, {3.795660522402348*^9, 3.795660549875517*^9}, {
   3.795660580520545*^9, 3.795660600691105*^9}, {3.795660655557248*^9, 
   3.795660656046502*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"39993858-c767-473a-ac2d-bc76ede4087e"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`n, StandardForm],
  ImageSizeCache->{8., {0., 7.}}]], "Output",
 CellChangeTimes->{3.7956599778994503`*^9, 3.795660079374961*^9, 
  3.7956605509146757`*^9, 3.795660601071372*^9, 3.795660656691317*^9, 
  3.7957902972819138`*^9, 3.795794493134389*^9, 3.795803466895756*^9, 
  3.7958100971474667`*^9, 3.795811349794512*^9, 3.807149285412599*^9, 
  3.8126349034142437`*^9, 3.812634943584881*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"9b22d483-7e43-488b-a15c-60850e0fcde2"],

Cell[BoxData["1568"], "Output",
 CellChangeTimes->{3.7956599778994503`*^9, 3.795660079374961*^9, 
  3.7956605509146757`*^9, 3.795660601071372*^9, 3.795660656691317*^9, 
  3.7957902972819138`*^9, 3.795794493134389*^9, 3.795803466895756*^9, 
  3.7958100971474667`*^9, 3.795811349794512*^9, 3.807149285412599*^9, 
  3.8126349034142437`*^9, 3.8126349435867567`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"bfa89227-f389-47e2-a9ba-5cae93457301"],

Cell[BoxData["\<\"Fitting standard curves...\"\>"], "Print",
 CellChangeTimes->{3.795659977957368*^9, 3.795660079385664*^9, 
  3.795660550968072*^9, 3.795660601078534*^9, 3.795660656739668*^9, 
  3.795790297286294*^9, 3.795794493138975*^9, 3.795803466901277*^9, 
  3.795810097151816*^9, 3.7958113497994213`*^9, 3.807149285440324*^9, 
  3.812634903417769*^9, 3.812634943588524*^9},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"52c684ce-f800-4044-b18b-63c3c3f0a965"],

Cell[BoxData[
 ProgressIndicatorBox[Dynamic[$CellContext`count], {1, 1568}]], "Output",
 CellChangeTimes->{3.7956599778994503`*^9, 3.795660079374961*^9, 
  3.7956605509146757`*^9, 3.795660601071372*^9, 3.795660656691317*^9, 
  3.7957902972819138`*^9, 3.795794493134389*^9, 3.795803466895756*^9, 
  3.7958100971474667`*^9, 3.795811349794512*^9, 3.807149285412599*^9, 
  3.8126349034142437`*^9, 3.8126349435898542`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"64e9e8f7-2908-4983-9c80-bd889d80da7d"],

Cell[BoxData["\<\"Adding standard curve plots...\"\>"], "Print",
 CellChangeTimes->{3.795659977957368*^9, 3.795660079385664*^9, 
  3.795660550968072*^9, 3.795660601078534*^9, 3.795660656739668*^9, 
  3.795790297286294*^9, 3.795794493138975*^9, 3.795803466901277*^9, 
  3.795810097151816*^9, 3.7958113497994213`*^9, 3.807149285440324*^9, 
  3.812634903417769*^9, 3.812634948884027*^9},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"7f2cff9b-b1e4-4b85-8c77-e5939e5db4dd"],

Cell[BoxData[
 ProgressIndicatorBox[Dynamic[$CellContext`count2], {1, 1568}]], "Output",
 CellChangeTimes->{3.7956599778994503`*^9, 3.795660079374961*^9, 
  3.7956605509146757`*^9, 3.795660601071372*^9, 3.795660656691317*^9, 
  3.7957902972819138`*^9, 3.795794493134389*^9, 3.795803466895756*^9, 
  3.7958100971474667`*^9, 3.795811349794512*^9, 3.807149285412599*^9, 
  3.8126349034142437`*^9, 3.812634948885084*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"9ee1b672-19a3-4753-a4bf-007368a94cfd"],

Cell[BoxData["45.413715`8.10873202365079"], "Output",
 CellChangeTimes->{3.7956599778994503`*^9, 3.795660079374961*^9, 
  3.7956605509146757`*^9, 3.795660601071372*^9, 3.795660656691317*^9, 
  3.7957902972819138`*^9, 3.795794493134389*^9, 3.795803466895756*^9, 
  3.7958100971474667`*^9, 3.795811349794512*^9, 3.807149285412599*^9, 
  3.8126349034142437`*^9, 3.8126349889950123`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"ca29a536-beb1-48bd-8b9a-7ed5f0fdd3bf"],

Cell[BoxData["45.701394`8.111474440770953"], "Output",
 CellChangeTimes->{3.7956599778994503`*^9, 3.795660079374961*^9, 
  3.7956605509146757`*^9, 3.795660601071372*^9, 3.795660656691317*^9, 
  3.7957902972819138`*^9, 3.795794493134389*^9, 3.795803466895756*^9, 
  3.7958100971474667`*^9, 3.795811349794512*^9, 3.807149285412599*^9, 
  3.8126349034142437`*^9, 3.812634989282455*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"a1b95932-8c48-41f0-b277-31418f5905fd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2b. Append uM progress curve data:", "Subsubsection",
 CellChangeTimes->{{3.7429121262282867`*^9, 
  3.742912136848997*^9}},ExpressionUUID->"1e40ae36-589a-4f40-8667-\
6d794ac291f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"withProgressCurves", "=", 
   RowBox[{"withStdCurvePlot", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"#", ",", 
        RowBox[{"\"\<TurnoverTimepoints(uM)\>\"", "\[Rule]", 
         RowBox[{"convertTouM", "[", 
          RowBox[{
          "#MedianIntensities", ",", "#StdCurveSlope", ",", 
           "#StdCurveIntercept"}], "]"}]}]}], "]"}], "&"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7429121395029087`*^9, 3.742912163202223*^9}, {
   3.7429121938757563`*^9, 3.7429122206387577`*^9}, 3.75199960726586*^9, {
   3.757111299970009*^9, 3.7571113015902357`*^9}, {3.763320070274905*^9, 
   3.7633202475800333`*^9}, {3.7634739491283073`*^9, 3.763473950365087*^9}, {
   3.79279290331514*^9, 3.7927929055651712`*^9}, 3.795217917434187*^9, 
   3.795462414869464*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"2d29bf37-8dde-4120-a07d-cbb06a795fed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "3. Do optimized fit (using cMUP rates to measure rate of contaminant \
hydrolysis) on progress curves (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "eval"], "=", "30"}], TraditionalForm]],ExpressionUUID->
  "2f0cce52-2be4-44a3-821f-a42182ba6698"],
 "s):\nN.b. Also appending EnzymeConc here because need it to calculate cMUP \
contaminant rate"
}], "Subsubsection",
 CellChangeTimes->{{3.733841886251356*^9, 3.7338419278901157`*^9}, {
   3.7379218864016533`*^9, 3.737921888842204*^9}, {3.739204199468233*^9, 
   3.7392041997993298`*^9}, {3.795217987457612*^9, 3.795217989517642*^9}, {
   3.79521820821776*^9, 3.795218249486291*^9}, {3.7952186207841682`*^9, 
   3.795218646128283*^9}, 
   3.7955405072910223`*^9},ExpressionUUID->"bb464193-288e-4f85-b680-\
1d8674eccc2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmupData", "=", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/PafA_cMUP_\
aggData_WTR164ANorm_v.2.0_201024.csv\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.791474528104637*^9, 3.791474529302511*^9}, {
   3.79147512544281*^9, 3.7914751287513447`*^9}, {3.791475174452117*^9, 
   3.7914752017475*^9}, {3.795201259950823*^9, 3.7952012603092318`*^9}, 
   3.807149291544808*^9, {3.807149322669442*^9, 3.807149331954809*^9}, {
   3.812634959950171*^9, 3.812634962638749*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"a5babe92-4563-480b-9589-37d32aa82490"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cmupParams", "=", 
   RowBox[{"cmupData", "[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<MutantID\>\"", ",", "\"\<kcatNormMedian\>\"", ",", 
       "\"\<KMMedian\>\"", ",", "\"\<kcat/KMNormMedianLimit\>\"", ",", 
       "\"\<kcat/KMAggLimit\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmupGrouped", "=", 
   RowBox[{"cmupParams", "[", 
    RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.791475210004676*^9, 3.791475242128954*^9}, {
  3.7914753439893503`*^9, 3.791475371008231*^9}, {3.791475659615436*^9, 
  3.79147566080639*^9}, {3.791475790533856*^9, 3.791475794396702*^9}, {
  3.7914771801207*^9, 3.791477186957958*^9}, {3.7952012722753963`*^9, 
  3.7952012764204483`*^9}, {3.7952013207153053`*^9, 3.7952013309672956`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"0fe5c3af-b529-48c0-b3f7-edfad537e0d0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"wtkcatKm", "=", 
  RowBox[{"cmupGrouped", "[", 
   RowBox[{"\"\<WT\>\"", ",", "1", ",", "\"\<kcat/KMNormMedianLimit\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"wtkcat", "=", 
  RowBox[{"cmupGrouped", "[", 
   RowBox[{"\"\<WT\>\"", ",", "1", ",", "\"\<kcatNormMedian\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"wtKm", "=", 
  RowBox[{"cmupGrouped", "[", 
   RowBox[{"\"\<WT\>\"", ",", "1", ",", "\"\<KMMedian\>\""}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.791477033633377*^9, 3.7914770624833937`*^9}, {
  3.791477136838026*^9, 3.791477159593721*^9}, {3.7952013436582203`*^9, 
  3.7952013482594213`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"5b28550f-2f51-429e-90ff-0ec32bd6ada2"],

Cell[BoxData["1.421299`*^6"], "Output",
 CellChangeTimes->{3.7956608197518673`*^9, 3.795790372399044*^9, 
  3.795794558758119*^9, 3.79581017492667*^9, 3.7958114236546173`*^9, 
  3.807149375033278*^9, 3.8126350048708277`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"2f1bdd2d-f316-4b28-8f66-daa9726c5e3a"],

Cell[BoxData["121.236`"], "Output",
 CellChangeTimes->{3.7956608197518673`*^9, 3.795790372399044*^9, 
  3.795794558758119*^9, 3.79581017492667*^9, 3.7958114236546173`*^9, 
  3.807149375033278*^9, 3.812635004872117*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"1ffc4622-d2e4-4d7d-816d-a02887b76db7"],

Cell[BoxData["85.3261`"], "Output",
 CellChangeTimes->{3.7956608197518673`*^9, 3.795790372399044*^9, 
  3.795794558758119*^9, 3.79581017492667*^9, 3.7958114236546173`*^9, 
  3.807149375033278*^9, 3.8126350048733788`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"1b10adf3-3a43-4b91-9821-84d229ecd817"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cmupParamsForCalc", "=", 
  RowBox[{
   RowBox[{"Dataset", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Association", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<MutantID\>\"", "->", 
          RowBox[{"cmupGrouped", "[", 
           RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}]}], 
         ",", 
         RowBox[{"\"\<kcat\>\"", "->", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"cmupGrouped", "[", 
              RowBox[{"mutant", ",", "1", ",", "\"\<kcat/KMAggLimit\>\""}], 
              "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"cmupGrouped", "[", 
                 RowBox[{
                 "mutant", ",", "All", ",", "\"\<kcatNormMedian\>\""}], "]"}],
                 "]"}], ",", 
               RowBox[{
                RowBox[{"NumberQ", "[", "#", "]"}], "&"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Median", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"Normal", "[", 
                  RowBox[{"cmupGrouped", "[", 
                   RowBox[{
                   "mutant", ",", "All", ",", 
                    "\"\<kcat/KMNormMedianLimit\>\""}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}], "/", 
              "wtkcatKm"}], "*", "wtkcat"}]}], "]"}]}], ",", 
         RowBox[{"\"\<Km\>\"", "->", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"cmupGrouped", "[", 
              RowBox[{"mutant", ",", "1", ",", "\"\<kcat/KMAggLimit\>\""}], 
              "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"cmupGrouped", "[", 
                 RowBox[{"mutant", ",", "All", ",", "\"\<KMMedian\>\""}], 
                 "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"NumberQ", "[", "#", "]"}], "&"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "wtKm"}], "]"}]}], ",", 
         RowBox[{"\"\<kobs\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Normal", "[", 
              RowBox[{"cmupGrouped", "[", 
               RowBox[{
               "mutant", ",", "All", ",", "\"\<kcat/KMNormMedianLimit\>\""}], 
               "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"NumberQ", "[", "#", "]"}], "&"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"\"\<Limit\>\"", "->", 
          RowBox[{"cmupGrouped", "[", 
           RowBox[{"mutant", ",", "1", ",", "\"\<kcat/KMAggLimit\>\""}], 
           "]"}]}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"mutant", ",", "1", ",", 
        RowBox[{"Length", "[", "cmupGrouped", "]"}]}], "}"}]}], "]"}], "]"}], 
   "[", 
   RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.791475797641322*^9, 3.7914759249722958`*^9}, {
  3.7914759566326447`*^9, 3.7914761261254807`*^9}, {3.791477070366592*^9, 
  3.791477079519524*^9}, {3.7914771120983152`*^9, 3.791477132613318*^9}, {
  3.7914772004719343`*^9, 3.791477204103182*^9}, {3.795201358730958*^9, 
  3.7952013912563677`*^9}, {3.7952014248929167`*^9, 3.7952014297597103`*^9}, {
  3.795201459979436*^9, 3.795201463927928*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"028d8830-dacd-4926-af79-0c11c82ed4f8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          8313858549031882372647727008244272725264678612722363503328], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           Association[{All, All, 
              TypeSystem`PackageScope`KeyDummy[0]} -> 
            1, {All, All, "MutantID"} -> 1, {All, All, "kcat"} -> 
            1, {All, All, "Km"} -> 1, {All, All, "kobs"} -> 
            1, {All, All, "Limit"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "MutantID" -> 
                   TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                   "kcat" -> TypeSystem`PackageScope`AtomShape[60], "Km" -> 
                   TypeSystem`PackageScope`AtomShape[60], "kobs" -> 
                   TypeSystem`PackageScope`AtomShape[60], "Limit" -> 
                   TypeSystem`PackageScope`AtomShape[34]]], 
                 DirectedInfinity[1], 5, {All, All}]], 1, 
               DirectedInfinity[1], {All}]]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            TypeSystem`Struct[{"MutantID", "kcat", "Km", "kobs", "Limit"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 1], 1042], "Meta" -> 
         Association["ID" -> 402034923795984], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           Association[{All, All, 
              TypeSystem`PackageScope`KeyDummy[0]} -> 
            1, {All, All, "MutantID"} -> 1, {All, All, "kcat"} -> 
            1, {All, All, "Km"} -> 1, {All, All, "kobs"} -> 
            1, {All, All, "Limit"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "MutantID" -> 
                   TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                   "kcat" -> TypeSystem`PackageScope`AtomShape[60], "Km" -> 
                   TypeSystem`PackageScope`AtomShape[60], "kobs" -> 
                   TypeSystem`PackageScope`AtomShape[60], "Limit" -> 
                   TypeSystem`PackageScope`AtomShape[34]]], 
                 DirectedInfinity[1], 5, {All, All}]], 1, 
               DirectedInfinity[1], {All}]]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            TypeSystem`Struct[{"MutantID", "kcat", "Km", "kobs", "Limit"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 1], 1042], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 20, 
         "DisplayedColumnCount" -> 5, "DataRowCount" -> 1042, 
         "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MutantID", 
                    Style[
                    "MutantID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "MutantID"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "MutantID"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["kcat", 
                    Style[
                    "kcat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "kcat"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "kcat"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Km", 
                    Style[
                    "Km", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Km"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Km"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["kobs", 
                    Style[
                    "kobs", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "kobs"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "kobs"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Limit", 
                    Style[
                    "Limit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Limit"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Limit"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Q21V", 
                    Style[
                    "Q21V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Q21V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q21V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["Q21V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q21V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["209.079"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q21V"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["91.9484"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q21V"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2161523."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q21V"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q21V"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Q21G", 
                    Style[
                    "Q21G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Q21G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q21G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["Q21G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q21G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["217.735"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q21G"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["89.8925"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q21G"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1962154."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q21G"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q21G"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["K22V", 
                    Style[
                    "K22V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["K22V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K22V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["K22V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K22V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["125.808"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K22V"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["101.182"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K22V"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1162664."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K22V"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K22V"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["K22G", 
                    Style[
                    "K22G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["K22G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K22G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["K22G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K22G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["74.0736"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K22G"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["69.1022"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K22G"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1602364."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K22G"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K22G"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["T23V", 
                    Style[
                    "T23V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T23V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T23V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["T23V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T23V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["185.194"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T23V"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["106.603"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T23V"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1939699."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T23V"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T23V"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["T23G", 
                    Style[
                    "T23G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T23G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T23G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["T23G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T23G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["112.296"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T23G"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["77.0815"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T23G"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1435659."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T23G"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T23G"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["N24V", 
                    Style[
                    "N24V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["N24V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N24V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["N24V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N24V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["132.689"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N24V"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["89.8097"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N24V"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1399401."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N24V"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N24V"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["N24G", 
                    Style[
                    "N24G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["N24G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N24G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["N24G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N24G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["101.745"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N24G"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["61.6265"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N24G"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1777189."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N24G"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N24G"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["A25V", 
                    Style[
                    "A25V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["A25V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A25V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["A25V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A25V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["218.481"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A25V"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["97.4335"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A25V"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1993340."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A25V"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A25V"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["A25G", 
                    Style[
                    "A25G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["A25G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A25G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["A25G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A25G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["208.047"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A25G"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["86.4074"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A25G"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2653317."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A25G"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A25G"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["V26A", 
                    Style[
                    "V26A", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["V26A"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26A"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["V26A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26A"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["50.9521"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26A"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["78.9105"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26A"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["734245."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26A"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26A"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["V26G", 
                    Style[
                    "V26G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["V26G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["V26G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20.6704"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["57.2131"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["262528."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["P27V", 
                    Style[
                    "P27V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["P27V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P27V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["P27V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P27V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["136.826"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P27V"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["92.3954"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P27V"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1525878."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P27V"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P27V"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["P27G", 
                    Style[
                    "P27G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["P27G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P27G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["P27G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P27G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["59.2499"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P27G"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["69.7544"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P27G"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["433224."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P27G"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P27G"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["R28V", 
                    Style[
                    "R28V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["R28V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R28V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["R28V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R28V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["75.7024"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R28V"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["78.4174"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R28V"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["933231."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R28V"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R28V"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["R28G", 
                    Style[
                    "R28G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["R28G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R28G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["R28G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R28G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["41.7322"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R28G"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["37.5226"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R28G"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1076915."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R28G"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R28G"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["P29V", 
                    Style[
                    "P29V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["P29V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["P29V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14.3532"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29V"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["75.765"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29V"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["203573."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29V"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29V"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["P29G", 
                    Style[
                    "P29G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["P29G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["P29G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10.6963"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["69.1388"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["188096."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["K30V", 
                    Style[
                    "K30V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["K30V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K30V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["K30V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K30V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["87.1358"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K30V"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["91.0405"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K30V"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["949661."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K30V"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K30V"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["K30G", 
                    Style[
                    "K30G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["K30G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K30G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["K30G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K30G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["49.8935"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K30G"], 1, 
                    Key["kcat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["61.7573"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K30G"], 1, 
                    Key["Km"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1203538."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K30G"], 1, 
                    Key["kobs"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K30G"], 1, 
                    Key["Limit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1042, 1], {1, 1042 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1042, 1], {1, 1042 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1042, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1042, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1042, 1], {1, 1042 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1042, 1], {1, 1042 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {405., {290.134033203125, 295.865966796875}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {405., {290.134033203125, 295.865966796875}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 8313858549031882372647727008244272725264678612722363503328,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7956608235983543`*^9, 3.795790377239154*^9, 
  3.7957945624973288`*^9, 3.795810179236899*^9, 3.795811427651355*^9, 
  3.8071493789555902`*^9, 3.812635008145294*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"b3dbacf8-a0c1-449f-88fc-41aeef476e79"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"obsProgressCurve", "[", 
    RowBox[{"times_", ",", "concentrations_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temp1", ",", "fullProgressCurve"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MissingQ", "[", "concentrations", "]"}], ",", 
       RowBox[{"Missing", "[", "]"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp1", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Normal", "[", "times", "]"}], ",", 
           RowBox[{"Normal", "[", "concentrations", "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"fullProgressCurve", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"temp1", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "n"}], "]"}], "]"}], ",", 
               RowBox[{"temp1", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "n"}], "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"temp1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}]}]}], "]"}]}],
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"progressCurveLambertW", "[", 
    RowBox[{
     RowBox[{"kcat_", "?", "NumberQ"}], ",", "KM_", ",", "enz_", ",", 
     "substrate_", ",", "time_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"substrate", "-", 
     RowBox[{"KM", "*", 
      RowBox[{"LambertW", "[", 
       RowBox[{
        RowBox[{"substrate", "/", "KM"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"substrate", "-", 
            RowBox[{"kcat", "*", "enz", "*", "time"}]}], ")"}], "/", "KM"}], 
         "]"}]}], "]"}]}]}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxExponent", "=", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", "$MaxMachineNumber"}], "]"}], "]"}], "+", "1"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitRateSuperposition", "[", 
   RowBox[{
   "mutant_", ",", "progresscurve_", ",", "enzymeconc_", ",", "mecmupConc_"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MissingQ", "[", "progresscurve", "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Missing", "[", "]"}], ",", 
        RowBox[{"{", "7", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"chamberTestPC2", "=", "progresscurve"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"econc", "=", 
        RowBox[{"enzymeconc", "/", "1000.0"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"cmupkcat", "=", 
        RowBox[{"cmupParamsForCalc", "[", 
         RowBox[{"mutant", ",", "1", ",", "\"\<kcat\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"cmupKm", "=", 
        RowBox[{"cmupParamsForCalc", "[", 
         RowBox[{"mutant", ",", "1", ",", "\"\<Km\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"limitQ", "=", 
        RowBox[{"cmupParamsForCalc", "[", 
         RowBox[{"mutant", ",", "1", ",", "\"\<Limit\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"baseline", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"chamberTestPC2", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"if", " ", "we", " ", 
           RowBox[{"don", "'"}], "t", " ", "have", " ", "measurements", " ", 
           "for", " ", "kcat", " ", "and", " ", "Km", " ", "then", " ", 
           RowBox[{"can", "'"}], "t", " ", "fit", " ", "the", " ", 
           "superposition", " ", "function"}], " ", "-", " ", 
          RowBox[{
          "in", " ", "these", " ", "cases", " ", "defaulting", " ", "to", " ",
            "a", " ", "fit", " ", "using", " ", "the", " ", "points", " ", 
           "at", " ", "t"}]}], ">", 
         RowBox[{"2500", "s"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"basicFit", "=", 
        RowBox[{"LinearModelFit", "[", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"chamberTestPC2", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"chamberTestPC2", "[", 
                  RowBox[{"[", 
                   RowBox[{"n", ",", "2"}], "]"}], "]"}], "-", "baseline"}]}],
                "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", 
                RowBox[{"Length", "[", "chamberTestPC2", "]"}]}], "}"}]}], 
             "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[GreaterEqual]", "2500.0"}], 
             "&"}]}], "]"}], ",", "x", ",", "x"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"basicFitRate", "=", 
        RowBox[{"basicFit", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"basicFitIntercept", "=", 
        RowBox[{"basicFit", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"pcBaselineCorrected", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"chamberTestPC2", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"chamberTestPC2", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "2"}], "]"}], "]"}], "-", "baseline"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "chamberTestPC2", "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", 
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"Thickness", "[", "0.125", "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"FaceForm", "[", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"GrayLevel", "[", "0.5", "]"}], ",", 
              RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], ",", 
           RowBox[{"Disk", "[", "]"}], ",", 
           RowBox[{"Opacity", "[", "0.1", "]"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "also", " ", "modifying", " ", "to", " ", "fit", " ", "only", " ", 
          "rates"}], " ", "-", " ", 
         RowBox[{
         "the", " ", "testing", " ", "above", " ", "is", " ", "fitting", " ", 
          "the", " ", "MecMUP", " ", 
          RowBox[{"kcat", "/", "KM"}]}]}], " ", "*)"}], "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"NumberQ", "[", "cmupkcat", "]"}], "&&", 
          RowBox[{"limitQ", "\[NotEqual]", 
           RowBox[{"-", "1"}]}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"fit", "=", 
           RowBox[{"Quiet", "[", 
            RowBox[{"NMinimize", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "2"}], "]"}], "]"}], "-", "baseline"}], 
                    ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"progressCurveLambertW", "[", 
                    RowBox[{
                    "cmupkcat", ",", "cmupKm", ",", "econc", ",", "cmup", ",", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"(", "rate", ")"}], "*", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "1"}], "]"}], "]"}]}]}], ")"}]}], ")"}],
                    "^", "2"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Length", "[", "chamberTestPC2", "]"}]}], "}"}]}],
                  "]"}], ",", 
                RowBox[{
                 RowBox[{"rate", ">", 
                  RowBox[{"-", "0.05"}]}], "&&", 
                 RowBox[{"rate", "<", "0.05"}], "&&", 
                 RowBox[{"cmup", ">", "0.0"}], "&&", 
                 RowBox[{"cmup", "<", 
                  RowBox[{"(", 
                   RowBox[{"mecmupConc", "/", "1000.0"}], ")"}]}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"cmup", ",", "rate"}], "}"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"lastFivePointsForFlag", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"chamberTestPC2", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"progressCurveLambertW", "[", 
                RowBox[{"cmupkcat", ",", "cmupKm", ",", "econc", ",", 
                 RowBox[{"mecmupConc", "/", "1000.0"}], ",", 
                 RowBox[{"chamberTestPC2", "[", 
                  RowBox[{"[", 
                   RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", "chamberTestPC2", "]"}]}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"flagFit", "=", 
           RowBox[{"LinearModelFit", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"lastFivePointsForFlag", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[GreaterEqual]", 
                 "2500.0"}], "&"}]}], "]"}], ",", "x", ",", "x"}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"fit", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"fit", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"progressCurveLambertW", "[", 
                  RowBox[{"cmupkcat", ",", "cmupKm", ",", "econc", ",", 
                   RowBox[{"fit", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
                   "t"}], "]"}], "+", 
                 RowBox[{
                  RowBox[{"fit", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}], "*", 
                  "t"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", 
                  RowBox[{
                   RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "*", 
                   "1.2"}]}], "}"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                    "*", "0.2"}]}], ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ">", 
                    "5.0"}], ",", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                    "*", "0.5"}]}], ",", "5.5"}], "]"}]}], "}"}]}], ",", 
                RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}], ",", 
              RowBox[{"ListPlot", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "2"}], "]"}], "]"}], "-", 
                    "baseline"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Length", "[", "chamberTestPC2", "]"}]}], "}"}]}],
                  "]"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "2"}], ",", "6"}], "}"}]}], ",", 
                RowBox[{"PlotMarkers", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"p", ",", "0.05"}], "}"}]}]}], "]"}], ",", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"progressCurveLambertW", "[", 
                 RowBox[{"cmupkcat", ",", "cmupKm", ",", "econc", ",", 
                  RowBox[{"fit", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
                  "t"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", 
                  RowBox[{
                   RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "*", 
                   "1.2"}]}], "}"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "All"}], "}"}]}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Gray", ",", "Dashed"}], "]"}]}]}], "]"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Product (\[Mu]M)\>\""}],
                 "}"}]}], ",", 
              RowBox[{"FrameStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"18", ",", "Black", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                "]"}]}], ",", 
              RowBox[{"Epilog", "\[Rule]", 
               RowBox[{"Inset", "[", 
                RowBox[{
                 RowBox[{"mutant", "<>", "\"\<\\n\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"fit", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
                    "0.0000001"}], "]"}], ",", 
                    RowBox[{"ScientificNotationThreshold", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "maxExponent"}], ",", "maxExponent"}], 
                    "}"}]}]}], "]"}], "]"}], "<>", "\"\<\[Mu]M/s\>\"", "<>", 
                  "\"\<\\n[cMUP]=\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"fit", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
                    "0.01"}], "]"}], "]"}], "<>", "\"\< \[Mu]M\>\""}], ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{"0.80", ",", "0.3"}], "}"}], "]"}]}], "]"}]}]}], 
             "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{"flagFit", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fit", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}], "-", 
               "trueBackgroundRate"}], ")"}], "/", 
             RowBox[{"Abs", "[", 
              RowBox[{"flagFit", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"progressCurveLambertW", "[", 
                  RowBox[{"cmupkcat", ",", "cmupKm", ",", "econc", ",", 
                   RowBox[{"fit", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
                   "t"}], "]"}], "+", 
                 RowBox[{
                  RowBox[{"fit", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}], "*", 
                  "t"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", 
                  RowBox[{
                   RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "*", 
                   "1.2"}]}], "}"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "All"}], "}"}]}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Darker", "[", "Red", "]"}]}]}], "]"}], ",", 
              RowBox[{"ListPlot", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "2"}], "]"}], "]"}], "-", 
                    "baseline"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Length", "[", "chamberTestPC2", "]"}]}], "}"}]}],
                  "]"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "2"}], ",", "6"}], "}"}]}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{
                   RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
                   RowBox[{"Darker", "[", "Red", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], 
              ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Product (\[Mu]M)\>\""}],
                 "}"}]}], ",", 
              RowBox[{"FrameStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"Black", ",", "18", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                "]"}]}]}], "]"}], ",", "pcBaselineCorrected"}], "}"}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"NumberQ", "[", "cmupkcat", "]"}], "&&", 
          RowBox[{"limitQ", "\[Equal]", 
           RowBox[{"-", "1"}]}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"lastFivePointsForFlag", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"chamberTestPC2", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"progressCurveLambertW", "[", 
                RowBox[{"cmupkcat", ",", "cmupKm", ",", "econc", ",", 
                 RowBox[{"mecmupConc", "/", "1000.0"}], ",", 
                 RowBox[{"chamberTestPC2", "[", 
                  RowBox[{"[", 
                   RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", "chamberTestPC2", "]"}]}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"flagFit", "=", 
           RowBox[{"LinearModelFit", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"lastFivePointsForFlag", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[GreaterEqual]", 
                 "2500.0"}], "&"}]}], "]"}], ",", "x", ",", "x"}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Missing", "[", "]"}], ",", "basicFitRate", ",", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"basicFitRate", "*", "t"}], "+", 
                 "basicFitIntercept"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", 
                  RowBox[{
                   RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "*", 
                   "1.2"}]}], "}"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                    "*", "0.1"}]}], ")"}], ">", "0"}], ",", "0", ",", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                    "*", "0.1"}]}]}], "]"}], ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ">", 
                    "5.0"}], ",", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                    "*", "0.5"}]}], ",", "5.5"}], "]"}]}], "}"}]}], ",", 
                RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}], ",", 
              RowBox[{"ListPlot", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "2"}], "]"}], "]"}], "-", 
                    "baseline"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Length", "[", "chamberTestPC2", "]"}]}], "}"}]}],
                  "]"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "2"}], ",", "6"}], "}"}]}], ",", 
                RowBox[{"PlotMarkers", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"p", ",", "0.05"}], "}"}]}]}], "]"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Product (\[Mu]M)\>\""}],
                 "}"}]}], ",", 
              RowBox[{"FrameStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"18", ",", "Black", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                "]"}]}], ",", 
              RowBox[{"Epilog", "\[Rule]", 
               RowBox[{"Inset", "[", 
                RowBox[{
                 RowBox[{"mutant", "<>", "\"\<\\n\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{"basicFitRate", ",", "0.0000001"}], "]"}], ",", 
                    RowBox[{"ScientificNotationThreshold", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "maxExponent"}], ",", "maxExponent"}], 
                    "}"}]}]}], "]"}], "]"}], "<>", "\"\<\[Mu]M/s\>\""}], ",", 
                 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{"0.80", ",", "0.2"}], "}"}], "]"}]}], "]"}]}]}], 
             "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{"flagFit", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fit", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}], "-", 
               "trueBackgroundRate"}], ")"}], "/", 
             RowBox[{"Abs", "[", 
              RowBox[{"flagFit", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"basicFitRate", "*", "t"}], "+", 
                 "basicFitIntercept"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", 
                  RowBox[{
                   RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "*", 
                   "1.2"}]}], "}"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "All"}], "}"}]}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Darker", "[", "Red", "]"}]}]}], "]"}], ",", 
              RowBox[{"ListPlot", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "2"}], "]"}], "]"}], "-", 
                    "baseline"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Length", "[", "chamberTestPC2", "]"}]}], "}"}]}],
                  "]"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "2"}], ",", "6"}], "}"}]}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{
                   RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
                   RowBox[{"Darker", "[", "Red", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], 
              ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Product (\[Mu]M)\>\""}],
                 "}"}]}], ",", 
              RowBox[{"FrameStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"Black", ",", "18", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                "]"}]}]}], "]"}], ",", "pcBaselineCorrected"}], "}"}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"NumberQ", "[", "cmupkcat", "]"}], "\[Equal]", "False"}], 
         ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Missing", "[", "]"}], ",", "basicFitRate", ",", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"basicFitRate", "*", "t"}], "+", 
                "basicFitIntercept"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "*", 
                  "1.2"}]}], "}"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                    "*", "0.1"}]}], ")"}], ">", "0"}], ",", "0", ",", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                    "*", "0.1"}]}]}], "]"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ">", 
                    "5.0"}], ",", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"Max", "[", 
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                    "*", "0.5"}]}], ",", "5.5"}], "]"}]}], "}"}]}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}], ",", 
             RowBox[{"ListPlot", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "2"}], "]"}], "]"}], "-", 
                    "baseline"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{"Length", "[", "chamberTestPC2", "]"}]}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "2"}], ",", "6"}], "}"}]}], ",", 
               RowBox[{"PlotMarkers", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"p", ",", "0.05"}], "}"}]}]}], "]"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"Axes", "\[Rule]", "False"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Product (\[Mu]M)\>\""}], 
               "}"}]}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"18", ",", "Black", ",", 
                RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}],
              ",", 
             RowBox[{"Epilog", "\[Rule]", 
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"mutant", "<>", "\"\<\\n\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"NumberForm", "[", 
                   RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{"basicFitRate", ",", "0.0000001"}], "]"}], ",", 
                    RowBox[{"ScientificNotationThreshold", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "maxExponent"}], ",", "maxExponent"}], 
                    "}"}]}]}], "]"}], "]"}], "<>", "\"\<\[Mu]M/s\>\""}], ",", 
                
                RowBox[{"Scaled", "[", 
                 RowBox[{"{", 
                  RowBox[{"0.80", ",", "0.2"}], "}"}], "]"}]}], "]"}]}]}], 
            "]"}], ",", 
           RowBox[{"Missing", "[", "]"}], ",", 
           RowBox[{"Missing", "[", "]"}], ",", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"basicFitRate", "*", "t"}], "+", 
                "basicFitIntercept"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "*", 
                  "1.2"}]}], "}"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "All"}], "}"}]}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"Darker", "[", "Red", "]"}]}]}], "]"}], ",", 
             RowBox[{"ListPlot", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"chamberTestPC2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "2"}], "]"}], "]"}], "-", 
                    "baseline"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{"Length", "[", "chamberTestPC2", "]"}]}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "2"}], ",", "6"}], "}"}]}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
                  RowBox[{"Darker", "[", "Red", "]"}], ",", 
                  RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], 
             ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"Axes", "\[Rule]", "False"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Product (\[Mu]M)\>\""}], 
               "}"}]}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Black", ",", "18", ",", 
                RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
               "]"}]}]}], "]"}], ",", "pcBaselineCorrected"}], "}"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.795462730733308*^9, 3.795462731085247*^9}, 
   3.795463154275111*^9, {3.795463264370247*^9, 3.7954632645632153`*^9}, {
   3.795463845884293*^9, 3.79546385624114*^9}, {3.795463981661632*^9, 
   3.795464016907737*^9}, {3.795541049055846*^9, 3.7955411386277514`*^9}, {
   3.795541173541483*^9, 3.795541224266984*^9}, {3.795541489153419*^9, 
   3.795541559531147*^9}, {3.795545978479801*^9, 3.7955459922121058`*^9}, {
   3.7955505551049147`*^9, 3.7955506145832767`*^9}, {3.7955506616140137`*^9, 
   3.795550674980117*^9}, {3.795550839391733*^9, 3.795550841687724*^9}, {
   3.7955508807253017`*^9, 3.7955508875772667`*^9}, {3.7955541857015123`*^9, 
   3.795554185895639*^9}, {3.7956193019319887`*^9, 3.795619318554638*^9}, {
   3.795619423732161*^9, 3.795619468492784*^9}, {3.79561950206562*^9, 
   3.795619538049258*^9}, {3.795619729717778*^9, 3.795619755541896*^9}, {
   3.795619888492667*^9, 3.79561991959269*^9}, {3.7956231323130083`*^9, 
   3.79562313274289*^9}, {3.795623222855749*^9, 3.7956232249167137`*^9}, {
   3.795628819616797*^9, 3.795628823823492*^9}, {3.795633635757101*^9, 
   3.795633638434156*^9}, {3.795638083242654*^9, 3.795638085189745*^9}, {
   3.795661016049876*^9, 3.795661101833131*^9}, {3.795794522822947*^9, 
   3.795794523977654*^9}, {3.795796176066663*^9, 3.7957962026957197`*^9}, {
   3.795800271841579*^9, 3.7958003062947683`*^9}, {3.795800604993857*^9, 
   3.795800614609952*^9}, {3.795800785533978*^9, 3.795800789794991*^9}, {
   3.795801104716673*^9, 3.795801147891396*^9}, {3.795801178777136*^9, 
   3.795801181921132*^9}, {3.795801229782702*^9, 3.79580124917212*^9}, {
   3.7958015284668293`*^9, 3.795801559032449*^9}, 3.795801885820614*^9, 
   3.795802901497203*^9, 3.795802953456443*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"e05e4bb2-79cd-415f-bc52-ccf55fda9a3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"withProgressCurves2", "=", 
   RowBox[{"withProgressCurves", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<ProgressCurve\>\"", "\[Rule]", 
           RowBox[{"obsProgressCurve", "[", 
            RowBox[{"#Times", ",", 
             RowBox[{"#", "[", "\"\<TurnoverTimepoints(uM)\>\"", "]"}]}], 
            "]"}]}], ",", 
          RowBox[{"\"\<EnzymeConc\>\"", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"#eGFPSummedI", "/", "#eGFPSlope"}], ")"}]}]}], "}"}]}], 
       "]"}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795462431023308*^9, 3.79546246830589*^9}, 
   3.795462519763174*^9, {3.795462661445444*^9, 3.7954626681359386`*^9}, 
   3.795462713461481*^9, {3.795660877869136*^9, 3.7956608793234243`*^9}, {
   3.795660945742268*^9, 3.7956609460797167`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"f74889bf-678c-49b1-aaaa-848dd4b45931"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"itr", "=", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dynamic", "[", "itr", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"optDataPoints2", "=", 
   RowBox[{"withProgressCurves2", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"#", ",", 
        RowBox[{
         RowBox[{"itrNew", "=", 
          RowBox[{"itr", "+", "1"}]}], ";", 
         RowBox[{"itr", "=", "itrNew"}], ";", 
         RowBox[{"out", "=", 
          RowBox[{"Quiet", "[", 
           RowBox[{"fitRateSuperposition", "[", 
            RowBox[{
            "#MutantID", ",", "#ProgressCurve", ",", "#EnzymeConc", ",", 
             "#SubstrateConc"}], "]"}], "]"}]}], ";", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<OptLinFitSlope\>\"", "\[Rule]", 
            RowBox[{"out", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<OptLinFitSlopeMinusTrueBackground\>\"", "\[Rule]", 
            RowBox[{
             RowBox[{"out", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", "trueBackgroundRate"}]}], 
           ",", 
           RowBox[{"\"\<ContaminantConc\>\"", "\[Rule]", 
            RowBox[{"out", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<FitPlot\>\"", "\[Rule]", 
            RowBox[{"out", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<ContaminantRate\>\"", "\[Rule]", 
            RowBox[{"out", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<ContaminantRatio\>\"", "\[Rule]", 
            RowBox[{"out", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<BackgroundFitPlot\>\"", "\[Rule]", 
            RowBox[{"out", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<ProgressCurveBaselineCorrected\>\"", "\[Rule]", 
            RowBox[{"out", "[", 
             RowBox[{"[", "7", "]"}], "]"}]}]}], "}"}]}]}], "]"}], "&"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.795462540858116*^9, 3.795462561932309*^9}, {
   3.795462648026919*^9, 3.79546265441247*^9}, 3.7954631053162622`*^9, {
   3.795463290593858*^9, 3.79546330039635*^9}, {3.795463345963806*^9, 
   3.795463376965864*^9}, {3.795463531725765*^9, 3.795463532404561*^9}, {
   3.795464030540039*^9, 3.795464030769815*^9}, {3.7955412325928087`*^9, 
   3.795541235154223*^9}, {3.7955415791354237`*^9, 3.7955415869400063`*^9}, {
   3.7955454376865673`*^9, 3.795545438238722*^9}, {3.795545998931499*^9, 
   3.7955460152533627`*^9}, {3.795561015050625*^9, 3.795561021697957*^9}, {
   3.795619487267089*^9, 3.7956194878035603`*^9}, {3.795619556755087*^9, 
   3.795619557239254*^9}, {3.79561992468314*^9, 3.795619970864417*^9}, {
   3.795620004260906*^9, 3.795620020757642*^9}, {3.7956336496927843`*^9, 
   3.7956336503041897`*^9}, 3.795633970839961*^9, {3.795634242932482*^9, 
   3.795634283575829*^9}, {3.795801499397192*^9, 3.7958015093394747`*^9}, {
   3.7958015630924873`*^9, 3.795801564642047*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"c1606e12-265d-42c3-9bff-e5272584b886"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`itr, StandardForm],
  ImageSizeCache->{8., {0., 9.}}]], "Output",
 CellChangeTimes->{
  3.795660826803396*^9, 3.795660871523725*^9, 3.795661078028673*^9, 
   3.795661114807185*^9, 3.795790922344633*^9, 3.795795235864492*^9, 
   3.795796211146772*^9, 3.795800825578425*^9, 3.795801457074333*^9, {
   3.79580149974126*^9, 3.79580156898415*^9}, 3.795801891667932*^9, 
   3.795802960160596*^9, 3.79580352732181*^9, 3.7958101827101097`*^9, 
   3.795811432342654*^9, 3.807149382887575*^9, 3.812635011730607*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"4fe171df-b651-4dd0-9d34-b5b5dac222c3"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "4. Generate progress curve plots based on optimized fitting (intensities) (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "eval"], "=", "800"}], TraditionalForm]],ExpressionUUID->
  "d7127a8d-a207-4cb4-bb7a-700fead8d244"],
 "s,",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubsuperscriptBox["t", "eval", "parallel"], "=", "200"}]}], 
   TraditionalForm]],ExpressionUUID->"b0db5147-03c8-45ac-b377-e1c9f416fca7"],
 "s):"
}], "Subsubsection",
 CellChangeTimes->{{3.732982122369422*^9, 3.73298212984267*^9}, {
  3.7335198368618307`*^9, 3.733519840007523*^9}, {3.733520332191161*^9, 
  3.7335203379182167`*^9}, {3.7338438233932753`*^9, 3.733843827234573*^9}, {
  3.737935317828081*^9, 3.737935320632677*^9}, {3.7379954388456*^9, 
  3.7379954477140827`*^9}, {3.739204212408636*^9, 3.739204213007395*^9}, {
  3.739204261042014*^9, 3.739204262267208*^9}, {3.795546148024325*^9, 
  3.795546148332456*^9}},ExpressionUUID->"e5b18434-75d3-4833-a3c3-\
7340be7a4893"],

Cell[CellGroupData[{

Cell["Make progress curves with local background rates shown:", \
"Subsubsection",
 CellChangeTimes->{{3.792967097353593*^9, 
  3.7929671117278233`*^9}},ExpressionUUID->"e693c26e-b06e-4c33-a643-\
ac1622fe732e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"indices", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"optDataPoints2", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#ExpIndex", "\[Equal]", "1"}], "&"}], "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<Indices\>\""}], "]"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.7936321059409723`*^9, 3.7936321249402647`*^9}, {
   3.79521942329386*^9, 3.795219424270699*^9}, 3.795547012494482*^9},
 CellLabel->"In[84]:=",ExpressionUUID->"212d2b4b-596d-4e2e-bf46-d6296a5d217d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "indices", "]"}]], "Input",
 CellChangeTimes->{{3.7952980413112373`*^9, 3.79529805959682*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"7f451ea2-a856-4aa7-a89f-000414977414"],

Cell[BoxData["1568"], "Output",
 CellChangeTimes->{3.795662976678529*^9, 3.795791484748281*^9, 
  3.7958036967530117`*^9, 3.7958103804011583`*^9, 3.7958117480398827`*^9, 
  3.807149608703444*^9, 3.812635155973544*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"438d63ae-07ff-43c2-ab5c-c62ce5494e3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dynamic", "[", "ind", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nearestLocalBG", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{"\"\<Indices\>\"", "->", 
        RowBox[{"indices", "[", 
         RowBox[{"[", "ind", "]"}], "]"}]}], ",", 
       RowBox[{"\"\<NearestLocalBackgroundChambers\>\"", "->", 
        RowBox[{"findNearestBackgroundChambers", "[", 
         RowBox[{"optDataPoints2", ",", 
          RowBox[{"indices", "[", 
           RowBox[{"[", "ind", "]"}], "]"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ind", ",", "1", ",", 
       RowBox[{"Length", "[", "indices", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.793632073733664*^9, 3.793632080889482*^9}, {
   3.793632127184161*^9, 3.793632211714219*^9}, 3.7936322655094843`*^9, {
   3.795228824194179*^9, 3.795228825940317*^9}, 3.795547019806242*^9},
 CellLabel->"In[86]:=",ExpressionUUID->"55afae9f-51f6-44ce-88af-2bd0be9abf42"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`ind, StandardForm],
  ImageSizeCache->{8., {0., 9.}}]], "Output",
 CellChangeTimes->{3.795662979113102*^9, 3.795791485816554*^9, 
  3.795803696816545*^9, 3.795810380843891*^9, 3.7958117482979107`*^9, 
  3.8071496088808947`*^9, 3.812635156030711*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"ab14c77a-e126-4174-a177-2d46aa175b19"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"nearestBackgroundChambers", "=", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/craig/Dropbox/HTMEK_processing/current/per-experiment_QC/\
nearestLocalBackgroundChambers.wxf\>\"", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"nearestBackgroundChambers", "=", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/craig/Dropbox/HTMEK_processing/current/per-experiment_QC/\
nearestLocalBackgroundChambers_SlowestChip.wxf\>\"", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"withNearestChambers", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{"JoinAcross", "[", 
      RowBox[{
       RowBox[{"Normal", "[", "optDataPoints2", "]"}], ",", "nearestLocalBG", 
       ",", "\"\<Indices\>\"", ",", "\"\<Left\>\""}], "]"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.7929674295071487`*^9, 3.79296748556083*^9}, {
  3.7929679193818493`*^9, 3.792967926722*^9}, {3.792968174027424*^9, 
  3.792968178338435*^9}, {3.7929688624110813`*^9, 3.792968864428495*^9}, {
  3.792968940481533*^9, 3.792968954947156*^9}, {3.792969662576199*^9, 
  3.7929697458178797`*^9}, {3.793497724959709*^9, 3.793497726509029*^9}, {
  3.793632272452095*^9, 3.793632311133114*^9}, {3.793820635497366*^9, 
  3.793820640168408*^9}, {3.7955496886133823`*^9, 3.795549689780024*^9}, {
  3.795640290180901*^9, 3.795640291191799*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"73b7f515-349b-42ba-84d9-c757828bdc0e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"start", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dynamic", "[", "count", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"withPCs2", "=", 
    RowBox[{"withNearestChambers", "[", 
     RowBox[{"All", ",", 
      RowBox[{"Quiet", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"#", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Clear", "[", "forSelect", "]"}], ";", 
            RowBox[{"count", "=", 
             RowBox[{"count2", "+", "1"}]}], ";", 
            RowBox[{"forSelect", "=", "#NearestLocalBackgroundChambers"}], 
            ";", 
            RowBox[{"sconc", "=", "#SubstrateConc"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"expIndex", "=", "#ExpIndex"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"indices", "=", "#Indices"}], ";", 
            RowBox[{"count2", "=", "count"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MissingQ", "[", "#ProgressCurve", "]"}], ",", 
              RowBox[{"\"\<ProgressCurveOptFit2\>\"", "->", 
               RowBox[{"Missing", "[", "]"}]}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"bgProgressCurves", "=", 
                RowBox[{"Normal", "[", 
                 RowBox[{
                  RowBox[{"optDataPoints2", "[", 
                   RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"forSelect", ",", "#Indices"}], "]"}], "&&", 
                    RowBox[{"#ExpIndex", "\[Equal]", "expIndex"}]}], "&"}], 
                    "]"}], "]"}], "[", 
                  RowBox[{"All", ",", "\"\<FitPlot\>\""}], "]"}], "]"}]}], 
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<ProgressCurveOptFit2\>\"", "\[Rule]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "bgProgressCurves", "]"}], ">", 
                    "0"}], ",", 
                   RowBox[{"Show", "[", 
                    RowBox[{
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#FitPlot", ",", 
                    RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"optDataPoints2", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"forSelect", ",", "#Indices"}], "]"}], "&&", 
                    RowBox[{"#SubstrateConc", "\[Equal]", "sconc"}], "&&", 
                    RowBox[{"#ExpIndex", "\[Equal]", "expIndex"}]}], "&"}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"All", ",", "\"\<BackgroundFitPlot\>\""}], "]"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",",
                     "Infinity"}], "]"}], ",", 
                    RowBox[{"Missing", "[", "]"}], ",", "Infinity"}], "]"}], 
                    ",", 
                    RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
                    RowBox[{"AspectRatio", "\[Rule]", "0.6"}], ",", 
                    RowBox[{"ImagePadding", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"75", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"60", ",", "8"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", "sconc", "]"}], "]"}], "<>", 
                    "\"\< \[Mu]M\>\""}], ",", "16", ",", "Black", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                    "]"}], ",", 
                    RowBox[{"Scaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.18", ",", "0.85"}], "}"}], "]"}]}], "]"}]}]}], 
                    "]"}], ",", 
                   RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], 
                  "]"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", ")"}]}], "]"}], "&"}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"\"\<ProgressCurveOptFit2\>\"", "\[Rule]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "bgProgressCurves", "]"}], ">", "0"}], ",", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#FitPlot", ",", 
               RowBox[{"Normal", "[", 
                RowBox[{
                 RowBox[{"optDataPoints2", "[", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"forSelect", ",", "#Indices"}], "]"}], "&&", 
                    RowBox[{"#SubstrateConc", "\[Equal]", "sconc"}], "&&", 
                    RowBox[{"#ExpIndex", "\[Equal]", "expIndex"}]}], "&"}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"All", ",", "\"\<BackgroundFitPlot\>\""}], "]"}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
             "Infinity"}], "]"}], ",", 
           RowBox[{"Missing", "[", "]"}]}], "]"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "0.6"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"75", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"60", ",", "8"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"Inset", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", "sconc", "]"}], "]"}], "<>", 
               "\"\< \[Mu]M\>\""}], ",", "16", ",", "Black", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
            ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0.18", ",", "0.85"}], "}"}], "]"}]}], "]"}]}]}], "]"}],
        ",", 
       RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}]}], "]"}]}], "}"}],
    "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}]}], "Input",
 CellChangeTimes->{{3.7929701245271463`*^9, 3.792970151343668*^9}, {
   3.7929710322030497`*^9, 3.792971035991108*^9}, {3.793045084963937*^9, 
   3.7930450869567823`*^9}, {3.793045989469358*^9, 3.7930459950549917`*^9}, {
   3.793046754828944*^9, 3.793046784039339*^9}, {3.793395420906987*^9, 
   3.7933954213635902`*^9}, {3.793395490861239*^9, 3.793395491042138*^9}, {
   3.7933960787689857`*^9, 3.793396083068449*^9}, {3.793396170560465*^9, 
   3.79339634635804*^9}, {3.793399666051826*^9, 3.793399721324663*^9}, {
   3.793402163689404*^9, 3.793402165885892*^9}, {3.793477729784017*^9, 
   3.793477733851573*^9}, {3.7934793545568037`*^9, 3.793479381554229*^9}, {
   3.793479470794712*^9, 3.7934795351111603`*^9}, {3.793480839538673*^9, 
   3.79348083969129*^9}, {3.793480949183432*^9, 3.7934809493076897`*^9}, {
   3.793484980816215*^9, 3.793484981245501*^9}, {3.793497303222432*^9, 
   3.7934973037707233`*^9}, {3.793497708766317*^9, 3.7934977090647287`*^9}, {
   3.7936326677905827`*^9, 3.793632682717524*^9}, {3.793632948565289*^9, 
   3.793632953088271*^9}, {3.793633162873438*^9, 3.7936331712694397`*^9}, {
   3.793633298654682*^9, 3.793633340487315*^9}, {3.793633480067309*^9, 
   3.793633481223854*^9}, {3.793633546010826*^9, 3.793633598220368*^9}, {
   3.7936336359281483`*^9, 3.7936336593585787`*^9}, {3.793633731013352*^9, 
   3.793633789464478*^9}, {3.793634102023283*^9, 3.793634173555747*^9}, {
   3.793634204218265*^9, 3.793634267688754*^9}, {3.793634329848572*^9, 
   3.7936343646908092`*^9}, {3.7936344102892923`*^9, 3.793634459955306*^9}, {
   3.793634493855741*^9, 3.793634509351602*^9}, {3.7936345997516108`*^9, 
   3.793634600033849*^9}, {3.793836276985386*^9, 3.793836277704816*^9}, {
   3.7938363218177977`*^9, 3.793836323396359*^9}, {3.793836435066074*^9, 
   3.793836437650838*^9}, {3.7938368523586693`*^9, 3.793836854218738*^9}, {
   3.7938369795630836`*^9, 3.79383704803473*^9}, {3.793837189213894*^9, 
   3.7938372955811443`*^9}, {3.793837338410892*^9, 3.7938373732197113`*^9}, {
   3.795282618816283*^9, 3.795282636679639*^9}, {3.795282931830364*^9, 
   3.795282953777508*^9}, {3.795283075133266*^9, 3.7952830858018827`*^9}, {
   3.795283119687018*^9, 3.795283274673221*^9}, {3.795283354858691*^9, 
   3.795283433186234*^9}, {3.7952834918329906`*^9, 3.795283538052423*^9}, {
   3.795283569673921*^9, 3.79528360093439*^9}, {3.795284048989293*^9, 
   3.795284103750389*^9}, {3.7952841503419857`*^9, 3.795284388419202*^9}, {
   3.7952844300721483`*^9, 3.79528443561382*^9}, {3.795284935235841*^9, 
   3.795284936511722*^9}, {3.795297416251356*^9, 3.795297420629273*^9}, {
   3.7952977014603233`*^9, 3.795297701864752*^9}, {3.795547048832272*^9, 
   3.795547049854466*^9}, {3.795549785814828*^9, 3.7955499308498363`*^9}, 
   3.7956215485696077`*^9, {3.79562317286248*^9, 3.795623176290278*^9}, {
   3.795663477210327*^9, 3.7956635035386333`*^9}, {3.7956646629781857`*^9, 
   3.795664726110736*^9}, {3.795665465515723*^9, 3.7956654827256413`*^9}, {
   3.7956655172200823`*^9, 3.795665527276875*^9}, {3.795665592552638*^9, 
   3.795665592849633*^9}, {3.795666181108696*^9, 3.795666224568388*^9}, 
   3.795666280870378*^9, {3.795666342560486*^9, 3.795666345316023*^9}, {
   3.795666400945862*^9, 3.7956664025272512`*^9}, 3.7956664514538193`*^9, {
   3.795666491640976*^9, 3.795666491985713*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"37a1333c-258f-4f02-b7ac-7f98cc109fd7"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`count, StandardForm],
  ImageSizeCache->{31., {1., 9.}}]], "Output",
 CellChangeTimes->{
  3.795663504916003*^9, {3.795664702917783*^9, 3.79566472656686*^9}, {
   3.79566546971045*^9, 3.795665482909285*^9}, {3.79566558212752*^9, 
   3.795665593279023*^9}, {3.79566618661248*^9, 3.795666189810807*^9}, 
   3.7956662250461063`*^9, 3.795666345843642*^9, 3.795666403861223*^9, 
   3.795666452128583*^9, 3.7956664924137907`*^9, 3.795791545389614*^9, 
   3.795803746941668*^9, 3.795810443151473*^9, 3.795811811989655*^9, 
   3.807149669088109*^9, 3.812635196755995*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"924505e1-aa1d-42df-983f-45695280abb3"],

Cell[BoxData["17.127393`7.685236256526995"], "Output",
 CellChangeTimes->{
  3.795663504916003*^9, {3.795664702917783*^9, 3.79566472656686*^9}, {
   3.79566546971045*^9, 3.795665482909285*^9}, {3.79566558212752*^9, 
   3.795665593279023*^9}, {3.79566618661248*^9, 3.795666189810807*^9}, 
   3.7956662250461063`*^9, 3.795666345843642*^9, 3.795666403861223*^9, 
   3.795666452128583*^9, 3.7956664924137907`*^9, 3.795791545389614*^9, 
   3.795803746941668*^9, 3.795810443151473*^9, 3.795811811989655*^9, 
   3.807149669088109*^9, 3.812635213878893*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"86a28701-0706-4308-951a-06a6b6391723"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "6. Calculate local background interpolations, append to the dataset (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "eval"], "=", "25"}], TraditionalForm]],ExpressionUUID->
  "e473fa17-4c7a-464b-87e3-240a49e71d8d"],
 "s):"
}], "Section",
 CellChangeTimes->{{3.733588097841146*^9, 3.733588102836062*^9}, {
  3.7335978406785727`*^9, 3.7335978498768272`*^9}, {3.737921410496677*^9, 
  3.73792141315346*^9}, {3.737921490072858*^9, 3.737921521317873*^9}, {
  3.739204266407325*^9, 
  3.7392042668780537`*^9}},ExpressionUUID->"d072f562-a354-465b-b775-\
fe3795d24145"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dynamic", "[", "n", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dynamic", "[", "column", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"datasetIN", "=", "withPCs"}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"datasetIN", "=", "withPCs2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inhibitorconcentrations", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"datasetIN", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#Indices", "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "&"}], "]"}], ",", 
      "\"\<InhibitorConcentrations\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"substrateconcentrations", "=", 
  RowBox[{"Normal", "[", 
   RowBox[{"datasetIN", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#Indices", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "&"}], "]"}], ",", 
     "\"\<SubstrateConc\>\""}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"type", "=", 
    RowBox[{"Normal", "[", 
     RowBox[{"datasetIN", "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#Indices", "\[Equal]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "&"}], "]"}], ",", 
       "\"\<AssayType\>\""}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"exptIndices", "=", 
    RowBox[{"Normal", "[", 
     RowBox[{"datasetIN", "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#Indices", "\[Equal]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "&"}], "]"}], ",", 
       "\"\<ExpIndex\>\""}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataset2", "=", "datasetIN"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"start", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interpolations", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Association", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<x\>\"", "\[Rule]", "column"}], ",", 
           RowBox[{"\"\<ExpIndex\>\"", "\[Rule]", 
            RowBox[{"exptIndices", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<AssayType\>\"", "\[Rule]", 
            RowBox[{"type", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<Interpolation\>\"", "->", 
            RowBox[{"interpolateDeadMutantsPerColumn", "[", 
             RowBox[{"mutantList", ",", 
              RowBox[{"exptIndices", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", "column", ",", "dataset2",
               ",", "\"\<OptLinFitSlopeMinusTrueBackground\>\""}], "]"}]}], 
           ",", 
           RowBox[{
           "\"\<MutantsUsedForLocalBG\>\"", "\[Rule]", "mutantList"}]}], 
          "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "substrateconcentrations", "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"column", ",", "1", ",", "28"}], "}"}]}], "]"}], ",", "1"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataset3", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{"JoinAcross", "[", 
      RowBox[{
       RowBox[{"Normal", "[", "dataset2", "]"}], ",", "interpolations", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<x\>\"", ",", "\"\<ExpIndex\>\"", ",", "\"\<AssayType\>\""}], 
        "}"}], ",", "\"\<Left\>\""}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}]}], "Input",
 CellChangeTimes->{{3.73359786857764*^9, 3.733597939612916*^9}, {
   3.733597982541931*^9, 3.733597998571398*^9}, {3.7335980738075743`*^9, 
   3.733598100896803*^9}, {3.7335982346688538`*^9, 3.733598254978917*^9}, {
   3.733598322939097*^9, 3.733598350618823*^9}, {3.733598436187118*^9, 
   3.7335984566036673`*^9}, {3.733598508476384*^9, 3.733598508921424*^9}, {
   3.7335987355375443`*^9, 3.733598739163834*^9}, {3.733598793003971*^9, 
   3.733598863021151*^9}, {3.733598958247972*^9, 3.733598973401754*^9}, {
   3.733599016587936*^9, 3.733599036448422*^9}, {3.733599083195222*^9, 
   3.733599096669313*^9}, {3.733599152285111*^9, 3.733599208211561*^9}, 
   3.733599768772525*^9, 3.7336016078082323`*^9, {3.733601797199623*^9, 
   3.7336017973509912`*^9}, {3.733601921948431*^9, 3.733601924118101*^9}, {
   3.733602372780608*^9, 3.733602480980875*^9}, {3.733607785715536*^9, 
   3.733607899216687*^9}, {3.733608475166788*^9, 3.73360848047974*^9}, 
   3.733608835875473*^9, 3.733686803813751*^9, {3.7338436941583843`*^9, 
   3.733843696888975*^9}, {3.733845104293194*^9, 3.7338451388784122`*^9}, {
   3.7341086011762953`*^9, 3.734108608440586*^9}, {3.7341086826614122`*^9, 
   3.734108705532113*^9}, {3.7341088584811287`*^9, 3.73410888337792*^9}, {
   3.734139787733283*^9, 3.7341397947318*^9}, {3.73414021986346*^9, 
   3.7341402500782337`*^9}, {3.734140333980262*^9, 3.734140342532544*^9}, 
   3.734140579875409*^9, {3.734140646293427*^9, 3.7341406539811077`*^9}, {
   3.7341407385820007`*^9, 3.734140739941018*^9}, {3.734203893113785*^9, 
   3.7342039035954*^9}, {3.73421261216719*^9, 3.734212615892418*^9}, 
   3.734278554409746*^9, {3.7349639442561007`*^9, 3.73496395688518*^9}, {
   3.73523957673558*^9, 3.735239585668314*^9}, {3.737577696854107*^9, 
   3.737577701355109*^9}, 3.73758026895331*^9, 3.737652630590711*^9, 
   3.737921407348794*^9, {3.7379214476305923`*^9, 3.737921454524596*^9}, 
   3.737998174639431*^9, {3.7383555389500713`*^9, 3.7383555391238623`*^9}, {
   3.738952961073773*^9, 3.738952963946784*^9}, {3.742919830974094*^9, 
   3.742919858311451*^9}, {3.742919922135025*^9, 3.742919923140024*^9}, {
   3.742919971961835*^9, 3.742919978989252*^9}, {3.752003616404582*^9, 
   3.75200362725287*^9}, {3.75200366459974*^9, 3.752003666065516*^9}, {
   3.7520038437353907`*^9, 3.752003855495647*^9}, {3.752023343963698*^9, 
   3.752023345578506*^9}, 3.7527098190349092`*^9, 3.752799786708481*^9, {
   3.763473863941793*^9, 3.7634738642270184`*^9}, {3.765716896593886*^9, 
   3.7657168967323503`*^9}, 3.765743861990316*^9, {3.766329469567491*^9, 
   3.76632947224148*^9}, {3.7669703129811287`*^9, 3.7669703131257763`*^9}, {
   3.768429908884955*^9, 3.7684299270304527`*^9}, {3.7760329079598846`*^9, 
   3.776032908265894*^9}, {3.784423615325698*^9, 3.7844236429581337`*^9}, 
   3.784423699373303*^9, 3.793028136892769*^9, {3.79340192134083*^9, 
   3.793401922215096*^9}, {3.7936504127162123`*^9, 3.793650413584086*^9}, {
   3.793653437543922*^9, 3.793653442214575*^9}, {3.795219433338551*^9, 
   3.795219447099307*^9}, {3.7952204054222307`*^9, 3.7952204066217937`*^9}, {
   3.795229830562231*^9, 3.795229831803787*^9}, {3.795465736395689*^9, 
   3.7954657416521387`*^9}, {3.7956155042529087`*^9, 
   3.7956155067118587`*^9}, {3.795617670289044*^9, 3.7956176715212*^9}, {
   3.7958101145366383`*^9, 3.7958101153504343`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"9d2d8c42-aefa-481e-915f-b5a188754bc6"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`n, StandardForm],
  ImageSizeCache->{8., {0., 7.}}]], "Output",
 CellChangeTimes->{3.795664602731526*^9, 3.795701198312521*^9, 
  3.795791887973382*^9, 3.795803766408114*^9, 3.795810469742948*^9, 
  3.795811836641511*^9, 3.8071496918432827`*^9, 3.812635213933219*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"8ec4eb56-c3fa-4285-b526-26fb35cd8abe"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`column, StandardForm],
  ImageSizeCache->{47., {1., 10.}}]], "Output",
 CellChangeTimes->{3.795664602731526*^9, 3.795701198312521*^9, 
  3.795791887973382*^9, 3.795803766408114*^9, 3.795810469742948*^9, 
  3.795811836641511*^9, 3.8071496918432827`*^9, 3.812635213935041*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"47336388-8275-40dd-908e-3590211f3acc"],

Cell[BoxData[
 RowBox[{"{", "2000.`", "}"}]], "Output",
 CellChangeTimes->{3.795664602731526*^9, 3.795701198312521*^9, 
  3.795791887973382*^9, 3.795803766408114*^9, 3.795810469742948*^9, 
  3.795811836641511*^9, 3.8071496918432827`*^9, 3.8126352139700613`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"0b4d6799-c5fd-41c3-8233-db33433805d8"],

Cell[BoxData["7.059877`7.300342128161573"], "Output",
 CellChangeTimes->{3.795664602731526*^9, 3.795701198312521*^9, 
  3.795791887973382*^9, 3.795803766408114*^9, 3.795810469742948*^9, 
  3.795811836641511*^9, 3.8071496918432827`*^9, 3.8126352210050793`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"8d7577e0-ef3d-40a3-8a76-a38bb5f1b43b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "7. Append local background ratio (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "eval"], "=", "12"}], TraditionalForm]],ExpressionUUID->
  "8652e6e5-8713-4b57-af7d-3f3b4fe1c95a"],
 "s):"
}], "Section",
 CellChangeTimes->{{3.734969801636773*^9, 3.734969848836969*^9}, {
  3.735241101524466*^9, 3.735241106098493*^9}, {3.737922201431005*^9, 
  3.737922205881567*^9}, {3.739204269129055*^9, 
  3.739204269436789*^9}},ExpressionUUID->"016d605b-53cb-472d-9846-\
e7b3413ac1f7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"start", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataset", "=", "dataset3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"temp", "=", 
    RowBox[{"Values", "[", 
     RowBox[{"Normal", "[", 
      RowBox[{"dataset", "[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Indices\>\"", ",", "\"\<ExpIndex\>\"", ",", 
          "\"\<OptLinFitSlopeMinusTrueBackground\>\"", ",", 
          "\"\<MutantID\>\"", ",", "\"\<Interpolation\>\""}], "}"}]}], "]"}], 
      "]"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"localBGs", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Association", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Indices\>\"", "\[Rule]", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<ExpIndex\>\"", "\[Rule]", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<LocalBackgroundRatio\>\"", "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MissingQ", "[", 
             RowBox[{"temp", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "3"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"temp", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "3"}], "]"}], "]"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"temp", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "5", ",", 
                 RowBox[{"temp", "[", 
                  RowBox[{"[", 
                   RowBox[{"n", ",", "1", ",", "2"}], "]"}], "]"}]}], "]"}], 
               "]"}], ")"}]}]}], "]"}]}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "temp", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"withlocalBG", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{"JoinAcross", "[", 
      RowBox[{
       RowBox[{"Normal", "[", "dataset", "]"}], ",", "localBGs", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Indices\>\"", ",", "\"\<ExpIndex\>\""}], "}"}], ",", 
       "\"\<Left\>\""}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}]}], "Input",
 CellChangeTimes->{{3.733609022044655*^9, 3.733609129361319*^9}, 
   3.733609216589387*^9, {3.733609890275778*^9, 3.733609904486434*^9}, {
   3.733609994976199*^9, 3.733609995396483*^9}, {3.7336103614633913`*^9, 
   3.733610362014822*^9}, {3.7336104136690063`*^9, 3.733610414042047*^9}, {
   3.733610489026368*^9, 3.7336104893209457`*^9}, 3.7336872344942503`*^9, {
   3.7338451755070753`*^9, 3.733845177691243*^9}, {3.7338484666165752`*^9, 
   3.733848478627953*^9}, {3.733848595453981*^9, 3.733848595609212*^9}, {
   3.733848778192461*^9, 3.7338487785952578`*^9}, {3.734140822332056*^9, 
   3.7341408688425713`*^9}, {3.734140919612362*^9, 3.734140920219751*^9}, {
   3.7341410093735657`*^9, 3.7341410098957043`*^9}, {3.734203950418494*^9, 
   3.734203963277145*^9}, {3.737922112818245*^9, 3.7379221762863407`*^9}, {
   3.763142932745162*^9, 3.7631429618659163`*^9}, {3.7633370546440287`*^9, 
   3.763337055303698*^9}, {3.763379945856557*^9, 3.763379964097013*^9}, {
   3.793629628036536*^9, 3.793629634111141*^9}, {3.793649882804124*^9, 
   3.793649915439539*^9}, {3.7936504181288147`*^9, 3.793650422836912*^9}, {
   3.793653519228241*^9, 3.793653519521681*^9}, 3.7936566962016068`*^9, {
   3.795219472628932*^9, 3.795219472933854*^9}, {3.79522051104078*^9, 
   3.795220512886788*^9}, {3.795285084258253*^9, 3.795285129873064*^9}, {
   3.7954657846204967`*^9, 3.7954657998740063`*^9}, {3.795615534092072*^9, 
   3.795615541424494*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"72b6cdfb-2add-421e-8003-e8a4f9982909"],

Cell[BoxData["6.735753`7.279931146704934"], "Output",
 CellChangeTimes->{3.795701241403941*^9, 3.795791945044673*^9, 
  3.795803781190837*^9, 3.795810486952443*^9, 3.795811853038454*^9, 
  3.807149707718326*^9, 3.812635227780978*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"896a882b-e604-4367-bcf9-34dabce8422d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "8. Append plots of local background at the chosen substrate concentration \
(should be highest [S]) (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "eval"], "=", "229"}], TraditionalForm]],ExpressionUUID->
  "44c92170-3f6a-4330-97f8-c63b1ef1bb2c"],
 "s,",
 Cell[BoxData[
  FormBox[
   RowBox[{"  ", 
    RowBox[{
     SubsuperscriptBox["t", "eval", "parallel"], "=", "34"}]}], 
   TraditionalForm]],ExpressionUUID->"3dbba91c-49bf-4275-9077-b2e88cf2405d"],
 "s):"
}], "Section",
 CellChangeTimes->{{3.733621201347958*^9, 3.733621206447814*^9}, {
  3.737936327501598*^9, 3.73793635445048*^9}, {3.73799984414053*^9, 
  3.737999849316189*^9}, {3.73808473279243*^9, 3.738084740127939*^9}, {
  3.739204272782138*^9, 
  3.73920427325891*^9}},ExpressionUUID->"8337b2db-65f3-4260-be93-\
069527ae86eb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"eGFPslope", "=", 
    RowBox[{"dataset", "[", 
     RowBox[{"1", ",", "\"\<eGFPSlope\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"start", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LaunchKernels", "[", "4", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numKernels", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"Kernels", "[", "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataset2", "=", "withlocalBG"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"boundingMutants", "=", 
    RowBox[{"{", 
     RowBox[{"\"\<WT\>\"", ",", "\"\<T79S\>\""}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rateKey", "=", "\"\<OptLinFitSlopeMinusTrueBackground\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"temp", "=", 
    RowBox[{"dataset2", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#ExpIndex", "\[Equal]", "whichExpt"}], "&"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Indices\>\"", ",", "\"\<ExpIndex\>\"", ",", "rateKey", ",", 
        "\"\<MutantID\>\"", ",", "\"\<Interpolation\>\""}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"len", "=", 
    RowBox[{"Length", "[", "temp", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chunksize", "=", 
   RowBox[{"Round", "[", 
    RowBox[{"len", "/", "numKernels"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"firstChunks", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"chunksize", "*", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}], ")"}], "+", "1"}], ",", " ", 
       RowBox[{"n", "*", "chunksize"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", 
       RowBox[{"numKernels", "-", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newIntervals", "=", 
    RowBox[{"Append", "[", 
     RowBox[{"firstChunks", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"chunksize", "*", 
           RowBox[{"(", 
            RowBox[{"numKernels", "-", "1"}], ")"}]}], ")"}], "+", "1"}], ",",
         " ", "len"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tempChunked", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"temp", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ";;", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
     "newIntervals"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"upperBound", "=", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Values", "[", 
         RowBox[{"Normal", "[", 
          RowBox[{"dataset2", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#MutantID", "\[Equal]", 
                RowBox[{"boundingMutants", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
               RowBox[{"#ExpIndex", "\[Equal]", "whichExpt"}], "&&", 
               RowBox[{"#eGFPSummedI", ">", 
                RowBox[{"EcutoffForBG", "*", "eGFPslope"}]}]}], "&"}], "]"}], 
            ",", 
            RowBox[{"{", "rateKey", "}"}]}], "]"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"NumberQ", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "True"}], 
         "&"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lowerBound", "=", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Values", "[", 
         RowBox[{"Normal", "[", 
          RowBox[{"dataset2", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#MutantID", "\[Equal]", 
                RowBox[{"boundingMutants", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
               RowBox[{"#ExpIndex", "\[Equal]", "whichExpt"}], "&&", 
               RowBox[{"#eGFPSummedI", ">", 
                RowBox[{"EcutoffForBG", "*", "eGFPslope"}]}]}], "&"}], "]"}], 
            ",", 
            RowBox[{"{", "rateKey", "}"}]}], "]"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"NumberQ", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "True"}], 
         "&"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allinColumn", "=", 
    RowBox[{"Join", "@@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"AssociationThread", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"column", ",", "row"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"row", ",", "1", ",", "56"}], "}"}]}], "]"}], ",", 
           RowBox[{"Sort", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"dataset2", "[", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"#Indices", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "column"}], "&&", 
                    RowBox[{"#ExpIndex", "\[Equal]", "whichExpt"}]}], "&"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Indices\>\"", ",", "rateKey", ",", 
                   "\"\<MutantID\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "<", 
               RowBox[{"#2", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"column", ",", "1", ",", "28"}], "}"}]}], "]"}], ",", "2"}],
       "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"temp2", "=", 
    RowBox[{"Join", "@@", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Association", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Indices\>\"", "\[Rule]", 
              RowBox[{"Normal", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
             RowBox[{"\"\<MaxLocalBackgroundPlot\>\"", "\[Rule]", 
              RowBox[{"generateLocalBGPlot", "[", 
               RowBox[{
                RowBox[{"Normal", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"n", ",", "\"\<Indices\>\""}], "]"}], "]"}], ",", 
                RowBox[{"Normal", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"n", ",", "\"\<ExpIndex\>\""}], "]"}], "]"}], ",", 
                RowBox[{"Normal", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"n", ",", "\"\<Interpolation\>\""}], "]"}], "]"}]}],
                "]"}]}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "#", "]"}]}], "}"}]}], "]"}], "&"}], ",", 
       "tempChunked"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"withlocalBGPlots", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{"JoinAcross", "[", 
      RowBox[{
       RowBox[{"Normal", "[", "dataset2", "]"}], ",", "temp2", ",", 
       RowBox[{"{", "\"\<Indices\>\"", "}"}], ",", "\"\<Left\>\""}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CloseKernels", "[", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}]}], "Input",
 CellChangeTimes->{{3.73361624319683*^9, 3.733616246583975*^9}, {
   3.7336167207957582`*^9, 3.733616722480953*^9}, {3.73361683671169*^9, 
   3.7336168409706078`*^9}, {3.733620634815119*^9, 3.733620694691793*^9}, {
   3.7336207304675817`*^9, 3.7336207336315317`*^9}, {3.7336210662332287`*^9, 
   3.733621082204974*^9}, {3.7336211518541327`*^9, 3.733621157520652*^9}, {
   3.73362119690448*^9, 3.733621197668681*^9}, 3.733687244703673*^9, 
   3.733845214089003*^9, {3.733848683523692*^9, 3.733848722668034*^9}, {
   3.734141782894987*^9, 3.734141791496971*^9}, 3.734147411328787*^9, {
   3.734147470361533*^9, 3.734147474672205*^9}, {3.734147552810513*^9, 
   3.734147586529479*^9}, {3.7342039644550257`*^9, 3.734203971739805*^9}, {
   3.734204422282423*^9, 3.734204422505872*^9}, {3.7349671213150463`*^9, 
   3.734967121560965*^9}, {3.7352401094607573`*^9, 3.735240110721985*^9}, {
   3.7352401673127947`*^9, 3.735240171264042*^9}, {3.7377646836909447`*^9, 
   3.7377646873338823`*^9}, {3.7378316490837803`*^9, 
   3.7378316658877087`*^9}, {3.737922417498172*^9, 3.737922436589609*^9}, {
   3.73792251391254*^9, 3.737922516835883*^9}, {3.7379354046574802`*^9, 
   3.737935447156444*^9}, {3.7379355114286003`*^9, 3.7379356030124197`*^9}, {
   3.737935641506192*^9, 3.737935676717342*^9}, {3.737935707007238*^9, 
   3.737935841004964*^9}, {3.737935940987874*^9, 3.7379360201696978`*^9}, {
   3.737936078787651*^9, 3.73793614841568*^9}, {3.737936180319833*^9, 
   3.737936182177354*^9}, {3.737936225834771*^9, 3.7379363212046556`*^9}, {
   3.737998427825356*^9, 3.737998450816229*^9}, 3.737998520887046*^9, 
   3.73799862224146*^9, {3.73799868150412*^9, 3.737998708327834*^9}, {
   3.737998755858378*^9, 3.737998769987905*^9}, {3.7379991770079203`*^9, 
   3.7379991827673693`*^9}, 3.73799943928903*^9, {3.737999510926559*^9, 
   3.7379995131904907`*^9}, {3.737999559203096*^9, 3.737999593180778*^9}, {
   3.73799983331536*^9, 3.7379998334646397`*^9}, {3.738024430522559*^9, 
   3.738024475098681*^9}, {3.738024683658922*^9, 3.738024696139647*^9}, {
   3.738026244473164*^9, 3.7380262496310577`*^9}, {3.738026317269556*^9, 
   3.7380263333094788`*^9}, {3.7380307978640623`*^9, 
   3.7380307981256847`*^9}, {3.73808430626709*^9, 3.738084329130643*^9}, {
   3.738084363279448*^9, 3.738084473621875*^9}, {3.738084533712823*^9, 
   3.7380845357539873`*^9}, {3.738084646806871*^9, 3.73808464834455*^9}, 
   3.7380849488902473`*^9, 3.7383567094610453`*^9, {3.738953093984069*^9, 
   3.738953134169972*^9}, {3.739038269684863*^9, 3.739038272197061*^9}, 
   3.7409673012347183`*^9, {3.742056816970832*^9, 3.7420568267275467`*^9}, {
   3.742920137502884*^9, 3.742920147226715*^9}, {3.759088471162161*^9, 
   3.75908847128218*^9}, {3.759088537808701*^9, 3.759088557373226*^9}, {
   3.7593434465608187`*^9, 3.759343455474012*^9}, {3.763337300663947*^9, 
   3.7633373561620827`*^9}, {3.763337451125243*^9, 3.763337458960298*^9}, {
   3.763337492024317*^9, 3.76333749552852*^9}, 3.7633375769624643`*^9, {
   3.763338040941777*^9, 3.763338073832233*^9}, {3.763338296108076*^9, 
   3.763338305039208*^9}, 3.763338759251824*^9, {3.763339213743108*^9, 
   3.763339229198955*^9}, {3.7633392684001207`*^9, 3.763339279080873*^9}, {
   3.763339311868655*^9, 3.763339352567684*^9}, {3.7633394441836853`*^9, 
   3.7633394473627462`*^9}, {3.763339526631556*^9, 3.7633395333890343`*^9}, {
   3.763339862666232*^9, 3.763339879462235*^9}, {3.7633807901136837`*^9, 
   3.763380820004488*^9}, {3.763473900201974*^9, 3.763473901110899*^9}, {
   3.763476778124805*^9, 3.763476780043523*^9}, {3.763477400228219*^9, 
   3.763477401865486*^9}, {3.765717522565514*^9, 3.76571752343053*^9}, {
   3.7662464977237053`*^9, 3.766246499108037*^9}, {3.7665877499109983`*^9, 
   3.766587750205213*^9}, {3.768429487276664*^9, 3.768429489421493*^9}, {
   3.7684299388789597`*^9, 3.768429939029306*^9}, {3.792793703578784*^9, 
   3.792793726466998*^9}, {3.792793760859521*^9, 3.7927937609986143`*^9}, {
   3.793536912737391*^9, 3.793536924921155*^9}, {3.793650765937543*^9, 
   3.793650767196751*^9}, {3.793653822563743*^9, 3.793653836758135*^9}, {
   3.7936567969664516`*^9, 3.793656797278906*^9}, 3.795219736727808*^9, {
   3.795264331680028*^9, 3.795264333934037*^9}, {3.7954658126630783`*^9, 
   3.7954658141914682`*^9}, {3.7956155510295362`*^9, 3.795615553522398*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"f0efd0ec-c063-4bf9-8aac-be9b17db8a09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["KernelObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                Thickness[0.006944444444444444], 
                FaceForm[{
                  RGBColor[0.8670000000000001, 0.067, 0.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1: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
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKH111jPZ5X8CHc6nXX2edTfRQee0wPFdAQ5wfsMe
ViER+xf2jcVuU74diobznexe3FzzLhDOf7F9PfNzEwe4foY3ByyVvR7aw8yH
8UUuuNz4cCEazpeYeoUz40miA0w/jA8zH8aH2Q/TD3MfuvtR+LaJDgxKf7+V
ykTD+WDzXBIdco7+21TNFw3no9gH5OvlLWbcM9cRrr9B1iLdRVMMbj6MH6K+
oHPDTkc4f8J2h6ZH7OJw/TA+zHwYH2Y/TD/MfejuBwAJjMR1
                 "]]}, {
               ImageSize -> {Automatic, 
                  Dynamic[3.5 CurrentValue["FontCapHeight"]]}, AspectRatio -> 
                Automatic, ImageSize -> {144., 144.}, 
                PlotRange -> {{0., 144.}, {0., 144.}}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"local\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"KernelID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                Thickness[0.006944444444444444], 
                FaceForm[{
                  RGBColor[0.8670000000000001, 0.067, 0.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1: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
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKH111jPZ5X8CHc6nXX2edTfRQee0wPFdAQ5wfsMe
ViER+xf2jcVuU74diobznexe3FzzLhDOf7F9PfNzEwe4foY3ByyVvR7aw8yH
8UUuuNz4cCEazpeYeoUz40miA0w/jA8zH8aH2Q/TD3MfuvtR+LaJDgxKf7+V
ykTD+WDzXBIdco7+21TNFw3no9gH5OvlLWbcM9cRrr9B1iLdRVMMbj6MH6K+
oHPDTkc4f8J2h6ZH7OJw/TA+zHwYH2Y/TD/MfejuBwAJjMR1
                 "]]}, {
               ImageSize -> {Automatic, 
                  Dynamic[3.5 CurrentValue["FontCapHeight"]]}, AspectRatio -> 
                Automatic, ImageSize -> {144., 144.}, 
                PlotRange -> {{0., 144.}, {0., 144.}}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"local\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"KernelID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"ProcessID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4328", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Local Kernels\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    KernelObject[
     Parallel`Kernels`Private`bk[
      SubKernels`LocalKernels`localKernel[
       SubKernels`LocalKernels`Private`lk[
        LinkObject[
        "'/Applications/Mathematica.app/Contents/MacOS/WolframKernel' \
-subkernel -noinit -nopaclet -wstp", 9717, 5], {
        "'/Applications/Mathematica.app/Contents/MacOS/WolframKernel' \
-subkernel -noinit -nopaclet -wstp"}, 
        SubKernels`LocalKernels`Private`speed$1571270, 
        SubKernels`LocalKernels`Private`preemptive$1571270]], 
      Parallel`Kernels`Private`id$1571277, 
      Parallel`Kernels`Private`name$1571277, 
      Parallel`Kernels`Private`subProps$1571277], 
     Parallel`Kernels`Private`ek[
     Parallel`Kernels`Private`nev$1571278, 
      Parallel`Kernels`Private`pb$1571278, 
      Parallel`Kernels`Private`rd$1571278], 
     Parallel`Kernels`Private`sk[
     Parallel`Kernels`Private`q$1571279, Parallel`Kernels`Private`n0$1571279, 
      Parallel`Kernels`Private`n1$1571279]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["KernelObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                Thickness[0.006944444444444444], 
                FaceForm[{
                  RGBColor[0.8670000000000001, 0.067, 0.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxlVXs41FkYRsqWRFLap1URYncTUyGXvMwwzJgZdzO/mWlIuoqk0IVaJVIk
SZRKhZSKVrpYrWoryiVtTyWPblb3FknoQntO49l9nu2P88c75zfnvN/7fu93
DOdF+IQOUVFRUSUrmiw1soZe3W4VI5DB6VpL+SZPbyjMa3WqfWR4G1In56f7
wHfo4Qw7gyBsPhJ4g3XcHwuSQ+Qt8cFIXNdYJtkVgHeT/oxQaAdhPvm8ptcf
N5465T9aIMW4JYJ3aVEBMOat3Tg9n8EH7ZdnS7YGIvRYkJ9PtQQDob1twdfF
sK63F956IsVF6WTnt/ZzodE5zt2rTYaRO48meEsUKHj0+6jcrVIln0Y5mnS7
nG8GBEJ8g3Xl1ACDmYdO2/Rd9gdh8/58ihQ/9+x+sPOeH2TkuJAWKczytpQ+
CfaFZc6P43eFKeBZOMLNRO6L+e2My5zTwVh05/mSn874QK1yqK7eegXWbZzu
WbjCCxQ6ucmwvDPxut8pIQ4Un2hS9EhROVVbszzaE457/Q8UF0jRcu+XKLc2
Dtg/vG61TpFDfUf8J7tSJzhc8MkydAvCBveqOAMzNjptXbkrcuRIiHLL7Mni
oIjIeeUSg8khhMh+DtJ9VxrvVkigPjxlUgjBvH0bTC/P/Q/Tci0IfnHSpG0j
wYuMwmLXyCXYE5N7aMoHNvJVCeNMCdJ4r9RnerORR/k2SKBjTZgUuoBfo+G4
V4v5ButqlheuTmKjOaU/tHebBDf8LhXlh3PAvD/fnFIuxhv1maOtwzg4VzLk
+bZSMTqJbC8Wc5R+FotBy7NdOMivUAzCtp2Zx8ETTWLgQTFKKV05B8Ttg3dz
xUrdxRz4kXK/ZIuRWbvevarfBR1Un4OB6KM+J9sg/DAp6FAg3Js6u3kSc5xs
UkSL9ovxmJ57ygZ6tGHbAhBOBWADuvQHLT98li27OqAGqFAfGn3QQuva5IQR
VLAMb3SnEaF7LWFdPCdQ6izA8oC4k2fm6eJ1VPnYT594KF38MDIlzQQZdqqC
TXF8hJE29p1pBQ+LL4b9WXzEiiaOW1JvDRoL1WV85FOdA2aB7PasUuEj90t6
/KfmGZCeqnqzP5c36CsLYxo5TZ0cHnRoX29hgdxW2+7Bw3iakzIWnhkceeEu
5CGTbHs8YKHgwiV9U18ejhO47yILGg3fezfzeUimOcxnYQmlSc7TIzYMSWKh
rv36Hy6O32IHIusHbVucRUJrdR8PllRYEydMJNdZdPCwkrTjsAhneG7SEpVk
8rCIszii86oLumiu9Xkg3i6OABvRj3NHF6R6IMswbVWkvesgPy7OFK6uNrdj
Y/Kk7rCAfiek5/VZPUsDsh/sTEpkbFFjbpdRK3JFLeWTCsRETtB6bMCHEZHr
ca4LiujfWz3BPkGE3+MMGxocKwFeuhPBlzkjr/7YzTubBUhrI4y0ncHon72l
8lAAUzqYUoDp9MIeAWg5X4IBI0JvgpYQJl8HFzCefm4kRIvbkFhNPaCD9m+O
EA0LSPBf2w/WK0Q47YNWa6Ue24WgU2X+K8tv8LF8Ica8FaIidVjnuJoZeE7z
2CBC1q8jI4/X2sA+gzT0TREq/9IzuH7VBtspnUYR2gh8WmUDlbK1XaUEN+6Q
DbArbHCYHuznhRe7yAFvrJTz8KgX1BXZnmPrjMGKmWY4qdILG1KoAqpQzmtv
zKdzNMkSIevvO64u8gVRP+5klhNMV6nt+a7YD97NE9YFJxA9qC8n/GEWv+38
0tnOKDkzb/19EwmSE5nblVMc/p2vX2NwwAp3yTjs0WAgLppVbz/KAZdnT+Gt
5UtwjvaP2FXpa5cE55cO/5CnwVXOXzVGqb8VF75TycA1ZMCXbLa968+FfID9
8W8+A/psuEVxlfcLGGX/ruTCw+vz+CgRg0Vlr6LKV3Fxlmw7ejPKdyaai6OE
hjCHwUK678qFy01iXCuj7G8tLvjkefG0kILGY0Kd2ze4Tqe64lw/A+01JPH6
XNRUnEsdVjrIr4CLA3PJg8eVIVbT2CzewR3XiLzTnihA6bVlcEFj2/0xCDXZ
v2Wld7gqfb49V9n/hz1QTGyY6i5DSWZocki/CP9/T/8BeD9LTA==
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKH111jPZ5X8CHc6nXX2edTfRQee0wPFdAQ5wfsMe
ViER+xf2jcVuU74diobznexe3FzzLhDOf7F9PfNzEwe4foY3ByyVvR7aw8yH
8UUuuNz4cCEazpeYeoUz40miA0w/jA8zH8aH2Q/TD3MfuvtR+LaJDgxKf7+V
ykTD+WDzXBIdco7+21TNFw3no9gH5OvlLWbcM9cRrr9B1iLdRVMMbj6MH6K+
oHPDTkc4f8J2h6ZH7OJw/TA+zHwYH2Y/TD/MfejuBwAJjMR1
                 "]]}, {
               ImageSize -> {Automatic, 
                  Dynamic[3.5 CurrentValue["FontCapHeight"]]}, AspectRatio -> 
                Automatic, ImageSize -> {144., 144.}, 
                PlotRange -> {{0., 144.}, {0., 144.}}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"local\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"KernelID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                Thickness[0.006944444444444444], 
                FaceForm[{
                  RGBColor[0.8670000000000001, 0.067, 0.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1: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
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKH111jPZ5X8CHc6nXX2edTfRQee0wPFdAQ5wfsMe
ViER+xf2jcVuU74diobznexe3FzzLhDOf7F9PfNzEwe4foY3ByyVvR7aw8yH
8UUuuNz4cCEazpeYeoUz40miA0w/jA8zH8aH2Q/TD3MfuvtR+LaJDgxKf7+V
ykTD+WDzXBIdco7+21TNFw3no9gH5OvlLWbcM9cRrr9B1iLdRVMMbj6MH6K+
oHPDTkc4f8J2h6ZH7OJw/TA+zHwYH2Y/TD/MfejuBwAJjMR1
                 "]]}, {
               ImageSize -> {Automatic, 
                  Dynamic[3.5 CurrentValue["FontCapHeight"]]}, AspectRatio -> 
                Automatic, ImageSize -> {144., 144.}, 
                PlotRange -> {{0., 144.}, {0., 144.}}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"local\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"KernelID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"ProcessID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4329", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Local Kernels\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    KernelObject[
     Parallel`Kernels`Private`bk[
      SubKernels`LocalKernels`localKernel[
       SubKernels`LocalKernels`Private`lk[
        LinkObject[
        "'/Applications/Mathematica.app/Contents/MacOS/WolframKernel' \
-subkernel -noinit -nopaclet -wstp", 9718, 6], {
        "'/Applications/Mathematica.app/Contents/MacOS/WolframKernel' \
-subkernel -noinit -nopaclet -wstp"}, 
        SubKernels`LocalKernels`Private`speed$1571271, 
        SubKernels`LocalKernels`Private`preemptive$1571271]], 
      Parallel`Kernels`Private`id$1571281, 
      Parallel`Kernels`Private`name$1571281, 
      Parallel`Kernels`Private`subProps$1571281], 
     Parallel`Kernels`Private`ek[
     Parallel`Kernels`Private`nev$1571282, 
      Parallel`Kernels`Private`pb$1571282, 
      Parallel`Kernels`Private`rd$1571282], 
     Parallel`Kernels`Private`sk[
     Parallel`Kernels`Private`q$1571283, Parallel`Kernels`Private`n0$1571283, 
      Parallel`Kernels`Private`n1$1571283]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["KernelObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                Thickness[0.006944444444444444], 
                FaceForm[{
                  RGBColor[0.8670000000000001, 0.067, 0.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1: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
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKH111jPZ5X8CHc6nXX2edTfRQee0wPFdAQ5wfsMe
ViER+xf2jcVuU74diobznexe3FzzLhDOf7F9PfNzEwe4foY3ByyVvR7aw8yH
8UUuuNz4cCEazpeYeoUz40miA0w/jA8zH8aH2Q/TD3MfuvtR+LaJDgxKf7+V
ykTD+WDzXBIdco7+21TNFw3no9gH5OvlLWbcM9cRrr9B1iLdRVMMbj6MH6K+
oHPDTkc4f8J2h6ZH7OJw/TA+zHwYH2Y/TD/MfejuBwAJjMR1
                 "]]}, {
               ImageSize -> {Automatic, 
                  Dynamic[3.5 CurrentValue["FontCapHeight"]]}, AspectRatio -> 
                Automatic, ImageSize -> {144., 144.}, 
                PlotRange -> {{0., 144.}, {0., 144.}}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"local\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"KernelID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                Thickness[0.006944444444444444], 
                FaceForm[{
                  RGBColor[0.8670000000000001, 0.067, 0.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1: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
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKH111jPZ5X8CHc6nXX2edTfRQee0wPFdAQ5wfsMe
ViER+xf2jcVuU74diobznexe3FzzLhDOf7F9PfNzEwe4foY3ByyVvR7aw8yH
8UUuuNz4cCEazpeYeoUz40miA0w/jA8zH8aH2Q/TD3MfuvtR+LaJDgxKf7+V
ykTD+WDzXBIdco7+21TNFw3no9gH5OvlLWbcM9cRrr9B1iLdRVMMbj6MH6K+
oHPDTkc4f8J2h6ZH7OJw/TA+zHwYH2Y/TD/MfejuBwAJjMR1
                 "]]}, {
               ImageSize -> {Automatic, 
                  Dynamic[3.5 CurrentValue["FontCapHeight"]]}, AspectRatio -> 
                Automatic, ImageSize -> {144., 144.}, 
                PlotRange -> {{0., 144.}, {0., 144.}}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"local\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"KernelID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"ProcessID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4330", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Local Kernels\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    KernelObject[
     Parallel`Kernels`Private`bk[
      SubKernels`LocalKernels`localKernel[
       SubKernels`LocalKernels`Private`lk[
        LinkObject[
        "'/Applications/Mathematica.app/Contents/MacOS/WolframKernel' \
-subkernel -noinit -nopaclet -wstp", 9719, 7], {
        "'/Applications/Mathematica.app/Contents/MacOS/WolframKernel' \
-subkernel -noinit -nopaclet -wstp"}, 
        SubKernels`LocalKernels`Private`speed$1571272, 
        SubKernels`LocalKernels`Private`preemptive$1571272]], 
      Parallel`Kernels`Private`id$1571285, 
      Parallel`Kernels`Private`name$1571285, 
      Parallel`Kernels`Private`subProps$1571285], 
     Parallel`Kernels`Private`ek[
     Parallel`Kernels`Private`nev$1571286, 
      Parallel`Kernels`Private`pb$1571286, 
      Parallel`Kernels`Private`rd$1571286], 
     Parallel`Kernels`Private`sk[
     Parallel`Kernels`Private`q$1571287, Parallel`Kernels`Private`n0$1571287, 
      Parallel`Kernels`Private`n1$1571287]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["KernelObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                Thickness[0.006944444444444444], 
                FaceForm[{
                  RGBColor[0.8670000000000001, 0.067, 0.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1: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
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKH111jPZ5X8CHc6nXX2edTfRQee0wPFdAQ5wfsMe
ViER+xf2jcVuU74diobznexe3FzzLhDOf7F9PfNzEwe4foY3ByyVvR7aw8yH
8UUuuNz4cCEazpeYeoUz40miA0w/jA8zH8aH2Q/TD3MfuvtR+LaJDgxKf7+V
ykTD+WDzXBIdco7+21TNFw3no9gH5OvlLWbcM9cRrr9B1iLdRVMMbj6MH6K+
oHPDTkc4f8J2h6ZH7OJw/TA+zHwYH2Y/TD/MfejuBwAJjMR1
                 "]]}, {
               ImageSize -> {Automatic, 
                  Dynamic[3.5 CurrentValue["FontCapHeight"]]}, AspectRatio -> 
                Automatic, ImageSize -> {144., 144.}, 
                PlotRange -> {{0., 144.}, {0., 144.}}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"local\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"KernelID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                Thickness[0.006944444444444444], 
                FaceForm[{
                  RGBColor[0.8670000000000001, 0.067, 0.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1: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
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKH111jPZ5X8CHc6nXX2edTfRQee0wPFdAQ5wfsMe
ViER+xf2jcVuU74diobznexe3FzzLhDOf7F9PfNzEwe4foY3ByyVvR7aw8yH
8UUuuNz4cCEazpeYeoUz40miA0w/jA8zH8aH2Q/TD3MfuvtR+LaJDgxKf7+V
ykTD+WDzXBIdco7+21TNFw3no9gH5OvlLWbcM9cRrr9B1iLdRVMMbj6MH6K+
oHPDTkc4f8J2h6ZH7OJw/TA+zHwYH2Y/TD/MfejuBwAJjMR1
                 "]]}, {
               ImageSize -> {Automatic, 
                  Dynamic[3.5 CurrentValue["FontCapHeight"]]}, AspectRatio -> 
                Automatic, ImageSize -> {144., 144.}, 
                PlotRange -> {{0., 144.}, {0., 144.}}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"local\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"KernelID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"ProcessID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4331", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Local Kernels\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    KernelObject[
     Parallel`Kernels`Private`bk[
      SubKernels`LocalKernels`localKernel[
       SubKernels`LocalKernels`Private`lk[
        LinkObject[
        "'/Applications/Mathematica.app/Contents/MacOS/WolframKernel' \
-subkernel -noinit -nopaclet -wstp", 9720, 8], {
        "'/Applications/Mathematica.app/Contents/MacOS/WolframKernel' \
-subkernel -noinit -nopaclet -wstp"}, 
        SubKernels`LocalKernels`Private`speed$1571273, 
        SubKernels`LocalKernels`Private`preemptive$1571273]], 
      Parallel`Kernels`Private`id$1571289, 
      Parallel`Kernels`Private`name$1571289, 
      Parallel`Kernels`Private`subProps$1571289], 
     Parallel`Kernels`Private`ek[
     Parallel`Kernels`Private`nev$1571290, 
      Parallel`Kernels`Private`pb$1571290, 
      Parallel`Kernels`Private`rd$1571290], 
     Parallel`Kernels`Private`sk[
     Parallel`Kernels`Private`q$1571291, Parallel`Kernels`Private`n0$1571291, 
      Parallel`Kernels`Private`n1$1571291]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.795701360596861*^9, 3.7957919618729963`*^9, 
  3.8071497104172087`*^9, 3.8126352288771276`*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"7f402b52-4da5-4145-803c-9cbe7efc8f6c"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.795701360596861*^9, 3.7957919618729963`*^9, 
  3.8071497104172087`*^9, 3.812635228889419*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"4b5f17b7-e50f-47b1-bff0-85754bf26851"],

Cell[BoxData["66.931486`8.277175460729206"], "Output",
 CellChangeTimes->{3.795701360596861*^9, 3.7957919618729963`*^9, 
  3.8071497104172087`*^9, 3.812635294763853*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"12d07c0b-54ee-42b6-8e7d-422c511e8956"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["9. Append post-SDS eGFP images:", "Section",
 CellChangeTimes->{{3.7349674128747053`*^9, 3.7349674191287203`*^9}, {
  3.739204277529202*^9, 
  3.739204278020602*^9}},ExpressionUUID->"a73fc3ca-258f-4527-94b1-\
06cfd415fc7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"getGFPstamps", "=", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/craig/Dropbox/HTMEK_processing/desktop_move_200110/\
SlowestChip/191128_S2d3PafA_SlowestChip.wxf\>\"", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"getGFPstamps", "=", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/craig/Dropbox/HTMEK_processing/desktop_move_200110/GlyScan_\
data/cMUP/190407_S3d1PafA_GlyScan_cMUP.wxf\>\"", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"getGFPstamps", "=", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/craig/Dropbox/HTMEK_processing/known_mutants/190529_\
S2d1PafA_KnownMutants_HighE_Unscaled.wxf\>\"", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"getGFPstamps", "=", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/craig/Dropbox/HTMEK_processing/desktop_move_200110/cMUP_\
temp/GlyScan/181119_S2d2_PafA_GlyScan_cMUP.wxf\>\"", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"getGFPstamps", "=", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/craig/Dropbox/HTMEK_processing/desktop_move_200110/SlowChip_\
data/cMUP/190605_S2d1PafA_cMUP_SlowChip.wxf\>\"", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getGFPstamps", "=", 
    RowBox[{"remapNames", "[", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/craig/Dropbox/HTMEK_processing/MecMUP_QC_200220/long_\
timecourse_191209/preprocessed.wxf\>\"", "]"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.793028446617283*^9, 3.793028489300806*^9}, {
   3.793030200758277*^9, 3.793030257680519*^9}, {3.7930319160387363`*^9, 
   3.7930319223424177`*^9}, {3.793636417350812*^9, 3.7936364242815*^9}, {
   3.793825365451191*^9, 3.7938253830342083`*^9}, 3.793831318383576*^9, 
   3.793880873264823*^9, 3.793884145725566*^9, 3.793890443447275*^9, {
   3.793896922328788*^9, 3.793896939963573*^9}, {3.793903299839768*^9, 
   3.7939033092322702`*^9}, {3.793989297125045*^9, 3.7939893277363997`*^9}, {
   3.794145149869203*^9, 3.7941451802232103`*^9}, {3.794160108176414*^9, 
   3.79416011737781*^9}, {3.7941602037035093`*^9, 3.794160222221941*^9}, {
   3.794165937935956*^9, 3.7941659610059013`*^9}, {3.7941830131763287`*^9, 
   3.79418301335957*^9}, 3.7952643393037367`*^9, {3.7954662345724163`*^9, 
   3.795466237095356*^9}, 3.795641208174342*^9, 3.795644841413046*^9, 
   3.7956490924040117`*^9, 3.795655640645733*^9, 3.795657344834156*^9, 
   3.7957014741211*^9, 3.795792068341342*^9, {3.795803907168944*^9, 
   3.795803908068543*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"17decdca-6bf4-4a4d-bf69-a513121eed9f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allStamps", "=", 
    RowBox[{"Normal", "[", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"getGFPstamps", "[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Indices\>\"", ",", "\"\<eGFPPostSDSImage\>\""}], 
         "}"}]}], "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"allStamps", "[", 
  RowBox[{"[", "20", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.793028446617283*^9, 3.793028489300806*^9}, {
  3.793030200758277*^9, 3.793030257680519*^9}, {3.7930319160387363`*^9, 
  3.7930319306122313`*^9}, {3.795641572612945*^9, 3.795641576647788*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"d41141b7-d13d-4ca5-a89c-77de6e24b7eb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Indices\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"17", ",", "9"}], "}"}]}], ",", 
   RowBox[{"\<\"eGFPPostSDSImage\"\>", "\[Rule]", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
rhoUasTzSFwL7/lGnCW2CvSfAl0awx/kYl3WrrpkhLsERd9JfSjzW/0jXe56
Z5rXLBjUXDIH68QNhkl6HeMGvz7WsWMPkMb8KHSrZuLqxL0XP2vInjTYBWRx
s2rvnb2UQ2iGuWmgnYK7/xAQ4/bGzz4+Xoebz+9hmwsjkhNs3wmv8l7oL7z5
FxW+W2khZDulFgzzdUYfT6mRYZ6qvLbdI8uyRWmCFoeiqsm1UrVS4BQyhe1C
vTlrcyiKYXTN+EZGPIl9325YOL3dMGf2M9PeVp2ymTW4C45PWlI1OThXId0+
3l8dvsebH1k6zWvRckj1hZBhvWwJkbGWuGmAWYBN/BBQ8g9wjhv5zyP/aje6
ZnKGPsEnTGwHYiPpGMbw7kCPspgdjaYlWHmsuV/572GQJLX/ke64BjPlRcvJ
6//VN+XMDhYyldWJTqHFi/I/105RSF9879diN6u4bMWKUF1/dW++fEipheYh
MKUfAhTSn3aunOev3tcNvgesumQ0s2bhdzm/wM4+a3i3/U4qw8DfQ/vvR0MT
9qf8IvKnmvqX+syUcUfylyz7VR3NIWRzjFvzPtjZqhmdpxiGfBPdgRvzvJua
4Fle2xZMASLlzH6k+9jhdBbJBL/y0xq8uuexK/aDi9D3fYt3Xy6RtO6VDhLy
CI/8jj345LXtXkcjXmiPuQnsAANMLSNTxBDlTkXcST3iLyvfKuiVvuYlZ2iV
tcmnj3fWZv3U/Sm4KwZQFCiYt8U3NUoFe0vSgCMD5+o+YxiTJGFEtObhZiMe
5gKvr6yx03N1oqon3o8c5iYdGsdKfER+qGAKNNA3FSxiUDN7UoPStvSXkq2C
MAcVSzDOR0L7i3GrmqwW633J5wF5E5VTdB39KPDphh0/rZEz3Ov4SPd4B9Dg
Z6G1jGsA5nTp9/F+WaoWC1TNmS1pDcxeOe+ehzdfWeO17bSbJBPDdHz0nu2G
xGWG1QPMozqvWo1rUEj/sZRh/sgEZsKq5EMgJcNotNEMVszS1C+cqZCO13mj
v1i9OJBhdufBs4DjZk+yysJfbrwWItVex+RihvlpTfYkIESMm37US0nervzx
4QHJxZg50ANIwjB7ZB9ufpIs1LeOmwa032qxTztzCwa7dI9HJPsE95gFPdMK
+rG0xyyz6nZwv331zuJFeaOvnhbbTarxpturZtC9tYIOunvzEUvYx+/OI8nP
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
       
       "], {{0, 103.}, {103., 0}}, {0, 65535},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Bit16", ColorSpace -> "Grayscale", Interleaving -> None, 
       MetaInformation -> 
       Association[
        "Exif" -> Association[
          "NewSubfileType" -> "Primary image", "ImageWidth" -> 2856, 
           "ImageLength" -> 5712, "BitsPerSample" -> 16, "Compression" -> 
           "Uncompressed", "PhotometricInterpretation" -> "Black Is Zero", 
           "ImageDescription" -> "{ shape : [5712, 2856]}", "StripOffsets" -> 
           270, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 5712, 
           "StripByteCounts" -> 32626944, "Software" -> "tifffile.py", 
           "DateTime" -> 
           DateObject[{2019, 12, 11, 16, 21, 0.}, "Instant", "Gregorian", 
             None], "SampleFormat" -> "Unsigned integer data"]]],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{103., 103.},
     PlotRange->{{0, 103.}, {0, 103.}}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7957017116834784`*^9, 3.795792075153069*^9, 
  3.7958039144739428`*^9, 3.795810494039074*^9, 3.7958118596394873`*^9, 
  3.807149791528903*^9, 3.8126353007569304`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"bb772f01-19a2-4108-ae4e-8719d8f2dab9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"withStamps", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{"JoinAcross", "[", 
     RowBox[{
      RowBox[{"Normal", "[", "withlocalBG", "]"}], ",", "allStamps", ",", 
      "\"\<Indices\>\"", ",", "\"\<Left\>\""}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.79303194990514*^9, 3.793031970135808*^9}, {
  3.79565900874032*^9, 3.7956590103578653`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"335dcb8c-0aa7-4e47-9568-7d4fb0ad00f4"],

Cell[CellGroupData[{

Cell["11. Generate plot of eGFP intensity per assay:", "Subsubsection",
 CellChangeTimes->{{3.7349685220676613`*^9, 3.734968531104865*^9}, {
  3.73920431382374*^9, 
  3.7392043142969112`*^9}},ExpressionUUID->"721293aa-1e2f-4aeb-8f29-\
b84ea653b19c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pGFP", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Thickness", "[", "0.125", "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"FaceForm", "[", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"Disk", "[", "]"}], ",", 
      RowBox[{"Opacity", "[", "0.1", "]"}]}], "}"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.793042684909786*^9, 3.793042697634715*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"ef71399b-c592-44d7-b47b-6be0b89f09da"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dataset", "=", "withStamps"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"grouped", "=", 
    RowBox[{"dataset", "[", 
     RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"indicesOut", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Values", "[", "#", "]"}], "&"}], "/@", 
     RowBox[{"Values", "[", 
      RowBox[{"Normal", "[", 
       RowBox[{"grouped", "[", 
        RowBox[{"All", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<MutantID\>\"", ",", "\"\<Indices\>\""}], "}"}]}], 
        "]"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addedeGFPIntensityPlot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Association", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<MutantID\>\"", "\[Rule]", 
          RowBox[{"indicesOut", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<Indices\>\"", "\[Rule]", 
          RowBox[{"indicesOut", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<eGFPIntensityPlot\>\"", "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"egfpSameFlag", "\[Equal]", "0"}], ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"grouped", "[", 
                 RowBox[{"n", ",", "All", ",", "\"\<eGFPSummedI\>\""}], "]"}],
                 "]"}], "/", 
               RowBox[{"10", "^", "6"}]}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "All", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "/", 
                    RowBox[{"10", "^", "6"}]}], "]"}], "*", "1.5"}]}], 
                "}"}]}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"PlotMarkers", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"pGFP", ",", "0.05"}], "}"}]}], ",", 
              RowBox[{"FrameStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"20", ",", "Black", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                "]"}]}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Assay Number\>\"", ",", 
                 "\"\<eGFP Intensity (\[Times]\!\(\*SuperscriptBox[\(10\), \
\(6\)]\))\>\""}], "}"}]}], ",", 
              RowBox[{"ImagePadding", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"75", ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"65", ",", "5"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
              RowBox[{"FrameTicks", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "#", "]"}], ",", "#", ",", 
                    RowBox[{"N", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
                    RowBox[{"FindDivisions", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "All", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "/", 
                    RowBox[{"10", "^", "6"}]}], "]"}]}], "}"}], ",", "5"}], 
                    "]"}]}], ",", "None"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "#", "]"}], ",", "#", ",", 
                    RowBox[{"N", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
                    RowBox[{"FindDivisions", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "All", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "All", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "]"}], "/", "2"}], "]"}]}], "]"}]}], ",", 
                   "None"}], "}"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{
                  RowBox[{"Normal", "[", 
                   RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "1", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "/", 
                  RowBox[{"10", "^", "6"}]}]}], "}"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"Length", "[", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "All", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "All", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "/", 
                    RowBox[{"10", "^", "6"}]}], "]"}], "*", "1.5"}]}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"PlotMarkers", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"pGFP", ",", "0.05"}], "}"}]}], ",", 
              RowBox[{"GridLines", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"None", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "1", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "/", 
                   RowBox[{"10", "^", "6"}]}], "}"}]}], "}"}]}], ",", 
              RowBox[{"GridLinesStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"Dashed", ",", 
                 RowBox[{"Darker", "[", "Green", "]"}]}], "]"}]}], ",", 
              RowBox[{"FrameStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"20", ",", "Black", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], 
                "]"}]}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Assay Number\>\"", ",", 
                 "\"\<eGFP Intensity (\[Times]\!\(\*SuperscriptBox[\(10\), \
\(6\)]\))\>\""}], "}"}]}], ",", 
              RowBox[{"ImagePadding", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"75", ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"65", ",", "5"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
              RowBox[{"FrameTicks", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "#", "]"}], ",", "#", ",", 
                    RowBox[{"N", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
                    RowBox[{"FindDivisions", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "All", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "/", 
                    RowBox[{"10", "^", "6"}]}], "]"}]}], "}"}], ",", "5"}], 
                    "]"}]}], ",", "None"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "#", "]"}], ",", "#", ",", 
                    RowBox[{"N", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
                    RowBox[{"FindDivisions", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "All", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"grouped", "[", 
                    RowBox[{"n", ",", "All", ",", "\"\<eGFPSummedI\>\""}], 
                    "]"}], "]"}], "]"}], "/", "2"}], "]"}]}], "]"}]}], ",", 
                   "None"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"Epilog", "\[Rule]", 
               RowBox[{"Inset", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<eGFP measured\\nbefore 1st assay only\>\"", ",", "14", 
                   ",", 
                   RowBox[{"Darker", "[", "Green", "]"}]}], "]"}], ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{"0.7", ",", "0.3"}], "}"}], "]"}]}], "]"}]}]}], 
             "]"}]}], "]"}]}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "1568"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addedeGFPIntensityPlotDataset", "=", 
    RowBox[{
     RowBox[{"Dataset", "[", 
      RowBox[{"JoinAcross", "[", 
       RowBox[{
        RowBox[{"Normal", "[", "dataset", "]"}], ",", 
        "addedeGFPIntensityPlot", ",", "\"\<Indices\>\"", ",", 
        "\"\<Left\>\""}], "]"}], "]"}], "//", "Quiet"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}]}], "Input",
 CellChangeTimes->{{3.734968552318139*^9, 3.734968703004868*^9}, {
   3.734969003601969*^9, 3.734969006326923*^9}, {3.7377590866403637`*^9, 
   3.737759096263397*^9}, {3.737831717616984*^9, 3.737831722648225*^9}, {
   3.738085052994009*^9, 3.738085053267797*^9}, {3.7391271949253283`*^9, 
   3.739127196980823*^9}, {3.7527101054277477`*^9, 3.752710110140943*^9}, {
   3.7527108653362923`*^9, 3.752710865978093*^9}, {3.757625008280345*^9, 
   3.7576250380147963`*^9}, 3.757625532683441*^9, {3.792794832935843*^9, 
   3.7927948347747517`*^9}, {3.7928670818507833`*^9, 3.792867105001375*^9}, {
   3.792867213892021*^9, 3.792867214734494*^9}, {3.7928672534380493`*^9, 
   3.7928672535993347`*^9}, {3.793032071919042*^9, 3.793032074098462*^9}, {
   3.793038388068005*^9, 3.7930383907422237`*^9}, {3.7930416849789267`*^9, 
   3.7930416851641273`*^9}, {3.7930420289605293`*^9, 3.793042031719363*^9}, {
   3.793042716077766*^9, 3.793042731943948*^9}, {3.7930427678190527`*^9, 
   3.7930427684048223`*^9}, {3.793046103374372*^9, 3.793046106337433*^9}, 
   3.7933974996305*^9, {3.793398463556666*^9, 3.793398463752371*^9}, {
   3.79339853197968*^9, 3.79339853205095*^9}, {3.79339860179327*^9, 
   3.7933986019321613`*^9}, {3.7934860340509443`*^9, 3.793486083550911*^9}, {
   3.7934862109266863`*^9, 3.793486276497383*^9}, {3.793491564888731*^9, 
   3.793491632297072*^9}, {3.793640959570714*^9, 3.7936410237357683`*^9}, {
   3.793641144692416*^9, 3.793641198292569*^9}, {3.793641255796117*^9, 
   3.7936412892423697`*^9}, {3.7936413346503143`*^9, 3.793641373566875*^9}, {
   3.793642916241109*^9, 3.793642931872665*^9}, {3.793643050919252*^9, 
   3.793643070655664*^9}, {3.793647052180972*^9, 3.793647053402289*^9}, {
   3.7938311888831377`*^9, 3.793831190489026*^9}, {3.793847128196629*^9, 
   3.793847131000642*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"8b230181-654b-45e7-8f10-0b6764550950"],

Cell[BoxData[
 TemplateBox[{
  "FindDivisions", "fdargs", 
   "\"The arguments in FindDivisions[\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\), \\!\\(\\*RowBox[{\\\"10\\\"}]\\)] are not \
supported.\"", 2, 140, 1, 24432234394806394317, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.812635307400971*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"b5c9733b-5c3b-4941-b249-aac62d1ef2a7"],

Cell[BoxData[
 TemplateBox[{
  "FindDivisions", "fdargs", 
   "\"The arguments in FindDivisions[\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"1.`\\\"}], \\\"}\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\), \\!\\(\\*RowBox[{\\\"10\\\"}]\\)] are not \
supported.\"", 2, 140, 2, 24432234394806394317, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.812635307465231*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"1838eb32-0b5a-466f-9824-451da1e8a3d8"],

Cell[BoxData[
 TemplateBox[{
  "FindDivisions", "fdargs", 
   "\"The arguments in FindDivisions[\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\), \\!\\(\\*RowBox[{\\\"10\\\"}]\\)] are not \
supported.\"", 2, 140, 3, 24432234394806394317, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.812635307505124*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"129d177c-c9a6-42fd-b945-0579cf05bab1"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FindDivisions\\\", \
\\\"::\\\", \\\"fdargs\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 140, 4, 24432234394806394317, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.812635307554841*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"85b46ad9-ca5d-4431-880b-039eb73cbbd1"],

Cell[BoxData["109.125672`8.489471924619616"], "Output",
 CellChangeTimes->{3.795701770922662*^9, 3.8071498397394457`*^9, 
  3.8126353369579287`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"8f8d347c-2050-4183-9e61-9bec94bb3e4f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Perform Michaelis-Menten fitting or inhibition fitting:", "Section",
 CellChangeTimes->{{3.756424312444107*^9, 
  3.756424326349634*^9}},ExpressionUUID->"896b3ee6-0094-4bf3-8ab6-\
ffcd2313e817"],

Cell[CellGroupData[{

Cell["\<\
Single progress curve (kobs) fit for analysis of MecMUP SlowestChip:\
\>", "Subsubsection",
 CellChangeTimes->{{3.795792822252427*^9, 
  3.795792840002263*^9}},ExpressionUUID->"336d29e9-47cc-4290-a133-\
c940f0b53ba0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"withkcatOverKm", "=", 
   RowBox[{"withStamps", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<fit_mm_kcatoverKM_MMfit\>\"", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"#OptLinFitSlopeMinusTrueBackground", "/", 
             RowBox[{"(", 
              RowBox[{"#SubstrateConc", "*", 
               RowBox[{"(", 
                RowBox[{"#EnzymeConc", "*", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "9"}]}]}], ")"}]}], ")"}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_\>\"", ",", "\"\<kcat\>\""}],
             "]"}], "\[Rule]", 
           RowBox[{"Missing", "[", "]"}]}], ",", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "\"\<fit_mm\>\"", ",", "\"\<_\>\"", ",", "\"\<kcat\>\"", ",", 
             "\"\<_param_error\>\""}], "]"}], "\[Rule]", 
           RowBox[{"Missing", "[", "]"}]}], ",", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_KM\>\""}], "]"}], "\[Rule]", 
           
           RowBox[{"Missing", "[", "]"}]}], ",", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_KM_param_error\>\""}], "]"}],
            "\[Rule]", 
           RowBox[{"Missing", "[", "]"}]}], ",", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_curved_model\>\""}], "]"}], 
           "\[Rule]", 
           RowBox[{"Missing", "[", "]"}]}], ",", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_scale_factor\>\""}], "]"}], 
           "\[Rule]", 
           RowBox[{"Missing", "[", "]"}]}], ",", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_curved_r2\>\""}], "]"}], 
           "\[Rule]", 
           RowBox[{"Missing", "[", "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_datapoints\>\""}], "]"}], 
           "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
             "#SubstrateConc", ",", "#OptLinFitSlopeMinusTrueBackground"}], 
             "}"}], "}"}]}], ",", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_numdatapoints\>\""}], "]"}], 
           "\[Rule]", "1"}], ",", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<fit_mm\>\"", ",", "\"\<_curved_plot\>\""}], "]"}], 
           "\[Rule]", 
           RowBox[{"Missing", "[", "]"}]}], ",", 
          RowBox[{"\"\<Km_Limit\>\"", "\[Rule]", 
           RowBox[{"Missing", "[", "]"}]}]}], "}"}]}], "]"}], "&"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795792848110188*^9, 3.795792971387438*^9}, {
  3.7957930494880323`*^9, 3.795793053152318*^9}, {3.795793146328559*^9, 
  3.795793178937519*^9}, {3.7958100482166777`*^9, 3.7958100726739483`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"e12af932-481c-4a92-8836-8c641b8a3e09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["(12. Do Michaelis-Menten fitting on optimized initial rates)", \
"Subsubsection",
 CellChangeTimes->{{3.7329815105504503`*^9, 3.732981515226286*^9}, {
  3.732981619070964*^9, 3.732981628015257*^9}, {3.733845223994356*^9, 
  3.7338452243517427`*^9}, {3.733849127408181*^9, 3.7338491298183203`*^9}, {
  3.733862064706407*^9, 3.7338620683357077`*^9}, {3.734212743459549*^9, 
  3.734212746012377*^9}, {3.7392043174660473`*^9, 3.739204317996668*^9}, {
  3.756424274477895*^9, 
  3.756424297631983*^9}},ExpressionUUID->"62fa0e5b-f884-45b6-8d0d-\
a5d646c49f78"],

Cell["Use this cell if doing Michaelis-Menten fits.", "Text",
 CellChangeTimes->{{3.756438412284738*^9, 
  3.756438424457325*^9}},ExpressionUUID->"3eceb913-d58b-4f6c-b758-\
b5d37372e766"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dynamic", "[", "n", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"scaleEachAssay", "=", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"start", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataset", "=", "addedeGFPIntensityPlotDataset"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LaunchKernels", "[", "4", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"len", "=", "1568"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numKernels", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"Kernels", "[", "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chunksize", "=", 
   RowBox[{"Round", "[", 
    RowBox[{"len", "/", "numKernels"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"firstChunks", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"chunksize", "*", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}], ")"}], "+", "1"}], ",", " ", 
       RowBox[{"n", "*", "chunksize"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", 
       RowBox[{"numKernels", "-", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"intervals", "=", 
    RowBox[{"Append", "[", 
     RowBox[{"firstChunks", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"chunksize", "*", 
           RowBox[{"(", 
            RowBox[{"numKernels", "-", "1"}], ")"}]}], ")"}], "+", "1"}], ",",
         " ", "len"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"toCalculate", "=", 
    RowBox[{"dataset", "[", 
     RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"chunked", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"toCalculate", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ";;", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
     "intervals"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"flattened", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"chunked", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "[", "Catenate", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "chunked", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addedMMcalc", "=", 
    RowBox[{"Join", "@@", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"fitMichaelisMenten", "[", 
          RowBox[{
          "#", ",", "\"\<OptLinFitSlopeMinusTrueBackground\>\"", ",", 
           "\"\<optlin\>\"", ",", "scaleEachAssay"}], "]"}], "]"}], "&"}], 
       ",", "flattened"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"CloseKernels", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.732828191302328*^9, 3.73282820710557*^9}, {
   3.7328284364936028`*^9, 3.732828443780792*^9}, {3.732831722315823*^9, 
   3.732831725378559*^9}, {3.732900269498952*^9, 3.732900284227059*^9}, 
   3.733627842458099*^9, {3.7336704770869513`*^9, 3.73367048142168*^9}, {
   3.733671111320716*^9, 3.733671115252977*^9}, {3.7337060190730667`*^9, 
   3.733706029288616*^9}, {3.733845227725439*^9, 3.733845238979539*^9}, {
   3.733862108776919*^9, 3.733862109808236*^9}, {3.733877026099456*^9, 
   3.7338770286980953`*^9}, {3.7340307316828737`*^9, 3.734030734614211*^9}, {
   3.734031051841358*^9, 3.734031052552471*^9}, {3.7340311685197153`*^9, 
   3.734031171251842*^9}, {3.734031202466367*^9, 3.7340312057294893`*^9}, {
   3.73403123892367*^9, 3.734031241868017*^9}, {3.734031311927002*^9, 
   3.7340313150240593`*^9}, {3.734031375414686*^9, 3.734031375531245*^9}, {
   3.7340316328876457`*^9, 3.734031632951627*^9}, {3.7340317948643007`*^9, 
   3.734031798620933*^9}, 3.7340319098772097`*^9, {3.7341899152854147`*^9, 
   3.7341899176423683`*^9}, {3.734190292020667*^9, 3.7341902934386883`*^9}, 
   3.734204328792881*^9, {3.7342111933645277`*^9, 3.734211195998844*^9}, 
   3.734212718065373*^9, {3.734214476969673*^9, 3.734214477961131*^9}, 
   3.7342161503453712`*^9, {3.734280476472961*^9, 3.734280480608233*^9}, {
   3.734282068346632*^9, 3.734282072801738*^9}, {3.734284446225918*^9, 
   3.734284447452318*^9}, {3.734289449929234*^9, 3.734289455413281*^9}, {
   3.734293937976171*^9, 3.734293939353435*^9}, {3.734408618480233*^9, 
   3.7344086200634623`*^9}, {3.734428148192651*^9, 3.73442814842953*^9}, {
   3.7345375760242147`*^9, 3.734537578938105*^9}, {3.734625945116146*^9, 
   3.734625958278081*^9}, {3.734701607148691*^9, 3.7347016080603237`*^9}, {
   3.735069144627019*^9, 3.735069151191079*^9}, {3.7350693272740803`*^9, 
   3.7350693278059998`*^9}, 3.7352452570344667`*^9, {3.7352455282449703`*^9, 
   3.735245532713469*^9}, {3.7352474475063753`*^9, 3.7352474505937243`*^9}, 
   3.735580027016666*^9, 3.736183453681279*^9, 3.736192415468719*^9, {
   3.73698954441826*^9, 3.736989548224608*^9}, {3.737308016619378*^9, 
   3.737308029547731*^9}, {3.73731505019048*^9, 3.737315052332711*^9}, 
   3.737325867226054*^9, 3.737570629915134*^9, 3.7375802526265707`*^9, {
   3.73765420626726*^9, 3.737654213334313*^9}, {3.7376542558919163`*^9, 
   3.737654265317093*^9}, 3.737831732264817*^9, {3.738087862423747*^9, 
   3.7380878668380613`*^9}, {3.738087969225464*^9, 3.738087976191448*^9}, {
   3.7380880337653093`*^9, 3.738088056796715*^9}, 3.7380881176834993`*^9, {
   3.738089011431477*^9, 3.738089013063336*^9}, 3.73808915662745*^9, {
   3.739038290456361*^9, 3.739038307466996*^9}, 3.739213147234008*^9, {
   3.739225776520256*^9, 3.739225777126886*^9}, {3.739225945608326*^9, 
   3.739225949641206*^9}, {3.7392269180729*^9, 3.739226920129723*^9}, {
   3.742058144360136*^9, 3.742058145422101*^9}, {3.7430371838932323`*^9, 
   3.743037189583784*^9}, {3.7520194827155123`*^9, 3.75201948354381*^9}, {
   3.763342267584815*^9, 3.763342270756608*^9}, 3.76341111217122*^9, {
   3.763473908369828*^9, 3.763473908549799*^9}, {3.764603959502996*^9, 
   3.764603974943838*^9}, {3.764610493438045*^9, 3.7646104999066133`*^9}, 
   3.765656090506423*^9, {3.7657206254371*^9, 3.765720634540573*^9}, {
   3.765744934944528*^9, 3.765744935250433*^9}, 3.776130161848974*^9, {
   3.793989863302494*^9, 3.7939898634121857`*^9}, {3.7939904855980167`*^9, 
   3.7939904857969227`*^9}, {3.7952200283136*^9, 3.795220029673089*^9}, {
   3.795220527684608*^9, 3.795220529191526*^9}, 3.795221575327982*^9, 
   3.7952644470341673`*^9, {3.795466316057582*^9, 3.795466317018868*^9}, {
   3.795615673200571*^9, 3.795615676536086*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"f90a4968-6978-4f6c-a522-ffa32f1c5fe1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["(12b. Append kcat/Km values:)", "Subsubsection",
 CellChangeTimes->{{3.7329815105504503`*^9, 3.732981515226286*^9}, {
  3.732981619070964*^9, 3.732981628015257*^9}, {3.733845223994356*^9, 
  3.7338452243517427`*^9}, {3.733849127408181*^9, 3.7338491298183203`*^9}, {
  3.733862064706407*^9, 3.7338620683357077`*^9}, {3.734212743459549*^9, 
  3.734212746012377*^9}, {3.7392043174660473`*^9, 3.739204317996668*^9}, {
  3.740193933374983*^9, 3.740193944653103*^9}, {3.740858913101356*^9, 
  3.7408589483852043`*^9}, {3.756424660887486*^9, 
  3.75642466185814*^9}},ExpressionUUID->"bc1d3622-aa70-4815-b6b1-\
f251eaa6ab92"],

Cell["Skip if fitting inhibition data.", "Text",
 CellChangeTimes->{{3.7564246639383307`*^9, 
  3.7564246720661783`*^9}},ExpressionUUID->"6eb3f97b-a5ff-4e55-8e7c-\
2d1b30959ca0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dynamic", "[", "n", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"grouped", "=", 
    RowBox[{"addedMMcalc", "[", 
     RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"indicesOut", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Values", "[", "#", "]"}], "&"}], "/@", 
     RowBox[{"Values", "[", 
      RowBox[{"Normal", "[", 
       RowBox[{"grouped", "[", 
        RowBox[{"All", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<MutantID\>\"", ",", "\"\<Indices\>\"", ",", 
           "\"\<fit_mm_kcat\>\"", ",", "\"\<fit_mm_KM\>\""}], "}"}]}], "]"}], 
       "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addkcatoverkm", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Association", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<MutantID\>\"", "\[Rule]", 
          RowBox[{"indicesOut", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<Indices\>\"", "\[Rule]", 
          RowBox[{"indicesOut", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<fit_mm_kcatoverKM_MMfit\>\"", "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MissingQ", "[", 
             RowBox[{"indicesOut", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "3"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"indicesOut", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "3"}], "]"}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"indicesOut", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "4"}], "]"}], "]"}], "*", 
               RowBox[{"10", "^", 
                RowBox[{"-", "6"}]}]}], ")"}]}]}], "]"}]}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "1568"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addedkcatoverkm", "=", 
    RowBox[{
     RowBox[{"Dataset", "[", 
      RowBox[{"JoinAcross", "[", 
       RowBox[{
        RowBox[{"Normal", "[", "addedMMcalc", "]"}], ",", "addkcatoverkm", 
        ",", "\"\<Indices\>\"", ",", "\"\<Left\>\""}], "]"}], "]"}], "//", 
     "Quiet"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}]}], "Input",
 CellChangeTimes->{{3.7401939923969297`*^9, 3.7401940584781218`*^9}, {
   3.7401940891121492`*^9, 3.740194140149293*^9}, {3.752005679767922*^9, 
   3.752005680596567*^9}, {3.76338224087059*^9, 3.7633822671441183`*^9}, {
   3.7656559105913*^9, 3.7656559827566233`*^9}, {3.765656037239656*^9, 
   3.7656560373387337`*^9}, {3.765720638801524*^9, 3.765720646402195*^9}, {
   3.765721041852858*^9, 3.76572107073111*^9}, {3.765725014182933*^9, 
   3.765725016317746*^9}, {3.765745085979012*^9, 3.765745087804563*^9}, 
   3.784344009600391*^9, {3.793032421274383*^9, 3.7930324217755938`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"127d07ef-e44b-4287-8005-0485a37caf81"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
15a. Export CSV of all compatible data types (string, integer, list, real):\
\>", "Subsubsection",
 CellChangeTimes->{{3.734189486408122*^9, 3.7341895106160927`*^9}, {
  3.739204323001759*^9, 3.73920432371455*^9}, {3.740854723329686*^9, 
  3.740854723447792*^9}, {3.7520077625529623`*^9, 3.752007763397131*^9}, {
  3.75200784336369*^9, 
  3.7520078576405907`*^9}},ExpressionUUID->"78fb3ea0-817d-417c-9cf7-\
3234979fda17"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"normalizedDataset", "=", 
    RowBox[{"Normal", "[", "withkcatOverKm", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"replaced", "=", 
    RowBox[{"Fold", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Replace", "[", 
        RowBox[{"#1", ",", "#2", ",", "Infinity"}], "]"}], "&"}], ",", 
      "normalizedDataset", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"_FittedModel", "\[Rule]", "\"\<NaN\>\""}], ",", 
        RowBox[{"_Graphics", "\[Rule]", "\"\<NaN\>\""}], ",", 
        RowBox[{"_Image", "\[Rule]", "\"\<NaN\>\""}], ",", 
        RowBox[{"_NonlinearModelFit", "\[Rule]", "\"\<NaN\>\""}], ",", 
        RowBox[{"_Times", "\[Rule]", "\"\<NaN\>\""}], ",", 
        RowBox[{"_Overlay", "\[Rule]", "\"\<NaN\>\""}], ",", 
        RowBox[{"_ReplaceAll", "\[Rule]", "\"\<NaN\>\""}]}], "}"}]}], "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"headers", "=", 
    RowBox[{"Keys", "[", 
     RowBox[{"replaced", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"values", "=", 
     RowBox[{"Map", "[", 
      RowBox[{"replaceBracketsBack", ",", 
       RowBox[{"Values", "[", "replaced", "]"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"values", "=", 
    RowBox[{"Values", "[", "replaced", "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"datasetForExport", "=", 
    RowBox[{"Prepend", "[", 
     RowBox[{"values", ",", "headers"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"safeExport", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{"\"\<~/Desktop/\>\"", ",", 
     RowBox[{"withkcatOverKm", "[", 
      RowBox[{"1", ",", "\"\<GlobalExperimentIndex\>\""}], "]"}], ",", 
     "\"\<_MecMUP_LinComb.csv.bz2\>\""}], "]"}], ",", "datasetForExport", 
   ",", "\"\<Data\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.737657601018197*^9, 3.737657624028406*^9}, {
   3.7376672725791616`*^9, 3.737667283977404*^9}, {3.737668118738617*^9, 
   3.7376681325440617`*^9}, {3.737668544038116*^9, 3.73766854447711*^9}, {
   3.73774269030485*^9, 3.737742692368063*^9}, {3.738427975083262*^9, 
   3.7384280152709627`*^9}, {3.738954419374605*^9, 3.738954420792205*^9}, 
   3.740344782787072*^9, {3.740953571026223*^9, 3.7409536068963747`*^9}, {
   3.752006046305841*^9, 3.7520060496657476`*^9}, {3.756428679323844*^9, 
   3.756428690000704*^9}, {3.759347195734453*^9, 3.75934719742522*^9}, {
   3.761239650823976*^9, 3.761239651647806*^9}, {3.7618630345847063`*^9, 
   3.761863036007925*^9}, 3.765660190611598*^9, {3.766674688042597*^9, 
   3.766674689748597*^9}, {3.76668478291072*^9, 3.766684784643402*^9}, {
   3.766802478036063*^9, 3.766802479517311*^9}, {3.784219585698348*^9, 
   3.784219589605927*^9}, {3.793818542703841*^9, 3.793818558025916*^9}, 
   3.793818591626667*^9, {3.795221443576445*^9, 3.795221468597939*^9}, {
   3.7954667438122*^9, 3.795466750293036*^9}, {3.795792519298324*^9, 
   3.7957925233294573`*^9}, {3.795793729550556*^9, 3.795793739255582*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"ca4adb96-d754-4f64-bcd2-b351f9d9faae"],

Cell[BoxData["\<\"~/Desktop/191208_S2_d3_MecMUP_1_MecMUP_LinComb.csv.bz2\"\>"]\
, "Output",
 CellChangeTimes->{
  3.795792537407106*^9, {3.795793735465743*^9, 3.795793747659746*^9}, {
   3.795805657997052*^9, 3.795805679787961*^9}, 3.795810520558278*^9, 
   3.7958123714390182`*^9, 3.8071498580802917`*^9, 3.812635396477028*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"e36f62b1-0c1d-45e2-86cc-93bb9aea2c98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{"\"\<~/Desktop/\>\"", ",", 
     RowBox[{"addedkcatoverkm", "[", 
      RowBox[{"1", ",", "\"\<GlobalExperimentIndex\>\""}], "]"}], ",", 
     "\"\<_newLBR.wxf\>\""}], "]"}], ",", "addedkcatoverkm"}], "]"}]], "Input",\

 CellChangeTimes->{{3.793643174696953*^9, 3.7936431904312696`*^9}, {
   3.793648183596491*^9, 3.793648188853635*^9}, {3.793887540305407*^9, 
   3.79388755019695*^9}, 3.795229883975698*^9, {3.7952915631824617`*^9, 
   3.795291564424625*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"22920b38-dd14-4f22-a7d5-f308613afbec"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.795805658153386*^9},
 CellLabel->
  "Out[382]=",ExpressionUUID->"de086fef-e6ac-40d1-866e-6e27eb9cbe2d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"in2", "=", 
   RowBox[{
   "Import", "[", "\"\<~/Desktop/190804_S2_d1_MecMUP_1_newLBR.wxf\>\"", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795733611622937*^9, 3.795733626564065*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"bce4f465-8a26-41fc-b9cb-6aa4a34a4204"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"makeGrid", "[", 
  RowBox[{"in2", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "20"}], "}"}], ",", "\"\<MecMUP\>\"", ",", 
   "\"\<unscaled\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.793038053126914*^9, 3.793038056481063*^9}, {
  3.793038257942894*^9, 3.793038258488263*^9}, {3.793039776905778*^9, 
  3.7930397771909647`*^9}, {3.793401674941678*^9, 3.793401719376733*^9}, {
  3.793401794873056*^9, 3.793401798067727*^9}, {3.793406364823845*^9, 
  3.79340636500298*^9}, {3.793409648166844*^9, 3.793409694800915*^9}, {
  3.7952650098809767`*^9, 3.795265010065559*^9}, {3.7956183524164886`*^9, 
  3.795618352705741*^9}, {3.7956452586445312`*^9, 3.795645300692032*^9}, {
  3.795733632267415*^9, 3.79573363297118*^9}, {3.795733682031928*^9, 
  3.795733682395122*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"b6a0f835-7e61-4263-b643-4124368d223c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
ubBFl/gIc+PbvvT/xo6+YwV/c3wK6qXIN0Gj547FGLUpQQK+dhDNTI5gEAlz
KvY6I9OmajuGuJvMnhuBZbwZ0WRGsWdXIvAtdPCcOXwR/BLxuUl5S6bdjPgp
/6QWPXESasOqJVGfYZhuvIuqL8FXvvFABWR3M0bj9+AuDYySggHZzylPqvba
pP578BOvFKOxS/A7d8hd5SdeLySRG1jtOPayp2rLNtIqQKqEuEVqtQ6pkpg0
jBO4ktiSTjHTM8po4NGuH27RPepYON6p6IsVbzwQ0RZ5D6xRNVM1Q9y54q+i
jgrumgGhNqQ3QPGLvBV7xxzZSqN9jx49LVQ82GoKzQ4w515nvnILeDhSma8A
IFsT9OYn37+Gr6YnBdEQrxGtbrggitNZRqWfrdrVy5tHyr0rVZ91itHTD/PQ
1w5bRIsbLmDawfdsdqs79ry3piFtNtaSTOPuxOM6bPVKjlnqzY0xli9T4Sk3
FDabghFDLRUQ4s5rwDxKyUx2/kkXRKgnXpODdyVibUAookgEz1+gdjNicjCe
3yNN6xa8kMCOFO3rLOFNXN1faWJ007eF6KVvg2eQiOGPIPO2sgdpGlmPtJcu
3FiDXGXKC8N0/O+MIXAN8PoLibat8OQnaxZ5P7aulyFTVGP1WoK9nyqyuLKB
6pHB89idDgj8Y3aGBTIIaJt1MUYKXrxKJ8UoKENgqpSsaD9j6W9ynWVrxvHW
zaZAhZ+sId/4Ze7nVSTNc6O1H5wzR+b52gL1stTeRmPsdthCyrlj38mtixhB
9Jg7BPiMec4xa5dMYyzVSM+30Tju17zt+mRZ1GLSShNC9OBhMReRylS7DaSz
R4VYn+8zWD0fWrLi2+gUo1qHRd6LvH+s2xLJP18HJgp+BqvE91pFWq80pRXg
WtjcULbo8P75PviIdE08gXGg9JVmacKJYiBmPItNDZlmaPvShcx/zzovlZaM
/GwV8hqMMZ5ebzIbtAa4C/MWp01yMu2BPPDRd5VpxYhQM5qFo58qvBVmM9Oj
yeyWzf70CaHb9T9bdToGLB7xtFuzwN21W5nGvcu5Pox4qPHVTBoLx2eKsOH7
Tg5BR4wZqhKKrviLDR+kMT4uKxoZ3h4V8nWVc0f21nfRM8YyO3tacorQDmqv
lw19bYHsnSLYgzT1SJJ95nB4xK1ZsH0zJVipvMa5Ze7YAYFmSpvdGAJkDU+l
fZPiP+yekLhavj4KjXwfRWCS5tPFiCxedkeMgVB0E+EjRi34Yd78sNVjFk+8
q4yrg8OBHbFeqMbgw0Xb9S9mRwn79u8pIG/j1/uEw8Xs3QWoX4HV3vZFLzdc
wOj39FZnsuxspKdEjPUGhtR3JVqGoCeMgVvUjKXTJ62cA1/XF/F1KGy+wJDx
/6o+DY20eKcfVf2jD6o6AGMHz/JCkjdq4UdZfRjUVpGr++UvKafI9OD3h8eX
m5SbNJmRBW8rqxnwTQowDjJyVB6CyaizZM/5UewQilDZ52KOX/CqAwLnjm3R
fdbof7hHZnV3enO1NROITcrOGeKspW+vUDPgixX9pcGdHjEeXpUqAT5p0dXS
/7l6QOATr90F0Jae3ZgzgSlshtVZsOco+NWst/cFpleTAt/7VVgE0N/3GXi3
BfYQpmGMpMAUHAmyf/dsaPTk4Jg02C/wMx1xM0KkdaA0zBd6ZhDO+p2Sen3Y
sqHAaVnRT2MLfwYvyUsjNnxYcsYQ+MZZQ83NIYievnuQxp4+QHMIIhuo0oGX
hX4BJ+GYVYMouyk3WeQNbbGN4XE7cDbNMl/pzVaT4rTZuzAoVqpH4vmAeGvM
MTAuxmFLJHAD6g++kLMQWDekc8gDEqvgPwzP7qO5XsTvpDxWYR3tlCqBNp4t
Avu3K/GoI/ElGBl6dgV940rkoRXt6+vBViAmknfcpM6qTikWYyaWj/s6iHEJ
mF/4TfgTw3SuT0Nl37Khj60pVoMvqZcfvaGQMOLElfR8bt6o1xa3fccuoRqf
ditXd95D83VMzxSB7oQi4FaqP2gV6RW06OK9MgoGfqqIao32ou2YKccUvGkD
rF3ZQKFIzW2I84rJ4JMqRpPl5c/inwyk5wZOFLdbMe18bQGdU3N7fdQnieVv
5K9eW1xTFYowkl/m7i4A23x3w/pknWuzXGl2rYvVI1FvASyMBjx0LARP+fe1
myPGyK+A1XYlwvZHrIAmETpr2Ies4od5VIlOqxKYPzAuUcLKudA0b38LR8Eh
/Oe5EVs1GV+taoYYwZ7DI2aEch57BeJq0Vjd69dBE0JhDd2CVhGrAbUMUZN5
rpVz4P3qe+f2ahIyw4M+Fo4tuh/Ph2dcOYekAV5ZM8GjHHItG4ro98dsvGkn
Kxo6qR4JDQzKkErvxMMHPSzJiv4llPKIs/KKYT5qbYnEkxbQQGh+m9JlO6mU
PXV3M6JKp2Tkm0v0C7nkzQjGeVLFscI+PB0MxIG++ZHGcyr9x10W/WWNf5qf
GKW+x2AL63/nzJPy2q0Yw0r6PS0A2zcjUEHMjoWOQSul0ls29u8ZCLDa/ftE
hoRxRMQeV4eVIRwN7fD2pzoJ0gu8o4TONDdutMf3sZ7cIbQHlbQlp2YOZz3j
LTEhelKpoj20p2SkhSNsn86fPomtgprG0ROidBaNiHXxsqHrAmnPNymdYon4
WhP9epB2q3fNREt/XeAelZDd2Ma94ptqWPgnfQWmjMthz4VqZNHZjfb3hIgJ
jik8r4tqVwWDmnX4/+mYiSuVC6u/QKYnlV5Nwr5/rOVlQ67Xo4d3b6C5mHco
3HmMI6E5hLShZ3Q1mU5vBUslleI/e52VC2m0qKofRwyswWe2fC+8BL1NBP/F
2zXWTICuVc6FFbi6X1O97/RNSmnCSa0JsjkkbCQ/tt77OnwArZe+TEVOc1rO
xR51JOlzKsDNkuZBQjbmpo+YfZE0rO4MWnE6xi1KYCo2lL5v/WsY2AoWtbfR
1ONrC/kc/8bGip4apbEE+gM7vnShx/sYu3pM9QhEJJqtvhZBW+TnLRy1bYPn
SaWHpz/xmrjyWAiOo5pZ/g4U7RvtzxZh/vFOGjRi5nYX4D0gjikba6hfVD2g
72TFKCG9+4SeTYS+3ndi9aRX/OnNOrylsE/4QtifQfhtX8JH11RhZ4fi8K4K
4OR3OfBG/Ln0ZiobK/CAXRrGusSj4b0hsGc+48ezL7SOj0wcc7hkGvgjkobw
EZ7Mlb8J7fqSaXiLDjWqq6izjLcmS8LbZoSi41OkUtwf/suOBCZlWImuvC+c
vcsjwIVqoqmqilUe8COMbI1iMd4MAw/cVwP617ohu2HbQlFPL9cKneWvjKgM
JgfrCs2mrL6FoRF4CcZT5FQ0mQW4YGV3wdTYkn+sReTD2NE646v32XyPHjDj
rsTsnIvZ7O5ZBcA5cyDNVtGWSLz9ZtSC/igfDVmdp8DcmLBEiJ72aVYhCJTw
Nhq6paLeo/c2etZ5ZIKxJQzZ9O9n7liJuKs3lmGciAedO5bF8A4Foeh0zIM0
YJe8UUIRskfEIXAti7zNlJDhI8YRcjtiTFKSJWLrrnJ2DkNn1MC/qUe6utvG
0BMLdZavLfB8Hv+8vkPQeXeDO3+VmBhvyt/4GSxNQCRmb2Z545FTUbMOWxaO
qmaEWu8qh9oAl2HmwLQwXws72OxmXfw0NiIfrJ96b60xIrCrO+Y71AaMxbKh
/LNuyBh4/oWPgHzlRromnsaZHAzuq0uj1mFL5JoJxKmL37OrS6YBnd9wUTVb
F7jDtt1qfzreSvT/VvtvbaUhrQ==
        "], {{0, 103}, {103, 0}}, {0, 65535},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Bit16", ColorSpace -> "Grayscale", Interleaving -> None, 
        MetaInformation -> 
        Association[
         "Exif" -> Association[
           "NewSubfileType" -> "Primary image", "ImageWidth" -> 2856, 
            "ImageLength" -> 5712, "BitsPerSample" -> 16, "Compression" -> 
            "Uncompressed", "PhotometricInterpretation" -> "Black Is Zero", 
            "ImageDescription" -> "{ shape : [5712, 2856]}", "StripOffsets" -> 
            270, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 5712, 
            "StripByteCounts" -> 32626944, "Software" -> "tifffile.py", 
            "DateTime" -> 
            DateObject[{2019, 8, 7, 19, 6, 17.}, "Instant", "Gregorian", -7.],
             "SampleFormat" -> "Unsigned integer data"]]],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{103, 103},
      PlotRange->{{0, 103}, {0, 103}}], 
     StyleBox["\<\"Mutant\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["\<\"Substrate\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["\<\"Chamber\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["\<\"eGFP Intensity\\n(RFU)\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["\<\"[E] (nM)\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["\<\"Local Lower\\nLimit of Quant.\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["\<\"\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"\
Italic\\\"], \\\"cat\\\"]\\) (\\!\\(\\*SuperscriptBox[\\(s\\), \
\\(-1\\)]\\))\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["\<\"\\!\\(\\*SubscriptBox[StyleBox[\\\"K\\\",FontSlant->\\\"\
Italic\\\"], \\\"M\\\"]\\) (\[Mu]M)\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["\<\"\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"\
Italic\\\"], \
\\\"cat\\\"]\\)/\\!\\(\\*SubscriptBox[StyleBox[\\\"K\\\",FontSlant->\\\"\
Italic\\\"], \\\"M\\\"]\\) (\\!\\(\\*SuperscriptBox[\\(M\\), \\(-1\\)]\\) \\!\
\\(\\*SuperscriptBox[\\(s\\), \\(-1\\)]\\))\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["\<\"\\!\\(\\*SuperscriptBox[\\(R\\), \\(2\\)]\\)\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold]},
    {"\[SpanFromAbove]", 
     StyleBox["\<\"E415G\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["\<\"MecMUP\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"2", ",", "20"}], "}"}],
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20], 
     StyleBox[
      TagBox[
       InterpretationBox["\<\"1,944,601\"\>",
        1944601,
        Editable->False],
       NumberForm[#, DigitBlock -> 3]& ],
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20], 
     StyleBox["13.600000000000001`",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["\<\"28.4\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["1.93`",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20], 
     StyleBox["225587",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["8.556400489400371`",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20,
      FontWeight->Bold], 
     StyleBox["\<\"0.985\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->20]},
    {
     TagBox[
      TagBox[GridBox[{
         {
          GraphicsBox[{{{{}, {}, 
              TagBox[
               {GrayLevel[0], Thickness[0.0075], Opacity[1.], 
                Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVj2s0lAkYgGd2QykjqQhxusk2sYuQLO8bRxGphJGoTDhpXbOERhhjxjdy
GeNzGWTyWTvaSraN1iY7CYfSDUlWq4QGk0qcKNn2x3Oef885zzp2pGfwNzQa
be9X/nfV9z8O9japQ8fotNHQwrz9A4YvksRr0NKLk9/j9TuwPGR/HyU+Qu7n
fKmQN+6gH/GQ5kwsxiRP3pFjvE8O80mvpDaELvqd8n22nbcU3qS/efsDYYJN
uhGeNJ4+jBBTRabEduQ3SXiSNCa8XDozwSRc8MMHQ1E31w5EsUEePqJDOIEl
ye7V7jDBsmbYfWGjdVDzS5arNzDGnvxSujIU08mYq756/kAsN+vTronEtsNj
uy2bAmGrR8fxgIlTGHcvcbTWPBjg+VOZnVMcmrhhMaU8AY9lVq1cYQLOQ8ul
64VhoGmsJw8s5uB9/b4aJj0K4pV9hNtYMho6FtK39EdDy7XlRSGpqQgrZ+zj
yBhgZB/u7VdJw0CWyYvnu2IhXCM/yec3Hsq9lfYKg9OwLiR3Rdk2Pvq4FK/f
2xUP48cTGYrnAlwqbVzjeiURps9mxoWmEsjgfjcckMIBr5hjndfVMvGm5gad
pxZnoX3Zhky1mnMYcq7HfHJRCoiTq2027cjGPY7BK2SDKRBTuNbNZSQHW6Vs
ZsX9VNgT4j+8ryUXgxMtNJg3uMBTZpYGEiLsivCRTIrSwHW3hdpMQB42XIpm
Tybx4M+sHaFRG8W4RdQ1YOqXDu1sH7rKqBi1debM6RZ8CFJXuBs05ON+qdfE
EgMBVJ8fyFmTTGL/9o2GrBkBJKi48ou9CvDmSq/x7pcZoJhr+93SuBCN9eDu
cAcB3w7InlxTFCJNc5vaTkoI1SLalbrGIhwKC1O2ZmXCrEUDpzytGB1q7c0l
J86Bgi1IrXCWoNXcB6EqZEFQ8F1bE90SZJm5thZuzgbCK1oh/qcETzJsdTi0
HLBdne3OrS1Fx5mBjJTxHMi/s+xXn/gyVNU8SIQfz4UcermNs915HGy4nfL6
fi6s0pKdqWOUo/f6o1SUkwicNbTrNbrL8XIavcb4qghoEXOPp7yk6Ddawxvd
lAdXDGKHlY1SXGTGYcYW50GtXDr1zOgCBrcdkFmqiGHugeDwEuEFPFn/8dNs
ghiKuo2atigvoHeHnHo/Iga+VG5/yKMCO1sHdf86kA8NPYar2+srsLK9Mj2j
JR+c6KZjTD0KJ8Pi1maakxCSFbpjSJ/CgoxOt3BLEoRrqoSStRTW9Fgn7LMi
4aG5EXPJOgqnVPGRti0J/mytsJHNFKr2bY0rRRJ+bp5WSq0o3NUTJb68j4Sq
9FvvVh2gMHS+Sv9BOAntWp92dnpSqFLqvLU2koSJMps8nheFy7kzduJoEizq
rlpMsShkbs7xZcWScGukIubhEQpvvS7h/8shoXe3YFoYRqHZ0Ia6yUwS5rqa
nR0jKNR0G61/lEWC4TFawWwkhf4qjTeu5ZAQFJ9gfSLm619Mef1pMQlvZT+d
dk6k8KA7XlyQkKBtJWv7fIbCO34FlS9KSbCWv9L5I4lCA/mXsubzJHD6Am6s
T6XQpUg1W1BBQnmwZPEzLoUc9SpeaCUJt9898RXxKPTpZSW6VZEwnKRd7cKn
MGNBP9JURsJi9f2zC4Kv/bT3bM2LJPwHHQZEhQ==
                 "]]},
               
               Annotation[#, 
                "Charting`Private`Tag$232005#1"]& ]}, {}}, {{}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.012833333333333334`], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 FormBox[
                  StyleBox[
                   GraphicsBox[
                    {EdgeForm[{GrayLevel[0], Thickness[0.125]}], FaceForm[{
                    GrayLevel[0.5], Opacity[0.7]}], DiskBox[{0, 0}], 
                    {Opacity[0.1]}}],
                   StripOnInput->False,
                   GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                  TraditionalForm], {0., 0.}, Automatic, Scaled[0.05]], {{{
                500., 0.002996295179439974}}, {{1000., 
                0.007193192892201945}}, {{1500., 0.011610811224080909`}}, {{
                2000., 0.018802740089046505`}}}]}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[
                1.6]}, {}}}, {{}, {}}}, {{}, {
              {GrayLevel[0], PointSize[0.03], AbsoluteThickness[1.6], 
               PointBox[{{500., 0.008246086567198456}, {500., 
                0.008246086567198456}}]}, {
               {GrayLevel[0], PointSize[0.03], AbsoluteThickness[
                1.6]}, {}}, {
               {GrayLevel[0], PointSize[0.03], AbsoluteThickness[
                1.6]}, {}}}, {{}, {}}}, {{}, {
              {GrayLevel[1], PointSize[0.02], AbsoluteThickness[1.6], 
               PointBox[{{500., 0.008246086567198456}, {500., 
                0.008246086567198456}}]}, {
               {GrayLevel[1], PointSize[0.02], AbsoluteThickness[
                1.6]}, {}}, {
               {GrayLevel[1], PointSize[0.02], AbsoluteThickness[
                1.6]}, {}}}, {{}, {}}}},
           AspectRatio->0.8,
           Axes->{False, False},
           AxesLabel->{None, None},
           AxesOrigin->{0, 0},
           DisplayFunction->Identity,
           Frame->{{True, True}, {True, True}},
           FrameLabel->{{
              FormBox[
              "\"Scaled initial rate (\\!\\(\\*SuperscriptBox[\\(s\\), \
\\(-1\\)]\\))\"", TraditionalForm], None}, {
              FormBox["\"[Substrate] (\[Mu]M)\"", TraditionalForm], None}},
           FrameStyle->Directive[20, 
             GrayLevel[0], FontFamily -> "Arial"],
           FrameTicks->{{{{0, 
                FormBox["0", TraditionalForm]}, {0.005, 
                FormBox["0.005`", TraditionalForm]}, {0.01, 
                FormBox["0.01`", TraditionalForm]}, {0.015, 
                FormBox["0.015`", TraditionalForm]}, {0.02, 
                FormBox["0.02`", TraditionalForm]}}, {}}, {{{0, 
                FormBox["0", TraditionalForm]}, {500, 
                FormBox["500", TraditionalForm]}, {1000, 
                FormBox["1000", TraditionalForm]}, {1500, 
                FormBox["1500", TraditionalForm]}, {2000, 
                FormBox["2000", TraditionalForm]}}, {}}},
           GridLines->{None, None},
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImagePadding->All,
           ImageSize->400,
           
           Method->{
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}},
           PlotRange->{{0, All}, {0, All}},
           PlotRangeClipping->True,
           PlotRangePadding->{{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 
              Scaled[0.05]}},
           Ticks->{Automatic, Automatic}]},
         {
          GraphicsBox[{{}, {
             {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
              0.012833333333333334`], AbsoluteThickness[1.6], 
              GeometricTransformationBox[InsetBox[
                FormBox[
                 StyleBox[
                  GraphicsBox[
                   {EdgeForm[{GrayLevel[0], Thickness[0.125]}], FaceForm[{
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], Opacity[0.7]}], 
                    DiskBox[{0, 0}], 
                    {Opacity[0.1]}}],
                  StripOnInput->False,
                  GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                 TraditionalForm], {0., 0.}, Automatic, Scaled[0.05]], {{{1., 
               1.944601}}, {{2., 1.741482}}, {{3., 1.640846}}, {{4., 
               1.461334}}, {{5., 1.467528}}}]}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.012833333333333334`], AbsoluteThickness[
               1.6]}, {}}}, {{}, {}}},
           AspectRatio->0.8,
           Axes->{False, False},
           AxesLabel->{None, None},
           AxesOrigin->{0., 0},
           DisplayFunction->Identity,
           Frame->{{True, True}, {True, True}},
           FrameLabel->{{
              FormBox[
              "\"eGFP Intensity (\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(6\\)]\\))\"", TraditionalForm], None}, {
              FormBox["\"Assay Number\"", TraditionalForm], None}},
           FrameStyle->Directive[20, 
             GrayLevel[0], FontFamily -> "Arial"],
           FrameTicks->{{{{0, 
                FormBox["0", TraditionalForm]}, {0.5, 
                FormBox["0.5`", TraditionalForm]}, {1, 
                FormBox["1", TraditionalForm]}, {1.5, 
                FormBox["1.5`", TraditionalForm]}, {2, 
                FormBox["2", TraditionalForm]}}, None}, {{{0, 
                FormBox["0", TraditionalForm]}, {2.5, 
                FormBox["2.5`", TraditionalForm]}, {5, 
                FormBox["5", TraditionalForm]}}, None}},
           GridLines->{None, None},
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImagePadding->{{75, 2}, {65, 5}},
           ImageSize->400,
           
           Method->{
            "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}},
           PlotRange->{{0., 5.}, {0, 2.9169015}},
           PlotRangeClipping->True,
           PlotRangePadding->{{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}},
           Ticks->{Automatic, Automatic}]},
         {
          GraphicsBox[{{{}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.012833333333333334`], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 FormBox[
                  StyleBox[
                   GraphicsBox[
                    {EdgeForm[{GrayLevel[0], Thickness[0.125]}], FaceForm[{
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], Opacity[0.7]}], 
                    DiskBox[{0, 0}], 
                    {Opacity[0.1]}}],
                   StripOnInput->False,
                   GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                  TraditionalForm], {0., 0.}, Automatic, Scaled[0.06]], {{{0.,
                 983.}}, {{10., 2042.}}, {{50., 6391.}}, {{100., 11621.}}, {{
                25., 3664.}}, {{2., 1186.}}, {{5., 1499.}}}]}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[
                1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
              TagBox[
               {RGBColor[0, 
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 
                 NCache[
                  Rational[2, 3], 0.6666666666666666]], Thickness[0.0075], 
                Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["

1:eJwVznk4lAkAx3HHUzkqSywhjFAjlWNdeTK/XKESIzRv20bT5nqkeMQUZZNI
NY0rEZqHyXQwORvHxDjyqinZlnhMlIosW2wkR7HtH9/n8++XcjiS/rucjIzM
nh/9r2axuZl4rtnxyZkWq64nbMymffGwT+DSakoDlbxG2MixjPHXSCincfsX
30hkr+Lo8ppf5RPEtFgbBzZpdxVek92H5uO7aEafqkYbS67CafjI0Jf4N7Qm
wYtO/x0ciF6bFU3FT9K09dqSXNelY+4V59zneBk8/1by0bAnA54H1I7HblGF
47NS1wH2NdgWv7348sJa0Hk940zFPHDOrKkp6TdAorQnPyqqAAfDB97xPI3R
r6YcKs7goj7ZNPWvY1S4NYjulu0uwuQh/fG28c2wjmAL8jbxkEHhaw1RLWDx
XCKUyJZgmpo489XWConV2qOHa/lwViuzOh5lDZ/ii/1zmXdApN+4J5NiixgN
pemZvfcwob5BQzPdHrdsZ9Ts5MtwIm75IJt0AIMpNx0nFaAhij+k17cdWxV/
WlTxLAfLxMswVQmIHt7CfGdXgW6NnKet63egMVdesn99JTK7kKVs6oQqlSA3
2cVKuJ/OUj7v5oyQtM4i6ngVgv515yp4u4Bsb1NL7qjGiQD++4eRrviwQsIM
rK2BmNZNsUlzw2pKinCg+AGip4Li69N3YnBBosc+K4RuTu6FyPvuiJQaBDdG
1IK63FJgXu+BO/GLLZTddTj59XpndZMnxr6kUzaY1KOu705hqHQXPkZbB5Wq
NSAwWeey6fvduF4VVH1kogHfKbZUXXkvLJstGM0fFKEflKYu3b2IU+foxz5+
iCsaNnUdqt7I+qwUdp7XiNvnysN2cL0R1ZOdrZrRhBg/qSmMffBNtG9s1FaM
w6ERwVy+D5xO2yvn8cTwjOle0LKmY8yhRPeSdjPej4wXatbRcfRgrzA7tRks
777cLe6+cPqD4/xmqRli/ZhiyTNfTC1bzXCJbMEGcxb1ifc+8E+ORLJeteCi
HX3F0OA+iP52i/1Eb0VBiXQqgemHkofhCgnNrShduc3OasoPk5laabvs2yCt
Wpr1SPSHo7/BqnFBG0TimI4R+QAEsv5Zy9N9hOuPxBM3MgLwrhCaBZmPYGIu
Mu7V3A8HY0bhfbl2dEv1+qLz9uNazlOTzMh2JJz1f7txIwM+KztuPhhuR1+q
4wKzlIG3QylFU74kfrmxObxSwABvemnwtR8JTpmuVKaCgeAVcTpPA0h4vJiv
L6hh4JNZSBbvAIl6HeGp3kYG5mPdL/gxSeQLts57/snAmtWKYcIoEkHdBnMW
Mwy4bkuzOJ1OonFEJTRxlgHFPXLHgjNJaM8t9nXOMyA5dOqubzaJF+sGasOX
fvwlh603yyXhEpwbd0uBwG9dnhoDXBIm86qzWjoEYo8qzzmWkzi3UjYkeB2B
bawk602VJAb1Jntr9Al8v7RwQrOaRI5zp5BuRCCpYnxsQkhC4Upa7OXNBDjf
JK+4TSSO3GR96N9KgK7isvZKMwlxRUgA1ZKAhqHIj9VKgvXSzbbdhkD+ztJO
H5LEy1Frvro9gUDCSNnxMQnLBSNNpgMBw4j8naYSEuxV6ikV2wkMn1U///Mz
EmP68l+XaARuZ1wWyz0n8R9GoE5E
                 "]]},
               Annotation[#, "Charting`Private`Tag$709679#1"]& ]}, {}}},
           AspectRatio->0.8,
           Axes->{False, False},
           AxesLabel->{None, None},
           AxesOrigin->{0, 0},
           DisplayFunction->Identity,
           Epilog->InsetBox[
             BoxData[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SuperscriptBox[StyleBox[\\\"R\\\",FontSlant->\\\"\
Italic\\\"], \\\"2\\\"]\\)=1.000\"", 20, FontFamily -> "Arial", StripOnInput -> 
                False], TraditionalForm]], 
             Scaled[{0.8, 0.25}]],
           Frame->{{True, True}, {True, True}},
           FrameLabel->{{
              FormBox["\"cMU Intensity\"", TraditionalForm], None}, {
              FormBox["\"[cMU] (\[Mu]M)\"", TraditionalForm], None}},
           FrameStyle->Directive[20, 
             GrayLevel[0], FontFamily -> "Arial"],
           FrameTicks->{{{{0, 
                FormBox["0", TraditionalForm]}, {2000, 
                FormBox["2000", TraditionalForm]}, {4000, 
                FormBox["4000", TraditionalForm]}, {6000, 
                FormBox["6000", TraditionalForm]}, {8000, 
                FormBox["8000", TraditionalForm]}, {10000, 
                FormBox["10000", TraditionalForm]}, {12000, 
                FormBox["12000", TraditionalForm]}}, None}, {{{0, 
                FormBox["0", TraditionalForm]}, {20, 
                FormBox["20", TraditionalForm]}, {40, 
                FormBox["40", TraditionalForm]}, {60, 
                FormBox["60", TraditionalForm]}, {80, 
                FormBox["80", TraditionalForm]}, {100, 
                FormBox["100", TraditionalForm]}}, None}},
           GridLines->{None, None},
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImagePadding->{{90, 10}, {58, 2}},
           ImageSize->400,
           
           Method->{
            "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}},
           PlotRange->{{0, 100.}, {0, 11621.}},
           PlotRangeClipping->True,
           PlotRangePadding->{{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}},
           Ticks->{Automatic, Automatic}]},
         {
          GraphicsBox[{{{}, {{{}, {}, 
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
                0.011000000000000001`], AbsoluteThickness[1.6], 
                Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw90A1IU1EYxvFphssVFA1mMHVLt2xuptNNc257dOqcWukikWoJC1MaWVZm
Dd1uEShUFNGXrVpB0BRJEZGFVFMxlrUKou8IKzI1jXClFK0vuq8XLpff/XPe
czhi605zVTiHw8n8+/77/n++6O2ehnlJUVIf+wNJedEmiYDMRblLOVOfQF4M
zekYj1hJ5kPeu8OiADkalYc+M5fWkoWo7kubsVvIItxoSXQJzOTlePTG1xks
ICdAEmliFmaTpfgoX3+4MpWcCNfK5E0TUrIMgalef7uQLEe3aPD6z7nzJiNy
WdtgnYKcgsax7yqempyKWJvfMKwjK7HIeFPTZSSnwbLB4LhVSk4Hozo+ZrOS
VQC/Xt63l6zGuOdrsbeZnIF341s6drnImThqL1kX7CSvhm1ov6BsiJyF0csD
deIOsgb8nhmp6BQ5GxE51+KUTWQtrnh7fPpqsg5jtw9WpM/drx7bp6RtIS0Z
mF5xoHkkljUDLH06/PhIGPUcTCpqlzz4IGF7Dpz3W7Y13WPNyUVwviNmXzf1
XLzQnnO2nqduwMRG7qt+L3UDjJPvTwaeU8/D4FW3LvSDeh5yP82Wu+No/3wM
vBY6+XT/TD7cKQtan9RRL0Djw9qy0l5aX4CR2Tt3NytovhGRVWqHrT+B7UZY
Itb4y2pYcwphqcky7xFSL8RvT/g368t4tptwlrFHyUZZMyY0tMtiM6epF2Gr
5uKFE7+oF+FMWEVaBo/mF4PXtfvZqmiaXwyZlhtwSKiXoNYREh57G+/7A2d5
9Ms=
                 "]]}}, 
              {RGBColor[
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
               0.011000000000000001`], AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
                0.011000000000000001`], AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]}, {}}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
                0.011000000000000001`], AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]}, {}}}, {{}, {}}}, {{}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.012833333333333334`], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 StyleBox[
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.33333333333333337`],
                    FrameTicks->None,
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                   GrayLevel[0.5],
                   Editable->False,
                   Selectable->False],
                  StripOnInput->False,
                  GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, Offset[
                 4]], {{{20., -7.844272067454802}}, {{
                20., -7.844272067454802}}}]}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
               TagBox[
                {Opacity[0.], PointBox[{{20., -7.844272067454802}}]},
                
                Annotation[#, {{Callout}, Charting`Private`Tag$17019, {
                  1}}]& ], 
               TagBox[
                {Opacity[0.], PointBox[{{20., -7.844272067454802}}]},
                
                Annotation[#, {{Callout}, Charting`Private`Tag$17019, {
                  1}}]& ]}}, {{{{}, GraphicsGroupBox[{
                  {GrayLevel[1], AbsoluteThickness[4], Opacity[
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
                   JoinForm["Round"], 
                   BSplineCurveBox[{
                    Offset[{2.8284271247461903`, 2.82842712474619}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{2.8284271247461903`, 2.82842712474619}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{4.242640687119286, 4.242640687119285}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{4.242640687119286, 4.242640687119285}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{5.656854249492381, 5.65685424949238}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{7.65685424949238, 5.65685424949238}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{9.65685424949238, 5.65685424949238}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{9.65685424949238, 5.65685424949238}, {
                    20.211739197255305`, -7.698186872556418}]}]}, 
                  {RGBColor[
                   0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], AbsoluteThickness[1.25], 
                   BSplineCurveBox[{
                    Offset[{2.8284271247461903`, 2.82842712474619}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{2.8284271247461903`, 2.82842712474619}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{4.242640687119286, 4.242640687119285}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{4.242640687119286, 4.242640687119285}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{5.656854249492381, 5.65685424949238}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{7.65685424949238, 5.65685424949238}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{9.65685424949238, 5.65685424949238}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{9.65685424949238, 5.65685424949238}, {
                    20.211739197255305`, -7.698186872556418}]}]}, 
                  {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]}], 
                   PolygonBox[{
                    Offset[{46.65685424949238, 13.456854249492384`}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{46.65685424949238, 0.45685424949238396`}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{9.65685424949238, 0.4568542494923751}, {
                    20.211739197255305`, -7.698186872556418}], 
                    Offset[{9.65685424949238, 13.456854249492375`}, {
                    20.211739197255305`, -7.698186872556418}]}]}, 
                  {RGBColor[
                   0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], AbsoluteThickness[1.25], EdgeForm[
                   None]}, {}, InsetBox[
                   StyleBox[
                    RotationBox["\<\"E415G\"\>",
                    BoxRotation->0.],
                    StripOnInput->False,
                    LineOpacity->1,
                    FrontFaceOpacity->1,
                    BackFaceOpacity->1,
                    Opacity->1,
                    FontOpacity->1], 
                   Offset[{28.15685424949238, 6.9568542494923795}, \
{20.211739197255305, -7.698186872556418}], {0, 0}]}]}, {}}, {}}}, {{}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.011000000000000001`], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 StyleBox[
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.33333333333333337`],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                   GrayLevel[0.5],
                   Editable->False,
                   Selectable->False],
                  StripOnInput->False,
                  GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, Offset[
                 4]], CompressedData["
1:eJw1kmtIk1EcxqcTr9EsZ6VMX6dz6SapqaXl2qPT3bS8xIQCIQYRVlpBWu7D
GgpOSkOmZRqVgZVNFGRWpGVaTaOaFqWxgqwwAi9dTe2DlR/O/8D58Huf//O8
zzkcsfFI4X4+j8dLXdkeK9uTR+u70tRxgi/3lw6yD+Cn3fIKyJIw9oU7oCff
8SOKcSCSe30aTNmkC2HjVO3dn4g3oNnbJ4iLIxbhQH/SgqmY8iMwNlYaNXQn
knEkCo8qe0ZLSJdgbiC40mogvxR5Ku6sRxfHOAaNXW0hM4+JZXDN3X5iF5E/
DvyZ3vevUsm/CXHnQ3bPyogT0LK6/csZK50nEf1Su7PtKvFmZH6Q51aF0XwS
ig0q80A+5SdjY9Ped7X76P8pKF/j13qvj/xbsOe6/Kc1nPxboUkbCiyalzNO
ReO6iupHZTSfhkPOk+sLnJS/DZOdNaLoWbqf7QgTXzIEqkMYp+Nbb/nUtUrS
FXg+vGjlJsWMd0BV5dJ6r6J8JQ7OSW8uKygfmFL/mhBIWD8LoBFo/d+E0nwG
bE3TQV5/WZ4lA7tij1tHPpOeiULBYtlYHumZcCsunGppjWa6Cjfco8Nr69m8
RYWnJffvFtmpbxYqDgcsNcWSnoX46WdWsYH0bJR29vk+fMnYko0rCX4t48eo
vxqWr3UNrw0RTFdDprs8axPSfWtQm/4ndLiAzqeBra56KjGF+msRw3MET4xT
fy3+dXj+Nr4lXYduxzm9UUf9dFiIP8292Em6HvPNySMX+6mfHjVe4QOckPXh
5SBSObT0gN6vJQcyha/LHE39clFmXhbVf4wa/A+tbPaK
                "]]}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.011000000000000001`], AbsoluteThickness[
                1.6]}, {}}}, {{}, {}}}},
           AspectRatio->0.5,
           Axes->{False, False},
           AxesLabel->{None, None},
           AxesOrigin->{0, -11.512925464970229`},
           DisplayFunction->Identity,
           Epilog->InsetBox[
             BoxData[
              FormBox[
               TemplateBox[{
                 StyleBox["\"Background rate\"", 
                  GrayLevel[0], 12, FontFamily -> "Arial", StripOnInput -> 
                  False]}, "LineLegend", DisplayFunction -> (FormBox[
                  StyleBox[
                   StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                   FontFamily -> "Arial"}, Background -> Automatic, 
                   StripOnInput -> False], TraditionalForm]& ), 
                InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], "}"}], ",", 
                    RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True], 
               TraditionalForm]], 
             Scaled[{0.5, 0.85}]],
           Frame->{{True, True}, {True, True}},
           FrameLabel->{{
              FormBox[
              "\"Obs. - True BG Rate (\[Micro]M/s)\"", TraditionalForm], 
              None}, {
              FormBox["\"Chip Row Number\"", TraditionalForm], None}},
           FrameStyle->Directive[
             Thickness[0.002], 
             GrayLevel[0], FontSize -> 20, FontFamily -> "Arial"],
           FrameTicks->FrontEndValueCache[{{
               Charting`ScaledTicks[{Log, Exp}], 
               Charting`ScaledFrameTicks[{Log, Exp}]}, {
              Automatic, Automatic}}, {{{{-11.512925464970229`, 
                 FormBox[
                  TemplateBox[{"10", 
                    RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
                   SuperscriptBox], TraditionalForm], {0.01, 0.}, {
                  AbsoluteThickness[0.1]}}, {-9.210340371976182, 
                 FormBox[
                  TemplateBox[{"10", 
                    RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
                   SuperscriptBox], TraditionalForm], {0.01, 0.}, {
                  AbsoluteThickness[0.1]}}, {-6.907755278982137, 
                 FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
                  AbsoluteThickness[0.1]}}, {-4.605170185988091, 
                 FormBox[
                  TagBox[
                   InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
                 FormBox[
                  TagBox[
                   InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {0., 
                 FormBox["1", TraditionalForm], {0.01, 0.}, {
                  AbsoluteThickness[0.1]}}, {-10.819778284410283`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-10.41431317630212, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-10.126631103850338`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-9.903487552536127, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-9.721165995742174, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-9.567015315914915, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-9.433483923290392, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-9.315700887634009, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-8.517193191416238, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-8.111728083308073, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-7.824046010856292, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-7.600902459542082, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-7.418580902748128, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-7.264430222920869, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-7.013115794639964, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-6.214608098422191, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-5.809142990314028, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-5.521460917862246, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-5.298317366548036, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-5.115995809754082, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-4.961845129926823, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-4.710530701645918, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-3.912023005428146, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-3.506557897319982, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-2.995732273553991, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-2.659260036932778, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-0.916290731874155, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {0.6931471805599453, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {1.791759469228055, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {2.302585092994046, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}}, {{-11.512925464970229`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-9.210340371976182, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-6.907755278982137, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-4.605170185988091, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {0., 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-10.819778284410283`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-10.41431317630212, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-10.126631103850338`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-9.903487552536127, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-9.721165995742174, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-9.567015315914915, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-9.433483923290392, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-9.315700887634009, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-8.517193191416238, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-8.111728083308073, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-7.824046010856292, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-7.600902459542082, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-7.418580902748128, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-7.264430222920869, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-7.013115794639964, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-6.214608098422191, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-5.809142990314028, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-5.521460917862246, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-5.298317366548036, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-5.115995809754082, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-4.961845129926823, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-4.710530701645918, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-3.912023005428146, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-3.506557897319982, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-2.995732273553991, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-2.659260036932778, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-0.916290731874155, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {0.6931471805599453, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {1.791759469228055, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}, {2.302585092994046, 
                 FormBox[
                  TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                 0.}, {
                  AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
           GridLines->{None, None},
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->400,
           
           Method->{
            "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Exp[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Exp[#]& )[
                  Part[#, 2]]}& )}},
           
           PlotRange->
            NCache[{{0, 56}, {-Log[100000], 0}}, {{0, 
              56}, {-11.512925464970229`, 0}}],
           PlotRangeClipping->True,
           PlotRangePadding->{{0, 0}, {0, 0}},
           Ticks->{Automatic, 
             Charting`ScaledTicks[{Log, Exp}]}]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Column],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]], "\[SpanFromLeft]", 
     TagBox[GridBox[{
        {
         GraphicsBox[{{{{{}, {}, 
              TagBox[
               {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
                LineBox[CompressedData["
1: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
                 "]]},
               Annotation[#, "Charting`Private`Tag$1457120#1"]& ]}, {}}, {{}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.012833333333333334`], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 FormBox[
                  StyleBox[
                   GraphicsBox[
                    {EdgeForm[{GrayLevel[0], Thickness[0.125]}], FaceForm[{
                    GrayLevel[0.5], Opacity[0.7]}], DiskBox[{0, 0}], 
                    {Opacity[0.1]}}],
                   StripOnInput->False,
                   GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                  TraditionalForm], {0., 0.}, Automatic, Scaled[0.05]], {{{0.,
                 0.0468554617023598}}, {{92., 0.07496873872377569}}, {{184., 
                0.07496873872377569}}, {{273., 0.0468554617023598}}, {{363., 
                0.028113277021415882`}}, {{454., 0.01874218468094392}}, {{
                544., 0.01874218468094392}}, {{635., 0.01874218468094392}}, {{
                727., 0.00937109234047196}}, {{818., 0.}}, {{968., 
                0.01874218468094392}}, {{1268., 0.01874218468094392}}, {{
                1868., 0.0468554617023598}}, {{2768., 
                0.06559764638330373}}, {{3968., 0.08433983106424764}}, {{
                6368., 0.19679293914991117`}}, {{9968., 
                0.29987495489510274`}}, {{14768., 0.4872968017045419}}}]}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[
                1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
              TagBox[
               {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
                Dashing[{Small, Small}], LineBox[CompressedData["
1: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
                 "]]},
               
               Annotation[#, 
                "Charting`Private`Tag$1457204#1"]& ]}, {}}}, {{{{}, {}, 
              TagBox[
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVznk41Akcx3HJXW3E2FZCK2Ed7SrXg77fpVhGjVGWcu2WY1EYR5KkRbHS
yqqRM4xjhGWGGb9asyjEUOZXKHnSQSalbeRqtHnW/vF53n9+XtuORnkGy8rI
yOxf3f/1G2fUtjVbwx2LwcJGNN7zMnTe7F8BBd90eXSEGSvCikZSz4DAAN1T
vBfSjb6E7Ii/N/EElpisEW2uaGgIDzWf29QK9qEmjcn7brs1JMxIqCyBFx4l
1qYX6riAq3eiV5kgGJWmu0dOqXsDN9vhSakgHp8oZBm5fA6B9xEB9pyaC0ih
yb6aup0AvVrm1INDl5F7sjXEM/1XCDBdv8bMlokr9KjtXgsXwKasz1lVvRg9
hx0bznVlwzr1OfbZrjI8O3reZvOGXNiqyFiU3mShs/ZBT61XeZCbG9BbWV6N
Hh/9q++xmKBU9enMIe9a3Jsza1RhVADlYZnSTJd6NDMQ8fweF4FDa5fPbflG
zEk2j+HSSqF0v00pZawJs1LaxD/6lIH5ZoW4bA8uRsYe3bq7pBygxuQv+YZm
lDCiz+++WwEvv3AN6dzBw7f0hD6OXCXwvy99eKWAjzI+dOmQVRWss6Vyw+da
cc1YzWIkrRpmlSTzqeE3cYE5mZh4ugYOl8ywS3pv4Ybu4V9qs9ngqfKiY9mp
DdksE0VGUy2ccdxQFEUIUKNF3zqv7wYYQu7UlHo7OminHNPrrwOLLAWqh3MH
5h/PuLH3aT2oeUf7mi924B6uqn/S4wb4TXnR/VpFJ45fxHpf4Z/gxk6IZvnf
RmwrOPGsvxGoxlUDO9ffwaDBZ+oPfJvgKvP+Ef++O5jZPvx222gTJEyrCzXT
utDtVvcQl86BQh35GPq33ejWL3ttuZ0DCviBajbTjT0yZy1sLbnAdboYkFXU
g4mhddKkMi4smaJnrMtdjLOmXyxUbIbzsrMJn9f0YhXztRvEN8PBW/tHlJp6
Ue+KaC52tBnCA6pDeMf7UC6vd/MDpxbonLyxc0JbiJ80Th5WqWoBjkf/aHGf
ED88PpEbIsuDN2wxbym9HyMHhk6eC+bBsYlG4cNdA6icZpi23M4DA5U4Nfrs
ABqITTJGdfmQonnI9kjdPTwS4aHfn8QHLfnnBZM+91EyvV2nYpAPK89CTVUp
g9i1UU0r3qgVvi4pWmrrGsQtcopLjMRWeH99gTxtI0Jht1Wayt1WiAnd0im+
KsJxlckgu68IoOjlu1PeiXA9J1SiFkRATO3U5cJ/RDgxnrXRL5iA+xZWw7oS
EUYpua6rDiEgc9+w/zdzIuToFF+zDSNgOVw9CqQipMn3qARGEjDOy8kNkyex
Y+7EAdYpAtjUzBHBVhLH5S391S4RIDf8SMtJl0Qdn4xN3r8T8HOAYWCvHonK
KqzK4hwCtBg94gf6JJ7ysg80/IOAS0w5qdiYxOC1uuZ2+au+F+e2bLIi8RDt
9S6/8lVfuCgw35pE+5Vk/vUKAkzmdSu1bUm0M5qnTLAImFRoNzW0JzGVmxER
Vk2At+lnB3tHEmkrsYy4OgJaeO6pnU6rnleWY/x6AlShuMd5H4k7Bie2SRsI
ENLtaPQfSJyJUnZObiJgx1hW3ogriR8V0/XbOQSkBT155EslURwseSrTTMDz
d8baL9xJdF6mxTu2EGCfkPhTyIHVf8vK6TQeAf8BTVtPGw==
                 "]]},
               Annotation[#, "Charting`Private`Tag$1074504#1"]& ]}, {}}, {{}, {
              {RGBColor[
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02], 
               AbsoluteThickness[1.6], Opacity[0.5], 
               PointBox[{{0., 0.27224706443007674`}, {92., 
                0.27224706443007674`}, {184., 0.23821618137631717`}, {273., 
                0.2155289260071441}, {363., 0.22687255369173065`}, {454., 
                0.20418529832255758`}, {544., 0.1814980429533845}, {635., 
                0.15881078758421144`}, {727., 0.1361235322150384}, {818., 
                0.15881078758421144`}, {968., 0.170154415268798}, {1268., 
                0.11343627684586532`}, {1868., 0.11343627684586532`}, {2768., 
                0.07940539379210573}, {3968., 0.09074902147669225}, {6368., 
                0.07940539379210573}, {9968., 0.011343627684586521`}, {14768.,
                 0.}}]}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[
                0.5]}, {}}}, {{}, {}}}}, {{{{}, {}, 
              TagBox[
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVjmk41AkcgNODbFQyUY7UbouVI09y1fD7MV0ata4WMSPbYZk2zaRGstmo
Hmn2KTk6RhNyy2IYzDQz/qQxxmzmT2mrXUkyu62Kciyl1n54n/fL++H98vuE
4APz582bt3OO/x3Vz66Q1nuAv61wL/+Qs89g7LjTR5kp9uxmug1rDeHTspMK
tcwGDzeMjOhoLYHHkpuIZG4otayuznnpAL1mA54Vsi24jxWh89fgJuCOjNJv
yXajO9/Co/RPOviHndhdIDuAq0cSPrn0RoKQ5/1EIDuGy9JsDcLlLHjLYlLr
ys7hHynJ8U6SFFBaONNDHlxCqs+/effczwLT0UjHySsPk7o/v1Q9vgCeBZ1b
jSn56OxnHuVwMgsMKe/LT7UXoOs/1MXebTmwcgF7clp8C5MPm+ylbb4KWVlM
ZXFhKWYWnZLlVfLBoORDSmhYBUbljy2PVQugMC5jOmPbbXSpZ6jTKYXg3dQe
3qZXg9S+cTHtZhEIdnoKTJ/W4prT9GaedTE4r9BP5AUKMWXUZI2XuASgzOGO
XnU9cs0zPuS6lsHgYv+DrbYi7FW49KQqy6HRV9Cbc60R/Y5nDysCK8HQiy6M
f9+E45OXs2fFVTBmMDqeFi9GnwOvZtqo1RBxY6T8hlKCqkXpxlaFv0LwwufE
DE2KGcM/eVguqYUUv0X8hGYZ5o/UBlR11IIdZA0PU1rw3GX3wwJ2HazP1KcH
biWQIJwSk+yEsDTsSKTzJIF96vBdut1COP/FZMDVolacepQtdGHXw45y7pFb
jDZUnm/crLFuALp9iXqd0V2U5wixVt4AuXn39zA67+KhaYVHcZwIuH9TVGbp
7ciRXWbaLGmE69Z6nCCXe1hEGVUlljWCPr6jO43cw+YhXljsjiYQ0i4wM/kK
rDLzNmcPNMGUIwYf3daBRoWnP15jN8PZ+WPcWR0l5sbtl88YiSFEsrPPoFaJ
yzXNkkm+GOKZpQdFhzrxHUs/omeDBFqHKte9sFLhhNRt+8VWCdQFdj3O71Sh
tYZhUeN/B16Va0VTZ7qw2E23fdvTO7DvRY2q11WNHa7ZWRgjBZuFiUuDxtRY
WhJTzBiVQqpZqNeeqt+QF81JVSfLwEJv4NpQ+H1krqSXmc/I4NOzWEdj027c
cGbwd9s0OXx1gz8lbe/GB5x+t5DPcnh7c4JM9tTgmy4b+5CkFuDEWrZqczWo
Zpwbqp9uAdPVVwJMX2vwhc/Rq6GeBHAqhi9df6NBucN3vlFeBNxf7/5w1ehc
38t4vG8jARlbHjLWvtegvW5/H4dKwEw8JQGmNWhS1bDgEhLQL7qYFadHouDr
IN+O7QSU0zP6ZCtJbJidWGEfQYDuw0cWtFUk8ljSMuc9BMQw7aKVq0k0nJXa
bIgkwIKt0PasIRHdE976MAj4JU93WmtPom9NpTgkZu7v+c+WJu4kJplQ1ibH
zf3Fa6KveJAobOm6fSqeAIfxVcVWXiSKN3Zap7MIGNJvcbSjkqih5Wou/EhA
mOOsN9WPxCnaGVY+m4AGUUBaK43E2zrHfyjgEGAM+YqtW0iUP6sLLT5KgCpo
07dB20lsK1n4oeoYAbZPM7P7/Ek0GPxGVHOcgPT9Tx5F0kkM0mYz67kEDLy2
t3oeQKIkOmCqMYkAKvfE3oO7SAydCE6VnCDgP3znXgg=
                 "]]},
               Annotation[#, "Charting`Private`Tag$1086774#1"]& ]}, {}}, {{}, {
              {RGBColor[
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02], 
               AbsoluteThickness[1.6], Opacity[0.5], 
               PointBox[{{0., 0.27323476921899964`}, {92., 
                0.26381288062524105`}, {184., 0.26381288062524105`}, {273., 
                0.216703437656448}, {363., 0.19785966046893078`}, {454., 
                0.17901588328141357`}, {544., 0.16959399468765496`}, {635., 
                0.19785966046893078`}, {727., 0.16017210609389634`}, {818., 
                0.16017210609389634`}, {968., 0.17901588328141357`}, {1268., 
                0.16017210609389634`}, {1868., 0.16017210609389634`}, {2768., 
                0.12248455171886191`}, {3968., 0.09421888593758607}, {6368., 
                0.1130626631251033}, {9968., 0.028265665781275817`}, {14768., 
                0.}}]}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}}, {{}, {}}}}},
          AspectRatio->0.8,
          Axes->False,
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Epilog->InsetBox[
            BoxData[
             FormBox[
              StyleBox["\"500 \[Mu]M\"", 16, 
               GrayLevel[0], FontFamily -> "Arial", StripOnInput -> False], 
              TraditionalForm]], 
            Scaled[{0.18, 0.85}]],
          Frame->True,
          FrameLabel->{
            FormBox["\"Time (s)\"", TraditionalForm], 
            FormBox["\"Product (\[Mu]M)\"", TraditionalForm]},
          FrameStyle->Directive[18, 
            GrayLevel[0], FontFamily -> "Arial"],
          FrameTicks->FrontEndValueCache[{{Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
             Automatic, {{0., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-1., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {6., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {10000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {15000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-5000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-4000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-3000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-2000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-1000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {6000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {7000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {8000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {9000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {11000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {12000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {13000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {14000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {16000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {17000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {18000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {19000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {20000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}}}}],
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->{{75, 2}, {60, 8}},
          ImageSize->400,
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          PlotRange->{{0., 17721.599638334694`}, {-0.1525721230030934, 5.5}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 0}},
          Ticks->{Automatic, Automatic}], 
         GraphicsBox[{{{{{}, {}, 
              TagBox[
               {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
                LineBox[CompressedData["
1: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
fSSvfw65SqAtpb+tw5tEfpPMsucagX8DhDv8eQ==
                 "]]},
               Annotation[#, "Charting`Private`Tag$1457372#1"]& ]}, {}}, {{}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.012833333333333334`], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 FormBox[
                  StyleBox[
                   GraphicsBox[
                    {EdgeForm[{GrayLevel[0], Thickness[0.125]}], FaceForm[{
                    GrayLevel[0.5], Opacity[0.7]}], DiskBox[{0, 0}], 
                    {Opacity[0.1]}}],
                   StripOnInput->False,
                   GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                  TraditionalForm], {0., 0.}, Automatic, Scaled[0.05]], {{{0.,
                 0.}}, {{90., 0.07496873872377569}}, {{182., 
                0.10308201574519156`}}, {{272., 0.10308201574519156`}}, {{
                364., 0.09371092340471959}}, {{454., 0.08433983106424764}}, {{
                544., 0.09371092340471959}}, {{635., 
                0.10308201574519156`}}, {{725., 0.11245310808566351`}}, {{
                816., 0.08433983106424764}}, {{966., 0.09371092340471959}}, {{
                1266., 0.14993747744755137`}}, {{1866., 
                0.20616403149038312`}}, {{2766., 0.2905038625546308}}, {{
                3966., 0.4872968017045419}}, {{6366., 0.7871717565996447}}, {{
                9966., 1.1620154502185231`}}, {{14766., 
                1.7523942676682567`}}}]}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[
                1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
              TagBox[
               {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
                Dashing[{Small, Small}], LineBox[CompressedData["
1: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
                 "]]},
               
               Annotation[#, 
                "Charting`Private`Tag$1457456#1"]& ]}, {}}}, {{{{}, {}, 
              TagBox[
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
Vmxvl8w6F8ci/wfjPzOF
                 "]]},
               Annotation[#, "Charting`Private`Tag$1075546#1"]& ]}, {}}, {{}, {
              {RGBColor[
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02], 
               AbsoluteThickness[1.6], Opacity[0.5], 
               PointBox[{{0., 0.12477990453045185`}, {90., 
                0.10209264916127875`}, {182., 0.11343627684586532`}, {272., 
                0.11343627684586532`}, {364., 0.05671813842293266}, {454., 
                0.06806176610751918}, {544., 0.05671813842293266}, {635., 
                0.0794053937921057}, {725., 0.04537451073834614}, {816., 
                0.04537451073834614}, {966., 0.}, {1266., 0.}, {1866., 0.}, {
                2766., 0.011343627684586521`}, {3966., 
                0.011343627684586521`}, {6366., 0.05671813842293266}, {9966., 
                0.}, {14766., 0.022687255369173043`}}]}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[
                0.5]}, {}}}, {{}, {}}}}, {{{{}, {}, 
              TagBox[
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVzms01AkYBnAxtauLrAhtVqmIstKScntfZMgltqOkckmnSInNJV0chmlM
e3CmxcRGTQ2jmGmYPznsuN/GrZl/6nTQjUWYIWbZ1Sbt7If3POf34TnPuzU8
5shZdTU1NV/V/Z8lZ2XeUyI7sPg6SKvTs3AeP5dj61Cvh9l/vj12U/ENuEsb
pGvqd+DgfY9ffOX6kJD+YvO82BaXiw78s2vSDLKCQ90mxO6oXZ1wRnvMDgq6
i4+NiI9ifoVxz/RrDzCmeYS9E5/FENOw4Ke9gRD+2mDsjTgBUTPN6xQ/Arwc
G8wneAxcFXxhNC48CUzbV0/X97NwfEdnk4acBi81fVsj9rORlXhgZVpkBpSW
Cjbp6xTiqLb1Q337LKhJ83812cpBG12PWNLtNuwOGRj2quXi7vK1jI7vciGJ
GS0f4vBwla/IeaaJDQ063jlxxx5jXdbp9n17C4DdVfM5i8rHkdG0pYOddyHy
fbS6kCLElmrPyrwt90CTq09JHaxApc9MzBMrDpgp4MOknwiXik2pAaEPwHUs
0zCQT2CurDxjbdxDKInfyl9pWo2eFwavVORxIb7cwbk3/ynys5VazWXFgL9d
M2Yra3Czfhv3RUkJHF2/4vSD87Vo8EPfeocnPIhw5M8JO+uQUzhUwC0qhZav
90a+uoqR9bGsS7fgETCj9PsjaurRhm20YS7jMfjcrNLp12nEeM/QVcLQMrC8
6zPQ6N6E//Ksq+Uu5VDpTcruLDTh/Iew62pafJBLDSSfHzTjjUeCi9FSPhwy
pseoBbcgpU2DNlwgAF4HrYGxphUPsh7fmfF7AjsPcOsFklZ87aS/0LdOCGEp
GeKwtDak991f0dgkhDtGy+F5Vu243ZomoO+pgDlGfm2UvB15S5vEg+kV4OXZ
XtP8ewfe+Cgo9H9WAUFvqqqLqZ1IoYS22+pWQqaT5MzOFRLsZv9sUniqEhoW
omsthRIMKL1iMl9YCXpX7Rr7L3ShzbTVsOO7SjgfkHPx8/fdqG5Rd3vcUARx
GiJDoaQb6ZnbYyP9RfAweT5Rg96DLD3zCmumCGR+XdcH9vZiCye0wLRWBCbT
zXv8Z3sRk0KKXk2JwCIkeexIWR/GzppZuRgQYG3W4/Iq8Blmt36RcoCAk384
Hl7aIMVipVvUxggC6KWozm2V4r0TtbpTTAJEhMbQlJ0M2bST56ilBNh8WswM
yJMh9Vv3w5vaCaiOqtFJUcgw87Z9leZbAgLWMQ9RZmSou8ur9rLKSuHx1Fsf
Zbg6dmXGkMo/LnyazlHKMFfIuMF/RwAvxbHr0aIMj09NSr2HCWDnNqc8p5DI
gRHD1FECkhp6FDuMSJxlaHk2ThGw8XThtvIfSNxC9T23VU5AlUb0iT1bSFxr
meCbrvKsp5bEfhuJ8UbMRKqCgMh+f66fOYlLe2d/6p4mIGjiZdBVW1XfPzG4
c5aAxV95rOV9JGpftVxjOqfat7zSmb6fxPlLChpd5eeXDWyzHUhcjLzVjUoC
vL6c0Oa6kEjZliB5+hcBE/d3eex0IxFdOQ0b5glguC4lCw6SqLg2khyrcktG
kbzGg8TUN0Sg+QIBYRaXTJwOkdg2QL18U+XlXuegFi8SDXIXjw6rXBiznuXh
QyJzoVvd6W8C7HXed/T6qv4Zb0zKV/k/9IxoJQ==
                 "]]},
               Annotation[#, "Charting`Private`Tag$1087026#1"]& ]}, {}}, {{}, {
              {RGBColor[
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02], 
               AbsoluteThickness[1.6], Opacity[0.5], 
               PointBox[{{0., 0.1319064403126205}, {90., 
                0.1319064403126205}, {182., 0.0942188859375861}, {272., 
                0.11306266312510327`}, {364., 0.07537510875006886}, {454., 
                0.08479699734382745}, {544., 0.07537510875006886}, {635., 
                0.06595322015631022}, {725., 0.04710944296879305}, {816., 
                0.037687554375034404`}, {966., 0.037687554375034404`}, {1266.,
                 0.037687554375034404`}, {1866., 0.028265665781275817`}, {
                2766., 0.}, {3966., 0.04710944296879305}, {6366., 
                0.08479699734382745}, {9966., 0.037687554375034404`}, {14766.,
                 0.04710944296879305}}]}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}}, {{}, {}}}}},
          AspectRatio->0.8,
          Axes->False,
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Epilog->InsetBox[
            BoxData[
             FormBox[
              StyleBox["\"1000 \[Mu]M\"", 16, 
               GrayLevel[0], FontFamily -> "Arial", StripOnInput -> False], 
              TraditionalForm]], 
            Scaled[{0.18, 0.85}]],
          Frame->True,
          FrameLabel->{
            FormBox["\"Time (s)\"", TraditionalForm], 
            FormBox["\"Product (\[Mu]M)\"", TraditionalForm]},
          FrameStyle->Directive[18, 
            GrayLevel[0], FontFamily -> "Arial"],
          FrameTicks->FrontEndValueCache[{{Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
             Automatic, {{0., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-1., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {6., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {10000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {15000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-5000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-4000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-3000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-2000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-1000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {6000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {7000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {8000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {9000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {11000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {12000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {13000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {14000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {16000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {17000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {18000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {19000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {20000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}}}}],
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->{{75, 2}, {60, 8}},
          ImageSize->400,
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          PlotRange->{{0., 17719.199638383674`}, {-0.5105478504091223, 5.5}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 0}},
          Ticks->{Automatic, Automatic}]},
        {
         GraphicsBox[{{{{{}, {}, 
              TagBox[
               {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
                LineBox[CompressedData["
1:eJwVjXk8lHkAh92ZekvkqGzU6iQ1LY0U/b7IpEJSjUoiOVOhKELusiiqRYQ0
UVNJByL3Mc6ieVGTMtYnm1orOYp1b/vH83n+e55ljp7WzhJiYmKcn/zvwhTj
dyvy9MhRYb6hCStkq8OX5Q8OlylByYps2u1hRz7otRtpl60AO2D+kInqSXLD
PveyUtlGVLgmFGtGBJJzZzJyGWWmsGmccvb0jSEuU4m1kmX7ESXDa7tXnkw+
vFmf2b3IBlFyxUuXat4kVjn1odW+B6Ag/BIUHZ9KttiPG4Rr28K2w+uckvUt
EtWVczDU0gGlKj4SFRwuOWKsIBArc8YPraI7eT73yI2czrIBDxeY+SyYHFrA
I62LHz7qWuSKyTRvlyPPeMRs2CSmwtcNLZ8sxv/uu090Mn3ZIdoecHUpcBw8
mE2kwk90Blt6gZOYXh12+Ql5/9frfTOlvjifWFrPZOYTfnhOjRLvIk60ybQY
ufFJSg0ZT2uLx8mBz6trLjURbuk/t+L0E5GSFtadYdBKQlKFHbELUnE7TGfI
SfkdYdny5Rv4GTD/zd15Z1oHSfpQErKn6A5y911cfbOqiyxVFrIY3LvYwHm6
f4lWN2H2tw7ybe6j179Cj3n8E3n4wstPxiwbs7YrcmrbP5PsXwckzWUew2ST
+Zqv6r2kl2vm4fDhCRxfi3QyDvUR3XXuRSKrZxiSyzv/tqafGMlOzLF7lIs9
m/WKm8MHiGTHYRP1Vfmwr2QJh0sGSXvsbrWx5OdwUO2eZz8wRM7E5k60DRfg
9CXx2wpy30lV5Oey4eMvsNnMmJ7F/kHammIjFBuKoKD6w9bUbYSkykkw/baV
gGvcGMHnjhK/dbLBw4WlWGFo3vC78F+ikhos8FIsx/MdcEsaHSPPQ7vDb7Ar
IPaQk9WzfoJUd5Rn+I9UwFbtT4MLeyfJobtOcT3cSvCcFAdsvafIyxODA9/t
qpA942EUcG+apL9/vjeCqkZF9savH+tniLmp05r8hmqwhfGq7FAxRKi9F3iH
85FlZNdsqCqOJbei/B8za0DlO+a0PxDH1V/UE6701aDZ2t8ukS0BV6P+p/03
a5E8Vq8/KpRAXVtkxvvtdRAxvmkEuEhC3Flawk2iHoHbVorUxaWQllrqdPZJ
PTSiEqvdrkpBkbbbvPJkA1aOqPi3aEujL5slb7OkEcyTLbZd5dKwHBW+WNDY
iDyLY+byu2UQs/XoG+/Il/jjgDR1rFcGmtoaQ1a6rxB4ouvfAwGzkLmwKZQe
fIXyB6/yPBfKgneadIseNiHIOu7C/WeymOvTa+pxsBlGkjG+l4wZsDgdpJqi
9BpHO5O2XOxk4JvKjqEdNa8RXSVat8ZrNuYmnmqq2iSA5vzx9d+mZyM+fa3t
hkQBVkWtEnubPAfV4xfdHb4KoMW4MuWgSeHCaELep34BJFWsXXvWUtj8PXPm
+IAAouXKtMd6Cs++ViX4DgsQj/TMs7oUuF3TldFjAoyey9kVu5VCWO3ZxfnS
NGp6mpMLrCngmstLhhoNO74ca14Ahckrvspx6jT0WlpvXQ+iUBgTcVRxGQ35
riTGohAKzEjuqNpyGvwJdZFGJAV1v04NXU0amjrMCP04CtN2nMAjLBojt61a
nO5QKDrkXNetR0PwWNGgN4vCWRsfBXd9Gg9K32V58ij0W13jnTH4+W938D//
iEKnSXNblPHP/nzvpfEFFFIgUp+3jUa62sZopSIKHMO+49dNafitHRtOKaHQ
zJotnm5GQ8sstC6rkkK0ziJzjZ00pDmmG7T4FNjM1Um8XTQ6jzFuPqmlIKGt
91Hbgkahd5MUq4FC6Rq2dq4ljfjgq6eKX1L4D9MoidQ=
                 "]]},
               Annotation[#, "Charting`Private`Tag$1457873#1"]& ]}, {}}, {{}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.012833333333333334`], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 FormBox[
                  StyleBox[
                   GraphicsBox[
                    {EdgeForm[{GrayLevel[0], Thickness[0.125]}], FaceForm[{
                    GrayLevel[0.5], Opacity[0.7]}], DiskBox[{0, 0}], 
                    {Opacity[0.1]}}],
                   StripOnInput->False,
                   GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                  TraditionalForm], {0., 0.}, Automatic, Scaled[0.05]], {{{0.,
                 0.}}, {{91., 0.10308201574519157`}}, {{184., 
                0.13119529276660746`}}, {{275., 0.13119529276660746`}}, {{
                365., 0.15930856978802332`}}, {{456., 
                0.17805075446896726`}}, {{547., 0.1686796621284953}}, {{637., 
                0.1686796621284953}}, {{729., 0.17805075446896726`}}, {{819., 
                0.1686796621284953}}, {{969., 0.1686796621284953}}, {{1269., 
                0.243648400852271}}, {{1869., 0.31861713957604665`}}, {{2769.,
                 0.47792570936407}}, {{3969., 0.6747186485139812}}, {{6369., 
                1.190128727239939}}, {{9969., 1.9585582991586397`}}, {{14769.,
                 3.158058118739051}}}]}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[
                1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
              TagBox[
               {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
                Dashing[{Small, Small}], LineBox[CompressedData["
1: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
/TYknmtbKd7Fdq3cUYVS/d/+P/Z/xPI=
                 "]]},
               
               Annotation[#, 
                "Charting`Private`Tag$1457957#1"]& ]}, {}}}, {{{{}, {}, 
              TagBox[
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV13k8VdsXAHBDg4oGEZUMaTAnEUr2kqgkekVURL+Q8DLmqVeJkFJSiUjm
IhQHecg8u8O59+oWGSJJkSSUIvktf93P93PPXmft4ey9tsL/PA86CwkICIgI
CgjM/hbH72xbX6hLRsxOe338oG7o+Gldll2FJLgK1uRfdV9EOnTfGKlXrIfo
nuqg16dXk/sOBTclK3RALS/xI9tFlfzjm1ywoMIExnWb+gYctxOX6ZgG4Qpr
6Hzx4qm+9T5yfKc4V6DCGbjKd6YHdhwj7X0cq5nys9Ak8sjCZYk7qbvyrF4y
MwxGPmzesJzxL4mvJ5MP+VGQuNXJ55JdCEkt/5x0Sz8GxrWuHJIOu04uJ7R2
3lieAFGFPimXgqLI1mN1y5rrkiE6uixfxPsuie0ou/xXaRqEyCUJSIXFEPkV
rVsXpD4GUbsrIuAbRzSHX36rs3kCIDmoeVYqgWSXeAXM25MDySdMFEhnIslZ
OyJsPi8X7v8s0L/zNJkMpu5xd+zIA4vcoJcKnSlEW+N0adeBfCh+NzU3RTqN
GIlMLbJ/WgCT1zbe/amdToQ77YzlNj4HfoeqzAH7R+TNDUvZX3FFkPDJaO8B
v8fE90bBFH/sP4ieUNcZ+zuD1IR+rBhzKwFXfekWE+9MwmffCJFoLgXualo1
y/YJSVgipBmwqwy8jMUHundnkQANkcCx4nKwo96OKm/MJlIJgVwviUqQiVe4
ovclmxQFvb9y37QKov1freoqziG1nZXJ535UgYz9fOUnHk/J0cdOt/pTq2Hp
iFKu5fJnhOnxbWTcvgaq5KVWuZc/I4ntRYdCRGsh/XnmPzoHc4m5iZPy8+Za
+K3yPbDwUy4JkW3nel+pA+72yhctenlkTVL4uVzNeoB5Zw36ffPIbRm5e5FD
9SATnWPd9CyPnDIapoYfNICjvvHTzz15pJEfmty+uxHKeirvRItRRNB5rpCr
UBP4DdqmiupT5GFCuZN/XhNIDNCq3+0oIsGz37bh72bwOpnW3n6JIiHaJdP9
ns1QVvApzjKQImOxEtUZPs3AcqhfWoduOc7crRzQDLYp+9fnXKbIrSE9a7Ur
zdCT0joQEEyRhSISXlpxzWCuUNU7J4wiAoTxyLC+GYoFrNL6b1BkKGfrMps1
DPBIbWvnxVFkhdYb4YXyDHD9mpKqFU8R8t+/P8rWMkAp5sj6u+g71VUda5UY
kKmTcOzQA4rovTZ7PKzFAKvYzAhuAuY7c3x72B4G5ETkTJUnUWTNwavOz30Z
YHDgpbLzI4pYTLSWLGcwICFxavOHXIq4y5hqCbIZoLnuY+D2PIqEGxVmDXMY
EK6rcvE2uiYi6kHzKwZUBVWHGlAU2Sq/92LgOwYUj17kROZj/L2l8PknA/T+
Ddi97jn2Jz6hsWYjEwTCqzvESymyoGoh5KkwQUQzb6UDesOHgOKH6kxIWGQ2
PxvtuMn6ScAW/J997ZvRC4rwa8UiNAgTei4FC3mUUaRs6JJF/GF8/layNFVB
kQjDE6+8Q5nAz2JsnKmhiKkp/y/1cCaM+C/5aVCL42uxm/50nQl5AWnB59F+
9uqNDlEYP6q6YRx9/MKv4v0PMJ7WskX9dRTRKr2doEwxgbW5NfRFA0XadWpO
vutkwuVtNQe1GBSJ3qHTk9DNBPCY430KbWmSaWfbywS1A2/2JqDrrCKtOR+Z
4BdvrDqXSZFnvkd3l4+i11s/fYkOpkZV4kRYwDczzjvJpoiKuuLoAW0WdFoK
VVlyKdLGPzFuqssCtX+fDwSiwy4k/zDYxgJNac2aXHQvc82UErAg2ioscDGP
InFu0nMEzdE3BdWa0CKZYiuokywQ9Qm3UHtJkSJLc+kMFxbkvRp1tkE7TVxf
9fA0C3qsLdWC0VWmInLXPFkgfWig/jU64IOQ0ol/WSD/8rPaBT5FPq79qb/s
LguUNANZ/73C/jO2GsyPYQH3tRm/C73T56zh9H0WrNu0JUL4NUUSq0d3DiSy
wDbWaZ4F+rDjl33VWSxwyo/W6kY3POy1967BeOoXnUZbcT5MFBxP1bPAgHnQ
YXkbRdZ+cfiffRMLfsd7LtBGXzLoctlLsyDE45q7H1qno9VToZ0Fl2XDT31D
p0uzg3jfMF6usFHnG4qI9h4sKBlngUdbf+4E2i+7rS9lAtt7reOJt1Nkl2Hf
bp9pFpiPFavsQfednBJbvoANdm43t+Wi1+cqx1vJs0FTQpJzpoMikQG5TANF
NnBLmU6h6B9GOtPrNrBhvHvO0wfoBj44fldlg2iGiHUj2mXSZkOMLhtG1BKE
V3dS5LFJWH6rBRv6fq7tKkAvXiLaV/kXG6RD1BPq0f5ttyUzrdjQea1XrBVt
6v4wIOAoG7QFDy/4he6PKjRc6cKGtsuZjvpd+L0e3eYleJoNHjXmz/egixSr
UgbcMd+zuWU26LAi5pxSbzY0bSx974fe2NnLOHoR33dH5W42OuqR6++dl9mQ
oy5yqRj988ywuuoVzFe1eHU9uklwMmoqnA179sR5dqFdNy6zSYjG9pWPzi18
SxHuSEx4SCwbkjXtpiTQeqUypR7xbKj79nOTHFpkv9KaHclsuGDzldJCZ/qQ
913ZbJB3kFx5GP1MliEd/YwNmeFnntijCxhWFmYUG/jh1T+c0BVr3UqKitgw
JGff5IOuo8eHPUrYsKvqifk5dPP5wHWKZWwQMPt5MxDNb4m+dasa+6uatjsC
3X5Jrt6kjg2FN4SrotDdKlmTUw3Yv09/f7+H7nutrZnfjP3f1fcxHj0YXOns
ysL46a6xSegRDbMHshyc70XTwunoH+18Lp/HhvDANPVMtOCWwe1GrWzoeaBR
nIue1+3nPfEG14+51MoCtGjEzOOnnWyQWLlKtwgtrnu982Q3xpurL16Cln4v
Ib6qlw22K/yzXqBlbyXt5vaxwc/i5Uw5WnG7ysWwj2yoog6KV6GVPhbmGwyy
4bfxj3fVaI275NPoEI6fSNWZWrQ2Yax58hXnXzi/uA6t/9nqkMMoG9R06cp6
tGFsd7jkd1w/GStCGtC7jN0qmBNsSLe9ObcRbfZ1fCxoEtefufauWVs+CFTW
m2ZD2VUxmLXV7oUOwzOYr+jqX7Ptj45FR6cL0ZDXddxz1o5Jcoyjc2kQnWlP
nX2f876smaUiNNj63r47m4/bhLZO40IarHaEGM3m65VW6XZRjAYZx+c5s/3x
tzRL3rIUn3+74VUl+sIU/9WAOA09pe2ls+MRnOGwKFmSBrufLfaz43X10CAc
lqbBNW5ZRTH6xoyfv+hqGuqS73c8R9/JnsmuWUND8lK3onz0fZvr7wLkaSj+
fNVidr4ShSWlNinS4KQ9npaNTs9NMv+wnobfQ3lFGegnx1SCHyjR0CRVFZaG
LiwgX+ZrYD6sruOz66XUgbG2QpOG8GMjLrPrqXKRta3fFhrGnezVZtcb46Rb
bY8e9m/E4mvI7Pey5PvPmO34/rOtQ5fQr14Eauw3xHwv1mQEoHuW34srMaZB
T6bJ2h3dXynH8TSlQaKof8/s9/DZPWvOhr00yL/x/GU3ux5rKz3vWNDQVtV8
Zz9azG/QxP0Izoch/7Hq7HqsAkE7Oxq0a93KFdAzi2LLzB1o8HvFDJVCf0sz
3qLhTINSx4Sq0Gw+LxPkv3nRUDViSL/E752WG+t450uDl6u3byO60X1vbIs/
DUs7gxml6BLhH2KFF2jY9cU8Mhn9cIvllH849lel3sMVHRP4qOhUBA2d37em
HEHfYk5520bSILAx4aoZOuhk5if9aGw/ZOamina+K/j6dxLOv1PQ1QHc79TH
CvKC/8Pxb7mhaIPeQBZ6+JbS8KnBJcAYLRfhuNGpnIaE93aBm9DLFMUSTWrR
dRlp89DfD7pEiHBomHNyxoTC/bg8X9olsp8GftnXsQnc34v+nFEIHMDx8Ct3
70bnmtV3eg7hehDm3mtAp/R6H/prFOeLyxaIRoeKM0HiDw1RO321VNH7fS6u
jpfkQM6yxHn78HzpS25rt5XmQHpbe9wm9HnOlnip1RyoKjk/sBydqTYofU+e
A6KLhso78LwS+nh4RZQqB2Se0Ntd0UXHNJeFGXFA/v6Jm354HsqavJ/n8zcH
pM2VY47i+Vroa9ig6cXB/jSWbEXvS40L/erDgeJzC+PF0QEzlnP+DuBA59ur
Uc14XreUlAm6XuGAx7I4a210mEbMb/s4DvRsemc03UKRr1J7R/fWc6Bw0Jmy
w3oCXD/3TDbi8zYL9m9GRxXf5GQzOHBfTjNzLlrrSEuOGBfzPb/k4VMOnqfx
x07x2jngd3Rf0CRNkUmZM522I5h/wSmdcKxnhG7vfV8gxgV5ndwjvlgPqZTE
HxVdwoXwuecHCPrQu888p6VccOTP1RdFp2+OrJJcjpZ1lUpvpohJS8vDf6S5
cEH7Jo/bhPXncjvb7YpcaGqev0O2Edd7zBl2jR4X+vI1/oRj/aYZ+eiq3jYu
XM4YPbcHfTCs0+jZdi5oqjhkzUfH+JsVxRlyYWnaduVQrA9lbTYkee3iQvpb
06QL1bifSr/1kj3ABRFZxhn7Sjxf4/dLnD/FBX5TQk4/1qNRiWrHNsdwocdz
SlUa611BERepyFgu1OmvOMfAetjHO+nl4H0u2MXJhl5AH9olbp7+gAvm0zNv
urGeXjE4YSCVwgWPWwb/pD3D70WnVnY6mwteToeDZHMoksU60ttUjfktfv3u
/WOK1E6GnXb8gvEOye3MwXr+0sS9wg/D2P6JuJsxett4+ozbCBcKI24YtWP9
n/+l5t7ZMS4otcvOzEOn9vypvv6LCyNdC57b3cf9s8F/1fO5PNDefGzxr2ic
7zsuzAWyPMgbGLv2/SZFfkeeXXFLjgeicn8ygtHFESEnJBR4MKf7w9klaM3Q
1AnZdTwQeWOroIT3E7mAt4raKjzITJf+z/o6Rf7YH75wfCsPvPjHe1LwPlN6
1LnxvS4PihdfnVZG+9v4iZ/Wx3ibixlUKEWGD9zJ9DXggbQQnK0KochbY5of
vpMHkLR5UTvej+KhS27xLoz/fijTAX14x5DbXRMeOBU1/OgLwv1p60LBxD08
sG3rSR3G+9X1LSvNFc14IB+1QdAXbaqpFJu5jwcGGfeWTOB9TEhdt1d9Pw8K
eZr0eXS5sql6gQUPomsnDf7gfe7/x8NzCw==
                 "]]},
               Annotation[#, "Charting`Private`Tag$1076742#1"]& ]}, {}}, {{}, {
              {RGBColor[
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02], 
               AbsoluteThickness[1.6], Opacity[0.5], 
               PointBox[{{0., 0.14746715989962494`}, {91., 
                0.170154415268798}, {184., 0.12477990453045185`}, {275., 
                0.11343627684586532`}, {365., 0.15881078758421147`}, {456., 
                0.13612353221503837`}, {547., 0.11343627684586532`}, {637., 
                0.11343627684586532`}, {729., 0.07940539379210576}, {819., 
                0.045374510738346086`}, {969., 0.05671813842293272}, {1269., 
                0.06806176610751924}, {1869., 0.045374510738346086`}, {2769., 
                0.045374510738346086`}, {3969., 0.}, {6369., 
                0.06806176610751924}, {9969., 0.06806176610751924}, {14769., 
                0.022687255369173043`}}]}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[
                0.5]}, {}}}, {{}, {}}}}, {{{{}, {}, 
              TagBox[
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
pqw/zw==
                 "]]},
               Annotation[#, "Charting`Private`Tag$1088376#1"]& ]}, {}}, {{}, {
              {RGBColor[
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02], 
               AbsoluteThickness[1.6], Opacity[0.5], 
               PointBox[{{0., 0.15075021750013778`}, {91., 
                0.14132832890637914`}, {184., 0.13190644031262055`}, {275., 
                0.12248455171886191`}, {365., 0.12248455171886191`}, {456., 
                0.12248455171886191`}, {547., 0.11306266312510332`}, {637., 
                0.08479699734382751}, {729., 0.08479699734382751}, {819., 
                0.07537510875006886}, {969., 0.03768755437503446}, {1269., 
                0.04710944296879305}, {1869., 0.056531331562551634`}, {2769., 
                0.03768755437503446}, {3969., 0.018843777187517174`}, {6369., 
                0.08479699734382751}, {9969., 0.056531331562551634`}, {14769.,
                 0.}}]}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}}, {{}, {}}}}},
          AspectRatio->0.8,
          Axes->False,
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Epilog->InsetBox[
            BoxData[
             FormBox[
              StyleBox["\"1500 \[Mu]M\"", 16, 
               GrayLevel[0], FontFamily -> "Arial", StripOnInput -> False], 
              TraditionalForm]], 
            Scaled[{0.18, 0.85}]],
          Frame->True,
          FrameLabel->{
            FormBox["\"Time (s)\"", TraditionalForm], 
            FormBox["\"Product (\[Mu]M)\"", TraditionalForm]},
          FrameStyle->Directive[18, 
            GrayLevel[0], FontFamily -> "Arial"],
          FrameTicks->FrontEndValueCache[{{Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
             Automatic, {{0., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-1., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {6., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {10000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {15000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-5000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-4000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-3000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-2000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-1000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {6000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {7000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {8000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {9000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {11000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {12000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {13000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {14000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {16000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {17000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {18000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {19000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {20000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}}}}],
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->{{75, 2}, {60, 8}},
          ImageSize->400,
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          PlotRange->{{0., 17722.799638310204`}, {-0.7991774944956587, 5.5}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 0}},
          Ticks->{Automatic, Automatic}], 
         GraphicsBox[{{{{{}, {}, 
              TagBox[
               {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
                LineBox[CompressedData["
1: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
                 "]]},
               Annotation[#, "Charting`Private`Tag$1458374#1"]& ]}, {}}, {{}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.012833333333333334`], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 FormBox[
                  StyleBox[
                   GraphicsBox[
                    {EdgeForm[{GrayLevel[0], Thickness[0.125]}], FaceForm[{
                    GrayLevel[0.5], Opacity[0.7]}], DiskBox[{0, 0}], 
                    {Opacity[0.1]}}],
                   StripOnInput->False,
                   GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                  TraditionalForm], {0., 0.}, Automatic, Scaled[0.05]], {{{0.,
                 0.}}, {{91., 0.1499374774475514}}, {{181., 
                0.243648400852271}}, {{272., 0.2623905855332149}}, {{363., 
                0.2717616778736869}}, {{455., 0.3092460472355747}}, {{545., 
                0.31861713957604665`}}, {{636., 0.3654726012784065}}, {{727., 
                0.3748436936188784}}, {{820., 0.4123280629807663}}, {{970., 
                0.4498124323426541}}, {{1270., 0.5622655404283177}}, {{1870., 
                0.7684295719187009}}, {{2770., 1.1151599885161634`}}, {{3970.,
                 1.5837146055397615`}}, {{6370., 2.3334019927775183`}}, {{
                9970., 3.598499458741233}}, {{14770., 5.388378095771377}}}]}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[
                1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
              TagBox[
               {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
                Dashing[{Small, Small}], LineBox[CompressedData["
1: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
sK2L4SPvNi7+0Vn1/wBju/u0
                 "]]},
               
               Annotation[#, 
                "Charting`Private`Tag$1458458#1"]& ]}, {}}}, {{{{}, {}, 
              TagBox[
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV1nk8lOsXAPApRBKylKgorihJpeyek5CEyLVGUemnUKQkSVKEyFLWFGUb
2dcXF0lEGjPvlK20ulJJm6VC3N+ZP+Yzn+9n3s/7nHOe85xnVh88sddjPoPB
GMQP71vSQVIwrkqLmEWdKYws3WT4xtNOubFJGoyiFINctcVJrbNWY2zTX7BX
wqrvpJYCybVlCgU0bYUXpsX3nm7VIHK0m/qxJhNQeHx2fvFmIPaiBtsPN9mB
0XRJxgk1a3JqQ6G5e5MHPL1hKzon70b4DA5yDjSdBtn2nCIVQV+ScnPOKogZ
AS+jGRe450KJt69NwcfueOB3HsjQ0ogkH62eGI7pJENGTuQyl9g40pn6/uRC
qQxgcpL/p3jvOnHPTgqSbMsC9RuP5v3ZlELEy4QWFdRnQ6u/hK7hSDopTt+T
63M3D6yHfMYaT98mdlpFR7Y6FkDryNfOqZ4sUrbQ6dclsyLocNTOS4u4S5Ze
kyvtWVAKBysbF2iK5hDN347ahQNlMN3PSiwKyyVaxizGRpsKkJnaCDLC+YQc
7XSpKq4E8R7JzEAvJlld4Ktwfm01xCRF2JW+KiDTfYyjruk14GZ4/ICefiHp
fyNnQiYoEF/yU7H2TBGJn/8m8rBXHbTmVPRefFBMLOfU3K4+rof45BVXWj+V
kCEpxcxJ4wZYw9/+WVGsjJyU5Tt0pq4RIt9Nj1tmlRGBKZ/6aan7YOGsHL52
TTnROdvc8Na0Ge4e30sNM8uJ/0Gx4dafzXBbIGBacnUFUdnxjKuZ/QBEGDSd
l1BBzDd5+Znub4GXqZG7xwQqyberHS/6RR5Ch8yxdQt9KgljYuqXSOdDMGtx
3/Gut5LE2mb1sS61wkR8f/Fb7SqSIS9ycfGmNghO3Z20MK6KyEztfv1ttA0a
9spUdw5XkWXERsA24xF039aQOrqlmiQEP/m63awdIjtYx5LPVpPA9uUxT+d3
wN+F/p9JczUZDNkw/m9ZB+Qon9UXn60mdTukRVN8HsMKnXFtf50aInG6Zaxz
ZSdk6RykCr1ryIdbQ2nRnZ3QrMxMkkyvIardLyY+hz+BKrZK3XRbDfkSkLyc
rcmCiZ2zMb8+1ZCS6t8qrVosYFlun4kcqSHHJ5y163VZoGJdLCb7uYZ895N3
yAMWpLYIrtcbrSET3swbIRYs6Lgrpnb2aw2ZPlgvtvEwC3y3VjsNjdWQBXte
C8RfZ8GoZPbpMzM1ZNVa5TGbMRZ42qoaJSyiSKNOoobuJAuaXzKXCItQxMVi
7via3ywoYmhcDUOn+fV+HptlwdDX/cEnF1NEqiHi/fWFXRCz/bKDlRhFFtp8
6O9R6ALN45LjkxIUmQhi3nfa0wX069M0vyxFnrDXxboXdYH2vezi1WspsuJX
I3tZaRdEOgh6hqC95W3E2eVdoKaq1P8CLep75rou1QUM1YTniSoUsV7SmibZ
0gUvFXzd/1OlSK+ta15bXxeMzsxGdKpRZLA/7r4qHxvcZLS0VDdTZMs8xXlv
BdhQtiG5KBh9WbXGKFmIDfHtX/o46L+CXrbNF2XDR79r1qe3UMRTTpU1IIPP
T7MeN2hS5KtrS3+sOj5/aeqVgRZFpgcnfvxwYkO35L/pQvoUCd3nUD/owoas
B+FLnNCC3XVhzw6wQejc0U0FaKm2EMlqDzYwV855mxlQRD1faGugHxtWBN19
FmZIEXevFYFzkWwIFBd2/wAU6RjfMSdcy4YilfexJ0woYuWd92imng2peyI2
VaN7hoTiRhvZ8LajNmQaPdjTJc9+iPFRA9KXTSnyh3LYnsBhQ87tA1rXd1Jk
Y7DX5WUf2ECrxe+6s4siyfzXhZWWcqD7gnRDsCVF2IkregdlOFAb8KmsEi24
Ou/OHTkO3HAtdh5BBxrUacuv5oCZ7OIueyuKOAe8OSKrxoHUdR4b1PZQZNXH
9Q/FjTgQY2H4usOaInlPWs/N+nBARbxdtNOWIq+drHY2+HJAxu5K7i/0so99
Euf8OeDoE/hD6W+KRPJ/LvgdyIEOjUlmCPqYwZL+8UsceFmakKxuh/UqddUc
SePA2xa546H2FKlO/Dna28aBrM03V4w6UoQ1EfXhSgcHFKJy88WcsB72Kwe1
n3BA6ajQ581oUTnjvnSaAxZub9ID0Z7ZCQ/2D3Agx0Mwk+GM/Velljz8HeP1
/6TLt48im5c2x6eMc6DohJvFGvSuQNurZj/R+6yWbkcH6AeF3pvhwPf05Gfn
0Z6Dh7Zq8dGQ+nzxxDj6wbFy+ZnFNJyyA/ZTF4xPbibDVgx/Zwh7fkH3s4xl
i8RpuDzpWS/oiv2l3i/lKklDjM3XSD207PjcwvsyNPx5t7srE33qnMVEmCIN
8bXTE877KXJBLdlvQAnf7/RHxg8d/erN1y3KNMgklk9GoO8Q/09DKjQwXQyf
l6PZfOmvTdVpAJulu/gPUGRtzIcOYR0aRA79r+sm2up9alSoLg36QkPTJehT
hubmP/VoCPRI6X6Abv5e9OSdIQ0Z3wpjhtGOdifZtcY0dLM5YmpuFAkpUYxT
N6WBbjHJ1EfnCPbsydlJg8o/AgMW6O91Wtw4c1xvv4+DNzpy1eyzI9Y08I+s
OpyPLjlTcuOlDQ2MUBX7anQ3fcBury0NZgfjJlrQCpdaeg3saWCVhGx7ha79
cOW5lAsNkX3KnMXu2F+gkx7tiuvDfqXlaP70EWfGARqCdRcoK6GtLSxffnan
4XtIuboO+lOZxJuW/6FLau0OoMWFWzO1j9IwMUOJeqK3HTrtVnKMhgYZvVO+
6DDp/ndpPjS8des1DkUzj0fdFTtBg9q+8dIraHa77qFwX6zHw1vt19CyQbeG
fP1xP87n/LmJhmdWucOnaLiRISB7F31EjXHEJYAGi/bZf/PRMeHlyk/P0FB7
OM65GF3x+uCHnWcxn4GG8xXofi0pZmMQ9sf1SEsKPRff5rklGOs3PvH4H7TS
SIBqwXnMx41//D7afIfKyKoLWH/juo6HaN+M5/duhGK/8S3d3Y5Onoz2Eg6j
oVlgZVAnusFKXy30Eg2O5bRdF3ow/8vo5GXMx3vLaw5aaF5msVcE9uPtnZJP
0erO1sffXaHhY7HY5DP035XzNjpE0aDAuHapBx0kUvmNFU3jPG5t6kVneRwu
M4rB9QWpvD70oyZpv9pYfD7qiF4/enRZ+yb1OBr6h3uCeZbwCxzLjqchJ0LQ
i2ftTtXK5YnYf+xZAZ73Kw74x13H/Vf6x5L3vsvBMZoCSTS4fd1uxFuvsMdg
MiiZhqGEG/92o+/VhVF9KVivKzY2vHjv3Wo/q5mG+X/KDOCiCy6K6Cek0xBa
dNGWly/Tw2buy00aWh/8/sBC5+9Kbja/RYPSCkFNXr3yNgyE5d/m5V+ixatn
7hIFE/4srN/RH2O8eudMHhZ0v0PDb+B6NKOznxc8bryL/atsHd+Avtv49aps
DvbPYt+Ttbz6hAeKd+fh/mWnu5aiM482PtVgYv7aBUfuoW9bzk+KLcD4k93W
5qIzpGOW7yzC9U9yOWnom1P0QHYxnpfea9R1dPor6duMUtyvx3/sY9GpuZlr
6stpsFYda7iATokaGlpaSYNv4PlLgbx+8FHN969Cr3owzw+dtLVy/QYKz+u2
s3+5o28s//0lqhbrE/2j05HnWf2y4TrMb0ZVxRqd2PZIM6uBBpeZwYWG6Gt2
LwwkW2iQ4hQeW4qO1ZFn+D7E+p3Yx17E6/eVh1tYrdjv1S8+MdDR77+YRrTT
4D29x2wEz3fE6XnWUyzs/7rd2XXocCdTCXs27sdwSVsR+rLB1e4KDp4n+JGZ
iQ4TkHbyforzykAu+DL6QpLKwTd9GB9T95k5bz6d9VHSf46O7qrS49m1Yjj1
BQ3GK/dY8eZX8F/6Xntf4XmVVC4QQQdW7znVNojnM8Jp7jHOO9+egIjCL9jP
JyNVtNBXTUz6Nb7hfm5eY7AanVctua7mO8ZbLPVbGP0qqayreRzzSRN1f4Xz
19x+RKp3Cvvtzp3/zqOV+lyzGQu44Lgo068E5zvZqTYZLsgFfUfBL4loZ2ra
dNFCLjCOjoueQSekpIxIi3ChKMnd1BA958DdtF6CC75/v7vUgfdJX79xs90q
Lmh8btdj4f0zZiYpMSDPBYXmEoVCtGjdu0Nuq7lgbWVcFIU2TgsR9FLigrhN
BGWCLnOqtQpdx4XvC8pv1+F9GP1i/at727jwkTlVHo/3Za75tLqGNhe0Oxfz
HUM313eEVutwoSNiZtoI/SvdQ6lZnwupV46/Gcf7+PC+TK8eIy7QN2eDbNAX
nvg0OhtjPDGqfCrodD19sbcmGP9F481zDhThyj2vGDHD+NT3hhegR6/m8/ua
c8GNmBeEoIX+nLaf3I3PC+mfskUrehszgywx/m3rhteiDV9KTP9nheudWvbf
DP4/+D/O2f94
                 "]]},
               Annotation[#, "Charting`Private`Tag$1076994#1"]& ]}, {}}, {{}, {
              {RGBColor[
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02], 
               AbsoluteThickness[1.6], Opacity[0.5], 
               PointBox[{{0., 0.09074902147669228}, {91., 
                0.045374510738346197`}, {181., 0.07940539379210576}, {272., 
                0.05671813842293272}, {363., 0.045374510738346197`}, {455., 
                0.045374510738346197`}, {545., 0.07940539379210576}, {636., 
                0.05671813842293272}, {727., 0.034030883053759675`}, {820., 
                0.011343627684586521`}, {970., 0.}, {1270., 
                0.011343627684586521`}, {1870., 0.022687255369173154`}, {
                2770., 0.1020926491612788}, {3970., 0.1020926491612788}, {
                6370., 0.045374510738346197`}, {9970., 
                0.022687255369173154`}, {14770., 0.09074902147669228}}]}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[
                0.5]}, {}}}, {{}, {}}}}, {{{{}, {}, 
              TagBox[
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVzXk41Akcx/FJtya1TDWZZ4uNylFRzmV8v2pGlodlNS3F5qqtNK3VhZXV
k451tHaTJkumRcg1yTjGz5hEw4xjfnIMqSSqlS5mHNPW7vTH53k/r78+xqE/
fbdfh0KheGn3uQbfGyz8vdIetup5PVTHb3V5cpCzvl68AnnhZJdoajnU7LGv
TxWbIkWvJmNUbQT5foWLToptsWL7irwolRUwFMGbD4vZSFV/yCl8j7Bbj+ka
LuagQ9KzOevGfeD4pmKPEPF+7OiNHzJ6GgxzmaGd+8Qn0HDVxYaN8ki4+tcn
79jC82j0C31XgvcZOBLpW/SyOw3XDweKDaN+g5fecpcJxwyc0meajvHTQMYb
jVpMy0LdQfaHa83pEJJ7JdagmY+8UzmftqTyYLlg0ZIiUS4qs49Rs1OzoDTz
23zu3zfx6+MJuRes+cCxLzlg61+EB74YfXf63Q0QLA6YPuteguZ5ZzUxrbmw
8hKjvGdBOVJnohuMo/PBZsbfofihACUFSyLNaAVgz2qjbPGtwMNKJvWVtBDg
kCywsvQOpisIO43fLTAuijQ6vUGINCHXfEhdDJo+yqGgzCrMyza9X5BYCson
DDaoqtGHs40d8qYM0nSeXAyPqEVD231Lem0F4PXJMji5VYSD5VL1jWEBjNDW
5ahZBBpuT+j25N2GKMO5Yadq67EsNjGWyq6A+bNckYbWgMO8LWLnpxXgGCMh
htwkOOHMuWp17g4cC132vGlKginVdhTm6krYuOMBaZN7F7uEjdYV+ZXgYR3x
s9sPjRiqa3B50EEIb5NbBpTUe5jm9Pwjp14IFNXsNFV2Dy3dfPxv7qyCVD9+
X9vZJmwbO15mKquCrLXUM0utm1ERUXrdAqqBPuv5+O241two+seaalgFvvP9
su4jtb+erjatgT/i5G9c3aWYDkcXB6bUQLR0dUqXTgvOSzkac2mqBobjN00+
E7SgDf+N31JOLdTuWKF3lduKR6T2TueqakH/ROOE7EsZvhxg7RyliuBF9si1
JJkM6W72Xa5BIjDrHlC9OifHEUKQe71cBK9PZqzusGlDftScO3NmRLBmw/oJ
34k2zMr6J4XnWgfyDvPUkJJ2pPcypqcS60AzrHr/PqAD6XFOt2Ib6iBj3mVd
k5WdqEr+ytZZUwfCP6fGe5s7Mc4tKbTKkoANKS9adB0V2B1k8XrNHgKKe5jq
2AwFBk5advefJyCy5+T54tcKPLjKWj+whIBkNltp9VaByo1SX43WN4UG5lXv
FJguj0FeKQGPrgjaJZMKbBtlWjwoI8Bj9xitd1aBce5n7Ni3CTDpC8qlLCBx
V9ykqWEVAX1KloSzhsTuldHRFxoImHA30H+4lsSmal0+Q0KAXu3TsGBjEp3b
dU6Va826Fr8wwoREd67ltt67BAgCarwTzEn0McsfWdtEQNKAxaNbdiQmZpht
zmshIN9Ds9nKgcR0OxOvba0ESEQtCUJHEln5hYxGracz95tInElU6vhLH8sI
CN+bE9GzncQUz7QAWjsBv8q59XtYJM6M09V8rTOdnJcNsbX/iUzc1EEAyeiv
GHMnMa0gbJTVScB4csG8SA8SS4hDoNB60b8ndqs9SVT1077ZqyBg3RFWYawX
iSM7ftR5rrXLoL7mP28Sh1zCIiJJAv4HJjBigQ==
                 "]]},
               Annotation[#, "Charting`Private`Tag$1088629#1"]& ]}, {}}, {{}, {
              {RGBColor[
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02], 
               AbsoluteThickness[1.6], Opacity[0.5], 
               PointBox[{{0., 0.0847969973438274}, {91., 
                0.04710944296879305}, {181., 0.07537510875006881}, {272., 
                0.03768755437503435}, {363., 0.03768755437503435}, {455., 
                0.04710944296879305}, {545., 0.018843777187517174`}, {636., 
                0.03768755437503435}, {727., 0.03768755437503435}, {820., 
                0.02826566578127576}, {970., 0.}, {1270., 
                0.009421888593758587}, {1870., 0.018843777187517174`}, {2770.,
                 0.0847969973438274}, {3970., 0.10364077453134468`}, {6370., 
                0.03768755437503435}, {9970., 0.02826566578127576}, {14770., 
                0.12248455171886186`}}]}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}}, {{}, {}}}}},
          AspectRatio->0.8,
          Axes->False,
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Epilog->InsetBox[
            BoxData[
             FormBox[
              StyleBox["\"2000 \[Mu]M\"", 16, 
               GrayLevel[0], FontFamily -> "Arial", StripOnInput -> False], 
              TraditionalForm]], 
            Scaled[{0.18, 0.85}]],
          Frame->True,
          FrameLabel->{
            FormBox["\"Time (s)\"", TraditionalForm], 
            FormBox["\"Product (\[Mu]M)\"", TraditionalForm]},
          FrameStyle->Directive[18, 
            GrayLevel[0], FontFamily -> "Arial"],
          FrameTicks->FrontEndValueCache[{{Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
             Automatic, {{0., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {6., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-2., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-1.5, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-1., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.5, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.5, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.5, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.5, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.5, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.5, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.5, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {6.5, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {7., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {7.5, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {8., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {10000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {15000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-5000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-4000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-3000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-2000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-1000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {6000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {7000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {8000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {9000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {11000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {12000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {13000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {14000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {16000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {17000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {18000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {19000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {20000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}}}}],
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->{{75, 2}, {60, 8}},
          ImageSize->400,
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          
          PlotRange->{{0., 17723.999638285713`}, {-1.3277071024982772`, 
           7.613758112387062}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 0}},
          Ticks->{Automatic, Automatic}]},
        {
         GraphicsBox[{{{{{}, {}, 
              TagBox[
               {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
                LineBox[CompressedData["
1:eJwVzXk41AkYwHHGtIWux3ZoS6it5Fgdi8rxvsg1SE+P1CiTIzmWPNFBLQqh
XZVdIWWLdW2FGYadHcc4JmMwduZnWIkuNTWMY0w/myK2/eP7fP78GgZGHQqm
qKmpeX7pf0uCJe6j1VZAKFZSnCnH7d6eyrKwblyNYU1mvfSqveAk5om1G7dg
SUKh2LDKDc4l924gGyxwp+ax7kVVdLjud8JR3uCE05ZWog+sMMjrLPYZbjiM
/ceLu5SsONC/4uL/oiEY4+rp7uOsaxA4pCt71nAOS4J2/6xg5QHNhrddXpqK
gx/T1qe2PYStbVrjjdJMdDROMDB5zYY+TU9+yJ4cpK021B53qIOysopv1urk
46Glcz4JOc3ASTrYP8IvQN81bhvOS/hgyhh4ReMW4XVTVuMtr3aITY9UDBaU
Ym2htrs/rxN4Ou5ZMT4P0PK+q2i9qhtyOjiz153LMbpXvCqxVgKhLyMpTCoT
z+lF2IZ694Bm0Vrq5acsJLMpQ9sUUtg2Bu9GvKoxfVWp/GJxHzjIMtYdKWcj
7ci+SSfsh5KzhuWLttaiQcFgUPH8Ezj7yNpOdPtPPKN74cBAzVPAXy/q56g4
OOGtsTvVcwgOr1APKAzjYlJu/lXBkucQYlM+xWyvQ8d7W3sSSl9A68K94QWH
BszoYzgHs19CevhaaQinEWtiyhjnb74Cj6s1OlKdJiRj5DH848NgdtdjoMmp
Ge0+mKOv9WuocickudPNeG8oStNM+w0oxLrC2cIWrB8oX6b45w246adEqfm1
4jBdKVSxZVAquMJL1eajgY3pFcukt2C0t6ixQsjH8MLTSn7AO/BPTGvwT3qM
0Rsr79jYyiFXbz4w27wNMz/L7Kc0R2Aq9TY3XNGGnBPfFky+GwGaaxun5Y4A
/918bHY7ZxToz2pqi53bUbVw4xevJAVk2AqDjNSFOMPoeM5jjAFvOpJrxhTi
GoM5o3DTcVgdZ9Uk/aED4aSF8QntCQjzzoqYXd+J8VohRpmDExCjUb2OKezE
WGF2QHnZJPweT57XSOnC5hSZ0TUHJUi8Oi4N7BKhl8+P+k8fKGHTeMuOg0oR
BoXlTInXTYExI1526GE3Hl5iHlCfNgU7t3XZ9x/5G72fOIr3T0zBsXqbA3Nf
i7F/ZFA3xk8FKWVIKeKLMdhU6Q9tKqhmawyOWklQ+inJWd3kPXz/cSbDO1uC
Aq28xaF576E2nKOTOCbBx+4m7RFqJHgvS3ejTkjQ+ZFAsIdCgop59PK1SQm2
awUKqFQSvpv+OJ6lkqCw43Zb/mISShNtOv6YkaDI5avHouUk5NxqSeyhEih1
fNVsqkdCLK9rbIsega+tc+vG9pKwJiB/86ONBJ68u6vuL2sSajQifXcYECj7
1M1NsSVB6bpcuG8zgW+5VO4GexJCpQeLvLYTOGoVzfFwJYEu76PHWRCo2u1Z
U+5DwsxPpZnzlgSezZKzY49++ZtdaE/eQ+C0Kpm935eEnmhdixvWBH6oqqse
8iOB9tl3ZZE9gZ/MjaqWBpMgv2/iYuRI4KWbfNaTUySkOszFV+wncG6CwSoO
JaE17TcFx4XA+Ypspk0ECf7GpzfZuhGYuGwnc8lpEuZFdvRWGoELEaLK3igS
8qNWZLp4EHhZFFJZcIaEfTovBSJPAtVNNSojYkj4D+XSdf4=
                 "]]},
               Annotation[#, "Charting`Private`Tag$1458626#1"]& ]}, {}}, {{}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.012833333333333334`], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 FormBox[
                  StyleBox[
                   GraphicsBox[
                    {EdgeForm[{GrayLevel[0], Thickness[0.125]}], FaceForm[{
                    GrayLevel[0.5], Opacity[0.7]}], DiskBox[{0, 0}], 
                    {Opacity[0.1]}}],
                   StripOnInput->False,
                   GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                  TraditionalForm], {0., 0.}, Automatic, Scaled[0.05]], {{{0.,
                 0.}}, {{91., 0.05622655404283183}}, {{181., 
                0.07496873872377574}}, {{272., 0.06559764638330379}}, {{362., 
                0.06559764638330379}}, {{452., 0.06559764638330379}}, {{543., 
                0.04685546170235988}}, {{633., 0.037484369361887926`}}, {{
                725., 0.028113277021415972`}}, {{816., 
                0.028113277021415972`}}, {{966., 0.01874218468094402}}, {{
                1266., 0.04685546170235988}}, {{1866., 
                0.09371092340471965}}, {{2766., 0.14993747744755137`}}, {{
                3966., 0.2623905855332149}}, {{6366., 
                0.43107024766171026`}}, {{9966., 0.7028319255353971}}, {{
                14766., 1.1151599885161634`}}}]}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.012833333333333334`], AbsoluteThickness[
                1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
              TagBox[
               {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
                Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxFy3k41HkcB3BH1rWtYysUTZRr6FnZ5JovH4nkjpg8joZhZtxh3I8jY3VR
OUOxrPtadx7tDIswjnVET0laJblSiQ4RO9U+v/nj/bzfrz/e8h6Bdl58PDw8
fpx87RKvEYvFBm1DztQlZpgQXlLStfRZuyF+vLBR3vogMhluGxZlKUJ5Q5VY
47gmCmWMy64xtWA+WET10bIRcpOw0VZT14eml8LPRKZNUPHwC5V6KwBxW5Wx
ioJTKMX1nPE80wTMK4XKPS1sUULx7REG3QwCLu9voMyfRmFLE644dQvorzOZ
OBhkj+oIeEKVlS3g7nTeZp1yRPhpNl9kxWlIdysrDb5FRMUMap+pgD3ovts5
mfHkLMrpL3Z8znSAombNIKKGM9oVYCxXJ02Eo0ZS+6NOuKBrEs9nYuhnYXHO
OEnMwhUlnMUFyag7gxxBUOdXzXNoc4OlPXfRBQx87Gu3hEko/HeXraYZV8hn
tJCdQkno2OqgSbkVCVp6HzQlENzR6glZ1esbJEDW1fT72e6oLsv3x7AKd1hJ
uhqY+9Yd4fVExowFyKCsKvQxJN0DzV11uoNvJMOOQvt9b556oOKp8hwJd09I
cot+3axERrgLJ0n/Mr0gdvjNhadVZPTkfpZxjw8FdkX45WQtkFHuoZdKNdJU
wOHkTU8e8kS72InLUXQaEO2cW1VSPdGozPiIu4I3HCEpyRR0eaJrvgebzEa8
wUcvOiBv1RMJiXVG7VH3BbMSs8ViSy/UTZJw+zLhC2Gqk/3zoV4ooYFk9OKi
H2il5ugp5XmhLw7bgg0z/pBG/Wj1btYL3S2zXspODQBVBWvFOkEKiljPG4oz
DASl6McSPcoUFGmd319qdR6mBDZcLMkUdKxguSZl4zywFOsqcTkUtLZCSKVX
BAE7YbJqoI+C6o2T6c7EYJCVDa4fek9BAZmTxOMCIWC0z2YtV46K1Obw+qqN
IWAfXsS6aURF8zpR+8Xd6aDA5A9R8KCikit9vB9/CoX6goFL1+OoyOOJ9OwU
MxTwMZauarlUpLhnW3RZKxwuOzwTPD/A+dvMam7+GQH4Nb7PoqtUVH15wElU
JQryh19/npGkocCu+vi9hdGw6nSuN0adhj4cix3SSY+FKyLipfmnacjAQfFa
VWc8dBR0r+d509A99spkXxMDPllmbCoxaMic0KY6X5oEC0MaI6MpNGQxs8Cr
qZwMc4Ykg/V0GlLqFllmjd2A9gNds4czaUh3iJxhu3ADTBl5149wbPmQqT+z
dQNyNdmiWhwHLQRcEcKnQknNBEOfY+bOMWX7+FSw026sNOXYzvGWx7x6GlSV
aJwkchw7p/ZIMikdwvVqZrw5fiBs1UXVyQKcgN0PYRyXldXslZK8DWlhCbyR
HLck2D5c6CqAo1UHZL5a3W3imXlrEXzoF9/71RGX/JcmC0rBZEPqm9skLdJD
HCsgX0v6m7P6WjZSTKthS/u7adP+fLU7akFc57uFi6R2xD+uA4n/rfzKcG7B
pgHz8dlkGWJ1I+YSuny1gFIzZnqVvsFg9h3MkBaFy3rXgtlBjNe90LsVM5VQ
vVLbexdz53b+8+3jTMyXfKTGqC0szJa/NUmOSbZjPnzLcqLd5G/M9RajIzff
c700LM3eKOzAfAqXGMjj2om5tOdCW5JoF2YV3SJWDZtrUtxFJinhHuabclse
mb90Y15Jym71WeLa3Ky7pSO3B7PTVFNzsWkv5mTEJqvwsjG3vfdvPVzL9e5I
7fYx3z7M3mfS/Tb29WMO4W+QqWVz/UfMWhh/4gDmEZu+6AnNQcwKyx0atm+5
xrvFzNpV/oP5iPKA0UPiEGbnvwjWmz8PY04sA76iLq4bGvknF7VHMB9d/5R8
JpPrZp8WybhXXEe0DbxSlBvFrCc53TNoxfV/82bpQQ==
                 "]]},
               
               Annotation[#, 
                "Charting`Private`Tag$1458710#1"]& ]}, {}}}, {{{{}, {}, 
              TagBox[
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVjXs00wscwMXuI5Raiuo24ZQluuomCvt+U5KZOKVEN1dumVbiVEpKqIVS
clNaRR4b85ifiLvjmq1tHvMo+xk5aLfHucozEfdMVLf7x+d8/vt8LEMjdx/R
19PT8/nG/y44ovYeqnSCH4w3Z97g0hhvwzIcXeoWI8fupaPy8wzDo13ablS3
CnVfUy/UzxpB9OXOnyYljigb/JhnNbMcbhz8bduAxAPzn9tpjXVr4V6LYN8b
yV5cNMrS6sZdwCLRM+Sl5Aiy/u1+93e/N4S+MO/XSqJxUOtjWvv0ADBdpWsG
CpOQRwtfIVMch9UNhqN1mnRsskkvGnOKhq65Pkq2cybWv5Kw/+g8D0Jh2TIz
ahZOm54PdjqVCOJLft2DylwUyJi3kx9zwS645zWzho9F3AVMpl0KxKREDPfl
FmLZyLaVqcmpIKV6Z5zaV4xv5zC6MDsNMpvFMzd2iPDFjEEQezIdwl9F6JdT
ylFmZ9G7IeYWzOWbURJ6H6HCP0ZDvs8AmxF4N+hbiVt9rLbT4u+Ae//1pQGi
x9i7Slv6+n0mFJy2FH23uhpJ+bps1lkenC51YbTx/sSA8Ioor4l7gLdiLTIn
xOh8c3K/w64HsNdkzqG8ozW4kRiP5MqzgO0qGi9v+gsl1H7rxCUPQfH14Zuv
7hJkeDF/GU3MgRSOmYYtrsOJAwmU3VG5wLpSRdVQZUiPftrpuDAP7B+wemQe
T5D1cbVJjSQPKrxJ9d2pJygMldEtg/JhuN1cNZMnx/tO1SXvxvPBy4IbqXdQ
gYc/hX6qzeBDYWOiNMlIics2pvJodAHQN/PrylRKnH/mrK9ZowBC4pMlIZfq
seKzYapfcAHcXfEl9M7PDbi+3VwjHyyA8SReDWe4AS2VFTc3XywE5s4Gsfx+
I16s18bj90II1FZVC3Y0IWfgwp5NV4Vw3U31O32OCuMGoqDYtAikUxE19uUq
dJOHLvS+XQSLzznJNMeacUjbZjK9vBiO+mccn1negmFZ7vdtecVwyqByabmq
BRXHCvp5JiWQHzd5xoDbiqZb7J3T0kpA7dt8vmdDG/aajtLz9UvBalTu4Peh
Dednp5e0x5WCbXBc/+6Sp/hJnyKiTZbCepvWrd0Bz1A0LyLPJkQEB2pdd80u
akfjnIDOxg4RcIWoz1e2IyfKWhrpUgaVjw36hpzU+HxYLenJKYON07rr/nfU
uLIKDv9qSEA1R0yNH1FjPjv2n9hjBPjPS/GivFdjkO8YzyaCgIny/QlXx9QY
RvvRqvMEAeumpkczJtTIeGRbaXeSgMJ41+YinRoTfPa39MUQkHlbHt9BIXGg
KLZvfRIBMdLWkVUrSGwTGlyryyVgyaEs61IaibqYi12H8wmoMogIclhJ4um5
TVNGAgI+7Jyv2mJNYlZuY1WgkIBwjR/fdw2JYQ4Cu49lBAQOdAWecyRxVjdL
odUSoLtWmP5lE4lpHh+yFZJvf/uzTZedSeSsazRiSwnoOGnumOZC4pChRVi5
nADm56AF/K0k2oYVL2aoCBjIWetJ30biGePne183E5DkPhtXtp3EjpoxDreV
AEVy9rDY81sveGxRyzMCQmxPWLl5kfh2rFt4XE3AlzZGoIJJ4oSkcoFJBwFZ
kSbpniwSk6iJuyo0BGyhvmps8yHxltv2Q3u6CPgPH2dojw==
                 "]]},
               Annotation[#, "Charting`Private`Tag$1078214#1"]& ]}, {}}, {{}, {
              {RGBColor[
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02], 
               AbsoluteThickness[1.6], Opacity[0.5], 
               PointBox[{{0., 0.18149804295338456`}, {91., 
                0.17015441526879804`}, {181., 0.13612353221503837`}, {272., 
                0.11343627684586532`}, {362., 0.11343627684586532`}, {452., 
                0.06806176610751924}, {543., 0.1020926491612788}, {633., 
                0.07940539379210576}, {725., 0.06806176610751924}, {816., 
                0.1020926491612788}, {966., 0.022687255369173043`}, {1266., 
                0.022687255369173043`}, {1866., 0.034030883053759675`}, {
                2766., 0.}, {3966., 0.045374510738346197`}, {6366., 0.}, {
                9966., 0.}, {14766., 0.05671813842293272}}]}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[
                0.5]}, {}}}, {{}, {}}}}, {{{{}, {}, 
              TagBox[
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVx3080wkcwHGye0WdutdUq3OeIlRz6o4iy/dLHmedcih1ROVIyevVw/V0
e6kIuVmiPI6230rdUXOexpkJYVjZr6X04JJXunlsaa7JcO6Pz+vzelvtTwiK
XqCnp7d9vv9/K1oRMFyxGSJTr9oEaJe7v/s529mtYTlS93DusW017t7d0u7F
DWtQXe6emb+GAieTnnyjkThjxCs7HxObZZARvm+bSuKNy+Km5HZWNpDfeTN0
QBKC6lr991GmTmBxwTfytSQaI4KO9fYv9YL9r1YO9klO4jIWO2ZU+yMwGdK1
qpIU1GXM7PTjHQTb1kVjDcpMbCs0yb2z6yj0GG1viXHJwcents4SL47D7dt3
v6ZReWgYRr1Fe3oaxBd3PBtq4WPsYQ+hXTQb6BHP3zDrhOi3UMkIN78Ap9Pi
R17ySxC5ok7HY0kgpQZkHw/9HcsNnUbrsy5BTod4OsOnDAlGc7xxTyrE9scv
EFFEaGjCPZc3eBmMhDTK+RflGFxp+pb+5jewG4V/hgIrcOC1k5mtLgM8Bzmr
dpVVYltp7cZVqitw64RV2Re21egnxENSbSacKHVzl+fVoHnFYFT1xFXArLMW
ORNi1Gv2C0x/mgUhS/WjBIfq0KljbuFIezbEMMo+iNr/wgnuqfG/hdegea54
YM5TgvzwIwZHONchLY6mjBE3oFfQp21jcTnAulRFVVIb0dKWXrTbORccClnP
G73vI89ortN1cR78GUAqcifvoyFlw+rqh3kw0r1SNi1owpq8qXfJqfngb5Gc
oBfejCuISWllQAGUtF2Qpixuwch9S+40zhSAvauw4a6sBc9GJf3qXVcIkYmp
ksiLD5DSRasZPMyDXLPZ/dcdW7H3wFhpiXERfEjJq4sbacWqR5ydj8RFwPRr
FTcVtKHsSmyfZGcxhPVVVd/0acd+NxsP6tti4GyVHbDXl6FL1U/67ewbIJ2M
r3MQyfCdvanYlcKH5Wc2NyoPd2DxuEWkksWHQ8HZR6ZNO7E2TEK4cvlw3KBi
lUjWidT1+SwzOR8ItuYXg+QupMiYZQ++FIAisOPc8+/kWJA/IJX7CGD1WNOG
HWo5DgvSkx2TBLAugj0Y9MdDvJggWT9ZL4CNdl0ez3Y9QsuTqRrRuAD21jN+
0Jl04yJaZoivNQHJt3GBsKUbQ/tZxpZBBFRUGrwc3qzAm5vU5ho2AU5TWk7w
dQV+bjW2ppcSUB0npiaOKlA66YQblQQEG6f5U8YVKNP6f/963hOi3ecvv1dg
r1eXjvOEgG8np8ayJxQoL6KZqHoIKElkdNzRKlBTOMXi9RKQc60p8TGFRK5a
86+uj4DT0q7RNWYkakJ202+oCFgRxbMuNSdxnXvIe98hAqoM4vdssCSxljuY
pp632m+JbIs1iQxmK3iMEBCr3CEMXEvikmChpH+MgDBVT9gZZxLpL4c/0j4S
oE0vyZzdRKJKWG4pnXeOw6n2JBcSx0PNbA5qCHh8bKUz143E9L3qe6JJApgz
e74SepAY/Kn4iZeWANWN9b7220hk0qU1Q/NO8dSx73qR6GLETeBOEdCcWjQi
9iXxYL5X9LPPBESuO7p6qz+JWfUOxLlpAmbl7mHNTBLLD8irLXQE8BKWZvqy
SNzUYcVvmfcWan+bfDuJydaOUTEzBPwHriZpPA==
                 "]]},
               Annotation[#, "Charting`Private`Tag$1088881#1"]& ]}, {}}, {{}, {
              {RGBColor[
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02], 
               AbsoluteThickness[1.6], Opacity[0.5], 
               PointBox[{{0., 0.0942188859375861}, {91., 
                0.10364077453134468`}, {181., 0.12248455171886197`}, {272., 
                0.07537510875006892}, {362., 0.10364077453134468`}, {452., 
                0.07537510875006892}, {543., 0.056531331562551634`}, {633., 
                0.028265665781275873`}, {725., 0.028265665781275873`}, {816., 
                0.028265665781275873`}, {966., 0.009421888593758587}, {1266., 
                0.028265665781275873`}, {1866., 0.009421888593758587}, {2766.,
                 0.}, {3966., 0.028265665781275873`}, {6366., 0.}, {9966., 
                0.018843777187517285`}, {14766., 0.028265665781275873`}}]}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}, {
               {RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.02],
                 AbsoluteThickness[1.6], Opacity[0.5]}, {}}}, {{}, {}}}}},
          AspectRatio->0.8,
          Axes->False,
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Epilog->InsetBox[
            BoxData[
             FormBox[
              StyleBox["\"500 \[Mu]M\"", 16, 
               GrayLevel[0], FontFamily -> "Arial", StripOnInput -> False], 
              TraditionalForm]], 
            Scaled[{0.18, 0.85}]],
          Frame->True,
          FrameLabel->{
            FormBox["\"Time (s)\"", TraditionalForm], 
            FormBox["\"Product (\[Mu]M)\"", TraditionalForm]},
          FrameStyle->Directive[18, 
            GrayLevel[0], FontFamily -> "Arial"],
          FrameTicks->FrontEndValueCache[{{Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
             Automatic, {{0., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-1., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-0.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {0.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.2, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.4, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.6, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5.8, 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {6., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {5000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {10000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {15000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-5000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-4000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-3000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-2000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-1000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {1000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {2000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {3000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {4000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {6000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {7000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {8000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {9000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {11000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {12000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {13000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {14000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {16000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {17000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {18000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {19000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {20000., 
                FormBox[
                 TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
                0.}, {
                 AbsoluteThickness[0.1]}}}}}],
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->{{75, 2}, {60, 8}},
          ImageSize->400,
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          PlotRange->{{0., 17719.199638383674`}, {-0.8029259314318475, 5.5}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 0}},
          Ticks->{Automatic, Automatic}], "\<\"\"\>"}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[2.0999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Top}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7957336524939632`*^9, 3.795733682818653*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"1da0690c-0f2d-4f93-a1b0-92f4b9602597"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experimental Summary Page", "Subsubsection",
 CellChangeTimes->{{3.79372824742229*^9, 
  3.793728251349394*^9}},ExpressionUUID->"3aa7f358-3c24-4983-9a1e-\
e5b79d6c5e11"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fixLogPlots", "[", "gr_", "]"}], ":=", 
   RowBox[{"gr", "/.", 
    RowBox[{
     RowBox[{"f", ":", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Charting`ScaledTicks", "|", "Charting`ScaledFrameTicks"}], 
        ")"}], "[", 
       RowBox[{"{", 
        RowBox[{"Log", ",", "Exp"}], "}"}], "]"}]}], "\[RuleDelayed]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"#", ",", ";;", ",", " ", 
          RowBox[{";;", "3"}]}], "]"}], "&"}], "@*", "f"}], ")"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Thickness", "[", "0.125", "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"FaceForm", "[", 
       RowBox[{"Directive", "[", 
        RowBox[{"Gray", ",", 
         RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"Disk", "[", "]"}], ",", 
      RowBox[{"Opacity", "[", "0.1", "]"}]}], "}"}], "]"}]}], ";"}]}], "Input",\

 CellLabel->
  "In[108]:=",ExpressionUUID->"9842ff4b-9929-4b21-8409-a0add44d8e69"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"expressed", "=", 
    RowBox[{"in2", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#ExpIndex", "\[Equal]", "4"}], "&&", 
        RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}], "&&", 
        RowBox[{"#EnzymeConc", ">", "0.3"}]}], "&"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", "[", "expressed", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"skipped", "=", 
    RowBox[{"in2", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#ExpIndex", "\[Equal]", "4"}], "&&", 
        RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}], "&&", 
        RowBox[{"#MutantID", "\[Equal]", "\"\<Skipped\>\""}]}], "&"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allLibraryChambers", "=", 
    RowBox[{"in2", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#ExpIndex", "\[Equal]", "4"}], "&&", 
        RowBox[{"#MutantID", "\[NotEqual]", "\"\<Skipped\>\""}], "&&", 
        RowBox[{"#MutantID", "\[NotEqual]", "\"\<T79G\>\""}]}], "&"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"expressedLibrary", "=", 
    RowBox[{"allLibraryChambers", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#EnzymeConc", ">", "0.3"}], "&&", 
        RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}]}], "&"}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "allLibraryChambers", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", "[", "expressedLibrary", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tooSlow", "=", 
    RowBox[{"expressedLibrary", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#LocalBackgroundRatio", "\[LessEqual]", "5.0"}], "&"}], "]"}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", "[", "tooSlow", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"measured", "=", 
    RowBox[{"expressedLibrary", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#LocalBackgroundRatio", ">", "5.0"}], "&"}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", "[", "measured", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"countTree", "=", 
   RowBox[{"TreePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "2"}], ",", 
       RowBox[{"1", "\[Rule]", "3"}], ",", 
       RowBox[{"3", "\[Rule]", "4"}], ",", 
       RowBox[{"3", "\[Rule]", "5"}], ",", 
       RowBox[{"5", "\[Rule]", "6"}], ",", 
       RowBox[{"5", "\[Rule]", "7"}]}], "}"}], ",", 
     RowBox[{"VertexSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"VertexCoordinates", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "3"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"EdgeStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<A\>\"", ",", "24", ",", "Bold"}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.0", ",", "1.0"}], "}"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Total Chambers\\n1568\>\"", ",", "14"}], "]"}], ",", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.8"}], ",", "1"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{
             "\"\<Controls\\n(T79G,Skipped)\\n\!\(\*StyleBox[\"n\",FontSlant->\
\"Italic\"]\)=\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"Length", "[", "skipped", "]"}], "]"}]}], ",", "14"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{
             "\"\<Library Mutant \
Chambers\\n\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)=\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"Length", "[", "allLibraryChambers", "]"}], "]"}]}], 
             ",", "14"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.75", ",", "1.5"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<No Expression\\n([E]<0.3nM)\\n\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{
                RowBox[{"Length", "[", "allLibraryChambers", "]"}], "-", 
                RowBox[{"Length", "[", "expressedLibrary", "]"}]}], "]"}]}], 
             ",", "14"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1.7"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"5", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<Expression\\n([E]>0.3nM)\\n\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"Length", "[", "expressedLibrary", "]"}], "]"}]}], ",",
              "14"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.75", ",", "1.2"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"7", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<Measured\\n\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"Length", "[", "measured", "]"}], "]"}]}], ",", "14"}],
             "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"6", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<Too Slow\\n\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"Length", "[", "tooSlow", "]"}], "]"}]}], ",", "14"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.25", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
     RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", "\[Rule]", "Gray"}], "}"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[Rule]", "Gray"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "6"}], "}"}]}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[Rule]", 
           RowBox[{"Darker", "[", "Green", "]"}]}], "&"}], "/@", 
         RowBox[{"{", "5", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[Rule]", 
           RowBox[{"Darker", "[", "Red", "]"}]}], "&"}], "/@", 
         RowBox[{"{", "7", "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eConcHist", "=", 
   RowBox[{"fixLogPlots", "@", 
    RowBox[{"Histogram", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Normal", "[", 
         RowBox[{"expressedLibrary", "[", 
          RowBox[{"All", ",", "\"\<EnzymeConc\>\""}], "]"}], "]"}], ",", 
        RowBox[{"Normal", "[", 
         RowBox[{"skipped", "[", 
          RowBox[{"All", ",", "\"\<EnzymeConc\>\""}], "]"}], "]"}]}], "}"}], 
      ",", "\"\<Log\>\"", ",", 
      RowBox[{"ChartStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", "Green", "]"}], ",", "Gray"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"20", ",", "Black", ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<[E] (nM)\>\"", ",", 
           RowBox[{"SingleLetterItalics", "\[Rule]", "False"}]}], "]"}], ",", 
         
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Counts\>\"", ",", 
           RowBox[{"SingleLetterItalics", "\[Rule]", "False"}]}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"SwatchLegend", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Darker", "[", "Green", "]"}], ",", "Gray"}], "}"}], 
             ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"#", ",", "16"}], "]"}], "&"}], "/@", 
              RowBox[{"{", 
               RowBox[{"\"\<[E] > 0.3 nM\>\"", ",", "\"\<Skipped\>\""}], 
               "}"}]}]}], "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "0.9"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<B\>\"", ",", "24", ",", "Bold"}], "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.05", ",", "0.95"}], "}"}], "]"}]}], "]"}]}], 
        "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"rateHist", "=", 
   RowBox[{"fixLogPlots", "@", 
    RowBox[{"Histogram", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Normal", "[", 
         RowBox[{"measured", "[", 
          RowBox[{"All", ",", "\"\<OptLinFitSlopeMinusTrueBackground\>\""}], 
          "]"}], "]"}], ",", 
        RowBox[{"Normal", "[", 
         RowBox[{"skipped", "[", 
          RowBox[{"All", ",", "\"\<OptLinFitSlopeMinusTrueBackground\>\""}], 
          "]"}], "]"}]}], "}"}], ",", "\"\<Log\>\"", ",", 
      RowBox[{"ChartStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", "Red", "]"}], ",", "Gray"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"20", ",", "Black", ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Initial Rate (\[Mu]M/s)\>\"", ",", 
           RowBox[{"SingleLetterItalics", "\[Rule]", "False"}]}], "]"}], ",", 
         
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Counts\>\"", ",", 
           RowBox[{"SingleLetterItalics", "\[Rule]", "False"}]}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"SwatchLegend", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Darker", "[", "Red", "]"}], ",", "Gray"}], "}"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"#", ",", "16"}], "]"}], "&"}], "/@", 
              RowBox[{"{", 
               RowBox[{"\"\<Measured\>\"", ",", "\"\<T79G/Skipped\>\""}], 
               "}"}]}]}], "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.8", ",", "0.9"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<C\>\"", ",", "24", ",", "Bold"}], "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.05", ",", "0.95"}], "}"}], "]"}]}], "]"}]}], 
        "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"measured2", "=", 
    RowBox[{"in2", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#ExpIndex", "\[Equal]", "7"}], "&&", 
        RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}], "&&", 
        RowBox[{"#EnzymeConc", ">", "0.3"}], "&&", 
        RowBox[{"#LocalBackgroundRatio", ">", "5.0"}]}], "&"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"measured3", "=", 
    RowBox[{
     RowBox[{"measured2", "[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<MutantID\>\"", ",", "\"\<fit_mm_kcat\>\""}], "}"}]}], 
      "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pairs", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"measured3", "[", 
            RowBox[{"n", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"measured3", "[", 
            RowBox[{"n", ",", "All", ",", "\"\<fit_mm_kcat\>\""}], "]"}], 
           "]"}], ",", "2"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "measured3", "]"}]}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pairs", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "5"}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Min", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"pairs", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"measured2", "=", 
    RowBox[{
     RowBox[{"measured", "[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<MutantID\>\"", ",", "\"\<fit_mm_kcat\>\"", ",", 
         "\"\<fit_mm_KM\>\"", ",", "\"\<fit_mm_kcatoverKM_MMfit\>\""}], 
        "}"}]}], "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pairs", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"measured2", "[", 
            RowBox[{"n", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"measured2", "[", 
            RowBox[{"n", ",", "All", ",", "\"\<fit_mm_kcat\>\""}], "]"}], 
           "]"}], ",", "2"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "measured2", "]"}]}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pairs", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "5"}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"pairs", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rmse", "=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", 
             RowBox[{"pairs", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "2", ",", "1"}], "]"}], "]"}]}], "]"}], "-", 
           
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", 
             RowBox[{"pairs", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "2", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
          ")"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "pairs", "]"}]}], "}"}]}], "]"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pearsonR2", "=", 
    RowBox[{
     RowBox[{"Correlation", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"10", ",", 
         RowBox[{"pairs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Log", "[", 
        RowBox[{"10", ",", 
         RowBox[{"pairs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
      "]"}], "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"kcatplot", "=", 
     RowBox[{"fixLogPlots", "@", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"ListLogLogPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pairs", "[", 
                  RowBox[{"[", 
                   RowBox[{"n", ",", "2", ",", "2"}], "]"}], "]"}], "/", 
                 RowBox[{"pairs", "[", 
                  RowBox[{"[", 
                   RowBox[{"n", ",", "2", ",", "1"}], "]"}], "]"}]}], ">", 
                "3"}], "||", 
               RowBox[{
                RowBox[{
                 RowBox[{"pairs", "[", 
                  RowBox[{"[", 
                   RowBox[{"n", ",", "2", ",", "2"}], "]"}], "]"}], "/", 
                 RowBox[{"pairs", "[", 
                  RowBox[{"[", 
                   RowBox[{"n", ",", "2", ",", "1"}], "]"}], "]"}]}], "<", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "3"}], ")"}]}]}], ",", 
              RowBox[{"Callout", "[", 
               RowBox[{
                RowBox[{"pairs", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"pairs", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"pairs", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Length", "[", "pairs", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "/", "5"}], ",", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "*", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "/", "5"}], ",", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "*", "5"}]}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"24", ",", "Black", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], 
          ",", 
          RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"p2", ",", "0.02"}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"], \
\"cat\"]\) (rep.1) (/s)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"], \
\"cat\"]\) (rep.2) (/s)\>\""}], "}"}]}]}], "]"}], ",", 
        RowBox[{"LogLogPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"x", "/", "2"}], ",", 
            RowBox[{"x", "*", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.0001", ",", "10000"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Gray", ",", "Dashed"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "100"}]}], "]"}]}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kcatplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"pairs", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "2", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"pairs", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "2", ",", "1"}], "]"}], "]"}]}], ">", 
              "3"}], "||", 
             RowBox[{
              RowBox[{
               RowBox[{"pairs", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "2", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"pairs", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "2", ",", "1"}], "]"}], "]"}]}], "<", 
              RowBox[{"(", 
               RowBox[{"1", "/", "3"}], ")"}]}]}], ",", 
            RowBox[{"Callout", "[", 
             RowBox[{
              RowBox[{"Log", "[", 
               RowBox[{"10", ",", 
                RowBox[{"pairs", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"pairs", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"Log", "[", 
             RowBox[{"10", ",", 
              RowBox[{"pairs", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "pairs", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"Log", "[", 
          RowBox[{"10", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "/", "5"}], ",", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "*", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "/", "5"}], ",", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "*", "5"}]}], "}"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"24", ",", "Black", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "475"}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"p2", ",", "0.02"}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Log10(\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"],\
 \"cat\"]\)) (rep.1) (/s)\>\"", ",", 
           "\"\<Log10(\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"]\
, \"cat\"]\)) (rep.2) (/s)\>\""}], "}"}]}], ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
               "\"\<\!\(\*SuperscriptBox[StyleBox[\"R\",FontSlant->\"Italic\"]\
, \"2\"]\)=\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Round", "[", 
                  RowBox[{"pearsonR2", ",", "0.01"}], "]"}], "]"}]}], ",", 
               "14"}], "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.2", ",", "0.9"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"\"\<RMSE=\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Round", "[", 
                  RowBox[{"rmse", ",", "0.01"}], "]"}], "]"}]}], ",", "14"}], 
              "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.2", ",", "0.8"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
               "\"\<\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)=\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Length", "[", "pairs", "]"}], "]"}]}], ",", "14"}], 
              "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.2", ",", "0.7"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<D\>\"", ",", "24", ",", "Bold"}], "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.05", ",", "0.95"}], "}"}], "]"}]}], "]"}]}], 
          "}"}]}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"x", "-", "0.301"}], ",", 
          RowBox[{"x", "+", "0.301"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", "Dashed"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"100", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", "50"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"measured2", "=", 
    RowBox[{
     RowBox[{"measured", "[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<MutantID\>\"", ",", "\"\<fit_mm_KM\>\""}], "}"}]}], 
      "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pairs", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"measured2", "[", 
            RowBox[{"n", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"measured2", "[", 
            RowBox[{"n", ",", "All", ",", "\"\<fit_mm_KM\>\""}], "]"}], "]"}],
           ",", "2"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "measured2", "]"}]}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pairs", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "5"}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"pairs", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rmse", "=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", 
             RowBox[{"pairs", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "2", ",", "1"}], "]"}], "]"}]}], "]"}], "-", 
           
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", 
             RowBox[{"pairs", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "2", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
          ")"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "pairs", "]"}]}], "}"}]}], "]"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pearsonR2", "=", 
    RowBox[{
     RowBox[{"Correlation", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"10", ",", 
         RowBox[{"pairs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Log", "[", 
        RowBox[{"10", ",", 
         RowBox[{"pairs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
      "]"}], "^", "2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KmPlot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"pairs", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "2", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"pairs", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "2", ",", "1"}], "]"}], "]"}]}], ">", 
              "3"}], "||", 
             RowBox[{
              RowBox[{
               RowBox[{"pairs", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "2", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"pairs", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "2", ",", "1"}], "]"}], "]"}]}], "<", 
              RowBox[{"(", 
               RowBox[{"1", "/", "3"}], ")"}]}]}], ",", 
            RowBox[{"Callout", "[", 
             RowBox[{
              RowBox[{"Log", "[", 
               RowBox[{"10", ",", 
                RowBox[{"pairs", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"pairs", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"Log", "[", 
             RowBox[{"10", ",", 
              RowBox[{"pairs", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "pairs", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"Log", "[", 
          RowBox[{"10", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "/", "5"}], ",", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "*", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "/", "5"}], ",", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "*", "5"}]}], "}"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"24", ",", "Black", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "475"}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"p2", ",", "0.02"}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Log[10,\!\(\*SubscriptBox[StyleBox[\"K\",FontSlant->\"Italic\
\"], \"M\"]\)] (rep.1) (/s)\>\"", ",", 
             RowBox[{"SingleLetterItalics", "\[Rule]", "False"}]}], "]"}], 
           ",", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Log[10,\!\(\*SubscriptBox[StyleBox[\"K\",FontSlant->\"Italic\
\"], \"M\"]\)] (rep.2) (/s)\>\"", ",", 
             RowBox[{"SingleLetterItalics", "\[Rule]", "False"}]}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
               "\"\<\!\(\*SuperscriptBox[StyleBox[\"R\",FontSlant->\"Italic\"]\
, \"2\"]\)=\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Round", "[", 
                  RowBox[{"pearsonR2", ",", "0.01"}], "]"}], "]"}]}], ",", 
               "14"}], "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.2", ",", "0.9"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"\"\<RMSE=\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Round", "[", 
                  RowBox[{"rmse", ",", "0.01"}], "]"}], "]"}]}], ",", "14"}], 
              "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.2", ",", "0.8"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
               "\"\<\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)=\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Length", "[", "pairs", "]"}], "]"}]}], ",", "14"}], 
              "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.2", ",", "0.7"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<E\>\"", ",", "24", ",", "Bold"}], "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.05", ",", "0.95"}], "}"}], "]"}]}], "]"}]}], 
          "}"}]}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"x", "-", "0.301"}], ",", 
          RowBox[{"x", "+", "0.301"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", "Dashed"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{"10", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "5"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", "0.5"}], "]"}]}], "}"}], ",", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"-", "5"}]}], ",", 
        RowBox[{"FillingStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"LightPink", ",", 
           RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"LightPink", ",", 
           RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}]}], "]"}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"100", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", "50"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"measured2", "=", 
    RowBox[{
     RowBox[{"measured", "[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<MutantID\>\"", ",", "\"\<fit_mm_kcatoverKM_MMfit\>\""}], 
        "}"}]}], "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pairs", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"measured2", "[", 
            RowBox[{"n", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"measured2", "[", 
            RowBox[{"n", ",", "All", ",", "\"\<fit_mm_kcatoverKM_MMfit\>\""}],
             "]"}], "]"}], ",", "2"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "measured2", "]"}]}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pairs", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "5"}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"pairs", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rmse", "=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", 
             RowBox[{"pairs", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "2", ",", "1"}], "]"}], "]"}]}], "]"}], "-", 
           
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", 
             RowBox[{"pairs", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "2", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
          ")"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "pairs", "]"}]}], "}"}]}], "]"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pearsonR2", "=", 
    RowBox[{
     RowBox[{"Correlation", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"10", ",", 
         RowBox[{"pairs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Log", "[", 
        RowBox[{"10", ",", 
         RowBox[{"pairs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
      "]"}], "^", "2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kcatKMplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"pairs", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "2", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"pairs", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "2", ",", "1"}], "]"}], "]"}]}], ">", 
              "3"}], "||", 
             RowBox[{
              RowBox[{
               RowBox[{"pairs", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "2", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"pairs", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "2", ",", "1"}], "]"}], "]"}]}], "<", 
              RowBox[{"(", 
               RowBox[{"1", "/", "3"}], ")"}]}]}], ",", 
            RowBox[{"Callout", "[", 
             RowBox[{
              RowBox[{"Log", "[", 
               RowBox[{"10", ",", 
                RowBox[{"pairs", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"pairs", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"Log", "[", 
             RowBox[{"10", ",", 
              RowBox[{"pairs", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "pairs", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"Log", "[", 
          RowBox[{"10", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "/", "5"}], ",", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "*", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "/", "5"}], ",", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"pairs", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                "*", "5"}]}], "}"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"24", ",", "Black", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "475"}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"p2", ",", "0.02"}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Log[10,\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\
\"], \"cat\"]\)/\!\(\*SubscriptBox[StyleBox[\"K\",FontSlant->\"Italic\"], \"M\
\"]\)] (rep.1) (/M /s)\>\"", ",", 
             RowBox[{"SingleLetterItalics", "\[Rule]", "False"}]}], "]"}], 
           ",", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Log[10,\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\
\"], \"cat\"]\)/\!\(\*SubscriptBox[StyleBox[\"K\",FontSlant->\"Italic\"], \"M\
\"]\)] (rep.2) (/M /s)\>\"", ",", 
             RowBox[{"SingleLetterItalics", "\[Rule]", "False"}]}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
               "\"\<\!\(\*SuperscriptBox[StyleBox[\"R\",FontSlant->\"Italic\"]\
, \"2\"]\)=\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Round", "[", 
                  RowBox[{"pearsonR2", ",", "0.01"}], "]"}], "]"}]}], ",", 
               "14"}], "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.2", ",", "0.9"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"\"\<RMSE=\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Round", "[", 
                  RowBox[{"rmse", ",", "0.01"}], "]"}], "]"}]}], ",", "14"}], 
              "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.2", ",", "0.8"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
               "\"\<\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)=\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Length", "[", "pairs", "]"}], "]"}]}], ",", "14"}], 
              "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.2", ",", "0.7"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<F\>\"", ",", "24", ",", "Bold"}], "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.05", ",", "0.95"}], "}"}], "]"}]}], "]"}]}], 
          "}"}]}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"x", "-", "0.301"}], ",", 
          RowBox[{"x", "+", "0.301"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", "Dashed"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"100", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", "50"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"countTree", ",", "kcatplot"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"eConcHist", ",", "KmPlot"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rateHist", ",", "kcatKMplot"}], "}"}]}], "}"}], "]"}], "*)"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"summaryGrid", "=", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"countTree", ",", "eConcHist", ",", "rateHist"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"kcatplot", ",", "KmPlot", ",", "kcatKMplot"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Experimental Summary. A) Counts of local limit of \
quantification control chambers (skipped and catalytically unresolvable \
mutants), library and known active site mutant chambers (library mutants), \
chambers which expressed >0.3 nM, and measured and chambers that were not \
sufficiently above the local limit of quantification (too slow). B) \
Distribution of enzyme concentrations in chambers with [E]>0.3 nM compared to \
the measured expression in the Skipped chambers. C) Distribution of rates \
measured in the chambers sufficiently above the local limit of quantification \
(Measured) compared to the rates measured in the control chambers, at the \
highest substrate concentration. D) Correlation between \
\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"], \"cat\"]\) \
replicate measurements for measured library mutants. E) Correlation between \
\!\(\*SubscriptBox[StyleBox[\"K\",FontSlant->\"Italic\"], \"M\"]\) replicate \
measurements for measured library mutants. The pink shaded region denotes the \
immeasurable range of \
\!\(\*SubscriptBox[StyleBox[\"K\",FontSlant->\"Italic\"], \"M\"]\) values as \
Michaelis-Menten fits were constrained such that \!\(\*SubscriptBox[StyleBox[\
\"K\",FontSlant->\"Italic\"], \"M\"]\) > 0.5 \[Mu]M. F) Correlation between \
\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"], \
\"cat\"]\)/\!\(\*SubscriptBox[StyleBox[\"K\",FontSlant->\"Italic\"], \"M\"]\) \
replicate measurements for measured library mutants.\>\"", ",", "18", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
          RowBox[{"TextAlignment", "\[Rule]", "Left"}], ",", 
          RowBox[{"SingleLetterItalics", "\[Rule]", "False"}]}], "]"}], ",", 
        "SpanFromLeft"}], "}"}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{
    "\"\</Users/craig/Dropbox/AP_enzymology/MITOMI/tempPDF/temporary_PDF_\>\"\
", ",", "\"\<0000\>\"", ",", "\"\<.pdf\>\""}], "]"}], ",", "summaryGrid", ",", 
   RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "False"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.793728261261385*^9, 3.793728289707296*^9}, {
  3.793728323086234*^9, 3.793728349349856*^9}, {3.79372843768076*^9, 
  3.793728449486156*^9}, {3.7937300777521763`*^9, 3.793730099327923*^9}, {
  3.793733328927164*^9, 3.793733370021628*^9}, {3.793733426745174*^9, 
  3.79373345258689*^9}, {3.793733507364106*^9, 3.793733509711089*^9}, {
  3.793733550228087*^9, 3.793733587240445*^9}, {3.793733646360442*^9, 
  3.793733648407506*^9}, {3.793733718628957*^9, 3.793733718959084*^9}, {
  3.793733808837557*^9, 3.793733858236401*^9}, {3.793733898318446*^9, 
  3.793733900758872*^9}, {3.793734094177339*^9, 3.793734139015851*^9}, {
  3.7938837166708803`*^9, 3.7938837764394073`*^9}, {3.793883845546454*^9, 
  3.793883870590887*^9}, {3.795265041962331*^9, 3.7952650844323187`*^9}, {
  3.795618369894844*^9, 3.795618373529883*^9}, {3.7957337045849237`*^9, 
  3.795733733504243*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"ce000803-03a2-4a7e-9ab7-0f7bd6112e7f"],

Cell[BoxData["1123"], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.795733733871191*^9}},
 CellLabel->
  "Out[195]=",ExpressionUUID->"a63311bc-0ce9-471d-a64a-5bee403678bd"],

Cell[BoxData["1218"], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.7957337338840847`*^9}},
 CellLabel->
  "Out[199]=",ExpressionUUID->"9e084cf7-0b2b-4e38-9030-a5dcd33007d9"],

Cell[BoxData["899"], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.795733733890604*^9}},
 CellLabel->
  "Out[200]=",ExpressionUUID->"25c681c9-54ce-487b-9a2d-4ed4c95e05dc"],

Cell[BoxData["764"], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.7957337338964767`*^9}},
 CellLabel->
  "Out[202]=",ExpressionUUID->"94e9fc63-7ef4-4c25-b347-d0adb15dc2c4"],

Cell[BoxData["135"], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.7957337338994627`*^9}},
 CellLabel->
  "Out[204]=",ExpressionUUID->"479eff8d-0ff8-4c6c-85b8-cce4587a71de"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0.5], Opacity[0.7], 
    LineBox[{{{0., 0.}, {-1., -1.}}, {{0., 0.}, {1., -1.}}, {{1., -1.}, {
     0., -2.}}, {{1., -1.}, {2., -2.}}, {{2., -2.}, {1., -3.}}, {{2., -2.}, {
     3., -3.}}}]}, 
   {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
     {GrayLevel[0.5], DiskBox[{0., 0.}, 0.14142135623730953]}, InsetBox[
      StyleBox["\<\"Total Chambers\\n1568\"\>",
       StripOnInput->False,
       FontSize->14], {-0.3676955262170048, 0.14142135623730953},
      BaseStyle->"Graphics"]}, {
     {GrayLevel[0.5], DiskBox[{-1., -1.}, 0.14142135623730953]}, InsetBox[
      StyleBox["\<\"Controls\\n(T79G,Skipped)\\n\\!\\(\\*StyleBox[\\\"n\\\",\
FontSlant->\\\"Italic\\\"]\\)=74\"\>",
       StripOnInput->False,
       FontSize->14], {-1.4242640687119286, -1.4242640687119286},
      BaseStyle->"Graphics"]}, {
     {GrayLevel[0.5], DiskBox[{1., -1.}, 0.14142135623730953]}, InsetBox[
      StyleBox["\<\"Library Mutant \
Chambers\\n\\!\\(\\*StyleBox[\\\"n\\\",FontSlant->\\\"Italic\\\"]\\)=1218\"\>",
       StripOnInput->False,
       FontSize->14], {1.6363961030678928, -0.7171572875253809},
      BaseStyle->"Graphics"]}, {
     {GrayLevel[0.5], DiskBox[{0., -2.}, 0.14142135623730953]}, InsetBox[
      StyleBox["\<\"No Expression\\n([E]<0.3nM)\\n319\"\>",
       StripOnInput->False,
       FontSize->14], {-0.14142135623730953, -2.6222539674441623},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0, 
       Rational[2, 3], 0], DiskBox[{2., -2.}, 0.14142135623730953]}, 
     InsetBox[
      StyleBox["\<\"Expression\\n([E]>0.3nM)\\n899\"\>",
       StripOnInput->False,
       FontSize->14], {2.6363961030678933, -1.8020101012677667},
      BaseStyle->"Graphics"]}, {
     {GrayLevel[0.5], DiskBox[{1., -3.}, 0.14142135623730953]}, InsetBox[
      StyleBox["\<\"Too Slow\\n764\"\>",
       StripOnInput->False,
       FontSize->14], {0.9292893218813452, -3.424264068711929},
      BaseStyle->"Graphics"]}, {
     {RGBColor[
       Rational[2, 3], 0, 0], DiskBox[{3., -3.}, 0.14142135623730953]}, 
     InsetBox[
      StyleBox["\<\"Measured\\n135\"\>",
       StripOnInput->False,
       FontSize->14], {3.1414213562373097, -3.424264068711929},
      BaseStyle->"Graphics"]}}},
  Epilog->InsetBox[
    BoxData[
     FormBox[
      StyleBox["\"A\"", 24, Bold, StripOnInput -> False], TraditionalForm]], 
    Scaled[{0., 1.}]],
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->450]], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.79573373406676*^9}},
 CellLabel->
  "Out[205]=",ExpressionUUID->"d3d9e4da-78f3-45cf-9072-5bf5df55651d"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5459999999999999], Thickness[Small]}], {{}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], EdgeForm[{
      Opacity[0.5459999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-1.3815510557964275`, 0.}, {-0.9210340371976184, 1},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{246.50909090909093`, 261.51818181818186`}, {
            135.7244176372712, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-0.9210340371976184, 0.}, {-0.4605170185988092, 3}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{261.01818181818186`, 276.02727272727276`}, {
            134.67325291181362`, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-0.4605170185988092, 0.}, {0., 2}, "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{275.52727272727276`, 290.53636363636366`}, {
            135.1988352745424, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 0.}, {0.4605170185988092, 2}, "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{290.03636363636366`, 305.04545454545456`}, {
            135.1988352745424, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.4605170185988092, 0.}, {0.9210340371976184, 2}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{304.54545454545456`, 319.55454545454546`}, {
            135.1988352745424, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.9210340371976184, 0.}, {1.3815510557964275`, 11}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{319.05454545454546`, 334.0636363636364}, {
            130.46859400998335`, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 11]& ,
         TagBoxNote->"11"],
        StyleBox["11", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[11, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.3815510557964275`, 0.}, {1.842068074395237, 138}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{333.5636363636364, 348.5727272727273}, {
            63.71963394342761, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 138]& ,
         TagBoxNote->"138"],
        StyleBox["138", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[138, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.842068074395237, 0.}, {2.302585092994046, 601}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{348.0727272727273, 
            363.0818181818182}, {-179.62499999999997`, 136.74999999999997`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 601]& ,
         TagBoxNote->"601"],
        StyleBox["601", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[601, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.302585092994046, 0.}, {2.763102111592855, 138}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{362.5818181818182, 377.5909090909091}, {
            63.71963394342761, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 138]& ,
         TagBoxNote->"138"],
        StyleBox["138", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[138, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.763102111592855, 0.}, {3.223619130191664, 1}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{377.0909090909091, 392.1}, {135.7244176372712, 
            136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
     {GrayLevel[0.5], Opacity[0.5], EdgeForm[{Opacity[0.5459999999999999], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-6.907755278982137, 0.}, {-6.447238260383328, 1}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{72.4, 87.4090909090909}, {135.7244176372712, 
            136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-5.986721241784519, 0.}, {-5.52620422318571, 1}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{101.41818181818184`, 116.42727272727274`}, {
            135.7244176372712, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-5.52620422318571, 0.}, {-5.065687204586901, 1}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{115.92727272727274`, 130.93636363636364`}, {
            135.7244176372712, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-5.065687204586901, 0.}, {-4.605170185988092, 4}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{130.43636363636364`, 145.44545454545454`}, {
            134.14767054908484`, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-4.605170185988092, 0.}, {-4.144653167389282, 5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{144.94545454545454`, 159.95454545454547`}, {
            133.62208818635605`, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-4.144653167389282, 0.}, {-3.684136148790473, 13}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{159.45454545454547`, 174.4636363636364}, {
            129.41742928452575`, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 13]& ,
         TagBoxNote->"13"],
        StyleBox["13", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[13, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-3.684136148790473, 0.}, {-3.223619130191664, 8}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{173.9636363636364, 188.9727272727273}, {
            132.0453410981697, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-3.223619130191664, 0.}, {-2.763102111592855, 13}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{188.4727272727273, 203.4818181818182}, {
            129.41742928452575`, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 13]& ,
         TagBoxNote->"13"],
        StyleBox["13", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[13, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-2.763102111592855, 0.}, {-2.302585092994046, 4}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{202.9818181818182, 217.9909090909091}, {
            134.14767054908484`, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-2.302585092994046, 0.}, {-1.842068074395237, 3}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{217.4909090909091, 232.5}, {134.67325291181362`, 
            136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-1.842068074395237, 0.}, {-1.3815510557964275`, 1}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{232., 247.00909090909093`}, {135.7244176372712, 
            136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-1.3815510557964275`, 0.}, {-0.9210340371976184, 1},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{246.50909090909093`, 261.51818181818186`}, {
            135.7244176372712, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-0.4605170185988092, 0.}, {0., 1}, "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{275.52727272727276`, 290.53636363636366`}, {
            135.7244176372712, 136.74999999999997`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], 
        "Tooltip"]& ]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
     {}}, {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-7.110382767165613, 0.},
  Epilog->{
    InsetBox[
     BoxData[
      FormBox[
       TemplateBox[{
         StyleBox["\"[E] > 0.3 nM\"", 16, StripOnInput -> False], 
         StyleBox["\"Skipped\"", 16, StripOnInput -> False]}, "SwatchLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 
                   Rational[2, 3], 0], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm]], 
     Scaled[{0.25, 0.9}]], 
    InsetBox[
     BoxData[
      FormBox[
       StyleBox["\"B\"", 24, Bold, StripOnInput -> False], TraditionalForm]], 
     
     Scaled[{0.05, 0.95}]]},
  Frame->True,
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"Counts\"", SingleLetterItalics -> False, StripOnInput -> False], 
      TraditionalForm], None}, {
     FormBox[
      StyleBox[
      "\"[E] (nM)\"", SingleLetterItalics -> False, StripOnInput -> False], 
      TraditionalForm], None}},
  FrameStyle->Directive[20, 
    GrayLevel[0], FontFamily -> "Arial"],
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Composition[Part[#, 
        Span[1, All], 
        Span[1, 3]]& , 
       Charting`ScaledTicks[{Log, Exp}]], 
      Composition[Part[#, 
        Span[1, All], 
        Span[1, 3]]& , 
       Charting`ScaledFrameTicks[{Log, Exp}]]}}, {{
     Automatic, Automatic}, {{{-6.907755278982137, 
        FormBox["0.001`", TraditionalForm], {0.01, 0.}}, {-4.605170185988091, 
        
        FormBox[
         TagBox[
          InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
        0.}}, {-2.3025850929940455`, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}}, {0., 
        FormBox["1", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}}, {-9.210340371976182, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.517193191416238, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.111728083308073, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.824046010856292, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.600902459542082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.418580902748128, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.264430222920869, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.1308988302963465`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.013115794639964, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-6.214608098422191, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.809142990314028, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.521460917862246, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.298317366548036, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.912023005428146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.506557897319982, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2188758248682006`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.995732273553991, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8134107167600364`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.659260036932778, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.5257286443082556`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4079456086518722`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2039728043259361`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.916290731874155, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.0986122886681098`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.3862943611198906`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.791759469228055, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.9459101490553132`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.0794415416798357`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.1972245773362196`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.995732273553991, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.4011973816621555`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.6888794541139363`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.912023005428146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.0943445622221, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.248495242049359, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.382026634673881, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.499809670330265, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.605170185988092, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.298317366548036, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.703782474656201, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}}, {{-6.907755278982137, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-4.605170185988091, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-2.3025850929940455`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
       2.302585092994046, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-9.210340371976182, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.517193191416238, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.111728083308073, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.824046010856292, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.600902459542082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.418580902748128, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.264430222920869, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.1308988302963465`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.013115794639964, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-6.214608098422191, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.809142990314028, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.521460917862246, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.298317366548036, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.912023005428146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.506557897319982, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2188758248682006`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.995732273553991, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8134107167600364`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.659260036932778, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.5257286443082556`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4079456086518722`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2039728043259361`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.916290731874155, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.0986122886681098`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.3862943611198906`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.791759469228055, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.9459101490553132`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.0794415416798357`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.1972245773362196`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.995732273553991, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.4011973816621555`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.6888794541139363`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.912023005428146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.0943445622221, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.248495242049359, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.382026634673881, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.499809670330265, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.605170185988092, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.298317366548036, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.703782474656201, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}}],
  
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  PlotRange->{{-6.907755278982137, 3.223619130191664}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{
    Composition[Part[#, 
      Span[1, All], 
      Span[1, 3]]& , 
     Charting`ScaledTicks[{Log, Exp}]], Automatic}]], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.79573373420296*^9}},
 CellLabel->
  "Out[206]=",ExpressionUUID->"2ce9fc5c-3379-467a-bf39-1df40962fa7f"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.609], Thickness[Small]}], {{}, 
     {RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 0], Opacity[0.5], EdgeForm[{
      Opacity[0.609], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-11.05240844637142, 0.}, {-10.59189142777261, 1}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{61.51781891972928, 87.00668877719136}, {
            133.18777193670329`, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-10.59189142777261, 0.}, {-10.131374409173802`, 1}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{86.50668877719136, 111.99555863465332`}, {
            133.18777193670329`, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-10.131374409173802`, 0.}, {-9.670857390574993, 5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{111.49555863465332`, 136.9844284921154}, {
            109.37507573765575`, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-9.670857390574993, 0.}, {-9.210340371976184, 17}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{136.4844284921154, 161.97329834957742`}, {
            37.93698714051311, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 17]& ,
         TagBoxNote->"17"],
        StyleBox["17", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[17, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-9.210340371976184, 0.}, {-8.749823353377373, 23}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{161.47329834957742`, 186.96216820703955`}, {
            2.217942841941806, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 23]& ,
         TagBoxNote->"23"],
        StyleBox["23", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[23, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-8.749823353377373, 0.}, {-8.289306334778564, 21}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.46216820703955`, 211.95103806450157`}, {
            14.12429094146556, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 21]& ,
         TagBoxNote->"21"],
        StyleBox["21", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-8.289306334778564, 0.}, {-7.828789316179756, 17}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{211.45103806450157`, 236.93990792196354`}, {
            37.93698714051311, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 17]& ,
         TagBoxNote->"17"],
        StyleBox["17", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[17, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-7.828789316179756, 0.}, {-7.368272297580946, 14}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{236.43990792196354`, 261.9287777794256}, {
            55.79650928979876, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 14]& ,
         TagBoxNote->"14"],
        StyleBox["14", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[14, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-7.368272297580946, 0.}, {-6.907755278982137, 8}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{261.4287777794256, 286.91764763688764`}, {
            91.51555358837008, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-6.907755278982137, 0.}, {-6.447238260383328, 15}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{286.41764763688764`, 311.9065174943497}, {
            49.84333524003688, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 15]& ,
         TagBoxNote->"15"],
        StyleBox["15", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[15, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-6.447238260383328, 0.}, {-5.986721241784519, 7}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{311.4065174943497, 336.89538735181173`}, {
            97.46872763813197, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 7]& ,
         TagBoxNote->"7"],
        StyleBox["7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-5.986721241784519, 0.}, {-5.52620422318571, 3}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{336.39538735181173`, 361.88425720927376`}, {
            121.28142383717952`, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-5.52620422318571, 0.}, {-5.065687204586901, 3}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{361.38425720927376`, 386.8731270667358}, {
            121.28142383717952`, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
     {GrayLevel[0.5], Opacity[0.5], EdgeForm[{Opacity[0.609], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-10.59189142777261, 0.}, {-10.131374409173802`, 20},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{86.50668877719136, 111.99555863465332`}, {
            20.07746499122746, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 20]& ,
         TagBoxNote->"20"],
        StyleBox["20", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[20, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-10.131374409173802`, 0.}, {-9.670857390574993, 54},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{111.49555863465332`, 
            136.9844284921154}, {-182.3304527006767, 139.64094598646517`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 54]& ,
         TagBoxNote->"54"],
        StyleBox["54", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[54, {}], 
        "Tooltip"]& ]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {}}, {{{}, {}}, {}}}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-11.17214287120711, 0.},
  Epilog->{
    InsetBox[
     BoxData[
      FormBox[
       TemplateBox[{
         StyleBox["\"Measured\"", 16, StripOnInput -> False], 
         StyleBox["\"T79G/Skipped\"", 16, StripOnInput -> False]}, 
        "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                   Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm]], 
     Scaled[{0.8, 0.9}]], 
    InsetBox[
     BoxData[
      FormBox[
       StyleBox["\"C\"", 24, Bold, StripOnInput -> False], TraditionalForm]], 
     
     Scaled[{0.05, 0.95}]]},
  Frame->True,
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"Counts\"", SingleLetterItalics -> False, StripOnInput -> False], 
      TraditionalForm], None}, {
     FormBox[
      StyleBox[
      "\"Initial Rate (\[Mu]M/s)\"", SingleLetterItalics -> False, 
       StripOnInput -> False], TraditionalForm], None}},
  FrameStyle->Directive[20, 
    GrayLevel[0], FontFamily -> "Arial"],
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Composition[Part[#, 
        Span[1, All], 
        Span[1, 3]]& , 
       Charting`ScaledTicks[{Log, Exp}]], 
      Composition[Part[#, 
        Span[1, All], 
        Span[1, 3]]& , 
       Charting`ScaledFrameTicks[{Log, Exp}]]}}, {{
     Automatic, Automatic}, {{{-9.903487552536127, 
        FormBox[
         TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
           TemplateBox[{"10", 
             RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
        0.}}, {-9.210340371976182, 
        FormBox[
         TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
           TemplateBox[{"10", 
             RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
        0.}}, {-7.600902459542082, 
        FormBox[
         TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
           TemplateBox[{"10", 
             RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
        0.}}, {-6.907755278982137, 
        FormBox["0.001`", TraditionalForm], {0.01, 0.}}, {-5.298317366548036, 
        
        FormBox[
         TagBox[
          InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
        0.}}, {-11.512925464970229`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.819778284410283`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.41431317630212, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.126631103850338`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.721165995742174, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.567015315914915, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.433483923290392, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.315700887634009, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.517193191416238, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.111728083308073, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.824046010856292, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.418580902748128, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.264430222920869, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.1308988302963465`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.013115794639964, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-6.214608098422191, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.809142990314028, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.521460917862246, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.605170185988091, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.509860006183766, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.422848629194137, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.3428059215206005`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.268697949366879, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}}, {{-9.903487552536127, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-9.210340371976182, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-7.600902459542082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-6.907755278982137, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-5.298317366548036, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-11.512925464970229`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.819778284410283`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.41431317630212, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.126631103850338`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.721165995742174, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.567015315914915, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.433483923290392, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.315700887634009, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.517193191416238, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.111728083308073, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.824046010856292, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.418580902748128, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.264430222920869, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.1308988302963465`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.013115794639964, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-6.214608098422191, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.809142990314028, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.521460917862246, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.605170185988091, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.509860006183766, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.422848629194137, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.3428059215206005`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.268697949366879, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}}],
  
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  PlotRange->{{-11.05240844637142, -5.065687204586901}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{
    Composition[Part[#, 
      Span[1, All], 
      Span[1, 3]]& , 
     Charting`ScaledTicks[{Log, Exp}]], Automatic}]], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.7957337343980618`*^9}},
 CellLabel->
  "Out[207]=",ExpressionUUID->"57db261d-eb76-49a5-8356-9be9d9dc7d3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "}"}], "\[LeftDoubleBracket]", 
  RowBox[{"1", ";;", "5"}], "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.795733734503709*^9}},
 CellLabel->
  "Out[211]=",ExpressionUUID->"e4873e4f-96b9-4452-a5e4-fea591344e27"],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.795733734507011*^9}},
 CellLabel->
  "Out[212]=",ExpressionUUID->"de5f3497-e189-4949-92c4-bea0264b887d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"0.0973341596701939`", ",", "6.364907561572528`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5.511083253315886`", ",", "3.008959629446735`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3.8925576128021855`", ",", "4.085529777930654`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1.9691925568377715`", ",", "15.072922648795972`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2.215400605417576`", ",", "3.405067115107009`"}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.7957337345742826`*^9}},
 CellLabel->
  "Out[215]=",ExpressionUUID->"bccf9746-636c-47da-b6ea-395e1a39a180"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2621.7462034407276`", ",", "136418.69347770704`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"146006.41276359968`", ",", "97304.37288015576`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"103191.07437375686`", ",", "121734.9554792523`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"45113.31751046537`", ",", "133355.7364845718`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"32515.06497395466`", ",", "60689.742533574965`"}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.795733734955679*^9}},
 CellLabel->
  "Out[222]=",ExpressionUUID->"8e5cf4c7-ac70-4dd1-817f-7101de70b1e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"37.12569872036221`", ",", "46.657150858966794`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"37.74548767415395`", ",", "30.92316964164292`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"37.72184402987595`", ",", "33.560859835587365`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"43.64991682070286`", ",", "113.02792850264667`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"68.13458952618316`", ",", "56.10613874697602`"}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.7957337352154627`*^9}},
 CellLabel->
  "Out[229]=",ExpressionUUID->"d8b7b277-775f-43e8-888a-27a46e36bd5e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[0.5], Opacity[0.7], 
        LineBox[{{{0., 0.}, {-1., -1.}}, {{0., 0.}, {1., -1.}}, {{1., -1.}, {
         0., -2.}}, {{1., -1.}, {2., -2.}}, {{2., -2.}, {1., -3.}}, {{
         2., -2.}, {3., -3.}}}]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {GrayLevel[0.5], DiskBox[{0., 0.}, 0.14142135623730953]}, InsetBox[
          StyleBox["\<\"Total Chambers\\n1568\"\>",
           StripOnInput->False,
           FontSize->14], {-0.3676955262170048, 0.14142135623730953},
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.5], DiskBox[{-1., -1.}, 0.14142135623730953]}, 
         InsetBox[
          
          StyleBox["\<\"Controls\\n(T79G,Skipped)\\n\\!\\(\\*StyleBox[\\\"n\\\
\",FontSlant->\\\"Italic\\\"]\\)=74\"\>",
           StripOnInput->False,
           FontSize->14], {-1.4242640687119286, -1.4242640687119286},
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.5], DiskBox[{1., -1.}, 0.14142135623730953]}, InsetBox[
          
          StyleBox["\<\"Library Mutant \
Chambers\\n\\!\\(\\*StyleBox[\\\"n\\\",FontSlant->\\\"Italic\\\"]\\)=1218\"\>",
           StripOnInput->False,
           FontSize->14], {1.6363961030678928, -0.7171572875253809},
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.5], DiskBox[{0., -2.}, 0.14142135623730953]}, InsetBox[
          StyleBox["\<\"No Expression\\n([E]<0.3nM)\\n319\"\>",
           StripOnInput->False,
           FontSize->14], {-0.14142135623730953, -2.6222539674441623},
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[2, 3], 0], DiskBox[{2., -2.}, 0.14142135623730953]}, 
         InsetBox[
          StyleBox["\<\"Expression\\n([E]>0.3nM)\\n899\"\>",
           StripOnInput->False,
           FontSize->14], {2.6363961030678933, -1.8020101012677667},
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.5], DiskBox[{1., -3.}, 0.14142135623730953]}, InsetBox[
          StyleBox["\<\"Too Slow\\n764\"\>",
           StripOnInput->False,
           FontSize->14], {0.9292893218813452, -3.424264068711929},
          BaseStyle->"Graphics"]}, {
         {RGBColor[
           Rational[2, 3], 0, 0], DiskBox[{3., -3.}, 0.14142135623730953]}, 
         InsetBox[
          StyleBox["\<\"Measured\\n135\"\>",
           StripOnInput->False,
           FontSize->14], {3.1414213562373097, -3.424264068711929},
          BaseStyle->"Graphics"]}}},
      Epilog->InsetBox[
        BoxData[
         FormBox[
          StyleBox["\"A\"", 24, Bold, StripOnInput -> False], 
          TraditionalForm]], 
        Scaled[{0., 1.}]],
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->450], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {{}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], EdgeForm[{
          Opacity[0.5459999999999999], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-1.3815510557964275`, 
                 0.}, {-0.9210340371976184, 1}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{246.50909090909093`, 261.51818181818186`}, {
                135.7244176372712, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.9210340371976184, 
                 0.}, {-0.4605170185988092, 3}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{261.01818181818186`, 276.02727272727276`}, {
                134.67325291181362`, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.4605170185988092, 0.}, {0., 2}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{275.52727272727276`, 290.53636363636366`}, {
                135.1988352745424, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{0., 0.}, {0.4605170185988092, 2}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{290.03636363636366`, 305.04545454545456`}, {
                135.1988352745424, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0.4605170185988092, 0.}, {
                 0.9210340371976184, 2}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{304.54545454545456`, 319.55454545454546`}, {
                135.1988352745424, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0.9210340371976184, 0.}, {
                 1.3815510557964275`, 11}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{319.05454545454546`, 334.0636363636364}, {
                130.46859400998335`, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 11]& ,
             TagBoxNote->"11"],
            StyleBox["11", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[11, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.3815510557964275`, 0.}, {
                 1.842068074395237, 138}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{333.5636363636364, 348.5727272727273}, {
                63.71963394342761, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 138]& ,
             TagBoxNote->"138"],
            StyleBox["138", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[138, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.842068074395237, 0.}, {
                 2.302585092994046, 601}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{348.0727272727273, 
                363.0818181818182}, {-179.62499999999997`, 
                136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 601]& ,
             TagBoxNote->"601"],
            StyleBox["601", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[601, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.302585092994046, 0.}, {
                 2.763102111592855, 138}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{362.5818181818182, 377.5909090909091}, {
                63.71963394342761, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 138]& ,
             TagBoxNote->"138"],
            StyleBox["138", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[138, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.763102111592855, 0.}, {3.223619130191664, 1}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{377.0909090909091, 392.1}, {
                135.7244176372712, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
         {GrayLevel[0.5], Opacity[0.5], EdgeForm[{Opacity[0.5459999999999999],
           Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-6.907755278982137, 
                 0.}, {-6.447238260383328, 1}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{72.4, 87.4090909090909}, {135.7244176372712, 
                136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-5.986721241784519, 0.}, {-5.52620422318571, 1},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{101.41818181818184`, 116.42727272727274`}, {
                135.7244176372712, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-5.52620422318571, 0.}, {-5.065687204586901, 1},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{115.92727272727274`, 130.93636363636364`}, {
                135.7244176372712, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-5.065687204586901, 
                 0.}, {-4.605170185988092, 4}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{130.43636363636364`, 145.44545454545454`}, {
                134.14767054908484`, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 4]& ,
             TagBoxNote->"4"],
            StyleBox["4", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[4, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-4.605170185988092, 
                 0.}, {-4.144653167389282, 5}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{144.94545454545454`, 159.95454545454547`}, {
                133.62208818635605`, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 5]& ,
             TagBoxNote->"5"],
            StyleBox["5", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[5, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-4.144653167389282, 
                 0.}, {-3.684136148790473, 13}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{159.45454545454547`, 174.4636363636364}, {
                129.41742928452575`, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 13]& ,
             TagBoxNote->"13"],
            StyleBox["13", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[13, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-3.684136148790473, 
                 0.}, {-3.223619130191664, 8}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{173.9636363636364, 188.9727272727273}, {
                132.0453410981697, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 8]& ,
             TagBoxNote->"8"],
            StyleBox["8", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[8, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-3.223619130191664, 
                 0.}, {-2.763102111592855, 13}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{188.4727272727273, 203.4818181818182}, {
                129.41742928452575`, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 13]& ,
             TagBoxNote->"13"],
            StyleBox["13", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[13, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-2.763102111592855, 
                 0.}, {-2.302585092994046, 4}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{202.9818181818182, 217.9909090909091}, {
                134.14767054908484`, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 4]& ,
             TagBoxNote->"4"],
            StyleBox["4", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[4, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-2.302585092994046, 
                 0.}, {-1.842068074395237, 3}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{217.4909090909091, 232.5}, {
                134.67325291181362`, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-1.842068074395237, 
                 0.}, {-1.3815510557964275`, 1}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{232., 247.00909090909093`}, {
                135.7244176372712, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-1.3815510557964275`, 
                 0.}, {-0.9210340371976184, 1}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{246.50909090909093`, 261.51818181818186`}, {
                135.7244176372712, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.4605170185988092, 0.}, {0., 1}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{275.52727272727276`, 290.53636363636366`}, {
                135.7244176372712, 136.74999999999997`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], 
            "Tooltip"]& ]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {}}, {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-7.110382767165613, 0.},
      Epilog->{
        InsetBox[
         BoxData[
          FormBox[
           TemplateBox[{
             StyleBox["\"[E] > 0.3 nM\"", 16, StripOnInput -> False], 
             StyleBox["\"Skipped\"", 16, StripOnInput -> False]}, 
            "SwatchLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True],
            TraditionalForm]], 
         Scaled[{0.25, 0.9}]], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox["\"B\"", 24, Bold, StripOnInput -> False], 
           TraditionalForm]], 
         Scaled[{0.05, 0.95}]]},
      Frame->True,
      FrameLabel->{{
         FormBox[
          StyleBox[
          "\"Counts\"", SingleLetterItalics -> False, StripOnInput -> False], 
          TraditionalForm], None}, {
         FormBox[
          StyleBox[
          "\"[E] (nM)\"", SingleLetterItalics -> False, StripOnInput -> 
           False], TraditionalForm], None}},
      FrameStyle->Directive[20, 
        GrayLevel[0], FontFamily -> "Arial"],
      FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
          Composition[Part[#, 
            Span[1, All], 
            Span[1, 3]]& , 
           Charting`ScaledTicks[{Log, Exp}]], 
          Composition[Part[#, 
            Span[1, All], 
            Span[1, 3]]& , 
           Charting`ScaledFrameTicks[{Log, Exp}]]}}, {{
         Automatic, Automatic}, {{{-6.907755278982137, 
            FormBox["0.001`", StandardForm], {0.01, 0.}}, {-4.605170185988091, 
            FormBox[
             TagBox[
              InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
              NumberForm[#, {
                DirectedInfinity[1], 3}]& ], StandardForm], {0.01, 
            0.}}, {-2.3025850929940455`, 
            FormBox[
             TagBox[
              InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
              NumberForm[#, {
                DirectedInfinity[1], 3}]& ], StandardForm], {0.01, 0.}}, {
           0., 
            FormBox["1", StandardForm], {0.01, 0.}}, {2.302585092994046, 
            FormBox["10", StandardForm], {0.01, 0.}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-8.517193191416238, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-8.111728083308073, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-7.824046010856292, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-7.600902459542082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-7.418580902748128, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-7.264430222920869, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-7.1308988302963465`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-7.013115794639964, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-6.214608098422191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-5.809142990314028, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-5.521460917862246, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-5.298317366548036, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-5.115995809754082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-4.961845129926823, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-4.8283137373023015`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-4.710530701645918, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-3.912023005428146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-3.506557897319982, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-3.2188758248682006`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-2.8134107167600364`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-2.659260036932778, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-2.5257286443082556`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-2.4079456086518722`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-1.6094379124341003`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-1.2039728043259361`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-0.916290731874155, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-0.6931471805599453, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-0.5108256237659907, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-0.35667494393873245`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-0.2231435513142097, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-0.10536051565782628`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           0.6931471805599453, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           1.0986122886681098`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           1.3862943611198906`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           1.6094379124341003`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           1.791759469228055, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           1.9459101490553132`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           2.0794415416798357`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           2.1972245773362196`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           3.4011973816621555`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           3.6888794541139363`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           3.912023005428146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           4.0943445622221, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           4.248495242049359, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           4.382026634673881, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           4.499809670330265, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           4.605170185988092, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           5.298317366548036, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           5.703782474656201, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}}, {{-6.907755278982137, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.01, 
            0.}}, {-4.605170185988091, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.01, 
            0.}}, {-2.3025850929940455`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.01, 0.}}, {
           0., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.01, 0.}}, {
           2.302585092994046, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.01, 
            0.}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-8.517193191416238, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-8.111728083308073, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-7.824046010856292, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-7.600902459542082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-7.418580902748128, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-7.264430222920869, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-7.1308988302963465`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-7.013115794639964, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-6.214608098422191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-5.809142990314028, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-5.521460917862246, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-5.298317366548036, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-5.115995809754082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-4.961845129926823, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-4.8283137373023015`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-4.710530701645918, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-3.912023005428146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-3.506557897319982, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-3.2188758248682006`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-2.8134107167600364`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-2.659260036932778, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-2.5257286443082556`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-2.4079456086518722`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-1.6094379124341003`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-1.2039728043259361`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-0.916290731874155, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-0.6931471805599453, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-0.5108256237659907, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-0.35667494393873245`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-0.2231435513142097, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
            0.}}, {-0.10536051565782628`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           0.6931471805599453, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           1.0986122886681098`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           1.3862943611198906`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           1.6094379124341003`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           1.791759469228055, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           1.9459101490553132`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           2.0794415416798357`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           2.1972245773362196`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           3.4011973816621555`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           3.6888794541139363`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           3.912023005428146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           4.0943445622221, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           4.248495242049359, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           4.382026634673881, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           4.499809670330265, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           4.605170185988092, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           5.298317366548036, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}, {
           5.703782474656201, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 0.}}}}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      PlotRange->{{-6.907755278982137, 3.223619130191664}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{
        Composition[Part[#, 
          Span[1, All], 
          Span[1, 3]]& , 
         Charting`ScaledTicks[{Log, Exp}]], Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.609], Thickness[Small]}], {{}, 
         {RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0, 0], Opacity[0.5], 
          EdgeForm[{Opacity[0.609], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-11.05240844637142, 
                 0.}, {-10.59189142777261, 1}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{61.51781891972928, 87.00668877719136}, {
                133.18777193670329`, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-10.59189142777261, 
                 0.}, {-10.131374409173802`, 1}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{86.50668877719136, 111.99555863465332`}, {
                133.18777193670329`, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-10.131374409173802`, 
                 0.}, {-9.670857390574993, 5}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{111.49555863465332`, 136.9844284921154}, {
                109.37507573765575`, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 5]& ,
             TagBoxNote->"5"],
            StyleBox["5", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[5, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-9.670857390574993, 
                 0.}, {-9.210340371976184, 17}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{136.4844284921154, 161.97329834957742`}, {
                37.93698714051311, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 17]& ,
             TagBoxNote->"17"],
            StyleBox["17", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[17, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-9.210340371976184, 
                 0.}, {-8.749823353377373, 23}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{161.47329834957742`, 186.96216820703955`}, {
                2.217942841941806, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 23]& ,
             TagBoxNote->"23"],
            StyleBox["23", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[23, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-8.749823353377373, 
                 0.}, {-8.289306334778564, 21}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.46216820703955`, 211.95103806450157`}, {
                14.12429094146556, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 21]& ,
             TagBoxNote->"21"],
            StyleBox["21", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[21, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-8.289306334778564, 
                 0.}, {-7.828789316179756, 17}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{211.45103806450157`, 236.93990792196354`}, {
                37.93698714051311, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 17]& ,
             TagBoxNote->"17"],
            StyleBox["17", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[17, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-7.828789316179756, 
                 0.}, {-7.368272297580946, 14}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{236.43990792196354`, 261.9287777794256}, {
                55.79650928979876, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 14]& ,
             TagBoxNote->"14"],
            StyleBox["14", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[14, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-7.368272297580946, 
                 0.}, {-6.907755278982137, 8}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{261.4287777794256, 286.91764763688764`}, {
                91.51555358837008, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 8]& ,
             TagBoxNote->"8"],
            StyleBox["8", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[8, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{-6.907755278982137, 
                 0.}, {-6.447238260383328, 15}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{286.41764763688764`, 311.9065174943497}, {
                49.84333524003688, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 15]& ,
             TagBoxNote->"15"],
            StyleBox["15", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[15, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-6.447238260383328, 
                 0.}, {-5.986721241784519, 7}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{311.4065174943497, 336.89538735181173`}, {
                97.46872763813197, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 7]& ,
             TagBoxNote->"7"],
            StyleBox["7", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[7, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-5.986721241784519, 0.}, {-5.52620422318571, 3},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{336.39538735181173`, 361.88425720927376`}, {
                121.28142383717952`, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-5.52620422318571, 0.}, {-5.065687204586901, 3},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{361.38425720927376`, 386.8731270667358}, {
                121.28142383717952`, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
         {GrayLevel[0.5], Opacity[0.5], EdgeForm[{Opacity[0.609], Thickness[
          Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-10.59189142777261, 
                 0.}, {-10.131374409173802`, 20}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{86.50668877719136, 111.99555863465332`}, {
                20.07746499122746, 139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 20]& ,
             TagBoxNote->"20"],
            StyleBox["20", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[20, {}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-10.131374409173802`, 
                 0.}, {-9.670857390574993, 54}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{111.49555863465332`, 
                136.9844284921154}, {-182.3304527006767, 
                139.64094598646517`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 54]& ,
             TagBoxNote->"54"],
            StyleBox["54", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[54, {}], 
            "Tooltip"]& ]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {}}, {{{}, {}}, {}}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-11.17214287120711, 0.},
      Epilog->{
        InsetBox[
         BoxData[
          FormBox[
           TemplateBox[{
             StyleBox["\"Measured\"", 16, StripOnInput -> False], 
             StyleBox["\"T79G/Skipped\"", 16, StripOnInput -> False]}, 
            "SwatchLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True],
            TraditionalForm]], 
         Scaled[{0.8, 0.9}]], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox["\"C\"", 24, Bold, StripOnInput -> False], 
           TraditionalForm]], 
         Scaled[{0.05, 0.95}]]},
      Frame->True,
      FrameLabel->{{
         FormBox[
          StyleBox[
          "\"Counts\"", SingleLetterItalics -> False, StripOnInput -> False], 
          TraditionalForm], None}, {
         FormBox[
          StyleBox[
          "\"Initial Rate (\[Mu]M/s)\"", SingleLetterItalics -> False, 
           StripOnInput -> False], TraditionalForm], None}},
      FrameStyle->Directive[20, 
        GrayLevel[0], FontFamily -> "Arial"],
      FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
          Composition[Part[#, 
            Span[1, All], 
            Span[1, 3]]& , 
           Charting`ScaledTicks[{Log, Exp}]], 
          Composition[Part[#, 
            Span[1, All], 
            Span[1, 3]]& , 
           Charting`ScaledFrameTicks[{Log, Exp}]]}}, {{
         Automatic, Automatic}, {{{-9.903487552536127, 
            FormBox[
             TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
               TemplateBox[{"10", 
                 RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
                SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {
            0.01, 0.}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
               TemplateBox[{"10", 
                 RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
                SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {
            0.01, 0.}}, {-7.600902459542082, 
            FormBox[
             TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
               TemplateBox[{"10", 
                 RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
                SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {
            0.01, 0.}}, {-6.907755278982137, 
            FormBox["0.001`", TraditionalForm], {0.01, 
            0.}}, {-5.298317366548036, 
            FormBox[
             TagBox[
              InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
              NumberForm[#, {
                DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
            0.}}, {-11.512925464970229`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-10.819778284410283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-10.41431317630212, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-10.126631103850338`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.721165995742174, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.567015315914915, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.433483923290392, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.315700887634009, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-8.517193191416238, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-8.111728083308073, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.824046010856292, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.418580902748128, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.264430222920869, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.1308988302963465`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.013115794639964, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-6.214608098422191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.809142990314028, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.521460917862246, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.115995809754082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.961845129926823, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.8283137373023015`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.710530701645918, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.605170185988091, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.509860006183766, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.422848629194137, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.3428059215206005`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.268697949366879, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}}, {{-9.903487552536127, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-7.600902459542082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-6.907755278982137, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-5.298317366548036, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-11.512925464970229`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-10.819778284410283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-10.41431317630212, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-10.126631103850338`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.721165995742174, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.567015315914915, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.433483923290392, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.315700887634009, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-8.517193191416238, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-8.111728083308073, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.824046010856292, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.418580902748128, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.264430222920869, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.1308988302963465`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.013115794639964, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-6.214608098422191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.809142990314028, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.521460917862246, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.115995809754082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.961845129926823, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.8283137373023015`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.710530701645918, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.605170185988091, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.509860006183766, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.422848629194137, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.3428059215206005`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.268697949366879, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}}}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      PlotRange->{{-11.05240844637142, -5.065687204586901}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{
        Composition[Part[#, 
          Span[1, All], 
          Span[1, 3]]& , 
         Charting`ScaledTicks[{Log, Exp}]], Automatic}]},
    {
     GraphicsBox[{{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[{GrayLevel[0], Thickness[0.125]}], FaceForm[{
                GrayLevel[0.5], Opacity[0.7]}], DiskBox[{0, 0}], 
                {Opacity[0.1]}}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]]}],
             TraditionalForm], {0., 0.}, Automatic, Scaled[
            0.02]], CompressedData["
1:eJwB9QIK/SFib1JlAwAAAC4AAAABAAAAAgAAAGv45r0QMPC/VJsrNqq46T+4
0AiZNrjnP+tZCKhfnt4/HSAlnTTj4j/BXV7DWI/jP/3nIx2e1dI/A3M8l+XZ
8j/2t47W4xvWP/bHNG0sB+E/if0EQCv57D9IFNJ2yUHwP67V5a0HqAHAQUMH
zTIIAcDtBV7teJLvP+a97+TA5+8/Z5zytZ4G8D+IHRMQhGPrP3il4SnKXvu/
JevzHyDA/r/8uQ+SkB3Sv9xhL07KVrk/T8Cw2f2qvz86ZWYsTuD0v5fspqDF
fvO/ox/sgWKF8r+b5pNnhkfzv2uKRaVyAfu/wxCkh79E879WDdgzK5Huv5mD
kFLUnPO/jTvB0h7f+b+7mDvKDQT7v6sC1RSNIPa/KqN+1UUg7b8vVEwaD6by
v7ROy/Izs+i/sjm9aaZv4L/+dpZoZcLZv9KhkaTFOOW/tcu35fAh9r/Apeqs
I8Tgv5rNuMFzHADAgkqLV74IAcDp5ne11VL/v3si1ei6Efu/qX9B1uUf/b9J
Fr1+i9b5vwV7wrH/De0/floOs3p66T+C4ShSC73uPzmvVJHoGvM/EUo9f+tr
878tYmNr4iLuv7Xv1Yk03KM/v99qsALg679Vecsdq/Dnv+QQ/li+4ty/xWqd
sdDUtz99fNXeDzbmv1lXltJVKss/aw3oo0bOhb+OKvzcXkfSP7962+NbPPK/
SBje9MD1nD8L893dbeCaP/V47Kx3hco/AiPXm4lP8b8c6oxzAGrCP8a7M8Xd
AtM/DY5SMF9A9r/w4Iyl/TPxvzo4xaALMs0/bXPknZQn4j+KsvDecuL7v/uR
8PnHTfK/+zM+Gi2T379xKorqkyzfv/1aOjN84Na/40n7oG9XpT/OeWcUaK7j
P3mZrAyeF+M/dWmS5spt3T+HJ9h1w4LWPzG3+NNTmNM//UQ92nCb8r9ThaPY
6Ljlv6mCkEpilfO/AKWdkI9o7L9Ijlcn4lfnv03WgsVQINO/xF+B0Mxs6L+f
FaIj
           "]]}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
          TagBox[
           {Opacity[0.], 
            PointBox[{{-1.0117347162299903`, 0.8037921007170135}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$17564, {1}}]& ], 
          TagBox[
           {Opacity[0.], 
            PointBox[{{0.2942881855557287, 1.1781974704419447`}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$17564, {4}}]& ], 
          TagBox[
           {Opacity[0.], 
            PointBox[{{0.12370287480075713`, -1.3047620519995022`}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$17564, {12}}]& ], 
          TagBox[
           {Opacity[0.], 
            PointBox[{{-1.2049621625905391`, -1.6878534751819199`}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$17564, {14}}]& ], 
          TagBox[
           {Opacity[0.], 
            PointBox[{{-1.3832863782269957`, -0.5239427926327878}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$17564, {21}}]& ], 
          TagBox[
           {Opacity[0.], 
            PointBox[{{0.03878940756382524, -0.8710950322774734}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$17564, {28}}]& ], 
          TagBox[
           {Opacity[0.], 
            PointBox[{{0.0930910524015572, -0.6940993644929133}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$17564, {30}}]& ], 
          TagBox[
           {Opacity[0.], 
            PointBox[{{0.28560611324852736`, -1.1397360706975375`}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$17564, {32}}]& ], 
          TagBox[
           {Opacity[0.], 
            PointBox[{{0.2071981043199639, -1.0819183433069957`}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$17564, {34}}]& ], 
          TagBox[
           {Opacity[0.], 
            PointBox[{{-1.742785330639125, -1.1439895404120068`}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$17564, {38}}]& ], 
          TagBox[
           {Opacity[0.], PointBox[{{0.3061723299059507, -1.162949421403311}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$17564, {43}}]& ], 
          TagBox[
           {Opacity[0.], 
            PointBox[{{-0.6788219672418258, -1.2239706909823929`}}]},
           
           Annotation[#, {{Callout}, Charting`Private`Tag$17564, {
             44}}]& ]}}, {{{{}, {GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{-2.8284271247461907`, -2.82842712474619}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-2.8284271247461907`, -2.82842712474619}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-5.6568542494923815`, -5.65685424949238}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-7.6568542494923815`, -5.65685424949238}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.7016853001359991, -1.2468340238765663`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{-2.8284271247461907`, -2.82842712474619}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-2.8284271247461907`, -2.82842712474619}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-5.6568542494923815`, -5.65685424949238}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-7.6568542494923815`, -5.65685424949238}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.7016853001359991, -1.2468340238765663`}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{-9.656854249492383, -0.4568542494923751}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-9.656854249492383, -13.456854249492375`}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-46.65685424949238, -13.456854249492384`}, \
{-0.7016853001359991, -1.2468340238765663`}], 
                 Offset[{-46.65685424949238, -0.45685424949238396`}, \
{-0.7016853001359991, -1.2468340238765663`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"I188G*\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{-28.156854249492383, -6.9568542494923795}, \
{-0.7016853001359991, -1.2468340238765663}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{4., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{4., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{6., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{6., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{8., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{10., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{12., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{12., 0.}, {
                  0.3385059653659416, -1.162949421403311}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{4., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{4., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{6., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{6., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{8., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{10., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{12., 0.}, {0.3385059653659416, -1.162949421403311}], 
                 Offset[{12., 0.}, {
                  0.3385059653659416, -1.162949421403311}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{33., 6.500000000000003}, {
                  0.3385059653659416, -1.162949421403311}], 
                 Offset[{33., -6.499999999999997}, {
                  0.3385059653659416, -1.162949421403311}], 
                 Offset[{12.000000000000002`, -6.500000000000003}, {
                  0.3385059653659416, -1.162949421403311}], 
                 Offset[{11.999999999999998`, 6.499999999999997}, {
                  0.3385059653659416, -1.162949421403311}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"WT\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{22.5, 0.}, {0.3385059653659416, -1.162949421403311}], \
{0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{-2.82842712474619, 
                  2.8284271247461903`}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-2.82842712474619, 
                  2.8284271247461903`}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-4.242640687119285, 
                  4.242640687119286}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-4.242640687119285, 
                  4.242640687119286}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-5.65685424949238, 
                  5.656854249492381}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-7.65685424949238, 
                  5.656854249492381}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-9.65685424949238, 
                  5.656854249492381}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-9.65685424949238, 
                  5.656854249492381}, {-1.7656486635332984`, \
-1.1211262075178334`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{-2.82842712474619, 
                  2.8284271247461903`}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-2.82842712474619, 
                  2.8284271247461903`}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-4.242640687119285, 
                  4.242640687119286}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-4.242640687119285, 
                  4.242640687119286}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-5.65685424949238, 
                  5.656854249492381}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-7.65685424949238, 
                  5.656854249492381}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-9.65685424949238, 
                  5.656854249492381}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-9.65685424949238, 
                  5.656854249492381}, {-1.7656486635332984`, \
-1.1211262075178334`}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{-9.65685424949238, 
                  13.456854249492384`}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-9.65685424949238, 
                  0.45685424949238396`}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-45.65685424949238, 
                  0.45685424949237685`}, {-1.7656486635332984`, \
-1.1211262075178334`}], 
                 Offset[{-45.65685424949238, 
                  13.456854249492377`}, {-1.7656486635332984`, \
-1.1211262075178334`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"A302V\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{-27.65685424949238, 6.95685424949238}, \
{-1.7656486635332984, -1.1211262075178334}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-5.65685424949238, 5.656854249492381}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-7.65685424949238, 5.656854249492381}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  0.18433477142579055`, -1.0590550104128222`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-5.65685424949238, 5.656854249492381}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-7.65685424949238, 5.656854249492381}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  0.18433477142579055`, -1.0590550104128222`}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{-9.65685424949238, 13.456854249492384`}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-9.65685424949238, 0.45685424949238485`}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-46.65685424949238, 0.45685424949237596`}, {
                  0.18433477142579055`, -1.0590550104128222`}], 
                 Offset[{-46.65685424949238, 13.456854249492377`}, {
                  0.18433477142579055`, -1.0590550104128222`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"N173G\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{-28.15685424949238, 6.95685424949238}, \
{0.18433477142579055, -1.0590550104128222}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  0.3084694461427007, -1.116872737803364}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  0.3084694461427007, -1.116872737803364}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{46.65685424949238, 13.456854249492384`}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{46.65685424949238, 0.45685424949238396`}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{9.65685424949238, 0.4568542494923751}, {
                  0.3084694461427007, -1.116872737803364}], 
                 Offset[{9.65685424949238, 13.456854249492375`}, {
                  0.3084694461427007, -1.116872737803364}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"E415G\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{28.15685424949238, 6.9568542494923795}, \
{0.3084694461427007, -1.116872737803364}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  0.11595438529573056`, -0.67123603159874}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  0.11595438529573056`, -0.67123603159874}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{45.65685424949238, 13.456854249492384`}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{45.65685424949238, 0.45685424949238307`}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{9.65685424949238, 0.45685424949237596`}, {
                  0.11595438529573056`, -0.67123603159874}], 
                 Offset[{9.65685424949238, 13.456854249492377`}, {
                  0.11595438529573056`, -0.67123603159874}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"K162V\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{27.65685424949238, 6.9568542494923795}, \
{0.11595438529573056, -0.67123603159874}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{4., 0.}, {0.07112304302381611, -0.8710950322774734}], 
                 Offset[{4., 0.}, {0.07112304302381611, -0.8710950322774734}],
                  Offset[{6., 0.}, {
                  0.07112304302381611, -0.8710950322774734}], 
                 Offset[{6., 0.}, {0.07112304302381611, -0.8710950322774734}],
                  Offset[{8., 0.}, {
                  0.07112304302381611, -0.8710950322774734}], 
                 Offset[{10., 0.}, {
                  0.07112304302381611, -0.8710950322774734}], 
                 Offset[{12., 0.}, {
                  0.07112304302381611, -0.8710950322774734}], 
                 Offset[{12., 0.}, {
                  0.07112304302381611, -0.8710950322774734}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{4., 0.}, {0.07112304302381611, -0.8710950322774734}], 
                 Offset[{4., 0.}, {0.07112304302381611, -0.8710950322774734}],
                  Offset[{6., 0.}, {
                  0.07112304302381611, -0.8710950322774734}], 
                 Offset[{6., 0.}, {0.07112304302381611, -0.8710950322774734}],
                  Offset[{8., 0.}, {
                  0.07112304302381611, -0.8710950322774734}], 
                 Offset[{10., 0.}, {
                  0.07112304302381611, -0.8710950322774734}], 
                 Offset[{12., 0.}, {
                  0.07112304302381611, -0.8710950322774734}], 
                 Offset[{12., 0.}, {
                  0.07112304302381611, -0.8710950322774734}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{49., 6.500000000000004}, {
                  0.07112304302381611, -0.8710950322774734}], 
                 Offset[{49., -6.499999999999996}, {
                  0.07112304302381611, -0.8710950322774734}], 
                 Offset[{12., -6.500000000000004}, {
                  0.07112304302381611, -0.8710950322774734}], 
                 Offset[{12., 6.499999999999996}, {
                  0.07112304302381611, -0.8710950322774734}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"Y112G\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{30.5, 0.}, \
{0.07112304302381611, -0.8710950322774734}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 
                  2.82842712474619}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{2.8284271247461903`, 
                  2.82842712474619}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{4.242640687119286, 
                  4.242640687119285}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{4.242640687119286, 
                  4.242640687119285}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{5.656854249492381, 
                  5.65685424949238}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{7.65685424949238, 
                  5.65685424949238}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{9.65685424949238, 
                  5.65685424949238}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{9.65685424949238, 
                  
                  5.65685424949238}, {-1.3604230453328223`, \
-0.5010794597386145}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 
                  2.82842712474619}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{2.8284271247461903`, 
                  2.82842712474619}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{4.242640687119286, 
                  4.242640687119285}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{4.242640687119286, 
                  4.242640687119285}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{5.656854249492381, 
                  5.65685424949238}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{7.65685424949238, 
                  5.65685424949238}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{9.65685424949238, 
                  5.65685424949238}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{9.65685424949238, 
                  5.65685424949238}, {-1.3604230453328223`, \
-0.5010794597386145}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{45.65685424949238, 
                  13.456854249492384`}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{45.65685424949238, 
                  0.45685424949238307`}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{9.65685424949238, 
                  0.45685424949237596`}, {-1.3604230453328223`, \
-0.5010794597386145}], 
                 Offset[{9.65685424949238, 
                  13.456854249492377`}, {-1.3604230453328223`, \
-0.5010794597386145}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"T114G\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{27.65685424949238, 6.9568542494923795}, \
{-1.3604230453328223, -0.5010794597386145}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 
                  2.82842712474619}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{2.8284271247461903`, 
                  2.82842712474619}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{4.242640687119286, 
                  4.242640687119285}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{4.242640687119286, 
                  4.242640687119285}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{5.656854249492381, 
                  5.65685424949238}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{7.65685424949238, 
                  5.65685424949238}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{9.65685424949238, 
                  5.65685424949238}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{9.65685424949238, 
                  5.65685424949238}, {-1.1820988296963657`, \
-1.6649901422877464`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 
                  2.82842712474619}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{2.8284271247461903`, 
                  2.82842712474619}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{4.242640687119286, 
                  4.242640687119285}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{4.242640687119286, 
                  4.242640687119285}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{5.656854249492381, 
                  5.65685424949238}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{7.65685424949238, 
                  5.65685424949238}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{9.65685424949238, 
                  5.65685424949238}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{9.65685424949238, 
                  5.65685424949238}, {-1.1820988296963657`, \
-1.6649901422877464`}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{45.65685424949238, 
                  13.456854249492384`}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{45.65685424949238, 
                  0.45685424949238307`}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{9.65685424949238, 
                  0.45685424949237596`}, {-1.1820988296963657`, \
-1.6649901422877464`}], 
                 Offset[{9.65685424949238, 
                  13.456854249492377`}, {-1.1820988296963657`, \
-1.6649901422877464`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"K162A\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{27.65685424949238, 6.9568542494923795}, \
{-1.1820988296963657, -1.6649901422877464}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{2.82842712474619, -2.8284271247461907`}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{2.82842712474619, -2.8284271247461907`}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{4.242640687119285, -4.242640687119286}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{4.242640687119285, -4.242640687119286}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{5.65685424949238, -5.6568542494923815`}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{7.65685424949238, -5.6568542494923815`}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{9.65685424949238, -5.6568542494923815`}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{9.65685424949238, -5.6568542494923815`}, {
                  0.14656620769493048`, -1.3276253848936757`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{2.82842712474619, -2.8284271247461907`}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{2.82842712474619, -2.8284271247461907`}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{4.242640687119285, -4.242640687119286}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{4.242640687119285, -4.242640687119286}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{5.65685424949238, -5.6568542494923815`}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{7.65685424949238, -5.6568542494923815`}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{9.65685424949238, -5.6568542494923815`}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{9.65685424949238, -5.6568542494923815`}, {
                  0.14656620769493048`, -1.3276253848936757`}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{45.65685424949238, -0.45685424949237774`}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{45.65685424949238, -13.456854249492377`}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{9.65685424949238, -13.456854249492384`}, {
                  0.14656620769493048`, -1.3276253848936757`}], 
                 Offset[{9.65685424949238, -0.45685424949238485`}, {
                  0.14656620769493048`, -1.3276253848936757`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"K162A\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{27.65685424949238, -6.956854249492381}, \
{0.14656620769493048, -1.3276253848936757}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  0.3171515184499021, 1.201060803336118}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  0.3171515184499021, 1.201060803336118}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{45.65685424949238, 13.456854249492384`}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{45.65685424949238, 0.45685424949238307`}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{9.65685424949238, 0.45685424949237596`}, {
                  0.3171515184499021, 1.201060803336118}], 
                 Offset[{9.65685424949238, 13.456854249492377`}, {
                  0.3171515184499021, 1.201060803336118}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"R164A\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{27.65685424949238, 6.9568542494923795}, \
{0.3171515184499021, 1.201060803336118}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 
                  2.82842712474619}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{2.8284271247461903`, 
                  2.82842712474619}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{4.242640687119286, 
                  4.242640687119285}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{4.242640687119286, 
                  4.242640687119285}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{5.656854249492381, 
                  5.65685424949238}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{7.65685424949238, 
                  5.65685424949238}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{9.65685424949238, 
                  5.65685424949238}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{9.65685424949238, 
                  5.65685424949238}, {-0.988871383335817, 
                  0.8266554336111868}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 
                  2.82842712474619}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{2.8284271247461903`, 
                  2.82842712474619}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{4.242640687119286, 
                  4.242640687119285}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{4.242640687119286, 
                  4.242640687119285}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{5.656854249492381, 
                  5.65685424949238}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{7.65685424949238, 
                  5.65685424949238}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{9.65685424949238, 
                  5.65685424949238}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{9.65685424949238, 
                  5.65685424949238}, {-0.988871383335817, 
                  0.8266554336111868}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{45.65685424949238, 
                  13.456854249492384`}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{45.65685424949238, 
                  0.45685424949238307`}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{9.65685424949238, 
                  0.45685424949237596`}, {-0.988871383335817, 
                  0.8266554336111868}], 
                 Offset[{9.65685424949238, 
                  13.456854249492377`}, {-0.988871383335817, 
                  0.8266554336111868}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"R164A\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{27.65685424949238, 6.9568542494923795}, \
{-0.988871383335817, 0.8266554336111868}], {0, 0}]}]}}, {}}, {}}}, {{{}, {}, 
         TagBox[
          {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxFxXswE3AcAPDdUtnaaXnkNZtZyika4WR15nEXG3elOlrM5ZHDRGK6xUKy
VeJYJXpcHjluODUpi6yu7hInr3VrXCfd2Qm3udowseqPfX9/fO5DTcqOScVi
MJjof/7PmMpbMJlsFOZVvQ3ayHU0//7IL4kB3XXa48++JfSe0SnCcTWa8CHU
+0k3+lsn8SIzHV1S2m4oHreGb9hnDj29tQsmv/dousQhwmuRo56FXCs4SBPf
GKfcAdfKNBRRAQ6+fLaYvjG3DV7MJPF5SRZwobTnrRcOC1Nu9zOzjJsD5oVU
PJ522AhvESUcHarSw9VNw/ewJTpYeiRn9XW1BhYzN8huHWqY46OcjOXIYVNC
KG6Y9THYvHOahayGMQNHCAbYni/nYVkVdXhscxl2qo63JOFXYLbfg8B3b9bh
IGJiA4+HYZo/FJvruncEC9f5l2bM0bbCVwLLqInt2+EQgnj8Og4PX7MQ6lLq
CLDvnZyvLJedcJLAl6uVE+H5PvfyuxhreFbjKK2h28A13Ap/CccWLtYUGLSP
7OCZuJTupqHdsHB6sFVm7QBXRtDrncId4VMYu+WybCc47lOukN3tDH8uHLNM
/0GCy0LaBmf3k2HtCZM28QIFTnOX4uqjXWG9pyTguQ7d17z+XS+mwtxwGpNB
doMpWaJebwXaEc97Fh1Lg1vDigS6M+iAosowSTw6RtelVJ1D3/yiX0vmoY2N
V0MFJehphmSiRYrOyG9+GNmJXu18kbrYhbZ1U6349KCjLF1I/Qp0/2RLyoQS
HWX1youvQquPDRocptAG+YKYO4P2bqB3zP9E96lD+BVLaJbtyeCDOvR5Uf5Y
nh79W1Feb7+KLjXWJsuNaKJf24GEDfTjLLneZEL/BVgOQIc=
            "]]},
          Annotation[#, "Charting`Private`Tag$18127#1"]& ], 
         TagBox[
          {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVyXk41HkcwHFZ10xizCFXmPmuSUiTZGOyv49jV0w20ZZbObJpLFJDQpRb
5YmQik2qZXVYpIj9fWvbZ3PkSDKkKLsmRaZag0G2/ng/7z9e7OAozzBFBQUF
9899Of/ZwbdLSwycbZ/uZGvNwuLG8inXeQbmGtS6HF/HwqKznR8LZAz8QP5C
8MiMhWt+NF1YPcnAn25v2rGHzcJfdz9T9xhk4ANWE6HZGiys/pej5cV6BvZd
7ZUx8JqJX9ygxcA+BrbQYrceLmXi1GPXZCmP6bjrn+YfmlSYOHvl/vYruVq4
//ARNEzSseED04pYXxoWcm3nr53SwnOu3WaJgRrYLTM+Mi6Ehu0k/pe8+5bj
p9VJnu32Gri4TmKUGUfBG+LVuueGl+N4vxTe4pgKZhqXj0Rto+CJ/QYiYbAS
zuLZc4fbVHBidcO9tRRFrBPdH3MxRgkbnWyBSPkn0jz3qEfVv8twMptKRbZy
8tZvggg16hL5VWaAfXveNGlH+6W0ZrecPF3RUaSYKiUfWmjMSLZPk9Wbo2fv
npaQJ3897P9niZTMgkVDzvVBsrZ2Wbff7Bjpu77vyS7fJtI6hi8yHxwglwIc
KR1uDwlRf8H7lvhmUj9cqS6fP0LUeiq3GYW3EVsSSIHZ7XFiMHxzbhBrhKjL
Y3f0fHpPzKrjfrHfG0LvtL+aAXWGGFXVr7Sx/UAIrM9vuv/HPMGs9hEPTcoI
O1pQuVCoAPbFia8+qi4QG3YdMOZ2KkJx/vboujAFKNl4LGIMKcNi9J6m2LuK
cGRTGjvomioMx4bETDgpg4N61uN0ChWuuIRzGOWqcFwpWRpaog4SIgA+8Khg
dSZ6wG2VJhR1bVsjrleH4ASrwKkmGpjynNWFKzRhvNkko1CBDud9WZb+HTR4
JdGtzucx4Ew6xctnQQvyA09sLPBlgvPCkec+XAakSOJkU6UssEoPL2vYx4QR
79D6inZtyJd5+UcUsyB5qLWyjq4DvIRGj4QX2nBqC++cnrMuwJiR40tNHdih
wHqfFqUHKmVKJQK+Lni3HUgW1OsD9adgLj1FD7oSe9T2jRpAqt69mnU39SHN
oar1lbkh2AyfjamaMYCp7UtTQT8bQfnUu2KunSGEm1RTzrkbQ8rr7+7K9xrB
tFmBTa3UGDrncnIKdxpD8+X5l9NZbCiM/bhx4J0xBDoj4Bty4BuG/hnDNDYY
RWY2WmIOzPKPrqBzOaBLFf7uvgvBB3GI8voWDlQ6JSVIfRCk0g919pIcsEk6
5VTgj0Bza0ax6D4HPKU1feI9CMzJyjXNf3Mg5+n0XIgQQciVSXeXxxyQXzrq
mJCKoDcmrihAwoEhfkHv1WoEt6i5q3O0EEQcunzB9QYCJ+cLUgsmgtkbt8Im
ahD0JF1v7NJGwOSIZ9Y3IJiUdglYBgi2qq0yaMEITPqZ0Re5CFqeXA3t7UNQ
VFF2p4H/2TXurBWJP/vzm6k+3yIYdGmV6TxDUKd9z20BEMia3mYFjiDoyh4d
cvgegWU57/r4GwSq0abLHnkgaB50EJ2YRFBYZdsW5YXAjelFrJMiQKNuBfSd
CPZmHuo5OI2A2Blp4u2H4D+ccW7lLIJHecnv5AEIjsmLQ5rkCPxa826X7kZA
s66yCFhEMK5YngIhCMoim6aXlhDEba51HQ1D8D9loDH3
            "]]},
          Annotation[#, "Charting`Private`Tag$18127#2"]& ], 
         TagBox[
          {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVjmk81HkcgMdRGiljRoRhzPz+WlFWQofa+VK565PUyuRoRSepHEUI0Vhb
LNNStPNxpSyJJaH4/9KxrFlXSI5IW5Mio5oJs5rVi+fzvHjePOyA0F1ByhQK
Zfs832w3EP5eoWDgiTOBgietdNxXlz/pImfgVK+MbNpfdBx5pe2TQMbApraN
ubwmOq7YY/rfdxMMHPBJt+hDLR0THQMaO/sZuDektVqnmI41HjtY5FUzcGOA
Ve/BeDp+UU47CUcY+Fd3ip6aDR0nJJbJ4rvoeK3xNaGTUAv/rHus9fovWtju
Di8s2IuGjR6ZFobxaDjvoWVWuPtSPOPSYRbjtxT7Jt+OpsoW441in4K9PYux
kLPp4+tgKs6uErP4p6lY/uFJqLamGj6zL95y7s1CPJjlH58ap4rHjzEjgwNU
8c4b8sczM0o4prTmwWqqMn7wjzmKtFeQrEsNEDL7lXyrEjPCXzlLxrHV1dGG
WdLpSnPJ5sNSUoXvu7k1XUqK5gyGXjdKyIxCUZZygoSsttYJ2bhfTJZuOjF9
L0NMRu3uDx0dHiBTYM6Ic6ufLDs+eNqquIHkrenp9uLVk0sq83UV3i1cha8D
VeTazB30vJEsPzzMNTikWpVpN8JNjeKH+Q6NcZ2jSTezu2PcfY7sC9FlU9yq
dLao8+sU993yA6vutsu4+hk+i5jqX7ge+sLDSgNyrpt17vqmRjn3gd9x0VMn
Cmyk+ecHB1Ogt/ucx3C3Mqz1OmW8ok0Z2g0EHVdsF8BVm8Sjb9ACsJkt0Pe+
qAZn1yex/cvUQHeuqLNTWx3sNVK6kqnqMNRxM3H6pAacV42TBF7VAFaLMO+Z
kiZYXT7x3NVQEw6VNT960USDgGgrv8l6GlQMOtSYTmrB2H2TC79R6LCOZfui
zZoBo2K90kxLBli6mqmIArUh0++ijYCnDSP42iVR2jKIF5+WTf6+DNpcUnas
7NKBkb2B1YWtOmBxL1xjSKELcYMtN6voy0H0Qz9lwlEP0pwtc/S36sHgH/DR
84w+7KYsm0oK1YeCABOXxkID2Pv3qTi3agMoXnW+N+ktE9pjOhcdecUEw+GX
+wt0jSDJvqRl1NwIugrr2Mz9LJj0UEz6H2eBUb9akbuHMRwyKaXmbDeGtB+r
7tSIjUFqJrD9U2IMTJ/c0bZUNtwvkr+UprDhVY9KGh1xwG8rAjsjDiRHmI97
1XKAFcKvs8AccBSmB7nxEOipB1du90IAduG+R6cQ3NwSGy3xRtAenrxiyWcE
trFpWwQ+CHzLsyZvyxDsklT09P2EIIpdlyCVI0jtlc4cCEZQqfb1evxCAmYL
zjlEJyBgd/M/ZBkQMGgneFpcikAlJPfcw20EHI0ouuZSjiCjuMz5oDMB0+V3
gsYrELBGGrSobgRoc/q+rKmZf/YcKdyxkwD3RYbMBowgbINJ83MeAQ3dxYFP
exD8u+A2TRI635fWro7sm+9c/DzzFAH9Ti2y5QMIlKI6C2wiCJDVv0/xG0Fg
OP7J+mw0ARb5lrfG3iHY07Xee2EyAff77SMvTiB4tdiVU8InwFXbk/u9BMHJ
bfveu6UScJAf0RkuRXCpNjY2I52Az/hCju40AoOPaY7WmQQkzmYfqJ9FUGKe
p/nsMgE065JVvnMI1gVV9kVlEyAMqZcqFAgeC5vymTkE/A9Kkz54
            "]]},
          Annotation[#, "Charting`Private`Tag$18127#3"]& ]}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(\\*SuperscriptBox[StyleBox[\\\"R\\\",FontSlant->\\\"\
Italic\\\"], \\\"2\\\"]\\)=0.63\"", 14, StripOnInput -> False], 
           TraditionalForm]], 
         Scaled[{0.2, 0.9}]], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox["\"RMSE=0.61\"", 14, StripOnInput -> False], 
           TraditionalForm]], 
         Scaled[{0.2, 0.8}]], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(\\*StyleBox[\\\"n\\\",FontSlant->\\\"Italic\\\"]\\)=46\"",
             14, StripOnInput -> False], TraditionalForm]], 
         Scaled[{0.2, 0.7}]], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox["\"D\"", 24, Bold, StripOnInput -> False], 
           TraditionalForm]], 
         Scaled[{0.05, 0.95}]]},
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"Log10(\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"\
Italic\\\"], \\\"cat\\\"]\\)) (rep.2) (/s)\"", TraditionalForm], None}, {
         FormBox[
         "\"Log10(\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"\
Italic\\\"], \\\"cat\\\"]\\)) (rep.1) (/s)\"", TraditionalForm], None}},
      FrameStyle->Directive[24, 
        GrayLevel[0], FontFamily -> "Arial"],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{100, 20}, {100, 50}},
      ImageSize->475,
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-2.9060159014159614`, 
       1.8930394544268392`}, {-2.9060159014159614`, 1.8930394544268392`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[{GrayLevel[0], Thickness[0.125]}], FaceForm[{
                GrayLevel[0.5], Opacity[0.7]}], DiskBox[{0, 0}], 
                {Opacity[0.1]}}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]]}],
             TraditionalForm], {0., 0.}, Automatic, Scaled[
            0.02]], CompressedData["
1:eJwNzX1Qy3EAx/HJbW377beH9v0poieSZ0u5S8Sny4Yc1UwT4Sx1eSzqFFke
ynouXaclPZyHm4e77lIRUmqiJEwz0jkPeTihXJe6xRn74/Xn+96emgRl7EQW
i7XAboKdg92lrgZaEUWhwT9kx9RcgqPRhdMirhAMv+NYe0ekCHrq7m+lCV6+
trimqAmY8XSJQ5UTBrOVkonHCbjW7IHtAicY11rGv3pKkb81tL74kBSSXGdN
3mSCX0b20gguH206d99mVwq+05NdamUM1C1v3Yv6CZrezmyyXCWITEkuP3OH
IPXv78NptTSMvGfaE14UNs6O+WCMsX/inB2GPhP0yL9fjxBKoWrUdQa3Utip
+OehSxCg/2JGUM9ZAVIfVRqiLgnAd9SESXw4MMStn/wGFDakhdwK5QogX105
tuWMvcuuq1qu56Jal4+RExx4fUvh3JXzoHs5GMTroxH9fdNYTR+FksgQrdWb
xu2Wmw8q1oug2fui5n28GA9LE9NUbBFKPpXow0vFCL5Q3TZpLkHFsRr1AsLF
lM7ylS+aOCi15KgDFFzErLM4mM9zIR5IPuhS54jAkobZLW48jMfxRhVuDMwu
ZWGZSoKxAsMPYS2BKaljYewowaxEa7LrfhrtXVErYhRCRO3ZtLk1UIren2+8
pQlCeKv8Ui8vdkSGzCTTT6FQXLSGmjFPBEWseZbiCAdOxm75xRQaEcZRXl0z
H6WnB+If72LQaaruDr8hRMe/yrzbXAYVXvdsRSaCqq6Ty/pHCN6F2cz6ISFW
sdp3axsY3FA5WhfmMCj0kE898FEE1bes57ICMVzLAjsMTgwGtiXlNScy8LjF
1gaFsBFeVqTZl8VHXXABS5pF45qyvq03lMYnbb/s/mchdE/F10zvxRgOpRbn
+jPY03fS7VwcA5+ARrZfNAPjki9q2kqQWfxn9Skbgd6HVq6aL8Qcbb05UinB
0KJaGzlKI0yD+PQeHp4Yroy98uLDMz28vLxRBN9p+21P/Cj8B1MZLjk=
           "]]}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
          TagBox[
           {Opacity[0.], PointBox[{{3.4185906477735717`, 5.13487388584797}}]},
           
           Annotation[#, {{Callout}, Charting`Private`Tag$18459, {1}}]& ], 
          TagBox[
           {Opacity[0.], 
            PointBox[{{4.7639835166787226`, 3.4688754716980075`}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$18459, {12}}]& ], 
          TagBox[
           {Opacity[0.], PointBox[{{3.580249120416905, 2.7690759851256006`}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$18459, {14}}]& ], 
          TagBox[
           {Opacity[0.], PointBox[{{4.146791809465088, 5.0420789960558645`}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$18459, {21}}]& ], 
          TagBox[
           {Opacity[0.], PointBox[{{4.80737439312619, 3.8042357404756153`}}]},
           
           Annotation[#, {{Callout}, Charting`Private`Tag$18459, {28}}]& ], 
          TagBox[
           {Opacity[0.], PointBox[{{2.901198329035213, 3.387983685830535}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$18459, {29}}]& ], 
          TagBox[
           {Opacity[0.], PointBox[{{3.896553123648069, 2.8097041310799424`}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$18459, {30}}]& ], 
          TagBox[
           {Opacity[0.], PointBox[{{5.353315009360946, 3.8385330187103115`}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$18459, {32}}]& ], 
          TagBox[
           {Opacity[0.], PointBox[{{5.238167710764769, 3.866500526617514}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$18459, {34}}]& ], 
          TagBox[
           {Opacity[0.], PointBox[{{2.657832123505628, 3.3161266040870387`}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$18459, {38}}]& ], 
          TagBox[
           {Opacity[0.], PointBox[{{5.248555317263143, 3.7721086893333893`}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$18459, {43}}]& ], 
          TagBox[
           {Opacity[0.], PointBox[{{4.330409343557486, 3.685586919548192}}]},
           Annotation[#, {{Callout}, Charting`Private`Tag$18459, {44}}]& ], 
          TagBox[
           {Opacity[0.], PointBox[{{3.9646503501715107`, 3.400295245871938}}]},
           
           Annotation[#, {{Callout}, Charting`Private`Tag$18459, {
             46}}]& ]}}, {{{{}, {GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  3.984499474946086, 3.4201443706465136`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  3.984499474946086, 3.4201443706465136`}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{46.65685424949238, 13.456854249492384`}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{46.65685424949238, 0.45685424949238396`}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{9.65685424949238, 0.4568542494923751}, {
                  3.984499474946086, 3.4201443706465136`}], 
                 Offset[{9.65685424949238, 13.456854249492375`}, {
                  3.984499474946086, 3.4201443706465136`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"Y306G\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{28.15685424949238, 6.9568542494923795}, \
{3.984499474946086, 3.4201443706465136}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-5.65685424949238, 5.656854249492381}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-7.65685424949238, 5.656854249492381}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  4.310560218782911, 3.7054360443227674`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-5.65685424949238, 5.656854249492381}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-7.65685424949238, 5.656854249492381}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  4.310560218782911, 3.7054360443227674`}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{-9.65685424949238, 13.456854249492384`}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-9.65685424949238, 0.45685424949238485`}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-46.65685424949238, 0.45685424949237596`}, {
                  4.310560218782911, 3.7054360443227674`}], 
                 Offset[{-46.65685424949238, 13.456854249492377`}, {
                  4.310560218782911, 3.7054360443227674`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"I188G*\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{-28.15685424949238, 6.95685424949238}, \
{4.310560218782911, 3.7054360443227674}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{-2.8284271247461907`, -2.82842712474619}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-2.8284271247461907`, -2.82842712474619}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-5.6568542494923815`, -5.65685424949238}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-7.6568542494923815`, -5.65685424949238}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, {
                  5.228706192488568, 3.752259564558814}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{-2.8284271247461907`, -2.82842712474619}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-2.8284271247461907`, -2.82842712474619}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-5.6568542494923815`, -5.65685424949238}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-7.6568542494923815`, -5.65685424949238}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, {
                  5.228706192488568, 3.752259564558814}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{-9.656854249492385, -0.45685424949237685`}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-9.656854249492381, -13.456854249492377`}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-30.656854249492383`, -13.456854249492382`}, {
                  5.228706192488568, 3.752259564558814}], 
                 Offset[{-30.656854249492383`, -0.4568542494923822}, {
                  5.228706192488568, 3.752259564558814}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"WT\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{-20.156854249492383, -6.9568542494923795}, \
{5.228706192488568, 3.752259564558814}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{-2.8284271247461907`, -2.82842712474619}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-2.8284271247461907`, -2.82842712474619}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-5.6568542494923815`, -5.65685424949238}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-7.6568542494923815`, -5.65685424949238}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, {
                  2.6379829987310526`, 3.2962774793124634`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{-2.8284271247461907`, -2.82842712474619}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-2.8284271247461907`, -2.82842712474619}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-5.6568542494923815`, -5.65685424949238}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-7.6568542494923815`, -5.65685424949238}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, {
                  2.6379829987310526`, 3.2962774793124634`}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{-9.656854249492383, -0.45685424949237596`}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-9.656854249492383, -13.456854249492377`}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-45.65685424949238, -13.456854249492384`}, {
                  2.6379829987310526`, 3.2962774793124634`}], 
                 Offset[{-45.65685424949238, -0.45685424949238307`}, {
                  2.6379829987310526`, 3.2962774793124634`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"A302V\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{-27.656854249492383, -6.9568542494923795}, \
{2.6379829987310526, 3.2962774793124634}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  5.258016835539344, 3.886349651392089}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  5.258016835539344, 3.886349651392089}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{46.65685424949238, 13.456854249492384`}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{46.65685424949238, 0.45685424949238396`}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{9.65685424949238, 0.4568542494923751}, {
                  5.258016835539344, 3.886349651392089}], 
                 Offset[{9.65685424949238, 13.456854249492375`}, {
                  5.258016835539344, 3.886349651392089}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"N173G\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], Offset[{28.15685424949238, 6.9568542494923795},
                {5.258016835539344, 3.886349651392089}], {0, 0}]}], 
            GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{4., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{4., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{6., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{6., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{8., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{10., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{12., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{12., 0.}, {5.381385910818387, 
                  3.8385330187103115`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{4., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{4., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{6., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{6., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{8., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{10., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{12., 0.}, {5.381385910818387, 3.8385330187103115`}], 
                 Offset[{12., 0.}, {5.381385910818387, 
                  3.8385330187103115`}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{49., 6.500000000000004}, {5.381385910818387, 
                  3.8385330187103115`}], 
                 Offset[{49., -6.499999999999996}, {5.381385910818387, 
                  3.8385330187103115`}], 
                 Offset[{12., -6.500000000000004}, {5.381385910818387, 
                  3.8385330187103115`}], 
                 Offset[{12., 6.499999999999996}, {5.381385910818387, 
                  3.8385330187103115`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"E415G\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{30.5, 0.}, {5.381385910818387, 3.8385330187103115}], \
{0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  3.9164022484226444`, 2.829553255854518}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  3.9164022484226444`, 2.829553255854518}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{45.65685424949238, 13.456854249492384`}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{45.65685424949238, 0.45685424949238307`}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{9.65685424949238, 0.45685424949237596`}, {
                  3.9164022484226444`, 2.829553255854518}], 
                 Offset[{9.65685424949238, 13.456854249492377`}, {
                  3.9164022484226444`, 2.829553255854518}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"K162V\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{27.65685424949238, 6.9568542494923795}, \
{3.9164022484226444, 2.829553255854518}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-5.65685424949238, 5.656854249492381}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-7.65685424949238, 5.656854249492381}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  2.8813492042606375`, 3.4078328106051106`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-5.65685424949238, 5.656854249492381}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-7.65685424949238, 5.656854249492381}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  2.8813492042606375`, 3.4078328106051106`}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{-9.65685424949238, 13.456854249492384`}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-9.65685424949238, 0.45685424949238396`}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-45.65685424949238, 0.45685424949237685`}, {
                  2.8813492042606375`, 3.4078328106051106`}], 
                 Offset[{-45.65685424949238, 13.456854249492377`}, {
                  2.8813492042606375`, 3.4078328106051106`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"K162V\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{-27.65685424949238, 6.95685424949238}, \
{2.8813492042606375, 3.4078328106051106}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{2.4492935982947064`*^-16, 4.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{2.4492935982947064`*^-16, 4.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{3.6739403974420594`*^-16, 6.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{3.6739403974420594`*^-16, 6.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{4.898587196589413*^-16, 8.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{4.898587196589413*^-16, 10.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{4.898587196589413*^-16, 12.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{4.898587196589413*^-16, 12.}, {4.80737439312619, 
                  3.8323066419330556`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{2.4492935982947064`*^-16, 4.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{2.4492935982947064`*^-16, 4.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{3.6739403974420594`*^-16, 6.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{3.6739403974420594`*^-16, 6.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{4.898587196589413*^-16, 8.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{4.898587196589413*^-16, 10.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{4.898587196589413*^-16, 12.}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{4.898587196589413*^-16, 12.}, {4.80737439312619, 
                  3.8323066419330556`}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{18.5, 25.000000000000004`}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{18.5, 12.000000000000004`}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{-18.5, 11.999999999999996`}, {4.80737439312619, 
                  3.8323066419330556`}], 
                 Offset[{-18.5, 24.999999999999996`}, {4.80737439312619, 
                  3.8323066419330556`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"Y112G\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{4.898587196589413*^-16, 18.5}, \
{4.80737439312619, 3.8323066419330556}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  4.1666409342396635`, 5.06192812083044}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{2.8284271247461903`, 2.82842712474619}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{2.8284271247461903`, 2.82842712474619}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{4.242640687119286, 4.242640687119285}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{5.656854249492381, 5.65685424949238}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{7.65685424949238, 5.65685424949238}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{9.65685424949238, 5.65685424949238}, {
                  4.1666409342396635`, 5.06192812083044}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{45.65685424949238, 13.456854249492384`}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{45.65685424949238, 0.45685424949238307`}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{9.65685424949238, 0.45685424949237596`}, {
                  4.1666409342396635`, 5.06192812083044}], 
                 Offset[{9.65685424949238, 13.456854249492377`}, {
                  4.1666409342396635`, 5.06192812083044}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"T114G\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{27.65685424949238, 6.9568542494923795}, \
{4.1666409342396635, 5.06192812083044}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{-2.8284271247461907`, -2.82842712474619}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-2.8284271247461907`, -2.82842712474619}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-5.6568542494923815`, -5.65685424949238}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-7.6568542494923815`, -5.65685424949238}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, {
                  3.56039999564233, 2.7492268603510253`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{-2.8284271247461907`, -2.82842712474619}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-2.8284271247461907`, -2.82842712474619}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-4.242640687119286, -4.242640687119285}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-5.6568542494923815`, -5.65685424949238}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-7.6568542494923815`, -5.65685424949238}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-9.656854249492381, -5.65685424949238}, {
                  3.56039999564233, 2.7492268603510253`}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{-9.656854249492383, -0.45685424949237596`}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-9.656854249492383, -13.456854249492377`}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-45.65685424949238, -13.456854249492384`}, {
                  3.56039999564233, 2.7492268603510253`}], 
                 Offset[{-45.65685424949238, -0.45685424949238307`}, {
                  3.56039999564233, 2.7492268603510253`}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"K162A\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{-27.656854249492383, -6.9568542494923795}, \
{3.56039999564233, 2.7492268603510253}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{2.82842712474619, -2.8284271247461907`}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{2.82842712474619, -2.8284271247461907`}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{4.242640687119285, -4.242640687119286}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{4.242640687119285, -4.242640687119286}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{5.65685424949238, -5.6568542494923815`}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{7.65685424949238, -5.6568542494923815`}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{9.65685424949238, -5.6568542494923815`}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{9.65685424949238, -5.6568542494923815`}, {
                  4.783832641453298, 3.449026346923432}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{2.82842712474619, -2.8284271247461907`}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{2.82842712474619, -2.8284271247461907`}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{4.242640687119285, -4.242640687119286}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{4.242640687119285, -4.242640687119286}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{5.65685424949238, -5.6568542494923815`}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{7.65685424949238, -5.6568542494923815`}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{9.65685424949238, -5.6568542494923815`}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{9.65685424949238, -5.6568542494923815`}, {
                  4.783832641453298, 3.449026346923432}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{45.65685424949238, -0.45685424949237774`}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{45.65685424949238, -13.456854249492377`}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{9.65685424949238, -13.456854249492384`}, {
                  4.783832641453298, 3.449026346923432}], 
                 Offset[{9.65685424949238, -0.45685424949238485`}, {
                  4.783832641453298, 3.449026346923432}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"K162A\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{27.65685424949238, -6.956854249492381}, \
{4.783832641453298, 3.449026346923432}], {0, 0}]}], GraphicsGroupBox[{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-5.65685424949238, 5.656854249492381}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-7.65685424949238, 5.656854249492381}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  3.3987415229989963`, 5.154723010622545}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], 
               BSplineCurveBox[{
                Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-2.82842712474619, 2.8284271247461903`}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-4.242640687119285, 4.242640687119286}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-5.65685424949238, 5.656854249492381}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-7.65685424949238, 5.656854249492381}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-9.65685424949238, 5.656854249492381}, {
                  3.3987415229989963`, 5.154723010622545}]}]}, 
              {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
               PolygonBox[{
                Offset[{-9.65685424949238, 13.456854249492384`}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-9.65685424949238, 0.45685424949238396`}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-45.65685424949238, 0.45685424949237685`}, {
                  3.3987415229989963`, 5.154723010622545}], 
                 Offset[{-45.65685424949238, 13.456854249492377`}, {
                  3.3987415229989963`, 5.154723010622545}]}]}, 
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
               StyleBox[
                RotationBox["\<\"R164A\"\>",
                 BoxRotation->0.],
                StripOnInput->False,
                LineOpacity->1,
                FrontFaceOpacity->1,
                BackFaceOpacity->1,
                Opacity->1,
                FontOpacity->1], 
               Offset[{-27.65685424949238, 6.95685424949238}, \
{3.3987415229989963, 5.154723010622545}], {0, 0}]}]}}, {}}, {}}}, {{{}, {}, 
         TagBox[
          {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxFxXswE3AcAPDdUtnaaXnkNZtZyika4WR15nEXG3elOlrM5ZHDRGK6xUKy
VeJYJXpcHjluODUpi6yu7hInr3VrXCfd2Qm3udowseqPfX9/fO5DTcqOScVi
MJjof/7PmMpbMJlsFOZVvQ3ayHU0//7IL4kB3XXa48++JfSe0SnCcTWa8CHU
+0k3+lsn8SIzHV1S2m4oHreGb9hnDj29tQsmv/dousQhwmuRo56FXCs4SBPf
GKfcAdfKNBRRAQ6+fLaYvjG3DV7MJPF5SRZwobTnrRcOC1Nu9zOzjJsD5oVU
PJ522AhvESUcHarSw9VNw/ewJTpYeiRn9XW1BhYzN8huHWqY46OcjOXIYVNC
KG6Y9THYvHOahayGMQNHCAbYni/nYVkVdXhscxl2qo63JOFXYLbfg8B3b9bh
IGJiA4+HYZo/FJvruncEC9f5l2bM0bbCVwLLqInt2+EQgnj8Og4PX7MQ6lLq
CLDvnZyvLJedcJLAl6uVE+H5PvfyuxhreFbjKK2h28A13Ap/CccWLtYUGLSP
7OCZuJTupqHdsHB6sFVm7QBXRtDrncId4VMYu+WybCc47lOukN3tDH8uHLNM
/0GCy0LaBmf3k2HtCZM28QIFTnOX4uqjXWG9pyTguQ7d17z+XS+mwtxwGpNB
doMpWaJebwXaEc97Fh1Lg1vDigS6M+iAosowSTw6RtelVJ1D3/yiX0vmoY2N
V0MFJehphmSiRYrOyG9+GNmJXu18kbrYhbZ1U6349KCjLF1I/Qp0/2RLyoQS
HWX1youvQquPDRocptAG+YKYO4P2bqB3zP9E96lD+BVLaJbtyeCDOvR5Uf5Y
nh79W1Feb7+KLjXWJsuNaKJf24GEDfTjLLneZEL/BVgOQIc=
            "]]},
          Annotation[#, "Charting`Private`Tag$18907#1"]& ], 
         TagBox[
          {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVyXk41HkcwHFZ10xizCFXmPmuSUiTZGOyv49jV0w20ZZbObJpLFJDQpRb
5YmQik2qZXVYpIj9fWvbZ3PkSDKkKLsmRaZag0G2/ng/7z9e7OAozzBFBQUF
9899Of/ZwbdLSwycbZ/uZGvNwuLG8inXeQbmGtS6HF/HwqKznR8LZAz8QP5C
8MiMhWt+NF1YPcnAn25v2rGHzcJfdz9T9xhk4ANWE6HZGiys/pej5cV6BvZd
7ZUx8JqJX9ygxcA+BrbQYrceLmXi1GPXZCmP6bjrn+YfmlSYOHvl/vYruVq4
//ARNEzSseED04pYXxoWcm3nr53SwnOu3WaJgRrYLTM+Mi6Ehu0k/pe8+5bj
p9VJnu32Gri4TmKUGUfBG+LVuueGl+N4vxTe4pgKZhqXj0Rto+CJ/QYiYbAS
zuLZc4fbVHBidcO9tRRFrBPdH3MxRgkbnWyBSPkn0jz3qEfVv8twMptKRbZy
8tZvggg16hL5VWaAfXveNGlH+6W0ZrecPF3RUaSYKiUfWmjMSLZPk9Wbo2fv
npaQJ3897P9niZTMgkVDzvVBsrZ2Wbff7Bjpu77vyS7fJtI6hi8yHxwglwIc
KR1uDwlRf8H7lvhmUj9cqS6fP0LUeiq3GYW3EVsSSIHZ7XFiMHxzbhBrhKjL
Y3f0fHpPzKrjfrHfG0LvtL+aAXWGGFXVr7Sx/UAIrM9vuv/HPMGs9hEPTcoI
O1pQuVCoAPbFia8+qi4QG3YdMOZ2KkJx/vboujAFKNl4LGIMKcNi9J6m2LuK
cGRTGjvomioMx4bETDgpg4N61uN0ChWuuIRzGOWqcFwpWRpaog4SIgA+8Khg
dSZ6wG2VJhR1bVsjrleH4ASrwKkmGpjynNWFKzRhvNkko1CBDud9WZb+HTR4
JdGtzucx4Ew6xctnQQvyA09sLPBlgvPCkec+XAakSOJkU6UssEoPL2vYx4QR
79D6inZtyJd5+UcUsyB5qLWyjq4DvIRGj4QX2nBqC++cnrMuwJiR40tNHdih
wHqfFqUHKmVKJQK+Lni3HUgW1OsD9adgLj1FD7oSe9T2jRpAqt69mnU39SHN
oar1lbkh2AyfjamaMYCp7UtTQT8bQfnUu2KunSGEm1RTzrkbQ8rr7+7K9xrB
tFmBTa3UGDrncnIKdxpD8+X5l9NZbCiM/bhx4J0xBDoj4Bty4BuG/hnDNDYY
RWY2WmIOzPKPrqBzOaBLFf7uvgvBB3GI8voWDlQ6JSVIfRCk0g919pIcsEk6
5VTgj0Bza0ax6D4HPKU1feI9CMzJyjXNf3Mg5+n0XIgQQciVSXeXxxyQXzrq
mJCKoDcmrihAwoEhfkHv1WoEt6i5q3O0EEQcunzB9QYCJ+cLUgsmgtkbt8Im
ahD0JF1v7NJGwOSIZ9Y3IJiUdglYBgi2qq0yaMEITPqZ0Re5CFqeXA3t7UNQ
VFF2p4H/2TXurBWJP/vzm6k+3yIYdGmV6TxDUKd9z20BEMia3mYFjiDoyh4d
cvgegWU57/r4GwSq0abLHnkgaB50EJ2YRFBYZdsW5YXAjelFrJMiQKNuBfSd
CPZmHuo5OI2A2Blp4u2H4D+ccW7lLIJHecnv5AEIjsmLQ5rkCPxa826X7kZA
s66yCFhEMK5YngIhCMoim6aXlhDEba51HQ1D8D9loDH3
            "]]},
          Annotation[#, "Charting`Private`Tag$18907#2"]& ], 
         TagBox[
          {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVjmk81HkcgMdRGiljRoRhzPz+WlFWQofa+VK565PUyuRoRSepHEUI0Vhb
LNNStPNxpSyJJaH4/9KxrFlXSI5IW5Mio5oJs5rVi+fzvHjePOyA0F1ByhQK
Zfs832w3EP5eoWDgiTOBgietdNxXlz/pImfgVK+MbNpfdBx5pe2TQMbApraN
ubwmOq7YY/rfdxMMHPBJt+hDLR0THQMaO/sZuDektVqnmI41HjtY5FUzcGOA
Ve/BeDp+UU47CUcY+Fd3ip6aDR0nJJbJ4rvoeK3xNaGTUAv/rHus9fovWtju
Di8s2IuGjR6ZFobxaDjvoWVWuPtSPOPSYRbjtxT7Jt+OpsoW441in4K9PYux
kLPp4+tgKs6uErP4p6lY/uFJqLamGj6zL95y7s1CPJjlH58ap4rHjzEjgwNU
8c4b8sczM0o4prTmwWqqMn7wjzmKtFeQrEsNEDL7lXyrEjPCXzlLxrHV1dGG
WdLpSnPJ5sNSUoXvu7k1XUqK5gyGXjdKyIxCUZZygoSsttYJ2bhfTJZuOjF9
L0NMRu3uDx0dHiBTYM6Ic6ufLDs+eNqquIHkrenp9uLVk0sq83UV3i1cha8D
VeTazB30vJEsPzzMNTikWpVpN8JNjeKH+Q6NcZ2jSTezu2PcfY7sC9FlU9yq
dLao8+sU993yA6vutsu4+hk+i5jqX7ge+sLDSgNyrpt17vqmRjn3gd9x0VMn
Cmyk+ecHB1Ogt/ucx3C3Mqz1OmW8ok0Z2g0EHVdsF8BVm8Sjb9ACsJkt0Pe+
qAZn1yex/cvUQHeuqLNTWx3sNVK6kqnqMNRxM3H6pAacV42TBF7VAFaLMO+Z
kiZYXT7x3NVQEw6VNT960USDgGgrv8l6GlQMOtSYTmrB2H2TC79R6LCOZfui
zZoBo2K90kxLBli6mqmIArUh0++ijYCnDSP42iVR2jKIF5+WTf6+DNpcUnas
7NKBkb2B1YWtOmBxL1xjSKELcYMtN6voy0H0Qz9lwlEP0pwtc/S36sHgH/DR
84w+7KYsm0oK1YeCABOXxkID2Pv3qTi3agMoXnW+N+ktE9pjOhcdecUEw+GX
+wt0jSDJvqRl1NwIugrr2Mz9LJj0UEz6H2eBUb9akbuHMRwyKaXmbDeGtB+r
7tSIjUFqJrD9U2IMTJ/c0bZUNtwvkr+UprDhVY9KGh1xwG8rAjsjDiRHmI97
1XKAFcKvs8AccBSmB7nxEOipB1du90IAduG+R6cQ3NwSGy3xRtAenrxiyWcE
trFpWwQ+CHzLsyZvyxDsklT09P2EIIpdlyCVI0jtlc4cCEZQqfb1evxCAmYL
zjlEJyBgd/M/ZBkQMGgneFpcikAlJPfcw20EHI0ouuZSjiCjuMz5oDMB0+V3
gsYrELBGGrSobgRoc/q+rKmZf/YcKdyxkwD3RYbMBowgbINJ83MeAQ3dxYFP
exD8u+A2TRI635fWro7sm+9c/DzzFAH9Ti2y5QMIlKI6C2wiCJDVv0/xG0Fg
OP7J+mw0ARb5lrfG3iHY07Xee2EyAff77SMvTiB4tdiVU8InwFXbk/u9BMHJ
bfveu6UScJAf0RkuRXCpNjY2I52Az/hCju40AoOPaY7WmQQkzmYfqJ9FUGKe
p/nsMgE065JVvnMI1gVV9kVlEyAMqZcqFAgeC5vymTkE/A9Kkz54
            "]]},
          Annotation[#, "Charting`Private`Tag$18907#3"]& ]}, {}}, {
        GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQzVQ/4ef//8IHGMBAxeHJK2WP3oUI/urb589pWCP4
X+49TO69LQTnP5RyEL1Ui+Bvub3tn4oEgs+5fvI3h52CcL4ze6dadhCCrzjj
VFHpWwE4v9G66KxHP4J/PNkoQUsTwZe13ci0ajI/nP9ZeVrt/ht8cP4UkTUZ
H3kRfEutvoKtAbxw/irPhS+mNvPA+Um3fGaa7eKG8+UmHEnL/McF5y/1z12y
wwjBNzB59G9mCSec367UcXL6Mg44X7Xp2JnQO+wI97NdfLNUHsE3mcpTKxTM
hjDfQ0RLcAornB+bu4X/wg0WRPjObk1dzYvgZ75XuiERwAzn7/H5uGtRExOc
HyYdce3NDkY4/wtfN9/JPwxwfhzP+20HDRD8abF2P2Y8+bcfxv/bcv6zXv5f
OP/P/kPn/978Deczu/o9/RD/C85feNf6tsyxH3C++4GDXLnu3+H8qtaK1bYX
vsL5rnETddwtv8D5Eo1Oz0v2foLzm7aHNt1W/Ajnf15gLNsq/R7O/5j2ZsVs
zTdwvnxI5lflHy/g/JirYlu//HkK52+WVgs/JvAYzi8W+lwsfOo+nL9A9Le8
9v2bcP79zunbhV0uI+w3ubXg2AVE+j/gfzJ7/sRrcHnU/CNyAFW/yAEAasb9
Sw==
         "], {{{}, 
           {RGBColor[1, 0.925, 0.925], Opacity[0.5], EdgeForm[None], 
            GraphicsGroupBox[
             PolygonBox[{{1, 53, 54, 50, 52, 49, 48, 47, 46, 45, 44, 43, 42, 
              41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 
              25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 
              9, 8, 7, 6, 5, 4, 3, 2, 51}}]]}, {}, {}}, {{}, {}, 
           TagBox[
            {RGBColor[1, 0.925, 0.925], AbsoluteThickness[1.6], Opacity[0.8], 
             LineBox[{1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
              16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
              32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
              48, 49, 52, 50}]},
            Annotation[#, "Charting`Private`Tag$18956#1"]& ]}}], {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{1.9588621191696096`, 1.9588621191696096`},
      DisplayFunction->Identity,
      Epilog->{
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(\\*SuperscriptBox[StyleBox[\\\"R\\\",FontSlant->\\\"\
Italic\\\"], \\\"2\\\"]\\)=0.57\"", 14, StripOnInput -> False], 
           TraditionalForm]], 
         Scaled[{0.2, 0.9}]], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox["\"RMSE=0.61\"", 14, StripOnInput -> False], 
           TraditionalForm]], 
         Scaled[{0.2, 0.8}]], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(\\*StyleBox[\\\"n\\\",FontSlant->\\\"Italic\\\"]\\)=46\"",
             14, StripOnInput -> False], TraditionalForm]], 
         Scaled[{0.2, 0.7}]], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox["\"E\"", 24, Bold, StripOnInput -> False], 
           TraditionalForm]], 
         Scaled[{0.05, 0.95}]]},
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox[
          "\"Log[10,\\!\\(\\*SubscriptBox[StyleBox[\\\"K\\\",FontSlant->\\\"\
Italic\\\"], \\\"M\\\"]\\)] (rep.2) (/s)\"", SingleLetterItalics -> False, 
           StripOnInput -> False], TraditionalForm], None}, {
         FormBox[
          StyleBox[
          "\"Log[10,\\!\\(\\*SubscriptBox[StyleBox[\\\"K\\\",FontSlant->\\\"\
Italic\\\"], \\\"M\\\"]\\)] (rep.1) (/s)\"", SingleLetterItalics -> False, 
           StripOnInput -> False], TraditionalForm], None}},
      FrameStyle->Directive[24, 
        GrayLevel[0], FontFamily -> "Arial"],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{100, 20}, {100, 50}},
      ImageSize->475,
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{1.9588621191696096`, 6.125229682426072}, {
       1.9588621191696096`, 6.125229682426072}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[{GrayLevel[0], Thickness[0.125]}], FaceForm[{
                GrayLevel[0.5], Opacity[0.7]}], DiskBox[{0, 0}], 
                {Opacity[0.1]}}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]]}],
             TraditionalForm], {0., 0.}, Automatic, Scaled[
            0.02]], CompressedData["
1:eJwB9QIK/SFib1JlAwAAAC4AAAABAAAAAgAAAExyryZjHfk/2foIluOz+j9p
9krW1jr5P7WW5gk02Pc/FVcTfrk5+T+Ex1fyz2n4P6gVTUFfPfo/pif5qOxs
AEDazX9PeVX9P/M0RU/y+/s/SYRsaSdRAEAD7HPum9v/P3SdUVycPuE/56/J
DoDg3j8xdt4UfAb7P5Ll/PKjafw/eCFXyUdf/T9psTeea8f6Pyy/UMR9gOI/
qALcyLn15T9U2N6rINPjP/q7Cjlp++s/uPTtFWnB9T8cLIxCLp/zP6CGWh0u
ovM/lZgMA/lG9D9xhjBLxm/zP39n9rtqsPg/7yG/RYg59j+sAo311Kb4P9vr
NMBzOPU/qLPZ72Py9D8FWqu0C/j3PxApO976U/c/XgFlmcq79T8W1QH5lKT1
P4CrEwx1Wvk/suWzP/Mq+T+2sIju4+v3P4cB1jb0WPc/6Yfi7zIT3j9ukDCM
TMbbPyXLZpp3Pe8/xtqzx9p28D/pbXSbuSDwP7xCgBGfqvM/NK7UROl78z9B
w9kt+OvzP52huwTkDfo/8ckmGyxz+z/lOHr2SZ78P/jfNtJTRf8/ndXRlt23
8T9huZpLyGH0PxcC7Trgs/M/bbAQXNgx9T+FzVnALc4CQF8NEAQRSQFAw1tD
eoKSAUCZO3ffNfgDQGOjXBcCOwRAoFVmr38sBUCSkDEnVNXtP7Dj5IICWfA/
hPK2quGh6D+z2vV4g1LqP0LJJAdMAu8/PT0svEbT8D9OOMPGlPbmPzc4XyLv
N+0/qWFGLn3x4z9+66Yofi7pPzSNXK5Mt+4/Dr4kIdRQ8z8z3QMnEpf5P2I9
8EBdo/g/m+9VuA4N/T8M0PaBKZ/9P3ltbJFafPw/MqDE1Hgn/T8fkQY2CwX1
PwvjSoxi8fM/wLnHoqbq8T/YIt19e8DxP7rnD9H/6/A/0WuogQAK8T9VkcCJ
YLTvP3gXD7hzcvE/4GgwZ7sm/j+gdYF/LwcAQCtO/pm2yPs/uRXjmv1h/T+M
uH/F
           "]]}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[
           1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
         TagBox[
          {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxFxXswE3AcAPDdUtnaaXnkNZtZyika4WR15nEXG3elOlrM5ZHDRGK6xUKy
VeJYJXpcHjluODUpi6yu7hInr3VrXCfd2Qm3udowseqPfX9/fO5DTcqOScVi
MJjof/7PmMpbMJlsFOZVvQ3ayHU0//7IL4kB3XXa48++JfSe0SnCcTWa8CHU
+0k3+lsn8SIzHV1S2m4oHreGb9hnDj29tQsmv/dousQhwmuRo56FXCs4SBPf
GKfcAdfKNBRRAQ6+fLaYvjG3DV7MJPF5SRZwobTnrRcOC1Nu9zOzjJsD5oVU
PJ522AhvESUcHarSw9VNw/ewJTpYeiRn9XW1BhYzN8huHWqY46OcjOXIYVNC
KG6Y9THYvHOahayGMQNHCAbYni/nYVkVdXhscxl2qo63JOFXYLbfg8B3b9bh
IGJiA4+HYZo/FJvruncEC9f5l2bM0bbCVwLLqInt2+EQgnj8Og4PX7MQ6lLq
CLDvnZyvLJedcJLAl6uVE+H5PvfyuxhreFbjKK2h28A13Ap/CccWLtYUGLSP
7OCZuJTupqHdsHB6sFVm7QBXRtDrncId4VMYu+WybCc47lOukN3tDH8uHLNM
/0GCy0LaBmf3k2HtCZM28QIFTnOX4uqjXWG9pyTguQ7d17z+XS+mwtxwGpNB
doMpWaJebwXaEc97Fh1Lg1vDigS6M+iAosowSTw6RtelVJ1D3/yiX0vmoY2N
V0MFJehphmSiRYrOyG9+GNmJXu18kbrYhbZ1U6349KCjLF1I/Qp0/2RLyoQS
HWX1youvQquPDRocptAG+YKYO4P2bqB3zP9E96lD+BVLaJbtyeCDOvR5Uf5Y
nh79W1Feb7+KLjXWJsuNaKJf24GEDfTjLLneZEL/BVgOQIc=
            "]]},
          Annotation[#, "Charting`Private`Tag$19332#1"]& ], 
         TagBox[
          {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVyXk41HkcwHFZ10xizCFXmPmuSUiTZGOyv49jV0w20ZZbObJpLFJDQpRb
5YmQik2qZXVYpIj9fWvbZ3PkSDKkKLsmRaZag0G2/ng/7z9e7OAozzBFBQUF
9899Of/ZwbdLSwycbZ/uZGvNwuLG8inXeQbmGtS6HF/HwqKznR8LZAz8QP5C
8MiMhWt+NF1YPcnAn25v2rGHzcJfdz9T9xhk4ANWE6HZGiys/pej5cV6BvZd
7ZUx8JqJX9ygxcA+BrbQYrceLmXi1GPXZCmP6bjrn+YfmlSYOHvl/vYruVq4
//ARNEzSseED04pYXxoWcm3nr53SwnOu3WaJgRrYLTM+Mi6Ehu0k/pe8+5bj
p9VJnu32Gri4TmKUGUfBG+LVuueGl+N4vxTe4pgKZhqXj0Rto+CJ/QYiYbAS
zuLZc4fbVHBidcO9tRRFrBPdH3MxRgkbnWyBSPkn0jz3qEfVv8twMptKRbZy
8tZvggg16hL5VWaAfXveNGlH+6W0ZrecPF3RUaSYKiUfWmjMSLZPk9Wbo2fv
npaQJ3897P9niZTMgkVDzvVBsrZ2Wbff7Bjpu77vyS7fJtI6hi8yHxwglwIc
KR1uDwlRf8H7lvhmUj9cqS6fP0LUeiq3GYW3EVsSSIHZ7XFiMHxzbhBrhKjL
Y3f0fHpPzKrjfrHfG0LvtL+aAXWGGFXVr7Sx/UAIrM9vuv/HPMGs9hEPTcoI
O1pQuVCoAPbFia8+qi4QG3YdMOZ2KkJx/vboujAFKNl4LGIMKcNi9J6m2LuK
cGRTGjvomioMx4bETDgpg4N61uN0ChWuuIRzGOWqcFwpWRpaog4SIgA+8Khg
dSZ6wG2VJhR1bVsjrleH4ASrwKkmGpjynNWFKzRhvNkko1CBDud9WZb+HTR4
JdGtzucx4Ew6xctnQQvyA09sLPBlgvPCkec+XAakSOJkU6UssEoPL2vYx4QR
79D6inZtyJd5+UcUsyB5qLWyjq4DvIRGj4QX2nBqC++cnrMuwJiR40tNHdih
wHqfFqUHKmVKJQK+Lni3HUgW1OsD9adgLj1FD7oSe9T2jRpAqt69mnU39SHN
oar1lbkh2AyfjamaMYCp7UtTQT8bQfnUu2KunSGEm1RTzrkbQ8rr7+7K9xrB
tFmBTa3UGDrncnIKdxpD8+X5l9NZbCiM/bhx4J0xBDoj4Bty4BuG/hnDNDYY
RWY2WmIOzPKPrqBzOaBLFf7uvgvBB3GI8voWDlQ6JSVIfRCk0g919pIcsEk6
5VTgj0Bza0ax6D4HPKU1feI9CMzJyjXNf3Mg5+n0XIgQQciVSXeXxxyQXzrq
mJCKoDcmrihAwoEhfkHv1WoEt6i5q3O0EEQcunzB9QYCJ+cLUgsmgtkbt8Im
ahD0JF1v7NJGwOSIZ9Y3IJiUdglYBgi2qq0yaMEITPqZ0Re5CFqeXA3t7UNQ
VFF2p4H/2TXurBWJP/vzm6k+3yIYdGmV6TxDUKd9z20BEMia3mYFjiDoyh4d
cvgegWU57/r4GwSq0abLHnkgaB50EJ2YRFBYZdsW5YXAjelFrJMiQKNuBfSd
CPZmHuo5OI2A2Blp4u2H4D+ccW7lLIJHecnv5AEIjsmLQ5rkCPxa826X7kZA
s66yCFhEMK5YngIhCMoim6aXlhDEba51HQ1D8D9loDH3
            "]]},
          Annotation[#, "Charting`Private`Tag$19332#2"]& ], 
         TagBox[
          {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVjmk81HkcgMdRGiljRoRhzPz+WlFWQofa+VK565PUyuRoRSepHEUI0Vhb
LNNStPNxpSyJJaH4/9KxrFlXSI5IW5Mio5oJs5rVi+fzvHjePOyA0F1ByhQK
Zfs832w3EP5eoWDgiTOBgietdNxXlz/pImfgVK+MbNpfdBx5pe2TQMbApraN
ubwmOq7YY/rfdxMMHPBJt+hDLR0THQMaO/sZuDektVqnmI41HjtY5FUzcGOA
Ve/BeDp+UU47CUcY+Fd3ip6aDR0nJJbJ4rvoeK3xNaGTUAv/rHus9fovWtju
Di8s2IuGjR6ZFobxaDjvoWVWuPtSPOPSYRbjtxT7Jt+OpsoW441in4K9PYux
kLPp4+tgKs6uErP4p6lY/uFJqLamGj6zL95y7s1CPJjlH58ap4rHjzEjgwNU
8c4b8sczM0o4prTmwWqqMn7wjzmKtFeQrEsNEDL7lXyrEjPCXzlLxrHV1dGG
WdLpSnPJ5sNSUoXvu7k1XUqK5gyGXjdKyIxCUZZygoSsttYJ2bhfTJZuOjF9
L0NMRu3uDx0dHiBTYM6Ic6ufLDs+eNqquIHkrenp9uLVk0sq83UV3i1cha8D
VeTazB30vJEsPzzMNTikWpVpN8JNjeKH+Q6NcZ2jSTezu2PcfY7sC9FlU9yq
dLao8+sU993yA6vutsu4+hk+i5jqX7ge+sLDSgNyrpt17vqmRjn3gd9x0VMn
Cmyk+ecHB1Ogt/ucx3C3Mqz1OmW8ok0Z2g0EHVdsF8BVm8Sjb9ACsJkt0Pe+
qAZn1yex/cvUQHeuqLNTWx3sNVK6kqnqMNRxM3H6pAacV42TBF7VAFaLMO+Z
kiZYXT7x3NVQEw6VNT960USDgGgrv8l6GlQMOtSYTmrB2H2TC79R6LCOZfui
zZoBo2K90kxLBli6mqmIArUh0++ijYCnDSP42iVR2jKIF5+WTf6+DNpcUnas
7NKBkb2B1YWtOmBxL1xjSKELcYMtN6voy0H0Qz9lwlEP0pwtc/S36sHgH/DR
84w+7KYsm0oK1YeCABOXxkID2Pv3qTi3agMoXnW+N+ktE9pjOhcdecUEw+GX
+wt0jSDJvqRl1NwIugrr2Mz9LJj0UEz6H2eBUb9akbuHMRwyKaXmbDeGtB+r
7tSIjUFqJrD9U2IMTJ/c0bZUNtwvkr+UprDhVY9KGh1xwG8rAjsjDiRHmI97
1XKAFcKvs8AccBSmB7nxEOipB1du90IAduG+R6cQ3NwSGy3xRtAenrxiyWcE
trFpWwQ+CHzLsyZvyxDsklT09P2EIIpdlyCVI0jtlc4cCEZQqfb1evxCAmYL
zjlEJyBgd/M/ZBkQMGgneFpcikAlJPfcw20EHI0ouuZSjiCjuMz5oDMB0+V3
gsYrELBGGrSobgRoc/q+rKmZf/YcKdyxkwD3RYbMBowgbINJ83MeAQ3dxYFP
exD8u+A2TRI635fWro7sm+9c/DzzFAH9Ti2y5QMIlKI6C2wiCJDVv0/xG0Fg
OP7J+mw0ARb5lrfG3iHY07Xee2EyAff77SMvTiB4tdiVU8InwFXbk/u9BMHJ
bfveu6UScJAf0RkuRXCpNjY2I52Az/hCju40AoOPaY7WmQQkzmYfqJ9FUGKe
p/nsMgE065JVvnMI1gVV9kVlEyAMqZcqFAgeC5vymTkE/A9Kkz54
            "]]},
          Annotation[#, "Charting`Private`Tag$19332#3"]& ]}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(\\*SuperscriptBox[StyleBox[\\\"R\\\",FontSlant->\\\"\
Italic\\\"], \\\"2\\\"]\\)=0.93\"", 14, StripOnInput -> False], 
           TraditionalForm]], 
         Scaled[{0.2, 0.9}]], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox["\"RMSE=0.14\"", 14, StripOnInput -> False], 
           TraditionalForm]], 
         Scaled[{0.2, 0.8}]], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(\\*StyleBox[\\\"n\\\",FontSlant->\\\"Italic\\\"]\\)=46\"",
             14, StripOnInput -> False], TraditionalForm]], 
         Scaled[{0.2, 0.7}]], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox["\"F\"", 24, Bold, StripOnInput -> False], 
           TraditionalForm]], 
         Scaled[{0.05, 0.95}]]},
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox[
          "\"Log[10,\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"\
Italic\\\"], \
\\\"cat\\\"]\\)/\\!\\(\\*SubscriptBox[StyleBox[\\\"K\\\",FontSlant->\\\"\
Italic\\\"], \\\"M\\\"]\\)] (rep.2) (/M /s)\"", SingleLetterItalics -> False, 
           StripOnInput -> False], TraditionalForm], None}, {
         FormBox[
          StyleBox[
          "\"Log[10,\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"\
Italic\\\"], \
\\\"cat\\\"]\\)/\\!\\(\\*SubscriptBox[StyleBox[\\\"K\\\",FontSlant->\\\"\
Italic\\\"], \\\"M\\\"]\\)] (rep.1) (/M /s)\"", SingleLetterItalics -> False, 
           StripOnInput -> False], TraditionalForm], None}},
      FrameStyle->Directive[24, 
        GrayLevel[0], FontFamily -> "Arial"],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{100, 20}, {100, 50}},
      ImageSize->475,
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-0.26499179302467113`, 
       3.3456979194423155`}, {-0.26499179302467113`, 3.3456979194423155`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]},
    {
     StyleBox["\<\"Experimental Summary. A) Counts of local limit of \
quantification control chambers (skipped and catalytically unresolvable \
mutants), library and known active site mutant chambers (library mutants), \
chambers which expressed >0.3 nM, and measured and chambers that were not \
sufficiently above the local limit of quantification (too slow). B) \
Distribution of enzyme concentrations in chambers with [E]>0.3 nM compared to \
the measured expression in the Skipped chambers. C) Distribution of rates \
measured in the chambers sufficiently above the local limit of quantification \
(Measured) compared to the rates measured in the control chambers, at the \
highest substrate concentration. D) Correlation between \
\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"Italic\\\"], \
\\\"cat\\\"]\\) replicate measurements for measured library mutants. E) \
Correlation between \
\\!\\(\\*SubscriptBox[StyleBox[\\\"K\\\",FontSlant->\\\"Italic\\\"], \
\\\"M\\\"]\\) replicate measurements for measured library mutants. The pink \
shaded region denotes the immeasurable range of \
\\!\\(\\*SubscriptBox[StyleBox[\\\"K\\\",FontSlant->\\\"Italic\\\"], \
\\\"M\\\"]\\) values as Michaelis-Menten fits were constrained such that \
\\!\\(\\*SubscriptBox[StyleBox[\\\"K\\\",FontSlant->\\\"Italic\\\"], \
\\\"M\\\"]\\) > 0.5 \[Mu]M. F) Correlation between \
\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"Italic\\\"], \
\\\"cat\\\"]\\)/\\!\\(\\*SubscriptBox[StyleBox[\\\"K\\\",FontSlant->\\\"\
Italic\\\"], \\\"M\\\"]\\) replicate measurements for measured library \
mutants.\"\>",
      StripOnInput->False,
      TextAlignment->Left,
      SingleLetterItalics->False,
      FontFamily->"Arial",
      FontSize->18], "\[SpanFromLeft]", "\[SpanFromLeft]"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.7957337354464073`*^9}},
 CellLabel->
  "Out[234]=",ExpressionUUID->"88136d03-d2f4-46f5-a8f2-a952bef41a46"],

Cell[BoxData["\<\"/Users/craig/Dropbox/AP_enzymology/MITOMI/tempPDF/temporary_\
PDF_0000.pdf\"\>"], "Output",
 CellChangeTimes->{{3.795733714353551*^9, 3.795733736485241*^9}},
 CellLabel->
  "Out[235]=",ExpressionUUID->"85d55576-bf5f-405e-8857-47e6ce5be70e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dataset", "=", "in2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"indices", "=", 
    RowBox[{"Sort", "[", 
     RowBox[{"Normal", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"dataset", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "\"\<Indices\>\""}], "]"}], "]"}], "]"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dynamic", "[", "n", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "change", " ", "3", "rd", " ", "argument", " ", "to", " ", "correspond", 
     " ", "to", " ", "type", " ", "of", " ", 
     RowBox[{"assay", ":", " ", "cMUP"}]}], ",", " ", "MeP", ",", " ", 
    "MecMUP", ",", " ", "Inhibition"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "added", " ", "4", "th", " ", "argument", " ", "\"\<unscaled\>\""}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"out", "=", 
     RowBox[{"makeGrid", "[", 
      RowBox[{"dataset", ",", 
       RowBox[{"indices", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", "\"\<MecMUP\>\"", ",", 
       "\"\<unscaled\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"StringJoin", "[", 
       RowBox[{
       "\"\</Users/craig/Dropbox/AP_enzymology/MITOMI/tempPDF/temporary_PDF_\>\
\"", ",", 
        RowBox[{"StringPadLeft", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "n", "]"}], ",", "4", ",", "\"\<0\>\""}], 
         "]"}], ",", "\"\<.pdf\>\""}], "]"}], ",", "out", ",", 
      RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "False"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "1568"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.734968802754878*^9, 3.73496884924994*^9}, {
   3.734975973828043*^9, 3.7349759785186768`*^9}, {3.7349761556127987`*^9, 
   3.734976157836526*^9}, {3.734976630964161*^9, 3.7349767728034477`*^9}, {
   3.7352407445428658`*^9, 3.735240807389244*^9}, 3.735253388922279*^9, {
   3.73525347071425*^9, 3.735253473917111*^9}, {3.7352708205551977`*^9, 
   3.73527082126511*^9}, {3.73776383354399*^9, 3.737763841963129*^9}, {
   3.737763918798028*^9, 3.737763921961684*^9}, {3.737766464413*^9, 
   3.737766493896508*^9}, {3.7377701825753736`*^9, 3.7377702686829767`*^9}, {
   3.7378308515007343`*^9, 3.7378308523168716`*^9}, {3.737830886025773*^9, 
   3.737830888096822*^9}, {3.73783315219055*^9, 3.7378331552216*^9}, {
   3.7378366288578033`*^9, 3.7378366309612017`*^9}, {3.737837182030987*^9, 
   3.737837190498939*^9}, {3.737837284061532*^9, 3.7378373009006987`*^9}, {
   3.737837342171262*^9, 3.737837371587351*^9}, {3.737852311669195*^9, 
   3.737852335950115*^9}, {3.737852370825861*^9, 3.737852370971496*^9}, {
   3.737908884775505*^9, 3.7379088892306843`*^9}, 3.737909437487208*^9, {
   3.737909512861318*^9, 3.737909513572735*^9}, {3.737918251085771*^9, 
   3.737918251799322*^9}, {3.737918287574067*^9, 3.7379182911760683`*^9}, {
   3.737935260042219*^9, 3.73793527402769*^9}, {3.738360657898507*^9, 
   3.7383606580859013`*^9}, 3.738360839090804*^9, 3.738361205529189*^9, {
   3.738361389458673*^9, 3.7383613904823103`*^9}, {3.738371124847797*^9, 
   3.738371135226638*^9}, {3.738371172346424*^9, 3.73837118429666*^9}, {
   3.738371223510995*^9, 3.73837127043606*^9}, {3.738371313438038*^9, 
   3.7383713613243713`*^9}, {3.7383714025020933`*^9, 
   3.7383714118772707`*^9}, {3.73837144356236*^9, 3.738371444806272*^9}, {
   3.738371492725086*^9, 3.738371633297844*^9}, {3.738371707585731*^9, 
   3.738371710112852*^9}, {3.738371897831038*^9, 3.7383719155648527`*^9}, {
   3.738372074454234*^9, 3.738372081541424*^9}, {3.7383721270251007`*^9, 
   3.738372166431676*^9}, {3.7383722075908117`*^9, 3.738372240330531*^9}, {
   3.738372663764278*^9, 3.738372684757061*^9}, {3.738372720735841*^9, 
   3.738372726268684*^9}, {3.738372799243244*^9, 3.738372801139413*^9}, {
   3.738373593519457*^9, 3.7383736057036324`*^9}, {3.738373912715453*^9, 
   3.7383739966198606`*^9}, {3.7383740405776*^9, 3.7383740465142593`*^9}, {
   3.738374112832901*^9, 3.738374130944804*^9}, {3.738374248602914*^9, 
   3.7383742512738256`*^9}, {3.738374506775222*^9, 3.738374515037346*^9}, {
   3.738511808101075*^9, 3.738511830940919*^9}, {3.73851318456809*^9, 
   3.738513185841002*^9}, {3.7389546697455072`*^9, 3.7389547096302977`*^9}, {
   3.7389557124581223`*^9, 3.738955712979723*^9}, 3.7401020556412992`*^9, {
   3.761865788034404*^9, 3.761865790107328*^9}, {3.763488810298786*^9, 
   3.763488811466016*^9}, {3.763490157285676*^9, 3.7634901601953373`*^9}, {
   3.763490692071268*^9, 3.7634906921473923`*^9}, {3.764284341028967*^9, 
   3.764284354513817*^9}, {3.764615643887927*^9, 3.7646156445274076`*^9}, {
   3.765656054866255*^9, 3.765656070463399*^9}, {3.765745407571*^9, 
   3.7657454081537113`*^9}, {3.766333015747342*^9, 3.766333016510173*^9}, {
   3.766674814553743*^9, 3.7666748155046177`*^9}, {3.7666848484958687`*^9, 
   3.766684849156314*^9}, {3.766802198263974*^9, 3.7668021993104258`*^9}, {
   3.7668025014120893`*^9, 3.766802502023836*^9}, 3.766973804167427*^9, {
   3.767040706512616*^9, 3.76704070720901*^9}, {3.7761311532868433`*^9, 
   3.776131153446291*^9}, {3.78442838140347*^9, 3.784428382809595*^9}, {
   3.784487394340712*^9, 3.784487395081902*^9}, {3.7936368673695707`*^9, 
   3.793636876223093*^9}, {3.79363691240208*^9, 3.7936369126912537`*^9}, {
   3.795266392195253*^9, 3.795266393386479*^9}, {3.795733750279334*^9, 
   3.7957337512824993`*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"6f4360e9-f29b-4fc0-a26b-787a6594dab6"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`n, StandardForm],
  ImageSizeCache->{8., {0., 7.}}]], "Output",
 CellChangeTimes->{3.795733753695649*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"4c7fe067-ad10-4792-afe4-6bbd215042cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"session", " ", "=", " ", 
   RowBox[{"StartExternalSession", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<System\>\"", "\[Rule]", "\"\<Python\>\""}], ",", 
      RowBox[{"\"\<Version\>\"", "\[Rule]", "\"\<3.6\>\""}], ",", " ", 
      RowBox[{"\"\<SessionProlog\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<import os\>\"", ",", " ", 
         "\"\<from PyPDF2 import PdfFileMerger, PdfFileReader\>\""}], 
        "}"}]}]}], "|>"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "defineRoot", " ", "=", " ", 
   "\"\<root='/Users/craig/Dropbox/AP_enzymology/MITOMI/tempPDF/'\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
  "getNames", " ", "=", " ", 
   "\"\<pdfs1=[os.path.join(root, dir) for dir in os.listdir(root) if '.pdf' \
in dir]\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getNames2", "=", "\"\<pdfs=sorted(pdfs1)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"createMerger", " ", "=", " ", "\"\<merger = PdfFileMerger()\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "executeMerge", " ", "=", " ", 
   "\"\<for pdf in pdfs: merger.append(PdfFileReader(pdf,'rb'))\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"executeExport", " ", "=", " ", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"\"\<merger.write('/Users/craig/Desktop/\>\"", ",", 
     RowBox[{
      RowBox[{"Values", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{"dataset", "[", 
         RowBox[{"1", ",", 
          RowBox[{"{", "\"\<GlobalExperimentIndex\>\"", "}"}]}], "]"}], "]"}],
        "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<.pdf')\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "completionNotice", " ", "=", " ", 
   "\"\<print('PDF Concatenation Complete')\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.735240835805632*^9, 3.7352408695676327`*^9}, {
   3.7352723452425337`*^9, 3.735272349764186*^9}, {3.737832724019129*^9, 
   3.737832724534013*^9}, {3.737832993756768*^9, 3.737832994742173*^9}, {
   3.737837663069889*^9, 3.737837720337008*^9}, {3.73783919175051*^9, 
   3.7378391949365873`*^9}, {3.737849111388164*^9, 3.737849117090743*^9}, {
   3.7378563264982986`*^9, 3.737856356402337*^9}, {3.737908925832163*^9, 
   3.737908938263731*^9}, {3.7379095408034153`*^9, 3.737909548197497*^9}, {
   3.738508680258833*^9, 3.7385086839233913`*^9}, {3.738508713966082*^9, 
   3.738508799454052*^9}, {3.7385089076391*^9, 3.738508953982917*^9}, {
   3.7385089992357483`*^9, 3.738508999622363*^9}, {3.738511731695178*^9, 
   3.7385117323238297`*^9}, {3.7385119909307613`*^9, 3.738512010216378*^9}, {
   3.738512138462304*^9, 3.738512187473403*^9}, {3.738512232872408*^9, 
   3.7385122559986067`*^9}, {3.738512710856868*^9, 3.73851271629486*^9}, 
   3.793639817435289*^9},
 CellLabel->
  "In[240]:=",ExpressionUUID->"9feb60b6-6902-407a-8878-66250f0bd7eb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalSessionObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 120}, {
                 60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 110}, {58, 
                 110}, {55, 110}, {53, 112}, {53, 115}, {53, 118}, {55, 
                 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 116}, {46, 
                 116}, {46, 104}, {73, 104}, {73, 100}, {36, 100}, {36, 
                 100}, {18, 102}, {18, 74}, {18, 45}, {33, 46}, {33, 46}, {43,
                  46}, {43, 59}, {43, 59}, {42, 75}, {58, 75}, {85, 75}, {85, 
                 75}, {99, 75}, {99, 89}, {99, 114}, {99, 114}, {102, 128}, {
                 72, 128}}}]}, {
               Hue[0.1164, 0.745, 0.99], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 27}, {85,
                  27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {88, 37}, {91, 
                 37}, {93, 34}, {93, 32}, {93, 29}, {91, 27}, {88, 27}}, {{73,
                  18}, {101, 18}, {99, 31}, {99, 31}, {99, 43}, {73, 43}, {73,
                  47}, {110, 47}, {110, 47}, {128, 45}, {128, 73}, {128, 
                 102}, {112, 101}, {112, 101}, {103, 101}, {103, 87}, {103, 
                 87}, {104, 72}, {88, 72}, {61, 72}, {61, 72}, {46, 72}, {46, 
                 57}, {46, 33}, {46, 33}, {44, 18}, {73, 18}}}]}}, {
             ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
              ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[$SessionID === 24321465344525794769, 
                    ExternalSessionObject[
                    "428f54db-059a-4476-945e-ebaa19594005"][
                    "EvaluationCount"], None], StandardForm], 
                   TrackedSymbols :> {$SessionID, 
                    ExternalEvaluate`Private`$Links}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"428f54db-059a-4476-945e-ebaa19594005\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 120}, {
                 60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 110}, {58, 
                 110}, {55, 110}, {53, 112}, {53, 115}, {53, 118}, {55, 
                 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 116}, {46, 
                 116}, {46, 104}, {73, 104}, {73, 100}, {36, 100}, {36, 
                 100}, {18, 102}, {18, 74}, {18, 45}, {33, 46}, {33, 46}, {43,
                  46}, {43, 59}, {43, 59}, {42, 75}, {58, 75}, {85, 75}, {85, 
                 75}, {99, 75}, {99, 89}, {99, 114}, {99, 114}, {102, 128}, {
                 72, 128}}}]}, {
               Hue[0.1164, 0.745, 0.99], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 27}, {85,
                  27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {88, 37}, {91, 
                 37}, {93, 34}, {93, 32}, {93, 29}, {91, 27}, {88, 27}}, {{73,
                  18}, {101, 18}, {99, 31}, {99, 31}, {99, 43}, {73, 43}, {73,
                  47}, {110, 47}, {110, 47}, {128, 45}, {128, 73}, {128, 
                 102}, {112, 101}, {112, 101}, {103, 101}, {103, 87}, {103, 
                 87}, {104, 72}, {88, 72}, {61, 72}, {61, 72}, {46, 72}, {46, 
                 57}, {46, 33}, {46, 33}, {44, 18}, {73, 18}}}]}}, {
             ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
              ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "428f54db-059a-4476-945e-ebaa19594005"]], 
                    ExternalEvaluate`Private`$Links[
                    "428f54db-059a-4476-945e-ebaa19594005", 
                    "EvaluationCount"], None], StandardForm]], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"428f54db-059a-4476-945e-ebaa19594005\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"ProcessObject", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"ManagedProcess\"", "\[Rule]", "True"}], ",", 
                    RowBox[{"\"UID\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"PID\"", "\[Rule]", "22403"}], ",", 
                    RowBox[{"\"PPID\"", "\[Rule]", "22095"}], ",", 
                    RowBox[{"\"Program\"", "\[Rule]", "\"python3.6\""}], ",", 
                    
                    
                    RowBox[{
                    "\"Path\"", "\[Rule]", 
                    
                    "\"/Library/Frameworks/Python.framework/Versions/3.6/bin/\
python3.6\""}], ",", 
                    RowBox[{"\"User\"", "\[Rule]", "\"craig\""}], ",", 
                    RowBox[{"\"StartTime\"", "\[Rule]", "1586746535"}]}], 
                    "}"}], "]"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Epilog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"Missing", "[", 
                    RowBox[{"\"KeyAbsent\"", ",", "\"Epilog\""}], "]"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Prolog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"Missing", "[", 
                    RowBox[{"\"KeyAbsent\"", ",", "\"Prolog\""}], "]"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionEpilog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionProlog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"import os\"", ",", 
                    "\"from PyPDF2 import PdfFileMerger, PdfFileReader\""}], 
                    "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.6.0\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Executable: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"/usr/local/bin/python3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ReturnType: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Expression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionOptions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
                    PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"56898\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"ab27c2e5-39e9-4c92-98ea-1eb80d6e5945\"", 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
                    PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"DestinationIPAddress: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"DestinationPort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"56898\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourceIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"::da00:0:fb65:4844\"", "]"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourcePort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketObject["ab27c2e5-39e9-4c92-98ea-1eb80d6e5945"], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ProcessMemory: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "428f54db-059a-4476-945e-ebaa19594005"]], 
                    ExternalEvaluate`Private`$Links[
                    "428f54db-059a-4476-945e-ebaa19594005", "ProcessMemory"], 
                    None], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ProcessThreads: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "428f54db-059a-4476-945e-ebaa19594005"]], 
                    ExternalEvaluate`Private`$Links[
                    "428f54db-059a-4476-945e-ebaa19594005", "ProcessThreads"],
                     None], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "428f54db-059a-4476-945e-ebaa19594005"]], 
                    ExternalSessionObject[
                    "428f54db-059a-4476-945e-ebaa19594005"]["SessionTime"], 
                    None], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ExternalSessionObject["428f54db-059a-4476-945e-ebaa19594005"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7957353357904882`*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"8c870fcc-8a61-4e12-b1fa-400f63446bbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExternalEvaluate", "[", 
  RowBox[{"session", ",", 
   RowBox[{"{", 
    RowBox[{
    "defineRoot", ",", " ", "getNames", ",", "getNames2", ",", " ", 
     "createMerger", ",", " ", "executeMerge", ",", " ", "executeExport", ",",
      " ", "completionNotice"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738508761367715*^9, 3.738508762051643*^9}, {
   3.7385089616031313`*^9, 3.738508963113728*^9}, {3.738512181215766*^9, 
   3.738512181394802*^9}, 3.7385122373978977`*^9},
 CellLabel->
  "In[248]:=",ExpressionUUID->"c9386312-a7f9-48e3-9c7c-e96bcd20c53a"],

Cell[BoxData["\<\"PDF Concatenation Complete\"\>"], "Print",
 CellChangeTimes->{3.795735431586769*^9},
 CellLabel->
  "During evaluation of \
In[248]:=",ExpressionUUID->"63be9a29-c120-456d-88ba-34e9973c9ead"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.795735431591711*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"133d39a1-e406-429b-ad2f-236ae06dbb6e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["New progress curve plots - development", "Title",
 CellChangeTimes->{{3.792793444926908*^9, 
  3.792793453713426*^9}},ExpressionUUID->"e3ea0425-45e0-4f02-81ec-\
06d65c0e8afc"],

Cell[BoxData[
 RowBox[{"test", "=", 
  RowBox[{"dataset", "[", 
   RowBox[{
    RowBox[{"1", ";;", "2"}], ",", 
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{"#", ",", 
       RowBox[{"\"\<ProgressCurve2\>\"", "->", 
        RowBox[{"makeProgressCurvePlotNew", "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", "#Times", "]"}], ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"#", "[", "\"\<TurnoverTimepoints(uM)\>\"", "]"}], "]"}], 
          ",", "#OptLinFitSlope", ",", "#OptLinFitIntercept", ",", 
          RowBox[{"ToExpression", "[", "#DataPointsOptLinFit", "]"}], ",", 
          "#SubstrateConc"}], "]"}]}]}], "]"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.792513123321836*^9, 3.792513245757183*^9}, {
  3.792513326961956*^9, 3.792513331664744*^9}, {3.792513378393662*^9, 
  3.792513380143379*^9}, {3.792513718679524*^9, 3.7925137238053226`*^9}, {
  3.792513761309532*^9, 3.7925137622605553`*^9}, {3.792515841872312*^9, 
  3.7925158462894487`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"93c419d6-2c82-4b78-8863-f46169d353c5"],

Cell[BoxData[
 RowBox[{"test", "[", 
  RowBox[{"1", ",", "\"\<ProgressCurve2\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.792513763657566*^9, 3.792513768477944*^9}, {
  3.792515851362174*^9, 3.792515853394361*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"450eb867-4885-447f-b80f-456d13b02f77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mutantList", "=", 
    RowBox[{"{", 
     RowBox[{"\"\<T79G\>\"", ",", "\"\<Skipped\>\""}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findNearestBackgroundChambers", "[", 
   RowBox[{"dataset_", ",", "indices_", ",", "concentration_"}], "]"}], ":=", 
  
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "column", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"column", "=", 
      RowBox[{"indices", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"lbChambers", "=", 
      RowBox[{
       RowBox[{"dataset", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"mutantList", ",", "#MutantID"}], "]"}], "&&", 
           RowBox[{"#x", "\[Equal]", "column"}]}], "&"}], "]"}], "]"}], "[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Indices\>\"", ",", "\"\<x\>\"", ",", "\"\<y\>\""}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     
     RowBox[{"sortedList", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"lbChambers", "[", 
              RowBox[{"n", ",", "\"\<y\>\""}], "]"}], "-", 
             RowBox[{"indices", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"lbChambers", "[", 
             RowBox[{"n", ",", "\"\<Indices\>\""}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "lbChambers", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"nearest", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"sortedList", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "<", "0"}], "&"}]}], "]"}], "]"}], 
           "\[GreaterEqual]", "1"}], ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"sortedList", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "<", "0"}], "&"}]}], "]"}], "]"}], ",", 
          RowBox[{"Missing", "[", "]"}]}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"sortedList", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}], 
           "\[GreaterEqual]", "1"}], ",", 
          RowBox[{"Min", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"sortedList", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}], ",", 
          RowBox[{"Missing", "[", "]"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NumberQ", "[", 
            RowBox[{"nearest", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"sortedList", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                 RowBox[{"nearest", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"Missing", "[", "]"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NumberQ", "[", 
            RowBox[{"nearest", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"sortedList", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                 RowBox[{"nearest", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"Missing", "[", "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Missing", "[", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.792869146950604*^9, 3.7928691648298388`*^9}, {
  3.792869814803927*^9, 3.792869829439619*^9}, {3.7928700564037533`*^9, 
  3.792870063585236*^9}, {3.7928701026715193`*^9, 3.792870109935422*^9}, {
  3.792870205909946*^9, 3.792870288553673*^9}, {3.792870428662826*^9, 
  3.792870482900279*^9}, {3.792870517519507*^9, 3.79287056317841*^9}, {
  3.7928708381454372`*^9, 3.792870905720068*^9}, {3.792871007272326*^9, 
  3.7928711660713463`*^9}, {3.792871245544787*^9, 3.792871265627586*^9}, {
  3.792872298925415*^9, 3.792872590798736*^9}, {3.7929672663397703`*^9, 
  3.792967333229595*^9}, {3.7929673709802094`*^9, 
  3.792967371137171*^9}},ExpressionUUID->"68b5c3fe-f18c-42ce-8f5a-\
0f92115f2854"],

Cell[BoxData[
 RowBox[{"test", "=", 
  RowBox[{"findNearestBackgroundChambers", "[", 
   RowBox[{"withPCs", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", "10."}], "]"}]}]], "Input",
 CellChangeTimes->{{3.792870490654529*^9, 3.792870526656982*^9}, {
  3.7928709010668716`*^9, 3.792870932594878*^9}, {3.792872570916121*^9, 
  3.792872611951807*^9}, {3.7929360085449963`*^9, 3.79293600965812*^9}, {
  3.792937683609812*^9, 3.792937684281974*^9}, {3.792937746508479*^9, 
  3.792937747257188*^9}, {3.7929673576456413`*^9, 3.792967357821443*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"e7a97462-d566-4e5b-af14-f00094f162da"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"withPCs", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#Indices", "\[Equal]", 
          RowBox[{"{", 
           RowBox[{"12", ",", "7"}], "}"}]}], "&&", 
         RowBox[{"#SubstrateConc", "\[Equal]", "10."}]}], "&"}], "]"}], "]"}],
      "[", 
     RowBox[{"All", ",", "\"\<ProgressCurveOptFit\>\""}], "]"}], "]"}], ",", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"withPCs", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"test", ",", "#Indices"}], "]"}], "&&", 
         RowBox[{"#SubstrateConc", "\[Equal]", "10."}]}], "&"}], "]"}], "]"}],
      "[", 
     RowBox[{"All", ",", "\"\<LocalBackgroundRatePlot\>\""}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.792937686028792*^9, 3.7929377618892107`*^9}, {
  3.792938310530903*^9, 3.792938394809675*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"7941f48b-a3b9-4f9b-8e99-6d10f8a56bb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeLocalBackgroundRatePlot", "[", 
   RowBox[{
   "timeData_", ",", "progressCurve_", ",", "rate_", ",", "intercept_", ",", 
    "pointsUsed_", ",", "substrateConc_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MissingQ", "[", "progressCurve", "]"}], "||", 
       RowBox[{"MissingQ", "[", "rate", "]"}], "||", 
       RowBox[{"MissingQ", "[", "intercept", "]"}], "||", 
       RowBox[{"MissingQ", "[", "pointsUsed", "]"}]}], ",", 
      RowBox[{"Return", "[", 
       RowBox[{"Missing", "[", "\"\<Nonexistent\>\"", "]"}], "]"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"timeData", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", 
              RowBox[{"progressCurve", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Length", "[", "timeData", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "<", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"noPointsFit", "=", 
        RowBox[{"Length", "[", "pointsUsed", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"pUsed", "=", "pointsUsed"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "plotting", " ", "and", " ", "padding", " ", "values"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"xmin", "=", 
        RowBox[{
         RowBox[{"Last", "[", "data", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ymin", "=", 
        RowBox[{
         RowBox[{"Last", "[", "data", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"padding", "=", "50"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"xscale", "=", "1.1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"yscale", "=", "1.4"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"firstPointY", "=", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
         RowBox[{"substrateConc", "*", "0.25"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dataPlot", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{"data", ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "200"}], ",", 
               RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"firstPointY", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"firstPointY", "+", "substrateConc"}], ")"}], "*", 
                "yscale"}]}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"16", ",", "Black", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], 
          ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Darker", "[", "Red", "]"}], ",", 
             RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Time (s)\>\"", ",", "\"\<[Product] (\[Mu]M)\>\""}], 
            "}"}]}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "0.8"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"fitPlot", "=", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"rate", "*", "time"}], "+", "intercept"}], ",", 
          RowBox[{"{", 
           RowBox[{"time", ",", 
            RowBox[{"-", "200"}], ",", 
            RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "200"}], ",", 
               RowBox[{"xmin", "*", "xscale"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"firstPointY", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"firstPointY", "+", "substrateConc"}], ")"}], "*", 
                "yscale"}]}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Darker", "[", "Red", "]"}], ",", 
             RowBox[{"Opacity", "[", "0.5", "]"}], ",", "Dashed"}], "]"}]}]}],
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", 
        RowBox[{"dataPlot", ",", "fitPlot"}], "]"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.792885120497506*^9, 3.792885186478393*^9}, {
  3.792885259938767*^9, 3.7928853218353*^9}, {3.792887660113614*^9, 
  3.792887660596809*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"093106f3-ecbd-4b72-a7eb-5246ac989983"]
}, Open  ]]
},
Evaluator->"Spare",
WindowSize->{1773, 934},
WindowMargins->{{44, Automatic}, {Automatic, 57}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"68966c49-16fb-4eb8-891d-263bd6782a18"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 178, 3, 98, "Title",ExpressionUUID->"9b60d79d-3c73-4aa9-850b-573bae9ecd86"],
Cell[761, 27, 632, 16, 242, "Text",ExpressionUUID->"4e06a056-e3ad-4a56-a94a-21fbcb1b2e6a"],
Cell[CellGroupData[{
Cell[1418, 47, 177, 3, 67, "Section",ExpressionUUID->"7391da35-e83f-4ccf-8600-5aa538c9335d"],
Cell[1598, 52, 287, 6, 35, "Text",ExpressionUUID->"55221bad-66f0-476d-89aa-a13745167883"],
Cell[1888, 60, 245998, 5328, 19, "Input",ExpressionUUID->"b11feaba-9b65-439a-84d8-a6f263a575fb",
 CellOpen->False],
Cell[247889, 5390, 38148, 869, 3076, "Input",ExpressionUUID->"13147da3-16da-43e1-be47-14d842a63afe"],
Cell[CellGroupData[{
Cell[286062, 6263, 3765, 80, 220, "Input",ExpressionUUID->"310ed2cf-acb5-40d5-a698-3c525c3cd5e8"],
Cell[289830, 6345, 142904, 2554, 171, "Output",ExpressionUUID->"912aecba-50be-4960-9e48-da290dfea696"]
}, Open  ]],
Cell[432749, 8902, 2164, 37, 136, "Input",ExpressionUUID->"f4df3f14-2c75-4523-b3c5-a6da62db2a65"],
Cell[CellGroupData[{
Cell[434938, 8943, 3763, 77, 262, "Input",ExpressionUUID->"30e8db3b-c70e-42fa-ac42-c62b2b9bab0c"],
Cell[438704, 9022, 26486, 468, 107, "Output",ExpressionUUID->"2b1441b6-34cb-4108-b1b0-7ef50421eb42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465227, 9495, 361, 8, 30, "Input",ExpressionUUID->"37f734b5-d18a-4f06-b541-cfe810ef0f56"],
Cell[465591, 9505, 26468, 467, 107, "Output",ExpressionUUID->"76a6bcd6-a137-433d-8a04-d8cfd4036595"]
}, Open  ]],
Cell[492074, 9975, 274, 5, 30, "Input",ExpressionUUID->"eb33ec6f-fd5a-4bf3-b245-fe037b4c88c2"],
Cell[492351, 9982, 432, 11, 30, "Input",ExpressionUUID->"9f0a6cde-341a-4e1b-abf6-c3b652c0c6dd"],
Cell[CellGroupData[{
Cell[492808, 9997, 198, 3, 45, "Subsubsection",ExpressionUUID->"8de24dfb-a29c-4265-a0b6-a638da881702"],
Cell[493009, 10002, 1499, 33, 157, "Input",ExpressionUUID->"36d12bcb-54aa-413d-be25-58031906b595"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494545, 10040, 752, 16, 45, "Subsubsection",ExpressionUUID->"7ca2c047-4fde-4ec7-8f9a-eaae5ba54cf8"],
Cell[CellGroupData[{
Cell[495322, 10060, 9783, 216, 871, "Input",ExpressionUUID->"39993858-c767-473a-ac2d-bc76ede4087e"],
Cell[505108, 10278, 517, 8, 34, "Output",ExpressionUUID->"9b22d483-7e43-488b-a15c-60850e0fcde2"],
Cell[505628, 10288, 440, 6, 34, "Output",ExpressionUUID->"bfa89227-f389-47e2-a9ba-5cae93457301"],
Cell[506071, 10296, 485, 8, 24, "Print",ExpressionUUID->"52c684ce-f800-4044-b18b-63c3c3f0a965"],
Cell[506559, 10306, 496, 7, 37, "Output",ExpressionUUID->"64e9e8f7-2908-4983-9c80-bd889d80da7d"],
Cell[507058, 10315, 489, 8, 24, "Print",ExpressionUUID->"7f2cff9b-b1e4-4b85-8c77-e5939e5db4dd"],
Cell[507550, 10325, 495, 7, 37, "Output",ExpressionUUID->"9ee1b672-19a3-4753-a4bf-007368a94cfd"],
Cell[508048, 10334, 462, 6, 34, "Output",ExpressionUUID->"ca29a536-beb1-48bd-8b9a-7ed5f0fdd3bf"],
Cell[508513, 10342, 461, 6, 34, "Output",ExpressionUUID->"a1b95932-8c48-41f0-b277-31418f5905fd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[509023, 10354, 187, 3, 45, "Subsubsection",ExpressionUUID->"1e40ae36-589a-4f40-8667-6d794ac291f6"],
Cell[509213, 10359, 937, 20, 30, "Input",ExpressionUUID->"2d29bf37-8dde-4120-a07d-cbb06a795fed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510187, 10384, 805, 17, 71, "Subsubsection",ExpressionUUID->"bb464193-288e-4f85-b680-1d8674eccc2e"],
Cell[510995, 10403, 648, 12, 30, "Input",ExpressionUUID->"a5babe92-4563-480b-9589-37d32aa82490"],
Cell[511646, 10417, 962, 21, 52, "Input",ExpressionUUID->"0fe5c3af-b529-48c0-b3f7-edfad537e0d0"],
Cell[CellGroupData[{
Cell[512633, 10442, 735, 16, 73, "Input",ExpressionUUID->"5b28550f-2f51-429e-90ff-0ec32bd6ada2"],
Cell[513371, 10460, 303, 4, 34, "Output",ExpressionUUID->"2f1bdd2d-f316-4b28-8f66-daa9726c5e3a"],
Cell[513677, 10466, 297, 4, 34, "Output",ExpressionUUID->"1ffc4622-d2e4-4d7d-816d-a02887b76db7"],
Cell[513977, 10472, 299, 4, 34, "Output",ExpressionUUID->"1b10adf3-3a43-4b91-9821-84d229ecd817"]
}, Open  ]],
Cell[CellGroupData[{
Cell[514313, 10481, 3768, 88, 178, "Input",ExpressionUUID->"028d8830-dacd-4926-af79-0c11c82ed4f8"],
Cell[518084, 10571, 137479, 2604, 605, "Output",ExpressionUUID->"b3dbacf8-a0c1-449f-88fc-41aeef476e79"]
}, Open  ]],
Cell[655578, 13178, 44738, 1003, 2026, "Input",ExpressionUUID->"e05e4bb2-79cd-415f-bc52-ccf55fda9a3a"],
Cell[700319, 14183, 1022, 23, 30, "Input",ExpressionUUID->"f74889bf-678c-49b1-aaaa-848dd4b45931"],
Cell[CellGroupData[{
Cell[701366, 14210, 3237, 68, 199, "Input",ExpressionUUID->"c1606e12-265d-42c3-9bff-e5272584b886"],
Cell[704606, 14280, 631, 10, 34, "Output",ExpressionUUID->"4fe171df-b651-4dd0-9d34-b5b5dac222c3"]
}, Open  ]]
}, Open  ]],
Cell[705264, 14294, 1005, 23, 49, "Subsubsection",ExpressionUUID->"e5b18434-75d3-4833-a3c3-7340be7a4893"],
Cell[CellGroupData[{
Cell[706294, 14321, 210, 4, 37, "Subsubsection",ExpressionUUID->"e693c26e-b06e-4c33-a643-ac1622fe732e"],
Cell[706507, 14327, 549, 13, 30, "Input",ExpressionUUID->"212d2b4b-596d-4e2e-bf46-d6296a5d217d"],
Cell[CellGroupData[{
Cell[707081, 14344, 211, 3, 30, "Input",ExpressionUUID->"7f451ea2-a856-4aa7-a89f-000414977414"],
Cell[707295, 14349, 296, 4, 34, "Output",ExpressionUUID->"438d63ae-07ff-43c2-ab5c-c62ce5494e3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[707628, 14358, 1075, 25, 73, "Input",ExpressionUUID->"55afae9f-51f6-44ce-88af-2bd0be9abf42"],
Cell[708706, 14385, 375, 6, 34, "Output",ExpressionUUID->"ab14c77a-e126-4174-a177-2d46aa175b19"]
}, Open  ]],
Cell[709096, 14394, 1573, 34, 115, "Input",ExpressionUUID->"73b7f515-349b-42ba-84d9-c757828bdc0e"],
Cell[CellGroupData[{
Cell[710694, 14432, 11098, 220, 598, "Input",ExpressionUUID->"37a1333c-258f-4f02-b7ac-7f98cc109fd7"],
Cell[721795, 14654, 689, 11, 34, "Output",ExpressionUUID->"924505e1-aa1d-42df-983f-45695280abb3"],
Cell[722487, 14667, 628, 9, 34, "Output",ExpressionUUID->"86a28701-0706-4308-951a-06a6b6391723"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[723176, 14683, 595, 14, 68, "Section",ExpressionUUID->"d072f562-a354-465b-b775-fe3795d24145"],
Cell[CellGroupData[{
Cell[723796, 14701, 7581, 164, 556, "Input",ExpressionUUID->"9d2d8c42-aefa-481e-915f-b5a188754bc6"],
Cell[731380, 14867, 393, 6, 34, "Output",ExpressionUUID->"8ec4eb56-c3fa-4285-b526-26fb35cd8abe"],
Cell[731776, 14875, 400, 6, 34, "Output",ExpressionUUID->"47336388-8275-40dd-908e-3590211f3acc"],
Cell[732179, 14883, 340, 5, 34, "Output",ExpressionUUID->"0b4d6799-c5fd-41c3-8233-db33433805d8"],
Cell[732522, 14890, 342, 5, 34, "Output",ExpressionUUID->"8d7577e0-ef3d-40a3-8a76-a38bb5f1b43b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[732913, 14901, 506, 13, 68, "Section",ExpressionUUID->"016d605b-53cb-472d-9846-e7b3413ac1f7"],
Cell[CellGroupData[{
Cell[733444, 14918, 4310, 98, 262, "Input",ExpressionUUID->"72b6cdfb-2add-421e-8003-e8a4f9982909"],
Cell[737757, 15018, 316, 5, 34, "Output",ExpressionUUID->"896a882b-e604-4367-bcf9-34dabce8422d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[738122, 15029, 826, 22, 72, "Section",ExpressionUUID->"8337b2db-65f3-4260-be93-069527ae86eb"],
Cell[CellGroupData[{
Cell[738973, 15055, 13450, 316, 913, "Input",ExpressionUUID->"f0efd0ec-c063-4bf9-8aac-be9b17db8a09"],
Cell[752426, 15373, 50813, 954, 62, "Output",ExpressionUUID->"7f402b52-4da5-4145-803c-9cbe7efc8f6c"],
Cell[803242, 16329, 226, 4, 34, "Output",ExpressionUUID->"4b5f17b7-e50f-47b1-bff0-85754bf26851"],
Cell[803471, 16335, 252, 4, 34, "Output",ExpressionUUID->"12d07c0b-54ee-42b6-8e7d-422c511e8956"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[803772, 16345, 229, 4, 67, "Section",ExpressionUUID->"a73fc3ca-258f-4527-94b1-06cfd415fc7f"],
Cell[804004, 16351, 2901, 65, 241, "Input",ExpressionUUID->"17decdca-6bf4-4a4d-bf69-a513121eed9f"],
Cell[CellGroupData[{
Cell[806930, 16420, 761, 18, 73, "Input",ExpressionUUID->"d41141b7-d13d-4ca5-a89c-77de6e24b7eb"],
Cell[807694, 16440, 19515, 329, 122, "Output",ExpressionUUID->"bb772f01-19a2-4108-ae4e-8719d8f2dab9"]
}, Open  ]],
Cell[827224, 16772, 484, 12, 30, "Input",ExpressionUUID->"335dcb8c-0aa7-4e47-9568-7d4fb0ad00f4"],
Cell[CellGroupData[{
Cell[827733, 16788, 249, 4, 45, "Subsubsection",ExpressionUUID->"721293aa-1e2f-4aeb-8f29-b84ea653b19c"],
Cell[827985, 16794, 742, 20, 30, "Input",ExpressionUUID->"ef71399b-c592-44d7-b47b-6be0b89f09da"],
Cell[CellGroupData[{
Cell[828752, 16818, 14050, 311, 509, "Input",ExpressionUUID->"8b230181-654b-45e7-8f10-0b6764550950"],
Cell[842805, 17131, 510, 11, 24, "Message",ExpressionUUID->"b5c9733b-5c3b-4941-b249-aac62d1ef2a7"],
Cell[843318, 17144, 514, 11, 24, "Message",ExpressionUUID->"1838eb32-0b5a-466f-9824-451da1e8a3d8"],
Cell[843835, 17157, 510, 11, 24, "Message",ExpressionUUID->"129d177c-c9a6-42fd-b945-0579cf05bab1"],
Cell[844348, 17170, 461, 10, 24, "Message",ExpressionUUID->"85b46ad9-ca5d-4431-880b-039eb73cbbd1"],
Cell[844812, 17182, 231, 4, 34, "Output",ExpressionUUID->"8f8d347c-2050-4183-9e61-9bec94bb3e4f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[845104, 17193, 200, 3, 67, "Section",ExpressionUUID->"896b3ee6-0094-4bf3-8ab6-ffcd2313e817"],
Cell[CellGroupData[{
Cell[845329, 17200, 227, 5, 45, "Subsubsection",ExpressionUUID->"336d29e9-47cc-4290-a133-c940f0b53ba0"],
Cell[845559, 17207, 3347, 80, 157, "Input",ExpressionUUID->"e12af932-481c-4a92-8836-8c641b8a3e09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[848943, 17292, 560, 9, 45, "Subsubsection",ExpressionUUID->"62fa0e5b-f884-45b6-8d0d-a5d646c49f78"],
Cell[849506, 17303, 187, 3, 35, "Text",ExpressionUUID->"3eceb913-d58b-4f6c-b758-b5d37372e766"],
Cell[849696, 17308, 7468, 165, 619, "Input",ExpressionUUID->"f90a4968-6978-4f6c-a522-ffa32f1c5fe1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[857201, 17478, 623, 9, 45, "Subsubsection",ExpressionUUID->"bc1d3622-aa70-4815-b6b1-f251eaa6ab92"],
Cell[857827, 17489, 178, 3, 35, "Text",ExpressionUUID->"6eb3f97b-a5ff-4e55-8e7c-2d1b30959ca0"],
Cell[858008, 17494, 3439, 86, 304, "Input",ExpressionUUID->"127d07ef-e44b-4287-8005-0485a37caf81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[861484, 17585, 431, 8, 45, "Subsubsection",ExpressionUUID->"78fb3ea0-817d-417c-9cf7-3234979fda17"],
Cell[CellGroupData[{
Cell[861940, 17597, 3409, 76, 283, "Input",ExpressionUUID->"ca4adb96-d754-4f64-bcd2-b351f9d9faae"],
Cell[865352, 17675, 411, 7, 34, "Output",ExpressionUUID->"e36f62b1-0c1d-45e2-86cc-93bb9aea2c98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[865800, 17687, 636, 14, 30, "Input",ExpressionUUID->"22920b38-dd14-4f22-a7d5-f308613afbec"],
Cell[866439, 17703, 159, 3, 34, "Output",ExpressionUUID->"de086fef-e6ac-40d1-866e-6e27eb9cbe2d"]
}, Open  ]],
Cell[866613, 17709, 310, 8, 30, "Input",ExpressionUUID->"bce4f465-8a26-41fc-b9cb-6aa4a34a4204"],
Cell[CellGroupData[{
Cell[866948, 17721, 873, 16, 30, "Input",ExpressionUUID->"b6a0f835-7e61-4263-b643-4124368d223c"],
Cell[867824, 17739, 233718, 4600, 1395, "Output",ExpressionUUID->"1da0690c-0f2d-4f93-a1b0-92f4b9602597"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1101591, 22345, 175, 3, 45, "Subsubsection",ExpressionUUID->"3aa7f358-3c24-4983-9a1e-e5b79d6c5e11"],
Cell[1101769, 22350, 1245, 37, 73, "Input",ExpressionUUID->"9842ff4b-9929-4b21-8409-a0add44d8e69"],
Cell[CellGroupData[{
Cell[1103039, 22391, 55238, 1443, 2869, "Input",ExpressionUUID->"ce000803-03a2-4a7e-9ab7-0f7bd6112e7f"],
Cell[1158280, 23836, 180, 3, 34, "Output",ExpressionUUID->"a63311bc-0ce9-471d-a64a-5bee403678bd"],
Cell[1158463, 23841, 182, 3, 34, "Output",ExpressionUUID->"9e084cf7-0b2b-4e38-9030-a5dcd33007d9"],
Cell[1158648, 23846, 179, 3, 34, "Output",ExpressionUUID->"25c681c9-54ce-487b-9a2d-4ed4c95e05dc"],
Cell[1158830, 23851, 181, 3, 34, "Output",ExpressionUUID->"94e9fc63-7ef4-4c25-b347-d0adb15dc2c4"],
Cell[1159014, 23856, 181, 3, 34, "Output",ExpressionUUID->"479eff8d-0ff8-4c6c-85b8-cce4587a71de"],
Cell[1159198, 23861, 2621, 58, 343, "Output",ExpressionUUID->"d3d9e4da-78f3-45cf-9072-5bf5df55651d"],
Cell[1161822, 23921, 41315, 1085, 412, "Output",ExpressionUUID->"2ce9fc5c-3379-467a-bf39-1df40962fa7f"],
Cell[1203140, 25008, 29601, 762, 419, "Output",ExpressionUUID->"57db261d-eb76-49a5-8356-9be9d9dc7d3a"],
Cell[1232744, 25772, 285, 6, 34, "Output",ExpressionUUID->"e4873e4f-96b9-4452-a5e4-fea591344e27"],
Cell[1233032, 25780, 187, 3, 34, "Output",ExpressionUUID->"de5f3497-e189-4949-92c4-bea0264b887d"],
Cell[1233222, 25785, 1023, 30, 34, "Output",ExpressionUUID->"bccf9746-636c-47da-b6ea-395e1a39a180"],
Cell[1234248, 25817, 1022, 30, 34, "Output",ExpressionUUID->"8e5cf4c7-ac70-4dd1-817f-7101de70b1e6"],
Cell[1235273, 25849, 1022, 30, 34, "Output",ExpressionUUID->"d8b7b277-775f-43e8-888a-27a46e36bd5e"],
Cell[1236298, 25881, 208681, 4368, 1087, "Output",ExpressionUUID->"88136d03-d2f4-46f5-a8f2-a952bef41a46"],
Cell[1444982, 30251, 258, 4, 34, "Output",ExpressionUUID->"85d55576-bf5f-405e-8857-47e6ce5be70e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1445277, 30260, 5859, 106, 304, "Input",ExpressionUUID->"6f4360e9-f29b-4fc0-a26b-787a6594dab6"],
Cell[1451139, 30368, 235, 5, 34, "Output",ExpressionUUID->"4c7fe067-ad10-4792-afe4-6bbd215042cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1451411, 30378, 2960, 68, 199, "Input",ExpressionUUID->"9feb60b6-6902-407a-8878-66250f0bd7eb"],
Cell[1454374, 30448, 26545, 524, 62, "Output",ExpressionUUID->"8c870fcc-8a61-4e12-b1fa-400f63446bbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1480956, 30977, 587, 12, 30, "Input",ExpressionUUID->"c9386312-a7f9-48e3-9c7c-e96bcd20c53a"],
Cell[1481546, 30991, 208, 4, 24, "Print",ExpressionUUID->"63be9a29-c120-456d-88ba-34e9973c9ead"],
Cell[1481757, 30997, 276, 7, 34, "Output",ExpressionUUID->"133d39a1-e406-429b-ad2f-236ae06dbb6e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1482106, 31012, 181, 3, 98, "Title",ExpressionUUID->"e3ea0425-45e0-4f02-81ec-06d65c0e8afc"],
Cell[1482290, 31017, 1086, 22, 94, "Input",ExpressionUUID->"93c419d6-2c82-4b78-8863-f46169d353c5"],
Cell[1483379, 31041, 294, 5, 30, "Input",ExpressionUUID->"450eb867-4885-447f-b80f-456d13b02f77"],
Cell[1483676, 31048, 6186, 156, 367, "Input",ExpressionUUID->"68b5c3fe-f18c-42ce-8f5a-0f92115f2854"],
Cell[1489865, 31206, 643, 12, 30, "Input",ExpressionUUID->"e7a97462-d566-4e5b-af14-f00094f162da"],
Cell[1490511, 31220, 1083, 30, 30, "Input",ExpressionUUID->"7941f48b-a3b9-4f9b-8e99-6d10f8a56bb2"],
Cell[1491597, 31252, 6019, 142, 682, "Input",ExpressionUUID->"093106f3-ecbd-4b72-a7eb-5246ac989983"]
}, Open  ]]
}
]
*)

