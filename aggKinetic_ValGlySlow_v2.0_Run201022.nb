(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2446417,      47360]
NotebookOptionsPosition[   2431405,      47150]
NotebookOutlinePosition[   2431843,      47167]
CellTagsIndexPosition[   2431800,      47164]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Aggregate all cMUP data (ValScan, GlyScan, SlowChip)", "Title",
 CellChangeTimes->{{3.77358367011915*^9, 
  3.773583684382947*^9}},ExpressionUUID->"155087c4-5bad-4495-aebc-\
8392b3d09245"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"notebookVersion", "=", "2.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"keysUsed", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<MutantID\>\"", ",", "\"\<ExpIndex\>\"", ",", 
      "\"\<ManualGFPFlag\>\"", ",", "\"\<UniqueExptID\>\"", ",", 
      "\"\<ChipType\>\"", ",", "\"\<LocalBackgroundRatio\>\"", ",", 
      "\"\<Indices\>\"", ",", "\"\<EnzymeConc\>\"", ",", 
      "\"\<OptLinFitSlope\>\"", ",", "\"\<fit_mm_datapoints\>\"", ",", 
      "\"\<DataPointsOptLinFit\>\"", ",", "\"\<fit_mm_curved_r2\>\"", ",", 
      "\"\<fit_mm_kcat\>\"", ",", "\"\<fit_mm_KM\>\"", ",", 
      "\"\<fit_mm_scale_factor\>\"", ",", "\"\<FitR2\>\"", ",", 
      "\"\<DataPoints\>\"", ",", "\"\<kcat\>\"", ",", "\"\<Km\>\"", ",", 
      "\"\<ScaleFactor\>\"", ",", "\"\<SubstrateConc\>\"", ",", 
      "\"\<OptLinFitSlope\>\"", ",", "\"\<AllLBRs\>\"", ",", 
      "\"\<AllInitialRates\>\"", ",", "\"\<AllSubstrateConcs\>\"", ",", 
      "\"\<StdCurveSlope\>\"", ",", "\"\<StdCurveIntercept\>\"", ",", 
      "\"\<StdCurveR2\>\"", ",", "\"\<fit_mm_kcat_param_error\>\"", ",", 
      "\"\<fit_mm_KM_param_error\>\"", ",", "\"\<AllEnzymeConcs\>\""}], 
     "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "modified", " ", "median", " ", "function", " ", "to", " ", "return", " ",
      "value", " ", "if", " ", "length", " ", "of", " ", "list"}], " ", "=", 
    " ", "1"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"median2", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"Median", "[", 
      RowBox[{"{", "x", "}"}], "]"}], ",", 
     RowBox[{"Median", "[", "x", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"expIndexToCullOn", "=", "7"}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SconcToCullOn", "=", "1000.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"twoPointCutoff", "=", "6"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rSqaredCutoff", "=", "0.97"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"calcRatio", "[", 
    RowBox[{"indices_", ",", "Sconc_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"repeatRate", ",", "initRate"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"initRate", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"allGrouped", "[", "indices", "]"}], "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#AssayType", "\[Equal]", "1"}], "&&", 
            RowBox[{"#SubstrateConc", "\[Equal]", "Sconc"}]}], "&"}], "]"}], 
         "]"}], "[", 
        RowBox[{"1", ",", "\"\<OptLinFitSlope\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"repeatRate", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"allGrouped", "[", "indices", "]"}], "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"#AssayType", "\[Equal]", "0"}], "&"}], "]"}], "]"}], "[", 
        
        RowBox[{"1", ",", "\"\<OptLinFitSlope\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"repeatRate", "/", "initRate"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateDatasetFromCSV", "[", 
    RowBox[{"in_", ",", "type_", ",", "id_", ",", 
     RowBox[{"keysToTake_", ":", "keysUsed"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dsIn", ",", "keys"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dsIn", "=", "in"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"keys", "=", 
       RowBox[{"dsIn", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"r2key", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"keysToTake", ",", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"#", ",", "\"\<curved_r2\>\""}], "]"}], "&"}]}], "]"}], 
        "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dataPointsKey", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"keysToTake", ",", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"#", ",", "\"\<datapoints\>\""}], "]"}], "&"}]}], "]"}], 
        "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"kcatKey", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"keysToTake", ",", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"#", ",", "\"\<_kcat\>\""}], "]"}], "&"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"KmKey", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"keysToTake", ",", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"#", ",", "\"\<_KM\>\""}], "]"}], "&"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"kcatUncorrected", "=", "kcatKey"}], ";", "\[IndentingNewLine]", 
      RowBox[{"scaleFactorKey", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"keysToTake", ",", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"#", ",", "\"\<scale_factor\>\""}], "]"}], "&"}]}], "]"}],
         "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"all", "=", 
       RowBox[{"Dataset", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Association", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"keys", "[", 
                  RowBox[{"[", "n", "]"}], "]"}], "\[Rule]", 
                 RowBox[{"dsIn", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "n"}], "]"}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", 
                 RowBox[{"Length", "[", "keys", "]"}]}], "}"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<ChipType\>\"", "\[Rule]", "type"}], ",", 
              RowBox[{"\"\<UniqueExptID\>\"", "\[Rule]", "id"}]}], "}"}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "dsIn", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"repeatSconc", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"allGrouped", "[", "1", "]"}], "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"#AssayType", "\[Equal]", "0"}], "&"}], "]"}], "]"}], "[", 
        
        RowBox[{"1", ",", "\"\<SubstrateConc\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"allGrouped", "=", 
       RowBox[{"all", "[", 
        RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"all2", "=", 
       RowBox[{"all", "[", 
        RowBox[{"All", ",", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<FitR2\>\"", "\[Rule]", 
               RowBox[{"#", "[", "r2key", "]"}]}], ",", 
              RowBox[{"\"\<DataPoints\>\"", "\[Rule]", 
               RowBox[{"#", "[", "dataPointsKey", "]"}]}], ",", 
              RowBox[{"\"\<kcat\>\"", "\[Rule]", 
               RowBox[{"#", "[", "kcatKey", "]"}]}], ",", 
              RowBox[{"\"\<Km\>\"", "\[Rule]", 
               RowBox[{"#", "[", "KmKey", "]"}]}], ",", 
              RowBox[{"\"\<ScaleFactor\>\"", "\[Rule]", 
               RowBox[{"#", "[", "scaleFactorKey", "]"}]}], ",", 
              RowBox[{"\"\<AllLBRs\>\"", "\[Rule]", 
               RowBox[{"Normal", "[", 
                RowBox[{
                 RowBox[{"allGrouped", "[", "#Indices", "]"}], "[", 
                 RowBox[{"All", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
                "]"}]}], ",", 
              RowBox[{"\"\<AllInitialRates\>\"", "\[Rule]", 
               RowBox[{"Normal", "[", 
                RowBox[{
                 RowBox[{"allGrouped", "[", "#Indices", "]"}], "[", 
                 RowBox[{"All", ",", "\"\<OptLinFitSlope\>\""}], "]"}], 
                "]"}]}], ",", 
              RowBox[{"\"\<AllSubstrateConcs\>\"", "\[Rule]", 
               RowBox[{"Normal", "[", 
                RowBox[{
                 RowBox[{"allGrouped", "[", "#Indices", "]"}], "[", 
                 RowBox[{"All", ",", "\"\<SubstrateConc\>\""}], "]"}], 
                "]"}]}], ",", 
              RowBox[{"\"\<AllEnzymeConcs\>\"", "\[Rule]", 
               RowBox[{"Normal", "[", 
                RowBox[{
                 RowBox[{"allGrouped", "[", "#Indices", "]"}], "[", 
                 RowBox[{"All", ",", "\"\<EnzymeConc\>\""}], "]"}], "]"}]}], 
              ",", 
              RowBox[{"\"\<StdCurveR2\>\"", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"LinearModelFit", "[", 
                  RowBox[{"Normal", "[", 
                   RowBox[{
                    RowBox[{"allGrouped", "[", "#Indices", "]"}], "[", 
                    RowBox[{"1", ",", "\"\<StdCurveData\>\""}], "]"}], "]"}], 
                  "]"}], "[", "\"\<RSquared\>\"", "]"}], ")"}]}]}], "}"}]}], 
           "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"all2", "[", 
       RowBox[{"All", ",", "keysToTake"}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "function", " ", "for", " ", "remapping", " ", "mutants", " ", "with", " ",
     "eGFP", " ", "mutations", " ", "and", " ", "biomek", " ", "errors"}], 
   " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"remapNames", "[", "dataset_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"replaced1", ",", "replaced2", ",", "newDs"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"remappingRules", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<P76G\>\"", "\[Rule]", "\"\<P92G\>\""}], ",", 
         RowBox[{"\"\<H172G\>\"", "\[Rule]", "\"\<I188G*\>\""}], ",", 
         RowBox[{"\"\<T268G\>\"", "\[Rule]", "\"\<D284G\>\""}], ",", 
         RowBox[{"\"\<A364G\>\"", "\[Rule]", "\"\<M380G\>\""}], ",", 
         RowBox[{"\"\<N460G\>\"", "\[Rule]", "\"\<L476G\>\""}], ",", 
         RowBox[{"\"\<T84V\>\"", "\[Rule]", "\"\<D101V\>\""}], ",", 
         RowBox[{"\"\<T189V\>\"", "\[Rule]", "\"\<N206V\>\""}], ",", 
         RowBox[{"\"\<G289V\>\"", "\[Rule]", "\"\<G308V\>\""}], ",", 
         RowBox[{"\"\<I393V\>\"", "\[Rule]", "\"\<D411V\>\""}], ",", 
         RowBox[{"\"\<P497V\>\"", "\[Rule]", "\"\<P513V\>\""}], ",", 
         RowBox[{"\"\<H486E\>\"", "\[Rule]", "\"\<H353E\>\""}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"addFlags", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<P448V\>\"", "\[Rule]", "\"\<P448V*\>\""}], ",", 
         RowBox[{"\"\<Q131V\>\"", "\[Rule]", "\"\<Q131V*\>\""}], ",", 
         RowBox[{"\"\<T425G\>\"", "\[Rule]", "\"\<T425G*\>\""}], ",", 
         RowBox[{"\"\<N205G\>\"", "\[Rule]", "\"\<N205G*\>\""}], ",", 
         RowBox[{"\"\<Y192G\>\"", "\[Rule]", "\"\<Y192G*\>\""}], ",", 
         RowBox[{"\"\<G289V\>\"", "\[Rule]", "\"\<G289V*\>\""}], ",", 
         RowBox[{"\"\<I188G\>\"", "\[Rule]", "\"\<I188G*\>\""}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dsToAssociation", "=", 
       RowBox[{"Normal", "[", "dataset", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"replaced1", "=", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"#1", ",", "#2", ",", "Infinity"}], "]"}], "&"}], ",", 
         "dsToAssociation", ",", "remappingRules"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"replaced2", "=", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"#1", ",", "#2", ",", "Infinity"}], "]"}], "&"}], ",", 
         "replaced1", ",", "addFlags"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"newDs", "=", 
       RowBox[{"Dataset", "[", "replaced2", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"newDs", "[", 
       RowBox[{"All", ",", 
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"#", ",", 
           RowBox[{"\"\<KnownBadMutant\>\"", "\[Rule]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"addFlags", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "#MutantID"}],
                "]"}], ",", "1", ",", "0"}], "]"}]}]}], "]"}], "&"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"removed", " ", "R2", " ", "flags"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cullBadChambers", "[", "dataset_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grouped", ",", "countFitPoints", ",", "twoPointFits"}], "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"grouped", "=", 
       RowBox[{"dataset", "[", 
        RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"countFitPoints", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"grouped", "[", 
             RowBox[{"n", ",", "1", ",", "\"\<Indices\>\""}], "]"}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"ToExpression", "[", "#", "]"}], "]"}], "&"}], "/@", 
            RowBox[{"Normal", "[", 
             RowBox[{"grouped", "[", 
              RowBox[{"n", ",", "All", ",", "\"\<DataPointsOptLinFit\>\""}], 
              "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", 
           RowBox[{"Length", "[", "grouped", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"twoPointFits", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"countFitPoints", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Count", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], 
            "\[GreaterEqual]", "twoPointCutoff"}], "&"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "twoPointFits", "]"}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"dataset", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#ExpIndex", "\[Equal]", "1"}], "&&", 
           RowBox[{"#EnzymeConc", ">", "0.3"}], "&&", 
           RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}], "&&", 
           RowBox[{"#LocalBackgroundRatio", ">", "10.0"}], "&&", 
           RowBox[{
            RowBox[{"#", "[", "\"\<FitR2\>\"", "]"}], ">", "0.98"}], "&&", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"twoPointFits", ",", 
              RowBox[{"ToExpression", "[", "#Indices", "]"}]}], "]"}], 
            "\[Equal]", "False"}]}], "&"}], "]"}], "]"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dataset", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#SubstrateConc", "\[Equal]", "SconcToCullOn"}], "||", 
            RowBox[{"#SubstrateConc", "\[Equal]", 
             RowBox[{"Round", "[", "SconcToCullOn", "]"}]}]}], ")"}], "&&", 
          RowBox[{"#EnzymeConc", ">", "0.3"}], "&&", 
          RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}], "&&", 
          RowBox[{"#LocalBackgroundRatio", ">", "5.0"}], "&&", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"twoPointFits", ",", 
             RowBox[{"ToExpression", "[", "#Indices", "]"}]}], "]"}], 
           "\[Equal]", "False"}]}], "&"}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cullExpressors", "[", "dataset_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"grouped", ",", "countFitPoints", ",", "twoPointFits"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"grouped", "=", 
      RowBox[{"dataset", "[", 
       RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"countFitPoints", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"grouped", "[", 
            RowBox[{"n", ",", "1", ",", "\"\<Indices\>\""}], "]"}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"ToExpression", "[", "#", "]"}], "]"}], "&"}], "/@", 
           RowBox[{"Normal", "[", 
            RowBox[{"grouped", "[", 
             RowBox[{"n", ",", "All", ",", "\"\<DataPointsOptLinFit\>\""}], 
             "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "grouped", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"twoPointFits", "=", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"countFitPoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], 
           "\[GreaterEqual]", "2"}], "&"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"dataset", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#ExpIndex", "\[Equal]", "1"}], "&&", 
          RowBox[{"#EnzymeConc", ">", "0.3"}], "&&", 
          RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}], "&&", 
          RowBox[{"#LocalBackgroundRatio", ">", "10.0"}], "&&", 
          RowBox[{
           RowBox[{"#", "[", "\"\<FitR2\>\"", "]"}], ">", "0.98"}], "&&", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"twoPointFits", ",", 
             RowBox[{"ToExpression", "[", "#Indices", "]"}]}], "]"}], 
           "\[Equal]", "False"}]}], "&"}], "]"}], "]"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"dataset", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#SubstrateConc", "\[Equal]", "SconcToCullOn"}], "||", 
            RowBox[{"#SubstrateConc", "\[Equal]", 
             RowBox[{"Round", "[", "SconcToCullOn", "]"}]}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#LocalBackgroundRatio", "\[LessEqual]", "5.0"}], "||", 
            RowBox[{
             RowBox[{"#", "[", "\"\<FitR2\>\"", "]"}], "\[LessEqual]", 
             "0.97"}]}], ")"}], "&&", 
          RowBox[{"#EnzymeConc", ">", "0.3"}], "&&", 
          RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}]}], "&"}], "]"}], "]"}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"removed", " ", "fitR2", " ", "flag"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"dataset", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#SubstrateConc", "\[Equal]", "SconcToCullOn"}], "||", 
           RowBox[{"#SubstrateConc", "\[Equal]", 
            RowBox[{"Round", "[", "SconcToCullOn", "]"}]}]}], ")"}], "&&", 
         RowBox[{"(", 
          RowBox[{"#LocalBackgroundRatio", "\[LessEqual]", "5.0"}], ")"}], "&&", 
         RowBox[{"#EnzymeConc", ">", "0.3"}], "&&", 
         RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}]}], "&"}], "]"}], 
      "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.773427846563615*^9, 3.7734278857245607`*^9}, {
   3.7734280906953077`*^9, 3.773428175080647*^9}, {3.773443624060534*^9, 
   3.773443682637973*^9}, {3.773444393526875*^9, 3.7734445388640623`*^9}, {
   3.773445114373475*^9, 3.773445117163431*^9}, {3.773445314146317*^9, 
   3.773445331644019*^9}, {3.773597659753278*^9, 3.773597660614262*^9}, 
   3.773765295379788*^9, {3.7737653327886343`*^9, 3.773765333329047*^9}, {
   3.773765755403886*^9, 3.773765777068726*^9}, {3.773765812587063*^9, 
   3.7737658289215193`*^9}, {3.773766315273123*^9, 3.7737663201219473`*^9}, {
   3.773766539867496*^9, 3.773766544102895*^9}, {3.773767370110982*^9, 
   3.77376739530917*^9}, {3.773767589416737*^9, 3.773767601842875*^9}, {
   3.773768188646111*^9, 3.773768192015359*^9}, {3.77376823936714*^9, 
   3.7737682689464903`*^9}, {3.7737683469835863`*^9, 3.773768374624955*^9}, {
   3.773768553538035*^9, 3.7737686514443903`*^9}, {3.773769207872506*^9, 
   3.773769240560237*^9}, {3.773769475208774*^9, 3.773769484179349*^9}, {
   3.773771373995906*^9, 3.773771484827272*^9}, {3.7737715157935457`*^9, 
   3.7737715703519297`*^9}, {3.773771639517796*^9, 3.773771658066209*^9}, {
   3.773773180812028*^9, 3.773773191446826*^9}, {3.773773660431623*^9, 
   3.773773669675569*^9}, {3.7737754346001*^9, 3.773775436906645*^9}, {
   3.77377547207874*^9, 3.773775475783712*^9}, {3.7741219477207613`*^9, 
   3.7741219639217653`*^9}, {3.774122364541196*^9, 3.774122372359164*^9}, {
   3.7746228393314657`*^9, 3.774622844015033*^9}, {3.774623958762896*^9, 
   3.774623962525784*^9}, {3.775058112256711*^9, 3.775058119868078*^9}, {
   3.775067470685849*^9, 3.775067473951025*^9}, {3.776605605350206*^9, 
   3.776605622588513*^9}, {3.776605780214279*^9, 3.776605785205317*^9}, {
   3.7766058441242647`*^9, 3.776605895056185*^9}, {3.777834563869533*^9, 
   3.7778345859842787`*^9}, {3.777834629303891*^9, 3.777834715411982*^9}, {
   3.777835438675538*^9, 3.7778354521942883`*^9}, 3.777853975263479*^9, {
   3.7781832776346073`*^9, 3.7781833043033953`*^9}, {3.7781847179620457`*^9, 
   3.778184723082796*^9}, 3.778184801394253*^9, 3.778184844178211*^9, {
   3.77818556179897*^9, 3.778185565567766*^9}, {3.778192218769655*^9, 
   3.778192244604402*^9}, {3.7782638745222073`*^9, 3.778263894663336*^9}, {
   3.7792998946103487`*^9, 3.779299911539023*^9}, {3.779496391266595*^9, 
   3.77949639582787*^9}, {3.781986011212522*^9, 3.781986036948587*^9}, {
   3.782404451788711*^9, 3.782404454320581*^9}, {3.784318731835685*^9, 
   3.784318738528295*^9}, {3.7843188361257753`*^9, 3.784318836285097*^9}, {
   3.784318870461576*^9, 3.784318870609829*^9}, {3.7843368887290382`*^9, 
   3.7843368894206448`*^9}, {3.7843369507751913`*^9, 3.784336958168405*^9}, {
   3.784344162181025*^9, 3.784344162383181*^9}, {3.784824884755394*^9, 
   3.784824910404746*^9}, {3.7848264987703857`*^9, 3.7848265037529593`*^9}, {
   3.7880271720742207`*^9, 3.788027191421947*^9}, {3.788132599944577*^9, 
   3.788132600265026*^9}, {3.791658236271955*^9, 3.791658236753356*^9}, {
   3.7916664810084143`*^9, 3.791666481476841*^9}, {3.7921812268767567`*^9, 
   3.792181227585074*^9}, {3.7925397781350183`*^9, 3.792539784836851*^9}, {
   3.792539896776752*^9, 3.79253990734201*^9}, {3.7995233054431868`*^9, 
   3.799523305715282*^9}, {3.8123894226338263`*^9, 3.812389423006166*^9}, {
   3.8123898296252337`*^9, 3.812389830133271*^9}, {3.812392624634384*^9, 
   3.812392624877429*^9}, {3.8123964887001953`*^9, 3.812396491104245*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"fb32acb4-b359-47f1-868b-143b6153d6ea"],

Cell[CellGroupData[{

Cell["Import all Michaelis-Menten data (1 csv per experiment):", \
"Subsubsection",
 CellChangeTimes->{{3.773498342627685*^9, 
  3.773498366448601*^9}},ExpressionUUID->"2d5bc04a-693f-44b9-9b8d-\
57108e9cbb42"],

Cell["\<\
For each individual experiment, the CSV file is imported and then the \
following functions are applied sequentially:

1. 'generateDatasetFromCSV' - converts CSV \"Table\" format into Dataset \
format. I'm also appending the chip type (e.g. GlyScan) and the filename in \
order to ensure that each experiment contains a unique identifier string.

2. 'cullBadChambers' - this function groups the data by chamber and applies \
our standard QC criteria as selection criteria, removing those chambers that \
are bad/low-quality.\
\>", "Text",
 CellChangeTimes->{{3.77349837472719*^9, 
  3.77349851498953*^9}},ExpressionUUID->"02b0d59e-d607-4b3f-b749-\
3c6f6414bdd9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"files", "=", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/190407_S3_\
d1_cMUP_1_GlyScan.csv.bz2\>\"", ",", "\"\<GlyScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/181119_S2_\
d2_cMUP_1_GlyScan.csv.bz2\>\"", ",", "\"\<GlyScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180614_S3_\
d1_cMUP_1_GlyScan.csv.bz2\>\"", ",", "\"\<GlyScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180614_S2_\
d1_cMUP_1_GlyScan.csv.bz2\>\"", ",", "\"\<GlyScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180531_S2_\
d1_cMUP_1_GlyScan.csv.bz2\>\"", ",", "\"\<GlyScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180225_S2_\
d2_cMUP_1_ValScan.csv.bz2\>\"", ",", "\"\<ValScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180302_S2_\
d3_cMUP_1_ValScan.csv.bz2\>\"", ",", "\"\<ValScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180402_S4_\
d3_cMUP_1_ValScan.csv.bz2\>\"", ",", "\"\<ValScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180522_S3_\
d2_cMUP_1_ValScan.csv.bz2\>\"", ",", "\"\<ValScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/190205_S3_\
d1_cMUP_1_ValScan.csv.bz2\>\"", ",", "\"\<ValScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180528_S3_\
d1_cMUP_1_ValScan.csv.bz2\>\"", ",", "\"\<ValScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/190506_S2_\
d1_cMUP_1_SlowChip.csv.bz2\>\"", ",", "\"\<SlowChip\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/190626_S2_\
d1_cMUP_1_SlowChip.csv.bz2\>\"", ",", "\"\<SlowChip\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/190630_S2_\
d1_cMUP_1_SlowChip.csv.bz2\>\"", ",", "\"\<SlowChip\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/190609_S2_\
d1_cMUP_1_SlowChip.csv.bz2\>\"", ",", "\"\<SlowChip\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/191128_S2_\
d3_cMUP_1_SlowestChip.csv.bz2\>\"", ",", "\"\<SlowestChip\>\""}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputFilePaths", "=", 
   RowBox[{"files", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"scanType", "=", 
  RowBox[{"files", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.774122560234984*^9, 3.774122626336917*^9}, {
   3.774122683320243*^9, 3.7741226865842533`*^9}, {3.7741229122136927`*^9, 
   3.774123079068323*^9}, {3.774123199387217*^9, 3.774123212745772*^9}, {
   3.775067566505419*^9, 3.7750675699671164`*^9}, 3.7750679022805777`*^9, {
   3.777834738178802*^9, 3.777834856871276*^9}, {3.7778349446758547`*^9, 
   3.7778349800134153`*^9}, {3.779496424177548*^9, 3.779496518003006*^9}, {
   3.78094519466297*^9, 3.780945238610433*^9}, {3.781015297230261*^9, 
   3.781015304328364*^9}, {3.781024555483447*^9, 3.781024563223123*^9}, {
   3.781095341539379*^9, 3.781095347513887*^9}, {3.7812730359252453`*^9, 
   3.781273055030932*^9}, {3.7812731470856457`*^9, 3.781273176895089*^9}, {
   3.7813931508185987`*^9, 3.781393158440353*^9}, {3.781834594497707*^9, 
   3.781834610758029*^9}, {3.781834653951416*^9, 3.781834660357704*^9}, {
   3.784336540609124*^9, 3.784336549359399*^9}, 3.784336580940428*^9, {
   3.784336777041142*^9, 3.7843367773654623`*^9}, {3.78434881254156*^9, 
   3.7843488136095448`*^9}, {3.7843806779398518`*^9, 
   3.7843806805128202`*^9}, {3.7916590214500513`*^9, 
   3.7916590224518023`*^9}, {3.79952218446408*^9, 3.79952224994158*^9}, {
   3.802383179291733*^9, 3.802383335620955*^9}, {3.802383438609027*^9, 
   3.802383496635808*^9}, 3.8023835617464743`*^9, {3.802384398576356*^9, 
   3.802384403603209*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"55e6d27b-2411-4146-90f3-8c0b5e3eebad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/190407_\
S3_d1_cMUP_1_GlyScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/181119_S2_\
d2_cMUP_1_GlyScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180614_S3_\
d1_cMUP_1_GlyScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180614_S2_\
d1_cMUP_1_GlyScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180531_S2_\
d1_cMUP_1_GlyScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180225_S2_\
d2_cMUP_1_ValScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180302_S2_\
d3_cMUP_1_ValScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180402_S4_\
d3_cMUP_1_ValScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180522_S3_\
d2_cMUP_1_ValScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/190205_S3_\
d1_cMUP_1_ValScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/180528_S3_\
d1_cMUP_1_ValScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/190506_S2_\
d1_cMUP_1_SlowChip.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/190626_S2_\
d1_cMUP_1_SlowChip.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/190630_S2_\
d1_cMUP_1_SlowChip.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/190609_S2_\
d1_cMUP_1_SlowChip.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/cMUP/191128_S2_\
d3_cMUP_1_SlowestChip.csv.bz2\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.799522300309224*^9, 3.7995233085475407`*^9, 
  3.8022852224042273`*^9, 3.8023844038297033`*^9, 3.807129219363068*^9, 
  3.808937375798935*^9, 3.810491114964012*^9, 3.8123907063490973`*^9, 
  3.812392661658101*^9, 3.8125549077533216`*^9, 3.8126509549498777`*^9, 
  3.8126618395491943`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"6d2b361e-f994-412e-b1c0-19d35f049be2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GlyScan\"\>", ",", "\<\"GlyScan\"\>", ",", "\<\"GlyScan\"\>", 
   ",", "\<\"GlyScan\"\>", ",", "\<\"GlyScan\"\>", ",", "\<\"ValScan\"\>", 
   ",", "\<\"ValScan\"\>", ",", "\<\"ValScan\"\>", ",", "\<\"ValScan\"\>", 
   ",", "\<\"ValScan\"\>", ",", "\<\"ValScan\"\>", ",", "\<\"SlowChip\"\>", 
   ",", "\<\"SlowChip\"\>", ",", "\<\"SlowChip\"\>", ",", "\<\"SlowChip\"\>", 
   ",", "\<\"SlowestChip\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.799522300309224*^9, 3.7995233085475407`*^9, 
  3.8022852224042273`*^9, 3.8023844038297033`*^9, 3.807129219363068*^9, 
  3.808937375798935*^9, 3.810491114964012*^9, 3.8123907063490973`*^9, 
  3.812392661658101*^9, 3.8125549077533216`*^9, 3.8126509549498777`*^9, 
  3.81266183955116*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"5696dd5c-849a-4442-8eb9-66c7d8f8a977"]
}, Open  ]],

Cell["\<\
Note: Need the append below for a single SlowChip experiment for which I need \
to change some keys:\
\>", "Text",
 CellChangeTimes->{{3.774123090608007*^9, 
  3.774123107254936*^9}},ExpressionUUID->"7777c015-8474-4334-a5d6-\
973e0e63af64"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ProgressIndicator", "[", 
   RowBox[{
    RowBox[{"Dynamic", "[", "itr", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "inputFilePaths", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pathLengthToDrop", "=", "54"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"datasets", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"remapNames", "[", 
       RowBox[{"generateDatasetFromCSV", "[", 
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"inputFilePaths", "[", 
            RowBox[{"[", "itr", "]"}], "]"}], ",", "\"\<Data\>\""}], "]"}], 
         ",", 
         RowBox[{"scanType", "[", 
          RowBox[{"[", "itr", "]"}], "]"}], ",", 
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringDrop", "[", 
            RowBox[{
             RowBox[{"inputFilePaths", "[", 
              RowBox[{"[", "itr", "]"}], "]"}], ",", 
             RowBox[{"-", "4"}]}], "]"}], ",", "pathLengthToDrop"}], "]"}]}], 
        "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"itr", ",", "1", ",", 
        RowBox[{"Length", "[", "inputFilePaths", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"culledWithLigands", "=", 
    RowBox[{"Join", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"cullBadChambers", "[", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", "itr", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"itr", ",", "1", ",", 
         RowBox[{"Length", "[", "inputFilePaths", "]"}]}], "}"}]}], "]"}]}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"culledIn", "=", 
   RowBox[{"culledWithLigands", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#MutantID", ",", 
            RowBox[{"-", "1"}]}], "]"}], "==", "\"\<V\>\""}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", 
              RowBox[{"-", "1"}]}], "]"}], "==", "\"\<A\>\""}], "&&", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", "1"}], "]"}], "==", "\"\<V\>\""}]}], 
          ")"}]}], ")"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#MutantID", ",", 
            RowBox[{"-", "1"}]}], "]"}], "==", "\"\<G\>\""}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", 
              RowBox[{"-", "1"}]}], "]"}], "==", "\"\<A\>\""}], "&&", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", "1"}], "]"}], "==", "\"\<G\>\""}]}], 
          ")"}]}], ")"}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<WT\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<R164A\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<K162A\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<N100A/R164A\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<T79G\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<T79S\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<N100A\>\""}]}], "&"}], "]"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.774122399783924*^9, 3.774122546002706*^9}, 
   3.774122632944194*^9, {3.7741230870021067`*^9, 3.774123087968048*^9}, {
   3.774123122542938*^9, 3.774123135118417*^9}, {3.7741232456170692`*^9, 
   3.774123261443214*^9}, {3.774123327071352*^9, 3.7741233271961813`*^9}, {
   3.774123944486828*^9, 3.774123951287781*^9}, {3.774124357383595*^9, 
   3.774124361224667*^9}, {3.774211533567322*^9, 3.774211586572522*^9}, {
   3.77462309146887*^9, 3.774623095241364*^9}, {3.774623985357997*^9, 
   3.7746239891141777`*^9}, {3.774798968773896*^9, 3.774799003135635*^9}, {
   3.774830474372258*^9, 3.7748304908565807`*^9}, {3.775058128576497*^9, 
   3.775058128816437*^9}, {3.7750674863559523`*^9, 3.77506748666019*^9}, {
   3.77506756997799*^9, 3.7750676135102577`*^9}, 3.775067940807212*^9, {
   3.7778348762080927`*^9, 3.777834891695784*^9}, {3.777986007757271*^9, 
   3.7779860080500603`*^9}, {3.778263916427289*^9, 3.778263919324294*^9}, {
   3.779299455564131*^9, 3.779299486947023*^9}, {3.779299956077868*^9, 
   3.779299958216004*^9}, {3.7798151429624643`*^9, 3.77981514329494*^9}, {
   3.791658276001051*^9, 3.791658279700202*^9}, {3.791918174300441*^9, 
   3.791918178208461*^9}, {3.799522290226572*^9, 3.7995222905352373`*^9}, {
   3.80238442037462*^9, 3.802384420562459*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"994f18a8-2ebe-4c1d-b6d9-d09ec9d15804"],

Cell[BoxData[
 ProgressIndicatorBox[Dynamic[$CellContext`itr], {1, 16}]], "Output",
 CellChangeTimes->{3.7995223062462673`*^9, 3.799523309918653*^9, 
  3.80228522431533*^9, 3.802384422409705*^9, 3.807129238722047*^9, 
  3.808937377428102*^9, 3.810491117045713*^9, 3.812390708064217*^9, 
  3.812392663218403*^9, 3.81255490962442*^9, 3.812650957119966*^9, 
  3.812661841519022*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"99e92850-3449-42a2-88cf-4a79655715b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"28", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "41"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.81266274192315*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"4627d7f0-3a1d-4516-b3a0-36cc0cae0b4c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"12", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "50"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.8126627440100517`*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"bf53df10-b3e3-4b18-8fb4-6bacba2559bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "46"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.812662746221035*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"bd43777e-c288-4162-8682-d23f23e4ec4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"28", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "2"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.812662748389893*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"02d4505e-227a-4e09-a034-c17bea42058b"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Print",
 CellChangeTimes->{3.812662750618259*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"5264e095-653d-4071-b4ea-558e2fec348b"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Print",
 CellChangeTimes->{3.812662752895474*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"5043ac76-358a-4c63-a20b-903b037efda6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"6", ",", "32"}], "}"}], "}"}]], "Print",
 CellChangeTimes->{3.812662755163547*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"9b951395-9cb2-46e6-84a0-26be3510c454"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"13", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "56"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.812662757293252*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"b28b1cfd-ab08-4398-97b4-2ad8897731c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.81266275947311*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"602b279a-f904-4b25-b527-57fc9894b78d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"28", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "28"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.812662761675894*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"fbd908ed-c3f2-451a-9ec1-dfd840dfc6ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"11", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "10"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.812662763858745*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"751683f1-33f4-4a4d-ba5e-5350370da374"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"21", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "26"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.812662766217436*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"168c75a4-19db-4ae0-9844-997dcc9ad4e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"28", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "38"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "27"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.812662768606235*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"4f0e1cda-bd7e-493a-9478-7b910800d107"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"28", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "38"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "38"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "38"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "38"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "38"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "38"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "38"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "38"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "55"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.812662770958782*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"df9412da-0a7c-4aa6-8d44-9e215753534f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"12", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.812662773333721*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"33e030c0-5465-4c94-b218-b96225bcb302"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Print",
 CellChangeTimes->{3.812662775850211*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"366d8249-76a7-499a-8814-20c760ac71e5"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"slowWithLigands", "=", 
    RowBox[{"Join", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"cullExpressors", "[", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", "itr", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"itr", ",", "1", ",", 
         RowBox[{"Length", "[", "inputFilePaths", "]"}]}], "}"}]}], "]"}]}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"slowIn", "=", 
   RowBox[{"slowWithLigands", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#MutantID", ",", 
            RowBox[{"-", "1"}]}], "]"}], "==", "\"\<V\>\""}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", 
              RowBox[{"-", "1"}]}], "]"}], "==", "\"\<A\>\""}], "&&", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", "1"}], "]"}], "==", "\"\<V\>\""}]}], 
          ")"}]}], ")"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#MutantID", ",", 
            RowBox[{"-", "1"}]}], "]"}], "==", "\"\<G\>\""}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", 
              RowBox[{"-", "1"}]}], "]"}], "==", "\"\<A\>\""}], "&&", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", "1"}], "]"}], "==", "\"\<G\>\""}]}], 
          ")"}]}], ")"}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<WT\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<R164A\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<K162A\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<N100A/R164A\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<T79G\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<T79S\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<N100A\>\""}]}], "&"}], "]"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7741243664890013`*^9, 3.774124367349648*^9}, {
   3.7741251364713907`*^9, 3.774125151419034*^9}, {3.774128363821538*^9, 
   3.774128365103962*^9}, {3.774211591969721*^9, 3.7742116065478983`*^9}, {
   3.7746231279511747`*^9, 3.77462312861474*^9}, {3.774624014805472*^9, 
   3.774624016657402*^9}, {3.775058146949836*^9, 3.775058147879332*^9}, {
   3.7750674916858873`*^9, 3.775067491900179*^9}, 3.775067569994548*^9, 
   3.775067618172494*^9, 3.777834895815569*^9, {3.777985999928815*^9, 
   3.777986000093055*^9}, 3.779299494229809*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"8062855c-afcd-4132-8f95-6f9966e04c54"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unmeasuredIn", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"slowIn", "[", 
        RowBox[{"All", ",", "\"\<MutantID\>\""}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Normal", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"culledIn", "[", 
        RowBox[{"All", ",", "\"\<MutantID\>\""}], "]"}], "]"}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7734101905770903`*^9, 3.773410192271964*^9}, {
  3.7734458564179296`*^9, 3.773445911342699*^9}, {3.773446041316244*^9, 
  3.773446094695821*^9}, {3.7734461483885517`*^9, 3.7734461487594213`*^9}, {
  3.7734986361227083`*^9, 3.773498655545452*^9}, {3.773498697645569*^9, 
  3.773498733458871*^9}, {3.773597638144314*^9, 3.77359764724015*^9}, {
  3.774212114327752*^9, 3.774212143902062*^9}, {3.774290618710362*^9, 
  3.7742907290433407`*^9}, {3.774291247088675*^9, 3.774291302252035*^9}, {
  3.777986045942741*^9, 3.777986068257065*^9}, {3.7779890764854193`*^9, 
  3.777989078240446*^9}, {3.778192074256361*^9, 3.778192075522244*^9}, {
  3.7781921911461*^9, 3.778192193802058*^9}, {3.8089373824351254`*^9, 
  3.808937383394794*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"e5494d46-1093-45ba-b54e-f4a8a78e3ec4"],

Cell["\<\
Group the aggregate dataset by mutant and print out a list of the \
experimental ID strings (for fast chips only):\
\>", "Text",
 CellChangeTimes->{{3.773498771687449*^9, 3.773498804505756*^9}, {
  3.78172643344129*^9, 
  3.781726437448236*^9}},ExpressionUUID->"3b92b5f8-60bc-45f4-992a-\
69f6a3a46416"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantInFastChips", "=", 
    RowBox[{
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowChip\>\""}], "&&", 
         RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowestChip\>\""}]}], "&"}],
        "]"}], "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantIn2FastChips", "=", 
    RowBox[{"KeySortBy", "[", 
     RowBox[{"groupedbyMutantInFastChips", ",", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tooSlowInFastChips", "=", 
    RowBox[{
     RowBox[{"slowIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowChip\>\""}], "&&", 
         RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowestChip\>\""}]}], "&"}],
        "]"}], "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tooSlowIn2FastChips", "=", 
    RowBox[{"KeySortBy", "[", 
     RowBox[{"tooSlowInFastChips", ",", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "SlowChip", " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantInSlowChip", "=", 
    RowBox[{
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#ChipType", "==", "\"\<SlowChip\>\""}], "&"}], "]"}], "]"}], 
     "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantIn2SlowChip", "=", 
    RowBox[{"KeySortBy", "[", 
     RowBox[{"groupedbyMutantInSlowChip", ",", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tooSlowInSlowChip", "=", 
    RowBox[{
     RowBox[{"slowIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#ChipType", "==", "\"\<SlowChip\>\""}], "&"}], "]"}], "]"}], 
     "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tooSlowIn2SlowChip", "=", 
   RowBox[{"KeySortBy", "[", 
    RowBox[{"tooSlowInSlowChip", ",", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringDrop", "[", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{"#", ",", "1"}], "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "SlowestChip", " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantInSlowestChip", "=", 
    RowBox[{
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#ChipType", "==", "\"\<SlowestChip\>\""}], "&"}], "]"}], 
      "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantIn2SlowestChip", "=", 
    RowBox[{"KeySortBy", "[", 
     RowBox[{"groupedbyMutantInSlowestChip", ",", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tooSlowInSlowestChip", "=", 
    RowBox[{
     RowBox[{"slowIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#ChipType", "==", "\"\<SlowestChip\>\""}], "&"}], "]"}], 
      "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"tooSlowIn2SlowestChip", "=", 
  RowBox[{"KeySortBy", "[", 
   RowBox[{"tooSlowInSlowestChip", ",", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringDrop", "[", 
       RowBox[{
        RowBox[{"StringDrop", "[", 
         RowBox[{"#", ",", "1"}], "]"}], ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7734287854152527`*^9, 3.773498793238028*^9, {3.774125104503742*^9, 
   3.7741251310068483`*^9}, {3.777986119173411*^9, 3.77798613759132*^9}, {
   3.7781921359178677`*^9, 3.77819214449*^9}, {3.781726356394273*^9, 
   3.781726358805141*^9}, {3.7817264216109858`*^9, 3.781726453845146*^9}, {
   3.7817266193399277`*^9, 3.781726685684267*^9}, {3.781835435468452*^9, 
   3.781835445904533*^9}, 3.781985846008316*^9, {3.784341652002438*^9, 
   3.784341685367799*^9}, {3.7843481680767317`*^9, 3.784348229949911*^9}, {
   3.784380879455055*^9, 3.784380889324027*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"63e6970d-0968-4161-8c6b-807775a5313c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          8313918522522547726630769631792687972993012039571962056544], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           Association[{All, All, 
              TypeSystem`PackageScope`KeyDummy[2]} -> 
            1, {All, All, "MutantID"} -> 1, {All, All, "ExpIndex"} -> 
            1, {All, All, "ManualGFPFlag"} -> 1, {All, All, "UniqueExptID"} -> 
            1, {All, All, "ChipType"} -> 
            1, {All, All, "LocalBackgroundRatio"} -> 1, {All, All, "Indices"} -> 
            1, {All, All, "EnzymeConc"} -> 1, {All, All, "fit_mm_datapoints"} -> 
            1, {All, All, "DataPointsOptLinFit"} -> 
            1, {All, All, "fit_mm_curved_r2"} -> 1, {All, All, "fit_mm_kcat"} -> 
            1, {All, All, "fit_mm_KM"} -> 
            1, {All, All, "fit_mm_scale_factor"} -> 1, {All, All, "FitR2"} -> 
            1, {All, All, "DataPoints"} -> 1, {All, All, "kcat"} -> 
            1, {All, All, "Km"} -> 1, {All, All, "ScaleFactor"} -> 
            1, {All, All, "SubstrateConc"} -> 1, {All, All, "OptLinFitSlope"} -> 
            1, {All, All, "AllLBRs"} -> 1, {All, All, "AllInitialRates"} -> 
            1, {All, All, "AllSubstrateConcs"} -> 
            1, {All, All, "StdCurveSlope"} -> 
            1, {All, All, "StdCurveIntercept"} -> 1, {All, All, "StdCurveR2"} -> 
            1, {All, All, "fit_mm_kcat_param_error"} -> 
            1, {All, All, "fit_mm_KM_param_error"} -> 
            1, {All, All, "AllEnzymeConcs"} -> 
            1, {All, All, "KnownBadMutant"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "MutantID" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ExpIndex" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ManualGFPFlag" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "UniqueExptID" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ChipType" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "LocalBackgroundRatio" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Indices" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "EnzymeConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_datapoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "DataPointsOptLinFit" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_curved_r2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_KM" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_scale_factor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "FitR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "DataPoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Km" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ScaleFactor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "SubstrateConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "OptLinFitSlope" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "AllLBRs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllInitialRates" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllSubstrateConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "StdCurveSlope" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "StdCurveIntercept" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "StdCurveR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_kcat_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_KM_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllEnzymeConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "KnownBadMutant" -> 
                   TypeSystem`PackageScope`UnknownShape[False]]], 
                 DirectedInfinity[1], 10, {All, All}]], 2, 
               DirectedInfinity[1], {All}]]], 10, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MutantID", "ExpIndex", "ManualGFPFlag", "UniqueExptID", 
              "ChipType", "LocalBackgroundRatio", "Indices", "EnzymeConc", 
              "fit_mm_datapoints", "DataPointsOptLinFit", "fit_mm_curved_r2", 
              "fit_mm_kcat", "fit_mm_KM", "fit_mm_scale_factor", "FitR2", 
              "DataPoints", "kcat", "Km", "ScaleFactor", "SubstrateConc", 
              "OptLinFitSlope", "AllLBRs", "AllInitialRates", 
              "AllSubstrateConcs", "StdCurveSlope", "StdCurveIntercept", 
              "StdCurveR2", "fit_mm_kcat_param_error", 
              "fit_mm_KM_param_error", "AllEnzymeConcs", "KnownBadMutant"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType}], TypeSystem`AnyLength], 159], "Meta" -> 
         Association["ID" -> 7480935596581620], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           Association[{All, All, 
              TypeSystem`PackageScope`KeyDummy[2]} -> 
            1, {All, All, "MutantID"} -> 1, {All, All, "ExpIndex"} -> 
            1, {All, All, "ManualGFPFlag"} -> 1, {All, All, "UniqueExptID"} -> 
            1, {All, All, "ChipType"} -> 
            1, {All, All, "LocalBackgroundRatio"} -> 1, {All, All, "Indices"} -> 
            1, {All, All, "EnzymeConc"} -> 1, {All, All, "fit_mm_datapoints"} -> 
            1, {All, All, "DataPointsOptLinFit"} -> 
            1, {All, All, "fit_mm_curved_r2"} -> 1, {All, All, "fit_mm_kcat"} -> 
            1, {All, All, "fit_mm_KM"} -> 
            1, {All, All, "fit_mm_scale_factor"} -> 1, {All, All, "FitR2"} -> 
            1, {All, All, "DataPoints"} -> 1, {All, All, "kcat"} -> 
            1, {All, All, "Km"} -> 1, {All, All, "ScaleFactor"} -> 
            1, {All, All, "SubstrateConc"} -> 1, {All, All, "OptLinFitSlope"} -> 
            1, {All, All, "AllLBRs"} -> 1, {All, All, "AllInitialRates"} -> 
            1, {All, All, "AllSubstrateConcs"} -> 
            1, {All, All, "StdCurveSlope"} -> 
            1, {All, All, "StdCurveIntercept"} -> 1, {All, All, "StdCurveR2"} -> 
            1, {All, All, "fit_mm_kcat_param_error"} -> 
            1, {All, All, "fit_mm_KM_param_error"} -> 
            1, {All, All, "AllEnzymeConcs"} -> 
            1, {All, All, "KnownBadMutant"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "MutantID" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ExpIndex" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ManualGFPFlag" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "UniqueExptID" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ChipType" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "LocalBackgroundRatio" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Indices" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "EnzymeConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_datapoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "DataPointsOptLinFit" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_curved_r2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_KM" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_scale_factor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "FitR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "DataPoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Km" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ScaleFactor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "SubstrateConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "OptLinFitSlope" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "AllLBRs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllInitialRates" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllSubstrateConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "StdCurveSlope" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "StdCurveIntercept" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "StdCurveR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_kcat_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_KM_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllEnzymeConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "KnownBadMutant" -> 
                   TypeSystem`PackageScope`UnknownShape[False]]], 
                 DirectedInfinity[1], 10, {All, All}]], 2, 
               DirectedInfinity[1], {All}]]], 10, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MutantID", "ExpIndex", "ManualGFPFlag", "UniqueExptID", 
              "ChipType", "LocalBackgroundRatio", "Indices", "EnzymeConc", 
              "fit_mm_datapoints", "DataPointsOptLinFit", "fit_mm_curved_r2", 
              "fit_mm_kcat", "fit_mm_KM", "fit_mm_scale_factor", "FitR2", 
              "DataPoints", "kcat", "Km", "ScaleFactor", "SubstrateConc", 
              "OptLinFitSlope", "AllLBRs", "AllInitialRates", 
              "AllSubstrateConcs", "StdCurveSlope", "StdCurveIntercept", 
              "StdCurveR2", "fit_mm_kcat_param_error", 
              "fit_mm_KM_param_error", "AllEnzymeConcs", "KnownBadMutant"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType}], TypeSystem`AnyLength], 159], "Path" -> {},
          "BaseIndices" -> {}, "DisplayedRowCount" -> 10, 
         "DisplayedColumnCount" -> 10, "DataRowCount" -> 159, 
         "DataColumnCount" -> 31, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MutantID", 
                    Style[
                    "MutantID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "MutantID"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "MutantID"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ExpIndex", 
                    Style[
                    "ExpIndex", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "ExpIndex"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "ExpIndex"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ManualGFPFlag", 
                    Style[
                    "ManualGFPFlag", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "ManualGFPFlag"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "ManualGFPFlag"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["UniqueExptID", 
                    Style[
                    "UniqueExptID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "UniqueExptID"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "UniqueExptID"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ChipType", 
                    Style[
                    "ChipType", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "ChipType"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "ChipType"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["LocalBackgroundRatio", 
                    Style[
                    "LocalBackgroundRatio", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "LocalBackgroundRatio"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "LocalBackgroundRatio"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Indices", 
                    Style[
                    "Indices", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Indices"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Indices"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["EnzymeConc", 
                    Style[
                    "EnzymeConc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "EnzymeConc"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "EnzymeConc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["fit_mm_datapoints", 
                    Style[
                    "fit_mm_datapoints", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "fit_mm_datapoints"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "fit_mm_datapoints"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["DataPointsOptLinFit", 
                    Style[
                    "DataPointsOptLinFit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "DataPointsOptLinFit"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "DataPointsOptLinFit"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["P29G", 
                    Style[
                    "P29G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["P29G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["P29G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190630_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.24496"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{23, 50}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["21.3624"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.0849505515968918}, {25., 0.21680679085730248}, \
{50., 0.41117951266263797}, {100., 0.6644012320341485}, {200., \
0.8130737460668267}, {500., 1.}, {1000., 0.9671879343030374}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1728.0000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 12.720260912288246}, {89, 63.77630437623273}, {177, \
113.6513518408386}, {266, 162.60099199252988}, {356, 210.20218148825992}, \
{445, 255.62646044789565}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1507.2000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["P29G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190630_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.257343"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{27, 18}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.99024"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.12264392164732561}, {25., 0.3300533733865322}, \
{50., 0.5761190583492892}, {100., 0.6438555434056784}, {200., \
0.7440685941497174}, {500., 0.9555491936255079}, {1000., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1718.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 2.166125505154026}, {89, 4.439995514086749}, {177, \
6.740102484661004}, {266, 9.0751920707573}, {356, 11.314079464167982}, {445, \
13.579203819220194}, {534, 15.72188901994526}, {623, 17.908302490072877}, \
{711, 20.077224652439476}, {800, 22.246146814806075}, {950, \
25.989286675664555}, {1250, 33.22194243484672}, {1850, 47.43362999067624}, \
{2750, 68.16082968748607}, {3950, 94.55521309886667}, {6350, \
147.1865581517787}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4051.2000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["3 total \:203a ", ""], 
                    Style[
                    Superscript["3 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["P29G"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["P29G"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["L31G", 
                    Style[
                    "L31G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["L31G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["L31G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190506_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.493316"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{24, 22}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16.3293"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.08388688118126046}, {25., 0.257052909117423}, \
{50., 0.36891618235692625}, {100., 0.4825693068696458}, {200., \
0.6608727664414479}, {500., 0.8846631612709445}, {1000., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1718.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.0673193620167205}, {88, 1.058307408292073}, {177, \
1.193486714161786}, {267, 1.1844747604371386}, {356, 1.2024986678864336}, \
{444, 1.2655823439589664}, {533, 1.3466899274807942}, {622, \
1.3196540663068514}, {712, 1.3466899274807942}, {801, 1.3917496961040319}, \
{951, 1.4368094647272696}, {1251, 1.562976816872335}, {1851, \
1.8874071509596462}, {2751, 2.2388733462209}, {3951, 2.662435171279334}, \
{6351, 3.4464751453236695}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4099.200000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["L31G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190506_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.39354"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{9, 23}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["13.2682"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.09426447856888444}, {25., 0.23258357242039157}, \
{50., 0.3750965423949072}, {100., 0.5218662863589475}, {200., \
0.7011334507009606}, {500., 0.9180309659173456}, {1000., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1728.0000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.2463454687303896}, {88, 1.327692819693056}, {177, \
1.4192085895260556}, {267, 1.500555940488722}, {356, 1.602240129192055}, \
{444, 1.6937558990250545}, {533, 1.7751032499877208}, {622, \
1.8564506009503872}, {712, 1.9784716273943868}, {801, 1.9988084651350533}, \
{951, 2.202176842541719}, {1251, 2.5377346652627177}, {1851, \
3.107166122001382}, {2751, 3.9714817259797117}, {3951, 5.1815235715493735}, \
{6351, 7.499923073985364}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4108.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["13 total \:203a ", ""], 
                    Style[
                    Superscript["13 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["L31G"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["L35G", 
                    Style[
                    "L35G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["L35G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["L35G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190506_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.25898"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{22, 47}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15.373"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.07365426008001251}, {25., 0.18787962731893024}, \
{50., 0.32553871203306955}, {100., 0.47284884547321177}, {200., \
0.6672257623878216}, {500., 0.8848063181304855}, {1000., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1747.2000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.4782217309776207}, {88, 1.7334148236157219}, {177, \
2.0111249538395377}, {267, 2.273823725672877}, {356, 2.536522497506217}, \
{444, 2.7541871941681264}, {533, 3.0093802868062274}, {622, \
3.242056341858614}, {712, 3.497249434496715}, {801, 3.7074084519633868}, \
{951, 4.135232166091968}, {1251, 4.938339839982463}, {1851, \
6.537049508568214}, {2751, 8.691179437601598}, {3951, 11.40823530627785}, \
{6351, 16.752278893287496}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4080.0000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["L35G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190506_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.95903"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{26, 15}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14.9914"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.09909511704444425}, {25., 0.24279974442434804}, \
{50., 0.42610029780353625}, {100., 0.6007392374129271}, {200., \
0.8245419245069695}, {500., 0.9821020688753896}, {1000., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1737.6000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.4339333736671178}, {88, 1.7220386113781563}, {177, \
2.0581613887077013}, {267, 2.370275396227993}, {356, 2.670385018843658}, \
{444, 3.05452533579171}, {533, 3.294613033884242}, {622, 3.582718271595281}, \
{712, 3.930845433829452}, {801, 4.158928747017358}, {951, 4.723134837534809}, \
{1251, 5.827538248760456}, {1851, 7.916301222165486}, {2751, \
11.12147199170079}, {3951, 15.335011093224729}, {6351, 23.798102450986487}}", 
                   
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4051.2000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["10 total \:203a ", ""], 
                    Style[
                    Superscript["10 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["L35G"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["D38G", 
                    Style[
                    "D38G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D38G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["D38G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190626_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.74685"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{9, 28}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15.7355"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.5714542129116336}, {25., 1.}, {50., \
0.8377101409622009}, {100., 0.34267252314553204}, {200., \
0.33564280638312627}, {500., 0.3519997497774627}, {1000., \
0.319974399243005}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1718.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 2.6166012552766182}, {89, 3.4720123077343152}, {178, \
4.299145308871097}, {267, 5.211112463970625}, {356, 6.038245465107407}, {445, \
6.858308953413959}, {534, 7.6359553647391385}, {623, 8.484296904366607}, \
{712, 9.353846982484761}, {801, 10.117354368149483}, {951, \
11.446422780232515}, {1251, 14.005586424775379}, {1851, 19.003731995747213}, \
{2751, 26.398442416166645}, {3951, 36.260412814335965}, {6351, \
55.68743407180498}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4099.200000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["D38G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190626_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.50488"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{6, 50}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14.6778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.3575651171735907}, {25., 0.6946409922628659}, \
{50., 0.8944841108358406}, {100., 1.}, {200., 0.3557805397506702}, {500., \
0.35928132306538435}, {1000., 0.3393497423516545}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1718.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 6.146925844277679}, {89, 7.8768180307044595}, {178, \
9.622155683081479}, {267, 11.375216068433618}, {356, 13.020158192134083}, \
{445, 14.695991247735027}, {534, 16.379547036311088}, {623, \
18.001320961086194}, {712, 19.731213147512975}, {801, 21.298927941462242}, \
{951, 24.318516534733988}, {1251, 29.631756821616243}, {1851, \
40.33546472513194}, {2751, 56.47597664313181}, {3951, 77.47408760248187}, \
{6351, 119.69426877746047}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4118.400000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["4 total \:203a ", ""], 
                    Style[
                    Superscript["4 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D38G"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["D38V", 
                    Style[
                    "D38V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D38V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["D38V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190506_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.01223"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{19, 27}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15.7712"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.07760105483563728}, {25., 0.1935337180248576}, \
{50., 0.3184322867975563}, {100., 0.4844568837873303}, {200., \
0.7011801822353585}, {500., 0.8936103597511099}, {1000., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1718.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.9688001766697583}, {88, 2.118986054790748}, {177, \
2.2299930081845227}, {267, 2.288761395275345}, {356, 2.419357811032727}, \
{444, 2.523834943638633}, {533, 2.6283120762445384}, {622, \
2.7393190296383136}, {712, 2.811147058304874}, {801, 2.935213653274387}, \
{951, 3.1049889937589836}, {1251, 3.4771887786675233}, {1851, \
4.175879602969518}, {2751, 5.148822900362016}, {3951, 6.36989938769354}, \
{6351, 8.818582183144457}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4060.8000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["D38V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190506_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.147878"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{11, 33}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11.4778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.06881882869065474}, {25., 0.2027407920079683}, \
{50., 0.3341227122576658}, {100., 0.4953293517216389}, {200., \
0.7056888577824988}, {500., 0.9217953666678942}, {1000., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1718.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.3556547514826207}, {88, 1.4593145868137196}, {177, \
1.5514566626635855}, {267, 1.6551164979946846}, {356, 1.7702940928070168}, \
{444, 1.8048473712507165}, {533, 1.9545782445067483}, {622, \
2.0121670419129143}, {712, 2.10430911776278}, {801, 2.1618979151689466}, \
{951, 2.392253104793611}, {1251, 2.7377858892306075}, {1851, \
3.4634047365483007}, {2751, 4.407861014009425}, {3951, 5.594190240576447}, \
{6351, 8.03595525059789}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4099.200000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["14 total \:203a ", ""], 
                    Style[
                    Superscript["14 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D38V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Q39V", 
                    Style[
                    "Q39V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Q39V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["Q39V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190630_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.27591"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{21, 2}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14.5902"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.31036566212198}, {25., 0.4249348076491301}, {50., \
0.4989881948578827}, {100., 0.6178280233520672}, {200., 0.7155237633826003}, \
{500., 0.958901539626207}, {1000., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1680.0000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 2.0344776412138676}, {89, 4.177755836074588}, {177, \
6.329373634806361}, {266, 8.54770826450656}, {356, 10.774382498077815}, {445, \
12.967698316164855}, {534, 15.069278491670307}, {623, 17.212556686531027}, \
{711, 19.247420031068053}, {800, 21.549150699478787}, {950, \
25.1601991756449}, {1250, 32.474031770558724}, {1850, 46.93490488296529}, \
{2750, 68.0257630728593}, {3950, 94.89596674539331}, {6350, \
149.70384338595613}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4070.4000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["Q39V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190609_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.933382"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{21, 2}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12.2204"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.3046645559642556}, {25., 0.5225052018652264}, \
{50., 0.5585190772818904}, {100., 0.738382759679047}, {200., \
0.947533286620312}, {500., 0.9969933247265221}, {1000., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1689.6000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.0485545781129124}, {89, 4.786002826115909}, {178, \
6.560261418356256}, {267, 8.363968285986486}, {356, 10.10141653398948}, {445, \
11.91984753931465}, {534, 13.708830269249939}, {624, 15.394744035320644}, \
{713, 17.102744007933758}, {801, 18.877002600174105}, {951, \
21.89545082763694}, {1251, 27.89553693832525}, {1851, 40.072398812041165}, \
{2751, 58.23462265875045}, {3951, 80.4754326469583}, {6351, \
126.54725949442758}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4070.4000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["4 total \:203a ", ""], 
                    Style[
                    Superscript["4 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Q39V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["M40V", 
                    Style[
                    "M40V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["M40V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["M40V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190506_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.42727"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{6, 48}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11.858"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.14603326861801053}, {25., 0.3269401955369041}, \
{50., 0.5457652169770029}, {100., 0.7007246522554188}, {200., \
0.8665626657332899}, {500., 1.}, {1000., 0.9901966278281353}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1718.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 2.288470238081897}, {88, 3.0710936852642625}, {177, \
3.853717132446628}, {267, 4.620688110685346}, {356, 5.356354151036769}, {444, \
6.107672660331841}, {533, 6.866817404098735}, {622, 7.610309678921982}, {712, \
8.322497015857934}, {801, 9.058163056209358}, {951, 10.30253433722932}, \
{1251, 12.775624430325594}, {1851, 17.698325913102675}, {2751, \
24.97672397189867}, {3951, 34.56386119988265}, {6351, 53.652047076660544}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4051.2000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["M40V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190626_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.96674"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{6, 48}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["17.1728"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.13524183016945868}, {25., 0.3489459486232303}, \
{50., 0.554464515620678}, {100., 0.8008285615858334}, {200., \
0.8609329009266274}, {500., 1.}, {1000., 0.9826945388659676}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1708.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 6.262748781754533}, {89, 8.408385503675827}, {178, \
10.568000314990746}, {267, 12.664713724034355}, {356, 14.67755859671622}, \
{445, 16.732337737578955}, {534, 18.7312045208672}, {623, 20.83490697460762}, \
{712, 22.959576562438478}, {801, 24.89554194345541}, {951, \
28.22931626383475}, {1251, 35.022667709136044}, {1851, 48.13411556035541}, \
{2751, 67.71741880082273}, {3951, 94.02418303962321}, {6351, \
146.04364271799517}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4060.8000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["8 total \:203a ", ""], 
                    Style[
                    Superscript["8 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["M40V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["D43G", 
                    Style[
                    "D43G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D43G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["D43G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190506_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.01877"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{10, 33}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12.3769"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.1447785283935596}, {25., 0.33993483058680424}, \
{50., 0.5845859531429759}, {100., 0.7744347320739158}, {200., \
0.9400697796933974}, {500., 1.}, {1000., 0.9762949072318587}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1718.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 2.890714591669739}, {88, 4.630677029752983}, {177, \
6.350169321505836}, {267, 8.192482491241035}, {356, 10.014325514645844}, \
{444, 11.754287952729088}, {533, 13.576130976133898}, {622, \
15.223977755730381}, {712, 17.07652599863078}, {801, 18.826723509879216}, \
{951, 21.979126044759447}, {1251, 27.86429311474689}, {1851, \
40.11567569348597}, {2751, 57.89399778143064}, {3951, 81.41419591505003}, \
{6351, 126.41781262241489}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4080.0000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["D43G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190609_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.65176"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{21, 36}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.82158"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.2424131489245236}, {25., 0.4160260724168448}, \
{50., 0.5388642671536106}, {100., 0.6643955759149182}, {200., \
0.7690102174921221}, {500., 0.9108775025706464}, {1000., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1708.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.6958058584211841}, {89, 1.742345758503765}, {178, \
1.7622914299677281}, {267, 1.8287770015142721}, {356, 1.875316901596853}, \
{445, 1.9285053588340881}, {534, 1.9550995874527057}, {624, \
1.9484510302980513}, {713, 2.008288044689941}, {801, 2.0215851589992497}, \
{951, 2.1146649591644113}, {1251, 2.2941760023400803}, {1851, \
2.573415402835565}, {2751, 2.9789773892694833}, {3951, 3.5308076331057987}, \
{6351, 4.554685434922576}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4118.400000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["D43V", 
                    Style[
                    "D43V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D43V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["D43V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190630_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.93435"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{20, 2}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12.8339"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.30621348866312365}, {25., 0.5211371296499528}, \
{50., 0.6254366991269494}, {100., 0.7307378562286466}, {200., \
0.8008945490956489}, {500., 1.}, {1000., 0.9621395786164174}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1718.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 5.433869149661595}, {89, 11.21545633733894}, {177, \
16.876906648389223}, {266, 22.598425397753036}, {356, 28.13223027738707}, \
{445, 33.853749026750876}, {534, 39.41007957075248}, {623, \
44.906341676440555}, {711, 50.01215893309068}, {800, 55.891357333027514}, \
{950, 65.16442249767884}, {1250, 82.77949203312176}, {1850, \
118.76048658292675}, {2750, 170.8698568199148}, {3950, 238.14650773106933}}", 
                   
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3820.8000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["D43V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190609_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.675187"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{16, 34}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.31977"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.15956346166379715}, {25., 0.29216442172409507}, \
{50., 0.41208589419081965}, {100., 0.5668074744727202}, {200., \
0.6934062016397426}, {500., 0.8432328778492381}, {1000., \
0.9999999999999999}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1891.2000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.4896162338230687}, {89, 1.5910709283439188}, {178, \
1.5988751356147535}, {267, 1.6769172083230999}, {356, 1.7549592810314463}, \
{445, 1.840805561010627}, {534, 1.8798265973648003}, {624, \
1.950064462802312}, {713, 1.9890854991564852}, {801, 2.059323364593997}, \
{951, 2.1295612300315083}, {1251, 2.3168622045315397}, {1851, \
2.7226809826149405}, {2751, 3.2533670770316956}, {3951, 3.752836342365112}, \
{6351, 4.704949629406937}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4118.400000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Y48G", 
                    Style[
                    "Y48G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Y48G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["Y48G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190626_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.36175"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{13, 14}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12.898"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.1392820444214722}, {25., 0.2800966496492735}, \
{50., 0.4357202897204191}, {100., 0.6700893628933486}, {200., \
0.8514335901256421}, {500., 1.}, {1000., 0.9254286811752157}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1708.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 16.275236729578314}, {89, 33.96999077846856}, {178, \
51.17378053041905}, {267, 68.47776707766337}, {356, 85.27074996890914}, {445, \
101.04172554815787}, {534, 117.27360638575821}, {623, 133.13475908077137}, \
{712, 148.71536074896184}, {801, 164.43623793056366}, {951, \
190.6978179770763}, {1251, 240.80623530352034}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3043.2000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["Y48G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190609_S2_d1_cMUP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.01127"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{13, 14}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.53711"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.14073309145433996}, {25., 0.3168963341317963}, \
{50., 0.5412478577883593}, {100., 0.7759723801227328}, {200., \
0.9035679230381822}, {500., 1.}, {1000., 0.9931223177737122}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1718.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 2.1042192960988984}, {89, 2.8244066536109234}, {178, \
3.4402190317733794}, {267, 4.13953139341549}, {356, 4.859718750927516}, {445, \
5.475531129089972}, {534, 6.1852809886670395}, {624, 6.82196836269941}, {713, \
7.5525932181463915}, {801, 8.189280592178761}, {951, 9.337405365024019}, \
{1251, 11.790217379738886}, {1851, 16.25746649590043}, {2751, \
23.208840120581716}, {3951, 32.25815083018933}, {6351, 49.98102232374612}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Y48G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4060.8000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[True, 159, 1], {1, 159 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[False, 159, 1], {1, 159 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    159, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    159, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 159, 1], {1, 159 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 159, 1], {1, 159 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 31, 1], {1, 31 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 31, 1], {1, 31 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 31, 1], {1, 31 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 31, 1], {1, 31 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {5372., {370.134033203125, 375.865966796875}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {5372., {370.134033203125, 375.865966796875}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 8313918522522547726630769631792687972993012039571962056544,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.799527723914226*^9, 3.802285928974769*^9, 
  3.8023854612526817`*^9, 3.807129974526855*^9, 3.808938070219926*^9, 
  3.810492006883871*^9, 3.812391734642928*^9, 3.812393646064917*^9, 
  3.812556044821775*^9, 3.812662817570908*^9, 3.8126628846648083`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"beca945d-0462-46b4-826e-06c4407d2c88"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          8313918522522547726630769631792687973011458783644953795936], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           Association[{All, All, 
              TypeSystem`PackageScope`KeyDummy[3]} -> 
            1, {All, All, "MutantID"} -> 1, {All, All, "ExpIndex"} -> 
            1, {All, All, "ManualGFPFlag"} -> 1, {All, All, "UniqueExptID"} -> 
            1, {All, All, "ChipType"} -> 
            1, {All, All, "LocalBackgroundRatio"} -> 1, {All, All, "Indices"} -> 
            1, {All, All, "EnzymeConc"} -> 1, {All, All, "fit_mm_datapoints"} -> 
            1, {All, All, "DataPointsOptLinFit"} -> 
            1, {All, All, "fit_mm_curved_r2"} -> 1, {All, All, "fit_mm_kcat"} -> 
            1, {All, All, "fit_mm_KM"} -> 
            1, {All, All, "fit_mm_scale_factor"} -> 1, {All, All, "FitR2"} -> 
            1, {All, All, "DataPoints"} -> 1, {All, All, "kcat"} -> 
            1, {All, All, "Km"} -> 1, {All, All, "ScaleFactor"} -> 
            1, {All, All, "SubstrateConc"} -> 1, {All, All, "OptLinFitSlope"} -> 
            1, {All, All, "AllLBRs"} -> 1, {All, All, "AllInitialRates"} -> 
            1, {All, All, "AllSubstrateConcs"} -> 
            1, {All, All, "StdCurveSlope"} -> 
            1, {All, All, "StdCurveIntercept"} -> 1, {All, All, "StdCurveR2"} -> 
            1, {All, All, "fit_mm_kcat_param_error"} -> 
            1, {All, All, "fit_mm_KM_param_error"} -> 
            1, {All, All, "AllEnzymeConcs"} -> 
            1, {All, All, "KnownBadMutant"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "MutantID" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ExpIndex" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ManualGFPFlag" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "UniqueExptID" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ChipType" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "LocalBackgroundRatio" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Indices" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "EnzymeConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_datapoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "DataPointsOptLinFit" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_curved_r2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_KM" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_scale_factor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "FitR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "DataPoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Km" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ScaleFactor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "SubstrateConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "OptLinFitSlope" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "AllLBRs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllInitialRates" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllSubstrateConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "StdCurveSlope" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "StdCurveIntercept" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "StdCurveR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_kcat_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_KM_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllEnzymeConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "KnownBadMutant" -> 
                   TypeSystem`PackageScope`UnknownShape[False]]], 
                 DirectedInfinity[1], 10, {All, All}]], 2, 
               DirectedInfinity[1], {All}]]], 10, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MutantID", "ExpIndex", "ManualGFPFlag", "UniqueExptID", 
              "ChipType", "LocalBackgroundRatio", "Indices", "EnzymeConc", 
              "fit_mm_datapoints", "DataPointsOptLinFit", "fit_mm_curved_r2", 
              "fit_mm_kcat", "fit_mm_KM", "fit_mm_scale_factor", "FitR2", 
              "DataPoints", "kcat", "Km", "ScaleFactor", "SubstrateConc", 
              "OptLinFitSlope", "AllLBRs", "AllInitialRates", 
              "AllSubstrateConcs", "StdCurveSlope", "StdCurveIntercept", 
              "StdCurveR2", "fit_mm_kcat_param_error", 
              "fit_mm_KM_param_error", "AllEnzymeConcs", "KnownBadMutant"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType}], TypeSystem`AnyLength], 37], "Meta" -> 
         Association["ID" -> 7480961366385397], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           Association[{All, All, 
              TypeSystem`PackageScope`KeyDummy[3]} -> 
            1, {All, All, "MutantID"} -> 1, {All, All, "ExpIndex"} -> 
            1, {All, All, "ManualGFPFlag"} -> 1, {All, All, "UniqueExptID"} -> 
            1, {All, All, "ChipType"} -> 
            1, {All, All, "LocalBackgroundRatio"} -> 1, {All, All, "Indices"} -> 
            1, {All, All, "EnzymeConc"} -> 1, {All, All, "fit_mm_datapoints"} -> 
            1, {All, All, "DataPointsOptLinFit"} -> 
            1, {All, All, "fit_mm_curved_r2"} -> 1, {All, All, "fit_mm_kcat"} -> 
            1, {All, All, "fit_mm_KM"} -> 
            1, {All, All, "fit_mm_scale_factor"} -> 1, {All, All, "FitR2"} -> 
            1, {All, All, "DataPoints"} -> 1, {All, All, "kcat"} -> 
            1, {All, All, "Km"} -> 1, {All, All, "ScaleFactor"} -> 
            1, {All, All, "SubstrateConc"} -> 1, {All, All, "OptLinFitSlope"} -> 
            1, {All, All, "AllLBRs"} -> 1, {All, All, "AllInitialRates"} -> 
            1, {All, All, "AllSubstrateConcs"} -> 
            1, {All, All, "StdCurveSlope"} -> 
            1, {All, All, "StdCurveIntercept"} -> 1, {All, All, "StdCurveR2"} -> 
            1, {All, All, "fit_mm_kcat_param_error"} -> 
            1, {All, All, "fit_mm_KM_param_error"} -> 
            1, {All, All, "AllEnzymeConcs"} -> 
            1, {All, All, "KnownBadMutant"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "MutantID" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ExpIndex" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ManualGFPFlag" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "UniqueExptID" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ChipType" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "LocalBackgroundRatio" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Indices" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "EnzymeConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_datapoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "DataPointsOptLinFit" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_curved_r2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_KM" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_scale_factor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "FitR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "DataPoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Km" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ScaleFactor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "SubstrateConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "OptLinFitSlope" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "AllLBRs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllInitialRates" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllSubstrateConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "StdCurveSlope" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "StdCurveIntercept" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "StdCurveR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_kcat_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_KM_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllEnzymeConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "KnownBadMutant" -> 
                   TypeSystem`PackageScope`UnknownShape[False]]], 
                 DirectedInfinity[1], 10, {All, All}]], 2, 
               DirectedInfinity[1], {All}]]], 10, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MutantID", "ExpIndex", "ManualGFPFlag", "UniqueExptID", 
              "ChipType", "LocalBackgroundRatio", "Indices", "EnzymeConc", 
              "fit_mm_datapoints", "DataPointsOptLinFit", "fit_mm_curved_r2", 
              "fit_mm_kcat", "fit_mm_KM", "fit_mm_scale_factor", "FitR2", 
              "DataPoints", "kcat", "Km", "ScaleFactor", "SubstrateConc", 
              "OptLinFitSlope", "AllLBRs", "AllInitialRates", 
              "AllSubstrateConcs", "StdCurveSlope", "StdCurveIntercept", 
              "StdCurveR2", "fit_mm_kcat_param_error", 
              "fit_mm_KM_param_error", "AllEnzymeConcs", "KnownBadMutant"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType}], TypeSystem`AnyLength], 37], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 10, 
         "DisplayedColumnCount" -> 10, "DataRowCount" -> 37, 
         "DataColumnCount" -> 31, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MutantID", 
                    Style[
                    "MutantID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "MutantID"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "MutantID"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ExpIndex", 
                    Style[
                    "ExpIndex", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "ExpIndex"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "ExpIndex"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ManualGFPFlag", 
                    Style[
                    "ManualGFPFlag", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "ManualGFPFlag"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "ManualGFPFlag"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["UniqueExptID", 
                    Style[
                    "UniqueExptID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "UniqueExptID"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "UniqueExptID"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ChipType", 
                    Style[
                    "ChipType", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "ChipType"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "ChipType"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["LocalBackgroundRatio", 
                    Style[
                    "LocalBackgroundRatio", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "LocalBackgroundRatio"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "LocalBackgroundRatio"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Indices", 
                    Style[
                    "Indices", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Indices"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Indices"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["EnzymeConc", 
                    Style[
                    "EnzymeConc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "EnzymeConc"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "EnzymeConc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["fit_mm_datapoints", 
                    Style[
                    "fit_mm_datapoints", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "fit_mm_datapoints"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "fit_mm_datapoints"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["DataPointsOptLinFit", 
                    Style[
                    "DataPointsOptLinFit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "DataPointsOptLinFit"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "DataPointsOptLinFit"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["L31G", 
                    Style[
                    "L31G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["L31G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["L31G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.86129"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{26, 40}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.34136"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.18775181004693878}, {25., 0.36381966871646826}, \
{50., 0.5146651900463355}, {100., 0.7054238326240467}, {200., \
0.8383766362133699}, {500., 0.9999999999999999}, {1000., \
0.9669312440814911}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1881.6000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.2625342434668145}, {90, 1.273332631646023}, {179, \
1.273332631646023}, {268, 1.3273245725420648}, {357, 1.3273245725420648}, \
{446, 1.3273245725420648}, {535, 1.338122960721273}, {624, \
1.338122960721273}, {714, 1.3489213489004814}, {803, 1.3597197370796898}, \
{953, 1.3813165134381065}, {1253, 1.4569052306925652}, {1853, \
1.629679441559899}, {2753, 1.8996391460401079}, {3953, 2.158800462341109}, \
{6353, 2.8390989176312353}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4108.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["L31G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.08811"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{24, 56}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.460797"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.2734799331567088}, {25., 0.40516690981069664}, \
{50., 0.5142406445566867}, {100., 0.6759324270301623}, {200., \
0.8244377555055684}, {500., 0.9724812843392826}, {1000., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1718.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.6244092343546208}, {90, 1.6473104010386945}, {179, \
1.6473104010386945}, {268, 1.63967667881067}, {357, 1.6549441232667192}, \
{446, 1.6854790121788175}, {535, 1.6702115677227682}, {624, \
1.693112734406842}, {714, 1.6854790121788175}, {803, 1.6702115677227682}, \
{953, 1.6854790121788175}, {1253, 1.7389150677749896}, {1853, \
1.82288601228326}, {2753, 1.9450255679316533}, {3953, 2.1435023458602926}, \
{6353, 2.4488512349812757}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4118.400000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["L35G", 
                    Style[
                    "L35G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["L35G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["L35G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.08469"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{19, 28}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.759587"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.7940924323264468}, {25., 0.8928728778748993}, \
{50., 0.8439680872774227}, {100., 0.8937465347766285}, {200., \
0.9659438903402421}, {500., 1.}, {1000., 0.990965178214115}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.5378733928929895}, {90, 1.5378733928929895}, {179, \
1.5517595275326668}, {268, 1.5378733928929895}, {357, 1.5309303255731508}, \
{446, 1.5170441909334733}, {535, 1.5378733928929895}, {624, \
1.523987258253312}, {714, 1.4962149889739573}, {803, 1.4892719216541186}, \
{953, 1.4753857870144413}, {1253, 1.48232885433428}, {1853, \
1.4962149889739573}, {2753, 1.5309303255731508}, {3953, 1.5101011236136348}, \
{6353, 1.5378733928929895}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4137.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["D38V", 
                    Style[
                    "D38V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D38V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["D38V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.00006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{24, 48}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4.39133"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.7163045501991107}, {25., 0.8275971075750761}, \
{50., 0.8522043519807694}, {100., 0.9711312416357616}, {200., \
0.9167253082045371}, {500., 1.}, {1000., 0.7919828449303136}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1708.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.3874973091355145}, {90, 1.3951250402777045}, {179, \
1.372241846851135}, {268, 1.372241846851135}, {357, 1.341730922282376}, {446, \
1.3569863845667554}, {535, 1.3569863845667554}, {624, 1.341730922282376}, \
{714, 1.3264754599979964}, {803, 1.2959645354292373}, {953, \
1.2883368042870473}, {1253, 1.3264754599979964}, {1853, 1.3112199977136167}, \
{2753, 1.3264754599979964}, {3953, 1.341730922282376}, {6353, \
1.341730922282376}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4108.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["D38V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.02943"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{28, 16}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.78385"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.5054177533326357}, {25., 0.892719393763771}, \
{50., 0.7537648918286772}, {100., 0.7919388020956379}, {200., 1.}, {500., \
0.927255911185341}, {1000., 0.8642652822029285}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1689.6000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.255673179441474}, {90, 1.275515090714979}, {179, \
1.2953570019884841}, {268, 1.2655941350782265}, {357, 1.2655941350782265}, \
{446, 1.2358312681679688}, {535, 1.2159893568944635}, {624, \
1.2259103125312163}, {714, 1.2259103125312163}, {803, 1.1961474456209584}, \
{953, 1.1663845787107008}, {1253, 1.1763055343474533}, {1853, \
1.2159893568944635}, {2753, 1.206068401257711}, {3953, 1.1961474456209584}, \
{6353, 1.2358312681679688}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4137.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["8 total \:203a ", ""], 
                    Style[
                    Superscript["8 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D38V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["G56V", 
                    Style[
                    "G56V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["G56V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["G56V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.53343"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{17, 48}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.47512"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.5927584428671214}, {25., 0.7639445008033384}, \
{50., 0.7798661005401049}, {100., 0.8955731136047848}, {200., \
0.9893340939447351}, {500., 1.}, {1000., 0.8775652185324597}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1708.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.3231406001472776}, {90, 1.3146608778364206}, {179, \
1.3146608778364206}, {268, 1.2977014332147065}, {357, 1.3146608778364206}, \
{446, 1.2807419885929925}, {535, 1.2977014332147065}, {624, \
1.2722622662821355}, {714, 1.2637825439712784}, {803, 1.2468230993495644}, \
{953, 1.2383433770387073}, {1253, 1.2553028216604214}, {1853, \
1.2637825439712784}, {2753, 1.2722622662821355}, {3953, 1.2807419885929925}, \
{6353, 1.3231406001472776}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4166.400000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["G56V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.66065"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{16, 8}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.22917"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.38142408781380294}, {25., 0.5981480518926781}, \
{50., 0.6090333964010061}, {100., 0.66713816448498}, {200., \
0.9038184177428392}, {500., 1.}, {1000., 0.891928025965839}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1689.6000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.5480102669080056}, {90, 1.5573083539605432}, {179, \
1.5480102669080056}, {268, 1.5480102669080056}, {357, 1.5480102669080056}, \
{446, 1.510817918697855}, {535, 1.5015198316453173}, {624, \
1.5015198316453173}, {714, 1.510817918697855}, {803, 1.482923657540242}, \
{953, 1.482923657540242}, {1253, 1.5015198316453173}, {1853, \
1.482923657540242}, {2753, 1.5852026151181564}, {3953, 1.622394963328307}, \
{6353, 1.7432700950112967}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4108.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["5 total \:203a ", ""], 
                    Style[
                    Superscript["5 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["G56V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["F57G", 
                    Style[
                    "F57G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["F57G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["F57G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4.04789"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{16, 56}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.67748"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.3064830409090808}, {25., 0.42104862094799955}, \
{50., 0.5690924521764518}, {100., 0.7241989671524945}, {200., \
0.8785805677211762}, {500., 1.}, {1000., 0.9939747995154165}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1718.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.3836382580094984}, {90, 1.4011197550076702}, {179, \
1.418601252005842}, {268, 1.418601252005842}, {357, 1.4011197550076702}, \
{446, 1.409860503506756}, {535, 1.418601252005842}, {624, \
1.3923790065085844}, {714, 1.3923790065085844}, {803, 1.4011197550076702}, \
{953, 1.409860503506756}, {1253, 1.4360827490040138}, {1853, \
1.5234902339948726}, {2753, 1.6283792159839032}, {3953, 1.7857126889674493}, \
{6353, 2.065416640938198}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4108.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["G64V", 
                    Style[
                    "G64V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["G64V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["G64V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.846276"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{23, 4}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10.3015"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.6420810932386041}, {25., 0.8559968885062954}, \
{50., 0.5533898650335395}, {100., 0.9620062549023972}, {200., 1.}, {500., \
0.9810386752199233}, {1000., 0.9635057963214867}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1708.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.8610769829653007}, {90, 0.8713149384356692}, {179, \
0.8201251610838269}, {268, 0.8098872056134585}, {357, 0.8201251610838269}, \
{446, 0.8917908493764061}, {535, 0.79964925014309}, {624, \
0.7689353837319847}, {714, 0.7689353837319847}, {803, 0.79964925014309}, \
{953, 0.7894112946727215}, {1253, 0.7894112946727215}, {1853, \
0.7484594727912478}, {2753, 0.79964925014309}, {3953, 0.7586974282616162}, \
{6353, 0.79964925014309}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4089.600000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["G64V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.03888"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{23, 18}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.65939"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.28810146721188584}, {25., 0.3805531019106584}, \
{50., 0.4311655249112848}, {100., 0.51494166549054}, {200., \
0.7408972404687465}, {500., 0.978508095602531}, {1000., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1689.6000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.3880878700241184}, {90, 1.3880878700241184}, {179, \
1.39531073268251}, {268, 1.3808650073657267}, {357, 1.3808650073657267}, \
{446, 1.3880878700241184}, {535, 1.3808650073657267}, {624, \
1.3880878700241184}, {714, 1.3808650073657267}, {803, 1.373642144707335}, \
{953, 1.35197355673216}, {1253, 1.4097564579992936}, {1853, \
1.4314250459744686}, {2753, 1.5108765352167772}, {3953, 1.6119966124342608}, \
{6353, 1.770899590918878}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4108.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["8 total \:203a ", ""], 
                    Style[
                    Superscript["8 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["G64V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G64V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["T79G", 
                    Style[
                    "T79G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T79G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["T79G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{28, 7}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["26.2924"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.439083839160075}, {25., 0.6505491538638155}, \
{50., 0.6835287352222779}, {100., 0.6233813510320415}, {200., \
0.7937703783324893}, {500., 0.9999999999999999}, {1000., \
0.7705353031374786}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1852.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.1994436709319816}, {90, 1.230889873427439}, {179, \
1.1784795359350102}, {268, 1.1994436709319816}, {357, 1.188961603433496}, \
{446, 1.1994436709319816}, {535, 1.1365512659410673}, {624, \
1.147033333439553}, {714, 1.188961603433496}, {803, 1.1365512659410673}, \
{953, 1.1260691984425815}, {1253, 1.115587130944096}, {1853, \
1.10510506344561}, {2753, 1.1575154009380388}, {3953, 1.1679974684365244}, \
{6353, 1.1994436709319816}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4099.200000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["T79G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{28, 13}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["23.684"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.5057732289601805}, {25., 0.7682866667143899}, \
{50., 0.7647188398909414}, {100., 0.7854650957874972}, {200., \
0.8126126495850255}, {500., 1.}, {1000., 0.9389693369251604}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1708.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.2684871807315237}, {90, 1.2684871807315237}, {179, \
1.2796537512379496}, {268, 1.2796537512379496}, {357, 1.2684871807315237}, \
{446, 1.2908203217443754}, {535, 1.2238208987058197}, {624, \
1.2126543281993938}, {714, 1.2573206102250976}, {803, 1.2238208987058197}, \
{953, 1.2126543281993938}, {1253, 1.201487757692968}, {1853, \
1.1903211871865418}, {2753, 1.2349874692122458}, {3953, 1.2349874692122458}, \
{6353, 1.3243200332636533}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4156.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["287 total \:203a ", ""], 
                    Style[
                    Superscript["287 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T79G"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["T79V", 
                    Style[
                    "T79V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T79V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["T79V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.914129"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{27, 16}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15.1046"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.5992203233211335}, {25., 0.8508024615901838}, \
{50., 0.7851397514950454}, {100., 0.6622530675783123}, {200., \
0.9668111031947209}, {500., 1.}, {1000., 0.8735136196239346}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1708.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.2662289610746758}, {90, 1.2662289610746758}, {179, \
1.2764150891837183}, {268, 1.2662289610746758}, {357, 1.2254844486385053}, \
{446, 1.20511219242042}, {535, 1.1643676799842495}, {624, \
1.2152983205294625}, {714, 1.2152983205294625}, {803, 1.1439954237661643}, \
{953, 1.1439954237661643}, {1253, 1.1643676799842495}, {1853, \
1.174553808093292}, {2753, 1.174553808093292}, {3953, 1.1847399362023348}, \
{6353, 1.2152983205294625}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4128.000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["T79V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.855524"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{23, 48}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10.7422"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.8343065827423525}, {25., 0.9354551868682299}, \
{50., 0.9224162191956071}, {100., 0.955372428343125}, {200., 1.}, {500., \
0.9340817996697391}, {1000., 0.9257793635575046}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.4018246525352045}, {90, 1.4171435146753082}, {179, \
1.4018246525352045}, {268, 1.4018246525352045}, {357, 1.4018246525352045}, \
{446, 1.371186928254997}, {535, 1.3635274971849451}, {624, \
1.3635274971849451}, {714, 1.3558680661148934}, {803, 1.3405492039747895}, \
{953, 1.3252303418346858}, {1253, 1.3328897729047378}, {1853, \
1.317570910764634}, {2753, 1.3328897729047378}, {3953, 1.3635274971849451}, \
{6353, 1.3635274971849451}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4147.200000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["8 total \:203a ", ""], 
                    Style[
                    Superscript["8 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T79V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["G82V", 
                    Style[
                    "G82V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["G82V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["G82V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.05793"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{10, 44}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10.5992"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.7016572837771221}, {25., 0.9184382561762311}, \
{50., 1.}, {100., 0.930064370229535}, {200., 0.958459280540489}, {500., \
0.9333896843962709}, {1000., 0.8836945879160646}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1689.6000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.221498015962814}, {90, 1.2392569234060145}, {179, \
1.2303774696844143}, {268, 1.2303774696844143}, {357, 1.1682212936332128}, \
{446, 1.2126185622412138}, {535, 1.2037391085196136}, {624, \
1.1593418399116127}, {714, 1.1682212936332128}, {803, 1.1238240250252118}, \
{953, 1.1504623861900123}, {1253, 1.1504623861900123}, {1853, \
1.2037391085196136}, {2753, 1.2392569234060145}, {3953, 1.2747747382924153}, \
{6353, 1.4079665441164184}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4156.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["G82V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.3667"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{17, 42}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7.25178"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.6171501742830152}, {25., 0.7410552722996194}, \
{50., 0.9172786233431924}, {100., 0.9492395380180293}, {200., 1.}, {500., \
0.7778356028663155}, {1000., 0.6701405883477414}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1708.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.2410317820451735}, {90, 1.2293342019593025}, {179, \
1.2059390417875606}, {268, 1.1825438816158187}, {357, 1.1942414617016897}, \
{446, 1.1708463015299477}, {535, 1.1942414617016897}, {624, \
1.1591487214440768}, {714, 1.1357535612723348}, {803, 1.112358401100593}, \
{953, 1.112358401100593}, {1253, 1.1240559811864639}, {1853, \
1.1357535612723348}, {2753, 1.1357535612723348}, {3953, 1.1357535612723348}, \
{6353, 1.1474511413582058}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4147.200000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["5 total \:203a ", ""], 
                    Style[
                    Superscript["5 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["G82V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G82V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["G89V", 
                    Style[
                    "G89V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["G89V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["G89V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.07609"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{15, 12}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12.1847"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.61741654096199}, {25., 0.6995507422541459}, {50., \
0.8090172852198746}, {100., 0.6636819375538942}, {200., 0.9337895939619645}, \
{500., 1.}, {1000., 0.8093482886449554}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1689.6000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.2223514114991123}, {90, 1.2223514114991123}, {179, \
1.1846581788244308}, {268, 1.1846581788244308}, {357, 1.16581156248709}, \
{446, 1.1563882543184196}, {535, 1.1469649461497493}, {624, \
1.1469649461497493}, {714, 1.1375416379810788}, {803, 1.1375416379810788}, \
{953, 1.0998484053063973}, {1253, 1.0998484053063973}, {1853, \
1.1092717134750678}, {2753, 1.1281183298124084}, {3953, 1.1281183298124084}, \
{6353, 1.1752348706557603}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4147.200000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["G89V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["191128_S2_d3_cMUP_1_SlowestChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowestChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.62306"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{18, 26}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6.53575"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.6999727272978524}, {25., 1.}, {50., \
0.893069233250952}, {100., 0.9565350818409115}, {200., 0.931151590075984}, \
{500., 0.8886614237360951}, {1000., 0.5471186093795739}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1689.6000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.3673369036986434}, {90, 1.3520369798781116}, {179, \
1.374986865608909}, {268, 1.3596869417883775}, {357, 1.3443870179678457}, \
{446, 1.3061372084165166}, {535, 1.3214371322370482}, {624, \
1.2908372845959848}, {714, 1.3137871703267823}, {803, 1.2449375131343898}, \
{953, 1.2525874750446557}, {1253, 1.2602374369549214}, {1853, \
1.2449375131343898}, {2753, 1.2755373607754532}, {3953, 1.229637589313858}, \
{6353, 1.229637589313858}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4137.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["4 total \:203a ", ""], 
                    Style[
                    Superscript["4 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["G89V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G89V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[True, 37, 1], {1, 37 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[False, 37, 1], {1, 37 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    37, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    37, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 37, 1], {1, 37 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 37, 1], {1, 37 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 31, 1], {1, 31 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 31, 1], {1, 31 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 31, 1], {1, 31 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 31, 1], {1, 31 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {5552., {345.134033203125, 350.865966796875}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {5552., {345.134033203125, 350.865966796875}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 8313918522522547726630769631792687973011458783644953795936,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.799527723914226*^9, 3.802285928974769*^9, 
  3.8023854612526817`*^9, 3.807129974526855*^9, 3.808938070219926*^9, 
  3.810492006883871*^9, 3.812391734642928*^9, 3.812393646064917*^9, 
  3.812556044821775*^9, 3.812662817570908*^9, 3.812662885687545*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"3db32594-1e5b-49ce-9fc0-820ea90bead1"]
}, Open  ]],

Cell["\<\
Perform additional culling step on mutants for which only 1-2 of many \
replicates passed culling.

Using a higher threshold for the SlowestChip data, as this has skipped \
chambers and the background dynamic range is much lower.\
\>", "Text",
 CellChangeTimes->{{3.7779463220385637`*^9, 3.777946349619018*^9}, {
  3.78438162885358*^9, 
  3.784381654512724*^9}},ExpressionUUID->"42404867-f43d-4a0a-aa16-\
c32c8407fced"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dynamic", "[", "mutant", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cutoffThreshold", "=", "0.6"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cutoffThresholdSlowest", "=", "1.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cullTableFast", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Clear", "[", 
        RowBox[{"lbrs", ",", "fractionCulled"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutantIn2FastChips", "[", 
            RowBox[{
             RowBox[{"groupedbyMutantIn2FastChips", "[", 
              RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], 
             ",", "n", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutantIn2FastChips", "[", "mutant", "]"}], 
             "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulled", "=", 
        RowBox[{"N", "[", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"Length", "[", "lbrs", "]"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "[", "lbrs", "]"}], "+", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MissingQ", "[", 
                RowBox[{"tooSlowIn2FastChips", "[", 
                 RowBox[{
                  RowBox[{"groupedbyMutantIn2FastChips", "[", 
                   RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], 
                   "]"}], ",", "1", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}], "]"}], ",", "0", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"tooSlowInFastChips", "[", 
                 RowBox[{
                  RowBox[{"groupedbyMutantIn2FastChips", "[", 
                   RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], 
                   "]"}], ",", "All", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}], "]"}]}], "]"}]}], ")"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"groupedbyMutantIn2FastChips", "[", 
          RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], ",", 
         "fractionCulled", ",", "\"\<FastChip\>\"", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "lbrs", "]"}], "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MissingQ", "[", 
              RowBox[{"tooSlowIn2FastChips", "[", 
               RowBox[{
                RowBox[{"groupedbyMutantIn2FastChips", "[", 
                 RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}],
                 ",", "1", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
              "]"}], ",", "0", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"tooSlowInFastChips", "[", 
               RowBox[{
                RowBox[{"groupedbyMutantIn2FastChips", "[", 
                 RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}],
                 ",", "All", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
              "]"}]}], "]"}]}], ")"}]}], "}"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"mutant", ",", "1", ",", 
        RowBox[{"Length", "[", "groupedbyMutantIn2FastChips", "]"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cullTableSlow", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Clear", "[", 
        RowBox[{"lbrs", ",", "fractionCulled"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutantIn2SlowChip", "[", 
            RowBox[{
             RowBox[{"groupedbyMutantIn2SlowChip", "[", 
              RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], 
             ",", "n", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutantIn2SlowChip", "[", "mutant", "]"}], 
             "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulled", "=", 
        RowBox[{"N", "[", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"Length", "[", "lbrs", "]"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "[", "lbrs", "]"}], "+", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MissingQ", "[", 
                RowBox[{"tooSlowIn2SlowChip", "[", 
                 RowBox[{
                  RowBox[{"groupedbyMutantIn2SlowChip", "[", 
                   RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], 
                   "]"}], ",", "1", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}], "]"}], ",", "0", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"tooSlowInSlowChip", "[", 
                 RowBox[{
                  RowBox[{"groupedbyMutantIn2SlowChip", "[", 
                   RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], 
                   "]"}], ",", "All", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}], "]"}]}], "]"}]}], ")"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"groupedbyMutantIn2SlowChip", "[", 
          RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], ",", 
         "fractionCulled", ",", "\"\<SlowChip\>\"", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "lbrs", "]"}], "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MissingQ", "[", 
              RowBox[{"tooSlowIn2SlowChip", "[", 
               RowBox[{
                RowBox[{"groupedbyMutantIn2SlowChip", "[", 
                 RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}],
                 ",", "1", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
              "]"}], ",", "0", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"tooSlowInSlowChip", "[", 
               RowBox[{
                RowBox[{"groupedbyMutantIn2SlowChip", "[", 
                 RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}],
                 ",", "All", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
              "]"}]}], "]"}]}], ")"}]}], "}"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"mutant", ",", "1", ",", 
        RowBox[{"Length", "[", "groupedbyMutantIn2SlowChip", "]"}]}], "}"}]}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cullTableSlowest", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Clear", "[", 
        RowBox[{"lbrs", ",", "fractionCulled"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
            RowBox[{
             RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
              RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], 
             ",", "n", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutantIn2SlowestChip", "[", "mutant", "]"}], 
             "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulled", "=", 
        RowBox[{"N", "[", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"Length", "[", "lbrs", "]"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "[", "lbrs", "]"}], "+", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MissingQ", "[", 
                RowBox[{"tooSlowIn2SlowestChip", "[", 
                 RowBox[{
                  RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
                   RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], 
                   "]"}], ",", "1", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}], "]"}], ",", "0", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"tooSlowInSlowestChip", "[", 
                 RowBox[{
                  RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
                   RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], 
                   "]"}], ",", "All", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}], "]"}]}], "]"}]}], ")"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
          RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], ",", 
         "fractionCulled", ",", "\"\<SlowChip\>\"", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "lbrs", "]"}], "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MissingQ", "[", 
              RowBox[{"tooSlowIn2SlowChip", "[", 
               RowBox[{
                RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
                 RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}],
                 ",", "1", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
              "]"}], ",", "0", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"tooSlowInSlowestChip", "[", 
               RowBox[{
                RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
                 RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}],
                 ",", "All", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
              "]"}]}], "]"}]}], ")"}]}], "}"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"mutant", ",", "1", ",", 
        RowBox[{"Length", "[", "groupedbyMutantIn2SlowestChip", "]"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"passedCullingFast", "=", 
  RowBox[{"Select", "[", 
   RowBox[{"cullTableFast", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ">", "cutoffThreshold"}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"passedCullingSlow", "=", 
  RowBox[{"Select", "[", 
   RowBox[{"cullTableSlow", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ">", "cutoffThreshold"}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"passedCullingSlowest", "=", 
  RowBox[{"Select", "[", 
   RowBox[{"cullTableSlowest", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ">", "cutoffThresholdSlowest"}], 
     "&"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.777944158184766*^9, 3.7779442065068827`*^9}, {
   3.777946042355283*^9, 3.777946102310437*^9}, {3.777946141978031*^9, 
   3.777946145031281*^9}, {3.77794655322822*^9, 3.7779465535606422`*^9}, {
   3.777946647825327*^9, 3.777946648083419*^9}, {3.7779467930473137`*^9, 
   3.777946797977841*^9}, {3.777947028379219*^9, 3.7779470430308332`*^9}, {
   3.7779855760419207`*^9, 3.777985591356081*^9}, {3.777985895840721*^9, 
   3.77798589995373*^9}, {3.777986182619215*^9, 3.777986203750119*^9}, 
   3.781725898346588*^9, {3.781726701329586*^9, 3.781726706554641*^9}, {
   3.781726737081224*^9, 3.781726754800516*^9}, {3.781727678737359*^9, 
   3.781727739898925*^9}, 3.781727782529406*^9, {3.781842123343547*^9, 
   3.781842124938027*^9}, 3.781886254220748*^9, {3.781886335655604*^9, 
   3.7818863570812273`*^9}, {3.781964879970481*^9, 3.781964890589343*^9}, {
   3.7819656861006002`*^9, 3.781965733146035*^9}, {3.781985733908375*^9, 
   3.781985736645239*^9}, {3.782001543210436*^9, 3.782001554354735*^9}, 
   3.78200170095492*^9, {3.7843484211024733`*^9, 3.7843484219833937`*^9}, {
   3.78438091547715*^9, 3.784380959789953*^9}, {3.784381490533945*^9, 
   3.7843814951339207`*^9}, {3.784381528456584*^9, 3.784381547656989*^9}, {
   3.7843816259059887`*^9, 3.7843816277914343`*^9}, {3.784500272059367*^9, 
   3.784500272561872*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"354975ad-a4af-4bf1-9881-9d4d708f94e6"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`mutant, StandardForm],
  ImageSizeCache->{47., {1., 8.}}]], "Output",
 CellChangeTimes->{3.7995277276576*^9, 3.802285930464275*^9, 
  3.8023854707582607`*^9, 3.8071299862171164`*^9, 3.808938071690627*^9, 
  3.810492009478292*^9, 3.812391740680217*^9, 3.812556068902954*^9, 
  3.8126628905684767`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"a58121f1-373d-4e53-afd8-5b8523fb2ab6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"T79S\"\>", ",", "0.8903225806451613`", 
     ",", "\<\"FastChip\"\>", ",", "155"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"I94G\"\>", ",", "0.8571428571428571`", 
     ",", "\<\"FastChip\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"N100A\"\>", ",", "0.9595959595959596`", 
     ",", "\<\"FastChip\"\>", ",", "99"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V142G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"N151G\"\>", ",", "0.8571428571428571`", 
     ",", "\<\"FastChip\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D163V\"\>", ",", "0.875`", ",", "\<\"FastChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"T189G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G217A\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"L274G\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V299G\"\>", ",", "0.8333333333333334`", 
     ",", "\<\"FastChip\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D305G\"\>", ",", "0.875`", ",", "\<\"FastChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D320V\"\>", ",", "0.625`", ",", "\<\"FastChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Y322G\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"L325G\"\>", ",", "0.8`", ",", "\<\"FastChip\"\>", ",", "5"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"F333G\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V340G\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"F361G\"\>", ",", "0.8571428571428571`", 
     ",", "\<\"FastChip\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Y435G\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"K452G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V455G\"\>", ",", "0.8`", ",", "\<\"FastChip\"\>", ",", "5"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"I470G\"\>", ",", "0.8333333333333334`", 
     ",", "\<\"FastChip\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"I496G\"\>", ",", "0.8888888888888888`", 
     ",", "\<\"FastChip\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"T522V\"\>", ",", "0.7777777777777778`", 
     ",", "\<\"FastChip\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S533V\"\>", ",", "0.625`", ",", "\<\"FastChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"N100A/R164A\"\>", ",", "0.9456521739130435`", 
     ",", "\<\"FastChip\"\>", ",", "92"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7995277276576*^9, 3.802285930464275*^9, 
  3.8023854707582607`*^9, 3.8071299862171164`*^9, 3.808938071690627*^9, 
  3.810492009478292*^9, 3.812391740680217*^9, 3.812556068902954*^9, 
  3.812662898238936*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"e8e575b7-65ac-467f-b7e5-43b90801c878"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"L35G\"\>", ",", "0.7692307692307693`", 
     ",", "\<\"SlowChip\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"T79V\"\>", ",", "0.9444444444444444`", 
     ",", "\<\"SlowChip\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P92V\"\>", ",", "0.8181818181818182`", 
     ",", "\<\"SlowChip\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G96V\"\>", ",", "0.7692307692307693`", 
     ",", "\<\"SlowChip\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"W102G\"\>", ",", "0.9230769230769231`", 
     ",", "\<\"SlowChip\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D116G\"\>", ",", "0.7142857142857143`", 
     ",", "\<\"SlowChip\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S133V\"\>", ",", "0.8`", ",", "\<\"SlowChip\"\>", ",", 
     "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S160V\"\>", ",", "0.875`", ",", "\<\"SlowChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"K162V\"\>", ",", "0.9047619047619048`", 
     ",", "\<\"SlowChip\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"I167G\"\>", ",", "0.9090909090909091`", 
     ",", "\<\"SlowChip\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S190V\"\>", ",", "0.75`", ",", "\<\"SlowChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Y192V\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"SlowChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"L297G\"\>", ",", "0.9473684210526315`", 
     ",", "\<\"SlowChip\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G312V\"\>", ",", "0.7142857142857143`", 
     ",", "\<\"SlowChip\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S315V\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"SlowChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D326G\"\>", ",", "0.8461538461538461`", 
     ",", "\<\"SlowChip\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D326V\"\>", ",", "0.8571428571428571`", 
     ",", "\<\"SlowChip\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"F332G\"\>", ",", "0.8333333333333334`", 
     ",", "\<\"SlowChip\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"F333G\"\>", ",", "0.75`", ",", "\<\"SlowChip\"\>", ",", 
     "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V340G\"\>", ",", "0.8333333333333334`", 
     ",", "\<\"SlowChip\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D352V\"\>", ",", "0.8571428571428571`", 
     ",", "\<\"SlowChip\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S464V\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"SlowChip\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G465V\"\>", ",", "0.8181818181818182`", 
     ",", "\<\"SlowChip\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G502V\"\>", ",", "0.75`", ",", "\<\"SlowChip\"\>", ",", 
     "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D518V\"\>", ",", "0.6153846153846154`", 
     ",", "\<\"SlowChip\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V523G\"\>", ",", "0.8181818181818182`", 
     ",", "\<\"SlowChip\"\>", ",", "11"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7995277276576*^9, 3.802285930464275*^9, 
  3.8023854707582607`*^9, 3.8071299862171164`*^9, 3.808938071690627*^9, 
  3.810492009478292*^9, 3.812391740680217*^9, 3.812556068902954*^9, 
  3.8126628982438602`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"56a6952e-b37d-4ed3-a07b-fdf2733d4128"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7995277276576*^9, 3.802285930464275*^9, 
  3.8023854707582607`*^9, 3.8071299862171164`*^9, 3.808938071690627*^9, 
  3.810492009478292*^9, 3.812391740680217*^9, 3.812556068902954*^9, 
  3.8126628982456493`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"3801c615-5e31-43e5-87b5-219a00ab4773"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"unmeasuredIn", "\[IndentingNewLine]", 
 RowBox[{"unmeasuredFast", "=", 
  RowBox[{"passedCullingFast", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"unmeasuredSlow", "=", 
  RowBox[{"passedCullingSlow", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"unmeasuredSlowest", "=", 
  RowBox[{"passedCullingSlowest", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7779461692644176`*^9, 3.777946290613867*^9}, {
  3.777986634353944*^9, 3.777986645275609*^9}, {3.777989096966075*^9, 
  3.777989100741467*^9}, {3.77819206248903*^9, 3.778192063288224*^9}, {
  3.7819229843982487`*^9, 3.781923003249569*^9}, {3.781965760543865*^9, 
  3.7819658018912897`*^9}, {3.7843816670487757`*^9, 3.784381670741918*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"21d4ab7f-fc12-4e3f-824e-3bb7049ef234"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"D305V\"\>", ",", "\<\"D38V\"\>", ",", "\<\"G171V\"\>", 
   ",", "\<\"G354V\"\>", ",", "\<\"G64V\"\>", ",", "\<\"G82V\"\>", 
   ",", "\<\"G89V\"\>", ",", "\<\"H353G\"\>", ",", "\<\"H495G\"\>", 
   ",", "\<\"I97G\"\>", ",", "\<\"T79G\"\>", ",", "\<\"W179G\"\>", 
   ",", "\<\"Y193G\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.799527735151519*^9, 3.802285936541521*^9, 
  3.8023854803298264`*^9, 3.80712999400562*^9, 3.808938077824397*^9, 
  3.8104920184312677`*^9, 3.812391748625763*^9, 3.812556079422246*^9, 
  3.8126628982804623`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"4411f54e-188c-4abf-a26e-348e83d2f6d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"T79S\"\>", ",", "\<\"I94G\"\>", ",", "\<\"N100A\"\>", 
   ",", "\<\"V142G\"\>", ",", "\<\"N151G\"\>", ",", "\<\"D163V\"\>", 
   ",", "\<\"T189G\"\>", ",", "\<\"G217A\"\>", ",", "\<\"L274G\"\>", 
   ",", "\<\"V299G\"\>", ",", "\<\"D305G\"\>", ",", "\<\"D320V\"\>", 
   ",", "\<\"Y322G\"\>", ",", "\<\"L325G\"\>", ",", "\<\"F333G\"\>", 
   ",", "\<\"V340G\"\>", ",", "\<\"F361G\"\>", ",", "\<\"Y435G\"\>", 
   ",", "\<\"K452G\"\>", ",", "\<\"V455G\"\>", ",", "\<\"I470G\"\>", 
   ",", "\<\"I496G\"\>", ",", "\<\"T522V\"\>", ",", "\<\"S533V\"\>", 
   ",", "\<\"N100A/R164A\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.799527735151519*^9, 3.802285936541521*^9, 
  3.8023854803298264`*^9, 3.80712999400562*^9, 3.808938077824397*^9, 
  3.8104920184312677`*^9, 3.812391748625763*^9, 3.812556079422246*^9, 
  3.8126628982819366`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"d5707bc7-4233-4e7f-9713-e60ffdaf9e05"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"L35G\"\>", ",", "\<\"T79V\"\>", ",", "\<\"P92V\"\>", 
   ",", "\<\"G96V\"\>", ",", "\<\"W102G\"\>", ",", "\<\"D116G\"\>", 
   ",", "\<\"S133V\"\>", ",", "\<\"S160V\"\>", ",", "\<\"K162V\"\>", 
   ",", "\<\"I167G\"\>", ",", "\<\"S190V\"\>", ",", "\<\"Y192V\"\>", 
   ",", "\<\"L297G\"\>", ",", "\<\"G312V\"\>", ",", "\<\"S315V\"\>", 
   ",", "\<\"D326G\"\>", ",", "\<\"D326V\"\>", ",", "\<\"F332G\"\>", 
   ",", "\<\"F333G\"\>", ",", "\<\"V340G\"\>", ",", "\<\"D352V\"\>", 
   ",", "\<\"S464V\"\>", ",", "\<\"G465V\"\>", ",", "\<\"G502V\"\>", 
   ",", "\<\"D518V\"\>", ",", "\<\"V523G\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.799527735151519*^9, 3.802285936541521*^9, 
  3.8023854803298264`*^9, 3.80712999400562*^9, 3.808938077824397*^9, 
  3.8104920184312677`*^9, 3.812391748625763*^9, 3.812556079422246*^9, 
  3.812662898283347*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"8d480b88-c112-4460-9a5c-df94126e7e76"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.799527735151519*^9, 3.802285936541521*^9, 
  3.8023854803298264`*^9, 3.80712999400562*^9, 3.808938077824397*^9, 
  3.8104920184312677`*^9, 3.812391748625763*^9, 3.812556079422246*^9, 
  3.812662898284686*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"e2bea5ba-9b6b-4c07-ba52-945a545d41c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "selecting", " ", "chambers", " ", "that", " ", "have", " ", "been", " ", 
     "identified", " ", "as", " ", "containing", " ", "too", " ", "many", " ",
      "culled", " ", "replicates"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "excepting", " ", "those", " ", "that", " ", "have", " ", "a", " ", 
       "second"}], "-", 
      RowBox[{"order", " ", "LBR"}]}], " ", ">", "5"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"slowPassedFastChip", "=", 
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"passedCullingFast", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "#MutantID"}], 
          "]"}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#ChipType", "==", "\"\<GlyScan\>\""}], "||", 
           RowBox[{"#ChipType", "==", "\"\<ValScan\>\""}]}], ")"}]}], "&"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slowPassedSlowChip", "=", 
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"passedCullingSlow", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "#MutantID"}], 
          "]"}], "&&", 
         RowBox[{"(", 
          RowBox[{"#ChipType", "==", "\"\<SlowChip\>\""}], ")"}]}], "&"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slowPassedSlowestChip", "=", 
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"passedCullingSlowest", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "#MutantID"}], 
          "]"}], "&&", 
         RowBox[{"(", 
          RowBox[{"#ChipType", "==", "\"\<SlowestChip\>\""}], ")"}]}], "&"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"take", " ", "Fast", " ", "data", " ", "that", " ", 
       RowBox[{"didn", "'"}], "t", " ", "meet", " ", "criterion", " ", 
       "above"}], " ", "-", " ", 
      RowBox[{"note", " ", "here", " ", 
       RowBox[{"I", "'"}], "m", " ", "selecting", " ", "based", " ", "on", 
       " ", "entire", " ", "row"}]}], ",", " ", 
     RowBox[{"not", " ", "just", " ", "mutant", " ", "ID"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"culledFast", "=", 
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"slowPassedFastChip", ",", "#"}], "]"}], "\[Equal]", 
         "False"}], "&"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"take", " ", "Slow", " ", "data", " ", "that", " ", 
      RowBox[{"didn", "'"}], "t", " ", "meet", " ", "criterion", " ", 
      "above"}], " ", "-", " ", 
     RowBox[{
     "same", " ", "as", " ", "above", " ", "except", " ", "operating", " ", 
      "on", " ", "culledFast"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"culledSlow", "=", 
     RowBox[{"culledFast", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"slowPassedSlowChip", ",", "#"}], "]"}], "\[Equal]", 
         "False"}], "&"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"take", " ", "Slowest", " ", "data", " ", "that", " ", 
      RowBox[{"didn", "'"}], "t", " ", "meet", " ", "criterion", " ", 
      "above"}], " ", "-", " ", 
     RowBox[{
     "same", " ", "as", " ", "above", " ", "except", " ", "operating", " ", 
      "on", " ", "culledSlow"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"culledSlowest", "=", 
    RowBox[{"culledSlow", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"slowPassedSlowestChip", ",", "#"}], "]"}], "\[Equal]", 
        "False"}], "&"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slow", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
      "slowPassedFastChip", ",", "slowPassedSlowChip", ",", 
       "slowPassedSlowestChip", ",", "slowIn"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"culled", "=", "culledSlowest"}], ";"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQvUX3dM4d1TeOYpdvF4BoN4flGneBdOCLGUYgeoNV
iSWIPu19zApEB6kXs30A0gvlezlAdNNKeU0QXaTpCqZnVV91+Aik9SbfBdMW
8lzn23TfOG65tvMyiJ75P/QxiBZRi3wNou1qf/4D0Sc9FrO3A+mNMxSlQbSW
2yoFEP2Ir6YRRBddXtgEog3mNW4B0RccTmwF0Wr9qbYdQPpO2jFXEC1x0zS1
B0g7XuXLBtG3hAyThYzeOOZFyaSAaBN3n3lKQHqOVDyYnrH14yUVID3tktYV
EK3pL/JQFUif2bYDTO9hYpJUB9Il4vNkQfSx2sas/vQ3jmUe9TkgGgCAmZcW

  "],
 CellLabel->"In[60]:=",ExpressionUUID->"a21d4dd7-e6d4-4266-a4df-ef5770659194"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          8313918522522547726630769631792687973029905527719331061800], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "MutantID"} -> 1, {All, "ExpIndex"} -> 
            1, {All, "ManualGFPFlag"} -> 1, {All, "UniqueExptID"} -> 
            1, {All, "ChipType"} -> 1, {All, "LocalBackgroundRatio"} -> 
            1, {All, "Indices"} -> 1, {All, "EnzymeConc"} -> 
            1, {All, "fit_mm_datapoints"} -> 1, {All, "DataPointsOptLinFit"} -> 
            1, {All, "fit_mm_curved_r2"} -> 1, {All, "fit_mm_kcat"} -> 
            1, {All, "fit_mm_KM"} -> 1, {All, "fit_mm_scale_factor"} -> 
            1, {All, "FitR2"} -> 1, {All, "DataPoints"} -> 1, {All, "kcat"} -> 
            1, {All, "Km"} -> 1, {All, "ScaleFactor"} -> 
            1, {All, "SubstrateConc"} -> 1, {All, "OptLinFitSlope"} -> 
            1, {All, "AllLBRs"} -> 1, {All, "AllInitialRates"} -> 
            1, {All, "AllSubstrateConcs"} -> 1, {All, "StdCurveSlope"} -> 
            1, {All, "StdCurveIntercept"} -> 1, {All, "StdCurveR2"} -> 
            1, {All, "fit_mm_kcat_param_error"} -> 
            1, {All, "fit_mm_KM_param_error"} -> 1, {All, "AllEnzymeConcs"} -> 
            1, {All, "KnownBadMutant"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "MutantID" -> 
                TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                "ExpIndex" -> TypeSystem`PackageScope`AtomShape[34], 
                "ManualGFPFlag" -> TypeSystem`PackageScope`AtomShape[34], 
                "UniqueExptID" -> 
                TypeSystem`PackageScope`AtomShape[336.00000000000006`], 
                "ChipType" -> TypeSystem`PackageScope`AtomShape[99.], 
                "LocalBackgroundRatio" -> 
                TypeSystem`PackageScope`AtomShape[60], "Indices" -> 
                TypeSystem`PackageScope`AtomShape[76.80000000000001], 
                "EnzymeConc" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_datapoints" -> 
                TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
                "DataPointsOptLinFit" -> 
                TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
                "fit_mm_curved_r2" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_kcat" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_KM" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_scale_factor" -> 
                TypeSystem`PackageScope`AtomShape[60], "FitR2" -> 
                TypeSystem`PackageScope`AtomShape[60], "DataPoints" -> 
                TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
                "kcat" -> TypeSystem`PackageScope`AtomShape[60], "Km" -> 
                TypeSystem`PackageScope`AtomShape[60], "ScaleFactor" -> 
                TypeSystem`PackageScope`AtomShape[60], "SubstrateConc" -> 
                TypeSystem`PackageScope`AtomShape[60], "OptLinFitSlope" -> 
                TypeSystem`PackageScope`AtomShape[60], "AllLBRs" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 5, 
                  DirectedInfinity[1], {All, "AllLBRs"}], "AllInitialRates" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 5, 
                  DirectedInfinity[1], {All, "AllInitialRates"}], 
                "AllSubstrateConcs" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 5, 
                  DirectedInfinity[1], {All, "AllSubstrateConcs"}], 
                "StdCurveSlope" -> TypeSystem`PackageScope`AtomShape[60], 
                "StdCurveIntercept" -> TypeSystem`PackageScope`AtomShape[60], 
                "StdCurveR2" -> TypeSystem`PackageScope`UnknownShape[False], 
                "fit_mm_kcat_param_error" -> 
                TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_KM_param_error" -> 
                TypeSystem`PackageScope`AtomShape[60], "AllEnzymeConcs" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 5, 
                  DirectedInfinity[1], {All, "AllEnzymeConcs"}], 
                "KnownBadMutant" -> TypeSystem`PackageScope`AtomShape[34]]], 
              DirectedInfinity[1], 10, {All}]], 4, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "MutantID", "ExpIndex", "ManualGFPFlag", "UniqueExptID", 
             "ChipType", "LocalBackgroundRatio", "Indices", "EnzymeConc", 
             "fit_mm_datapoints", "DataPointsOptLinFit", "fit_mm_curved_r2", 
             "fit_mm_kcat", "fit_mm_KM", "fit_mm_scale_factor", "FitR2", 
             "DataPoints", "kcat", "Km", "ScaleFactor", "SubstrateConc", 
             "OptLinFitSlope", "AllLBRs", "AllInitialRates", 
             "AllSubstrateConcs", "StdCurveSlope", "StdCurveIntercept", 
             "StdCurveR2", "fit_mm_kcat_param_error", "fit_mm_KM_param_error",
              "AllEnzymeConcs", "KnownBadMutant"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "GlyScan", "SlowChip", "SlowestChip", "ValScan"]], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 7], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 7], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 7], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 7], 
             TypeSystem`Atom[Integer]}], 8666], "Meta" -> 
         Association["ID" -> 7489972207772421], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "MutantID"} -> 1, {All, "ExpIndex"} -> 
            1, {All, "ManualGFPFlag"} -> 1, {All, "UniqueExptID"} -> 
            1, {All, "ChipType"} -> 1, {All, "LocalBackgroundRatio"} -> 
            1, {All, "Indices"} -> 1, {All, "EnzymeConc"} -> 
            1, {All, "fit_mm_datapoints"} -> 1, {All, "DataPointsOptLinFit"} -> 
            1, {All, "fit_mm_curved_r2"} -> 1, {All, "fit_mm_kcat"} -> 
            1, {All, "fit_mm_KM"} -> 1, {All, "fit_mm_scale_factor"} -> 
            1, {All, "FitR2"} -> 1, {All, "DataPoints"} -> 1, {All, "kcat"} -> 
            1, {All, "Km"} -> 1, {All, "ScaleFactor"} -> 
            1, {All, "SubstrateConc"} -> 1, {All, "OptLinFitSlope"} -> 
            1, {All, "AllLBRs"} -> 1, {All, "AllInitialRates"} -> 
            1, {All, "AllSubstrateConcs"} -> 1, {All, "StdCurveSlope"} -> 
            1, {All, "StdCurveIntercept"} -> 1, {All, "StdCurveR2"} -> 
            1, {All, "fit_mm_kcat_param_error"} -> 
            1, {All, "fit_mm_KM_param_error"} -> 1, {All, "AllEnzymeConcs"} -> 
            1, {All, "KnownBadMutant"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "MutantID" -> 
                TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                "ExpIndex" -> TypeSystem`PackageScope`AtomShape[34], 
                "ManualGFPFlag" -> TypeSystem`PackageScope`AtomShape[34], 
                "UniqueExptID" -> 
                TypeSystem`PackageScope`AtomShape[336.00000000000006`], 
                "ChipType" -> TypeSystem`PackageScope`AtomShape[99.], 
                "LocalBackgroundRatio" -> 
                TypeSystem`PackageScope`AtomShape[60], "Indices" -> 
                TypeSystem`PackageScope`AtomShape[76.80000000000001], 
                "EnzymeConc" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_datapoints" -> 
                TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
                "DataPointsOptLinFit" -> 
                TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
                "fit_mm_curved_r2" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_kcat" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_KM" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_scale_factor" -> 
                TypeSystem`PackageScope`AtomShape[60], "FitR2" -> 
                TypeSystem`PackageScope`AtomShape[60], "DataPoints" -> 
                TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
                "kcat" -> TypeSystem`PackageScope`AtomShape[60], "Km" -> 
                TypeSystem`PackageScope`AtomShape[60], "ScaleFactor" -> 
                TypeSystem`PackageScope`AtomShape[60], "SubstrateConc" -> 
                TypeSystem`PackageScope`AtomShape[60], "OptLinFitSlope" -> 
                TypeSystem`PackageScope`AtomShape[60], "AllLBRs" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 5, 
                  DirectedInfinity[1], {All, "AllLBRs"}], "AllInitialRates" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 5, 
                  DirectedInfinity[1], {All, "AllInitialRates"}], 
                "AllSubstrateConcs" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 5, 
                  DirectedInfinity[1], {All, "AllSubstrateConcs"}], 
                "StdCurveSlope" -> TypeSystem`PackageScope`AtomShape[60], 
                "StdCurveIntercept" -> TypeSystem`PackageScope`AtomShape[60], 
                "StdCurveR2" -> TypeSystem`PackageScope`UnknownShape[False], 
                "fit_mm_kcat_param_error" -> 
                TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_KM_param_error" -> 
                TypeSystem`PackageScope`AtomShape[60], "AllEnzymeConcs" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 5, 
                  DirectedInfinity[1], {All, "AllEnzymeConcs"}], 
                "KnownBadMutant" -> TypeSystem`PackageScope`AtomShape[34]]], 
              DirectedInfinity[1], 10, {All}]], 4, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "MutantID", "ExpIndex", "ManualGFPFlag", "UniqueExptID", 
             "ChipType", "LocalBackgroundRatio", "Indices", "EnzymeConc", 
             "fit_mm_datapoints", "DataPointsOptLinFit", "fit_mm_curved_r2", 
             "fit_mm_kcat", "fit_mm_KM", "fit_mm_scale_factor", "FitR2", 
             "DataPoints", "kcat", "Km", "ScaleFactor", "SubstrateConc", 
             "OptLinFitSlope", "AllLBRs", "AllInitialRates", 
             "AllSubstrateConcs", "StdCurveSlope", "StdCurveIntercept", 
             "StdCurveR2", "fit_mm_kcat_param_error", "fit_mm_KM_param_error",
              "AllEnzymeConcs", "KnownBadMutant"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "GlyScan", "SlowChip", "SlowestChip", "ValScan"]], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 7], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 7], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 7], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 7], 
             TypeSystem`Atom[Integer]}], 8666], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 4, 
         "DisplayedColumnCount" -> 10, "DataRowCount" -> 8666, 
         "DataColumnCount" -> 31, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MutantID", 
                    Style[
                    "MutantID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "MutantID"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "MutantID"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ExpIndex", 
                    Style[
                    "ExpIndex", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "ExpIndex"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "ExpIndex"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ManualGFPFlag", 
                    Style[
                    "ManualGFPFlag", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "ManualGFPFlag"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "ManualGFPFlag"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["UniqueExptID", 
                    Style[
                    "UniqueExptID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "UniqueExptID"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "UniqueExptID"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ChipType", 
                    Style[
                    "ChipType", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "ChipType"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "ChipType"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["LocalBackgroundRatio", 
                    Style[
                    "LocalBackgroundRatio", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "LocalBackgroundRatio"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "LocalBackgroundRatio"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Indices", 
                    Style[
                    "Indices", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Indices"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Indices"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["EnzymeConc", 
                    Style[
                    "EnzymeConc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "EnzymeConc"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "EnzymeConc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["fit_mm_datapoints", 
                    Style[
                    "fit_mm_datapoints", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "fit_mm_datapoints"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "fit_mm_datapoints"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["DataPointsOptLinFit", 
                    Style[
                    "DataPointsOptLinFit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "DataPointsOptLinFit"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "DataPointsOptLinFit"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation["T517G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190407_S3_d1_cMUP_1_GlyScan.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["GlyScan", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{99., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["5.81452"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{28, 27}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["5.44816"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.191271593985322}, {25., 0.3728448071937436}, \
{50., 0.5556903210114408}, {100., 0.7969662488599568}, {200., \
0.9108929791226853}, {500, 1.}, {1000., 0.941154007097321}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 7.288269476198505}, {75, 11.053929137867872}, {150, \
14.903270125352117}, {225, 18.61662895838719}, {300, 22.35090812287598}, \
{375, 25.949205132915598}, {450, 29.683484297404387}, {525, \
33.34454230180516}, {600, 37.11020196347453}, {675, 40.635277813426136}, \
{825, 47.716810010509924}, {1125, 61.91125490185807}, {1725, \
90.07002103856347}, {2625, 130.91696820194926}, {3825, 185.8014577707803}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["M398G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190407_S3_d1_cMUP_1_GlyScan.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["GlyScan", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{99., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["52.2084"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{28, 13}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["5.55244"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.24208090717860153}, {25., 0.46195163184340193}, \
{50., 0.6309187122385571}, {100., 0.8559293292004225}, {200., \
0.9112200421416092}, {500, 0.9999999999999999}, {1000., 0.8779696086091958}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 8.309409941762498}, {75, 21.575234349653297}, {150, \
34.578482198696}, {225, 47.4675663265004}, {300, 60.59639426890524}, {375, \
73.23431820998537}, {450, 85.80374391832252}, {525, 98.56724795276479}, {600, \
110.60010417128191}, {675, 122.48454755218924}, {825, 146.49317812860434}, \
{1125, 192.69523611374558}, {1725, 283.24989979996747}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["T439G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190407_S3_d1_cMUP_1_GlyScan.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["GlyScan", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{99., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25.8561"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{28, 16}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["5.37992"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.17787649487324814}, {25., 0.3582905859626907}, \
{50., 0.516281635765189}, {100., 0.7921545524481896}, {200., \
0.8789273457452899}, {500, 1.}, {1000., 0.9094072163528991}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 8.415266039367246}, {75, 20.806987918515212}, {150, \
32.799756800578415}, {225, 44.87715207596263}, {300, 56.66439971710338}, \
{375, 68.45164735824413}, {450, 80.22680551462473}, {525, 91.68763706724158}, \
{600, 103.72876388834534}, {675, 115.69735380088827}, {825, \
137.7364845186314}, {1125, 181.7180300760366}, {1725, 265.61905431143845}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["V75G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190407_S3_d1_cMUP_1_GlyScan.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["GlyScan", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{99., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6.49469"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{28, 40}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4.82584"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{10., 0.2306704452651815}, {25., 0.4105757884794533}, \
{50., 0.5851442912251682}, {100., 0.816691481754669}, {200., \
0.9233385387752385}, {500, 1.}, {1000., 0.9488113127270493}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 7.917418486279138}, {75, 12.103956550604899}, {150, \
16.146131233402187}, {225, 20.239864266745354}, {300, 24.230480598996756}, \
{375, 28.252031941575687}, {450, 32.201401593390386}, {525, \
36.171394585423435}, {600, 40.01764753614636}, {675, 44.132003909707876}, \
{825, 51.82450981115373}, {1125, 66.83830149011509}, {1725, \
96.53591140454412}, {2625, 137.33919002655654}, {3825, 193.022208616111}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-4) 
                    If[True, 8666, 1], {1, 8666 - -4 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-4) 
                    If[False, 8666, 1], {1, 8666 - -4 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 4, " of ", 
                    Style[
                    8666, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 4, " of ", 
                    Style[
                    8666, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    4 If[False, 8666, 1], {1, 8666 - 4 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    4 If[True, 8666, 1], {1, 8666 - 4 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 31, 1], {1, 31 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 31, 1], {1, 31 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 31, 1], {1, 31 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 31, 1], {1, 31 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {1962., {100.134033203125, 105.865966796875}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {1962., {100.134033203125, 105.865966796875}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 8313918522522547726630769631792687973029905527719331061800,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.799527738937745*^9, 3.802285939844864*^9, 3.802385485435589*^9, 
   3.807129998058292*^9, 3.8089380813944817`*^9, 3.810492022689447*^9, {
   3.812391752141724*^9, 3.8123917895899*^9}, 3.812556085374279*^9, 
   3.8126629016655617`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"2849d454-c2b2-4d61-9e83-575f1b40ddf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantIn", "=", 
    RowBox[{"culled", "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutant", "=", 
    RowBox[{"KeySortBy", "[", 
     RowBox[{"groupedbyMutantIn", ",", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tooSlowIn", "=", 
    RowBox[{"slow", "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tooSlow", "=", 
    RowBox[{"KeySortBy", "[", 
     RowBox[{"tooSlowIn", ",", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"datasetsIn", "=", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Values", "[", 
     RowBox[{"Normal", "[", 
      RowBox[{"groupedbyMutant", "[", 
       RowBox[{"All", ",", "All", ",", "\"\<UniqueExptID\>\""}], "]"}], "]"}],
      "]"}], "]"}], "]"}]}]}], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"4dfa2de9-e44b-4e57-b096-45c3557b3850"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"190407_S3_d1_cMUP_1_GlyScan.csv\"\>", 
   ",", "\<\"181119_S2_d2_cMUP_1_GlyScan.csv\"\>", 
   ",", "\<\"180614_S3_d1_cMUP_1_GlyScan.csv\"\>", 
   ",", "\<\"180614_S2_d1_cMUP_1_GlyScan.csv\"\>", 
   ",", "\<\"180225_S2_d2_cMUP_1_ValScan.csv\"\>", 
   ",", "\<\"180302_S2_d3_cMUP_1_ValScan.csv\"\>", 
   ",", "\<\"180402_S4_d3_cMUP_1_ValScan.csv\"\>", 
   ",", "\<\"180522_S3_d2_cMUP_1_ValScan.csv\"\>", 
   ",", "\<\"190205_S3_d1_cMUP_1_ValScan.csv\"\>", 
   ",", "\<\"180528_S3_d1_cMUP_1_ValScan.csv\"\>", 
   ",", "\<\"180531_S2_d1_cMUP_1_GlyScan.csv\"\>", 
   ",", "\<\"190506_S2_d1_cMUP_1_SlowChip.csv\"\>", 
   ",", "\<\"190626_S2_d1_cMUP_1_SlowChip.csv\"\>", 
   ",", "\<\"190630_S2_d1_cMUP_1_SlowChip.csv\"\>", 
   ",", "\<\"190609_S2_d1_cMUP_1_SlowChip.csv\"\>", 
   ",", "\<\"191128_S2_d3_cMUP_1_SlowestChip.csv\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7995277397276583`*^9, 3.8022859405783663`*^9, 
  3.802385489515852*^9, 3.807129999205627*^9, 3.8089380821323023`*^9, 
  3.810492023551643*^9, 3.812391812535652*^9, 3.812556087916844*^9, 
  3.8126629023255577`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"58c511c3-3914-4a72-b462-a2b12429be58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Length of aggregate data set (number of unique measurements)\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", "[", "culled", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mutantsWithData", "=", 
    RowBox[{"Sort", "[", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{"culled", "[", 
         RowBox[{"All", ",", "\"\<MutantID\>\""}], "]"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringDrop", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}], "]"}], "<", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringDrop", "[", 
            RowBox[{"#2", ",", 
             RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], "&"}]}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Number of total mutants with at least 1 Michaelis-Menten curve:\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", "[", "mutantsWithData", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Mutants too slow to have at least 1 culled measurement:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"unmeasured", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"slow", "[", 
        RowBox[{"All", ",", "\"\<MutantID\>\""}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Normal", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"culled", "[", 
        RowBox[{"All", ",", "\"\<MutantID\>\""}], "]"}], "]"}], "]"}]}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"countRepsCulled", "=", 
    RowBox[{
     RowBox[{"culled", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", 
              RowBox[{"-", "1"}]}], "]"}], "==", "\"\<V\>\""}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"#MutantID", ",", 
                RowBox[{"-", "1"}]}], "]"}], "==", "\"\<A\>\""}], "&&", 
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"#MutantID", ",", "1"}], "]"}], "==", "\"\<V\>\""}]}], 
            ")"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", 
              RowBox[{"-", "1"}]}], "]"}], "==", "\"\<G\>\""}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"#MutantID", ",", 
                RowBox[{"-", "1"}]}], "]"}], "==", "\"\<A\>\""}], "&&", 
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"#MutantID", ",", "1"}], "]"}], "==", "\"\<G\>\""}]}], 
            ")"}]}], ")"}]}], "&"}], "]"}], "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Table of number of replicates per mutant:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sort", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "#", "]"}], "&"}], "/@", "countRepsCulled"}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Mean number of replicates per mutant:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Mean", "[", 
   RowBox[{"Values", "[", 
    RowBox[{"Normal", "[", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], "&"}], "/@", "countRepsCulled"}], 
      ")"}], "]"}], "]"}], "]"}], "]"}]}], "Input",
 CellLabel->"In[73]:=",ExpressionUUID->"a6eea525-f153-4237-a049-764c66b17d6c"],

Cell[BoxData["\<\"Length of aggregate data set (number of unique \
measurements)\"\>"], "Print",
 CellChangeTimes->{3.799527739846425*^9, 3.802285940655315*^9, 
  3.802385492773685*^9, 3.8071300060368156`*^9, 3.8089380822304897`*^9, 
  3.810492023626334*^9, 3.812391813902967*^9, 3.812556089521084*^9, 
  3.812662902362136*^9},
 CellLabel->
  "During evaluation of \
In[73]:=",ExpressionUUID->"bb4b98b7-440b-4519-a9c6-8b1d8bdf2937"],

Cell[BoxData["8666"], "Output",
 CellChangeTimes->{3.799527739850923*^9, 3.8022859406630707`*^9, 
  3.8023854927758303`*^9, 3.807130006039543*^9, 3.808938082232678*^9, 
  3.810492023628304*^9, 3.812391813907978*^9, 3.8125560895235023`*^9, 
  3.812662902363607*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"0fab67b6-1417-40d7-81bc-167358a7c3cd"],

Cell[BoxData["\<\"Number of total mutants with at least 1 Michaelis-Menten \
curve:\"\>"], "Print",
 CellChangeTimes->{3.799527739846425*^9, 3.802285940655315*^9, 
  3.802385492773685*^9, 3.8071300060368156`*^9, 3.8089380822304897`*^9, 
  3.810492023626334*^9, 3.812391813902967*^9, 3.812556089521084*^9, 
  3.8126629024337587`*^9},
 CellLabel->
  "During evaluation of \
In[73]:=",ExpressionUUID->"282c1a19-d802-4347-ba14-6eee767d4ffc"],

Cell[BoxData["1018"], "Output",
 CellChangeTimes->{3.799527739850923*^9, 3.8022859406630707`*^9, 
  3.8023854927758303`*^9, 3.807130006039543*^9, 3.808938082232678*^9, 
  3.810492023628304*^9, 3.812391813907978*^9, 3.8125560895235023`*^9, 
  3.81266290243507*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"9ebb8453-3e8c-4143-8aae-ed377802cbdf"],

Cell[BoxData["\<\"Mutants too slow to have at least 1 culled \
measurement:\"\>"], "Print",
 CellChangeTimes->{3.799527739846425*^9, 3.802285940655315*^9, 
  3.802385492773685*^9, 3.8071300060368156`*^9, 3.8089380822304897`*^9, 
  3.810492023626334*^9, 3.812391813902967*^9, 3.812556089521084*^9, 
  3.81266290243577*^9},
 CellLabel->
  "During evaluation of \
In[73]:=",ExpressionUUID->"9712a8f2-1105-4ed8-88a3-23c532eb6066"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"D305V\"\>", ",", "\<\"D326V\"\>", ",", "\<\"D352V\"\>", 
   ",", "\<\"D38V\"\>", ",", "\<\"G171V\"\>", ",", "\<\"G312V\"\>", 
   ",", "\<\"G354V\"\>", ",", "\<\"G64V\"\>", ",", "\<\"G82V\"\>", 
   ",", "\<\"G89V\"\>", ",", "\<\"G96V\"\>", ",", "\<\"H353G\"\>", 
   ",", "\<\"H495G\"\>", ",", "\<\"I167G\"\>", ",", "\<\"I97G\"\>", 
   ",", "\<\"S133V\"\>", ",", "\<\"S160V\"\>", ",", "\<\"S190V\"\>", 
   ",", "\<\"S464V\"\>", ",", "\<\"T79G\"\>", ",", "\<\"T79V\"\>", 
   ",", "\<\"W102G\"\>", ",", "\<\"W179G\"\>", ",", "\<\"Y193G\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.799527739850923*^9, 3.8022859406630707`*^9, 
  3.8023854927758303`*^9, 3.807130006039543*^9, 3.808938082232678*^9, 
  3.810492023628304*^9, 3.812391813907978*^9, 3.8125560895235023`*^9, 
  3.8126629024528627`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"aba60e89-05d6-4c5c-a609-88e9d683b309"],

Cell[BoxData["\<\"Table of number of replicates per mutant:\"\>"], "Print",
 CellChangeTimes->{3.799527739846425*^9, 3.802285940655315*^9, 
  3.802385492773685*^9, 3.8071300060368156`*^9, 3.8089380822304897`*^9, 
  3.810492023626334*^9, 3.812391813902967*^9, 3.812556089521084*^9, 
  3.8126629025052233`*^9},
 CellLabel->
  "During evaluation of \
In[73]:=",ExpressionUUID->"c323e4fc-cd4b-4ec1-96e9-56cee8da6be0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "W179V" -> 1, "G56V" -> 1, "L329G" -> 2, "V75G" -> 3, "V32G" -> 3, 
       "T88G" -> 3, "G171A" -> 3, "R28G" -> 3, "H95G" -> 3, "T294G" -> 3, 
       "A397G" -> 3, "A282G" -> 3, "S464G" -> 3, "Y479G" -> 3, "R41G" -> 3, 
       "L323G" -> 3, "H357G" -> 3, "L416G" -> 3, "G502A" -> 3, "T246G" -> 3, 
       "Y192V" -> 3, "N216V" -> 3, "G483V" -> 3, "K245V" -> 3, "Q145V" -> 3, 
       "F180V" -> 3, "S90V" -> 3, "H495V" -> 3, "H486V" -> 3, "Q386G" -> 4, 
       "L61G" -> 4, "P450G" -> 4, "L221G" -> 4, "I393G" -> 4, "R47G" -> 4, 
       "K22G" -> 4, "G123A" -> 4, "F404G" -> 4, "S166G" -> 4, "Q145G" -> 4, 
       "D418G" -> 4, "C113G" -> 4, "G56A" -> 4, "D291G" -> 4, "K58G" -> 4, 
       "L498G" -> 4, "T125G" -> 4, "K339G" -> 4, "S133G" -> 4, "T321G" -> 4, 
       "D257G" -> 4, "V119G" -> 4, "D295G" -> 4, "A260G" -> 4, "V419G" -> 4, 
       "L137G" -> 4, "P497G" -> 4, "V290G" -> 4, "H515G" -> 4, "A355G" -> 4, 
       "G185A" -> 4, "K342G" -> 4, "A395G" -> 4, "L45G" -> 4, "Y400G" -> 4, 
       "L240G" -> 4, "A211G" -> 4, "L213G" -> 4, "P121G" -> 4, "V111G" -> 4, 
       "L301V" -> 4, "V201A" -> 4, "F152V" -> 4, "L221V" -> 4, "Q507V" -> 4, 
       "M288V" -> 4, "K256V" -> 4, "N272V" -> 4, "Y475V" -> 4, "S477V" -> 4, 
       "F296V" -> 4, "W200V" -> 4, "N460V" -> 4, "N344V" -> 4, "G55V" -> 4, 
       "W461V" -> 4, "F204G" -> 4, "L274G" -> 4, "F500G" -> 4, "L297G" -> 4, 
       "L35G" -> 4, "D411G" -> 5, "G343A" -> 5, "A170G" -> 5, "V373G" -> 5, 
       "D101G" -> 5, "P27G" -> 5, "T63G" -> 5, "K383G" -> 5, "N24G" -> 5, 
       "G96A" -> 5, "I469G" -> 5, "S231G" -> 5, "G147A" -> 5, "A410G" -> 5, 
       "I544G" -> 5, "M501G" -> 5, "T150G" -> 5, "N208G" -> 5, "F270G" -> 5, 
       "W443G" -> 5, "N225G" -> 5, "A98G" -> 5, "Q226G" -> 5, "D331G" -> 5, 
       "G289A" -> 5, "A396G" -> 5, "A215G" -> 5, "L499G" -> 5, "V159G" -> 5, 
       "N69G" -> 5, "A302G" -> 5, "W42G" -> 5, "V209G" -> 5, "D405G" -> 5, 
       "V156G" -> 5, "T191G" -> 5, "R406G" -> 5, "S139G" -> 5, "R327G" -> 5, 
       "A279G" -> 5, "S154G" -> 5, "M376G" -> 5, "L254G" -> 5, "K538G" -> 5, 
       "T183G" -> 5, "K377G" -> 5, "S303G" -> 5, "D182G" -> 5, "Y403G" -> 5, 
       "L67G" -> 5, "M60G" -> 5, "D163G" -> 5, "S487G" -> 5, "M278G" -> 5, 
       "S477G" -> 5, "A165G" -> 5, "P521G" -> 5, "D391G" -> 5, "K261G" -> 5, 
       "G474V" -> 5, "Q386V" -> 5, "I265V" -> 5, "L264V" -> 5, "F332V" -> 5, 
       "S510V" -> 5, "K481V" -> 5, "E238V" -> 5, "S445V" -> 5, "P29V" -> 5, 
       "L336V" -> 5, "S471V" -> 5, "L384V" -> 5, "K462V" -> 5, "F500V" -> 5, 
       "D337V" -> 5, "R59G" -> 5, "Y435G" -> 5, "N151G" -> 5, "T522V" -> 5, 
       "V70G" -> 5, "L276G" -> 5, "D116G" -> 5, "G502V" -> 5, "F57G" -> 5, 
       "T517G" -> 6, "V318G" -> 6, "D473G" -> 6, "V78G" -> 6, "I224G" -> 6, 
       "A351G" -> 6, "P269G" -> 6, "T252G" -> 6, "W461G" -> 6, "L148G" -> 6, 
       "Q21G" -> 6, "P250G" -> 6, "E509G" -> 6, "F311G" -> 6, "N392G" -> 6, 
       "E196G" -> 6, "G176A" -> 6, "L222G" -> 6, "N216G" -> 6, "P539G" -> 6, 
       "A382G" -> 6, "G130A" -> 6, "A281G" -> 6, "N310G" -> 6, "Q512G" -> 6, 
       "T77G" -> 6, "V436G" -> 6, "I394G" -> 6, "G458A" -> 6, "K207G" -> 6, 
       "F87G" -> 6, "G354A" -> 6, "S533G" -> 6, "V214G" -> 6, "A520G" -> 6, 
       "M424G" -> 6, "Y49G" -> 6, "R546G" -> 6, "I81G" -> 6, "K199G" -> 6, 
       "K109G" -> 6, "K385G" -> 6, "S432G" -> 6, "Y422G" -> 6, "K428G" -> 6, 
       "A177G" -> 6, "I316G" -> 6, "T140G" -> 6, "K195G" -> 6, "G285A" -> 6, 
       "L427G" -> 6, "N381G" -> 6, "F531G" -> 6, "T369G" -> 6, "L384G" -> 6, 
       "N335G" -> 6, "E236G" -> 6, "P313G" -> 6, "A330G" -> 6, "E441G" -> 6, 
       "T84G" -> 6, "N62G" -> 6, "D417G" -> 6, "L107G" -> 6, "K506G" -> 6, 
       "G341A" -> 6, "N234G" -> 6, "K256G" -> 6, "M516G" -> 6, "E542G" -> 6, 
       "E319G" -> 6, "D280G" -> 6, "T304G" -> 6, "N272G" -> 6, "S128G" -> 6, 
       "G99A" -> 6, "R324G" -> 6, "G312A" -> 6, "T124G" -> 6, "G545A" -> 6, 
       "N490G" -> 6, "P431G" -> 6, "D73G" -> 6, "A535G" -> 6, "Y492G" -> 6, 
       "N511G" -> 6, "S494G" -> 6, "N127G" -> 6, "T118G" -> 6, "A25G" -> 6, 
       "D518G" -> 6, "Y46G" -> 6, "S471G" -> 6, "Q39G" -> 6, "F388G" -> 6, 
       "G271A" -> 6, "E430V" -> 6, "G370V" -> 6, "S315V" -> 6, "K30V" -> 6, 
       "Y227V" -> 6, "K105V" -> 6, "V433A" -> 6, "S166V" -> 6, "E509V" -> 6, 
       "T191V" -> 6, "N511V" -> 6, "L274V" -> 6, "T124V" -> 6, "I442V" -> 6, 
       "G185V" -> 6, "T252V" -> 6, "N205V" -> 6, "P532V" -> 6, "A520V" -> 6, 
       "P210V" -> 6, "Y251V" -> 6, "K261V" -> 6, "S154V" -> 6, "L254V" -> 6, 
       "V373A" -> 6, "K538V" -> 6, "E542V" -> 6, "A215V" -> 6, "G147V" -> 6, 
       "T248V" -> 6, "K155V" -> 6, "K482V" -> 6, "Y514V" -> 6, "L526V" -> 6, 
       "N399V" -> 6, "K378V" -> 6, "K338V" -> 6, "G34V" -> 6, "M501V" -> 6, 
       "I72V" -> 6, "L240V" -> 6, "I519G" -> 6, "I470G" -> 6, "V299G" -> 6, 
       "K162V" -> 6, "K162G" -> 6, "L31G" -> 6, "F333G" -> 6, "M398G" -> 7, 
       "G474A" -> 7, "Y44G" -> 7, "H71G" -> 7, "E426G" -> 7, "T484G" -> 7, 
       "S110G" -> 7, "A390G" -> 7, "Q468G" -> 7, "E232G" -> 7, "D440G" -> 7, 
       "E374G" -> 7, "Y258G" -> 7, "G158A" -> 7, "M362G" -> 7, "G108A" -> 7, 
       "Q363G" -> 7, "S445G" -> 7, "K366G" -> 7, "K407G" -> 7, "A356G" -> 7, 
       "T248G" -> 7, "G242A" -> 7, "V37G" -> 7, "T228G" -> 7, "S85G" -> 7, 
       "D375G" -> 7, "G465A" -> 7, "T143G" -> 7, "P210G" -> 7, "K472G" -> 7, 
       "A478G" -> 7, "G308A" -> 7, "I86G" -> 7, "V536G" -> 7, "N286G" -> 7, 
       "S93G" -> 7, "T194G" -> 7, "E54G" -> 7, "L346G" -> 7, "D104G" -> 7, 
       "N344G" -> 7, "A149G" -> 7, "V307G" -> 7, "E379G" -> 7, "V129G" -> 7, 
       "W503G" -> 7, "E415G" -> 7, "Q287G" -> 7, "V423G" -> 7, "K155G" -> 7, 
       "T184G" -> 7, "L414G" -> 7, "D421G" -> 7, "S480G" -> 7, "S126G" -> 7, 
       "K105G" -> 7, "T267G" -> 7, "Y306G" -> 7, "G55A" -> 7, "S491G" -> 7, 
       "Q401G" -> 7, "L197G" -> 7, "N300G" -> 7, "P198G" -> 7, "P532G" -> 7, 
       "Q507G" -> 7, "K462G" -> 7, "Q277G" -> 7, "V347G" -> 7, "K481G" -> 7, 
       "V340A" -> 7, "V33A" -> 7, "V347A" -> 7, "P92V" -> 7, "Y193V" -> 7, 
       "F333V" -> 7, "A211V" -> 7, "L414V" -> 7, "Y422V" -> 7, "A149V" -> 7, 
       "E319V" -> 7, "H132V" -> 7, "N127V" -> 7, "E259V" -> 7, "G123V" -> 7, 
       "V488A" -> 7, "G176V" -> 7, "S243V" -> 7, "V156A" -> 7, "K339V" -> 7, 
       "V122A" -> 7, "P198V" -> 7, "D181V" -> 7, "V299A" -> 7, "N136V" -> 7, 
       "K58V" -> 7, "H365V" -> 7, "K452V" -> 7, "R59V" -> 7, "I496V" -> 7, 
       "A281V" -> 7, "V70A" -> 7, "D328V" -> 7, "P250V" -> 7, "P450V" -> 7, 
       "T23V" -> 7, "G53V" -> 7, "M516V" -> 7, "L498V" -> 7, "E232V" -> 7, 
       "D440V" -> 7, "L476V" -> 7, "L416V" -> 7, "I519V" -> 7, "F361V" -> 7, 
       "T77V" -> 7, "I529V" -> 7, "F388V" -> 7, "T369V" -> 7, "Y459V" -> 7, 
       "A535V" -> 7, "D418V" -> 7, "V209A" -> 7, "V157A" -> 7, "S358V" -> 7, 
       "P223V" -> 7, "I224V" -> 7, "Y48V" -> 7, "T304V" -> 7, "S93V" -> 7, 
       "I283G" -> 7, "I496G" -> 7, "L168G" -> 7, "D144V" -> 7, "D116V" -> 7, 
       "G465V" -> 7, "V523G" -> 7, "D518V" -> 7, "V340G" -> 7, "L336G" -> 7, 
       "V33G" -> 8, "V359G" -> 8, "D292G" -> 8, "S510G" -> 8, "V26G" -> 8, 
       "F371G" -> 8, "P247G" -> 8, "E229G" -> 8, "K51G" -> 8, "G483A" -> 8, 
       "K387G" -> 8, "K482G" -> 8, "S412G" -> 8, "S453G" -> 8, "G508A" -> 8, 
       "H132G" -> 8, "G504A" -> 8, "S90G" -> 8, "G239A" -> 8, "G389A" -> 8, 
       "P223G" -> 8, "T141G" -> 8, "S230G" -> 8, "K429G" -> 8, "Y227G" -> 8, 
       "N314G" -> 8, "A80G" -> 8, "R420G" -> 8, "E106G" -> 8, "G370A" -> 8, 
       "G89A" -> 8, "H365G" -> 8, "V235G" -> 8, "S358G" -> 8, "Q530G" -> 8, 
       "G263A" -> 8, "K30G" -> 8, "Q212G" -> 8, "T273G" -> 8, "N173G" -> 8, 
       "G360A" -> 8, "E449G" -> 8, "E117G" -> 8, "Y65G" -> 8, "V402G" -> 8, 
       "K413G" -> 8, "D203G" -> 8, "R266G" -> 8, "N202G" -> 8, "V543G" -> 8, 
       "S243G" -> 8, "S525G" -> 8, "E444G" -> 8, "K338G" -> 8, "T175G" -> 8, 
       "S350G" -> 8, "N136G" -> 8, "S115G" -> 8, "N219G" -> 8, "D328G" -> 8, 
       "V488G" -> 8, "S50G" -> 8, "D493G" -> 8, "I293G" -> 8, "T485G" -> 8, 
       "K378G" -> 8, "R135G" -> 8, "I467G" -> 8, "S126V" -> 8, "N314V" -> 8, 
       "S438V" -> 8, "F348V" -> 8, "P521V" -> 8, "Y403V" -> 8, "F372V" -> 8, 
       "M398V" -> 8, "D466V" -> 8, "L148V" -> 8, "K413V" -> 8, "I94V" -> 8, 
       "F249V" -> 8, "V235A" -> 8, "D405V" -> 8, "D257V" -> 8, "V75A" -> 8, 
       "N69V" -> 8, "V536A" -> 8, "Y103V" -> 8, "K528V" -> 8, "P169V" -> 8, 
       "A396V" -> 8, "L325V" -> 8, "I188V" -> 8, "H83V" -> 8, "M362V" -> 8, 
       "E379V" -> 8, "N300V" -> 8, "E426V" -> 8, "L499V" -> 8, "P431V" -> 8, 
       "S115V" -> 8, "V32A" -> 8, "W42V" -> 8, "H95V" -> 8, "W489V" -> 8, 
       "E196V" -> 8, "Y306V" -> 8, "V436A" -> 8, "Y258V" -> 8, "S231V" -> 8, 
       "I505V" -> 8, "V36A" -> 8, "L67V" -> 8, "Y322V" -> 8, "D104V" -> 8, 
       "M380V" -> 8, "N234V" -> 8, "T485V" -> 8, "Q512V" -> 8, "D331V" -> 8, 
       "D292V" -> 8, "R135V" -> 8, "P313V" -> 8, "M376V" -> 8, "A279V" -> 8, 
       "Y46V" -> 8, "I470V" -> 8, "M278V" -> 8, "I467V" -> 8, "W443V" -> 8, 
       "H357V" -> 8, "I447V" -> 8, "I316V" -> 8, "A390V" -> 8, "K472V" -> 8, 
       "Y492V" -> 8, "S480V" -> 8, "T246V" -> 8, "H353V" -> 8, "V37A" -> 8, 
       "L168V" -> 8, "T275V" -> 8, "E444V" -> 8, "I94G" -> 8, "T522G" -> 8, 
       "G217A" -> 8, "T189G" -> 8, "S190G" -> 8, "D305G" -> 8, "D320V" -> 8, 
       "D326G" -> 8, "F332G" -> 8, "P513G" -> 9, "T541G" -> 9, "M40G" -> 9, 
       "F152G" -> 9, "Y475G" -> 9, "A255G" -> 9, "S66G" -> 9, "T23G" -> 9, 
       "T153G" -> 9, "K244G" -> 9, "G53A" -> 9, "K245G" -> 9, "S446G" -> 9, 
       "N399G" -> 9, "S438G" -> 9, "S160G" -> 9, "S524G" -> 9, "S315G" -> 9, 
       "P368G" -> 9, "N68G" -> 9, "T220G" -> 9, "G537A" -> 9, "F372G" -> 9, 
       "Q120G" -> 9, "D466G" -> 9, "L264G" -> 9, "T298G" -> 9, "K262G" -> 9, 
       "K186G" -> 9, "G534A" -> 9, "V408G" -> 9, "E259G" -> 9, "Q131G" -> 9, 
       "F180G" -> 9, "Y345G" -> 9, "Q401V" -> 9, "V359A" -> 9, "A330V" -> 9, 
       "T439V" -> 9, "V26A" -> 9, "P134V" -> 9, "L241V" -> 9, "V129A" -> 9, 
       "I86V" -> 9, "V402A" -> 9, "G343V" -> 9, "H71V" -> 9, "V423A" -> 9, 
       "Y345V" -> 9, "Y49V" -> 9, "R28V" -> 9, "H515V" -> 9, "Q277V" -> 9, 
       "T425V" -> 9, "V523A" -> 9, "D421V" -> 9, "E374V" -> 9, "P27V" -> 9, 
       "N208V" -> 9, "T88V" -> 9, "A478V" -> 9, "A410V" -> 9, "F178V" -> 9, 
       "P368V" -> 9, "L45V" -> 9, "T118V" -> 9, "F57V" -> 9, "V543A" -> 9, 
       "V307A" -> 9, "V408A" -> 9, "V455A" -> 9, "N334V" -> 9, "M367V" -> 9, 
       "D473V" -> 9, "W138V" -> 9, "T220V" -> 9, "L409V" -> 9, "V119A" -> 9, 
       "D375V" -> 9, "T321V" -> 9, "L146V" -> 9, "Q287V" -> 9, "R324V" -> 9, 
       "N286V" -> 9, "K366V" -> 9, "I167V" -> 9, "T114V" -> 9, "S128V" -> 9, 
       "T125V" -> 9, "Y65V" -> 9, "N381V" -> 9, "A170V" -> 9, "W503V" -> 9, 
       "F531V" -> 9, "D291V" -> 9, "D182V" -> 9, "T541V" -> 9, "K199V" -> 9, 
       "G271V" -> 9, "M60V" -> 9, "G217V" -> 9, "V318A" -> 9, "T143V" -> 9, 
       "I293V" -> 9, "E415V" -> 9, "I540V" -> 9, "S525V" -> 9, "G341V" -> 9, 
       "K51V" -> 9, "P539V" -> 9, "G534V" -> 9, "D253V" -> 9, "F311V" -> 9, 
       "M424V" -> 9, "I469V" -> 9, "T184V" -> 9, "E106V" -> 9, "F187V" -> 9, 
       "D417V" -> 9, "A98V" -> 9, "D280V" -> 9, "K207V" -> 9, "K452G" -> 9, 
       "Y459G" -> 9, "I447G" -> 9, "V142G" -> 9, "D163V" -> 9, "F178G" -> 9, 
       "W200G" -> 9, "I540G" -> 9, "M288G" -> 9, "N334G" -> 10, "N206G" -> 10,
        "I442G" -> 10, "N457G" -> 10, "G34A" -> 10, "D253G" -> 10, "L437G" -> 
       10, "T275G" -> 10, "F187G" -> 10, "P29G" -> 10, "L409G" -> 10, "Y103G" -> 
       10, "P269V" -> 10, "N24V" -> 10, "A395V" -> 10, "S110V" -> 10, "S139V" -> 
       10, "N173V" -> 10, "S446V" -> 10, "G242V" -> 10, "Q39V" -> 10, "S230V" -> 
       10, "R327V" -> 10, "S350V" -> 10, "S303V" -> 10, "A364V" -> 10, 
       "V419A" -> 10, "E449V" -> 10, "F404V" -> 10, "L427V" -> 10, "V78A" -> 
       10, "N335V" -> 10, "E236V" -> 10, "K22V" -> 10, "P247V" -> 10, "F371V" -> 
       10, "F204V" -> 10, "T63V" -> 10, "F270V" -> 10, "S453V" -> 10, "K186V" -> 
       10, "I81V" -> 10, "K506V" -> 10, "G108V" -> 10, "L297V" -> 10, "L346V" -> 
       10, "A382V" -> 10, "C113V" -> 10, "S85V" -> 10, "D284V" -> 10, "K244V" -> 
       10, "N151V" -> 10, "K195V" -> 10, "V91A" -> 10, "S50V" -> 10, "K262V" -> 
       10, "H172V" -> 10, "T153V" -> 10, "E117V" -> 10, "Q363V" -> 10, 
       "A260V" -> 10, "R41V" -> 10, "K387V" -> 10, "R463V" -> 10, "S412V" -> 
       10, "L276V" -> 10, "L107V" -> 10, "S524V" -> 10, "A25V" -> 10, "G504V" -> 
       10, "I544V" -> 10, "Q468V" -> 10, "G389V" -> 10, "K429V" -> 10, 
       "D493V" -> 10, "T150V" -> 10, "R546V" -> 10, "D203V" -> 10, "G158V" -> 
       10, "P121V" -> 10, "L434V" -> 10, "Y52V" -> 10, "K383V" -> 10, "A282V" -> 
       10, "L35V" -> 10, "N62V" -> 10, "T175V" -> 10, "L437V" -> 10, "G285V" -> 
       10, "S432V" -> 10, "G360V" -> 10, "L325G" -> 10, "S533V" -> 10, 
       "G537V" -> 10, "I505G" -> 10, "T439G" -> 11, "D352G" -> 11, "Y514G" -> 
       11, "D181G" -> 11, "W237G" -> 11, "I265G" -> 11, "L526G" -> 11, "G64A" -> 
       11, "F296G" -> 11, "L323V" -> 11, "T140V" -> 11, "Y400V" -> 11, 
       "A351V" -> 11, "F87V" -> 11, "R406V" -> 11, "T141V" -> 11, "N202V" -> 
       11, "T267V" -> 11, "G239V" -> 11, "E54V" -> 11, "T298V" -> 11, "V159A" -> 
       11, "D233V" -> 11, "Y44V" -> 11, "T228V" -> 11, "K385V" -> 11, "T183V" -> 
       11, "P76V" -> 11, "T273V" -> 11, "I283V" -> 11, "E229V" -> 11, "Y112V" -> 
       11, "I97V" -> 11, "R420V" -> 11, "Q212V" -> 11, "T294V" -> 11, "K377V" -> 
       11, "K407V" -> 11, "G263V" -> 11, "L213V" -> 11, "L349V" -> 11, "R47V" -> 
       11, "N310V" -> 11, "I451V" -> 11, "L161V" -> 11, "R266V" -> 11, 
       "Q120V" -> 11, "V290A" -> 11, "T194V" -> 11, "G508V" -> 11, "S491V" -> 
       11, "Y74V" -> 11, "A397V" -> 11, "D295V" -> 11, "L527G" -> 11, "D233G" -> 
       12, "E238G" -> 12, "I72G" -> 12, "L434G" -> 12, "L476G" -> 12, "I529G" -> 
       12, "P134G" -> 12, "E430G" -> 12, "Y52G" -> 12, "V201G" -> 12, "L161G" -> 
       12, "V157G" -> 12, "N219V" -> 12, "A355V" -> 12, "L31V" -> 12, "K342V" -> 
       12, "Q21V" -> 12, "D391V" -> 12, "L137V" -> 12, "I394V" -> 12, "G545V" -> 
       12, "S487V" -> 12, "N68V" -> 12, "K109V" -> 12, "L329V" -> 12, "T484V" -> 
       12, "N490V" -> 12, "L197V" -> 12, "V142A" -> 12, "A177V" -> 12, 
       "V111A" -> 12, "L61V" -> 12, "I456V" -> 12, "N225V" -> 12, "L527V" -> 
       12, "H309V" -> 12, "W102V" -> 12, "L301G" -> 12, "Y74G" -> 13, "M367G" -> 
       13, "F249G" -> 13, "L241G" -> 13, "E317G" -> 13, "I451G" -> 13, 
       "F348G" -> 13, "W237V" -> 13, "P174V" -> 13, "Y479V" -> 13, "A165V" -> 
       13, "N392V" -> 13, "E441V" -> 13, "Q530V" -> 13, "T517V" -> 13, 
       "L222V" -> 13, "A255V" -> 13, "T268V" -> 13, "G99V" -> 13, "V455G" -> 
       13, "P169G" -> 14, "W138G" -> 14, "M380G" -> 14, "D144G" -> 14, 
       "W489G" -> 14, "Y251G" -> 14, "D337G" -> 14, "M40V" -> 14, "W218V" -> 
       14, "R164V" -> 14, "Y435V" -> 14, "A356V" -> 14, "V214A" -> 14, 
       "P448G" -> 15, "H309G" -> 15, "V91G" -> 15, "V36G" -> 15, "W218G" -> 
       15, "H486G" -> 15, "R454G" -> 15, "R164G" -> 15, "L349G" -> 15, "D43V" -> 
       15, "A302V" -> 15, "G308V" -> 15, "K428V" -> 15, "Q226V" -> 15, 
       "N100V" -> 15, "D43G" -> 16, "Y48G" -> 16, "K528G" -> 16, "D101V" -> 
       16, "S494V" -> 16, "S66V" -> 16, "T114G" -> 16, "Y322G" -> 16, "I456G" -> 
       17, "P174G" -> 17, "P92G" -> 17, "D284G" -> 17, "Y112G" -> 17, "N457V" -> 
       17, "E317V" -> 17, "G130V" -> 17, "G458V" -> 17, "P513V" -> 17, 
       "L146G" -> 17, "V122G" -> 17, "G82A" -> 17, "V433G" -> 18, "D320G" -> 
       18, "R463G" -> 18, "R454V" -> 18, "N100G" -> 19, "N206V" -> 20, "D73V" -> 
       20, "H83G" -> 20, "D38G" -> 21, "F361G" -> 21, "A80V" -> 22, "D411V" -> 
       25], "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[48.00000000000001], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 1012], "Meta" -> 
     Association["ID" -> 7490036632281863], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[48.00000000000001], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 1012], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     1012, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["W179V", 
                  Style[
                  "W179V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["W179V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["W179V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["W179V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["G56V", 
                  Style[
                  "G56V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["G56V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["G56V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["G56V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["L329G", 
                  Style[
                  "L329G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["L329G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["L329G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["L329G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["V75G", 
                  Style[
                  "V75G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["V75G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["V75G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["V75G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["V32G", 
                  Style[
                  "V32G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["V32G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["V32G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["V32G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T88G", 
                  Style[
                  "T88G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["T88G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T88G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T88G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["G171A", 
                  Style[
                  "G171A", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["G171A"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["G171A"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["G171A"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["R28G", 
                  Style[
                  "R28G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["R28G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["R28G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["R28G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["H95G", 
                  Style[
                  "H95G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["H95G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H95G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H95G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T294G", 
                  Style[
                  "T294G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["T294G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T294G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T294G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["A397G", 
                  Style[
                  "A397G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["A397G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["A397G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["A397G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["A282G", 
                  Style[
                  "A282G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["A282G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["A282G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["A282G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["S464G", 
                  Style[
                  "S464G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["S464G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["S464G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["S464G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Y479G", 
                  Style[
                  "Y479G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Y479G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Y479G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Y479G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["R41G", 
                  Style[
                  "R41G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["R41G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["R41G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["R41G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["L323G", 
                  Style[
                  "L323G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["L323G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["L323G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["L323G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["H357G", 
                  Style[
                  "H357G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["H357G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H357G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H357G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["L416G", 
                  Style[
                  "L416G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["L416G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["L416G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["L416G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["G502A", 
                  Style[
                  "G502A", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["G502A"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["G502A"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["G502A"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T246G", 
                  Style[
                  "T246G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["T246G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T246G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T246G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1012, 1], {1, 1012 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1012, 1], {1, 1012 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1012, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1012, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1012, 1], {1, 1012 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1012, 1], {1, 1012 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{207., {275.634033203125, 281.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{207., {275.634033203125, 281.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.799527739850923*^9, 3.8022859406630707`*^9, 
  3.8023854927758303`*^9, 3.807130006039543*^9, 3.808938082232678*^9, 
  3.810492023628304*^9, 3.812391813907978*^9, 3.8125560895235023`*^9, 
  3.81266290256182*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"93b7c7b6-fb83-4a34-a75c-638035a9cf61"],

Cell[BoxData["\<\"Mean number of replicates per mutant:\"\>"], "Print",
 CellChangeTimes->{3.799527739846425*^9, 3.802285940655315*^9, 
  3.802385492773685*^9, 3.8071300060368156`*^9, 3.8089380822304897`*^9, 
  3.810492023626334*^9, 3.812391813902967*^9, 3.812556089521084*^9, 
  3.812662902750443*^9},
 CellLabel->
  "During evaluation of \
In[73]:=",ExpressionUUID->"4d6ca724-89fe-4c6b-b13b-40f57907c679"],

Cell[BoxData["8.16501976284585`"], "Output",
 CellChangeTimes->{3.799527739850923*^9, 3.8022859406630707`*^9, 
  3.8023854927758303`*^9, 3.807130006039543*^9, 3.808938082232678*^9, 
  3.810492023628304*^9, 3.812391813907978*^9, 3.8125560895235023`*^9, 
  3.812662902751629*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"2fc8b167-cb4c-4164-a612-482c64827f21"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Input parameters:", "Subsubsection",
 CellChangeTimes->{{3.743259241901544*^9, 
  3.743259245355948*^9}},ExpressionUUID->"f0d1602f-0e43-4b68-97fb-\
13e06ef4c366"],

Cell["\<\
Parameters below define which \"keys\" we're interested in using and \
aggregating:\
\>", "Text",
 CellChangeTimes->{{3.7734988174210043`*^9, 
  3.773498830695343*^9}},ExpressionUUID->"d313c4a8-07ee-4d79-ab0f-\
99b7cc8a99b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kcatKey", "=", "\"\<kcat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KmKey", "=", "\"\<Km\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kcatUncorrected", "=", "\"\<kcat\>\""}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"VmaxKey", "=", "\"\<VmaxMMfit optlin PerPointScaled\>\""}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"scaleFactorKey", "=", "\"\<ScaleFactor\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numStatsBootstraps", "=", "10000"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numBootstraps", "=", "5"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"KiFitCutoff", "=", "10000.0"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kcatFitCutoff", "=", "10000.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KmCutoff", "=", "10000.0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.743285352857889*^9, 3.743285357396597*^9}, {
   3.743295059403613*^9, 3.7432950633941593`*^9}, {3.743296421781231*^9, 
   3.7432964234087467`*^9}, {3.743353323083349*^9, 3.743353323411903*^9}, {
   3.743371281491371*^9, 3.743371286575852*^9}, {3.7433926289227333`*^9, 
   3.74339266015351*^9}, {3.743392793848579*^9, 3.743392813626515*^9}, {
   3.743392846264867*^9, 3.74339294099615*^9}, {3.7434297368683987`*^9, 
   3.7434297485675507`*^9}, {3.743431080301713*^9, 3.7434310836588182`*^9}, {
   3.746840446689534*^9, 3.746840465238015*^9}, {3.7470676204870443`*^9, 
   3.747067651076132*^9}, 3.7522620131065893`*^9, 3.7522620924061613`*^9, 
   3.7522838478705*^9, 3.753048262377254*^9, {3.753135422285384*^9, 
   3.753135422421919*^9}, {3.764285990511806*^9, 3.764285993730486*^9}, 
   3.764286145785037*^9, {3.773771424574082*^9, 3.773771425100422*^9}, {
   3.7737714893837137`*^9, 3.773771489968657*^9}, {3.7737722206866407`*^9, 
   3.773772263850772*^9}, {3.7741999055743523`*^9, 3.774199919424111*^9}, {
   3.774636223530949*^9, 3.7746362248778267`*^9}, {3.774799764369191*^9, 
   3.774799776939152*^9}, {3.774833685210968*^9, 3.774833687818438*^9}, {
   3.774916774230178*^9, 3.774916776046998*^9}, 3.775588375510785*^9, {
   3.779804320789837*^9, 3.7798043268632708`*^9}, {3.7809648677155247`*^9, 
   3.780964871829455*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"b43e4493-5f4f-4c03-a057-8a4549fb6151"]
}, Open  ]],

Cell[CellGroupData[{

Cell["On-chip expression folding times:", "Subsubsection",
 CellChangeTimes->{{3.774636227675187*^9, 
  3.774636243036778*^9}},ExpressionUUID->"e9b971c3-d761-4b36-a9d8-\
788c5a895065"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"foldingTimes", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
    "\"\<180710_S3d1_PafA_GlyScan_cMUP_081118_chipCorrected\>\"", "\[Rule]", 
     "173.8"}], ",", 
    RowBox[{"\"\<190407_S3d1PafA_GlyScan_cMUP\>\"", "\[Rule]", "111.8"}], ",", 
    RowBox[{
    "\"\<180614_S3d1_PafA_GlyScan_cMUP_withEconc\>\"", "\[Rule]", "140.4"}], 
    ",", 
    RowBox[{
    "\"\<180614_S2d1_PafA_GlyScan_cMUP_withEconc\>\"", "\[Rule]", "130.3"}], 
    ",", 
    RowBox[{"\"\<190305_S3d1_PafA_GlyScan_cMUP\>\"", "\[Rule]", "111.8"}], 
    ",", 
    RowBox[{"\"\<181119_S2d2_PafA_GlyScan_cMUP\>\"", "\[Rule]", "72.1"}], ",", 
    RowBox[{"\"\<190205_S3d1_PafA_ValScan_cMUP\>\"", "\[Rule]", "55.9"}], ",", 
    RowBox[{"\"\<190630_S2d1PafA_cMUP_SlowChip\>\"", "\[Rule]", "90.4"}], ",", 
    RowBox[{"\"\<190609_S2d1PafA_cMUP_SlowChip\>\"", "\[Rule]", "94.3"}], ",", 
    RowBox[{"\"\<190424_S2d1PafA_cMUP_SlowChip\>\"", "\[Rule]", "103.3"}], 
    ",", 
    RowBox[{"\"\<190626_S2d1PafA_cMUP_SlowChip\>\"", "\[Rule]", "89.9"}], ",", 
    RowBox[{"\"\<190605_S2d1PafA_cMUP_SlowChip\>\"", "\[Rule]", "88.1"}], ",", 
    RowBox[{
    "\"\<180522_S3d2_PafA_ValScan_cMUP_pH8_180924_chipCorrected\>\"", 
     "\[Rule]", "\"\<N/A\>\""}], ",", 
    RowBox[{
    "\"\<180402_S4d3_PafA_ValScan_cMUP_180924_chipCorrected\>\"", "\[Rule]", 
     "80.4"}], ",", 
    RowBox[{
    "\"\<180302_S2d3_PafA_ValScan_cMUP_180924_chipCorrected\>\"", "\[Rule]", 
     "94.8"}], ",", 
    RowBox[{"\"\<180528_S3d1_PafA_ValScan_cMUP\>\"", "\[Rule]", "84.4"}], ",", 
    RowBox[{"\"\<180531_S2d1PafA_GlyScan_cMUP\>\"", "\[Rule]", "132.4"}], ",", 
    RowBox[{
    "\"\<180225_S2d2_PafA_ValScan_cMUP_180924_chipCorrected\>\"", "\[Rule]", 
     "88.2"}], ",", 
    RowBox[{"\"\<191128_S2d3PafA_SlowestChip.csv\>\"", "\[Rule]", "90.0"}]}], 
   "|>"}]}]], "Input",
 CellChangeTimes->{{3.784390932015402*^9, 3.7843909385761538`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"2143b597-45a0-4550-ae79-49c980a20b77"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"180710_S3d1_PafA_GlyScan_cMUP_081118_chipCorrected\"\>", 
    "\[Rule]", "173.8`"}], ",", 
   RowBox[{"\<\"190407_S3d1PafA_GlyScan_cMUP\"\>", "\[Rule]", "111.8`"}], ",", 
   RowBox[{"\<\"180614_S3d1_PafA_GlyScan_cMUP_withEconc\"\>", "\[Rule]", 
    "140.4`"}], ",", 
   RowBox[{"\<\"180614_S2d1_PafA_GlyScan_cMUP_withEconc\"\>", "\[Rule]", 
    "130.3`"}], ",", 
   RowBox[{"\<\"190305_S3d1_PafA_GlyScan_cMUP\"\>", "\[Rule]", "111.8`"}], 
   ",", 
   RowBox[{"\<\"181119_S2d2_PafA_GlyScan_cMUP\"\>", "\[Rule]", "72.1`"}], ",", 
   RowBox[{"\<\"190205_S3d1_PafA_ValScan_cMUP\"\>", "\[Rule]", "55.9`"}], ",", 
   RowBox[{"\<\"190630_S2d1PafA_cMUP_SlowChip\"\>", "\[Rule]", "90.4`"}], ",", 
   RowBox[{"\<\"190609_S2d1PafA_cMUP_SlowChip\"\>", "\[Rule]", "94.3`"}], ",", 
   RowBox[{"\<\"190424_S2d1PafA_cMUP_SlowChip\"\>", "\[Rule]", "103.3`"}], 
   ",", 
   RowBox[{"\<\"190626_S2d1PafA_cMUP_SlowChip\"\>", "\[Rule]", "89.9`"}], ",", 
   RowBox[{"\<\"190605_S2d1PafA_cMUP_SlowChip\"\>", "\[Rule]", "88.1`"}], ",", 
   RowBox[{"\<\"180522_S3d2_PafA_ValScan_cMUP_pH8_180924_chipCorrected\"\>", 
    "\[Rule]", "\<\"N/A\"\>"}], ",", 
   RowBox[{"\<\"180402_S4d3_PafA_ValScan_cMUP_180924_chipCorrected\"\>", 
    "\[Rule]", "80.4`"}], ",", 
   RowBox[{"\<\"180302_S2d3_PafA_ValScan_cMUP_180924_chipCorrected\"\>", 
    "\[Rule]", "94.8`"}], ",", 
   RowBox[{"\<\"180528_S3d1_PafA_ValScan_cMUP\"\>", "\[Rule]", "84.4`"}], ",", 
   RowBox[{"\<\"180531_S2d1PafA_GlyScan_cMUP\"\>", "\[Rule]", "132.4`"}], ",", 
   RowBox[{"\<\"180225_S2d2_PafA_ValScan_cMUP_180924_chipCorrected\"\>", 
    "\[Rule]", "88.2`"}], ",", 
   RowBox[{"\<\"191128_S2d3PafA_SlowestChip.csv\"\>", "\[Rule]", "90.`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.799527740283671*^9, 3.80228594111386*^9, 
  3.802385497783255*^9, 3.8071300092454643`*^9, 3.808938082652178*^9, 
  3.810492024197154*^9, 3.812391818917913*^9, 3.812556093635582*^9, 
  3.8126629046183662`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"4b5b3ac1-7cac-40a1-8966-a2b4fd2b78e1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Normalization to internal WT parameters:", "Subsubsection",
 CellChangeTimes->{{3.7432657657977343`*^9, 3.7432657737257137`*^9}, {
  3.752261750189596*^9, 
  3.752261754923951*^9}},ExpressionUUID->"833e0c3c-3e13-4ad9-95b0-\
db098ca7d807"],

Cell["\<\
Chip-to-chip differences, for example the intrinsic variability of flow \
through the device, or the length of time the enzyme has been sitting on the \
button, influence the fractional activity of enzyme mutants across the \
device. In the first example, increased wait times before beginning an assay \
result in some fraction of activity loss due to enzyme \"death\", while flow \
issues can influence the effectiveness of the SDS wash. In both these cases, \
the fitted kcat values will vary modestly between chips.

Given these known issues, we can normalize the kcat values from each \
experimental dataset based on the subset of WT mutants on each chip. This \
removes any systematic, global (on the experimental level).\
\>", "Text",
 CellChangeTimes->{{3.773498841248405*^9, 3.7734989489054813`*^9}, {
  3.7734989926069727`*^9, 3.773499130407359*^9}, {3.7735844831633787`*^9, 
  3.7735846320095453`*^9}, {3.778184946075869*^9, 
  3.778184948893056*^9}},ExpressionUUID->"d76d8ebd-7714-455d-b365-\
06e0b04332a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datasetsIn", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Values", "[", 
      RowBox[{"Normal", "[", 
       RowBox[{"groupedbyMutant", "[", 
        RowBox[{"All", ",", "All", ",", "\"\<UniqueExptID\>\""}], "]"}], 
       "]"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"separate", " ", "fast", " ", "and", " ", 
    RowBox[{"slow", "/", "slowest"}], " ", "chips"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fastChips", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"datasetsIn", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"#", ",", "\"\<Slow\>\""}], "]"}], "\[Equal]", "False"}], "&&", 
       RowBox[{
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"#", ",", "\"\<191128\>\""}], "]"}], "\[Equal]", "False"}]}],
       "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"slowChips", "=", 
    RowBox[{"Select", "[", 
     RowBox[{"datasetsIn", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"#", ",", "\"\<Slow\>\""}], "]"}], "||", 
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"#", ",", "\"\<191128\>\""}], "]"}]}], "&"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"groupedByExperimentWT", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"groupedbyMutant", "[", "\"\<WT\>\"", "]"}], "[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<UniqueExptID\>\"", ",", "kcatKey"}], "}"}]}], "]"}], "[", 
    
    RowBox[{"GroupBy", "[", "\"\<UniqueExptID\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fast", "=", 
    RowBox[{"groupedByExperimentWT", "[", "fastChips", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"groupedByExperimentR164A", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"groupedbyMutant", "[", "\"\<R164A\>\"", "]"}], "[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<UniqueExptID\>\"", ",", "kcatKey"}], "}"}]}], "]"}], "[", 
    
    RowBox[{"GroupBy", "[", "\"\<UniqueExptID\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"slowNorm", "=", 
    RowBox[{"groupedByExperimentR164A", "[", "slowChips", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<Below is the WT median for the fast chips only:\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtMedian", "=", 
   RowBox[{"Median", "[", 
    RowBox[{"(", 
     RowBox[{"Join", "@@", 
      RowBox[{"Values", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{"fast", "[", 
         RowBox[{"All", ",", "All", ",", "kcatKey"}], "]"}], "]"}], "]"}]}], 
     ")"}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Below are the per-chip normalization factors based on the WT \
\!\(\*StyleBox[\"median\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\":\",\
FontWeight->\"Bold\"]\)\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normalizationDataFast", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"fastChips", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "\[Rule]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Median", "[", 
             RowBox[{"Normal", "[", 
              RowBox[{"fast", "[", 
               RowBox[{
                RowBox[{"fastChips", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], ",", "All", ",", "kcatKey"}],
                "]"}], "]"}], "]"}], "/", "wtMedian"}], ")"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Median", "[", 
           RowBox[{"Normal", "[", 
            RowBox[{"fast", "[", 
             RowBox[{
              RowBox[{"fastChips", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", "All", ",", "kcatKey"}], 
             "]"}], "]"}], "]"}], "/", "wtMedian"}], ",", "1.0"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "fastChips", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<Below is the R164A median for the slow chips only:\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r164aMedian", "=", 
   RowBox[{"Median", "[", 
    RowBox[{"(", 
     RowBox[{"Join", "@@", 
      RowBox[{"Values", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{"slowNorm", "[", 
         RowBox[{"All", ",", "All", ",", "kcatKey"}], "]"}], "]"}], "]"}]}], 
     ")"}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Below are the per-chip normalization factors based on the R164A \
median:\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normalizationDataSlow", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"slowChips", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "\[Rule]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Median", "[", 
             RowBox[{"Normal", "[", 
              RowBox[{"slowNorm", "[", 
               RowBox[{
                RowBox[{"slowChips", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], ",", "All", ",", "kcatKey"}],
                "]"}], "]"}], "]"}], "/", "r164aMedian"}], ")"}], "]"}], ",", 
         
         RowBox[{
          RowBox[{"Median", "[", 
           RowBox[{"Normal", "[", 
            RowBox[{"slowNorm", "[", 
             RowBox[{
              RowBox[{"slowChips", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", "All", ",", "kcatKey"}], 
             "]"}], "]"}], "]"}], "/", "r164aMedian"}], ",", "1.0"}], "]"}]}],
       ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "slowChips", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normalizationDataTemp", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"normalizationDataFast", ",", "normalizationDataSlow"}], "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedByExperiment", "=", 
    RowBox[{"culled", "[", 
     RowBox[{"GroupBy", "[", "\"\<UniqueExptID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tempGroupPreNorm", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"groupedByExperiment", "[", "n", "]"}], "[", 
       RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "groupedByExperiment", "]"}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beforeNorm", "=", 
   RowBox[{"DistributionChart", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tempGroupPreNorm", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<WT\>\"", "]"}], "[", 
              RowBox[{"All", ",", "\"\<kcat\>\""}], "]"}], "]"}]}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tempGroupPreNorm", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<R164A\>\"", "]"}], 
              "[", 
              RowBox[{"All", ",", "\"\<kcat\>\""}], "]"}], "]"}]}], "]"}], 
          ",", 
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tempGroupPreNorm", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<T79S\>\"", "]"}], 
              "[", 
              RowBox[{"All", ",", "\"\<kcat\>\""}], "]"}], "]"}]}], "]"}], 
          ",", 
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tempGroupPreNorm", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<N100A\>\"", "]"}], 
              "[", 
              RowBox[{"All", ",", "\"\<kcat\>\""}], "]"}], "]"}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "tempGroupPreNorm", "]"}]}], "}"}]}], 
       "]"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.4"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"16", ",", "Black", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
     RowBox[{"BarSpacing", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "5"}], "}"}]}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"groupedByExperimentNorm2", "[", 
            RowBox[{"n", ",", "1", ",", "\"\<ChipType\>\""}], "]"}], 
           "\[NotEqual]", "\"\<SlowChip\>\""}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"24", ",", 
            RowBox[{"n", "/", "2"}]}], "]"}], ",", 
          RowBox[{"GrayLevel", "[", 
           RowBox[{"n", "/", "18"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "tempGroupPreNorm", "]"}]}], "}"}]}], 
       "]"}]}], ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<WT\>\"", ",", "\"\<R164A\>\"", ",", "\"\<T79S\>\"", ",", 
          "\"\<N100A\>\""}], "}"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"Log", "[", 
         RowBox[{"10", ",", 
          RowBox[{"{", 
           RowBox[{"373.2", ",", "5.3", ",", "0.955", ",", "0.8125"}], 
           "}"}]}], "]"}]}], "}"}]}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Darker", "[", "Red", "]"}], ",", 
        RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "None", ",", 
        "\"\<\!\(\*SubscriptBox[\(log\), \
\(10\)]\)(\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"], \
\"cat\"]\))\>\""}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "apply", " ", "corrections", " ", "to", " ", "both", " ", "fast", " ", 
    "and", " ", "slow", " ", "datasets"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normed1", "=", 
    RowBox[{"culled", "[", 
     RowBox[{"All", ",", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"#", ",", 
         RowBox[{"\"\<kcat_Norm1\>\"", "\[Rule]", 
          RowBox[{"#kcat", "/", 
           RowBox[{"normalizationDataTemp", "[", "#UniqueExptID", "]"}]}]}]}],
         "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedByExperimentNorm1", "=", 
    RowBox[{"normed1", "[", 
     RowBox[{"GroupBy", "[", "\"\<UniqueExptID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tempGroupNorm1", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"groupedByExperimentNorm1", "[", "n", "]"}], "[", 
       RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "groupedByExperimentNorm1", "]"}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"afterNorm1", "=", 
    RowBox[{"DistributionChart", "[", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", 
             RowBox[{"Normal", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tempGroupNorm1", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<WT\>\"", "]"}], 
               "[", 
               RowBox[{"All", ",", "\"\<kcat_Norm1\>\""}], "]"}], "]"}]}], 
            "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", 
             RowBox[{"Normal", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tempGroupNorm1", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<R164A\>\"", "]"}], 
               "[", 
               RowBox[{"All", ",", "\"\<kcat_Norm1\>\""}], "]"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", 
             RowBox[{"Normal", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tempGroupNorm1", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<T79S\>\"", "]"}], 
               "[", 
               RowBox[{"All", ",", "\"\<kcat_Norm1\>\""}], "]"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", 
             RowBox[{"Normal", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tempGroupNorm1", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<N100A\>\"", "]"}], 
               "[", 
               RowBox[{"All", ",", "\"\<kcat_Norm1\>\""}], "]"}], "]"}]}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", 
           RowBox[{"Length", "[", "tempGroupNorm1", "]"}]}], "}"}]}], "]"}]}],
       ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.4"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"16", ",", "Black", ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
      RowBox[{"BarSpacing", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0.2", ",", "5"}], "}"}]}], ",", 
      RowBox[{"ChartStyle", "\[Rule]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"groupedByExperimentNorm1", "[", 
             RowBox[{"n", ",", "1", ",", "\"\<ChipType\>\""}], "]"}], 
            "\[NotEqual]", "\"\<SlowChip\>\""}], ",", 
           RowBox[{"ColorData", "[", 
            RowBox[{"24", ",", 
             RowBox[{"n", "/", "2"}]}], "]"}], ",", 
           RowBox[{"GrayLevel", "[", 
            RowBox[{"n", "/", "18"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", 
           RowBox[{"Length", "[", "groupedByExperimentNorm1", "]"}]}], 
          "}"}]}], "]"}]}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<WT\>\"", ",", "\"\<R164A\>\"", ",", "\"\<T79S\>\"", ",", 
           "\"\<N100A\>\""}], "}"}], ",", "None"}], "}"}]}], ",", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"10", ",", 
           RowBox[{"{", 
            RowBox[{"373.2", ",", "5.3", ",", "0.955", ",", "0.8125"}], 
            "}"}]}], "]"}]}], "}"}]}], ",", 
      RowBox[{"GridLinesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Darker", "[", "Red", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "now", " ", "normalize", " ", "fast", " ", "and", " ", "slow", " ", 
    "using", " ", "R164A", " ", 
    RowBox[{"(", 
     RowBox[{"all", " ", "fast", " ", 
      RowBox[{"vs", ".", " ", "all"}], " ", "slow"}], " "}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"fastMedian", "=", 
  RowBox[{"Median", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"normed1", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowChip\>\""}], "&"}], 
        "]"}], "]"}], "[", 
      RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}], "[", 
     "\"\<R164A\>\"", "]"}], "[", 
    RowBox[{"All", ",", "\"\<kcat_Norm1\>\""}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"slowMedian", "=", 
   RowBox[{"Median", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"normed1", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"#ChipType", "==", "\"\<SlowChip\>\""}], "&"}], "]"}], 
        "]"}], "[", 
       RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}], "[", 
      "\"\<R164A\>\"", "]"}], "[", 
     RowBox[{"All", ",", "\"\<kcat_Norm1\>\""}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"secondCorr", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<SlowChip\>\"", "\[Rule]", 
      RowBox[{"slowMedian", "/", 
       RowBox[{"(", 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{"fastMedian", ",", "slowMedian"}], "}"}], "]"}], ")"}]}]}], 
     ",", 
     RowBox[{"\"\<SlowestChip\>\"", "\[Rule]", 
      RowBox[{"slowMedian", "/", 
       RowBox[{"(", 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{"fastMedian", ",", "slowMedian"}], "}"}], "]"}], ")"}]}]}], 
     ",", 
     RowBox[{"\"\<ValScan\>\"", "\[Rule]", 
      RowBox[{"fastMedian", "/", 
       RowBox[{"(", 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{"fastMedian", ",", "slowMedian"}], "}"}], "]"}], ")"}]}]}], 
     ",", 
     RowBox[{"\"\<GlyScan\>\"", "\[Rule]", 
      RowBox[{"fastMedian", "/", 
       RowBox[{"(", 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{"fastMedian", ",", "slowMedian"}], "}"}], "]"}], 
        ")"}]}]}]}], "|>"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"apply", " ", "second", " ", 
    RowBox[{"(", 
     RowBox[{"R164A", " ", 
      RowBox[{"fast", "/", "slow"}]}], ")"}], " ", "normalization", " ", "to",
     " ", "both", " ", "fast", " ", "and", " ", "slow", " ", "datasets"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normed2", "=", 
    RowBox[{"normed1", "[", 
     RowBox[{"All", ",", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"#", ",", 
         RowBox[{"\"\<kcat_Norm2\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"#", "[", "\"\<kcat_Norm1\>\"", "]"}], "/", 
           RowBox[{"secondCorr", "[", "#ChipType", "]"}]}]}]}], "]"}], 
       "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedByExperimentNorm2", "=", 
    RowBox[{"normed2", "[", 
     RowBox[{"GroupBy", "[", "\"\<UniqueExptID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tempGroupNorm2", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"groupedByExperimentNorm2", "[", "n", "]"}], "[", 
       RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "groupedByExperimentNorm2", "]"}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"afterNorm2", "=", 
   RowBox[{"DistributionChart", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tempGroupNorm2", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<WT\>\"", "]"}], "[", 
              RowBox[{"All", ",", "\"\<kcat_Norm2\>\""}], "]"}], "]"}]}], 
           "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tempGroupNorm2", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<R164A\>\"", "]"}], 
              "[", 
              RowBox[{"All", ",", "\"\<kcat_Norm2\>\""}], "]"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tempGroupNorm2", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<T79S\>\"", "]"}], 
              "[", 
              RowBox[{"All", ",", "\"\<kcat_Norm2\>\""}], "]"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tempGroupNorm2", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<N100A\>\"", "]"}], 
              "[", 
              RowBox[{"All", ",", "\"\<kcat_Norm2\>\""}], "]"}], "]"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "tempGroupNorm2", "]"}]}], "}"}]}], "]"}]}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.4"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"16", ",", "Black", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
     RowBox[{"BarSpacing", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "5"}], "}"}]}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"groupedByExperimentNorm2", "[", 
            RowBox[{"n", ",", "1", ",", "\"\<ChipType\>\""}], "]"}], 
           "\[NotEqual]", "\"\<SlowChip\>\""}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"24", ",", 
            RowBox[{"n", "/", "2"}]}], "]"}], ",", 
          RowBox[{"GrayLevel", "[", 
           RowBox[{"n", "/", "18"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "groupedByExperimentNorm2", "]"}]}], "}"}]}],
        "]"}]}], ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<WT\>\"", ",", "\"\<R164A\>\"", ",", "\"\<T79S\>\"", ",", 
          "\"\<N100A\>\""}], "}"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"Log", "[", 
         RowBox[{"10", ",", 
          RowBox[{"{", 
           RowBox[{"373.2", ",", "5.3", ",", "0.955", ",", "0.8125"}], 
           "}"}]}], "]"}]}], "}"}]}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Darker", "[", "Red", "]"}], ",", 
        RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "None", ",", 
        "\"\<\!\(\*SubscriptBox[\(log\), \
\(10\)]\)(\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"], \
\"cat\"]\))\>\""}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<WT/R164A normalized\>\"", ",", "16"}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.85", ",", "0.92"}], "}"}], "]"}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "multiply", " ", "first", " ", "and", " ", "second", " ", "normalization",
      " ", "factors", " ", "to", " ", "get", " ", "final", " ", 
     "normalization", " ", "factors"}], ",", " ", 
    RowBox[{"for", " ", "analysis", " ", "below"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{"\"\<Final normalization factors:\>\"", ",", "Bold"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normalizationData", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"normalizationDataFast", "*", 
      RowBox[{"secondCorr", "[", "\"\<ValScan\>\"", "]"}]}], ",", 
     RowBox[{"normalizationDataSlow", "*", 
      RowBox[{"secondCorr", "[", "\"\<SlowChip\>\"", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "normalizing"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"normalizationData", "=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
      "\"\<190407_S3d1PafA_GlyScan_cMUP_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<181119_S2d2_PafA_GlyScan_cMUP_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180614_S3d1_PafA_GlyScan_cMUP_withEconc_190918chipCorrected.csv\>\"\
", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180614_S2d1_PafA_GlyScan_cMUP_withEconc_190918chipCorrected.csv\>\"\
", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180710_S3d1_PafA_GlyScan_cMUP_081118_chipCorrected_\
190918chipCorrected.csv\>\"", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180225_S2d2_PafA_ValScan_cMUP_180924_chipCorrected_\
190918chipCorrected.csv\>\"", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180302_S2d3_PafA_ValScan_cMUP_180924_chipCorrected_\
190918chipCorrected.csv\>\"", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180402_S4d3_PafA_ValScan_cMUP_180924_chipCorrected_\
190918chipCorrected.csv\>\"", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180522_S3d2_PafA_ValScan_cMUP_pH8_180924_chipCorrected_\
190918chipCorrected.csv\>\"", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190205_S3d1_PafA_ValScan_cMUP_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180528_S3d1_PafA_ValScan_cMUP_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180531_S2d1PafA_GlyScan_cMUP_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190305_S3d1_PafA_GlyScan_cMUP_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190605_S2d1PafA_cMUP_SlowChip_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190626_S2d1PafA_cMUP_SlowChip_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190630_S2d1PafA_cMUP_SlowChip_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190609_S2d1PafA_cMUP_SlowChip_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190424_S2d1PafA_cMUP_SlowChip_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}]}], "|>"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.743268454783498*^9, 3.7432684571299667`*^9}, {
   3.743268700066826*^9, 3.743268723963224*^9}, {3.743268938097795*^9, 
   3.7432689433455267`*^9}, {3.743269188685239*^9, 3.7432691890049753`*^9}, {
   3.743269237483995*^9, 3.743269291963139*^9}, {3.743278681789019*^9, 
   3.743278690174437*^9}, {3.743278771109601*^9, 3.743278776110757*^9}, {
   3.7432794757085323`*^9, 3.743279481711212*^9}, {3.743281576774509*^9, 
   3.7432816059244423`*^9}, {3.743294465203294*^9, 3.74329446537036*^9}, {
   3.7432951374361277`*^9, 3.74329513961506*^9}, {3.743392669036664*^9, 
   3.7433926701508408`*^9}, {3.743392996009989*^9, 3.743393003916213*^9}, 
   3.7734255392860727`*^9, {3.773425573618599*^9, 3.7734255902411757`*^9}, {
   3.773425718974822*^9, 3.773425719880838*^9}, {3.773426199716537*^9, 
   3.773426199957193*^9}, {3.7734292173867292`*^9, 3.7734292190863934`*^9}, {
   3.773444973886841*^9, 3.773444975033121*^9}, {3.7734450724238997`*^9, 
   3.773445092597755*^9}, {3.773445265814777*^9, 3.773445266095684*^9}, {
   3.773585230124848*^9, 3.773585299883607*^9}, {3.7735853419079857`*^9, 
   3.773585355059304*^9}, {3.7755880373952713`*^9, 3.775588038270719*^9}, {
   3.775588108009746*^9, 3.7755881262752028`*^9}, 3.777996554638525*^9, {
   3.7779966693850813`*^9, 3.777996690460915*^9}, {3.7779968409282503`*^9, 
   3.777996967836484*^9}, {3.777997033378694*^9, 3.777997105976418*^9}, {
   3.777997138584786*^9, 3.777997198598692*^9}, {3.7779973736392603`*^9, 
   3.777997394215942*^9}, {3.777997473461082*^9, 3.777997483135686*^9}, {
   3.7779975348972197`*^9, 3.777997550708859*^9}, {3.7779976138000717`*^9, 
   3.777997650334779*^9}, {3.7810204719295807`*^9, 3.781020521891532*^9}, {
   3.781020600135269*^9, 3.7810206551997967`*^9}, {3.781393184807803*^9, 
   3.781393190489262*^9}, {3.78434847607546*^9, 3.784348510841793*^9}, {
   3.784391519010668*^9, 3.7843915501698093`*^9}, {3.792625323050241*^9, 
   3.792625336260243*^9}, 3.799527876935822*^9, {3.799527922494893*^9, 
   3.7995279310740633`*^9}, {3.799527963451273*^9, 3.799527968012792*^9}, {
   3.810492138188676*^9, 3.810492242799479*^9}, 3.810492288071087*^9, {
   3.810497839714838*^9, 3.810497941430985*^9}, {3.8104979858237658`*^9, 
   3.810497985964864*^9}, {3.810501691882339*^9, 3.810501716828185*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"788eac06-43ae-4789-8c10-694a2e526b7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"190407_S3_d1_cMUP_1_GlyScan.csv\"\>", 
   ",", "\<\"181119_S2_d2_cMUP_1_GlyScan.csv\"\>", 
   ",", "\<\"180614_S3_d1_cMUP_1_GlyScan.csv\"\>", 
   ",", "\<\"180614_S2_d1_cMUP_1_GlyScan.csv\"\>", 
   ",", "\<\"180225_S2_d2_cMUP_1_ValScan.csv\"\>", 
   ",", "\<\"180302_S2_d3_cMUP_1_ValScan.csv\"\>", 
   ",", "\<\"180402_S4_d3_cMUP_1_ValScan.csv\"\>", 
   ",", "\<\"180522_S3_d2_cMUP_1_ValScan.csv\"\>", 
   ",", "\<\"190205_S3_d1_cMUP_1_ValScan.csv\"\>", 
   ",", "\<\"180528_S3_d1_cMUP_1_ValScan.csv\"\>", 
   ",", "\<\"180531_S2_d1_cMUP_1_GlyScan.csv\"\>", 
   ",", "\<\"190506_S2_d1_cMUP_1_SlowChip.csv\"\>", 
   ",", "\<\"190626_S2_d1_cMUP_1_SlowChip.csv\"\>", 
   ",", "\<\"190630_S2_d1_cMUP_1_SlowChip.csv\"\>", 
   ",", "\<\"190609_S2_d1_cMUP_1_SlowChip.csv\"\>", 
   ",", "\<\"191128_S2_d3_cMUP_1_SlowestChip.csv\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7995277403996572`*^9, 3.799527877388109*^9, 3.7995279320705233`*^9, 
   3.799527968438005*^9, 3.802298496547171*^9, 3.802385500436633*^9, 
   3.8071300197623663`*^9, 3.808938082734283*^9, 3.8104920242605257`*^9, 
   3.810492250210318*^9, 3.810492289420445*^9, 3.810497948543743*^9, 
   3.810497986315504*^9, 3.8105016275981007`*^9, {3.810501699794278*^9, 
   3.8105017172593603`*^9}, 3.812391821105044*^9, 3.812392042734549*^9, {
   3.812556099772128*^9, 3.812556103421811*^9}, {3.812662906813723*^9, 
   3.812662911359215*^9}},
 CellLabel->
  "Out[126]=",ExpressionUUID->"5bae5ec8-1555-440d-bf9c-21d9d63a072d"],

Cell[BoxData["\<\"Below is the WT median for the fast chips only:\"\>"], \
"Print",
 CellChangeTimes->{
  3.7995277403779373`*^9, 3.7995278774422703`*^9, 3.7995279320744*^9, 
   3.7995279684486628`*^9, 3.8022984965499287`*^9, 3.802385500439384*^9, 
   3.8071300197663097`*^9, 3.8089380827448797`*^9, 3.810492024264721*^9, 
   3.810492250220751*^9, 3.810492289428989*^9, 3.810497948548627*^9, 
   3.8104979863175163`*^9, 3.810501627600573*^9, {3.8105016997965937`*^9, 
   3.810501717261001*^9}, 3.812391821111154*^9, 3.812392042740594*^9, {
   3.812556099774572*^9, 3.8125561034244947`*^9}, {3.812662906835388*^9, 
   3.812662911360715*^9}},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"1996c29c-0531-4595-b4f9-fba2891ace66"],

Cell[BoxData["138.34304143456274`"], "Output",
 CellChangeTimes->{
  3.7995277403996572`*^9, 3.799527877388109*^9, 3.7995279320705233`*^9, 
   3.799527968438005*^9, 3.802298496547171*^9, 3.802385500436633*^9, 
   3.8071300197623663`*^9, 3.808938082734283*^9, 3.8104920242605257`*^9, 
   3.810492250210318*^9, 3.810492289420445*^9, 3.810497948543743*^9, 
   3.810497986315504*^9, 3.8105016275981007`*^9, {3.810501699794278*^9, 
   3.8105017172593603`*^9}, 3.812391821105044*^9, 3.812392042734549*^9, {
   3.812556099772128*^9, 3.812556103421811*^9}, {3.812662906813723*^9, 
   3.812662911361761*^9}},
 CellLabel->
  "Out[134]=",ExpressionUUID->"8251c1af-6e2c-4fd7-b193-e5900d962d06"],

Cell[BoxData["\<\"Below are the per-chip normalization factors based on the \
WT \\!\\(\\*StyleBox[\\\"median\\\",FontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\
StyleBox[\\\":\\\",FontWeight->\\\"Bold\\\"]\\)\"\>"], "Print",
 CellChangeTimes->{
  3.7995277403779373`*^9, 3.7995278774422703`*^9, 3.7995279320744*^9, 
   3.7995279684486628`*^9, 3.8022984965499287`*^9, 3.802385500439384*^9, 
   3.8071300197663097`*^9, 3.8089380827448797`*^9, 3.810492024264721*^9, 
   3.810492250220751*^9, 3.810492289428989*^9, 3.810497948548627*^9, 
   3.8104979863175163`*^9, 3.810501627600573*^9, {3.8105016997965937`*^9, 
   3.810501717261001*^9}, 3.812391821111154*^9, 3.812392042740594*^9, {
   3.812556099774572*^9, 3.8125561034244947`*^9}, {3.812662906835388*^9, 
   3.812662911362426*^9}},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"fe3707ce-2915-496b-8d5c-7026d313cca5"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"190407_S3_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    "0.8093316860555281`"}], ",", 
   RowBox[{"\<\"181119_S2_d2_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    "1.4488846985044623`"}], ",", 
   RowBox[{"\<\"180614_S3_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    "0.6466170011079114`"}], ",", 
   RowBox[{"\<\"180614_S2_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    "1.561882682120273`"}], ",", 
   RowBox[{"\<\"180225_S2_d2_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    "0.6810466812186314`"}], ",", 
   RowBox[{"\<\"180302_S2_d3_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    "0.7627468189244279`"}], ",", 
   RowBox[{"\<\"180402_S4_d3_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    "1.240387870359507`"}], ",", 
   RowBox[{"\<\"180522_S3_d2_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    "1.166187104008243`"}], ",", 
   RowBox[{"\<\"190205_S3_d1_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    "1.28351722949621`"}], ",", 
   RowBox[{"\<\"180528_S3_d1_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    "1.785117586606054`"}], ",", 
   RowBox[{"\<\"180531_S2_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    "0.5319767608801923`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7995277403996572`*^9, 3.799527877388109*^9, 3.7995279320705233`*^9, 
   3.799527968438005*^9, 3.802298496547171*^9, 3.802385500436633*^9, 
   3.8071300197623663`*^9, 3.808938082734283*^9, 3.8104920242605257`*^9, 
   3.810492250210318*^9, 3.810492289420445*^9, 3.810497948543743*^9, 
   3.810497986315504*^9, 3.8105016275981007`*^9, {3.810501699794278*^9, 
   3.8105017172593603`*^9}, 3.812391821105044*^9, 3.812392042734549*^9, {
   3.812556099772128*^9, 3.812556103421811*^9}, {3.812662906813723*^9, 
   3.812662911370275*^9}},
 CellLabel->
  "Out[136]=",ExpressionUUID->"ae7848ca-4614-49a1-824d-54219c4e96b3"],

Cell[BoxData["\<\"Below is the R164A median for the slow chips only:\"\>"], \
"Print",
 CellChangeTimes->{
  3.7995277403779373`*^9, 3.7995278774422703`*^9, 3.7995279320744*^9, 
   3.7995279684486628`*^9, 3.8022984965499287`*^9, 3.802385500439384*^9, 
   3.8071300197663097`*^9, 3.8089380827448797`*^9, 3.810492024264721*^9, 
   3.810492250220751*^9, 3.810492289428989*^9, 3.810497948548627*^9, 
   3.8104979863175163`*^9, 3.810501627600573*^9, {3.8105016997965937`*^9, 
   3.810501717261001*^9}, 3.812391821111154*^9, 3.812392042740594*^9, {
   3.812556099774572*^9, 3.8125561034244947`*^9}, {3.812662906835388*^9, 
   3.812662911371497*^9}},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"9cc55f25-d65f-4356-891f-3464fa724646"],

Cell[BoxData["4.810864087389426`"], "Output",
 CellChangeTimes->{
  3.7995277403996572`*^9, 3.799527877388109*^9, 3.7995279320705233`*^9, 
   3.799527968438005*^9, 3.802298496547171*^9, 3.802385500436633*^9, 
   3.8071300197623663`*^9, 3.808938082734283*^9, 3.8104920242605257`*^9, 
   3.810492250210318*^9, 3.810492289420445*^9, 3.810497948543743*^9, 
   3.810497986315504*^9, 3.8105016275981007`*^9, {3.810501699794278*^9, 
   3.8105017172593603`*^9}, 3.812391821105044*^9, 3.812392042734549*^9, {
   3.812556099772128*^9, 3.812556103421811*^9}, {3.812662906813723*^9, 
   3.812662911372533*^9}},
 CellLabel->
  "Out[138]=",ExpressionUUID->"f07e2835-670d-4958-9ee7-da4e8173de67"],

Cell[BoxData["\<\"Below are the per-chip normalization factors based on the \
R164A median:\"\>"], "Print",
 CellChangeTimes->{
  3.7995277403779373`*^9, 3.7995278774422703`*^9, 3.7995279320744*^9, 
   3.7995279684486628`*^9, 3.8022984965499287`*^9, 3.802385500439384*^9, 
   3.8071300197663097`*^9, 3.8089380827448797`*^9, 3.810492024264721*^9, 
   3.810492250220751*^9, 3.810492289428989*^9, 3.810497948548627*^9, 
   3.8104979863175163`*^9, 3.810501627600573*^9, {3.8105016997965937`*^9, 
   3.810501717261001*^9}, 3.812391821111154*^9, 3.812392042740594*^9, {
   3.812556099774572*^9, 3.8125561034244947`*^9}, {3.812662906835388*^9, 
   3.812662911373213*^9}},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"6654d7da-b094-427e-a529-8bf461b7007d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"190506_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", 
    "0.6015378716506108`"}], ",", 
   RowBox[{"\<\"190626_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", 
    "0.5787893222110513`"}], ",", 
   RowBox[{"\<\"190630_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", 
    "0.8965376650578435`"}], ",", 
   RowBox[{"\<\"190609_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", 
    "1.9028940295450947`"}], ",", 
   RowBox[{"\<\"191128_S2_d3_cMUP_1_SlowestChip.csv\"\>", "\[Rule]", 
    "1.606444722605456`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7995277403996572`*^9, 3.799527877388109*^9, 3.7995279320705233`*^9, 
   3.799527968438005*^9, 3.802298496547171*^9, 3.802385500436633*^9, 
   3.8071300197623663`*^9, 3.808938082734283*^9, 3.8104920242605257`*^9, 
   3.810492250210318*^9, 3.810492289420445*^9, 3.810497948543743*^9, 
   3.810497986315504*^9, 3.8105016275981007`*^9, {3.810501699794278*^9, 
   3.8105017172593603`*^9}, 3.812391821105044*^9, 3.812392042734549*^9, {
   3.812556099772128*^9, 3.812556103421811*^9}, {3.812662906813723*^9, 
   3.812662911396998*^9}},
 CellLabel->
  "Out[140]=",ExpressionUUID->"08c9f149-646c-46f8-86de-8beb139c6380"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.7166666666666667, -0.876028140252689}, {80.21666666666667, 
     2.7637088710987348`}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[
    0.7]], {}, {{{}, {{}, {
        {RGBColor[0.8941176470588236, 0.7098039215686275, 0.7490196078431373],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlYTmv09/felThkChmOFBGOIR1DhHvLPB0yD5mTTGVImZMQmZIhyZBk
TMY0IGtllqloIGPJUKZG1DO9z3v91vr98b7nD+d6rnp69rP3fa97rc/3YzvT
e9RsRZKkR8Z//u//+b/Fwcfmx0dXwtZMv0dTLfeLcWH+Pt6xlfB7vvuy2ppw
4Rw9eU3r+Ep4O7Dg62LloLC52G1T7o1KOO/XO6Gi7WFR5YblzgP3KqF1nFdR
HedI8TX1Z9jotErobEgZkLTkqEjLfhhZ42UlFP7l7jslOUpcyT95+k5uJfha
JtfyaxItIooDL60trIToqH0Lfmw/Ltbpp13rVloJt5dvbL6l/kkxu3rP20Wa
StifOTenxuVTYkjDho9Pm2rgT4z+ce85Z4RDy7LMmRYayHfWunxwPCvqO6a9
bdJAA2kvrpkmNzgnKnuf/ZxhrYEvEOt1t9oF8W7o5qLt9hpICUgIqlr/org9
wb1igIMG5hec9Vzf/pI4M1tVpO4aGDi4SvPw0ZfFziV/V0/qo4ENUxYEHQ2K
Ez7+fyyXDNHA1bG/xn98cEVM3Jbx9z+jNWC9/ljWrcYJonf4hZb5kzWQtGH5
mp0rE4XdiW0dDrlr4KfpmS9hBUmi2mXPbuMWauBTwqGLTp7XxA/op9by1YDV
5oiPx39dFxmPbAbfX6uBbicz07rtvSGSXmpdA4I0sD742tKazVEc/vRiUo8Q
DSxsZV7nsZwiAkvjZpXu18AdW68zvwtShKe0a8HZoxoI3j5l6Zmcm+I/i4XL
Zp8xvj/9cZ7h+S3xb+PBa60va2B/yK6rtbNui4b2LYOyr2lAPz2nbtn7O0L3
rxwSclsDS0aUzYWyuyJPfbN/8GMN+Ca1S9xU5764PzzpqJKlgefyoyC3bg9E
7KS9Z6691cCbRtraozxSReicxZd9PhufR9mciX6HH4rlPsOvty/SgN9r1/Gv
3j0SUwLa3Pn0RwOLvdOstrV9Ilx2mD05Imthnf75531rnwr7iNysCX9pYb7V
bWHqlSZqnEp+V8dSC02dHoX52qaLkrjwL6lNtJAW8iXo1Mt0kZ2yrDjQTgt9
L/S3itz3TFx/4lrZs70Wcl1bTJ814bk4+qq9ya8uWpDS3E/+sc4Qm75Uq3G+
txYMWduXehRmiAXlH+t5DtRCxKG0qMtXM4WrcrOp7UgtNPNM8/+8M0t0rXW4
Vc4ELczYmZRRbV62+PvvlR13z9DCysQR2uaDXwipzTinYfO0MGLB7iLn9i/F
py6OfcyWauHO26PjpjbIEQ9dag65sUoLLVf6BO0xfSUujCgc5bdBC43j2uwt
+P1K7HO7O9lhuxa6pm8cNrfotVg1N8q9YK8WPm+Z7mjz442Y7rt2YdRhLXSq
uLa6SfFb0T9wku/kk1pomz3YfG7FO9E2pKt/vQtaGJ+57+jWwPei9qG6mx8n
asHjVGFIY4tcUX76R8imFOP1furtPjc8V+TEp4aLVC0ctiuZH9A6T8CtE1F/
nmkh/eS8VI+reSI6bX3MxVdaaBGdNaDFiA8i+M3UuHn5Whj6/FFX+PRBeBf2
SG7xXQuzdIu79w3IF2N+N7j7ulwLbQb797ls/VH0MC19slevBdeJ0V+t4KNo
Vudp9n/mOhi7e2Og38xPwtQ65r15bR2URh07kV31syhoG1SADY0/fzTcttel
z+JJt1klK2x1cNd3WGrM1C8irp/QOLbVQYZ98JRWNQtEuGsT02+OOvDIqDLu
HBaItVN/1zjurIMp1Xo96etbKGbNf15/aj8dvI/3eP25w1cxaPl5a6vhOnCb
8SQ0tPCr6LBxq33aWOPn5zu37HP6m7AMneOwZaoOXA7PaPFj3nfx53Df7i5z
dDBvnObAjo4/xNuYZi4abx1khu7a2uD3D3ErUTMkbrkO/svY1XBFyk9x6k72
6IUBOrBYfMEwamCR2P7sslurYB3o+uQ59j9fJJa82zn7XagOJp46PGNzw2Ix
4dt8r/0ROpD+/PSoHVgselUM9HON1kHOtNVXnv4oFs2r2K37K1YHgwxvXRMm
lwhzS2nLrSs6iF7R6mn8gxLxrdnrXatv6OCD2e7h151KxbN2iQe63NNB3Smn
V8WdKhUJ3fcc+/FUBwd1Z8KDG5WJgwMWnT35Qgd9zPz9W28tE+tHD7syPdd4
f/zqHPfVlYk501vfaFSog7mObdq7LSoXwxaa3ntWooMTVudLbnwoF51Wvn+6
VaODngMn7w8c/0s0CLr+op+pHl7uu/1lx8NfQrt7f66uhh7K49YUofgtciN9
CuPr62FTbasu2su/xd3YkaXe1nrod2PwQNvWf0TM1Xba1vZ66OLz/mutg39E
yL2qZnkd9VDnS3GPk7UqhG9GvkWEkx4StBOT76yvEJNzscGYPnqwO93XYUh5
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
a2on+4y/JrYNalBrfT0TLJhRa9UprySh/2/D7rcNTbDr0TVTO0cliMVjS6yc
m5rg7CIf7feiKyJ/8vSDYbYmeDPXsD12YpwYN/OJTVlLE/Qb7wP/vbokHnj2
PD6yrQn+Y1vD+6LPRdHT+0yb2A4meMvi9qSrdhfEuWUNz1X71wQdmw5adTIj
Vtiu3uTo0c0EH5aNT3q1OUbsWV8Wf9PZBI9d8TI3zDotqmyZ6dxMNcHhX9d+
rOF+UqzYmQar+plgtfRCv1pBx8XXvb37vRhkglX6r2ll8/CYmHrw7P3Ow00w
P3FCM88OUSItqvHwXa4m+O56S7A5Hyn6nt6c/n2sCW6vSAb7sMMi/vyvsUMm
mWDgGNdmTqYHRet495wTU03QrtvkmYOjwkXE9WdTTWaZIPPkmrfUD9Pm/P+v
6feBf5/+HvDfo88D/jy6HuDroesFvl76PsDfh74v8Pel+wF8P+h+Ad8vup/A
95PuN/D9pucB/DzoeQE/L3qewM+Tnjfw86b1ALweaL0ArxdaT8DridYb8Hqj
9Qi8Hmm9Aq9XWs/A65nWO/B6p/0AvB9ovwDvF9pPwPuJ9hvwfqP9CLwfab8C
71faz8D7mfY78H6negBcD6heANcLqifA9YTqDXC9oXoEXI+oXgHXK6pnwPWM
6h1wvaN6CFwPqV4C10uqp8D1lOotcL2legxcj6leA9drqufA9ZzqPXC9p/MA
+Dyg8wL4vKDzBPg8ofMG+Lyh8wj4PKLzCvi8ovMM+Dyj8w74vKPzEPg8pPMS
/ve8/J/zFPg8pfMW+Lyl8xj4PKbzGvi8pvMc+Dyn8x74vKd+ALgfoH4BuF+g
fgK4n6B+A7jfoH4EuB+hfgW4X6F+BrifoX4HuN+hfgi4H6J+Cbhfon4KuJ+i
fgu436J+DLgfo34NuF+jfg64n6N+D7jfo34QuB+kfhG4X6R+ErifpH4TuN+k
fhS4H6V+FbhfpX4WuJ+lfhe436V+GLgfpn4ZuF+mfhq4n6Z+G7jfpn4cuB+n
fh25X6d+Hrmfp34fud+neQB5HqB5AXleoHkCeZ6geQN53qB5BHkeoXkFeV6h
eQZ5nqF5B3neoXkIeR6ieQl5XqJ5CnmeonkLed6ieQx5HqN5DXleo3kOeZ6j
eQ953qN5EHkepHkReV6keRJ5nqR5E3nepHkUeR6leRV5XqV5FnmepXkXed6l
eRh5HqZ5GXlepnkaeZ6meRt53qZ5HHkep3kdeV6neR55nqd5H3neJx6AzAOI
FyDzAuIJyDyBeAMybyAegcwjiFcg8wriGcg8g3gHMu8gHoLMQ4iXIPMS4inI
PIV4CzJvIR6DzGOI1yDzGuI5yDyHeA8y7yEehMyDiBch8yLiScg8iXgTMm8i
HoXMo4hXIfMq4lnIPIt4FzLvIh6GzMOIlyHzMuJpyDyNeBsybyMeh8zjiNch
8zriecg8j3gfMu8jHojMA4kXIvNC4onIPJF4IzJvJB6JzCOJVyLzSuKZyDyT
eCcy7yQeisxDiZci81Liqcg8lXgrMm8lHovMY4nXIvNa4rnIPJd4LzLvJR6M
zIOJFyPzYuLJyDyZeDMybyYejcyjiVcj82ri2cg8m3g3Mu8mHo7Mw4mXI/Ny
4unIPJ14OzJvJx6PzOOJ1yPzeuL5yDyfeD8y76c8ADkPoLwAOS+gPAE5T6C8
ATlvoDwCOY+gvAI5r6A8AznPoLwDOe+gPAQ5D6G8BDkvoTwFOU+hvAU5b6E8
BjmPobwGOa+hPAc5z6G8BznvoTwIOQ+ivAg5L6I8CTlPorwJOW+iPAo5j6K8
CjmvojwLOc+ivAs576I8DDkPo7wMOS+jPA05T6O8DTlvozwOOY+jvA45r6M8
DznPo7wPOe+jPBA5D6S8EDkvpDwROU+kvBE5b6Q8EjmPpLwSOa+kPBM5z6S8
EznvpDwUOQ+lvBQ5L6U8FTlPpbwVOW+lPBY4j6W8FjivpTwXOM+lvBc476U8
GDgPprwYOC+mPBk4T6a8GThvpjwaOI+mvBo4r6Y8GzjPprwbOO+mPBw4D6e8
HDgvpzwdOE+nvB04b6c8HjiPp7weOK+nPB84z6e8HzjvJx8A2AcgXwDYFyCf
ANgnIN8A2DcgHwHYRyBfAdhXIJ8B2Gcg3wHYdyAfAtiHIF8C2JcgnwLYpyDf
Ati3IB8D2McgXwPY1yCfA9jnIN8D2PcgHwTYByFfBNgXIZ8E2Cch3wTYNyEf
BdhHIV8F2FchnwXYZyHfBdh3IR8G2IchXwbYlyGfBtinId8G2LchHwfYxyFf
B/7X1/kfnwfY5yHfB9j3IR8I2AciXwjYFyKfCNgnIt8I2DciHwnYRyJfCdhX
Ip8J2Gci3wnYdyIfCtiHIl8K2JcinwrYpyLfCti3Ih8L2MciXwvY1yKfC9jn
It8L2PciHwzYByNfDNgXI58M2Ccj3wzYNyMfDdhHI18N2Fcjnw3YZyPfDdh3
Ix8O2IcjXw7YlyOfDtinI98O2LcjHw/YxyNfD9jXI58P2Ocj3w/Y9yMfENgH
JF8Q2BcknxDYJyTfENg3JB8R2EckXxHYVySfEdhnJN8R2HckHxLYhyRfEtiX
JJ8S2Kck3xLYtyQfE9jHJF8T2NcknxPY5yTfE9j3JB8U2AclXxTYFyWfFNgn
Jd8U2DclHxXYRyVfFdhXJZ8V2Gcl3xXYdyUfFtiHJV8W2JclnxbYpyXfFti3
JR8X2MclXxfY1yWfF9jnJd8X2PclHxjYByZfGNgXJp8Y2Ccm3xjYNyYfGdhH
/n995f8DoSDESA==
                "]], {{{0.17905509939328992`, 0.}, {
                0., -0.9999999999999999}}, {1., 2.220446049250313*^-16}}]},
             
             ImageSizeCache->{{88.3582300881042, 
              106.29838029080852`}, {-109.67455577432563`, \
-51.11410502727032}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.2486367798671205`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.1686561017280317`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.0470236462918683`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.9488311018764866`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.820756234850973`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.2486367798671205`}, {
               Style["75%", Bold], 2.1686561017280317`}, {
               Style["median", Bold], 2.0470236462918683`}, {
               Style["25%", Bold], 1.9488311018764866`}, {
               Style["min", Bold], 1.820756234850973}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
w+0Z6a45PpZ8UHi4g+8x9fts/Co+rbMlH8fbzt92Qoa2X5qedK+w4HO+3z5x
+pQMA0rYtoB4Cx5weHTuvTMyrCpyjZyxzIKHjSo0z4uV4d2ZWcfbOVjw43Vr
XOrOyRCWurxPfqk5v3bWNMTqogxp9S12J5wx508mxojucTIcDRk/P3GqOX+r
w6pcr6j3s8PbX2aW5vz79YyuC+LV62effe1tshlXZs+dsyVBPa9cdi11CDTj
FpaqYydvqOfNv1qnetqb8fYPI7Lv3pKhh732V+2Pprzfsg6m7xJlqDHzHfUw
3JT/2+ruiBohQ6DZqz47uCmflj5ug0WSDDuzPvUNLDXhy9eX3O52XwarVvc2
Jxw04Vvs1/9yeajeP7mtfrg7m/BDeZad5z1Wv9/tpo+W/mzIL+48Pyvkqfp8
xJx76nC0IU9yGnTk+DMZLummW1wY0ZBnfnudJZ6r929aieHfSmNeeGih8dtU
9f3Q686oAceMed0IjWFVaer3P2RxxI5RxtyoNjLILFM9vxMvB/39YcRbxHa5
2TVLhsxXf+dNGGbEe0x4UD7yjQwLeupfHR9tyJ21PTvMyZGh5HGyfvsaAz4p
oWz6xlwZNqzv8bdijAH3nbXpUPR79dc3FmfnXdDn682bZCZ+kOHjldJTZnr6
POJ+nEH2Jxk2lk9tcnm2Hj+zZOiQynwZlmy7dODNI11+q0XuWpNC9XmJT20d
006XP3/pl9C5SIbPU1bN6LdNh39cp102vESGvd53os991+a/uhxu51Mqw6nt
Xi+Nx2lz7fcO3sFl6v2wPW/vmjsNeOMdTyKPlMuwe0OnfzXbN+Cd+3ul3fop
Q4dmD5pcj9DiA0t+6r6ulEFbd0DlcQ0tPvbg1kE/q2QYbdwoIWOZJp893DbA
uFY9/8+s6+b+VYOvro6/2vGPDFsPNHO289LgO86M+Ob8V4aTw+7unpSl8GiP
D61nSgoM95SMv7sp/KrWiilBigKv/lQMLHgu88fx+vuiNBVoNqVrzgAXmefM
OPbiRgMFurttnCmlSrzUtJf2Kx0FYrmneUt3iUv3Uni5ngKjTgR9OJ6t4mZ+
0/0NDRXwbzIqOnC6irdtXh1nZ6xAsUf0mGm5f1mf1B1FQ0wU2FxXkzmjqp65
BLZqOd1MgRP6JVbVlvXMu/NNz0ALBTwbPTQ17veHLc39d89BKwU+VztGRc6o
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
UN6EeRRQHoV5FVBehXkWUJ6FeRdQ3oV5GFAehnkZUF6GeRpQnoZ5G1Dehnkc
UB6HeR1QXod5HlCeh3kfUN6HeSBQHoh5IVBeiHkiUJ6IeSNQ3oh5JFAeiXkl
UF6JeSZQnol5J1DeiXkoUB6KeSlQXop5KlCeinkrUN6KeSxQHot5LVBei3ku
UJ6LeS9Q3ot5MFAejHkxUF6MeTJQnox5M/w3b/5PHg2UR2NeDZRXY54NlGdj
3g2Ud2MeDpSHY14OlJdjng6Up2PeDpS3Yx4PlMdjXg+U12OeD5TnY94P/837
/9MHAPUB2BcA9QXYJwD1Cdg3APUN2EcA9RHYVwD1FdhnAPUZ2HcA9R3YhwD1
IdiXAPUl2KcA9SnYtwD1LdjHAPUx2NcA9TXY5wD1Odj3APU92AcB9UHYFwH1
RdgnAfVJ2DcB9U3YRwH1UdhXAfVV2GcB9VnYdwH1XdiHAfVh2JcB9WXYpwH1
adi3AfVt2McB9XHY1wH1ddjnAfV52PcB9X3YBwL1gdgXAvWF2CcC9YnYNwL1
jdhHAvWR2FcC9ZXYZwL1mdh3AvWd2IcC9aHYlwL1pdinAvWp2LcC9a3YxwL1
sdjXAvW12OcC9bnY9wL1vdgHA/XB2BcD9cXYJwP1ydg3A/XN2EcD9dHYVwP1
1dhnA/XZ2HcD9d3YhwP14diXA/Xl2KcD9enYtwP17djHA/Xx2NcD9fXY5wP1
+dj3A/X9yAMA8QDICwDxAsgTAPEEyBsA8QbIIwDxCMgrAPEKyDMA8QzIOwDx
DshDAPEQyEsA8RLIUwDxFMhbAPEWyGMA8RjIawDxGshzAPEcyHsA8R7IgwDx
IMiLAPEiyJMA8STImwDxJsijAPEoyKsA8SrIswDxLMi7COJdkIcRxMMgLyOI
l0GeRhBPg7yNIN4GeRxBPA7yOoJ4HeR5BPE8yPsI4n2QBxLEAyEvJIgXQp5I
EE+EvJEg3gh5JEE8EvJKgngl5JkE8UzIOwninZCHEsRDIS8liJdCnkoQT4W8
lSDeCnksQTwW8lqCeC3kuQTxXMh7CeK9kAcTxIMhLyaIF0OeTBBPhryZIN4M
eTRBPBryaoJ4NeTZBPFsyLsJ4t2QhxPEwyEvJ4iXQ55OEE+HvJ0g3g55PEE8
HvJ6gng95PkE8XzI+wni/ZAHFMQDIi8oiBdEnlAQT4i8oSDeEHlEQTwi8oqC
eEXkGQXxjMg7CuIdkYcUxEMiLymIl0SeUhBPibylIN4SeUxBPCbymoJ4TeQ5
BfGcyHsK4j2RBxXEgyIvKogXRZ5UEE+KvKkg3hR5VEE8KvKqgnhV5FkF8azI
uwriXZGHFcTDIi8riJdFnlYQT4u8rSDeFnlcQTwu8rqCeN3/y/P+D31O8fg=

                "]], {{{0.06551048891817814, 0.}, {
                0., -0.9999999999999999}}, {2., 4.440892098500626*^-16}}]},
             
             ImageSizeCache->{{88.05977505478715, 
              122.15408408854074`}, {-119.83748733048662`, \
-69.8819425084258}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.3881591982317887`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.320497428442254`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.301593394193044`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "2.232515807274582`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "2.1746418704906403`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.3881591982317887`}, {
               Style["75%", Bold], 2.320497428442254}, {
               Style["median", Bold], 2.301593394193044}, {
               Style["25%", Bold], 2.232515807274582}, {
               Style["min", Bold], 2.1746418704906403`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
GSOtphdLhOYWynGz4y9B5ftZW0eVS4Spl006ugZcgJnvl2f1rZYIraN3LZ+8
5BzEpAcMMP8tEYJa6weNW3EW2qQf262nkghOlStT/gk+Db7vbuTVN0qE16Os
dw3JOgXZbxOHFDVvJjywC/j4YdhJGP428/D7ls0Ezm/PpJWXJLX9/1/TzyP/
PP0+5N9Hfw/579HnQf489HmRPy9dD/L10PUiXy/dD+T7QfcL+X7R/US+n3S/
ke83PQ/k50HPC/l50fNEfp70vJGfN50H5PNA5wX5vNB5Qj5PdN6QzxudR+Tz
SOcV+bzSeUY+z3Tekc87vQ/I7wO9L8jvC71PyO8TvW/I7xu9j8jvI72vyO8r
vc/I7zO978jvO80D5HlA8wJ5XtA8QZ4nNG+Q5w3NI+R5RPMKeV7RPEOeZzTv
kOcdzUPkeUjzEnle0jxFnqc0b5HnLc1j5HlM8xp5XtM8R57nNO+R5z3tA+R9
QPsCeV/QPkHeJ7RvkPcN7SPkfUT7Cnlf0T5D3me075D3He1D5H1I+xJ5X9I+
Rd6ntG+R9y3tY+R9TPsaeV/TPkfe57Tvkfc96QFkPUB6AVkvkJ5A1hOkN5D1
BukRZD1CegVZr5CeQdYzpHeQ9Q7pIWQ9RHoJWS+RnkLWU6S3kPUW6TFkPUZ6
DVmvkZ5D1nOk95D1HulBZD1IehFZL5KeRNaTpDeR9SbpUWQ9SnoVWa+SnkXW
s6R3kfUu6WFkPUx6GVkvk55G1tOkt5H1NulxZD1Oeh1Zr5OeR9bzpPeR9T75
AWQ/QH4B2S+Qn0D2E+Q3kP0G+RFkP0J+BdmvkJ9B9jPkd5D9DvkhZD9EfgnZ
L5GfQvZT5LeQ/Rb5MWQ/Rn4N2a+Rn0P2c+T3kP0e+UFkP0h+Edkvkp9E9pPk
N5H9JvlRZD9KfhXZr5KfRfaz5HeR/S75YWQ/TH4Z2S+Tn0b20+S3kf02+XFk
P05+Hdmvk59H9vPk95H9PuUByHkA5QXIeQHlCch5AuUNyHkD5RHIeQTlFch5
BeUZyHkG5R3IeQflIch5COUlyHkJ5SnIeQrlLch5C+UxyHkM5TXIeQ3lOch5
DuU9yHkP5UHIeRDlRch5EeVJyHkS5U3IeRPlUch5FOVVyHkV5VnIeRblXch5
F+VhyHkY5WXIeRnlach5GuVtyHkb5XHIeRzldch5HeV5yHke5X3IeR/lgch5
IOWFyHkh5YnIeSLljch5I+WRyHkk5ZXIeSXlmfjfPPM/eSdy3kl5KHIeSnkp
cl5KeSpynkp5K3LeSnksch5LeS1yXkt5LnKeS3kvct5LeTByHkx5MXJeTHky
cp5MeTNy3kx5NHIeTXk1cl5NeTZynk15N3LeTXk4ch5OeTlyXk55OnKeTnk7
ct5OeTxyHk95PXJeT3k+cp5PeT9y3k99AHIfQH0Bcl9AfQJyn0B9A3LfQH0E
ch9BfQVyX0F9BnKfQX0Hct9BfQhyH0J9CXJfQn0Kcp9CfQty30J9DHIfQ30N
cl9DfQ5yn0N9D3LfQ30Qch9EfRFyX0R9EnKfRH0Tct9EfRRyH0V9FXJfRX0W
cp9FfRdy30V9GHIfRn0Zcl9GfRpyn0Z9G3LfRn0cch9HfR1yX0d9HnKfR30f
ct9HfSByH0h9IXJfSH0icp9IfSNy30h9JHIfSX0lcl9JfSZyn0l9J3LfSX0o
ch9KfSlyX0p9KnKfSn0rct9KfSxyH0t9LXJfS30ucp9LfS9y30t9MHIfTH0x
cl9MfTJyn0x9M3LfTH00ch9NfTVyX019NnKfTX03ct9NfThyH059OXJfTn06
cp9OfTty3059PHIfT309cl9PfT5yn099P3LfTzwAMg9AvAAyL0A8ATJPQLwB
Mm9APAIyj0C8AjKvQDwDMs9AvAMy70A8BP6Xh/gPL4HMSxBPgcxTEG+BzFsQ
j4HMYxCvgcxrEM+BzHMQ74HMexAPgsyDEC+CzIsQT4LMkxBvgsybEI+CzKMQ
r4LMqxDPgsyzEO+CzLsQD4PMwxAvg8zLEE+DzNMQb4PM2xCPg8zjEK+DzOsQ
z4PM8xDvg8z7EA+EzAMRL4TMCxFPhMwTEW+EzBsRj4TMIxGvhMwrEc+EzDMR
74TMOxEPhcxDES+FzEsRT4XMUxFvhcxbEY+FzGMRr4XMaxHPhcxzEe+FzHsR
D4bMgxEvhsyLEU+GzJMRb4bMmxGPhsyjEa+GzKsRz4bMsxHvhsy7EQ+HzMMR
L4fMyxFPh8zTEW+HzNsRj4fM4xGvh8zrEc+HzPMR74fM+xEPiMwDEi+IzAsS
T4jMExJviMwbEo+IzCMSr4jMKxLPiMwzEu+IzDsSD4nMQxIvicxLEk+JzFMS
b4nMWxKPicxjEq+JzGsSz4nMcxLvicx7Eg+KzIMSL4rMixJPisyTEm+KzJsS
j4rMoxKvisyrEs+KzLMS74r/5V3/w8Mi87DEyyLzssTTIvO0xNsi87b/l8f9
H2V5sJ0=
                "]], {{{0.21861521800458533`, 0.}, {0., -1.}}, {
                2.9999999999999996`, 0.}}]},
             
             ImageSizeCache->{{103.72325781714846`, 
              122.04785009059455`}, {-107.2762368749594, -32.99430307128034}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.0811308816785994`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.064921292961255`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "1.9516044383615887`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.6964353193209476`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.6812790586958395`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.0811308816785994`}, {
               Style["75%", Bold], 2.064921292961255}, {
               Style["median", Bold], 1.9516044383615887`}, {
               Style["25%", Bold], 1.6964353193209476`}, {
               Style["min", Bold], 1.6812790586958395`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[1., 0.7215686274509804, 0.2196078431372549], EdgeForm[
         Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
MdisJq7uNKxeNMILauUHLy3coSZyPrsnDLnvAWUXQhtcnJvf38FinNOk85Bv
mLEy+KiaOD3BzLW60B3+YDuR5K4mjkh2P3hndRZS5o/rI/dVEwe650UPb3sa
vmRtcht8XU0wf32/z/f30uD//zX9PPLP0/shvx/9PuTfR58H+fPQ50X+vPR9
kL8PfV/k70vXA/l60PVCvl50PZGvJ11v5OtN9wP5ftD9Qr5fdD+R7yfdb+T7
Tc8D8vNAzwvy80LPE/LzRM8b8vNGzyPy80jPK/LzSs8z8vNMzzvy807nAfk8
0HlBPi90npDPE5035PNG5xH5PNJ5RT6vdJ6RzzOdd+TzTvUAuR5QvUCuF1RP
kOsJ1RvkekP1CLkeUb1CrldUz5DrGdU75HpH9RC5HlK9RK6XVE+R6ynVW+R6
S/UYuR5TvUau11TPkes51Xvkek/9ALkfUL9A7hfUT5D7CfUb5H5D/Qi5H1G/
Qu5X1M+Q+xn1O+R+R/0QuR9Sv0Tul9RPkfsp9Vvkfkv9GLkfU79G7tfUz5H7
OfV75H5P8wDyPEDzAvK8QPME8jxB8wbyvEHzCPI8QvMK8rxC8wzyPEPzDvK8
Q/MQ8jxE8xLyvETzFPI8RfMW8rxF8xjyPEbzGvK8RvMc8jxH8x7yvEfzIPI8
SPMi8rxI8yTyPEnzJvK8SfMo8jxK8yryvErzLPI8S/Mu8rxL8zDyPEzzMvK8
TPM08jxN8zbyvE3zOPI8TvM68rxO8zzyPE/zPvK8T/sA8j5A+wLyvkD7BPI+
QfsG8r5B+wjyPkL7CvK+QvsM8j5D+w7yvkP7EPI+RPsS8r5E+xTyPkX7FvK+
RfsY8j5G+xryvkb7HPI+R/se8r5H+yDyPkj7IvK+SPsk8j5J+ybyvkn7KPI+
Svsq8r5K+yzyPkv7LvK+S/sw8j5M+zLyvkz7NPI+Tfs28r5N+zjyPk77OvK+
Tvs88j5P+z7yvk88AJkHEC9A5gXEE5B5AvEGZN5APAKZRxCvQOYVxDOQeQbx
DmTeQTwEmYcQL0HmJcRTkHkK8RZk3kI8BpnHEK9B5jXEc5B5DvEeZN5DPAiZ
BxEvQuZFxJOQeRLxJmTeRDwKmUcRr0LmVcSzkHkW8S5k3kU8DJmHES9D5mXE
05B5GvE2ZN5GPA6ZxxGvQ+Z1xPOQeR7xPmTeRzwQmQcSL0TmhcQTkXki8UZk
3kg8EplHEq9E5pXEM5F5JvFOZN5JPBSZhxIvRealxFOReSrxVmTeSjwWmccS
r0XmtcRzkXku8V5k3ks8GJkHEy9G5sXEk5F5MvFmZN5MPBqZRxOvRubVxLOR
eTbxbmTeTTwcmYcTL0fm5cTTkXk68XZk3k48HpnHE69H5vXE85F5PvF+ZN5P
eQByHkB5AXJeQHkCcp5AeQNy3kB5BHIeQXkFcl5BeQZynkF5B3LeQXkIch5C
eQlyXkJ5CnKeQnkLct5CeQxyHkN5DXJeQ3kOcp5DeQ9y3kN5EHIeRHkRcl5E
eRJynkR5E3LeRHkUch5FeRVyXkV5FnKeRXkXct5FeRhyHkZ5GXJeRnkacp5G
eRty3kZ5HHIeR3kdcl5HeR5ynkd5H3LeR3kgch5IeSFyXkh5InKeSHkjct5I
eSRyHkl5JXJeSXkmcp5JeSdy3kl5KHIeSnkpcl5KeSpynkp5K3LeSnksch5L
eS1yXkt5LnKeS3kvct5LeTByHkx5MXJeTHkycp5MeTNy3kx5NHIeTXk1cl5N
eTZynk15N3LeTXk4ch5OeTlyXk55OnKeTnk7/m/e/j95PHIeT3k9cl5PeT5y
nk95P3LeTz4Asg9AvgCyL0A+AbJPQL4Bsm9APgKyj0C+ArKvQD4Dss9AvgOy
70A+BLIPQb4Esi9BPgWyT0G+BbJvQT4Gso9Bvgayr0E+B7LPQb4Hsu9BPgiy
D0K+CLIvQj4Jsk9Cvgmyb0I+CrKPQr4Ksq9CPguyz0K+C7LvQj4Msg9Dvgyy
L0M+DbJPQ74Nsm9DPg6yj0O+Dv6vr/M/Pg+yz0O+D7LvQz4Qsg9EvhCyL0Q+
EbJPRL4Rsm9EPhKyj0S+ErKvRD4Tss9EvhOy70Q+FLIPRb4Usi9FPhWyT0W+
FbJvRT4Wso9Fvhayr0U+F7LPRb4Xsu9FPhiyD0a+GLIvRj4Zsk9Gvhmyb0Y+
GrKPRr4asq9GPhuyz0a+G7LvRj4csg9HvhyyL0c+HbJPR74dsm9HPh6yj0e+
HrKvRz4fss9Hvh+y70c+ILIPSL4gsi9IPiGyT0i+IbJvSD4iso9IviKyr0g+
I7LPSL4jsu9IPiSyD0m+JLIvST4lsk9JviWyb0k+JrKPSb4msq9JPieyz0m+
J7LvST4osg9KviiyL0o+KbJPSr4psm9KPiqyj0q+KrKvSj4rss9Kviuy7/r/
+rD/BykstrI=
                "]], {{{0.30630801556154, 0.}, {0., -1.}}, {
                3.999999999999999, 0.}}]},
             
             ImageSizeCache->{{113.19155254819037`, 
              128.1368041239678}, {-141.2415322953022, -37.355715002401574`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.556855941287014`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.4452027182321143`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.3254098765084525`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.9065165872074894`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.8436607365651643`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.556855941287014}, {
               Style["75%", Bold], 2.4452027182321143`}, {
               Style["median", Bold], 2.3254098765084525`}, {
               Style["25%", Bold], 1.9065165872074894`}, {
               Style["min", Bold], 1.8436607365651643`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[1., 0.7215686274509804, 0.2196078431372549], EdgeForm[
         Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
5JGCeCTySkG8EnmmIJ6JvFMQ70QeKoiHIi8VxEuRpwriqchbBfFW5LGCeCzy
WkG8FnmuIJ6LvFcQ70UeLIgHIy8WxIuRJwviycibBfFm5NGCeDTyakG8Gnm2
IJ6NvFsQ70YeLoiHIy8XxMuRpwvi6cjbBfF25PGCeDzyekG8Hnm+IJ6PvF8Q
78c8QFAegHmBoLwA8wRBeQLmDYLyBswjBOURmFcIyiswzxCUZ2DeISjvwDxE
UB6CeYmgvATzFEF5CuYtgvIWzGME5TGY1wjKazDPEZTnYN4jKO/BPEhQHoR5
kaC8CPMkQXkS5k2C8ibMowTlUZhXCcqrMM8SlGdh3iUo78I8TFAehnmZoLwM
8zRBeRrmbYLyNszjBOVxmNcJyuswzxOU52HeJyjvwzxQUB6IeaGgvBDzREF5
IuaNgvJGzCMF5ZGYVwrKKzHPFJRnYt4pKO/EPFRQHop5qaC8FPNUQXkq5q2C
8lbMYwXlsZjXCsprMc8VlOdi3iso78U8WFAejHmxoLwY82RBeTLmzYLyZsyj
BeXRmFcLyqsxzxaUZ2PeDZR3Yx4OlIdjXg6Ul2OeDpSnY94OlLdjHg+Ux2Ne
D5TXY54PlOdj3g+U96MPAOQDoC8A5AugTwDkE6BvAOQboI8A5COgrwDkK6DP
AOQzoO8A5DugDwHkQ6AvAeRLoE8B5FOgbwHkW6CPAeRjoK8B5GugzwHkc6Dv
AeR7oA8C5IOgLwLki6BPAuSToG8C5JugjwLko6CvAuSroM8C5LOg7wLku6AP
A+TDoC8D5MugTwPk06BvA+TboI8D5OOgrwPk66DPA+TzoO8D5PugDwTkA6Ev
BOQLoU8E5BOhbwTkG6GPBOQjoa8E5CuhzwTkM6HvBOQ7oQ8F5EOhLwXkS6FP
BeRToW8F5FuhjwXkY6GvBeRroc8F5HOh7wXke6EPBuSDoS8G5IuhTwbkk6Fv
BuSboY8G5KOhrwbkq6HPBuSzoe8G5LuhDwfkw6EvB+TLoU8H5NOhbwfk26GP
B+Tjoa8H5Ouhzwfk86HvB+T7oQ8I5AOiLwjkC6JPCOQTom8I5BuijwjkI6Kv
COQros8I5DOi7wjkO6IPCeRDoi8J5EuiTwnkU6JvCeRboo8J5GOirwnka6LP
CeRzou8J5HuiDwrkg6IvCuSLok8K5JOibwrkm6KPCuSjoq8K5Kuizwrks6Lv
CuS7og8L5MP+X1/2fwCirdNQ
                "]], {{{0.12023494061208494`, 0.}, {
                0., -1.}}, {5., 0.}}]},
             
             ImageSizeCache->{{116.12974787918667`, 
              140.75585755738666`}, {-94.29328675274256, -39.83939747363749}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.963603477435748`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "1.9255612980052286`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "1.847442898660478`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.728595193316212`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.6934442448943159`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.963603477435748}, {
               Style["75%", Bold], 1.9255612980052286`}, {
               Style["median", Bold], 1.847442898660478}, {
               Style["25%", Bold], 1.728595193316212}, {
               Style["min", Bold], 1.6934442448943159`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9490196078431372, 0.8627450980392157, 0.43529411764705883`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
8gvIfoH8BLKfIL+B7DfIjyD7EfIryH6F/AyynyG/g+x3yA8h+yHyS8h+ifwU
sp8iv4Xst8iPIfsx8mvIfo38HLKfI7+H7PfIDyL7QfKLyH6R/CSynyS/iew3
yY8i+1Hyq8h+lfwssp8lv4vsd8kPI/th8svIfpn8NLKfJr+N7LfJjyP7cfLr
yH6d/Dyynye/j+z3KQ9AzgMoL0DOCyhPQM4TKG9Azhsoj0DOIyivQM4rKM9A
zjMo70DOOygPQc5DKC9BzksoT0HOUyhvQc5bKI9BzmMor0HOayjPQc5zKO9B
znsoD0LOgygvQs6LKE9CzpMob0LOmyiPQs6jKK9Czqsoz0LOsyjvQs67KA9D
zsMoL0POyyhPQ87TKG9Dztsoj0PO4yivQ87rKM9DzvMo70PO+ygPRM4DKS9E
zgspT0TOEylvRM4bKY9EziMpr0TOKynPRM4zKe9EzjspD0XOQykvRc5LKU9F
zlMpb0XOWymPRc5jKa9Fzmspz0XOcynvRc57KQ9GzoMpL0bOiylPRs6TKW9G
zpspj0bOoymvRs6rKc9GzrMp70bOuykPR87DKS9HzsspT0fO0ylvR87bKY9H
zuMpr0fO6ynPR87zKe9HzvupD0DuA6gvQO4LqE9A7hOob0DuG6iPQO4jqK9A
7iuoz0DuM6jvQO47qA9B7kOoL0HuS6hPQe5TqG9B7luoj0HuY6ivQe5rqM9B
7nOo70Hue6gPQu6DqC9C7ouoT0Luk6hvQu6bqI9C7qOor0Luq6jPQu6zqO9C
7ruoD0Puw6gvQ+7LqE9D7tOob0Pu26iPQ+7jqK9D7uuoz0Pu86jvQ+77qA9E
7gOpL0TuC6lPRO4TqW9E7hupj0TuI6mvRO4rqc9E7jOp70TuO6kPRe5DqS9F
7kupT0XuU6lvRe5bqY9F7mOpr0Xua6nPRe5zqe9F7nupD0bug6kvRu6LqU9G
7pOpb0bum6mPRu6jqa9G7qupz0bus6nvRu67qQ9H7sOpL0fuy6lPR+7TqW9H
7tupj0fu46mvR+7rqc9H7vOp70fu+4kHQOYBiBdA5gWIJ0DmCYg3QOYNiEdA
5hGIV0DmFYhnQOYZiHdA5h2Ih0DmIYiXQOYliKdA5imIt0DmLYjHQOYxiNdA
5jWI50DmOYj3QOY9iAdB5kGIF0HmRYgnQeZJiDdB5k2IR0HmUYhXQeZViGdB
5lmId0HmXYiHQeZhiJdB5mWIp0HmaYi3QeZtiMdB5nGI10HmdYjnQeZ5iPdB
5n2IB0LmgYgXQuaFiCdC5omIN0LmjYhHQuaRiFdC5pWIZ0LmmYh3QuadiIdC
5qGIl0LmpYinQuapiLdC5q2Ix0LmsYjXQua1iOdC5rmI90LmvYgHQ+bBiBdD
5sWIJ0PmyYg3Q+bNiEdD5tGIV0Pm1YhnQ+bZiHdD5t2Ih0Pm4YiXQ+bliKdD
5umIt0Pm7YjHQ+bxiNdD5vWI50Pm+Yj3Q+b9iAdE5gGJF0TmBYknROYJiTdE
5g2JR0TmEYlXROYViWdE5hmJd0TmHYmHROYhiZdE5iWJp0TmKYm3ROYticdE
5jGJ10TmNYnnROY5ifdE5j2JB0XmQYkXReZFiSdF5kmJN0XmTYlHReZRiVdF
5lWJZ0XmWYl3ReZdiYdF5mGJl0XmZYmnReZpibdF5m2Jx0XmcYnXReZ1iedF
5nmJ90XmfYkHRuaBiRdG5oWJJ0bmiYk3RuaNiUdG5pGJV0bmlYlnRuaZiXdG
5p2Jh0bmoYmXRualiadG5qmJt0bmrYnHRuax/yev/X8AaRQ9pg==
                "]], {{{
                0.384852718838696, 0.}, {0., -1.}}, {6., 0.}}]},
             
             ImageSizeCache->{{128.494370929738, 
              143.94848327125047`}, {-135.03814547961827`, 
              1.841560048050951}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.4576792898437163`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.239083723549215`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "1.9693690050079689`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.7956127794308852`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.1197824227491735`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.4576792898437163`}, {
               Style["75%", Bold], 2.239083723549215}, {
               Style["median", Bold], 1.9693690050079689`}, {
               Style["25%", Bold], 1.7956127794308852`}, {
               Style["min", Bold], 1.1197824227491735`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9490196078431372, 0.8627450980392157, 0.43529411764705883`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
YyivQc5rKM9BznMo70HOeygPQs6DKC9CzosoT0LOkyhvQs6bKI9CzqMor0LO
qyjPQs6zKO9CzrsoD0POwygvQ87LKE9DztMob0PO2yiPQ87jKK9Dzusoz0PO
8yjvQ877KA9EzgMpL0TOCylPRM4TKW9Ezhspj8T/zSP/m1ci55WUZyLnmZR3
IuedlIci56GUlyLnpZSnIueplLci562UxyLnsZTXIue1lOci57mU9yLnvZQH
I+fBlBcj58WUJyPnyZQ3I+fNlEcj59GUVyPn1ZRnI+fZlHcj592UhyPn4ZSX
I+fllKcj5+mUtyPn7ZTHI+fxlNcj5/WU5yPn+ZT3I+f91Acg9wHUFyD3BdQn
IPcJ1Dcg9w3URyD3EdRXIPcV1Gcg9xnUdyD3HdSHIPch1Jcg9yXUpyD3KdS3
IPct1Mcg9zHU1yD3NdTnIPc51Pcg9z3UByH3QdQXIfdF1Cch90nUNyH3TdRH
IfdR1Fch91XUZyH3WdR3Ifdd1Ich92HUlyH3ZdSnIfdp1Lch923UxyH3cdTX
Ifd11Och93nU9yH3fdQHIveB1Bci94XUJyL3idQ3IveN1Eci95HUVyL3ldRn
IveZ1Hci953UhyL3odSXIvel1Kci96nUtyL3rdTHIvex1Nci97XU5yL3udT3
Ive91Acj98HUFyP3xdQnI/fJ1Dcj983URyP30dRXI/fV1Gcj99nUdyP33dSH
I/fh1Jcj9+XUpyP36dS3I/ft1Mcj9/HU1yP39dTnI/f51Pcj9/3EAyDzAMQL
IPMCxBMg8wTEGyDzBsQjIPMIxCsg8wrEMyDzDMQ7IPMOxEMg8xDESyDzEsRT
IPMUxFsg8xbEYyDzGMRrIPMaxHMg8xzEeyDzHsSDIPMgxIsg8yLEkyDzJMSb
IPMmxKMg8yjEqyDzKsSzIPMsxLsg8y7EwyDzMMTLIPMyxNMg8zTE2yDzNsTj
IPM4xOsg8zrE8yDzPMT7IPM+xAMh80DECyHzQsQTIfNExBsh80bEIyHzSMQr
IfNKxDMh80zEOyHzTsRDIfNQxEsh81LEUyHzVMRbIfNWxGMh81jEayHzWsRz
IfNcxHsh817EgyHzYMSLIfNixJMh82TEmyHzZsSjIfNoxKsh82rEsyHzbMS7
IfNuxMMh83DEyyHzcsTTIfN0xNsh83bE4yHzeMTrIfN6xPMh83zE+yHzfsQD
IvOAxAsi84LEEyLzhMQbIvOGxCMi84jEKyLzisQzIvOMxDsi847EQyLzkMRL
IvOSxFMi85TEWyLzlsRjIvOYxGsi85rEcyLznMR7IvOexIMi86DEiyLzosST
IvOkxJsi86bEoyLzqMSrIvOqxLMi86zEuyLzrsTDIvOwxMsi87LE0yLztMTb
IvO2xOMi87jE6yLzusTzIvO8xPsi877EAyPzwP+XF/4fR5jYcQ==
                "]], {{{
                0.2219716164171319, 0.}, {0., -0.9999999999999999}}, {7., 
                2.220446049250313*^-16}}]},
             
             ImageSizeCache->{{134.8214467402257, 
              153.17865622517795`}, {-114.0660061130945, -38.30821365000003}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.2834983144288716`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.106117417700069`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.023337724365341`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.7886812404484094`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.6889022708644423`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.2834983144288716`}, {
               Style["75%", Bold], 2.106117417700069}, {
               Style["median", Bold], 2.023337724365341}, {
               Style["25%", Bold], 1.7886812404484094`}, {
               Style["min", Bold], 1.6889022708644423`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.6705882352941176, 0.8784313725490196, 0.9372549019607843],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
f7okE8w6vOy6xa8e6w+dO7+1IhMeln0oOR9Sjy322a5tpc6Enp+To8Xrehy1
1bjOozYTTgTnX877XI9LjqTML2rIhLrjapc2GfVYsPhqrx2yLNjg1MxibFk9
fvRfWzBeIwuSZ+j0XClrQC/boLCVmlkwXa9/5eF2DdjsZ9hUuXYWPG028kNw
nwb0/+dJo3mHLBiQY+b33agBTUPuJk7pmgU+kfN3NJo1YOD4xWP6984C+Y2V
swdaNuC8+0a1Ur0scNm3ue9c+wZURS+YXWOYBWm2e6u3b23AwxsdrxqMz4K5
E49/urq/AXf3vn3m0bQseKV7+Vb0mQa0Vn9WBVplweDawN1FNxowpqHd/WH2
WXDpR/h8nccNOGPYz2tLt2aB5rOYgRMjm/6/363n5gezYKfv93rHrw24f/6Z
ZOWFLMh1zflyPKsB9/36Hvn4QRYssqy8+6SiAY2+5Ouuic6CSEOFx29FI7r+
t26ZYVoWjGjTfpGyYyPqmIVGDajLAv+i3oOH9G9E6z6aq5d0zYY2H4fLFo5q
xJAP1orkcdngfg+S9kxpxBhjl57PVmRDkdecBzcXNuL97R9zpPuzYfnaFQfi
HBtxhenDkZGB2fBhqtPSim2N6D1EHNFMzIZx/XcP1z3UiPM6lMtSpTlwR35U
w9y3EeN0ftjMMMyBThnnf2243YgW7uOLLe1z4JAIeHQmrBFznTtelJ7PgYqr
YUdeRDfiH/vPXxd/ygH7f6JsMr81ovaKkutLWuRCwrKvI7VyG7HTh9ojzafm
gum4TM0Rqkbsm//risPBXLBuucv5vlwi3qy96Or0LhdO7vZY9lpLIipKD/Xr
3jIPogsOT01sLxFZj/5McbHMg4YlJw3zu0nEshcmpY5X8mBUrK9ufV+JCDBK
eVWSnwdOY682aztYIiZ5X33XwjgfbgbcKus3UiJCChNu3T6aDz917v8eO14i
cgum73iRkg/tDj2OmWUuEXV2mmnjRhXAjMoXoStnSUSln2ZrnRMFsM/h7VVX
K4l41ubjy/H5BfDsy3uvI8ubvn9yR9MrU/9AiVmC62UHiWj9Otij3+0/MPDR
D9uHThKR52jX+lWzv2DTO31GpKtERMW16Ge14S/4nsoblbSn6XpmyEM/xf+F
j43Fvf4ekIiRKTGbOo8tBMVmlZbkuER4K/N+dPArhPEpDVXtz0rEuFeTrAK1
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
OsyvTxHMmbxie9eJCpFx9uwje4dCOPTIwW7oVIVYtz1tlcutv/Cyt9MsszkK
cbnvWNOWOX+g4tTWMYsWKcTzNVvAecAfGCzZ3We9jUK8sY5r+3t1Adhv9my1
d7VCmBroFJ4KyIeLKV7q05sUYrveL6vYvDxImH0689b2pt9/15j1Rj8PWrw8
/1/4XoWQ16i6h29s0j+Dr4d/PKQQH7ybjcgJyYGdlwJupp9QiAq/e8meqmwI
1gw+WemrEBFV1p5RE7MhZ1eYW4trCrG8X29p1uEs6JH/0rF7gEJcieu4qt2X
TFhoHTXPMFghghPt/nr0yoRj7+JMpjxViAOGM3bbOGdA5OivA5agQmj1mXr0
e5Pfqr31s+3Gdwqhb7axq07ndDDqmFnn8UkhXqeuvDTJOQ3WHyjI9fmuEGeu
7wyu900Fv/LShDupCvFY1vd9qmUKJK2qfhmRqxDVXulD13b6DW0SJHfjixXi
3bn8kk/pP2HapOY+WSqF2Jjx7/4Zocmw96G2u7pRIQyKFGHKYz8grGen9S2b
K4WNWd4TPackKDzRY2GvNkrR49/CTj8sv0O/hv6mIzsrxeDS3znDJ3+D5RuH
GEzvpRSlKYufTR+XCGd+jdRZPkgpXg/v/M6oyf+/nzle6jxcKf7btaVdHXwB
2YvJf/ePVYpX5308g+YkgLH+zO/nTJWim5VF22mOn8H5woI396Yrhbnuo6rY
/fFwp/nS+zhPKWLE6tAVVp8gdYfd+S/WSmEfGDXs88OPoJO7dn/uSqVo0Wzl
0WTdOJizyHlT7Vql6B3S9/zc8+/hYNSOJdpblKLThFHvZH1jIWKku3nfXUph
MXn+EBHxDipuHBo2Zp9SJK8LdZrtGA0G7U90nemlFJ8s0oav142CVZ5nlban
lWKhs1lQfPpbuFh6ucTlglJcKc/oOPrJG/i88ubPQ35KMUJ1YsBM39fQPP5e
9MW7SpE6Ison4oAAUwgNeRCiFG90/LuvkSDsePD88ptwpei1uZljUJuX8KD7
m8PfXivFstnailPGLyDnWKxLQaxSnEu5F2jlFg7d6+JXNHxWisdhb08aJzwF
qw1J09slK0WYyyjz3aZhcCw5dcSADGXTfk/bYxX5GN5a5PYYV6AUtxb0/9Kw
PBRqnhW1mFPW9HwK7XaHtngERoOqKuxqlELHtm3pvdiHsO5cfeo2mYaonCv5
x3BsMFzXUH7w0tQQC+776/tI7kPStpZhV9ppiOGaD23zCgJBO7u9X0hXDbHJ
fa/e/co7MNWq27GoPhrizuhvXut6BsDet312/NDXENKW7xffW30Lnhjpryo0
0hBb9UVjs/c34K+f4WypiYa4d8FuaPfp/tCvrfHYjpM1hLtj9erTqddhmYdp
X72ZGmJfdrSWXo9r4F08rfUESw1xwc3dVgRehvc2c6vnLdMQ7cFuufOqiyD9
b1GWg72GSM8o35Zodh7GTrD5tHODhigJjXb1s/AF5yDH58e2aghfe58Pl1x9
IKDbxlvXd2uIWa/u/+f32htSjrqeerxfQ8zs46S8NPQ06NTs3h3zr4bgvHj2
uv2rf535/z/T7yP/Pn0e8ufR9yF/H10P8vXQ9SJfL90P8v3Q/SLfLz0P5OdB
zwv5edHzRH6e9LyRnze9D+T3Qe8L+X3R+0R+n/S+kd83rQfk9UDrBXm90HpC
Xk+03pDXG61H5PVI6xV5vdJ6Rl7PtN6R1zvtB+T9QPsFeb/QfkLeT7TfkPcb
7Ufk/Uj7FXm/0n5G3s+035H3O50HyOcBnRfI5wWdJ8jnCZ03yOcNnUfI5xGd
V8jnFZ1nyOcZnXfI5x2dh8jnIZ2XyOclnafI5ymdt8jnLZ3HyOcxndfI5zWd
58jnOZ33yOc9zQPkeUDzAnle0DxBnic0b5DnDc0j5HlE8wp5XtE8Q55nNO+Q
5x3NQ+R5SPMSeV7SPEWepzRvkectzWPkeUzzGnle0zxHnuc075HnPekBZD1A
egFZL5CeQNYTpDeQ9QbpEWQ9QnoFWa+QnkHWM6R3kPUO6SFkPUR6CVkvkZ5C
1lOkt5D1FukxZD1Geg1Zr5GeQ9ZzpPeQ9R7pQWQ9SHoRWS+SnkTWk6Q3kfUm
6VFkPUp6FVmvkp5F1rOkd5H1LulhZD1MehlZL5OeRtbTpLeR9TbpcWQ9Tnod
Wa+TnkfW86T3kfU++QFkP0B+AdkvkJ9A9hPkN5D9BvkRZD9CfgXZr5CfQfYz
5HeQ/Q75IWQ/RH4J2S+Rn0L2U+S3kP0W+TFkP0Z+DdmvkZ9D9nPk95D9HvlB
ZD9IfhHZL5KfRPaT5DeR/Sb5UWQ/Sn4V2a+Sn0X2s+R3kf0u+WFkP0x+Gdkv
k59G9tPkt5H9NvlxZD9Ofh3Zr5OfR/bz5PeR/T7lAch5AOUFyHkB5QnIeQLl
Dch5A+URyHkE5RXIeQXlGch5BuUdyHkH5SHIeQjlJch5CeUpyHkK5S3IeQvl
Mch5DOU1yHkN5TnIeQ7lPch5D+VByHkQ5UXIeRHlSch5EuVNyHkT5VHIeRTl
Vch5FeVZyHkW5V3IeRflYch5GOVlyHkZ5WnIeRrlbch5G+VxyHkc5XXIeR3l
ech5HuV9yHkf5YHIeSDlhch5IeWJyHki5Y3IeSPlkch5JOWVyHkl5ZnIeSbl
nch5J+WhyHko5aXIeSnlqch5KuWtyHkr5bHIeSzltch5LeW5yHku5b3IeS/l
wch5MOXFyHkx5cnIeTLlzch5M+XRyHk05dXIeTXl2ch5NuXdyHk35eHIeTjl
5ch5OeXpyHk65e3IeTvl8ch5POX1yHk95fnIeT7l/ch5P/UByH0A9QXIfQH1
Cch9AvUNyH0D9RHIfQT1Fch9BfUZyH0G9R3IfQf1Ich9CPUlyH0J9SnIfQr1
Lch9C/UxyH0M9TXIfQ31Och9DvU9yH0P9UHIfRD1Rch9EfVJyH0S9U3IfRP1
Uch9FPVVyH0V9VnIfRb1Xch9F/VhyH0Y9WXIfRn1ach9GvVtyH0b9XHIfRz1
dch9HfV5yH0e9X3IfR/1gch9IPWFyH0h9YnIfSL1jch9I/WRyH0k9ZXIfSX1
mch9JvWdyH0n9aHIfSj1pch9KfWpyH0q9a3IfSv1sch9LPW1yH0t9bnIfS71
vch9L/XByH0w9cXIfTH1ych9MvXNyH0z9dHIfTT11ch9NfXZyH029d3IfTf1
4ch9OPXlyH059enIfTr17ch9O/XxyH089fXIfT31+ch9PvX9yH0/8QDIPADx
Asi8APEEyDwB8QbIvAHxCMg8AvEKyLwC8QzIPAPxDsi8A/EQyDwE8RLIvATx
FMg8BfEWyLwF8RjIPAbxGsi8BvEcyDwH8R7IvAfxIMg8CPEiyLwI8STIPAnx
Jsi8CfEoyDwK8SrIvArxLMg8C/EuyLwL8TDIPAzxMsi8DPE0yDwN8TbIvA3x
OMg8DvE6yLwO8TzIPA/xPsi8D/FAyDwQ8ULIvBDxRMg8EfFGyLwR8UjIPBLx
Ssi8EvFMyDwT8U7IvBPxUMg8FPFSyLwU8VTIPBXxVsi8FfFYyDwW8VrIvBbx
XMg8F/FeyLwX8WDIPBjxYsi8GPFkyDwZ8WbIvBnxaMg8GvFqyLwa8WzIPBvx
bsi8G/FwyDwc8XLIvBzxdMg8HfF2yLwd8XjIPB7xesi8HvF8yDwf8X7IvB/x
gMg8IPGCyLwg8YTIPCHxhsi8IfGIyDwi8YrIvCLxjMg8I/GOyLwj8ZDIPCTx
ksi8JPGUyDwl8ZbIvCXxmMg8JvGayLwm8ZzIPCfxnsi8J/GgyDwo8aLIvCjx
pMg8KfGmyLwp8ajIPCrxqsi8KvGsyDwr8a7IvCvxsMg8LPGyyLws8bTIPC3x
tsi8LfG4yDwu8brIvC7xvMg8L/G+yLwv8cDIPDDxwsi8MPHEyDzx/+WN/wdC
yHdV
                "]], {{{0.2657418646382884, 0.}, {0., -1.}}, {8., 0.}}]},
             
             ImageSizeCache->{{144.43745628113408`, 
              159.11989544868473`}, {-132.62481418560958`, \
-37.67408873057387}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.487805406696993`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.4285100120966066`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.210331711854519`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "2.0455526966897106`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.7248306579281674`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.487805406696993}, {
               Style["75%", Bold], 2.4285100120966066`}, {
               Style["median", Bold], 2.210331711854519}, {
               Style["25%", Bold], 2.0455526966897106`}, {
               Style["min", Bold], 1.7248306579281674`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.6705882352941176, 0.8784313725490196, 0.9372549019607843],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlYTVv4x/c+57ikTNeYsQhdkTFkWltF5CLcImOITMlUuDLWNURkaCCE
jI0kiehdKlSm0mxIhkSSSNMZf+f3PO/7z+/nD579PDmdvfda7/oOH9MlnjOX
yQRB+KD/63//pT/jvBYNfKxsgElv1XlpilBW+/663ZQ/GiEqueTbFcUpFj1N
NvdFm0ZQnC1fW9P7NFuaPMtzVrdGuPBt2IdfK8+yLuaX/ArNG+Hs116JtSvO
sZcn6k7OG9YIQWHGLofizrMD4qS4d6wRmnqmTHMyiGDS2pPpS6c0wty37vve
e19kDa8qisudG+Ftqi+/03CJxdmP+bF6SSPI5LaOC45cYcsTAhTVHo2wd+Dx
79Loa6y76TvjTVsbocl57v1MHcnyAwYNbPBrhPDWE+8szItmh5S77XwCGyGj
2musTWoss3PPdRFON8J/r5cZzVt6nalyzTz9rug/P6D8U826Gyxe8vZrdrMR
ZveyC2w8EM9Wxjw+eSilEbokTwpbF3uTmXQ2jmud1QjB8d/uzSpJYEV7V6Wf
yG+ElBEHlx83TmRHapKLO71vhK/r/V3bu95mE11b/Dhd2QhunVI3JdxIYtqn
CxWmDY3w7K65udTyLrtlfd34klwJFbPF/3y8ktmay+LAv1opobJ5ep1p+T1m
1naWXUxnJUTF5418uySFvd550WVwH/11SN2c6V+AHausXXtrsBK+jTct35vM
mYOLvZ/1WCUcmx82c8a+B0x8FHry/iQlvP8zwnXi7FSWNKQidvw/SrCdZNjZ
xCKNeYaPTn+4SAl/LRvidFyWzvoYBRRPXq2E9qt6109/m85KtpRUPfNWwrp9
Q5mY/JAFlQ1UzNyjBPfCY12nhT1if8/cbVwQoIRhz0ICirc/Zgp4aTn3pBLu
DPvQ1HZJBku2MLMruaiEt+fSv/SZlMk2hHq5LLmuhMMLWn7vPjCL9WvyeO3n
ZCUse2IXl9rhCXu/vpPfqsdK6PWLWVzVPmGhJStPVr1Uwu4tTSe6fX7KHKck
x24oUUKs1505B589Y02TjNLrvirB23TY/Rs3n7MUs4XF/9YqQbv85a01oS+Y
19G4Kq2ggl0uuoKYsdmsv1ZQ+BqpwOaPXq+bxGazT6tmGjftpII1KXcEg245
LKwwwvJgLxWc3+sXut8/h820q7VtNVAFYaP6+f5Tl8Oa35jocnyUCj6OjsyS
XF+yB91C13acqILyjX/Uds94ybb4f/UNm6GCPiqTgWkDctmg+lEneyxQgWNs
xu6mR3NZ+dJDsRErVOAWfDn90c9cdjb7bVrfTSqYdtzOq2R6HnMeO7A4aqcK
gtKiX1hG5bEWkbuqBh5UQZclk0tPyfNZeoeX8oRgFZjz550NXPLZNt9exiMv
qODg/TG2K6Py2ZDqTZb3YlSQ+K3G9aQyn1XMf2Qr3VHBkR7n2xyeWMDOZ3Z0
SU9XQT+3Fu9GHilgc4avXDspWwU/Y0c8CMgrYK0j7vo+fa2CFwVnbX07FLLH
rYxOOparIN9viaa9UyHb4bMgNu+XCtb7GweMDixkw7/Gps3RqqB6ZmHVr8eF
7LuTUPzGQA2NWzJHj1EXsoupM6pc26sheMSHy50GFLF5AyPkZSZqWOjt3Og/
t4i1Pf2708r+aoh95uQa4lfEsppNtPw+Qg19/706yjaqiO32CrFdb6sGu1lt
yk88L2IjP3yZUztNDUJa/aWgqiJWPW3U2q1z1XBx7eayKYbF7EryQV/NMjU8
2Xh2w32zYrbQ/G3o7vVq2L9566ffo4pZhyDL2Cbb1XDH530r1dRi9kzclXZg
vxqux7uVFi0oZn5rc4panFCD1x2NTciqYjbmdc+qo+FqCLQ60JFtKmY19pvk
HaLU8FfXdX8V/1vMIhMedjqVqIbbR8sGrt1RzBabdrTsnqqG9gO0+X/sLGad
Dq+wvfBMDRajn2ZF+RSzbOWdOX2K1TD5zNHiZZuL2T53w7WRn9RwxlVtMM6z
mI3Lm+9rWa2GPafsM8a6FbM6KTY0XqUGR65t5+lczGJidDHDm2pAc9us/s2E
YubWeUba3T81kPDnoaYhQ4pZ130XisZ110D0Rv/WEV2LWW5NzffUvzRguOnt
tLaKYubvOkFub6WB1p8aVjR8KWI2z4I7PZE04LT9ybhlT4pYo/WXAdP/1oDJ
/UzmqX/+1y9b2+bO1kArmwlplgeKmHvbg3NmL9WAkX2nJeBWxLrveuPxeq0G
yuIiHKVxRaygcoDvon810C+6Y1Je+yIW4LIz9ON/GjAfo2px8Vshs3uUHeN+
VAM/3pateAWFTD2kZ9q30xpotHPNuXqskN0M31jkeVUDIf3KAia4FbJVRg+/
19zUQMZrcWXlsELWc2sH+RbQgKVReHWJopAVl7l3UmdpQDG2pNZNv34DZ94Z
sKtAA/mdqjJfRBSwSdDcVvFBA2+ar7Ves7GAaS3mz9n/Xf+8BmaZh9oWsMTQ
GA+jRg3YWLydfLtdAfNootsTqNCC49PyFgPL85nZBsfQdq21MLlN9HyP5Hz2
puR8TGgXLVRf1/l9PJrPjk+pSe3aVwuBcvFuy9X5zCHJrujcEC38K/O862mf
z2S9g7+bjdOC98YDvQP65rM7R8tl1yZrwcFQGlpjmM/WaUd2GuCkhYbMo/uH
1uYx89X+A264aiFumZf3l4957F3haxurNVpoOSPV9lJRHgu2GzDnzmYt9Dse
YmuUl8em3djhMdZXCz8GGF6Dgjym6J6958FhLfx9OcFw+fs8ds/fNHTCKS1Y
/G6VcPl3HttYvyEm85IWnsdfO9KnTT7r55aeOvWGFrpvkZ06OiKffchuX5Rz
TwsZ1inbjq7IZyfHun93ytCCT8Yc0xcX85ljZJLsVa4WzDq9K/9Zmc+adWze
aeE7LcxLN0s9O76Age+8AR8qtPDpkOfszfrn710dbbO8TgutLC52NW5byCwX
aGdXiDqIM2uzsuvRQlaWOd1jbQsd9OzWZH/b7kXs9PDze3510oHfv2szDtwt
Yv9E/ArxNtPB2x85B2Xuxax5a7sY5UAdXPD+7dTQ6xVL9QlK3TFaBx9nRZS8
/vmKbf36uVBmr4Pq/V+82ue8ZoOcR37fO1MHt5ZabNA8eMO+pB6QGS7Uwegj
Vz+8S3/Lwge+7nhkpQ5WltT31RWXMOfT/Qe09dJB2HPZh0dCKWtpsMMmZJcO
+hSZxBSeKWUPvV7M7nJIB22uPdWMtnvPfD6YeISH6KDXu5O8tuY9GzZ9w55e
EToIP/R4mzb6A6tITgu5EquDwiuZLew9P7IL5u1jLO7qIOKf5N5Joz6xuUHL
U+Me6qBFZQvPwa3KWGtZUuHQHB0EZv+5dV9lGctYa/D99hsdvPC+Ofa/l5/Z
ztdzZWO+6GDWpzerf/ByNnxSdEdeo4PPI45X77z9hVUlaPrb6XSgtbq7s/zW
V/YysK+pWxOBQ+DKMc+TK5ilfbZFH0OBnxh3dW9uxjfmr9ky/EtrgUfcP5Dl
/6aSfb5pOj6yg8Bd9nrIfeu+s/Grsqas6SpwL02Pu+M7/GBnTDY6W/YU+I9T
s1Zc6FbNGgq6LK7uK/AOvX5t2x1fzf4JSF8dP0Dg01XBxt6Tf7Lrth7em4YK
/FNw0jCrDz+ZobL97uHWAn+Td15c7/OLuV9POdgwTv/7ck85FHesYanL3YPv
2gk8K/FxVpeEGta9W+vzPg4CPzPf7vAnx9/s39ykqHGOAu9V8du55PtvVnBg
caLgLPDKZ5ua3PSvZYOl5g9S5wl8o8OuJkZ961hAXfwTv8UCN+tvfv9Yah37
Ej2vYKK7wJUt2mmr59czu6WK9808BJ4e32JLTm09O2cc8y1rg8AVl5v2Lz3U
wFQvnOoObRF45I2skizTRjZ7r1aYvkPgy0rX+Y9PaGTxY64YtvET+KninGd1
tkrWsmZ6h9wD+ufrI3c5l61kq641mAQdEXjQsz+d611U7NGi8xazgwQ+Oqjr
s6R3KmbawWG4cZjAW+/7Jbu8WM22P/0lvT4n8PELd+f4vVOzoj1hU85cFnhO
p+GNPVw0bJi1nfOiaIEft41eZf9cwwJ/VLqaxgt8a2vNvuxxWlZ5KWj1x9sC
Nz/VYUFwpJbZzx/nfem+wI+anni+tY2ORfxZvss9TeC8Y0TK4o06ps04cvCv
TIE/GRHUd3S2js3dOTL423P9+3xZEaRuK0iJVu/PxeQJ/Hnh3gCHsYLUpvJA
lOcrgR+8bzm8qZsgeVwYkji4VOCnZ7x0ttovSBlzXvOaMoGveFJ/89U1QTJr
5ffk1jeBD5oeptZlCNKuh/0LNv8U+KGK4hvXywTpzbb8Uut6ge/2DzZQ6QRp
xJAd31RqgcfcGrbxR0dROv6lT919mci/HAx+fH6AKFWdfSHsaibyq3/UTu87
XpQcnLYY2rQUeb7B2A0hM0XpsqFpB0U7kRuMjgo2XCJKYmqmySNjkW+zNsk+
6ylKC7ZssNjfQ+SBHywvemwTpSTLLsMdeov8wmxddtB/otSuLE0yshD543Z7
2gw/LErrwtZMeT5I5DnZ60s9gkTp6Yz2zoHDRX7/j0ujFoSJUt9mKa4zx4i8
pHzQYrNzouSbsnx1OxuRrzd8F/YxQpRKNrXyLrAX+VYfL/Xdy6I0yiJpV+hU
kZ94MbVX1lVRCn7venDuLJFHJ91sMihSlH6GGAR3dRG5auSOxOZRojR1Wvy5
koUi/yQ4Dt6sv76mmBd1zk3kCzp/Mj+qv1YkyxOXrBL5E++0og36a9f10dxs
nchzryS+Gqa/vtfX6clnL5GnNo4RqvSf37FEk391m8jbedsPuqm/3njicumq
3SKf3Xv15BD99XOH6d/67xP5sbnxzaL01/3EhtqqQ/rnbfBXrVp/vff2OeHG
MZEPmzzM8aT+8z94TDbcGCryHZPvNPePFqWxZr/aW50Vub+rERTEiNLJV6dM
6iNE3ntdUJxfnCj9DrS1uHNN5PN1hlnBN0TJ0b7SalucyDvIe8W1SBClaM0J
aewtkVuFb0gpTxSlpgljp+juitxhzLI+pndFaemqz04PuMgPjC2rv3lflFJM
jrj6PhJ5pu/usaEPRKlz4YjVE56KPOVZUvv0h6LkHVDq1fSlyEc0dsi2yBKl
l7YHdmUWivz88CdGqc9FaYBy8MGDb/Xvx2NeyeZcUTpw/VXQ1I8ij1vU8fuY
IlH6tNz3XKuvIn9w4HuY7o0oSd36R+VUidzH3s4y5r0onc7Nu3X8t/7+YmJT
Bn8WpfoD27mTUuTvxn//vKVClGZJfZ50FGS8/aJZLz2qRCm27nl+cRMZT3kz
zUv5U5Sax2wuDTOU8WtDfyY1qxWl5UtNvi1oI+NHO9ZO2VMvSqnGmbU9Osr4
C6XPI8dGUeqWvV740FXG5Uc9ny5QitLWvZ0NL/aUcd9x4y2P66/zxqS1X24u
45sEsdlr/c8PqlltYm4p4/067Svp0SBKh661s6gYKuPT90bd/Vv/+8oX3beK
tpbxkwYbbKbqv49th+XSWibj7KFJdotKUQp/2nLKoAkyPuPl2H3bykRJuee2
0y8H/f0keLv7vRUlZ2tX1wRHGR/2+t8FHfNEKf5Hs9XezjKulBfNMMsUpRaX
b3iNnC/jk4dXWp2+J0or58/dpVws41HeTVqtjxWl9D/lB++5y7hpWpYu6Kwo
mWRGBe3w0P//FCNH3SFR8tn5zzlpo4x32dB944WtolRkpYmUbZXxpORCI283
URpaeelW+g4ZbwxcWrt+qigduTCN7/WTceu3qtFHholSxZz6rEn+Mn617KZ5
hrEoTWx1Lr95oIzv2LpubCeNIF14OKn0aZD+eRhaDPcpESTNtp8Vh8Nk/LrJ
qWa/7guSy5BTtY7nZVxyd/64JUyQEr7YCG2vyLjMPrB/m82C1Dr8W/P8aP39
tFq+656jIK1xOtE+JF7GhzZ+jt1urp+HhmNNXJJk3G118MYbah3rlVrWr0uK
/vvfzoq4dFHHdm45bPU2TcaNzMOufpqkY68sR0jhmfrnsXfv4e1ftWx42TuH
xS/099N0e8zuvVp2LGy/U698Ge/pOP28wkTLqmYMdi17JeP14Y7juyZq2ORm
r1ZdKZXxAyktQ0onadjFlD1eKz/LeEy2Nnd1kZoJXha7LCpl/FGmasIrNzWb
b5Hn//2njGver3dwqFKxpPc+QXH1+vUz+U/pzSYVaxva+9x6jYxPtPnmHd+g
ZJ7TnkcOlcv5mKLU7j+3KlmWYvOt2mZyfvxA0NCUhkbWJ7kHv91SznvO6L5i
vFcj27M+I2trOznftH9my4s/GlhJ3/X5ozvL+ayfDzStVzQw6xLjUk0POZ/3
IGdzQkk9O3EitQJ6y/nHyGyDe7PqWbXD6trdFnK+c+3XNc6P69jfYjvBbrCc
t1sout20rmNXb99r/scIOZ85LjREHlXL5GuXtc8YI+ebGx55bulSyxaZtTTx
t5FzY889lbYHf7O7rxL7/T1JzhMXTfcJVdawDkcXWbWcJuenloflXF1ZwzbY
N5OyZ8n5+eLaxCtFv9hzzXWHYy5ybtVr5YfH9r/YXwkuTv8skvNJm0dljL79
k/mtkrl2WCbnYpu5HlZ9f7JSk6hVRavkvPORHOvPIdVsTOEsr1Pr5Dzac9eT
HQbVLDRAvXO+t5x361l9bEFDFftte8m/u4/+fiuPrptc+p1NV04NKt0t5xm3
zcK7PKlkkdfrwi/sk/O7ORMvWNz5xv5wD490C5DzFX1r055FVrAl3Sbd6nNc
zvf0K8qaee4rS8mthi+hcg7u7reanvrCjP1PZkWelXPvPYv/tQotZ16STf6a
i3J+QmXwwiTsM8uuq3hnGSnntwMCawwiylj/mOMV1XFyPndE/X/9r39i+5eO
qY2/JefNsvMmQepH9sm4TLcpWc4P/dNm1K9XHxjLDmg+4oGc3/j4dGRtw3t2
au/w9o2P5Hzkp9jP1V3fs7ox73okP5VzQ+fH1n/Yl7KZNfv6bX8p564Lo+Mv
VZWw2GuDrFiRnDvZdI57M+8tM3AtZmKJnK9/NO7Hq/zXbFmHPQ5pH/Wf3+1b
Ucr8V4w/7ef031c5D/ApOn2yuoh19c1dZP9DzttsGlK1Se8ntlj7rDKolXN/
wWb0DFbA8n6YeT1R6j8/NU3XW5nHBl5+tjNAUHAv5SOTDw9ymf98b//pfyh4
Qy/3N6uDX7LPf/YIamOk4L6J67xOb85hNpmPw3PbKHhZq6U9XZZls7M710UG
dVTwJtNnbitIec6UVsa3ZndT8KIzSdz6yVPmVPkAjHsp+LH9vr2W/chi1y+s
ynptruAXjoxuKOiXyYxc2uafsVRw/7C7pRqfx2xFq3vvFg1TcJfg8O0zyh6y
9IduFaajFNwhxeDH4KXprIdPi9qPTMFvHrwzV1WbyrYNSdRdmqDg7e5d+9bk
zANW8GVh8xVTFHzE95P9L83mbEh40/b9Zih4reJD/QyHFHbY6XqPSmcFj/jU
suqewT1WYejSL3a+gl8O2HzbtPIOm5AqWq1bouC/7PsXtqi+zc5tiWRDVij4
21Zxi7u2S2Rqy1kOvz303/+BvbbCOYHNKVP9k7hRwSfcGnWv6e14lhB2cdGW
rQpuOUt1t8XQG6zVzKmrRu3U//+hR+qsj8ex1c3qNqn9FPzMJd8vib+i2aOU
sztT/PWfdzC1c+XuSNbTy95/V6CCHz6Sr7QZd5XtsKg+YROs4GlxMd2G977M
Xr0PDVecVvCSpd4nZg67yKxCx0c+Oq/gz3J+trReeYEFTqtI2H9FwVl8/2dn
H5xjlYrj4BCj4Fn2Vg9Pe59lk5JHZxndVHDze49POl4NYxfXf8p7nqTgniGJ
Dya2O8l0fQPeBaYoOOXf80qsKmam//9r/Hmgn8fPA/o8/H1Avw+/D9D3we8L
9H3xfoDuB+8X6H7xeQA9D3xeQM8LnyfQ88TnDfS88X0AvQ98X0DvC98n0PvE
9w30vnE9AK0HXC9A6wXXE9B6wvUGtN5wPQKtR1yvQOsV1zPQesb1DrTecT8A
7QfcL0D7BfcT0H7C/Qa033A/Au1H3K9A+xX3M9B+xv0OtN9xHgDNA5wXQPMC
5wnQPMF5AzRvcB4BzSOcV0DzCucZ0DzDeQc073AeAs1DnJdA8xLnKdA8xXkL
NG9xHgPNY5zXQPMa5znQPMd5DzTv8TwAOg/wvAA6L/A8ATpP8LwBOm/wPAI6
j/C8Ajqv8DwDOs/wvAM67/A8BDoP8bwEOi/xPAU6T/G8BTpv8TwGOo/xvAY6
r/E8BzrP8bwHOu9RDwDpAdQLQHoB9QSQnkC9AaQ3UI8A6RHUK0B6BfUMkJ5B
vQOkd1APAekh1EtAegn1FJCeQr0FpLdQjwHpMdRrQHoN9RyQnkO9B6T3UA8C
6UHUi0B6EfUkkJ5EvQmkN1GPAulR1KtAehX1LJCeRb0LpHdRDwPpYdTLQHoZ
9TSQnka9zUlvox7npMdRr3PS66jnOel51Puc9D76AU5+AP0CJ7+AfoKTn0C/
wclvoB/h5EfQr3DyK+hnOPkZ9Duc/A76IU5+CP0SJ7+EfoqTn0K/xclvoR/j
5MfQr3Hya+jnOPk59Huc/B76QU5+EP0iJ7+IfpKTn0S/yclvoh/l5EfRr3Ly
q+hnOflZ9Luc/C76YU5+GP0yJ7+MfpqTn0a/zclvox/n5MfRr3Py6+jnOfl5
9Puc/D7mAZzyAMwLOOUFmCdwyhMwb+CUN2AewSmPwLyCU16BeQanPAPzDk55
B+YhnPIQzEs45SWYp3DKUzBv4ZS3YB7DKY/BvIZTXoN5Dqc8B/MeTnkP5kGc
8iDMizjlRZgnccqTMG/ilDdhHsUpj8K8ilNehXkWpzwL8y5OeRfmYZzyMMzL
OOVlmKdxytMwb+OUt2EexymPw7yOU16HeR6nPA/zPk55H+aBnPJAzAs55YWY
J3LKEzFv5JQ3Yh7JKY/EvJJTXol5Jqc8E/NOTnkn5qGc8lDMSznlpZincspT
MW/llLdiHsspj8W8llNei3kupzwX815OeS/mwUB5MObFQHkx5slAeTLmzUB5
M+bRQHk05tVAeTXm2UB5NubdQHk35uFAeTjm5UB5OebpQHk65u1AeTvm8UB5
POb1QHk95vlAeT7m/UB5P/YBQH0A9gVAfQH2CUB9AvYNQH0D9hFAfQT2FUB9
BfYZQH0G9h1AfQf2IUB9CPYlQH0J9ilAfQr2LUB9C/YxQH0M9jVAfQ32OUB9
DvY9QH0P9kFAfRD2RUB9EfZJQH0S9k1AfRP2UUB9FPZVQH0V9llAfRb2XUB9
F/ZhQH0Y9mVAfRn2aUB9GvZtQH0b9nFAfRz2dUB9HfZ5QH0e9n1AfR/2gUB9
IPaFQH0h9olAfSL2jUB9I/aRQH0k9pVAfSX2mUB9JvadQH0n9qFAfSj2pUB9
KfapQH0q9q1AfSv2sUB9LPa1QH0t9rlAfS72vUB9L/bBQH0w9sVAfTH2yUB9
MvbNQH0z9tFAfTT21UB9NfbZQH029t1AfTf24UB9OPblQH059ulAfTr27UB9
O/bxQH089vVAfT32+UB9Pvb9QH0/8gBAPADyAkC8APIEQDwB8gZAvAHyCEA8
AvIKQLwC8gxAPAPyDkC8A/IQQDwE8hJAvATyFEA8BfIWQLwF8hhAPAbyGkC8
BvIcQDwH8h5AvAfyIEA8CPIiQLwI8iRAPAnyJkC8CfIoQDwK8ipAvAryLEA8
C/IuQLwL8jBAPAzyMkC8DPI0QDwN8jZAvA3yOEA8DvI6QLwO8jxAPA/yPkC8
D/JAQDwQ8kJAvBDyREA8EfJGQLwR8khAPBLySkC8EvJMQDwT8k5AvBPyUEA8
FPJSQLwU8lRAPBXyVkC8FfJYQDwW8lpAvBbyXEA8F/JeQLwX8mBAPBjyYkC8
GPJkQDwZ8mZAvBnyaEA8GvJqQLwa8mxAPBvybkC8G/JwQDwc8nJAvBzydEA8
HfJ2QLwd8nhAPB7yekC8HvJ8QDwf8n5AvB/ygEA8IPKCQLwg8oRAPCHyhkC8
IfKIQDwi8opAvCLyjEA8I/KOQLwj8pBAPCTykkC8JPKUQDwl8pZAvCXymEA8
JvKaQLwm8pxAPCfynkC8J/KgQDwo8qJAvCjypEA8KfKmQLwp8qhAPCryqkC8
KvKsQDwr8q5AvCvysEA8LPKyQLws8rRAPC3ytkC8LfK4QDwu8rpAvC7yvEA8
L/K+QLwv8sBAPDDywkC8MPLEQDwx8sZAvDHyyEA8MvLKQLwy8sxAPDPyzkC8
M/LQQDw08tJAvDTy1EA8NfLWQLw18thAPDby2kC8NvLcQDw38t5AvPf/5cH/
B9o4IGw=
                "]], {{{0.1854034637834892, 0.}, {0., -1.}}, {9., 
                0.}}]},
             
             ImageSizeCache->{{150.55637869689582`, 
              168.5582217973382}, {-120.26172100709806`, -44.64063183744665}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.3955597197497367`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.3024713745115624`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.2077255538684386`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "2.093913224917345`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.7362230650517796`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.3955597197497367`}, {
               Style["75%", Bold], 2.3024713745115624`}, {
               Style["median", Bold], 2.2077255538684386`}, {
               Style["25%", Bold], 2.093913224917345}, {
               Style["min", Bold], 1.7362230650517796`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.3176470588235294, 0.6549019607843137, 0.7529411764705882],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
941+z6SWnXdzuNZEPyg4cPWOiDniX79o7ztvT8lHBHv0k657ju7TyjX5Ta8L
+zZenSvCafSj2jurXQ/1Ff/6VRY5TZsGzRPhJ/pZU+xKp37l2gz9rpUZoJ85
X/zrhyX3OV4T6CdCP/TLbh7ccsFiAb+/0E+r7rZ0XS3X5LepJEwfl7pQhKHo
xw1sO1zTz5+fX+jXTQ8zrDAJ4OcH+nlrGpXSqrgejX7fIf+PKw4tEmEK+oG3
K/OZ12L+5+gXfphxqaPeEn4/oJ/Y+UlycQnXT9BvtBmz4XBSoPjXj5x53W+R
a5AIx9GvXGc7YbDGUn7eop+ZctpKzOd6Evqd94y1HyYs+7/r8X9+aN2+1iTn
5fw+Qb9UQ/21j3Iwf17opw7ZnGuRy/UV9Fs9Fc60RK0Q//qxG1Ym5jiEiH/9
2hN1oQnCShHU0c/Nm+flLnOdjX7vlzIHk/BQft6iH6w1zazebpUIL9AvHv5A
9WoL10/QT54z8mtk1moRtNFvjr5SMil4DT8v0Y9Os5S7W4VxjX71kxMpb+u5
voF+dpN+7Ln0cBH+oN/dfXfgmoC14l8/XOrk6mi2ToTz6JfPi7TrUs11Lvrp
sT97lqWsFyEe/fazy9qe8IkQoRD9+MKaD0sNNogQg37999lPhpdzXYl+vv7z
i+2SN4qgi36/w6R/n7pHijAT84AFd9bv14ri6wvzgnj7+QuKuP6BeULmhfHW
idH8vMK84Zn5wN+TY0SIxjyi9Ui3e6qbRMjCvMKo+6/EPK53Y54xZnulV+xm
EWow71jU/q6ZUyxff5iHbF93+mvbLfx9Yl6S1bxdzuE6C/OU0sUrYyPi+HmM
eYvCWw9XKV4EPcxjenmMNGjlWgvzmnEFprVXE0SgPCdwXKes0K3/v8afl+nn
8ffJ9Pvw35Pp38PPI9Pnwc8r0+fF7yPT98HvK9P3xech0/PA5yXT88LnKdPz
xOct0/PG9yHT+8D3JdP7wvcp0/vE9y3T+8b1INN6wPUi03rB9STTesL1JtN6
w/Uo03rE9SrTesX1DLSecb0DrXfcD0D7AfcL0H7B/QS0n3C/Ae033I9A+xH3
K9B+xf0MtJ9xvwPtdzwPgM4DPC+Azgs8T4DOEzxvgM4bPI+AziM8r4DOKzzP
gM4zPO+Azjs8D4HOQzwvgc5LPE+BzlM8b4HOWzyPgc5jPK+Bzms8z+Hvef6/
8x7ovMf7AOg+wPsC6L7A+wToPsH7Bui+wfsI6D7C+wrovsL7DOg+w/sO6L7D
+xDoPsT7Eui+xPsU6D7F+xbovsX7GOg+xvsa6L7G+xzoPsf7Hui+x3oAqB7A
egGoXsB6AqiewHoDqN7AegSoHsF6BahewXoGqJ7Begeo3sF6CKgewnoJqF7C
egqonsJ6C6jewnoMqB7Deg2oXsN6Dqiew3oPqN7DehCoHsR6EahexHoSqJ7E
ehOo3sR6FKgexXoVqF7FehaonsV6F6jexXoYqB7GehmoXsZ6GqiexnobqN7G
ehyoHsd6Hahex3oeqJ7Heh+o3sd+AKgfwH4BqF/AfgKon8B+A6jfwH4EqB/B
fgWoX8F+RqZ+Bvsdmfod7Idk6oewX5KpX8J+SqZ+Cvstmfot7Mdk6sewX5Op
X8N+TqZ+Dvs9mfo97Adl6gexX5SpX8R+UqZ+EvtNmfpN7Edl6kexX5WpX8V+
VqZ+Fvtdmfpd7Idl6oexX5apX8Z+WqZ+Gvttmfpt7Mdl6sexX5f/9uv/6+dl
6uex35ep30c/QCY/AP0CmfwC9BNk8hPQb5DJb0A/QiY/Av0KmfwK9DNk8jPQ
75DJ70A/RCY/BP0SmfwS9FNk8lPQb5HJb0E/RiY/Bv0aIL8G/RwgPwf9HiC/
B/0gID8I/SIgvwj9JCA/Cf0mIL8J/SggPwr9KiC/Cv0sID8L/S4gvwv9MCA/
DP0yIL8M/TQgPw39NiC/Df04ID8O/Togvw79PCA/D/0+IL8P/UAgPxD9QiC/
EP1EID8R/UYgvxH9SCA/Ev1KIL8S/UwgPxP9TiC/E/1QID8U/VIgvxT9VCA/
Ff1WIL8V/VggPxb9WiC/Fv1cID8X/V4gvxf9YCA/GP1iIL8Y/WQgPxn9ZiC/
Gf1oID8a/Wogvxr9bCA/G/1uIL8b/XAgPxz9ciC/HP10ID8d/XYgvx39eCA/
Hv16IL8e/XwgPx/9fiC/H/MAoDwA8wKgvADzBKA8AfMGoLwB8wigPALzCqC8
AvMMoDwD8w6gvAPzEKA8BPMSoLwE8xSgPAXzFqC8BfMYoDwG8xqgvAbzHKA8
B/MeoLwH8yCgPAjzIqC8CPMkoDwJ8yagvAnzKKA8CvMqoLwK8yygPAvzLqC8
C/MwoDwM8zKgvAzzNKA8DfM2oLwN8zigPA7zOqC8DvM8oDwP8z6gvA/zQKA8
EPNCoLwQ80SgPBHzRqC8EfNIoDwS80qgvBLzTKA8E/NOoLwT81CgPBTzUqC8
FPNUoDwV81agvBXzWKA8FvNaoLwW81ygPBfzXqC8F/NgoDwY82KgvBjzZKA8
GfNmoLwZ82igPBrzaqC8GvNsoDwb826gvBvzcKA8HPNyoLwc83SgPB3zdqC8
HfN4oDwe83qgvB7zfKA8H/N+oLwfeQAgHgB5ASBeAHkCIJ4AeQMg3gB5BCAe
AXkFIF4BeQYgngF5ByDeAXkIIB4CeQkgXgJ5CiCeAnkLIN4CeQwgHgN5DZl4
DeQ5ZOI5kPeQifdAHkQmHgR5EZl4EeRJZOJJkDeRiTdBHkUmHgV5FZl4FeRZ
ZOJZkHeRiXdBHkYmHgZ5GZl4GeRpZOJpkLeRibdBHkcmHgd5HZl4HeR5ZOJ5
kPeRifdBHkgmHgh5IZl4IeSJZOKJkDeSiTdCHkkmHgl5JZl4JeSZZOKZkHeS
iXdCHkomHgp5KZl4KeSpZOKpkLeSibdCHksmHgt5LZl4LeS5ZOK5kPeSifdC
HkwmHgx5MZl4MeTJZOLJkDeTiTdDHk0mHg15NZl4NeTZZOLZkHeTiXdDHg6I
h0NeDoiXQ54OiKdD3g6It0MeD4jHQ14PiNdDng+I50PeD4j3Qx4QiAdEXhCI
F0SeEIgnRN4QiDdEHhGIR0ReEYhXRJ4R/vKM/+MdgXhH5CGBeEjkJYF4SeQp
gXhK5C2BeEvkMYF4TOQ1gXhN5DmBeE7kPYF4T+RBgXhQ5EWBeFHkSYF4UuRN
gXhT5FGBeFTyM4hXJb+DeFbkXYF4V/JLiIdFXhaIl0WeFoinJT+GeFvya4jH
RV4XiNdFnheI50XeF4j3Jb+IeGDkhYF4YfKbiCdG3hiINya/inhk5JWBeGXk
mYF4ZvLDiHdGHhqIh0ZeGoiXJr+NeGrkrYF4a+SxgXhs5LWBeG3kuYF4buS9
gXhv5MGBeHDkxYF4ceTJgXhy8iOJN0ceHYhHR14diFdHnh2IZ0feHYh3Rx4e
iIdHXh6Il0eeHoinJz+WeHvya4nHR14fiNdHnh+I50feH4j3x3kAoHkAnBcA
mhfAeQKgeQKcNwCaN8B5BKB5BJxXAJpXwHkGoHkG8sNp3gHnIWSah8B5CZnm
JXCeQqZ5Cpy3kGneAucxZJrHwHkNmeY1cJ5DpnkOnPeQad4D50FkmgfBeRGZ
5kVwnkSmeRKcN5Fp3gTnUWSaR8F5FZnmVXCeRaZ5Fpx3kWneBedhZJqHwXkZ
meZlcJ5GpnkanLeRad4G53Fkmsf5f+d1/g8qnlXH
                "]], {{{
                0.019165286140711963`, 0.}, {0., -1.}}, {10., 0.}}]},
             
             ImageSizeCache->{{119.52608057336474`, 
              215.14576868528434`}, {-141.982885677647, -43.58264584274218}}],
            
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.297755409233028`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.253774296254707`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.2493590221621598`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "2.237324949961137`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "2.1928472622083413`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.297755409233028}, {
               Style["75%", Bold], 2.253774296254707}, {
               Style["median", Bold], 2.2493590221621598`}, {
               Style["25%", Bold], 2.237324949961137}, {
               Style["min", Bold], 2.1928472622083413`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.3176470588235294, 0.6549019607843137, 0.7529411764705882],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
PbnLYsnB7tko61RQCH/b1UEf1kgOE4fLnF84Nbx+u8wDYdskh6XJCTPejFGI
nLTylW7BksNWG6/lhRMVonnV8H16RySH8Iudt36ZoRBP+gRJ905KDvFd3oVW
eiiE4typ3ZvPSg6Pj++PkS1WCOMRtaHDIiWHgr+dbzdZoRC791cY/xklOdTs
qU//e41CFGsyLn88Lzm0VF/TGG9SiA1nfrq9iJAcum9cUt0tUCFKYsu2Pjkh
OQz53amp9Z6G199VZJ0fJjlM88ruaB+iEHZdHa/8vU9y8C7ea+0crhAmfeOP
ewVIDjvchzuPP6MQdfMvlpX7SQ6nXmlnzIxu+HrK3qxziySHG67xy+fHKcQa
q9FPgxuuT9r9hVu9ExTi5fuif2+OkBw+2RuHrb2tECM7HL3W1Vpy0F3PiglI
VYjLlqUbcztIDoYWQbf3PlWI+6Z+VZ8bSQ69Ix0zDmcqRPvRqx6c+qADJ+Nq
zZm3CrHzQWl1rxgduIddro7NV4gjLwZMDlqpA9/m85smfFKINMvINk/76WDv
9nad7nxTiMmWa+9rq+vhvC7D+slvhSi9sjKt+816SPbb6ZxVpxCRmxM/LFxd
D1nfYGauUin8ptg9Tu1dD2ULfi8vaaIU84unRYzT1IEyL3ZrRUulMLT7kNDu
SB20mzo3rK61UtjGqY72G1UH1mmtLzTqpBT1E1aY/1dVCy7OabdbmCuFTW12
6KmzteApAjPaWiiFUbKLXwvXWljXf3BxF1ulaK3Mumv4SwsH4yqqLQYrRfpi
+JR6RAsx5jFNBw5TCotSzZPedlpIOTW707DRStFlhP27ee9r4K2RoY3reKWw
GiS12LS2Bn4EP3OeOk0plnrH1+9tVQON9QJmesxWCtMW3i9j4qrBZPNA76UL
Gt5vVtKCT87VMLD6+1ZfL6VYEGI9wD23CsatiAzzX60UY+R//mvqUwWLSmZd
2LVeKbY969bYrVEV+M8xwJCtShEWprOrPVwJh988zjixSynqOhqMHdKtEuLG
bS6O2q8Unju93Qbe+A0PH/WriT+sFB/T2/eQOf2GvCFfmyafbLg+efdtr2T8
gqqbZzs9OK8UZfmVy+a7/4LmljNs0i8qxci/584bXPITzGJajHx3VSl6t547
ZMKqn2Bv8nCmJkkpoo+mRqfWVsDkoxu9v6UoxRn7r0nx2yrAq6VNQPUjpSiw
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
b6A8QnAeQXmF4LyC8gzBeQblHYLzDspDBOchlJcg5yWUp+D/5in/k7cg5y2U
xyDnMZTXIOc1lOcg5zmU9yDnPZQHIedBlBch50WUJyHnSZQ3IedNlEch51GU
VyHnVZRnIedZlHch512UhyHnYZSXIedllKch52mUtyHnbZTHIedxlNch53WU
5yHneZT3Ied9lAci54GUFyLnhZQnIueJlDci542URyLnkZRXIueVlGci55mU
dyLnnZSHIuehlJci56WUpyLnqZS3IuetlMci57GU1yLntZTnIue5lPci572U
ByPnwZQXI+fFlCcj58mUNyPnzZRHI+fRlFcj59WUZyPn2ZR3I+fdlIcj5+GU
lyPn5ZSnI+fplLcj5+2UxyPn8ZTXI+f1lOcj5/mU9yPn/dQHIPcB1Bcg9wXU
JyD3CdQ3IPcN1Ecg9xHUVyD3FdRnIPcZ1Hcg9x3UhyD3IdSXIPcl1Kcg9ynU
tyD3LdTHIPcx1Nfg//Y1/9PnIPc51Pcg9z3UByH3QdQXIfdF1Cch90nUNyH3
TdRHIfdR1Fch91XUZyH3WdR3Ifdd1Ich92HUlyH3ZdSnIfdp1Lch923UxyH3
cdTXIfd11Och93nU9yH3fdQHIveB1Bci94XUJyL3idQ3IveN1Eci95HUVyL3
ldRnIveZ1Hci953UhyL3odSXIvel1Kci96nUtyL3rdTHIvex1Nci97XU5yL3
udT3Ive91Acj98HUFyP3xdQnI/fJ1Dcj983URyP30dRXI/fV1Gcj99nUdyP3
3dSHI/fh1Jcj9+XUpyP36dS3I/ft1Mcj9/HU1yP39dTnI/f51Pcj9/3EAyDz
AMQLIPMCxBMg8wTEGyDzBsQjIPMIxCsg8wrEMyDzDMQ7IPMOxEMg8xDESyDz
EsRTIPMUxFsg8xbEYyDzGMRrIPMaxHMg8xzEeyDzHsSDIPMgxIsg8yLEkyDz
JMSbIPMmxKMg8yjEqyDzKsSzIPMsxLsg8y7EwyDzMMTLIPMyxNMg8zTE2yDz
NsTjIPM4xOsg8zrE8yDzPMT7IPM+xAMh80DECyHzQsQTIfNExBsh80bEIyHz
SMQrIfNKxDMh80zEOyHzTsRDIfNQxEsh81LEUyHzVMRbIfNWxGMh81jEayHz
WsRzIfNcxHsh817EgyHzYMSLIfNixJMh82TEmyHzZsSjIfNoxKsh82rEsyHz
bMS7IfNuxMMh83DEyyHzcsTTIfN0xNsh83bE4yHzeMTrIfN6xPMh83zE+yHz
fsQDIvOAxAsi84LEEyLzhMQbIvOGxCMi84jEKyLzisQzIvOMxDsi847EQyLz
kMRLIvOSxFMi85TEWyLzlsRjIvOYxGsi85rEcyLznMR7IvOexIMi86DEiyLz
osSTIvOkxJsi86bEoyLzqMSrIvOqxLMi86zEuyLzrsTDIvOwxMsi87LE0yLz
tMTbIvO2xOMi87jE6yLzusTzIvO8xPsi877EAyPzwMQLI/PC/y9P/H8Adjbj
qg==
                "]], {{{0.2001221219824375, 0.}, {0., -1.}}, {11., 0.}}]},
             
             ImageSizeCache->{{166.0421100893316, 
              184.1869879337327}, {-136.47565027611904`, -49.42764066536655}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.59826627967367`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.51076759095535`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.373812528844054`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "2.248590633508006`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.8806020889348427`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.59826627967367}, {
               Style["75%", Bold], 2.51076759095535}, {
               Style["median", Bold], 2.373812528844054}, {
               Style["25%", Bold], 2.248590633508006}, {
               Style["min", Bold], 1.8806020889348427`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, {}, {}, {}, 
        {GrayLevel[
          NCache[
           Rational[5, 6], 0.8333333333333334]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlm3dYz23497+jHcpOkT0jRfa4PihkpxKy7sge3bLdZvZqGGkPKcmsCI3z
KjtESzIr7SjafefTc/zO8/fH8/jH0VFHfcZ1ndd7vL69XbYtdJWIRCIdqUj0
f/+nf24DTY38z7RA37Y/Sn4EhLOOlyvUfy+2gEX2ofMGxyPYQ8mDMtugFpje
raS2p18kW+x2+H1YZAu8naV5XfX5BpN/m53QcrcFDJdM7/NwbgwLnt01xO5x
C3Rzfnd3c/1tNuVx0YnotBY40Thkh+WGe6x4wJ2t4rctoEjYrd7TcJ+duLR3
0ZLcFijvNjL/WWgcGyyxmXz/ewskas9t+rj5AXu7zXCAbnkL3Ix63WafcwLb
+u1L23/+toBrJ1fNw1sfs/azoxoeyVqga69SRx6VyOIfbf9mqCGD9wNMenfR
TWFOAyY/X99WBisWNRgNn8WZ7KLubd5FBue33XJ9cj2VBYpzLxn1kkG99d+o
bkZPGdsW+p/bYBk8c9ArHB3+jBV93bTm1QgZLDbfaNhs/YIdmzVmTq+JMlho
YZ45SfyKDXwksdpjIwPN5mflhXmvWXr/DJMP82RQGZjz6sHrN2zLRT/poMUy
qKt5qnUk7x0zELtWHfpHBhHS9BK16AOL3WqRnbdRBhW3DoX86ZfJHL/Knwzf
IYPbE841FzllsWbbl+EnD8jAYcvfPj39s5l/gs+ZHydkcDVorntxVQ6b1H/F
9jFeMvDdNyd4/dyPrMBn8FJPPxlIzWsUH1PymIeoYUpZuAyM977Kny/ks/5b
+WB2SwZf7zq+Lsv8zF59Odve94EM5kyLMIhy/8o22Tq1VKfIwLbXjs6n+39n
7RL6FE5/JYP5xuKa/WU/2L1+1a+CM2VgOGWm/O7XAmbv8/he42cZlL9xTfF4
V8ga1ceuziuWwaDkDTNNXhQxvy0LDkf+loHGgyo3uxc/2YQvJutVjTKYOLvk
W8u7YvZ9Ztn8RSI5zI2yMyz8WsKOPIwdc0dXDgHjog+9rS1l/fod7KnVUQ6r
Cu8+22dQzl5422qv6C4HM4uy7GsjKtgGdaeaB/3lII7LmNHiXMnabCn42Ha4
HD4e/PtkwNkqdvdzTIrrWDlEG1+0zIJfzG7m7sjkKXLwiQ32CWz5zeofTL3Q
ebYctryYNbzP2Brm27fdri0OcrhevvjWgUl/2Hjv/OXPl8vhS/8xR74X/GFf
VRE2PdbJYeeMs48Ux/+yQ5vdhu10kwN0Dt8bOrSW9fk8ofO7vXJw3Z1p551T
y57N0Fb285DDnTVmflcO1LF1D7KK/zsnh7bF1fm7B9Yzvb7Bb3MuyyHmxMNx
ysx6dttrQ/zQEDk4/ln4s+a/BrZAZRV47IYc9vhauhkPamS1m0THvt6XQ+z6
fgtssxvZ5fw3m6wS5eAbssh89sEmNnaGr/25Z3LoNHr0wr+DmtnneJcJxe/k
UCUykhtkN7MDfcz7TsyTQ3KXlQ8O/tfCenm16F0qkEN+UGOUUX8Ze6p8VltV
IYcBMU2fkt7K2NpNXp+n1cnh8NHV6+e5y5lOvnNagEIOlta/Id5IwWKmD7xZ
p6mA2g/FD78kKdi8+Frv2QYKeDZ7W3TcSiX70ztl7zUjBeRUOx21FKvYRc/T
/8h7K+BlZMnDeWEqNlrpYGtvpoCzL6db6Qpqlr+xl2WMlQIWZM+evPqbmv33
qcpIOlkBYQNuhtyfKBJMpyeInGcoYNXElGe6Z0RCatzR8tgFCnDpFqGR+lEk
rOk974PeUgWYBBk3/OgjFrQ8uz1yWa2AdnmlV9y2ioVoRXHIk80K2JorMjn4
WCzM2XjvZIddCtjd6XtYJw2JUJO3f9vGQwr4uWdDgzBPIvjYzHBKO6UAuxNz
JxtelQhWcR2YsY8CDlXOfOBZKBHyen0fsD1AAcUjnezeDpEK+y5Et0uPUMBV
p5PuWe5SobtiR2PvOwqIs17nfTtJKsAG4fveBAV4Vzd+X6epIbjk6b/I5AoI
Su7RojtPQ9C0ybs9OL31fvWueftf0RBuxIZfPpKtAJnG7R6mPzSEWb22Hsj/
qoDYtq9PXhmoKfw+P87VslQB47ocKJW4aQpeco25p2sUUFmxdOzKR5rCiA0f
rAqbFZC399iACJGWkPsxoPs4iRJGLPbIeDFTS9hjvU7DW18JGddtLj3y0hJM
Ykf8Ku+khH9/qxVrP2kJKT1V2YKpEnzrgi4m9tQWVp1/nXh1oBJ8fB3yAtZq
C1L5pWt/LJRw5sVbq4pb2kLk+lVnZ45XQun+aXpHarWFmR/N3EOnKeGoxbeH
E8foCFXTmpY2z1FC4tQ5D/7u0xEu3E+bumCREuYMTU/9N1lHsOh5YciNlUrw
HDxN/6xKR8g+t6SDaIMSrO+6b9OZrCvskvWTOW1XwqTOvqn39+sK3db/Kby7
XwnBwQNN5iToCkm5ia+1jyuhXVn70f5/dIUV007eX3lBCR26h71fNlBPEN9f
6Jfgq4SlUfM62jvrCRGmpkcMwpQwf83JNhPO6QnTz1WsX3dTCfK9LqZZj/WE
ipb4BRCnBPXTEYdzf+oJ59YdHts1WQldAt4kS/T0heG5s3tte6GEKUrr8UZD
9YWsqV11Xr5XQlKiOD7XVl/Yca+oxjS/9f694l8pXPSFrqZ38nYVKeF3keke
u936wpOzeyGjSgnp/jYR/if0hWUt1lEDGpQgivx2PtxLX1CvNfQ8qFLCxIdP
Zo+5rC+E53zZ9VFbBb27d51odklfsJkatcK8vQqMlgdsdTyvL5Tf3T79hLEK
BstMtXwO6wtnekw2/95XBRVBlt5pW/SFYWd1u4wepgIz60uLMxz0hQ/NOcrz
o1Ww1K84PHyUvrB9bWhJCVPB+e35v0YY6gudcza9m2SrgksHznfeW6wnPJoy
5sHlhSr4wncc3BmrJzjflQT9dlZBh6zHpsP36Qmq7hnHbFxVULih4HTcBD0h
9Izf5qCtrdfzPKaiS5OuMK15jUPDbhUYxK+rcr+lK5S6Wkyce0QFxyuzQquc
dYVT2fK+18+o4N8UbcfrmrqC2ZSX+sqLKrCP+OaYEa0jZNzxqXMIUsEZoyWx
fjN1hH+7r/hyK1IFkdWfqlmRttDpzOCnGvdUMKHhxV3VLm3hYVP9zWWPVeA5
JdLZSFtbWOLKfeLTVPDXeNODbB8tQZF1dl+btyowHt/Vbb+xlhAsOLmsyVXB
xvTQpOXBmsKUO31mJX1v/ZqNzH5jqikUm1RbdipXwSS/73u6BWoIJ08/7rb5
rwqS+7w9GthFQxjSdEz8TKaCzt0MFt+6IBXerllQYaKhBq8e/dzDNKTCtiyT
TPe2akitMSvO2SMROghlj950UUO3guKckCqxEH87NrRvLzV4FC41cF4uFpxM
Dp7aP1gN/ywce2pFhkiQnbJ1yx7R+vMp3r9FTCQENXZabDZRDSbulTvNV6qZ
sKaAediooXt8SWS5oGJFmTEDv8xTw7CMg9aZfZXsONttMHKxGo4MkB3z0FGw
QbenNp35Rw132wvLL9XIWLpxux9FG9VwzzWwxju/hW05lf9i/A41RNpr6Utf
NjPDxog7PgfUUBPmmLj2UROLXe12pfKEGvruDq4ceaeRLcqccHCqlxok1mkd
8280sObJ2mv9/dTQstVEK+lGPQu4lTW3Nrz1/r0lT8bdqWOTjYNHzbqlhuHJ
L0dFPq5lBSc39Ah/oAb/8/r6dm/+Mo8GK01Zihp2Nhx33/XzDxuwWvTb7pUa
pFYxQ+dL/rBXH97kRGeqIclp3hiTBdVs82TfJPEXNaw91cEiLvoXa3fLJWJJ
cevX2vWjr7evYve7mZ+7/1sNGXFW+r1OVTCHky3uuk1qmGfbOXtq23K2f1/R
bQuRiNsPkL/sEVbK5li+CvuqIeLSE9v+xk4rYablty+f0hVxo2uPfzXW/2Q1
wRdPW7UT8bL8zymZ8UUs1XHvgYIOIn5BlXKnp0ch82mz8t9zXUV8oODRP3Zl
AVvz1Np1bHcRHzn+cv+wS9/ZqH1DlhT3EnHDUSsjtx//yrQsDed69W/9/lDV
MBvvz+xTWYMwcYiIXxzfznNXwicWHfzFqtxcxNPt3mY5NX1k+xxTB10aKeJ6
73PqzRfksjltoroLY0X8/pONF8emZrMeT88Z/poo4re6yr2jbbNY9d7tGlen
iHhl3y8x98o/MG6xuHnadBHPWdK1qmb8e+ZdNulXzSwR73DM7MqcjLfMJbhv
QcB8EXfmTxxST6czK0fdnBkOIl5QbfT3yqZXTLNNzcu6xSLeya9xddftL9jH
tJzEkOUifm7pDh2vgGfsxt4nd2e7iLiV5+gI+9I0ttci9FrTWhHfEnJtWtKC
VDa77LjvtU0iHtwQn7skFlj34E1n57uJOJh7jR2gSGLVDnaH5Dtary+x7+YP
+58w0B/jHrVXxHcvDJnvav6IeaV1X2d/UMQX80sa7do/ZC57Jc7qoyKuSpz5
on3veDbSonxezMnW3yeu/i/POZZplL2b6nROxEOtjduXpdxjH4PiRku9Rbxh
R652rucdFuXgN+TuZRH31Hweurwihu3RP2Tq7N96vaW9R9meiGaz0tZ00A5p
XQ+9NVxSXaKYyd5ZWnHXRNwlJO312P3X2a/hFrIVN0R8krjnvk1vr7GU0s7V
erdFPMPR3XClfTjzDJIXPrwv4jLLo9dc2oaxfxwKc10einjFs17zQ2pC2Aj9
l6/bJYr4qGU3Asx6BzONtFvJT0DEE3pMrx95O5Dl7vG5v/aZiGce7Ptxj2cA
ixy+53qH1yL+epNf0Ibn/mxP6XK/lHci7jVmxjHRXH9mGzTt/MYsEX9f736O
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
3oHWO+4HoP2A+wVov+B+AtpPuN+A9hvuR6D9iPsV/ne//s9+BtrPuN+B9jvO
A6B5gPMCaF7gPAGaJzhvgOYNziOgeYTzCmhe4TwDmmc474DmHc5DoHmI8xJo
XuI8BZqnOG+B5i3OY6B5jPMaaF7jPAea5zjvgeY9ngdA5wGeF0DnBZ4nQOcJ
njdA5w2eR0DnEZ5XQOcVnmdA5xmed0DnHZ6HQOchnpdA5yWep0DnKZ63QOct
nsdA5zGe10DnNZ7nQOc5nvdA5z3qASA9gHoBSC+gngDSE6g3gPQG6hEgPYJ6
BUivoJ4B0jOod4D0DuohID2EeglIL6GeAtJTqLeA9BbqMSA9hnoNSK+hngPS
c6j3gPQe6kEgPYh6EUgvop4E0pOoN4H0JupRID2KehVIr6KeBdKzqHeB9C7q
YSA9jHoZSC+jngbS06i3gfQ26nEgPY56HUivo54H0vOo94H0PvoBID+AfgHI
L6CfAPIT6DeA/Ab6ESA/gn4FyK+gnwHyM+h3gPwO+iEgP4R+CcgvoZ8C8lPo
t4D8FvoxID+Gfg3Ir6GfA/Jz6PeA/B76QSA/iH4RyC+inwTyk+g3gfwm+lEg
P4p+Fcivop8F8rPod4H8LvphID+MfhnIL6OfBvLT6LeB/Db6cSA/jn4dyK+j
nwfy8+j3gfw+5gFAeQDmBUB5AeYJQHkC5g1AeQPmEUB5BOYVQHkF5hlAeQbm
HUB5B+YhQHkI5iVAeQnmKUB5CuYtQHkL5jFAeQzmNUB5DeY5QHkO5j1AeQ/m
QUB5EOZFQHkR5klAeRLmTUB5E+ZRQHkU5lVAeRXmWUB5FuZdQHkX5mFAeRjm
ZUB5GeZpQHka5m1AeRvmcUB5HOZ1QHkd5nlAeR7mfUB5H+aBQHkg5oVAeSHm
iUB5IuaNQHkj5pFAeSTmlUB5JeaZQHkm5p1AeSfmoUB5KOalQHkp5qlAeSrm
rUB5K+axQHks5rVAeS3muUB5Lua9QHkv5sFAeTDmxUB5MebJQHky5s1AeTPm
0UB5NObVQHk15tlAeTbm3UB5N+bhQHk45uVAeTnm6UB5OubtQHk75vFAeTzm
9UB5Peb5QHk+5v1AeT/2AUB9APYFQH0B9glAfQL2DUB9A/YRQH0E9hVAfQX2
GUB9BvYdQH0H9iFAfQj2JUB9CfYp8L99yv/0LUB9C/YxQH0M9jVAfQ32OUB9
DvY9QH0P9kFAfRD2RUB9EfZJQH0S9k1AfRP2UUB9FPZVQH0V9llAfRb2XUB9
F/ZhQH0Y9mVAfRn2aUB9GvZtQH0b9nFAfRz2dUB9HfZ5QH0e9n1AfR/2gUB9
IPaFQH0h9olAfSL2jUB9I/aRQH0k9pVAfSX2mUB9JvadnPpO7EM59aHYl3Lq
S7FP5dSnYt/KqW/FPpZTH4t9Lae+FvtcTn0u9r2c+l7sgzn1wdgXc+qLsU/m
1Cdj38ypb8Y+mlMfjX01p74a+2xOfTb23Zz6buzDOfXh2Jdz6suxT+fUp2Pf
zqlvxz6eUx+PfT2nvh77fE59Pvb9nPp+5AE48QDIC3DiBZAn4MQTIG/AiTdA
HoETj4C8AideAXkGTjwD8g6ceAfkITjxEMhLcOIlkKfgxFMgb8GJt0AegxOP
gbwGJ14DeQ5OPAfyHpx4D+RBOPEgyItw4kWQJ+HEkyBvwok3QR6FE4+CvAon
XgV5Fk48C/IunHgX5GE48TDIy3DiZZCn4cTTIG/DibdBHocTj4O8DideB3ke
TjwP8j6ceB/kgTjxQMgLceKFkCfixBMhb8SJN0IeiROPhLwSJ14JeSZOPBPy
Tpx4J+ShOPFQyEtx4qWQp+LEUyFvxYm3Qh6LE4+FvBYnXgt5Lk48F/JenHgv
5ME48WDIi3HixZAn48STIW/GiTdDHo0Tj4a8GideDXk2Tjwb8m6ceDfk4Tjx
cMjLAfFyyNMB8XTI2wHxdsjjAfF4yOsB8XrI8wHxfMj7AfF+yAMC8YDICwLx
gsgTAvGEyBsC8YbIIwLxiMgrAvGKyDMC8YzIOwLxjshDAvGQyEsC8ZLIUwLx
lMhbAvGWyGMC8ZjIawLxmshzAvGcyHsC8Z7IgwLxoMiLAvGiyJMC8aTImwLx
psijAvGoyKsC8arIswLxrMi7AvGuyMMC8bDIywLxssjTAvG0yNsC8bbI4wLx
uMjrAvG6yPMC8bzI+wLxvsgDA/HAyAsD8cLIEwPxxMgbA/HGyCMD8cjIKwPx
ysgzA/HMyDsD8c7IQwPx0MhLA/HSyFMD8dTIWwPx1shjA/HYyGsD8drIcwPx
3Mh7A/HeyIMD8eDIiwPx4siTA/HkyJsD8ebIowPx6MirA/HqyLMD8ezIuwPx
7sjDA/HwyMsD8fLI0wPx9MjbA/H2yOMD8fjI6wPx+sjzA/H8yPsD8f74eQCg
zwPg5wWAPi+AnycA+jzB//t5g/8DwuU8pA==
                "]], {{{
                0.12084792950950189`, 0.}, {0., -1.}}, {15., 0.}}]},
             
             ImageSizeCache->{{193.91102755367018`, 
              218.54706552705468`}, {-116.34627357582812`, \
-43.49899434275994}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.30197616866182`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "1.8986605361680775`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "1.8851719654203163`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.7734857880548829`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.7734857880548829`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.30197616866182}, {
               Style["75%", Bold], 1.8986605361680775`}, {
               Style["median", Bold], 1.8851719654203163`}, {
               Style["25%", Bold], 1.7734857880548829`}, {
               Style["min", Bold], 1.7734857880548829`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.8941176470588236, 0.7098039215686275, 0.7490196078431373],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlm3lYTevbxxt35iHjEYqoY8pMRM8yZ8g8xDGGzGRMZEgJRYhkyBgJRegk
43chkjGKSJrncQ/tHRJv7/W7798f73v+cXXtzm7vtdbz3N/h87RzXjN5sYGe
nl5bQz29//2X/3vb7fXmoVXfMNdn6vzoJWfFh4tbo7tbpmG47eQlr/acF5/M
ulS0HpuGGUUrZn/1DREpASk966xPQ/GczTtdH18SabV911SeTMPBUVPGXbYJ
E1k7B0TkPEmDiVHy9t+froq8yoKi90Vp2DYj7VnVowhRvPr43zBNR7PKbR3P
bowU5bmjXMIHpuOEw84rY3rcEprZlSEnnNNhaLqq/p/GUeJ7Ymimj286vqX/
OTqxTbT4NWa6+YZb6bj9YP2+/KkxQu+J8ZwFKelIlhc6br9/T+wKnuVorZ8B
uwFL26VPeSiMnHqVtGmWAf/de1+5NpKFT5M6fk07ZUB1K9zuTcBjUetdZqe6
gzMQEmv3a26vp8LX9+4L/UkZGHzwavVBZayoN/Lwku+LMmDuYbo27+1z4a+/
TFG+OQPDl37WfHr7QjR6KF3K3Z8Bdal33HvVS3Fkc8vhqecyMLP1l1XSgDei
WR9l1oeoDPQwM23nFfpOBJXHeca/yID3oaBmbm3ei7+unbWQUzNgq31zMHvr
B3HKxQ3RygyszztebVGeKNq0nzA3wigTbnP3toDbR3H2m1V1SMtM2Pa48WZI
82TR/sTvUye7ZuLpExnmrz6Li1M/DTwsZSKo/o9b8rEUYdXo+pc9UzOx061F
bQ/3VBH2avfm7UtrXt9UYhe0Pk103jOnxUaPTIRPCexxYWiGCB/aN3rFoZrX
0XnOxBmZwuZ3vWnOFzMhOy+6+sUtS0TezdE4xWQi/os2re/FbNFr44OACa8z
Maj+5yUTU3NEVI+jPUdmZMLcXn5tYpEn+pWsSBhUkQmnjV/7dFuTL2IuD1vT
u1YWxp9KqPaKLxADF5o16Nw6C9f3/nR5bFMkHrTVhFv0yIJH1e3J+88UC5Hy
cmyL4VlY5rrWfFvLUvE48EJRfacszN4snWwTXCaGTdqyz2hlFhLC6vlsaKoU
z+pN/rtqRxZWDz/b0ypdKUa96BSnOpIFRUzyoMQIlYj30ncpuJyFk1/uDeqw
Uy3GiS9G6fez8G7K1e73p2nE25+RIR/fZWGDU/23vW0qxMTovUNfZ2eh2fIR
RZa1teLD2vmZTyqzcGrn03SzPK2Y2s1259262Zh6v7DR5Vid+FTQ0DzSPBt3
MwetH3exUjhdzH8Y2jsbiQdFp4Pe30XKPMw+PSobHnutO5Uv+iFmmwVVHfkn
GxaPNpQXDv8p0j6tPum7Jhv2EaMHVVlWifkBIwd4emVjZ1v7lNP6v0SWY9vP
bkHZ+PJWWjXu2y+xqLZu0+pr2Zg+9ueoXdHVIi/2TbPFyMaP34YjH+z/LZbu
vBT1T2I2VBs6X3Gf90cU2W2bMjk/G4avS7a2baEnraycqnaoysb+xLmrRnro
SeW3uh4WDXNwV/Fy6880PWntaqMe/SxzMGCC/0JDoS9pOqW+7do/B2+b1e3V
LVhf2ph7e5Xl2BxYnj8eNkqnL1We86vXal4OQkIqTlg5GkhbZi+81mh9Dpad
Mx9y4ZyB9KuF3RiTPTlwt795KEhpIG1PNC2sPpmDSk2Ue8EgQ0nvYNGeius5
mHreppPHbkNp15gnVsVPat4/0s1OvDSUjBQnn2V+ykHEj5gcy7pGks/jtYs+
F+Ug4ffX+u0djKRa20Ybvvudg8nhLov7expJvrbtLjwzzcXyxHcLl0QbSfUq
vksPrHIxcFXl0Pv5RpL/jYT0WwNz8X3N/oIhzYylRivCtl8Zn4u/rcY8bSiM
pQCrnW3OOedi+riWp+wXG0tNs2Y8OLYpF2sX2k0t3WMsHTvd/Z8DvrmYPzb3
krhsLLWcafLT60wu2lcdj53z1Fg61TT9+JZbuZgUptPbkGostUmI7r/2eS72
e17+55baWDrr5/9pSUouUtKlhuMUCqndKJeNc8tyMb5188ZuLRRSiIF902kG
eRhwob7vCiuFZPWo2e2xzfPwRO+Kw8LeCinMvXTS0M552Dtqb7cT9gqpc99n
Slv7PDzyeX7EwUEhhSuDD3afnIckn7PR4RMVkk34BhsrlzwcXvqtmZ6TQopc
Mu5N6y15iDkelLJ1rkLqZdlhZRP/PNQ1Txw8Y5FCikqrqlPnQh6Onzumfr5M
IfU7mXhFLzoP98cbBP5arZBipl1zqIzPQ+oMrbnVBoU0sLFXfum3PCgElq9y
V0gPXs/yyVHlQS9+bGTldoVkv7dXx6/G+fAy6dAu11shycPqxL7/Kx8rTvp4
TvRTSEP/ZDq/6JYPh+gHSeMDFFLsvbv6GJIPqw43m5efUEijNh0+9++0fDge
vGo08IJCiu+5TIQvy8eG9dnantcU0thSKe3CtnzUG3Yo9kOUQnoT1nLbicP5
CFsQE9cYCmnCIqXZoUv5WJ3YMu1bvEL6YP7ins/dfKQeaulr/lEhTf16dua2
N/kY8Dm07d0MhfTpmNv39Zn5aN09/JdPiUJymjwhaLk2HyvD9mTM+66QUupb
91tQuwBa4xz7ZkYm0uz430kz2hTA1MQocn1DEynN+9P68T0L0GPQ1qXDWplI
86XrpiNGFMAxsN0jhw4mUlbV7pt2MwswoU3JneHdTKRFd+ZM7LWqAKuX9r2s
7WMi5a3rW/63ZwHeBOa8aGFnIi21qe9vHliA1GcvSxYLE6moMKdr8ysF2JLu
0e7kEBNp5aUHr+o9LMCgiCzn1TU/l80/utzwfQEClOGjT9ubSK6tV9b+mVOA
n2ZZd7NsTSR18rAw5fcCBP+J8v/V3UTaeMRsVH69Qqx8kTnkmqWJVDlek/vN
ohCHLFL332piIrnXeeWd1KcQlsldDVL+KKSqZxcsXzkUomnZxtOl+Qppm+eW
J49n1/z/6kiHR68Ukt7gyQtiXAthdH32tPY192fX9056N7wLoW29oUC7WyEZ
RemfvXS8EKODeziZzVZIPmu+DA4OL8Q27dMtW7sppFpdbqYGyIWoG7Yw1/in
seSbt3frvqRC7DPqZnbzsbFU78L8VjsLCuEcffzaFm9jyX+O7d1Nvwpx58RC
acnQmvX8VyOnVY2K0POY/qldVUZSQFK+bmGHIlQ3+uaZfsNIanoIgbNsi9D3
zfvTQfOMpGNjg/pMGleEqj4eDq/qGEktTdYkjppfhAjvNuPO3zSUTj4Zuc5+
QxFWRP8IHDnVUGq9vW3jvnuLEFPaJ7VUbSCdGaC70SW4CPrWU2zfHTCQLLRv
xrePLMLnV4F3rDsaSBciL5W2jC3Caoc9WbZ39SWrldv2N/xchLybTQc7jNGX
wqyndVGUFMEm45x85rOe1Dm768tff4owuJ7XpL2L9KTwM0bLNE2Ka+b/S+fQ
1D/CZlaqSZF1MSrd89LPlPwWkc2iQjPsivFEOhQd/KNa9HrvNyJ5QjE6VhVl
DTOqFlH7F+a8WViMVR+1Ybb1f4l+DnZesW7FON0/yattsyoRY9ik/X2/Yqxz
f9Y2qPVPMRBF8s2zxSjLLZ85pMMP8WDLk3lht4sRsLFsdkzX78K+38nfZ+KK
8bnt55iAfpVCVq09Hfi1GLFdB51aMFQnhtbMsf3lxdgUOKlJ5EStiF3a7usu
wxI433JabuBcIUZ2+OHu3qIE2tTygx83acSL9ISWrl1KUKfdt5NnDqrFmFNh
d1xEze/bBcx9Ga4Sr6fvnD5nSgn0u29s9vCtUow3ddJOWVKC5y12iIvF5SLh
TfejY7aWYPFwy4g7w8vE1H0mvYccLMGtq2NzR14pEZ+Gp7/vH1Lz934/r/vh
r2LhpHfH1eZOCUqXvK8fd6xQpNz3b9jxVc3rOdUpnhYFYraby3Wz9BJcczn/
cNydPJHWy97RVFOCTm4DEub/kyvmlzUrqWVSistPLQ7k1csRWVdKff+0KsWQ
4Ocbda+yxKLFzzrpbEoxfYrf2xPHM0WexekXJUNLcbB45spX6zLE0tQNS7Kn
l0Kx06a9KipNFAWNU6QsL8W72Q3CDM+mipVTOlxK2F6K7oNvWm0OSRFlDX4N
iwsoxZTgIZ+zHn8Wri8Tsx6GlsJ3t9PK2B+fhHr3Nc+oe6WwujfXYP+Yj2LD
EC+La29LMfFx4/YnbicK3a9ZOJ9VimcNiyIG9/kgNsf0mntcV4rk5ttf4VWC
+Lm+TrV/nTKUDXvicUf9Vnh0zzq1u20ZJkU9W+S3+bXQK7470KNXGULbVeZM
t34pdoUe/rJuZBlKRvRsurI6Thg5L9u8bFYZTnWOPd38xzPh02ZIi/mry7Bq
d8Nu+1vGilpfWkZP31WGXgGeFtKsJ8L3qHKq47GyGj25OHDrA1nUm/hCM+xq
Ga7HF03BlkfCv+65gIGPyjC6ZVJRSPR90SjOrWfPD2WYqeodOavTXRGwa0KC
dV4Z6s3Sswx/Fy2a2luvafuzDEcWpc7YFBoljv34Xb9Zg3IsKqyz4sbVW6Ll
v5/C67YvR8rsLoeXfIkUJ12vjzXoV460352CAuddF627+hR9H12OD9Ej/IZP
vybO5M/ZVz6nHGGy4+Orh8OERUjfv/PWluPM/TqFSfVCxYW59eNSd5fDp2rW
sQZPQ0SHVrmLE0+UY12bXfeybpwXoR8fGL2MKMehEW1n9j9zVvx9+GiI/Lgc
DQ/rndo9IFiEj1s59M7Hcqw63PeK6HxC2NQanhlRWI7rSfbn1iw7JiKfmu28
WF2OfRddJu4qPyJOwP3gm1pKPJ+Sm/co5rCYdTo37YWpEkP9m3rd8TgozLZO
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
WrRaIxJbPv8adrwC7Z+PLA/urBFHdT27XLxQgT0Wlg0S0tViWtLpLWfDaz7v
4zWPk/3Vovmt2i9PRlfgleeDsPq2apF8cONfx+QKXFfWP5fwVSWOr8pcevhl
zfsNDmzivUUlZo51jNmfVIEG8a8dDzZViVad7prsTatAUGXU49lXlSJV0XGG
V0EFzo8omzxzkFKczjkUul1dAcWmxIH5geVi7pNfWvdfFVhkDI9+EWXC/NzS
ERsVWnReOUvaiVKRsS3pqGsjLTzzpgaGvCkR5/+Rcla00sLX+tO6bZ+LhfOA
8N5LOmixbc2xdfkZRcKyRUsvZxstblw2Ph2dXyhyKrw+zLHVwsDsnsO90gJx
6UN5u5lDtTDWtWh4X5MvXCL/WTt1nBaO8cnJ7j/zhLV/nDxhuhbtfsT+um6Q
JwpW9G40dr4WfTc98qldP1dcGX123sjlWqxc+a+3Taua9Wxd98aQDVp8S2qx
LaZztuhi7PZ70HYtvtaL/9FPZInSrCxH2701r1/ztLFxyhTX5fGnewdo4XG1
893mmzLEmjP3SmyCtdjg16DyXq900cPDalDn0JrP09avVZz3N6GaGeDXMVKL
C9du+P7K+ipu9f+dYnFPC21ZwK0yxxSxvtnyzq1jtYiu07N9q+efRR/NR/cW
b7WoXq4zyx2bLLQJQ+JNP2sx9UvM8HPpH0X09YiWDbK0uHXYb90ezyThtv+v
pbVLtPhy89GxJz0The3y3XeMdFq0+jQGLsr34scolUJPT4dNe/O6uD1MEPc6
zpleVVuHHaJF3uue78RWw/hLuiY6HEjyc+lu/EYMyuyjVbXR4UIPr5OoeCmq
H50bXmqtQ8K6FSPr68WLR8H1jhb01KFqdWHUIas4sWPL5uxsOx36/jvENmLJ
MyE55fRKH6GDZcbmi7efPBX6/SbuSpmgw7byZg9z+j0RT5o8eP9xpg5Tx2sO
r38qC2+Vdbv3C3XIMGzv3/DdIzHi3RHX16t0yIqM3bNj+AOhiPiDODcdvPf1
8l+ce1fE+a5o+NRThw6Ty2Nyb9wRe5cmz33kp0PAN+fFbS78K0aPHHb9bqAO
f/5OOGt177ao0+FGddRZHW6U7xhlprspXumbOUZe0cGhu15pi6mRYn+6T/C1
2zoMDJ6W5HExQjg+VBeHPtRhS3r8UtdvV0WDU3PtLsTp8Ov68iTXCWHi3eaX
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
AT5vQecxwOcx6LwG+LzG/z3P8T/eL2pe
                "]], {{{0.14333059596542846`,
                 0.}, {0., -0.9999999999999999}}, {21.83333333333333, 
                5.551115123125783*^-17}}]},
             
             ImageSizeCache->{{248.73468942714578`, 
              270.031270210416}, {-50.19550215496476, 24.7095387166398}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.2665763880682075`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.8179792794474716`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.7881057069086638`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.6903317667725406`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.6426815212834321`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.2665763880682075`}, {
               Style["75%", Bold], 0.8179792794474716}, {
               Style["median", Bold], 0.7881057069086638}, {
               Style["25%", Bold], 0.6903317667725406}, {
               Style["min", Bold], 0.6426815212834321}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnc81+v7xxFSIuuT0tDQkIqGBtV9aygVSkN7aGoqpZS00amTtGgeLY2j
TVvXLSlREpEipRSfPRJS9PN7fK/r+8fvd/445+HB4fN+v+/3NZ6vZ4eAVX4L
DfT09DIa/vW//6V/opbOmzjoRQU8n65wTIy4worzDg88l18B8VMWl+/4fY25
DMls2/xjBSweXf5pm88Ntiuh3mBjRQU4qJ+7LEm+yd4171tRpq2AQwvu9Iru
m8R6hi5+6furAtil3oPaZCaz7Z+P37xvKIVdo8+e7brxDisYmxPb2VwKM8yl
Pg9G3GPdkw0377eVwgfTHZmfuj9g4e0GBfxqL4VedWuWx/dMYXmRK0Yt6i6F
yPzSuXo+wLpqT/d43VcKO++ufbftqWCbphdYDh4iha9O+hff/EhlOWlNqxM8
pRDVsWjHOtc05tCTFVuOl0K9878jSnY9YRuOBKeGTZNCSsQzl13l6ezlnwsJ
5QFS6DL+a1jx9GesQ2DxHr/lUsg+fevlhE8ZbF2uxeqUdVKIDg586L0hk2W6
j5zSbYsU9p6cNKdvpxes3flQ94NRUhj8KPTtnNKXbI351fb1MVJIyJpY5njr
FXu6/rNR4HEprFLOhqAXOax1aQt53jkpLG1t9Gjx89ds1ZixOUOvSuFatP3J
Yzm5LO3WluRLd6Sw+15vpy6f81jLtknHbFKlEJ5RHN+j/g1bHlGxZUumFLSK
WW+SHAqYULdZKMuTwgX2NOT15LdMMm3CmMkfpPB2W+qxmJhCFvh4l7P4JoWp
Hm8D6t6+YylO922cNFI4leP5pL1jEbM6rPp5+KcUnq6OCNDuLGaL6jt+1Gsk
g9w54B8o/8DuL/Z/sqyZDH5Zm+kiZ35k5q/3XCqQyGBCQcSADss/sfluYp+H
vQzUlcOthjqXsjtnK4MTu8lgUEDlpEPVpczUzHGabR8ZpIzxC2yZ/pnNDZk1
dLu7DDat6N82JfYLS/oY00k5QgY+W7aK4FVlzMTrqclUHxlkfZo2sse4r2zm
zVrlY38ZPN62MyC/5zd2o7VzXs95Mjh9Ye6dmTblzGjX/LtxS2Ww39BHe/VP
OZuuij3ZaK0MNns01t1RV7Cr/i+2r9wsA6dvB6oCyqTMIFVvybsIGTzfPO/R
sQ8yNqW7q/eI/Q2f38j5pleRnP17MLDPtaMy+O48pOn0Dwr25/dJW7uzMijL
CPue/EXJJi7K/b0zUQZ7U4feGqVSsYuvjD+rk2UwN9Pk+c/favZ7oPuz6SAD
l462kUWRGjb+zKrE9IyG++e0NNDVWsvOmZ6LccmVgfv5xmFb47Xs59rCkONF
MvDKWNzolrOOeZc0m2n8VQaTPsUfTRc6dmaUh8dqlQwuWZiUJU78zqqur+tS
XC2D2EYV7+ZUfGdj7C6bjtKXg/uDXgFvwyvZqR0lmhtN5XAkdlWBqe0P9l1h
VdDGRg5bDW4bVF3/wUZNGfUgsq0cnD/294geV8WOw6Z4XRc5nH4Dzd9Iq5im
2/Vds1zkUOm8x+ZeVDUbcaBsacYgOQifv/3cHWtY3K+W4/sOl8OUIvfkyVk1
TLHA2/XUODlEBia1M171k3lkb7NrMkUO3eLa7RxmU8sOD7j9J3iOHPqfb/vH
5EEtk8XLykqWyGFU930ek+f/YkOb2md6rZHDWX99Rwez3+xA8MRrSZvkcLdu
2rHVd3+zb8WRh+x3ySHzYNL2/gvrmJvnw9C/9slBF9DTK8i6nkVf08z+ESuH
3Ht/ltql1bMvLTuPmHtaDvYxW7u5rP3DBm6f5ph1WQ4Lbs51m2Ktx/fK/zbv
nySHuqx3uhEr9PinSY+/x6fIgS8K8yt9psf7PaoqNH0mh76bn7h066TPd3d1
ehSSI4drIY4dWmzR5x/2zzlb+k4O82N/Lb9QpM971x6MGvdFDjEuxWaFAw14
xPyMFXcUcsgLKLp49ogBf//it1/HKjm0OjD8L6MfBrxX/94D//4jB/0i2zM1
Exvx7f8sbFtjogAzs9Hb1t9qxN+aHDOYb6UAnfKof5i1IXdak13+snXD9x++
CjdYa8i3Fhm8HNhZAY6zi+L08g35mxEDbp7tpYBdkhpVUH8j3u3qsljzgQp4
IvfqOS7OiIfZxoeFeijA2z4s7q9aI/5665t5ZWMUMMIjSuIwy5h3lpmM8p2k
gByR72QhjHnoxCE97s9SAPwrGnt2asyzH6627LxYASsdNmx+GNGYd+ySUBUd
pICj5Q7Nlsoa85Do90W1oQoYEzS6dISPCc+sMU9duEMBQ9+MLB5204TbBwxP
yNmrgO4TjA9Ma9GEB2et3+N+RAG/riWOD9/YhGf0SwxK+EcBT23GdUooacLb
nPo02fKSAlZsi8tPH9aUBzWWuIfdVEC3vrurXyc05U+CvNqXP1DAZLPyT4+a
mvJW7zcb+aUrwHBpWtLWlaZ8xfCbsofZCogpyV9gmmvKUxO/vepaqIAj91OT
/Fyb8RYtWicfKFVAhKvnkDFxzfjSLb7H6mQNPz959qqvtc34o4odW5ZUKqBu
r3+s7SwzbuV3d0FenQJ6Z5d/zHtkxhc/UHgNbayEO7O9J5u1N+cPHDo4X7JQ
Qk3ljorbW825xb7JNjZ2SlCdOb4m7ZM5X1C9+2d4JyV8vz70bmfenN+d+6hE
2kMJHd8Er8g51Zw3y9SlTeqvhD/Wlwfd/t2cz+vb9RIwJfQ8ZVZS1sOCJ5+Y
sa+7lxIcg0Zn1E+34E2M9wcf9lNC0ayx3c9EWfDZq55M1ZuphI0FMVMyki34
zcKaIcsWKiFz7NyEpZ8tuPGwnp0KVirBomOrzdvNLfn0f+eZeGxQws4lb8Y2
cbPk12yOKP/dpgTP4W6HaxZY8kbhmbkt9iihOOSU1ivakk8tr7+z7ZASAqun
WVffteSJ4/ueVJxUQsKTWVk/Sy253v3F2/0vKKHtgxqzcU2t+KROJxY/vq6E
Rwsyqst7W/GLe3PG9byvBO/BWbnPplrxuh+GfeLSlDBm/O7W38Kt+IQ5g2wb
vVTC51TPiCHnrHhCxorfKwqUcNurj+HzDCte2/tMaeHHhutN2ZqxQ2HFfY4X
PB0uVULL/Qu9A5tb8zOGpolXdUqoXPR26rre1rxqBYtp9VsJcQHps8/5WfOx
b4NDdhqp4G2jpnt1a6x5PL84Q22ugu/u0b1mHrDmlZeK+fSWKvjT+4YouW7N
R1tbdknvoIKS6jpYn23NT4SNNHVxUsHFMyubdpZbc83XUM2xfipwCi38WGZs
w0f6Xs03GqqCfq9Pf07uYMOP3v18P2iUCrR6V2xj3W24qoNtfNF4FZgsWvE1
cpINH7Zn7C7P6SrQm9HGKmq5DT9SuWXpjfkqOK1nnBq7w4bLZiX5tlmhgtl/
ylfeOWrDhz6r6BcZooJP2bOV5Vdt+EGXtna6LSq4d3rurO5pNrzi6IQ/M3er
IDL1WbetBTZ8cKOIsmcHVLBIpamVVdjw/cvvP+9zQgUVjuvuLq+14WX5qqsn
z6tgd78mIY1NJXwg63TI5JoKYkujV6bYSfjfF/1Dg++qQOm2qma/o4SXWu6d
XZKqAv/e7ht3DpDw/pvEcK8sFah51uxjIyT8r7LKbklvVBBek2uSP17CS7wd
ze1LVDD1hu3T/jMlvM+dWd93l6vgqmbO49RFEh7R/kBhpUYFHz641a4PkvCi
3U9T5tSq4IIMes4IlXCX77VnMhup4UC/JXnLt0n4zpnOUa5matgz3MH0apSE
F6bPXxHfQg3eh17H2EdLeA/nOD/T9mqof9U3OfWQhG+NezEgxFEN5y8fHn3o
qITn6+u3Le2jhprWrseOnJRwx2WuBuMGq2GL3qnAZ/ESHv4msPz2SDWccpR8
dDgr4blDTr3o4KsGn039diaek/AuF3Jv7J2qhmxlwZAZ5yV8o0Xj2Op5ajDt
tHpUz4avs0PdwwKWqSE4RePcruHnO31ZNe/lWjW0eTmosNsZCV8/7pznwHA1
rA+bEjzqHwl/kVzodDZSDVVXA6OCj0t4e3szS/MYNSyKXF11/oiEr43yqNpw
TA1ncj//LNgv4RnadUVfzqphf+eO/ep3S3ibGZeFzxU1LOtclGS1XcJXPyk5
f++2Gv7U9DYybbh/T3ta73EQakif+LTfh5USbhc7Kij6uRpmV26sCJ8v4Sv1
wibX5jZc33v10q9TJPxx4HW3hcVqmKKOe2TkJeEt8srsc76qYVvwlBtvBkn4
ssGtjNzVaqjuG6T1bDgPcN5bdr5GDZu35nSaYNvw/BunLjbR18DAOv9f5Y0k
vN/gGe9TjDSQXWo/QU9tw0uCfowLbqqBS/VhQ6ILbXjU+Wjo1lwDQxsf7P2X
sOF93jv2KbHWwPOeIy3LE2x4sfmTcwdbamCYna/3iT02PHL4bFuvthoYed+3
Ln6lDe+9oWZ3fQcNyKbu+6nwteFFiQd+3+qigdCPHpUbnG34rtIeqwKdNLDA
tuOBoWY23LnFs9J2LhqIHG66faDUmr8fM2/Sm34aSF22+WBAmjXfueXX092D
NGDr8Tjr3nFr3ivp8CA2VANR0RGhgxvqRWGFc2LlsIavU297yjyt+fa2me0u
j9LAFIPVo5+0suY9/BbEzBmngYXrM268kFnxgoj6RpIJGjh4b4GpyX0rvvVB
XEjm5Ib7s/Bqv7BIK+6k6SPdMl0DM4vdjV0mWvF8h5czXOc0XN8pT98eba34
lmmLs2XzNeD8YH/opq+W3HGfvkf8Eg1MN/OJcky05HmPj9+avEID8wdPtBmx
2pKHV7t2MV2jgY6jo0a+72fJu/XIiRMhGrhhfub57yoLnjt3qWnIJg30qHLK
SLljwcMOG4Y7bdXAjihNnst6C94l85Tm004N6E/Nf7fU1YLn1A+cf2R3w/1N
i7Qz/Nqcb+yblz92nwYM48LOtZ7VnDssWTFa/6AGxm6MHOOdZ86zTzR+cDtW
A00mTjN4Mcqch74+3XP5CQ34jPWPeHHfjHcyHhzf4bQGYK6n3a4eZvylW4HV
2/MN9/OCiXfPk834+lVBu/Ze1sCF6nd36po14x3PNa3xuKaBgpzwB85hpvxF
4bml1bc00GlSsXudrCkPMWMfEu9qwG5k8PT4aU15+2HvfANSNNDdys1lYkYT
nhkS/Nj2sQacpH6RvgOa8LX/mrm+fKqBbe/tDmcnmPB2ny5c2J6lgbXG5skm
tiY8w2aY3cCchut9VuvgGtWYr/Eq3qt8o4Ef2bWPd9ca87bhIX/OvNPAoh7n
X7qtNObPblqsmVqigcOh5Qkbvxjx1eWXy8y+aEAepzoaOt2It24z0j+tXAPH
DobJF+QZ8vTxH59vUGjA+GKEWaCPIQ/aFTq4l1YDk49PGHYtqxG3u2997csP
DQS4z86YObYRf6K60uForQYm2nWJPfTSgK/sNPqQzx8N3EoYGxHiZ8BbTv1s
bGiohRnR2t727/X5471hofdMtBA4aHTZhQX6fHlqC8VKMy0Y3Fy2s4tOj7eo
uj7bwUoL9kPO/HVlux5P7T729bsWWrg5Wb92bAs9vmzO1+HRrbVgqNe/oNX0
P0xyaMvtEe21sOyIvaP273oGGa0cax20UNi02rB7Rh0LrLt1/JqjFjas/WKa
blLHbPr4mC/spYUpvtaLH/n+Zo8WVWy166sF/1GuZaYnf7Elx7d/fzVAC7G7
nJ1PamqZVU6bRbsGa6HJyTE2M8fUsoeGdwrdPLRwPNEts8fln2zRoAljNSO1
kBC1YLiq+U9msVKecn6MFqIW3Ni1cVMNu39ml8sMXy2YxA8yuaCoZgvf2p+1
mKQFvxaNW4ycX82aN7sveTpVC7dDdxt2/FjF7vFJUZtmaeHD39Uao7lVbP46
Va1LgBY8lpzqm/L1BzO7HLXi2yItfD464EyToB/sbknHT8eXaeHEhGW6K/WV
LMA6xW9CkBbqrY4MXhZTyZqN9k83XqeF9zsqlul3q2S3w7QDHoZq4fvMwVec
H39nc2/subw6XAvV10uKkuZ8Z02/dW7bdYcW2v4dK/fV+86S7ER0caQWWnfi
vuKsjs32nW5wYK8WhN3wGU+9dKzJzsq1o2K00JWtPNtJp2W37u4r/3244fsz
dk88fkLLZim7Tb95TAtrE/pu143WssYd014s/kcLuQtjN2uqNOzGlFms7Tkt
3NhwwHJOgobN3FN9I/eiFpoV6T9r6q9hxiLGIeqKFla3ULVOM9Gw65VOsUNu
amFp15dLkkPUbLrj0ybfbzdc7+28xr4fVMxw9tywiw+04HM5psRopIpdPVCr
miW04FpmvzXmipJNfXZonnW6FkL/qdRPbqFkBr97vcl4/r/Xm3zIfauCXXF5
7hmerYVFP8qr5FI58184/17fPC187eokvzxRzvSP1TlJ32ohyWH98wkpMvZv
duypU8VaaNkh7kdaFxmb3KiP5aRSLUz6WWeoipYyvYEvdjT5poV8e1OftJoK
dnn5oqpHMi24P1ckDJlXwSad1gtcq9bC3s2f7WY9L2f1+ceKHCu14Pm37EjX
3uXsYlNXn481WnDrmLvvYtw35sdeiUN1WpB7XT2u+fOV/Q4O7DvGQAdDg57Z
SBZ/ZQkXGyX8MdZBzBSDc87ZZWzCh5Mtk011cPpWTsEs1zL2y3LgnqUWOhiw
7HqiOPGFnffMrbOX6GDBKzeHMMMvzHfT8qD8VjqIfZjy7Pbyz+znNeMvf7Vr
+H6Wj9vR/FJ2rix+Mu+kg9zAIU+9WSnzaeWe8aOrDi6de6D8c+kTq/HOd/u3
hw7aaiLqiySf2Jntq67M7a2D9uaH/doaf2Tj7jRp36K/DoatyXDb/eUDq5Kf
PZDlpoMTw8sXjntSzOLbDzXaxnQgD566+MXFIjZmcuH6/iN0kLX2Xcr0mPfs
x+41MvloHZS7nT/kGf6O/fOo2azT3jq4WFFu+HFVIfP6nvBqip8Olk32iFuy
6C373tVjWDP/ht9ve2Cga0ABOzmzKCl1hg5Clv5MiJyfz0bHrOu6fq4OBl64
G3946RumS29+rMfChusNNRgduz6Pnai91OxzoA6+tV4bkvVXLvN0HrEldqUO
3n6LyZxy7jXTzC/RjgvWQeOAZu/mPslhx+I2LDDY0PD3Dq3NbFHwio14afX2
TpgOOr9X3C5zyWYq/SteK7bpIPni8yv+R1+wuP6jHnaM0EG0Xs78/c2z2PBl
pb0K/9JB2pFGHucOPmfKfzad/jtaB34+Zy6c7JzBYt9IbIYf0kGBXeLYsPSn
zKPJ9YiaOB3Y7mRHXYPTmWLImJ9XTurgxWyzbsm9nrAja8qWzT+jA88pnd0+
VD9m/EJ4ScsLDb9/9NwRkdmpTFbUckL2vzrY+TUpfOdNwQ5Z3ErbcV0H1sNO
/Bg8CtjQkd79ByXrILXzwXDn4SmsIrT8ouqeDry3dn8xdeoDduDqttbnHung
9WPNhs4R99jgL633TUtr+P/fvH5anXWHldve1mueoYNs9upDN8fbLGbc+OAn
L3Qw3jF3q/pEEnPfJvsa+rrh/pqUHIQut9jX5J1TnQt0kBjq71eafoNFy9pl
lb3XQbt0g8vbQ68zN/t7Q4591MGrOXWBj7ddZWUTJ173LdPB7ualMUH9E9m+
KGVHI6kOiBcPTIk8fF/5/7/Gnwf6efx9QL8P/x7Q38PPA/R58PMCfV68HqDr
wesFul68H0D3A+8X0P3C+wl0P/F+A91vfB5AzwOfF9DzwucJ9DzxeQM9bzwP
QOcBzwvQecHzBHSe8LwBnTc8j0DnEc8r0HnF8wx0nvG8A513fB+A3gd8X4De
F3yfgN4nfN+A3jd8H4HeR3xfgd5XfJ+B3md834Hed6wHQPUA6wVQvcB6AlRP
sN4A1RusR0D1COsVUL3CegZUz7DeAdU7rIdA9RDrJVC9xHoKVE+x3gLVW6zH
8N96/J96DVSvsZ4D1XOs90D1HvsBUD/AfgHUL7CfAPUT7DdA/Qb7EVA/wn4F
1K+wnwH1M+x3QP0O+yFQP8R+CdQvsZ8C9VPst0D9FvsxUD/Gfg3Ur7GfA/Vz
7PdA/R7nAaB5AOcFoHkB5wmgeQLnDaB5A+cRoHkE5xWgeQXnGaB5BucdoHkH
5yGgeQjnJfjvvPSfeQponsJ5C2jewnkMaB7DeQ1oXsN5Dmiew3kPaN7DeRBo
HsR5EWhexHkSaJ7EeRNo3sR5FGgexXkVaF7FeRZonsV5F2jexXkYaB7GeRlo
XsZ5GmiexnkbaN7GeRxoHsd5HWhex3keaJ7HeR9o3sd9AGgfwH0BaF/AfQJo
n8B9Q9C+gfuIoH0E9xVB+wruM4L2Gdx3BO07uA8J2odwXxK0L+E+JWifwn1L
0L6F+5igfQz3NUH7Gu5zgvY53PcE7Xu4DwraB3FfFLQv4j4paJ/EfVPQvon7
qKB9FPdVQfsq7rOC9lncdwXtu7gPC9qHcV8WtC/jPi1on8Z9W9C+jfu4oH0c
93VB+zru84L2edz3Be37yAME8QDkBYJ4AfIEQTwBeYMg3oA8QhCPQF4hiFcg
zxDEM5B3COIdyEME8RDkJYJ4CfIUQTwFeYsg3oI8RhCPQV4jiNcgzxHEc5D3
COI9yIME8SDkRYJ4EfIkQTwJeZMg3oQ8ShCPQl4liFchzxLEs5B3CeJdyMME
8TDkZYJ4GfI0QTwNeZsg3oY8ThCPQ14niNchzxPE85D3CeJ9yAMF8UDkhYJ4
IfJEQTwReaMg3og8UhCPRF4piFcizxTEM5F3CuKdyEMF8VDkpYJ4KfJUQTwV
easg3oo8VhCPRV4riNcizxXEc5H3CuK9yIMF8WDkxYJ4MfJkQTwZebMg3ow8
WhCPRl4tiFcjzxbEs5F3C+LdyMMF8XDk5YJ4OfJ0QTwdebsg3o48XhCPR14v
iNcjzxfE85H3C+L9mAcIygMwLxCUF2CeIChPwLxBUN6AeYSgPALzCkF5BeYZ
gvIMzDsE5R2YhwjKQzAvEZSXYJ4iKE/BvEVQ3oJ5jKA8BvMaQXkN5jmC8hzM
ewTlPZgHCcqDMC8SlBdhniQoT8K8SVDehHmUoDwK8ypBeRXmWYLyLMy7BOVd
mIcJysMwLxOUl2GeJihPw7xNUN6GeZygPA7zOkF5HeZ5gvI8zPsE5X2YBwrK
AzEvFJQXYp4oKE/EvFFQ3oh5pKA8EvNKQXkl5pmC8kzMOwXlnZiHCspDMS8V
lJdiniooT8W8VVDeinmsoDwW81pBeS3muYLyXMx7BeW9mAcLyoMxLxaUF2Oe
LChPxrxZUN6MebSgPBrzakF5NebZgvJszLsF5d2YhwvKwzEvF5SXY54uKE/H
vF1Q3o55vKA8HvN6QXk95vmC8nzM+wXl/egDCPIB0BcQ5AugTyDIJ0DfQJBv
gD6CIB8BfQVBvgL6DIJ8BvQdBPkO6EMI8iHQlxD/9SX+41MI8inQtxDkW6CP
IcjHQF9DkK+BPocgnwN9D0G+B/oggnwQ9EUE+SLokwjySdA3EeSboI8iyEdB
XwXIV0GfBchnQd8FyHdBHwbIh0FfBsiXQZ8GyKdB3wbIt0EfB8jHQV8HyNdB
nwfI50HfB8j3QR8IyAdCXwjIF0KfCMgnQt8IyDdCHwnIR0JfCchXQp8JyGdC
3wnId0IfCsiHQl8KyJdCnwrIp0LfCsi3Qh8LyMdCXwvI10KfC8jnQt8LyPdC
HwzIB0NfDMgXQ58MyCdD3wzIN0MfDchHQ18NyFdDnw3IZ0PfDch3Qx8OyIdD
Xw7Il0OfDsinQ98OyLdDHw/Ix0NfD8jXQ58PyOdD3w/I90MfEMgHRF8QyBdE
nxDIJ0TfEMg3RB8RyEdEXxHIV0SfEchnRN8RyHdEHxLIh0RfEsiXRJ8SyKdE
3xLIt0QfE8jHRF8TyNdEnxPI50TfE8j3RB8UyAdFXxTIF0WfFMgnRd8UyDdF
HxXIR0VfFchXRZ8VyGdF3xXId0UfFsiHRV8WyJdFnxbIp0XfFsi3RR8XyMdF
XxfI10WfF8jnRd8XyPdFHxjIB0ZfGMgXRp8YyCf+v77x/wAZz/Qz
                "]], {{{
                0.07699679192552866, 0.}, {0., -1.}}, {22.83333333333333, 
                0.}}]},
             
             ImageSizeCache->{{251.70998050849533`, 
              282.61322789348156`}, {-39.18028506599829, 
              10.525421855240065`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.105482191583047`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "1.0163045277356992`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.9729536140500075`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.9185480456685334`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.852486755784684`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.105482191583047}, {
               Style["75%", Bold], 1.0163045277356992`}, {
               Style["median", Bold], 0.9729536140500075}, {
               Style["25%", Bold], 0.9185480456685334}, {
               Style["min", Bold], 0.852486755784684}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, {}, {}, {}, 
        {RGBColor[
         0.9490196078431372, 0.8627450980392157, 0.43529411764705883`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndYzm3Yx+92RJK9k4gkOx7UdSFkZYWsslIhkRIJ8ZhlR7KSRFJGMkpx
XsrKEypJe+953w2l+fYex3n+877+4Og4co/f7/qd53d8hm52WG4tL5FInnf8
9b//0p/TIYO254xJA79gt9+w0o/5zImY+9csDfrdmXa5q+9dFpRlPkxzdxrE
ygbssGzxZ29cpO16l9JAT3Ggd9qeAPZV42zG7Ocdvy/peTas/T5LC9KNWP8z
DXzZ2JxhgYGsfFbMVee6NHh/87Sag10Qa0m3dDzfKx2uufgb5M4LZl2cm8wC
DdNhZIvTl++zH7NB6t6jxep0UI1N2XzF8ikzCByvmro/Hd6Wdev/X9wzZsy/
Fciup8Ndu8y0Ic2hbEmq7fvOkenQY2H5NbnpYWyjo6LvsIx00LtUf0v/3Au2
W83PdUZrOmxcqd13Y81LdjRg+uqVgzNAWWPJjw07XrPLRr8n7mIZcGh104/S
xnDmn+yocWpjBqjmFfb7evMNC3NQr7xzNANso6+YfDKPYh9UH8WG+2dAX53E
IYE671jS3TkPEmIyoP7kG90ByoIVTMs9VlaQ0XG9zGSDld+z+p9uVgrKmXBp
8praGM1opmzfd8ZA3UzQ2z+heZd+DOut/KLvZNNM6LX43ObjKz4w3TtL6hfb
ZcKGASd/2pz+yKZOLU/Y5pEJSU9nqrn994mZJpx8ciQ4E0LkzG5qD/rC1mzX
9vSJy4Thlc1BkYdi2XaFdzahlZnwqGd56P3Kr8z11hqTr+pZ0DhAYaaRfRzz
nFyvlT82CzS693md0fKN3fp+sbV5aRaMlexRzLj1g4XY6Kf1dMyCCxNmTfry
IJ69lXx5NcYrC/TH/tv3wakE9v36Fq+5L7KgYNCvGWP3JLKsCe0OVr+yYKm+
bM2VLT9Z1X83Fu3/kwU2MxSLCi2TWPtWw1GX+mTDJduJ5mZbfjGNtgSlR1Oz
weltyoCq3cls6DX7vOg12eA6S6Vz/qnfbPy4TpDumg1fLJ/4mT5MYbNiA27W
3cyGo7c7t0xJTGXLN/P9Xd9mw8h9syI+K6WzLc3p5iOysuHM05lZarMzmNMV
l/GsPRua1uRH9/LIZNHenVT0NXLg8xWX5tq0LLZgy2rncK0cWBq2Wju1fw5L
HHs/32R8DmyXuYbrf8th61pqliXMzIHNa28HuxzPZQVfuNiwPAfsDl7bFMnz
2M6r5w3KNueAisKBsAa5fFa3KePWvr05ADY9i/W+5DM3Az01heM5MHn/9KBl
XgVMsdnlwIUrOVDa9EDVZkshO/f5Y/GA+x3/f+6BnTZTi1jvKz1WPXyZA8Fm
2qnzNIuZ78ZNHyZ9yoHrhto1zdJiNmLM0wnvk3Ng3eSNHq5JJezJ3xa/xcU5
kHI1zeZVVCkz/LSgW1pDDli1B/j5BZUxuOxzaJtqLsSuP3p95M1yNs+qqLym
by74usYpzrhUweJHT1p7ZFQuDJ//LPeTZyWzaDz6RW1aLlg9PHcwzKOK5Xz4
YeizIBc2pl6wKztXzWwvDbqvsy4X9moYzAtaIGXSDTt6hO7IhZE7Sjxt46Xs
gF7EUSO3XPCX3wo6FjIm36AsjT2bC+Nc7WK+58qYR4y55arbuTAtoMZ3lX0N
07zoH5f3OBeau9UdCm6qYTfWS6c5vMuFisd9QiPP1DLtUcZBzd9zofuTbY+d
+tex4HrPPqezc2F8Rq5aTEgdmxideqKnNBdm1queuczrWdR53To/SR6URy5X
/P6rnpmsc948pnsehFb6HLHa+YfF6cbERwzNgy7+boPHKTYw8zoNNndCHmSo
xw4febuBZQjLx4mzOn4eltFkMKWRWZ8LGWC1Ig8ar689OzqxkVWtaTpTviUP
Uu9ajFPa9ZftG2Ha6OKUB3H9o4/e6tzE2mqublM8kQfXbh86/juwiZ2E/KSL
V/Ng8tFco+tzmpn62fGzBz3Ig/gw+58x+c3smsWR0KBXeSCVe+o59VgL0xr+
bYjh5zyYOc/7x2+tVvZQ1v989O88MDZZpX8UWtm4d7YtZiV5UHI8fWUPyzYW
7vFqe3pjHtSY1oza2dLG+GrFVJtO+XAi1OCF7Y12Fjts+by6fvmwMG7l9ZoB
Er5Meuelu14+VBiknbPcLuFpUZXDuk7Ph5WJhpetwyV885npl68vzAfrqaYB
dUpyvGzlGcmI9fnQpH3frnG5HHfU/r3r+c6O168JmrThjhxvqtLJND6UD8cO
6XbuVi7H/410XPjfuXzY8jkq8O9ked7ltIhY7ZsPFgPzPFTd5fkVc/WRBU/y
4U/v4MYRsfJ84ND13rshH9Y2zlbm3RV4QGWQYuuPfPh5bIy/sYUC13/T4Hgm
Jx/kJv/j29VXgb88OSe3lywfjqyZ++ZangI3WuG1xF+uACKz3z39PFyRfxqS
+9ZAswCCNiYYnbZR5GYVBvqR2gUwWmOr4YdARZ4c7nZj3sQCsHr8xnNbkSK3
PPFVNWl2AZyN+2y5dpgSL1rW12WjeQG86KOl7mmpxB0Gbyus2FoAkq3H5xRc
U+KNZWErDjh3vF9UfdflP5S4+2u5aKWTBRDzzSRLKCpz1eNLxl32LoB527uE
DJqqzC8uve07OLAAZpspta60U+Z9B5V3CX5dAL4hdxpX+yjzu6VTD075UgDH
Hnw7oPlRmeu9Olkak1IAz3eWaDlXK/Pnx5JWLy0tAJULPta7+6jwaUu0P2X8
LYDkvIcP62eo8OgBuyfZdS4Em72P5jRYqfAFJW/96/sXAmgvCbB1V+E/X6h1
Pza6EDa3W8039lXh646uOaI+oxAiciYW20eo8ILFgZU3FhWC2nUP+6oEFb6z
f/063Q2FIGt+1je8WIXXFc36GmZfCIoDE498aFLhbmEXp/LDheB8cK2/upoq
V3TPehB3vhDWuy6vu9xXlZ9bpN9rzZ1CaO/ubbdkmCrv3c/138KnhbC8OP7I
7NGq3Lfws2yPKIR7VSPm7R6nykc877WxLb4QtIz32qVMUOVPDm/57pFbCDmz
VMe5d/xsuDB0Rp+aQvBbnnXKfqwqhz7tj+7JF4Hu6SGKD0ep8nkFi/qN61EE
8xrksqcOVeXxz26cihpWBBs98xv1eqtyi0Ml9aaTimDO4tu/PFRVec58w62/
TIrAZ5Wyz7ZGFW7b+3jippVFMHHD3eZvhSpcmpfAq6yLoOmg46LEeBV+4OmQ
p677iuDlo9b1Jzuul7yb/SCVU0WgMXaPa9sdFe5hGunpda0IJoyTt1p6XIVr
9urUNORhEVi5HNf22qbCb+Susg0JL4JAk/mjsueqcO0nAclTY4ugTLaiu9lw
FR7sWmPyMbUIPPLqbzfJqfBJ83jYsrIiGF9ZeFeSqcyjepwfmtVUBN/ky4rd
Xilzk5z0C9vVikFukX7/c+eVeVzIqLY/A4rByXT1wyXWytz8gMvOf/WLoS3A
OyR/mjLPnPMxrZtRMcCBWz9suylza80e828tLoaDO+NGt+cp8aqsja9HWhaD
TezTsZ9fKvF9wU+Gv9xVDPHyv4/knlLibS4tXjOPFEOlnlnKrjVK/KTJAvnv
F4rhRM7Xygt6Sly9u8/utX7F0PDtjZl1syL3ySzMKnpWDJPZWpNucYpc69HE
xXvfF0Pv/U1hj28p8of7jka2JxTD4lV3JBvtFfm42T9Gnc0rBocdAypNjBV5
eLdBPn1riyGgf8Jh126KnGdsV76vUAJN1sa5g3IV+JeH4U7je5aAxl+XBQvD
FPhyZ+X8tzol8CzgVc6gkwo8bab5sgWTS6CsvO/dp2sU+GZ1f0ieUwLpB8Ln
9TNQ4GVp1WO2rCqBuevG/+OooMAdA41uVW8rgYyQV/bxqfK8aa9nZzeXEtjW
7/sG01B5fpyn7lc9XQJOqrHSijMd86yrbvEVnxK4876b/Y8tHfMs1Wnl0KAS
6KWxdHu7ccc8exAd8ziiBD5p+370GCDPAxw1Jkz7WgIHj3tdO/RXjuszS79P
aSUQ2s9ZPy9Fjr9QC1FfUV4CSoO3tYkIOW6c8tctu7kE9IcHh2rdkuOfAuaV
7+hSChXjWzWV3eW42Z6raxoHlkJil7I+TtZyPNko//PxMaUwUW9G7o5Fctyy
83jD7salEBm4CSomyfGi5MMBt81KIWza56l1g+X47ntxmnpWpSC/sp/m4c5y
vNGh/9FXDh3/33ydxfEGCXefYVs9y70UfFj0zvZCCVft9GrDj4ulsG2vsWbR
Lwm/+Eshbt3dUvC+cdttzGcJ7+u/bFpJaCns99DfFBsh4f677jx0ii6FZbXv
VEMeS7je9Mrecj9L4cAOuS2f/CX8ucr0E+fyS2HUkL/9Va9L+LSk07X96krh
rI1XiNVFCY/2S970QLEMNoSPOPjmtIQvsNeJn9CrDFxefCxRPCbhif84GsPw
Mkj+brJLz03C1yuLkIWGZVB5PzGsl4uEFyR2HZAytwxqZio8euYo4TvvrDuz
dXUZbPUwuFewS8LrdgQ1SG3KwOyuvP2NHRLuNrXB+tD+MvBfO3r7G1sJV1Sa
k9TpTBk8eC0N1t8m4ecTLs/yvl4G+0c+VUvdIuG9fXOeaT8qgyPmXU0CN0m4
73aDIU/flMHNhUmdjlhJ+Igpbuem/1cGPWcu1THdIOFPFL42f04vg7JFQ0+U
rZVww/g+280rOr6PtrWVmYWEv7tlnZLTUgZeE3WM16+UcFO7sLn2Xcth9pKq
fq3LJDx+stzLv4PK4cOeK/b9zSTcQn7JsJMG5eAxunq+73wJz/l+65ImK4eB
Uf62e00k3PZmWbvvknIYEv7T6ISxhEttpu4avbEc4uKEqpgi4a6TTma83l0O
p8qn5GuMk3B5uaQFJkfLQTM964e1roR7fBsaEX+pHPKSTT8/HiThmjccdDf4
l0PUiaSYFE0Jv7Ht7dXS5+XgpLMk7reyhGtPVFPcF1MO3udfNf1T285C2i0c
5ZPK4b6m4bApye1sUtyDnPMF5eASa5Rw4VU7i/KpMxtQXw66h6f0G3ulnZlY
z3obqFQBbbm/7eUd2lnc+IujJ/WuAMfd4sHfue3MvC3zuhhRAap63xRVBraz
jK+jVRdPqYBmrYGThlS1sW3XDuxLnVcBhn5ZC/9528aqtnwusLaogIRVSnFm
Z9rYvnG9VtTYVsBYuzSfdcvbWFvL5veHD1RA+tXbdRv6trGTsc/GqnlUQBJM
cVmV3srUvdtuX7tRAS2jByqa3mxlPpsXddEJrgAt713vpli0Mq2xN1yfRVaA
Yu2JZn3NDn3WXFwyI64CNswpmDg+toWN+zJ5dWxGBRxeG1Wz5FALC7/y78eV
lRVQe2XwB2+DFsY3JUzMa+34flpFQ3tlNrMvY4b471KvhJPK7lYZp5vZ8qad
Gs2DK+G67/0r7eObWdqnN4dPja0Eo5hhp7xSmthmL9XKHrwS5nb/4vXErYmV
Wa1a57e0Ep4bn/O2HdzEHPUDYvU3VYLbsiGJaW//sqZG2ZSIPZUwQS8+eci6
v+z4R/ZgzrFKuOfc027Fn0bW5fK5nomXK4E/9rO5fKGRXbFMP2Z5rxKSLYxC
m0Y0soGjR8nKwjpeb45d5+CoBhbQsM/K5UMl7M/Jlo9Z2sD0P3z4pvCrEmxW
90vfnP+HvbqoOeNiYSU4y/wWBjn9YcYbNj4a+KcSgq2OJUYq/mGfRj3pG6Rc
Bd0/tjm98apnZn+aT07uUwUu6j2/fBpaz5Kj59e/162CH5oHG+Wf1jHLC9e2
mE2tgqWmDqaXptexonWFCWmmVTB434QGr8+1bPfIidxmTRWs0NMaNWZFLWus
c39Sa1cF9U82xh/OqmHu778PdHetglTHBd6P7GqY6vmBnl08q2CuhvvHhDoZ
u7h2+1+fm1XQNj9lUi93GeurG24zPKQK1rgPnHhVTcb8a5WSQ6OqQGN20N49
16RMT6wwMf5WBbfeNzd/GSZlz8/eff41swqaC3foOG2qZtPWVGutrqqCyHcm
az64VbHo4UYX8tuqoFDhyIfI65VsQY1Hq0O3anjvHhZ+KbyCJb5L2dEypBr2
Ve29fDC1nK33HJF2elx1x7xPvxPSUsYKVjuZ9ppZDSefWnRepV3GdupEv7q7
rBruX4mKfrCglNVJuw032FwNy/JPO/znXMLc3m7weuNYDS//nN5Qda+YKXoE
y837txr2DH3qOOVXETu/6q/DT69qOFw7eVhcpw6/OWxellVANfQMlNj9mFnI
fKuvLKp4UQ3G+pPebjpUwEZE5b3Z/7EaPlb889MvKp89OT1ulFJyNcTrNkjv
tecxw5WHr10qqoZ30RHh5+bmMTE0TmlwQzUY9NQa6nApl+k0dJn2S0EK8jNs
uq7PyWG2mRP3DOgiBQv5C4XWE3NYSMzah5t6SsHk9dYZU3plM2nQ0ezAgVLo
YzXzeI+4TDbp4sPeVTpSUO1n0uzkmcH27/uxeNIYKSyx9V21Y0U6e7v+z3HX
yVL46Pf1g5xOGpObPShKGEnh+qLGLqw1hc0ZZVKrPFcKrqc6hQ7P/s3OdNuh
t9hMCjq55d1fxCazb/WXNnmtksLa6b29C6J+se4Z4T6pllIo4nUJj8OT2Kro
7B9DbKTAPFWey7/9yW48VFbZ5iAFc+clW77GJrKs82OMQ1ykEPt6t5pcdgLT
djZ3rjkihUO1b26daYln29YdDJl6WgqLh4TONdWOZ49m+ucfviiFhpLop9zv
O6vSje3/0UcKM46e7VWo9o1NVJcuU7srBVvNDzumnfqPudT1PrMsSAqtR6Ia
Grt/ZZFpRuJaqBTC3Br/JAV/Ye1ia0NmhBS8nczbDpt/ZrMDPQ10oqWgP1TL
IkDtEzt17rn19q9SMB6ZtLE6/gOL25t661miFGw0euWpBMQwjbWSpD9pUvDr
9GaH1/FoZs511YzypVBTZ1Ck5/ie+Ywwm/Vvecf7r7TafninYBldnA/E1koh
qbzb5h1F75hW7c1n3Vqk0EnO2itO7S2zTo0uXqkog3fq4tF000gWBKWDb3WR
wb9nG6cZ34xglfc1VuX1lMGf8k0tMoVwNv7slHMjB8ngTkbfLRePvmLOjpYf
dg2XgYXRpv0WPV6yCIsTzS/GyEAvJvm0R3gYazUOmdA8WQb3L1ddst39nM0a
/tNuprEMXue0BBpOC2Un1Zr8Ts2VwejgKPPpvZ6xrzKtlG9mMpgQ9j7jiNwT
pp4yr1vP1TJQ8Dr0fWhjMFv+btfctVYyEH/M9Vu6PGLeAVcP+dnIoN3OtPql
8UOW7hH1oshBBtLmlh+tng/YkD355fr7ZZB0dcVjj9oAtmV152F73WVQ0O15
4QCneyzQaPzaiNMySEnfde9AF39WPsziUvvFjvdbnTrQOdKPje185Muc6zI4
GP7+YkK7L9srvd/ueVcGlL+GJ8cZJgb9/5/x94F+H18P6PXw/YDeDz8P0OfB
zwv0efH7AH0f/L5A3xevB9D1wOsFdL3wegJdT7zeQNcb7wfQ/cD7BXS/8H4C
3U+830D3G88D0HnA8wJ0XvA8AZ0nPG9A5w3PI9B5xPMKdF7xPAOdZzzvQOcd
nweg5wGfF6DnBZ8noOcJnzeg5w2fR6DnEZ9XoOcVn2eg5xmfd6DnHecB0DzA
eQE0L3CeAM0TnDdA8wbnEdA8wnkFNK9wngHNM5x3QPMO5yHQPMR5CTQvcZ4C
zVOct0DzFucx0DzGeQ00r3GeA81znPdA8x73AdA+wH0BtC9wnwDtE9w3QPsG
9xHQPsJ9BbSvcJ8B7TPcd0D7Dvch0D7EfQm0L3GfAu1T3LdA+xb3MdA+xn0N
tK9xnwPtc9z3QPse9QCQHkC9AKQXUE8A6QnUG0B6A/UIkB5BvQKkV1DPAOkZ
1DtAegf1EJAeQr0EpJdQTwHpKdRbQHoL9RiQHkO9BqTXUM8B6TnUe0B6D/Ug
kB5EvQikF1FPAulJ1JtAehP1KJAeRb0KpFdRzwLpWdS7QHoX9TCQHka9DKSX
UU8D6WnU20B6G/U4kB5HvQ6k11HPA+l51PtAeh/9AJAfQL8A5BfQTwD5CfQb
QH4D/QiQH0G/AuRX0M8A+Rn0O0B+B/0QkB9CvwTkl9BPAfkp9FtAfgv9GJAf
Q78G5NfQzwH5OfR7QH4P/SCQH0S/COQX0U8C+Un0m0B+E/0okB9FvyrIr6Kf
FeRn0e8K8rvohwX5YfTLgvwy+mlBfhr9tiC/jX5ckB9Hvy7Ir6OfF+Tn0e8L
8vuYBwjKAzAvEJQXYJ4gKE/AvEFQ3oB5hKA8AvMKQXkF5hmC8gzMOwTlHZiH
CMpDMC8RlJdgniIoT8G8RVDegnmMoDwG8xpBeQ3mOYLyHMx7BOU9mAcJyoMw
LxKUF2GeJChPwrxJUN6EeZSgPArzKkF5FeZZgvIszLsE5V2YhwnKwzAvE5SX
YZ4mKE/DvE1Q3oZ5nKA8DvM6QXkd5nmC8jzM+wTlfZgHCsoDMS8UlBdinigo
T8S8UVDeiHmkoDwS80pBeSXmmYLyTMw7BeWdmIcKykMxLxWUl2KeKihPxbxV
UN6KeaygPBbzWkF5Lea5gvJczHsF5b2YBwvKgzEvFpQXY54sKE/GvFlQ3ox5
tKA8GvNqQXk15tmC8mzMuwXl3ZiHC8rDMS8XlJdjni4oT8e8XVDejnm8oDwe
83pBeT3m+YLyfMz7BeX92AcI6gOwLxDUF2CfIKhPwL5BUN+AfYSgPgL7CkF9
BfYZgvoM7DsE9R3YhwjqQ7AvEdSXYJ8iqE/BvkVQ34J9jKA+BvsaQX0N9jmC
+hzsewT1PdgHCeqDsC8S1BdhnySoT8K+SVDfhH2UoD4K+ypBfRX2WYL6LOy7
BPVd2IcJ6sOwLxPUl2GfJqhPw75NUN+GfZygPg77OkF9HfZ5gvo87PsE9X3Y
BwrqA7EvFNQXYp8oqE/EvlFQ34h9pKA+EvtKQX0l9pmC+kzsOwX1ndiHCupD
sS8V1JdinyqoT8W+VVDfin2soD4W+1pBfS32uYL6XOx7BfW92AcL6oOxLxbU
F2OfLKhPxr5ZUN+MfbSgPhr7akF9NfbZgvps7LsF9d3Yhwvqw7EvF9SXY58u
qE/Hvh2ob8c+HqiPx74eqK/HPh+oz8e+H6jvRx4AiAdAXgCIF0CeAIgnQN4A
iDdAHgGIR0BeAYhXQJ4BiGdA3gGId0AeAoiHQF4CiJdAngKIp0DeAoi3QB4D
iMdAXgOI10CeA4jnQN4DiPdAHgSIB0FeBIgXQZ4EiCdB3gSIN0EeBYhHQV4F
iFdBngWIZ0HeBYh3QR4GiIdBXgaIl0GeBoinQd4GiLdBHgeIx0FeB4jXQZ4H
iOdB3geI90EeCIgHQl4IiBdCngiIJ0LeCIg3Qh4JiEdCXgmIV0KeCYhnQt4J
iHdCHgqIh0JeCoiXQp4KiKdC3gqIt0IeC4jHQl4LiNdCnguI50LeC4j3Qh4M
iAdDXgyIF0OeDIgnQ94MiDdDHg2IR0NeDYhXQ54NiGdD3g2Id0MeDoiHQ14O
iJdDng6Ip0PeDoi3Qx4PiMdDXg+I10OeD4jnQ94PiPdDHhCIB0ReEIgXRJ4Q
iCdE3hCIN0QeEYhHRF4RiFdEnhGIZ0TeEYh3RB4SiIdEXhKIl0SeEoinRN4S
iLdEHhOIx0ReE4jXRJ4TiOdE3hOI90QeFIgHRV4UiBdFnhSIJ0XeFIg3RR4V
iEdFXhWIV0WeFYhnRd4ViHf9vzzs/wAJOD2F
                "]], {{{
                0.13774893219696444`, 0.}, {0., -0.9999999999999999}}, {
                26.83333333333333, 5.551115123125783*^-17}}]},
             
             ImageSizeCache->{{287.6639727797678, 
              308.8882306798698}, {-29.441407167045057`, 
              28.354191686639496`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.9238821762415177`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.8313463384072883`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.7089439481413479`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.6473171061298936`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.5871080640983379`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.9238821762415177}, {
               Style["75%", Bold], 0.8313463384072883}, {
               Style["median", Bold], 0.7089439481413479}, {
               Style["25%", Bold], 0.6473171061298936}, {
               Style["min", Bold], 0.5871080640983379}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9490196078431372, 0.8627450980392157, 0.43529411764705883`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
XBunQALmMfrnG8fXr1Xg3eX/n9eMv7gqVW29av/irzTe/JnWhv/7M/55oD+P
/x7Qv4f/H9D/h58H6PPg5wX6vPh9gL4Pfl+g74vPA+h54PMCel74PIGeJz5v
oOeN7wPofeD7Anpf+D6B3ie+b6D3jesBaD3gegFaL7iegNYTrjeg9YbrEWg9
4noFWq+4noHWM653oPWO+wFoP+B+AdovuJ847Sfcb5z2G+5HTvsR9yun/Yr7
mdN+xv3Oab/jecDpPMDzgtN5gecJp/MEzxtO5w2eR5zOIzyvOJ1XeJ5xOs/w
vON03uF5yOk8xPOS03mJ5ymn8xTPW07nLZ7HnM5jPK85ndd4nnM6z/G853Te
433A6T7A+4LTfYH3Caf7BO8bTvcN3kec7iO8rzjdV3ifcbrP8L7jdN/hfcjp
PsT7ktN9ifcpp/sU71tO9y3ex5zuY7yvOd3XeJ9zus/xvud032M9wKkewHqB
U72A9QSnegLrDU71BtYjnOoRrFc41StYz3CqZ7De4VTvYD3EqR7CeolTvYT1
FKd6CustTvUW1mOc6jGs1zjVa1jPcarnsN7jVO9hPcipHsR6kVO9iPUkp3oS
601O9SbWo5zqUaxXOdWrWM9yqmex3uVU72I9zKkexnqZU72M9TSnehrrbU71
NtbjnOpxrNc51etYz3Oq57He51TvYz/AqR/AfoFTv4D9BFA/gf0GUL+B/QhQ
P4L9ClC/gv0MUD+D/Q5Qv4P9EFA/hP0SUL+E/RRQP4X9FlC/hf0YUD+G/RpQ
v4b9HFA/h/0eUL+H/SBQP4j9IlC/iP0kUD+J/SZQv4n9KFA/iv0qUL+K/SxQ
P4v9LlC/i/0wUD+M/TJQv4z9NFA/jf02p34b+3FO/Tj265z6deznOfXz2O9z
6veRB3DiAcgLOPEC5AmceALyBk68AXkEJx6BvIITr0CewYlnIO/gxDuQh3Di
IchLOPES5CmceAryFk68BXkMJx6DvIYTr0Gew4nnIO/hxHuQB3HiQciLOPEi
5EmceBLyJk68CXkUJx6FvIoTr0KexYlnIe/ixLuQh3HiYcjLOPEy5GmceBry
Nk68DXkcJx6HvI4Tr0Oex4nnIe/jxPuQB3LigcgLOfFC5ImceCLyRk68EXkk
Jx6JvJITr0SeyYlnIu/kxDuRh3LiochLOfFS5KmceCryVk68FXksJx6LvJYT
r0Wey4nnIu/lxHuRB3PiwciLOfFi5MmceDLyZk68GXk0Jx6NvJoTr0aezYln
I+/mxLuRh3Pi4cjLOfFy5OmceDrydk68HXk8Jx6PvJ4Tr0eez4nnI+/nxPsx
D+CUB2BewCkvwDyBU56AeQOnvAHzCE55BOYVnPIKzDM45RmYd3DKOzAP4ZSH
YF7CKS/BPIVTnoJ5C6e8BfMYTnkM5jWc8hrMczjlOZj3cMp7MA/ilAdhXsQp
L8I8iVOehHkTp7wJ8yhOeRTmVZzyKsyzOOVZmHdxyrswD+OUh2FexikvwzyN
U56GeRunvA3zOE55HOZ1nPI6zPM45XmY93HK+zAP5JQHYl7IKS/EPJFTnoh5
I6e8EfNITnkk5pWc8krMMznlmZh3cso7MQ/llIdiXsopL8U8lVOeinkrp7wV
81hOeSzmtZzyWsxzOeW5mPdyynsxD+aUB2NezCkvxjyZU56MeTNQ3ox5NFAe
jXk1UF6NeTZQno15N1DejXk4UB6OeTlQXo55OlCejnk7UN6OeTxQHo95PVBe
j3k+UJ6PeT9Q3o8+AJAPgL4AkC+APgGQT4C+AZBvgD4CkI+AvgKQr4A+A5DP
gL4DkO+APgSQD4G+BJAvgT4FkE+BvgWQb4E+BpCPgb4GkK+BPgeQz4G+B5Dv
gT4IkA+CvgiQL4I+CZBPgr4JkG+CPgqQj4K+CpCvgj4LkM+CvguQ74I+DJAP
g74MkC+DPg2QT4O+DZBvgz4OkI+Dvg6Qr4M+D5DPg74PkO+DPhCQD4S+EJAv
hD4RkE+EvhGQb4Q+EpCPhL4SkK+EPhOQz4S+E5DvhD4UkA+FvhSQL4U+FZBP
hb4VkG+FPhaQj4W+FpCvhT4XkM+FvheQ74U+GJAPhr4YkC+GPhmQT4a+GZBv
hj4akI+GvhqQr4Y+G5DPhr4bkO+GPhyQD4e+HJAvhz4dkE+Hvh2Qb4c+HpCP
h74eJ18PfT5OPh/6fpx8P/QBOfmA6Aty8gXRJ+TkE6JvyMk3RB+Rk4+IviIn
XxF9Rk4+I/qOnHxH9CE5+ZDoS3LyJdGn5ORTom/JybdEH5OTj4m+JidfE31O
Tj4n+p6cfE/0QTn5oOiLcvJF0Sfl5JOib8rJN0UflZOPir4qJ18VfVZOPiv6
rpx8V/RhOfmw6Mty8mXRp+Xk06Jvy8m3RR+Xk4+Lvi4nXxd9Xk4+L/q+nHxf
9IE5+cDoC3PyhdEn5uQTo2/MyTdGH5mTj4y+MidfGX1mTj4z+s6cfGf0oTn5
0OhLc/Kl0afm5FOjb83Jt0Yfm5OPjb42J18bfW5OPjf63px8b/TBOfngxBPJ
FyfeSD458UjyzdFH5+Sjo6/OyVdHn52Tz46+OyffHX14Tj488VTy5dGn5+TT
o2/PybcnXks+Pvr6nHx99Pk5+fzo+3Py/XEegNM8AM4LcJoXwHkCTvMEOG/A
ad4A5xGA5hFwXgFoXoF4N80z4LwD0LwDzkMAzUPgvATQvATOUwDNU+C8BdC8
Bc5jAM1j4LwG0LwGznMAzXPgvAfQvAfOgwDNg+C8CNC8CM6TAM2T4LwJ0LwJ
zqMAzaPgvArQvArOswDNs+C8C9C8C87DAM3D4LwM0LwMztMAzdPgvA3QvA3O
4wDN4/zveZ3/AbTIajY=
                "]], {{{0.026238228096224576`, 0.}, {
                0., -1.}}, {27.83333333333333, 0.}}]},
             
             ImageSizeCache->{{269.5706290312226, 
              342.5388231928301}, {-74.20886497524921, 4.996969826262578}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.3785141845600184`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "1.329069961888623`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "1.3198204515150351`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.3065597148879713`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.234069952084708`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.3785141845600184`}, {
               Style["75%", Bold], 1.329069961888623}, {
               Style["median", Bold], 1.3198204515150351`}, {
               Style["25%", Bold], 1.3065597148879713`}, {
               Style["min", Bold], 1.234069952084708}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.6705882352941176, 0.8784313725490196, 0.9372549019607843],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
hfCs/5N3/T946ygA
                "]], {{{0.3617978061451318, 0.}, {
                0., -1.}}, {28.83333333333333, 0.}}]},
             
             ImageSizeCache->{{306.1809762564261, 
              321.4857247320417}, {-78.34109014974094, 30.076885630312187`}}],
            
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.4198906924983994`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "1.2842785551973708`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.9310883756160149`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.8639583194756266`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.8639583194756266`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.4198906924983994`}, {
               Style["75%", Bold], 1.2842785551973708`}, {
               Style["median", Bold], 0.9310883756160149}, {
               Style["25%", Bold], 0.8639583194756266}, {
               Style["min", Bold], 0.8639583194756266}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.6705882352941176, 0.8784313725490196, 0.9372549019607843],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
tbERdc78sZgqWNlT/CX5RxtbMm59k9eFKkgpU3duWvKH7d8baT88pQrq+vez
/rvkD7v5/M7atowqON5vu366azsrNSo9X5DXeT2n50q54nbWvqi5JK64CoKC
x/1pXNjBbC5YGPhXVMHZlrDn3790MFcJ5zxBVgVs4rNgjTFqXLD92mC95ipI
2K9hnxasxiXujLj7Uasa4uFqg84zNa7w6a2qa4JqCN19b3qrgTr3S+e95U7L
auAXLYuL9lDnLOc3Lpo2rBoKHj7f8CJJnZt5pvfRbo7VYDy/fPbZn+rc1m+T
84Qu1VAzZLStposGFzd4det9t2oY2sfOTeO0Bpe3+dDo/d7VcG1n2OvjUg2u
LiPFz21DNaQ+vxeQNFmTM1crutQvqBp+6FroOJ7S5LiZDR8V4dXwu3HtH65O
k/OL7mkCMdVwYlXjpbTpWlzsp0nTj12oBr8zHzYduqzFZfVbudcrpRq2vtAw
Tv2jxYl8D6TZZVbDkAh1467LtDnje8my1rxqsI40/uvWI21ufMsb64Liati8
4fYev1463Iop9Z5xFdXQ8HjOsnG7dLgjEeYxfrJquHLkquDPFx3uQbHTK8fm
zvtzoDEkZbIu97WXT4euthQsT9WOsk3U5XRWhTl8FEjBpyFi4UodPW7Ezeub
rllKYfGILjnjN+hxS+oLknYMk8LlsvKW2CI9br+T8ouLoxQECTJ7D4cuXMr+
bl27TZNC8VAj5/Xnu3Cl+Y6zhW5SMO6j+SZJQ59rN/MKve8tBXF45RClrz43
eFloZugGKVxM7Bk45J0+53rlqsI1SApTAnukDhtnwO2Svbbpd0AKFdlZ8WVx
BlziGLmXIkYK4e9CdbXVDLnC3Wannl6QwnujkNsxawy5xlyHwqMpUghucvNZ
/MqQszRcpumVKYWDCz4Y2A0z4mYu3Odk91wKY8RvK2qijLit569sbS2WQqNw
wwL/OiMuTvTyRn6FFJxMzs0L/duYy7Or/XZOJoX429ZOOjeNuboA0x5+zVJY
NCaq/zttE848e+w8R+0akEdFFN3zMeE4bc8DumY1UHCtoz4sw4Tzm7s3q8yy
Bnrtc4g/qmPKxZ66/PPqsBpYtHlOus1IUy6r/LntDsca+Fic7BG0xJQTD6pZ
6TKtBowmXHm2aZ8pZ/yP8bmu7jXw74XbYfVJppxj+uiiSu8aMFi4Oaz+lSm3
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
bd/x5uCkXywwzU2y2lwJOem3mjNFDSzqkzC0wEIJB366/t4a2cAute3oO2aA
Ei6Zzbl6e2QDe9hP71HcUCWkfzm4ZXPpT5bvErdQY6QS8rZlmWbs/MkqfO2U
fg5KyPjbd/TxHj/Zz6inkcWTlLBN+8YpjYx6pnfPdfCEqUr4+rEq1GJRPbP4
UPns0iwlFKe5rKlXqdiolgBvPVcl7Mi5LDx1VMWm99X9vXlx5+fpGJTed4iK
LZ1y7tTH5Ur4teup6ZUcJdu8dtgotloJh+/+3DJlqZKFR2QXXvNTAgyIemUn
UrCzt+b7Gm9RQptb9/j9Zgp2q/iH5s6dSuBHhbu9YHL27Nf2i+V7lKDn/Sp+
0sY6VtZLZ+K0MCVEzxi9zu5sLZP9dbYsNUIJcxpve1XkypjaKttt3aKV4HM8
LeC8ooZ1O5hltOe0Eo6VPfW716eGDbk5L1l4Xglr34509Z0pZZPffneZc0UJ
deI1FoY7q5l7/bbv95OVsKrl+piqpCq2zlx7T++7nZ+/uVBt6gcJ2+N0psf+
dCUM39d0dL2uhEV7D30gzVJC3NhhA+MnilnS/ifz3HKVEPnAQtV/m4g9vja3
JvO1ErZr3XnwV4qQvc3/dqBfkRLKi3ZuHl5VySrlW/sfLlOClveRwcNtKlmT
mVa24qsSpq4subTD9wczHH96iYdQCdcFZbqTbn9n/ZYNaXgqVcIy3Q/1yxXf
2Lh9j4/bKJWQurHUVOdIBZt95e9hxxqVkBhmW51pV868X1a8+NWmBI/gbUvz
P35h22VbVnlpqqBf1ugneyM/s8Mmmu15XVRQwH86ZzDzP3Z+zKlzdqYq6Pvf
68DrRp/YPY/B406aqyBk47rkPV/L2Ivdj4paLVQgF7/dcDvtA/t8cc7G1QNU
YD9vjs6S06VMkVuuWzBUBdETwhujQkuYVvXmK6NHqmDYtLs2njvfs56GGizO
QQUPU9fnQUAxGz7y5Gf1v1SwX7f52eM9Rcx5oc1Ov6kqMPPwE8RbvGOLgzIF
xbNUMNfpzuIc9zdsw/nZtxxdVdAjPFk3O76AhfBfZ15arAIjm/ptHk2v2UnR
PyJdLxW0d1urMXvtK5aspx6yeXXn/+cUDJwtfsGe2p3o89FPBV2r2u51C3zO
3rsOypi8RQWvQm7FcL3zWFVAhvu1nSqwmRva7vf2GWs7O0tutFcFH8o+nrQ5
kcNMs79E7AhTgeGeJEsdX54N+rFpUHmECtwXllzUP/eUOWmr5bhEqyD/0MPB
h0Ky2LyhsctTT3de74g5xmsOPGar5g5s7pqggsA3elqF1zJZ0Nb0E7uvqGDh
8gmmCcJ0FnVq5ghhsgqOvO7wLHJ6yC49+pw/+64KLh0EF6+UByy9fOO6++kq
mMna45zG3mf56h3qvbNVsGuQ0TWf0rusYlBMQmiuCqw021Yf6X6H/Zw1YIL0
tQpOjqlpOZ+ayvT+eVjqWtT5vK2a1s3ZeJNZxM7YklmmgqqPJu4H3G+wUen/
GfQrVwHlwdM/b7h+SPj/f43fD/T9+POAfh7+PqDfh9cDdD14vUDXi58H6PPg
5wX6vHg/gO4H3i+g+4X3E+h+4v0Gut/4PICeBz4voOeFzxPoeeLzBnre+D4A
vQ/4vgC9L/g+Ab1P+L4BvW/4PsL/vo//874Cva/4PgO9z/i+A73veB6AzgOe
F6DzgucJ6DzheQM6b3gegc4jnleg84rnGeg843kHOu84D4DmAc4LoHmB8wRo
nuC8AZo3OI+A5hHOK6B5hfMMaJ7hvAOadzgPgeYhzkugeYnzFGie4rwFmrc4
j4HmMc5roHmN8xxonuO8B5r3uA+A9gHuC6B9gfsEaJ/gvgHaN7iPgPYR7iug
fYX7DGif4b4D2ne4D4H2Ie5LoH2J+xRon+K+Bdq3uI+B9jHua6B9jfscaJ/j
vgfa96gHgPQA6gUgvYB6AkhPoN4A0huoR4D0COoVIL2CegZIz6DeAdI7qIeA
9BDqJSC9hHoKSE+h3gLSW6jHgPQY6jUgvYZ6DkjPod4D0nuoB4H0IOpFIL2I
ehJIT6LeBNKbqEeB9CjqVSC9inoWSM+i3gXSu6iHgfQw6mUgvYx6GkhPo94G
0tuox4H0OOp1IL2Oeh5Iz6PeB9L76AeA/AD6BSC/gH4CyE+g3wDyG+hHgPwI
+hUgv4J+BsjPoN8B8jvoh4D8EPolnvwS+ime/BT6LZ78FvoxnvwY+jWe/Br6
OZ78HPo9nvwe+kGe/CD6RZ78IvpJnvwk+k2e/Cb6UZ78KPpVnvwq+lme/Cz6
XZ78Lvphnvww+mWe/DL6aZ78NPptnvw2+nGe/Dj6dZ78Ovp5nvw8+n2e/D7m
ATzlAZgX8JQXYJ7AU56AeQNPeQPmETzlEZhX8JRXYJ7BU56BeQdPeQfmITzl
IZiX8JSXYJ7CU56CeQtPeQvmMTzlMZjX8JTXYJ7DU56DeQ9PeQ/mQTzlQZgX
8ZQXYZ7EU56EeRNPeRPmUTzlUZhX8f+bV/1PnsVTnoV5F095F+ZhPOVhmJfx
lJdhnsZTnoZ5G095G+ZxPOVxmNfxlNdhnsdTnod5H095H+aBPOWBmBfylBdi
nshTnoh5I095I+aRPOWRmFfylFdinslTnol5J095J+ahPOWhmJfylJdinspT
nop5K095K+axPOWxmNfylNdinstTnot5L095L+bBPOXBmBfzlBdjnsxTnox5
M095M+bRPOXRmFfzlFdjns1Tno15N095N+bhPOXhmJfzlJdjns5Tno55O095
O+bxPOXxmNfzlNdjns9Tno95P095P/YBPPUB2Bfw1Bdgn8BTn4B9A099A/YR
PPUR2Ffw1Fdgn8FTn4F9B099B/YhPPUh2Jfw1Jdgn8JTn4J9C099C/YxPPUx
2Nfw1Ndgn8NTn4N9D099D/ZBPPVB2Bfx1Bdhn8RTn4R9E099E/ZRPPVR2Ffx
1Fdhn8VTn4V9F099F/ZhPPVh2Jfx1Jdhn8ZTn4Z9G099G/ZxPPVx2Nfx1Ndh
n8dTn4d9H099H/aBPPWB2Bfy1Bdin8hTn4h9I099I/aRPPWR2Ffy1Fdin8lT
n4l9J099J/ahPPWh2Jfy1Jdin8pTn4p9K099K/axPPWx2NcC9bXY5wL1udj3
AvW92AcD9cHYFwP1xdgnA/XJ2DcD9c3YRwP10dhXA/XV2GcD9dnYdwP13diH
A/Xh2JcD9eXYpwP16di3A/Xt2McD9fHY1wP19djnA/X52PcD9f3IAwDxAMgL
APECyBMA8QTIGwDxBsgjAPEIyCsA8QrIMwDxDMg7APEOyEMA8RDISwDxEshT
APEUyFsA8RbIYwDxGMhrAPEayHMA8RzIewDxHsiDAPEgyIsA8SLIkwDxJMib
APEmyKMA8SjIqwDxKsizAPEsyLsA8S7IwwDxMMjLAPEyyNMA8TTI2wDxNsjj
APE4yOsA8TrI8wDxPMj7APE+yAMB8UDICwHxQsgTAfFEyBsB8UbIIwHxSMgr
AfFKyDMB8UzIOwHxTshDAfFQyEsB8VLIUwHxVMhbAfFWyGMB8VjIawHxWshz
AfFcyHsB8V7IgwHxYMiLAfFiyJMB8WTImwHxZsijAfFoyKsB8WrIswHxbMi7
AfFuyMMB8XDIywHxcsjTAfF0yNsB8XbI4wHxeMjrAfF6yPMB8XzI+wHxfsgD
AvGAyAsC8YLIEwLxhMgbAvGGyCMC8YjIKwLxisgzAvGMyDsC8Y7IQwLxkMhL
AvGSyFMC8ZTIWwLxlshjAvGYyGsC8ZrIcwLxnMh7AvGeyIMC8aDIiwLxosiT
AvGkyJsC8abIowLxqMirAvGqyLMC8azIuwLxrsjDAvGwyMsC8bLI0wLxtMjb
AvG2yOMC8bjI6wLxusjzAvG8yPsC8b7IAwPxwP8vL/x/AE2OD54=
                "]], {{{
                0.09248847969566962, 0.}, {0., -1.}}, {29.83333333333333, 
                0.}}]},
             
             ImageSizeCache->{{307.7541656575323, 
              335.46978409535075`}, {-33.55998202989225, 
              21.870986378463904`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.0048633720711209`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.9163523189134031`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.8532786336673447`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.7834222548124904`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.6730115359458394`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.0048633720711209`}, {
               Style["75%", Bold], 0.9163523189134031}, {
               Style["median", Bold], 0.8532786336673447}, {
               Style["25%", Bold], 0.7834222548124904}, {
               Style["min", Bold], 0.6730115359458394}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.3176470588235294, 0.6549019607843137, 0.7529411764705882],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlYjXv09okImTNkjHRyjkQd4zEsM3WMmYU45jEnY2RIlCFRSpQkIiVC
xshtiEhSMlbSPA97t9t7N9B5vddvrd8f7+sPrq5ctfd+nue77vW5Pz3+sbdZ
oVOvXr20X3/933/lz5rW3U7smp0C24MB/71cc5y6dEzR7vFKwcK4K4bWbTzp
XbdTdvvfpeDv600yrhz2ov0mNrEH9VORatS9yrmLNw00a9HvsFUqFup9nbI8
3ocKLONOubumor9d3W/Ffr7kP9S17vjzVMSnJp6LPnyGpo4as/JkvTT4JJk0
8fDzp/oT696eGpGGa17lwwzfBdDtKVED/Xam4dx+k+9eBudp1axtAQH30tDh
rdHG0bODqLOtpW5QZRr89Sa9cwm7QAlLy9YHW3xDmp3q/aR2weS8OuxDyMZv
GGJ8vtL51CUaYL9y+NWr3zAy8ejVnv1CKH9rz+DrBd9QYPkwvHvGFfJzSm92
yyQdfi9cum0MC6MpLn6b7/yTjjsFr6J1jodTvSNzUu8HpsM5eJg60eM6RZ5o
M/ZRWjp2tz6oWj77Bq30TQiD4XeMU724XfrvTTI8d6TN8znfMWN6/K7tAbco
PnjCzpcnv6NraLj1li+RtO+qTtbrxO9wSB/z0cb4DnWa/z04r1EG7LZ4Fu7e
c5c2L4yet9okA+96/Uy2LbpH8Xb++kVjMzDiVesnU1Y9oN+WOT5Z908GzHw8
2keoo2jfyrlbSvdloMDi0NcPPo/o65qBve0DM/ChdM9/+pMek+WGtmmK6Axs
HdYnf2qjJ+S+SXncIS0DjmY+/lnKJ5S3+d3YypoMFIc26JSW95Ro+zXtVsNM
7N021WBG7jM6vfPoVe3gTNSa7Te2KX1OFbvX2DnOyURAYYZTUV0MTXae2LZ2
Syb+uNYurHunl3T5gEms08lM9C+wGK8cGUv/uTXYVXczEzormz+Yt+EVzTua
ab4vMROe8883srr0mm55IKt+eSZGJ3g2fJgXR/peAadcmmfBLKZPpZtFPK3w
2WWta5aF3sv2vjt48C09Pj2/ztU6C9prG0b7ZCVQx7ODb+mtyYL5Dt2FY3sl
kkNgu5VH3LKQXnXipmdqIr25oDLUv5yF+nntTrX3TaJel5PeHovJwiCTa7YR
c97TntAI55bZWXDMXTlwUKdk+hJ+bKBn/WyUTKtefDQzmSxvrCtsY5QNk9vL
wzaEf6CjkVYB3iOz8XLI3Gd3dn6knLumM9ovysatEzFu/SZ/opFRurqnd2Wj
vfva4ItGn+l0dPZ9Q79svCtefP2z9jMpnzxd738/Gx10Lk/3SPpC1jGBRl0/
Z8O/5N4Ot2tfKTh294dz6myMVL87tO9oCtXF2R4yMshBk/mfPQasS6W5CUOH
X7DMwQGHW3sXTk6jG0kdFMYzctDO+Nq2CPNv1PSj+uIl+xwM2PagKqt1Oi3/
kjzX1CMHgaW/D7uqTqfo1JvNQsNz8Oyt24aHX79Th+/H8cebHNT5tWiQvTiD
NmVt2Bxe+Ovnb1166HFiBsXl/m1qrpeLNtbRZDUmk4wLf0+N+C0Xw8v6jFwY
mUm7Sxoftxifi9KYTumJxln0uTx3TOSyXCjPfi7YdzKL+queawbsz0XdqSJM
0MmmI5qgsLvnc1Eb2cj1p302ZVfvXTwEuWg1wHqic1o2jfi5qE3Ut1y0Nzhk
FDExh07VG/5y2I9cRGHWihU3c0jRoNPO6E55qNvlGeNimEtWjav60tA8OBgN
WFe8N5cuNv2U+WRuHh5saGayNyeXfjS/7TNmWx5SQsbuMp6YR3Nae1nFeOfh
XuvNiY9D8ijCYNPP8ZF5+PJvjePQRvnUpOPUm7FJeZiQfeTT7n/yaVlnsxVW
ijxkJIUs3fEonx51a2r4pkU+9nXQielgUEDtexbET+6bj13Xj2dMXlNA9iYv
9yX8nY8O1tbpTR8V0OvewQOmr81H28mu5hP1C6mn2f6CpEP5QHnK8er5heTU
b8nZmSH5uNbsbPMulwrpo+XI6R9f5INWl9aGlRZSv0FdGs7NyYfHhL2K4D+L
6NDQmntfdAoQNaLZ/abbiyhr+Jd1C3oUoK4yYtL3e0U0bNTd7mlUgKkrZ9w0
1RSRz1jv5EWLCzCy9x+Nii2KqXyCg9t3pwIcDX9ibbmumCZZTx+21L8Aq+Y6
zte7UEwXppiXZz0owJYnDV47fiqm2un6F5d/KUD0qLx33nolNHtW0Zw8TQGe
d7T/bc2QEro+91XT1e0K4V00O7/xyhLSs738uPDPQrwtX2Dv4llCSxcfcFhn
Uwil5Z/Dy6NK6OHSf34r3VSIqV3avLHLKiGDFaNSNh4vxKgko+1FjUtp4+pu
HoprhTg74M95l/qUUuy6H6Md4gtR/5Vez5AppdTDPkWtKirE0DErGjbeWEq7
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
tVj8o4NfTE4+XV04TZ3wjxaxWe59Fzjn07zFI9+1dNBCd+dwu6Au+aS7pG/o
dGctZr9zfn/2bh7dXNrFxfOEFufsXRJnTMujxcuaLXofqIVvR5cRr/JyqdmK
mkFtI7R42ffs4aa7c+n+ysJWsx5rEdPNPMCkTS6tWP2lyPutFnOuDnra+3IO
tV4bG/MxTYvc4lwXk6E59Hjd3XPtS7TYY/HwTL832bRuw6Udc2u1yDDb83Dh
wmzqaO9tc7ppFfRnrnOOKcmimE0uZl8Nq+DZu3TYPqcs+tfBoVGn36uwuXZE
XFizLOq2ZWnGgiFVcAqaar/EL5PebJ0e5T+xCoZtp1163DuTtm8n77Q5VVgx
ZKAi+24G9XI039h1ZRWm1p2NKB+XQUk7u05avLUKuhF3Mhpc/k57nPR7Bh6o
gt1yc6dtz9Kpz57a2u8nq+Cw1r1ox/dv9Hlv0Ueji1VYcOlUnyk/0+iA89eI
pbeqMKbMtO/ALmlk4fLq8IWnVXjw5vsWh+GplH7g3rLsxCrs35AUP35xCh1x
vTyiV0YVzlZdUZU5f6XBh3w6rCivwuOwoBahIV8o5/AB5aW6Kvg5/D7m5rvP
5Hl085u85tWICB/3dXLNJxp57J9Lpl2rceLnpOJw009U5DFj72qzamyO9S5q
PO8j+Z4YNT90WDUmBqx86Hn0A43z6vdnkXU1Ghw+dXDXs2RSnuzWvM+CatQu
/3hU9eM9Bfg0z1+3phoBVXv0TIa9J2vfH0/Cd1TDzL5eqyG7k0h7utiv1K0a
rXrF7ZjxPJGC/VK2mPtW4+nDB6+8mifS9LOvp9pfrsbgoU+mDbifQD8D7ve+
cacazab9uNFw8VsKCwzRUcZUY6t5+9Uv9ONpbtCpNIsP1VCsNVpwLiaOGl48
eNchuxrdp468euPga7oRvOVEZMWv15867kP76a9o0eVlayvr18Au+eCTHONY
anrFZtzA1jVQjbZUmdZ/SfdCR3fbZlSD5SEPI/PzY2jZ1f5Vd/vVoK7UZ5TJ
l+fU6lr399qRNXilvd84LekZRV9vET5kag2WhIzMqf/xKa298fOg46IaOD1x
XOKW+YTa3yqxi1pfAz2fF9pfMZ2eR6YOrd1Vg3HTtxTcNntMm+7EtR1+tAa7
3F16Zjk9oq73HpQ6+dXgN92iHFV6FMXdvxIbHVoDtcXsR+dsHtC2KN+guvs1
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
zb41xLdmHxviY/+/vvb/AXI036k=
                "]], {{{0.27969008785533006`, 
                0.}, {0., -1.}}, {30.83333333333333, 0.}}]},
             
             ImageSizeCache->{{322.0041971020794, 
              336.77700141521893`}, {-67.52461098102115, 
              24.978695985102448`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.4326737411090336`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "1.204510346070382`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "1.1728623710534112`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.95393670529695`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.7495052398590156`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.4326737411090336`}, {
               Style["75%", Bold], 1.204510346070382}, {
               Style["median", Bold], 1.1728623710534112`}, {
               Style["25%", Bold], 0.95393670529695}, {
               Style["min", Bold], 0.7495052398590156}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.3176470588235294, 0.6549019607843137, 0.7529411764705882],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndczl/4/9u00xSlbURGduIcO0JKyN6J+iBCisyMzKyyEpFZlD1yHVIi
EpmRmXXP962ISv36PX7X9fvj+/UHjx563Pd7nHOd13i6TJ8fNEtHS0tL0fDX
//2X/ky6Jp9V7CUDc8fX0Wujb7CgDfeeOXeRQZz+2L7d9G6xwaPT+kf6yMAv
+OMV2VTBfN1WZt/mMuga2P+haelt1kkz3sVysAyyeldWfZ2Xy1pCtx3Th8sg
JTkl/61zHmu+1bI+e5QMLmf5dArR5DOLCar/dMfLQD8ls+LOxwKm3+bB21FT
ZdD+7uCb8RUPWPXv4/7HQmUweGVoV4PWj5j67urrlREyGHjfSnZs1WNWvnNS
m4GLZMB4wNpJ9cXs9dSeyXuWycA2dmZNYeBTVtTeptHXlTI4cwgi2dUSllsr
Le62XgZXbfsaBnV+zq4+eFi+fosMzudF2ezJfcEykk+OerlTBod2yc9vn/OK
HQ1dd6fVPhlMvbB3SI5HKUvqMrVT9GEZaDkP8djy5w3bouObWnC84Xpa3/ow
4VMZW1NsZ25/VgaPtW/KYz+/Z0tSKlbMyZbBq7HbdWzqPrCIiMeKa1dlMD2p
fKKf7Sc2zefMBCOQwX/azyqn+3xmYxpveDA+TwY7DU3OzJxbzvxfTO95prDh
/nx3pfRN/8L4sT4na57I4ETgwTUflV9Z14XN7Ia9koHBmSl1Lfp+Z578d/zB
dzJIe17c9N7hH8zJ7GmlolwGsRsaZScbypn124wZveUyaHewg8mAOAUzPL3p
6VaNDJyPP5g195+S1S2d1fddlQxqo+vTD61Xs4qBfc+3r5PB0nHFTc5vkdh3
K0enlXpyGGaf03PneA0r+/hn62MjOfS82DYrvd1P9vTcs1qnJnLQBGys3atT
we6tOB++wE4OC0OmF+u9rWA3/beUCkc5OE890DHhaiXLsg8b0sRdDt2PJBy6
lvSLpX/rf3Wap7zheU0MaLHsNztwyalVdkc5zH3xYqXvxCq2Y23NHp3ucujv
teNOIv/D4gNf6o3qLYfHD+PC93j8ZTFOFxal9ZfD8poM3WtG1WyBctuniiFy
mH/6ZmGYuprNvDE3cMBIObh6l6XblNSw8ZsGid1j5HDibaVkdamWBYx17fBl
ohyyK8I8C3b/YwM86g51nSGHjOJwz8TIOtaz4rXJ+jly2Mpyej4YWs/a374U
+2K+HDItpAtfzbW42/ZEWcslcjhqXNSueqkWbzrpv3FLl8thfIuuv4aVaXHT
tkMK7q2RwxHZUe9Eps11/rp3b7qp4fpbvUiISNHmVfla6WHb5dDNMevgrr/a
XLH7rfW1PXJw+Vy6/+pIHf5x+tW1hgflcOGIWdMdaTr8RcfdP8cdlcNGtxNR
TzQ6vLBu/rTTJ+XgGZg/pHsvXS4e+hdXZ8ohJ6Xfk5Urdfml/a2Y/yU5vFm6
cch/t3T56TDdzAM35NBbmRacX6XLD3d776C43fD9Q88Fjmmrx3fr3djsWyCH
yMvKc8oQPb7p6d7qLUVyyArqbDZjlR6PS104p+yZHJ5bHnPdc0SPL5o34pXX
GzkMPx7Wf9JNPR7m6zk47qMcpEidZ+nFenySkcHlom9y0DY/tXDKOz0e9Oqj
u5NKDntOr2ke+0WP+6Xn7JpfKQdf+zBe2fCzb9Q+HVEth+Y3P70ofK/Hvfst
jrTQVkBIUtBEwxI93soi8MPURgrYXNS3+DrocYd37QKyTBWQsmtDn7/H9XiT
s41vaVsrYFTMdbdX8XrcIKa8XVAzBczrnbkzZooerxksDhx1VoC29obljTvr
ccnmoFFFSwV86W/xPFNLj3/5vHRZfy8FlJ5P75BaoMtLs0Z939VZAUMDipdb
b9blj1d2GFveUwGnP3a67eeny+8ON87vwhXQxmlvfpyWLr/W/FuX+EEKuDfj
3r3aCzo888edtOfDFBDRx6Cp6QwdnnYlxbLlKAXMf6HK/2eqw5PjY1YvGacA
l9BjfZ0vafOto8ZI+VMU8KzS4WdBiDZf4+I9xS5UAb8Mw8pG/NXiS9WmRbMj
FOAz5H5f4yQtHpHzw/fqQgUYPY7tOs5bi0/bnHem8TIF7N7/eqtnUj0bM+5I
s3ErFaD1PLSPT34dG9ZqxaZT8QoYfUsnIOXnP8Z/hfz5u1kBR2HJTGvHf6xb
bpfZQ3cqYHjkxZHjB9Uyz0SLF/uTFfB7o/9Sr/k1zHmKYoA8RQEBB3f5Dk2u
ZtZeBRd6HVdAL79Zq8Lv/GVGNWmuW84oYOtTO4+hqj+svmBl4tssBZyfPTLt
oMMfVrl3gpbXVQXo2jU6Yzuiiv2Y2X3+ilsK6O9U+yRs7W/2ztvq3aO7ClgS
mhnAc36xEi31sBaFCnDafT1/UG0lKyh6cGPeEwXcPDituWvfSpZzMN0TXipg
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
Nfhfipijd9GV56tZaKeLanh/oc2EX7Gu/HpO8+err6uhxqTRCsN+rvz85qr+
T4UaHE/Wjo8wcOXHxpVku95r+P3ZLQKG3Hfh+1udc1n0SA2mMbrjCxNc+PZf
CTtyS9TQ6mvMPwd/F74uN7TeqlQNr7Zn2ocZufBlif3mzfyghguGRQ+fFzjz
eVNalF38qoa9t4JGb1vvzGd4VfvrKxvul337fbW/Mw+peX59dIUa7tZVfIzV
cubD72e1Sf+rhtEd9/X6s8yJ90vamvy7Xg2dCz7Lrv9swQ9mX1zrpiuBuJjx
aF14C753n+sNfwMJwj85t0kud+Q7Vu34uchQgnbWJxZ1mezIN8+ua3PQRAK3
xqzv3lcOfP2IiGl3zSWIOfChc9UoB76qa2mywlKC4tOH1VuLm/NYB79ia1sJ
DPR7Wm4b0Zwv1r3cqLe9BPcqs7xaFzXjC2RubJaDBGdOZOVtCmjG5z5JXLLV
SQJXI9+Asqf2fNbV+oxLrhKsX7nUe2iIPZ9y+L8vZR4SfGvuWVT5vikfv/6N
g0EbCXjS4eV1c5ry4P+GBLdvJ0FGTea++N92PCD4yuYxHSQwVB/adDzejg/p
5ZEb5y1Bj4EnxBI7Oz7AdVd1elcJejWveGB21pb3MdT2ftxDghNfXgav6m/L
e0rz5lT1kmDcwoGd35TZ8M4v36Y6MQlyzg6IaBdrw9vfGvpqcD8JEopWsbjm
Nrz18avmCwY2fP6EV+1f3bLmbltaDk72k2Bj+j8DNsuat1i0O074SzB5fffv
F82sedPxOpe/j5Bge6MJAT1vWHHLvguUFkESZE1r4XR/rhU3bf3OvedoCZJf
yk9NdrTijc2HTZwWIkGLxKk3NU8tuc7va7s2TZBAlnHi5NLNlrz2bavCrMkS
fL9bHvR5kCWvyt2jUzpNgl+nPvXx0LfkP0/r+ujMksAurdfhtvlNuCIxMtIz
TIJXXh1CP21qwr9Gvz8ZFC7BFbuxIZ1HNuEfpwz/EDNPgnTduS4G9k3420E3
7NIiJShI7BLOyy34C682AYVREqwNUvzOy7LgT6yT1lcslWD87j9Xo1db8MIa
vVvNYyX4bDWwqscoC57/aeGv/nESOIo2c7+0tODi/od2EaslUOx+Cpf/mPMb
50fM3L1Ogj+rl+cp0835paSbB25ukOCUf8EdjxBzfj7Os6Q8QQI/4/oLlibm
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
7OOB+njs64H6euzzgfp87PuB+n7kAYB4AOQFgHgB5AmAeALkDYB4A+QRgHgE
5BWAeAXkGYB4BuQdgHgH5CGAeAjkJYB4CeQpgHgK5C2AeAvkMYB4DOQ1gHgN
5DmAeA7kPYB4D+RBgHgQ5EWAeBHkSYB4EuRNgHgT5FGAeBTkVYB4FeRZgHgW
5F2AeBfkYQTxMMjLCOJlkKcRxNMgbyOIt0EeRxCPg7yOIF4HeR5BPA/yPoJ4
H+SBBPFAyAsJ4oWQJxLEEyFvJIg3Qh5JEI+EvJIgXgl5JkE8E/JOgngn5KEE
8VDISwnipZCnEsRTIW8liLdCHksQj4W8liBeC3kuQTwX8l6CeC/kwQTxYMiL
CeLFkCcTxJMhbyaIN0MeTRCPhryaIF4NeTZBPBvyboJ4N+ThBPFwyMsJ4uWQ
pxPE0yFvJ4i3Qx5PEI+HvJ4gXg95PkE8H/J+gng/5AEF8YDICwriBZEnBOIJ
kTcE4g2RRwTiEZFXBOIVkWcE4hmRdwTiHZGHBOIhkZcE4iWRpwTiKZG3BOIt
kccE4jGR1wTiNZHnBOI5kfcE4j2RBwXiQZEXBeJFkScF4kmRNwXiTZFHBeJR
kVcF4lWRZwXiWZF3BeJdkYcF4mGRlwXiZZGnBeJpkbcF4m2RxwXicZHXBeJ1
kecF4nmR9wXifZEHBuKBkRcG4oWRJwbiiZE3BuKNkUcG4pGRVwbilZFnBuKZ
kXcG4p2RhwbioZGXBuKlkacG4qmRtwbirZHHBuKxkdcG4rWR5wbiuZH3BuK9
kQcH4sGRFwfixZEnB+LJkTcH4s2RRwfi0f8nr/5/AGKvwG4=
                "]], {{{
                0.04023896463235694, 0.}, {0., -1.}}, {31.833333333333332`, 
                0.}}]},
             
             ImageSizeCache->{{312.0253853989172, 
              362.31306188279626`}, {-44.07419664185227, 17.54345864498015}}],
            
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.049685083600818`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "1.0110658744837162`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.9790711071847034`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.963125939729253`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.8739991895073684`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.049685083600818}, {
               Style["75%", Bold], 1.0110658744837162`}, {
               Style["median", Bold], 0.9790711071847034}, {
               Style["25%", Bold], 0.963125939729253}, {
               Style["min", Bold], 0.8739991895073684}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[2, 3], 0.6666666666666666]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
VHxpy5wM85uNFb/mSZTPMbNnZGTRsstHsRLblFqUdG48/xXy1E5Fqlbi5G/B
n7S/+VHvJ/pXs7Qq0d3524z6GQHUnLDufvW0Svw15m7fZu//8odTrzstqoRR
9+6rXPoGUVgvz4QBmyoxu8/i7qMcX5LXxOjcPw9UYmbVyw7p3V7ThaUldX/b
VaLH0qjOcc4gq0NKndfdqkTg8rtd/3PxDS2+paV64HElIioSGjKWv6XJMBlr
/7YSSjrBCobDgmlAzm4Dj8RKWDkqx0+qDqa2Cs6Lg/Iqce2Zp/7A4BAqGhy4
NaGuEj+8I2DiEEqxMzOOFPxWhVE3ry0YZB5GPptbHFr6VWFVvUZ4zshwcj6n
dqeHRhW62529nloTToce6PuP0KtCx8PTqme/jqDVseuiyaQK8xTaPz5oE0kG
5acyF62vQoZK+kEvgygaoexZvm1vFVIpt2Ov1tHUZXy0wokzVdh+3nF0s380
VS4q+f3q9SpUD07ocnXzO0rZpzTy0YMqqJ0Z1zxZ+T0FXdOaGvq6CtOH7qtS
ffaeXINMjNPjq/D41dqKm/Ni6GTm7nXlX6owaPNdndZZMbTl55W97WuqYJS2
58Ld9bE0b2Dg2f4dqpF5ZNvUis+xpD0946Z232r80RySPN8kjn7f0PLYcFQ1
Ht6wMZwSEEdNtmoh5lOrYaHuvU/1t3jK9tRP2T2/Gn1K1FGp+eu8iF5XdG5N
NeYf2Vy2zTiePEtONbv+Uw2n1lm71m6Np/8oeXb1P1UN5Ypca78j8bRLK1o9
xrkas42eLzQ+F09mJiUTvnpVY+atFosBDvE0ebfS7Iagahj+jRtq9vGkdkVr
RdfYauR0VVSdfzqe2gaY7BjyuRqFsQecA/bHU+HH3ScmV1ajxGrhD8t18RTT
dOXygrY1MLkQvvfsrHh6qhLouen3Goy4tFZlzJB4ukIZQUeG12DDhLk27Rri
6OCalthLujX459Y/6vtuxNEqG7UvXn/XYOSphC1q2nE03UO/BuY18PD1enPo
VSwNj1jXMWVnDcZbbbrf669Y6lJ0ql/JiRrkbAx9dfxZDFV08tRoc7kG/e+e
Pmg+MIZSRkfr97lXg0erigaZnnpPL4xKFmoE1iC9b8RRpZx39O9Opc0G7369
v96FF2dMeEc2F7UOLcusgeLk62Y+J6Jp8zOTCzu/16DcpXSbcnQU/Z2y2822
dS2S50bGDVGMorH1V57d7FGLVl7VFx/OjqRefwRG+AypRYdno69ttYmgxskZ
6ZETa9HmdeOa/i/CKXtlS2nW7FqsbN8762hZGIUcVWtds7wWz3s8NTUaGEae
bvo9O2+vxWrVZNMppqF0PmTdsIHHarF3WXpw/ckQ2pV3SnfixVrMPHe0ZpR/
MC3q4Dlv3p1aLNLsnru3+C3pjohevc6vFic7eu22UntLqnNL/jkQWQuLw3My
H5m9IQVLpdP26bVQXug5ZeNAUMEFreseJbXwX1A8suHGK3r/xORh0I9ajPvx
h0mLykt6+mH3m4RudTj9anLvGZ4v6HL1lcQC9TrETVo85sLkQDr4e2B+y/g6
HLA+vf94mj+Z62Q09JhVh9c1Q/v7HvWj6ctaFEcurYNTr5dP3cc+p2GH1Qbo
batD5Kpsj6AyX1J00R9ndqQOQ9f3CVjk70PlWDfTwr4Ovl/2X39u95SSc04t
PeFWh10tTg+7WDyhQAVPi6u+dTj7LsC75ckjchkSffRRWB2CFjqFa7s/oBOz
Si6GptYhae2rwS/ve9OmLUp304vqoL39rbp1jCf9bacVWN5Uh2ldSjSndbhH
Wg9N3rdXqseUUSfbBy7xoF5xu7P7D6hHyJ+vSg+/vU0N5VcqtbXrMWLSqh89
9N0pSzmw3WyDenwqtV9fmeJKweMz+qwyq4f5Q61xDW3/pXtmLaP2bK6HY1bt
wB62N8luvxrZHazHs8C1XlGa12nndX0Tt/P1MB0a2Net1VVa+HLdBn+Xekx0
uZ2tVHeZJmWd2h/zpB4u/W9pHunuRKqtPO2+BtdD+Hwb9WiXhqT/+zP/PuT3
+f+D/H/8epDX4/cDeT/8fiHvlz8P5PPw54V8Xr4ekOvB1wtyvfh6Qq4nX2/I
9ebvA/J98PcF+b74+4R8n/x9Q75vvh8g9wPfL5D7he8nyP3E9xvkfuP7EXI/
8v0KuV/5fobcz3y/Q+53fh4gzwM/L5DnhZ8nyPPEzxvkeePnEfI88vMKeV75
eYY8z/y8Q553ngeQecDzAjIveJ5A5gnPG8i84XkEmUc8ryDziucZZJ7xvIPM
O56HkHnI8xIyL3meQuYpz1vIvOV5DJnHPK8h85rnOWSe87yHzHs+DyDnAZ8X
kPOCzxPIecLnDeS84fMIch7xeQU5r/g8g5xnfN5Bzjs+DyHnIZ+XkPOSz1PI
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
7MtDfPn/7dP/D3i9E2o=
                "]], {{{0.2256883217688199, 0.}, {
                0., -1.}}, {32.83333333333333, 0.}}]},
             
             ImageSizeCache->{{335.75118395781686`, 
              354.1445120883117}, {-55.78422769057885, 59.53630307357428}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.2974504901790036`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.6283935445458865`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.44411710754246486`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.35055787361518037`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.1418663201676899`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.2974504901790036`}, {
               Style["75%", Bold], 0.6283935445458865}, {
               Style["median", Bold], 0.44411710754246486`}, {
               Style["25%", Bold], 0.35055787361518037`}, {
               Style["min", Bold], 0.1418663201676899}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[13, 18], 0.7222222222222222]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
vK9onyHvM9p3yPuO9iHyPqR9ibwvaZ8i71Pat8j7lvYx8j6mfY28r2mfI+9z
2vfI+570ALIeIL2ArBdITyDrCdIbyHqD9AiyHiG9gqxXSM8g6xnSO8h6h/QQ
sh4ivYSsl0hPIesp0lvIeov0GLIeI72GrNdIzyHrOdJ7yHqP9CCyHiS9iKwX
SU8i60nSm8h6k/Qosh4lvYqsV0nPIutZ0rvIepf0MLIeJr2MrJdJTyPradLb
yHqb9DiyHie9jqzXSc8j63nS+8h6n/wAsh8gv4DsF8hPIPsJ8hvIfoP8CLIf
Ib+C7FfIzyD7GfI7yH6H/BCyHyK/hOyXyE8h+ynyW8h+i/wYsh8jv4bs18jP
Ifs58nvIfo/8ILIfJL+I7BfJTyL7SfKbyH6T/CiyHyW/iuxXyc8i+1nyu8h+
l/wwsh8mv4zsl8lPI/tp8tvIfpv8OLIfJ7+O7NfJzyP7efL7yH6f8gDkPIDy
AuS8gPIE5DyB8gbkvIHyCOQ8gvIK5LyC8gzkPIPyDuS8g/IQ/N885H/yEuS8
hPIU5DyF8hbkvIXyGOQ8hvIa5LyG8hzkPIfyHuS8h/Ig5DyI8iLkvIjyJOQ8
ifIm5LyJ8ijkPIryKuS8ivIs5DyL8i7kvIvyMOQ8jPIy5LyM8jTkPI3yNuS8
jfI45DyO8jrkvI7yPOQ8j/I+5LyP8kDkPJDyQuS8kPJE5DyR8kbkvJHySOQ8
kvJK5LyS8kzkPJPyTuS8k/JQ5DyU8lLkvJTyVOQ8lfJW5LyV8ljkPJbyWuS8
lvJc5DyX8l7kvJfyYOQ8mPJi5LyY8mTkPJnyZuS8mfJo5Dya8mrkvJrybOQ8
m/Ju5Lyb8nDkPJzycuS8nPJ05Dyd8nbkvJ3yeOQ8nvJ65Lye8nzkPJ/yfuS8
n/oA5D6A+gLkvoD6BOQ+gfoG5L6B+gjkPoL6CuS+gvoM5D6D+g7kvoP6EOQ+
hPoS5L6E+hTkPoX6FuS+hfoY5D6G+hrkvob6HOQ+h/oe5L6H+iDkPoj6IuS+
iPok5D6J+ibkvon6KOQ+ivoq5L6K+izkPov6LuS+i/ow5D6M+jLkvoz6NOQ+
jfo25L6N+jjkPo76OuS+jvo85D6P+j7kvo/6QOQ+kPpC5L6Q+kTkPpH6RuS+
kfpI5D6S+krkvpL6TOQ+k/pO5L6T+lDkPpT6UuS+lPpU5D6V+lbkvpX6WOQ+
lvpa5L6W+lzkPpf6XuS+l/pg5D6Y+mLkvpj6ZOQ+mfpm5L6Z+mjkPpr6auS+
mvps5D6b+m7kvpv6cOQ+nPpy5L6c+nTkPp36duS+nfp45D6e+nrkvp76fOQ+
n/p+5L6feABkHoB4AWRegHgCZJ6AeANk3oB4BGQegXgFZF6BeAZknoF4B2Te
gXgIZB6CeAlkXoJ4CmSegngLZN6CeAxkHoN4DWReg3gOZJ6DeA9k3oN4EGQe
hHgRZF6EeBJknoR4E2TehHgUZB6FeBVkXoV4FmSehXgXZN6FeBhkHoZ4GWRe
hngaZJ6GeBtk3oZ4HGQeh3gdZF6HeB5knod4H2Teh3ggZB6IeCFkXoh4ImSe
iHgjZN6IeCRkHol4JWReiXgmZJ6JeCdk3ol4KGQeingpZF6KeCpknop4K2Te
ingsZB6LeC1kXot4LmSei3gvZN6LeDBkHox4MWRejHgyZJ6MeDNk3ox4NGQe
jXg1ZF6NeDZkno14N2TejXg4ZB6OeDlkXo54OmSejng7ZN6OeDxkHo94PWRe
j3g+ZJ6PeD9k3o94QGQekHhBZF6QeEJknpB4Q2TekHhEZB6ReEX8X17xf3hG
ZJ6ReEdk3pF4SGQeknhJZF6SeEpknpJ4S2TeknhMZB6TeE1kXpN4TmSek3hP
ZN6TeFBkHpR4UWRelHhSZJ6UeFNk3pR4VGQelXhVZF6VeFZknpV4V2TelXhY
ZB6WeFlkXpZ4WmSelnhbZN6WeFxkHpd4XWRel3heZJ6XeF9k3pd4YGQemHhh
ZF6YeGJknph4Y2TemHhkZB6ZeGVkXpl4ZmSemXhnZN6ZeGhkHpp4aWRemnhq
ZJ6aeGtk3pp4bGQem3htZF6beG5knpt4b2Tem3hwZB6ceHFkXpx4cmSenHhz
ZN6ceHRkHp14dWRenXh2ZJ6deHdk3p14eGQennh5ZF6eeHpknp54e2Tennh8
ZB6feH1kXv//8vz/Bf+wwR0=
                "]], {{{0.21586641746141014`, 0.}, {
                0., -1.}}, {33.83333333333333, 0.}}]},
             
             ImageSizeCache->{{343.5775325805363, 
              361.8754122300073}, {-19.002392707242166`, 
              109.54268842914544`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.625914955071258`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.4718049612304829`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.44036082889108447`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.18118471104604686`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.6066249132567545`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.625914955071258}, {
               Style["75%", Bold], 0.4718049612304829}, {
               Style["median", Bold], 0.44036082889108447`}, {
               Style["25%", Bold], 0.18118471104604686`}, {
               Style["min", Bold], -0.6066249132567545}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[7, 9], 0.7777777777777778]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndcD3r877PKyKaohGzH0QmV/Y5Dxi/JXhnZIuQY2RmnOCKEQsZRJzJa
KCW9KpRCaWvvvUPabvdx3+/7x73nD+fxfUjf9fm836/xHLxxz+ItbRUUFIJa
//jf/5f/4i4fx/pdIShYHFXgsuIGRQ7atzYgJASzs/vFhXV1olCvrY19VENh
/kHtdUnmTQowWHNzz65QqH89abgp+jZ5f1moHxkSikUZmkYX0u+Q+4ZZCUNV
32JeydLfcjrcp/tVE/86uestek0p6fb693/Jyfr3nikhb6EzvleD4rYHdLmH
lucE1XfA9ZQ+J31cyPa+ygL7Xe/wqMcon4we/9HJP7qUFoe8Q38rr9qc0250
MPjXuVmq73ErS/Xo/E6PaLfJ9+H3dr2Hlbd7cbyrO23NKnpXH/Ie03qVO85c
/oTW7U3fuFQ1DBsWO2ks1XxGSxViFTx3heHhi+U5Ec0eZHQ57G6n0DC4+H1L
9T7iRbMGvZ66WTUcmNRbu+q0N0318kwJ2hUOpVCjf1ocfWiCgatV/9BwzHO5
enVywHMa/cVJZb/qBxg1RvoplLwgrQ0XX0Tt+oD3/ZManozwJbWqU4tHhX5A
cvmkF9f/8qNe1gerzqhGIG/P6zV9o15R5x47L2XsisAfw7cvstYPoLb314+Z
FBqB0klGj0Z5vaY67aWRDqqRyCud+81s4huqwtztFbsiMfeRWZ9DX4KoaOE0
xXmhkcj0sFBaPTWYsjJ1XF1UP+LQxZm7vfqF0Nc9w2e27PqITlrTh5g1h1DU
L7WslaEf8fRQWpZdSSiF2Xc/8Vz1E8J6xD9cnPWWgga21+hm8Qlmuee8ozPe
ka9nnf/20E849RibBxa8Jw8qX/FW9TMu9X5otKY2jFyjs38MsPiMP3INe93u
/oGc1yc6WIV+hsqy9VbfdSLoWmWkTpxqFOoCAlcdXRtJdicR/btFFHQjmtxn
XP1IZ7u/sDgXGgV9jUCrFV8+0ZF7j7rkqkbDcqP6z0jVKNqnfcd9mkU0DI3O
nny0PZrMcWWOU2g0bp8IX3jc7At5j3i7r77LF2x7WNVzS+8YerbnTYib3hf0
KCnr1T0yhh75+fVYavYFNu7bu574O5Zcf3mvb2P3Ba+019Q8nx1H9+c89fDw
/YIGpaxq787x5Gzv1rwm+wsGTzx01io+npyS7ht1Uo6BY+DZ/UouCeQw8PZt
X70YzHYZPnbDwUSy33a9ZJNZDMxdE+adMU6iC572k3raxUB9ntrQHb99Jduf
588F+cbAVnXRzq5dk+kMnU3amR0D76yPlnu/JdMJ2xPD+yvHItbEy/9SRgod
ibY6EKYXi0N3zZZsjkqlg6p/vfvLLBYrLnvnlIWm0b71Fr0H28Viy+XHD4YE
ptPuh9s2RvnGtp6Xd9vaBWTQjkoz76PZsUgoWHbfJjCTtuibKoxSjsPjF5fc
48yyyOzk8oWJenFw7trrmldhFq0NN7l7xiwOF48MS0zck02ruv9P+R92cVAz
t06hhmxatmL21Azf1n//8f2ZYpscMrlHFy5kx+Ef9QSX6L65ZFQ4KWWicjxM
osoCy91yaa72hFEFevHwOvlv3fTJeTTr0FgrB7N42N07PyAoOo8MMDLcwC4e
G7bcP7NlWz5NURqiUuEbj3UWW5W02xSQ/sIBW25nx2NRv8jG3ncKaLyj6ou5
ygkIvJSv1nVKIWln9mxXq5eAO/1cD/RKLaTfRigvdjFLwDajzRvVjxfR8D2K
/5rYJSB1nZe55uBi0vJTqGr2TcD5q6Mm9gwvJs1fDdOfZCdg7tpw66LdJaQ2
58fFlcqJUNJoiHHqV0oq9pVpHfQTYf/UzLTvu1LqmVT823OzRDh0qhppZFlG
XQfmHdlgl4ib9krTtQeVU6dtGRFd/RKxYEKj6bMv5dTB82u/19mJqLlenvT8
dAW1+Rm7bbtyEvYUNB0fq1dJTdM/+/bVT0KC3R/nlEorqc4mvMNbsyS4GPfM
vmZSRd+jQpbutUsCnd+1eerTKqpSCXQZ4JcE6zmWv3Z1rKaydb41kdlJ2O93
1rPflmoqdPOaYaX8FetWWx/8I7SaciseXx6m/xX5/ab95zqwhjL1/suMNfuK
cckLOmw8XkOpJ+6Ntbb7ij3ftm5akVpDSWE3j//u9xV39I6dtpz0jWK7XfuU
kv0VrgY3Rjg7fqOo5ZfUzykn40qFsXroj28Uefecua5+MqpiEsd8XvKdwgpO
++eYJaP0pIOem/d3Ch17vONlu2Tcmrp5qG73H/Tm4KEV0/ySUaPk1Lhh1w/y
D7J0K8lOBnbfyese8YNeKu764aicgj5vLPVGDKslb+Ots2brp6CbceyZC9a1
9OzGBocasxQsf639eFBqLT3KWJ1zzy4F01zW50RM+Emuw5fpLPBLgbKrYtyO
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
fc664yWKhUjephRYMV/BYK1i2tAZGoW475Te/9c6BYM1o1d9ctQpxKOt0VMt
LBUMVhkn/lVhWIiVV7pdG3xawWD5viXqs00LMXJjh5cdrigYLL3xJfS2ZSF0
rY7uan9XwWBxwALzGptCFJWfjurkrmBgkhHZc55zIUZrDZndzkfBwLjtXP97
3oV4HOF3J/OVgoHR8PcbasMKMcWwqY/9GwWD+fNndlyQVginW4Fm7YIVDObu
hqdLdevr/W94kHbrY8OrU1c0KBZBx8WvsmOQgsEsX/8WE40iqOq/XfC3v4LB
jBQ9t4c6RbC8dTXMufX5qOX5ghbDIpx7qZ47t/X1TNPS+bHUtAiX9RdFnL2j
YDDF0MP5iWURPEq7Tltgr2Awyfy3WW1ti6Dpf/fe/RMKBvqXHpWudC7C8uzK
8hM7FQx0fYY5eHoXwXjMpjfFyxQMxic+mKwYXoRDH5bp501TMNBpGJhjmlaE
pV5re/81RMFAW/PO+efVRfhuub6zs6KCwZiZajqdlYrx0eqPR9FRv2j0Vsev
GzSKkR+z0SPowi8a+U8faz+dYqyKy+yuNusXDfe4MqLbnGIUOlpG1Leel6Gx
3aI3mxYj3vHWcauHLaRVe+Hga8tidB66f9XzxS00SK2TZi/b1t93+/XPiPpm
0pxu8367czFULv4+M8O5mTQ2trOAdzG66S5c1GdqM6nZWPdRCS9GQMcP868m
NVG/x82vd6UVI6HOYrr1nibqG3Vk09vqYqgNGNm2Y/sm6l3zs7OaUglezf6k
vOx6I/VUOeCzV6MEpx5qmFwb0kjdJ9esCtcpQXvzLr2+ezRQ13V72mjOKYHm
QvP3Lq3zusvpskf7TUtwvHZMTtybeurktsPko2UJ7mzZ/ObljHpSiiz4Odi2
BDpH1cyOvq2jDhWb7lk5l2Dlp/GbV/xZR+16ZRtGe5egVvVE6LGQn6Sgt65i
WHgJ9Nr2fKk5/Se1rEq9fiytBN+GDb+w17+Wmo6vnBZXXYIhgXZn/htfSw3/
JuSNUirFPq00t6qnP6ju/WI7a41SeJrbPjg77AfVFkePT9IphXt8javDne/0
veuC1N/nlCLqv8eTF/b9TjU6kafPmpbi5rTkMUV236hq2ZzRqZalmHGpn9ml
9t+o4vC7GB3bUpjM8Q/Ye6yGSu/MOHzOuRT/KDk1B36vpuKQoEGZ3qXQSbjh
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

                "]], {{{0.19899632030552927`, 0.}, {
                0., -0.9999999999999999}}, {34.83333333333333, 
                2.7755575615628914`*^-17}}]},
             
             ImageSizeCache->{{351.4381280906359, 
              369.57206548432293`}, {-24.416722459232318`, 
              43.718571612422096`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.8128065878553017`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.736966908141679`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.5501251657470707`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.47039130219590797`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.34766865397792723`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.8128065878553017}, {
               Style["75%", Bold], 0.736966908141679}, {
               Style["median", Bold], 0.5501251657470707}, {
               Style["25%", Bold], 0.47039130219590797`}, {
               Style["min", Bold], 0.34766865397792723`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[5, 6], 0.8333333333333334]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndYjn3Yx5sUJURWiAjZe4TfZTw2ZYRkk1BGicdOFNmRhzKjzGQVMr9X
KLOUtrT3vu+7oRS93uM4z3/e1x8cHTrqvu/rN77n5/vpsnLTHDsNNTW1T3//
+t9/+c92x5U9v+vE46Ji3GlDcUmc2XFmEobGY4/966Pj91wR9w9GrA5YGY/P
VV0tS8r8xCfvmv2HT8ZjpVeXMs2B10Sen/nVjS/j0dFVK3+3h79Qv7cYcwvj
UffsUGheSYAwfnEidYRRApKtt3l9sr8hRnyQ6zpOSMBuW/1hd6pvijnxqnaa
mxOwxd+l+I/vbbExq9uIgosJeOxxffKIOYHicPn8+ZEfEzAjemyTF52DREC9
p8uj6gRsXl1SlK5xX8i6L06fM02E37g2g2v3PBApRqUPdlslImJ96LtzHg9F
tWnnryv2JELzY22nNT6PRMuBs0sn3UlEcN3373ueBIu+Yw807ZOYiHb9hxyM
SA8RU6Y/7tVCKwn1Ohfvzmv1RKxamD+5ekASLFbnHG0976lwtWu3JmVJEhY0
NvbKvBwqzjtPd5ePJGH4nR5uVyqficeue65df5qE40d8WppYvxDRx+7LR3KS
YGxs2Kyn/FKU+GambWqRjF9tqn5uGvpaNL5p+Hve2GTkV4kw/xCIriH/dBjl
kIzEVpoTH16Wxdiwf0d29knG000Rg6/YhwmbqNsLtMKTce/X1T5pQ94Il5SU
rYXKZAyZGWNo3uitOFmgfyaq03dM6K4YOSLlrQisEo+Cp3+Hfk2w/dPgdyJC
wznaZ/t3TB7hMnPOyXCRaRBQtuf6d0zR3zfh/oYIUW+coLfq23f0NRxzavGs
96KtuU7vKQ3f8W/YctefAz6IwcNHTe3bJwWjBh90bN76o5g10dG+pU0KOsfu
XTLo10exfvZlj58eKXi3t/X87PRPwmNptP+PRylIHfjkZUD4Z+HnoPEmLD0F
nnNffqi480W82D4k44beD5yqaFk39WSkSPRY8+foyB/Yvf+FX0fnKKE67WPs
tOYHWjd+tjRrzleh7/dp1HzvH+gZ6qg43DZa9AyqX2gh/0DowgGLdA5Gi4nP
+/1rUvoDr+piLt5URotl75f/p90+FXfEhtudbWPEzrjTwUWTUjF48IwlPd/E
iLOZ72K+bklFUUDu0J1m38TDsuryEL9UOPRdHhR16Jv4Utez2fnIVFy+vNon
I/ebyNex7eP6KxVNnR+5O0qxQtPo+LTVPdKgkZrTZuC5WNHJFGunzktDN5e4
DeWFsWLkAOXBfm5pOBPesNVhRJyYN8b0uuG9NDRua2fpuD9ObJ5m/bbmexpy
joy49vJ9nDi64FBmauN0GPfPqTbXiRc3Vj9reDMkHR6z3uoemRAv3jgVd7y1
Ih0ZNc06PNwRL1L3dhx9/EQ6wv/8O2r3nXhRc9RykfOLdDQ8Vx7/Eh8vDH3d
ti8oSIf63JHennXxom2szfTLTTJQanvP9mKHBHE92fl78y4ZmP+zw5vaoQli
UMbRdQeGZ+DhWuPzPtMShJwXUFM1MwOvnnxJ2maTIGaVvjq0dnUGNuiefuKz
MkH8qEgwStmZgUTl6486axLEul/l12eeysDI4xXtklYliJ9qukPlmxmYZmnS
p9PiBOHeuOu7Qa8zILUzaVw7K0G0bGYx93pcBr4UFQ04PjpB+LWal9WmOAOH
kzcGaHdPEP06bHA6op4Jg5yesrdOgnjR5aDa7zaZMD1YOtglP15M6Xnl5KZ+
mfh0/87r9LB4kdAvtFPWxExYxhnVtvWJF6uHxgTNs81Em1V5wevWxwuVRdHo
906ZGBT7Ib/ryHjhOl7zy0jPTDg8sdrgqxUv9Kca2969nIl5Vy0te0TGifOW
Q4s6Pc7E7jI9z97ecaLn/Fk7Tn3OhMuKj/p6C+LEk8X2OlpZmdjRvkt4/3Zx
YuKqfee21WSi5RLPhj/JsSJmna9ZYbMsmNWe71fiGyuWbn702LZ7FnIuBexb
bxMrSrZ9nhhlkQVjw6f9FG1jxc49ObHSnCyoLKy6VCd9Ezruv1cGr82Cg42m
90/fb+K/I0aq7q5Z6F6196HT4m/C9FR/N5//srAz3PZirsk38eDclOZN72bh
c46P3rf8GDH28oore95kIaFIp2fIwxjxJWBnP0VSFh729w8zcI0RiwK9X60s
z8LQzubt11jFiPyHd2fEa2fjXdNgTwuzGOESGp4y2TgbVzqqN9VTjxEaSFv/
fFA29COsSqwzo4VX+M/aPlOzkWUZ7+HzPlp0+tL88JVl2QisrbpgGRItAr/1
attyWzZmX8t4WnkzWoxMHn/T/Vg2QtHw4c+1aBGRbjvs57VsXLxw8H3m9Wgx
L88lfN2zbKgX9F3Y7GG0yCo5Pu/H12zc6zLKSfkuWmyquJE9Ky8b8dqXvar/
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
21ijSRc1pea5Ob3D60phH2DTeNt7TelS8e/nw1uWIdA9YLaGSlPqrTKadqdn
GUJ+HYr60kFLCq3pn2wsylCUoRv4ZKKWNKlhytqT1mXIvzf7iJ+jlhSnvfKn
umMZHtdn3VrvrSWt0Nt10GV/GWreL1KrCtWSylueaZ3vU4bpYbsdOqdqSXva
BQXY3C/DhitLP31s0JKamEQM/hJehjN795nFmWhLPmbpb8b+KIP29WsJnSRt
yaxvzeyHqjIYXza/dmSJthQ8uEWmqW45Ap2Ks2u2a0vjRplvPtu5HO0/mt2d
flpbipImNOgM+/t1syuZdre1pcWTF5/YNaMcEYozK3q/1paKZm7tWLayHHv+
Od7JLVpb+nfeibvLd5TjVsTrMTMztCVt25sWsSfL0aNSd/C/pdqS9wr50z83
yjFPa3lK/k9tyWRtsk3oy3Ks9d333+EGbeneRlWBeWw5hgXVLJyi1UgavbXp
9kuF5TifZvm5RaNGUs6Y05o6agocqJs7N/7v//cJ6zR9XFMF3CZsNXdXayQ5
Tww8vdNIgd0bezq2qNWWnr0f/j24iwJRv/8xdS7TltSmv+tS2keBqW+WW1/6
+/omRVmtMxuhQItIA71jX7WlE7NTHyyboIDeYPPFI19oS3Fx62p8Zilg1rVq
/TV/banDwmrxzUaBP+8mOUV4aksrU/YfamqnwJJ5117eWK8t3V5q8HXiZgVS
XefemzRVW1JkXjDau0uBisanQgO7aUvD7HoufXpQgVF/7tuk1v99fgUh1xWn
FLgY4Nw6N0ZLeucwrrTXJQXWznN1jPLXkpqWRw5ZdUuBiMH63244a0lznBft
vhisQI8v8Vf2jNWSfKry3sa/VqA+2lZndWMtKWP7lqYGnxQ4d8an8YZITcms
vmHOlHgFcj52nRPkpSltcD123i1DgapJWeMtZmtKIRrtsp4XK+DlYfe+n4Gm
9Mvjeq/KagXML5VNu/pJQxqvO8ipr4YS+atn+QUd0JA8j70OXaOvxPO514s2
jdKQvhpMV/Nrq8Rbr64e2uXqkpF34uRkUyVqXb4XHruqLi02Wn2yZX8lGu2L
Otd9jroU4KtImD5KidUu42rK1dSlIuM9nTz+USKpzHmC/j01aaCf7prXVko8
s01bfcVGTdpuejbop60SxQHt0j9oqkm40bVqgL0SBoEZS21sGkQj8/uj1zsr
YeX0YOWPW3/EjCALd/89Spyd8UxzZfVv4T3gw+cfnkq8d7OIGDj+t/gePM/Q
6IwSpkHqkvexetFleOYiyytK1H9dkhEZXyfWPt9wzfOOEv7a9aE9O9WJ+2N+
FYY9ViJw2tvJRXa/RJV8cGCdrMSag3XjFgbVitETDXcM+aLEyb1ly59W1ogD
76/IGxKVcPYcPmD66BrxaVofnZtZSqy6XZFq7f5TtIgKtcwoVaKXg7p+28hq
sWD2P+fa1SrhoNx9O9qoWlyOi0mbo6VCl/SreLmiSuQuWGp2zEAFp4Ujrdvc
qxR9Uoo2hLdXwbnkyT/t6ivElqX/Pv7TXQWzf0271E6vEM8zNX8PH6iCylip
X3xJJdTsvCY6jf778+y+BpmolGJygfGxO5NVWDL8tPbHKUpxwuF2bPYcFf6Y
jFrb/JpCxJcN7dBxqQplAZafpPpyYez8ZuX8dSqkeqptEc/LxMqqWXdOuqhQ
meZ+ePXeUnF7e4ryg6sKR7SN1FVTSoSizn6kxlEVPvaurzZtXyyGu1buszir
gnvFmXsDVIVir4bbB5erKniZO3pPiSkQ4R76ze/dVeHVgjHjzj7NF011zy/I
f/r39XcMOjX2ep6Yc8zsislbFYL777+//Hyu8DUIzrOJUuHGu079jc7liIzT
op93sgq7J1f13nIhW/Qw+rL1S44KfjOD1h+8mSU2+C58pa1QYWP+LVebF5ki
xDhXS9SpMOT3f7WKhAxRd8VpxvZGFfB3t+/sW5kuxpv+8X7YogKL1Nr8iJyW
Jg7fOJJSZFyBPj3aTHN48ENE92pj2q1nBc67VR5a0j1FGAX5r18yuAK2bo+y
d95OFksGDHh0dmwF2o5vO/786CQREPyy9uvUCty40HHw8bQEUTxs6jhd6wp0
vfN1ZNuT8WLQ83jP8csrYPZxfEb9zDixfczK6F0OFXC2cDP62T5WQC5r83hb
BYbcbPXwVVWMaDRx17IytwqU/dLL10iLFjPfN77Z43gFSnZ8uVR446s4M+1M
2XKfv1+/2xi8KzBSpESaDDvvX4HHYyx8mnz8LLrMDtoTe68C+9q9XZv+56NY
GzcyXO95BUwav3w+dsYHcX9BhN6k8Arc8ti2a92DCFH9fc481+gKtB5o+OmC
ebgYszT9QmhKBZJ9X4Y1e/5WHMh0yFbmVWB9n7mHmix9Iz6trjHvrapAM1u/
dLl1mGhR4O68+ncFcuw/+ibJEAsdWjy/pFMJjanuwmvnK3Gl7JJ6omElVn+I
Me264IXIczKf2rxzJWznbAlsav1M9Kl64jXVvBJiuNfQr85PxZbtE5L2D62E
84ttzaruPRbP6752filVotnNETP0dEKEuuti+6rplfhWuuq/wN2PxBSNwnv9
FlRixVbt58ubPhQnPLZW26+sxJ3UV5mldvdFvI7G2KsbKuFmGuhpnHNXGB87
4fF9eyUs7W5Nkk/cEasMOkQaulfiVdTRJ6tW3RJ3Tt9sNfNkJRJyz7rdWHZD
KFsPWXzwfCWso0K+j3ELEMN9ZX9cr0SpfUJSZfg1sdd4ZnHNg0rkf7d5dLf3
VRF+JXnQoJeVOPFL+eTZ8itCz3TNTof3lZi06qChWcBFMfeGKizgWyWYH/v2
ctVNS/3/X9P3g7+ffh7459HvA/8+ej3g10OvF/x66f2A3w+9X/D7pc8D/HnQ
5wX+vOjzBH+e9HmDP296HuDnQc8L/LzoeYKfJz1v8POm9QBeD7RewOuF1hN4
PdF6A683Wo/g9UjrFbxeaT2D1zOtd/B6p/0A3g+0X8D7hfYTeD/RfgPvN9qP
4P1I+xW8X2k/g/cz7XfwfqfzAHwe0HkBPi/oPAGfJ3TegM8bOo/A5xGdV+Dz
is4z8HlG5x34vKPzEHwe0nkJPi/pPAWfp3Tegs9bOo/B5zGd1+Dzms5z8HlO
5z34vKf7AHwf0H0Bvi/oPgHfJ3TfgO8buo/A9xHdV+D7iu4z8H1G9x34vqP7
EHwf0n0Jvi/pPgXfp3Tfgu9buo/B9zHd1+D7mu5z8H1O9z34vqc8AM4DlBfA
eYHyBDhPUN4A5w3KI+A8QnkFnFcoz4DzDOUdcN6hPATOQ5SXwHmJ8hQ4T1He
AuctymPgPEZ5DZzXKM+B8xzlPZnzHuVBmfMg5UWZ8yLlSZnzJOVNmfMm5VGZ
8yjlVZnzKuVZmfMs5V2Z8y7lYZnzMOVlmfMy5WmZ8zTlbZnzNuVxmfM45XWZ
8zrleZnzPOV9mfM+zQMyzwM0L8g8L9A8IfM8QfOGzPMGzSMyzyM0r8g8r9A8
I/M8Q/OOzPMOzUMyz0M0L8k8L9E8JfM8RfOWzPMWzWMyz2M0r8k8r9E8J/M8
R/OezPMezYMyz4M0L8o8L9I8KfM8SfOmzPMmzaMyz6M0r8o8r9I8K/M8S/Ou
zPMuzcMyz8M0L8s8L9M8LfM8TfO2zPM2zeMyz+M0r8s8r9M8L/M8T/O+zPM+
8QCZeQDxApl5AfEEmXkC8QaZeQPxCJl5BPEKmXkF8QyZeQbxDpl5B/EQmXkI
8RKZeQnxFJl5CvEWmXkL8RiZeQzxGpl5DfEcmXkO8R6ZeQ/xIJl5EPEimXkR
8SSZeRLxJpl5E/EomXkU8SqZeRXxLJl5FvEumXkX8TCZeRjxMpl5GfE0mXka
8TaZeRvxODCPI14H5nXE88A8j3gfmPcRDwTzQOKFYF5IPBHME4k3gnkj8Ugw
jyReCeaVxDPBPJN4J5h3Eg8F81DipWBeSjwVzFOJt4J5K/FYMI8lXgvmtcRz
wTyXeC+Y9xIPBvNg4sVgXkw8GcyTiTeDeTPxaDCPJl4N5tXEs8E8m3g3mHcT
DwfzcOLlYF5OPB3M04m3g3k78XgwjydeD+b1xPPBPJ94P5j3Ux8A7gOoLwD3
BdQngPsE6hvAfQP1EeA+gvoKcF9BfQa4z6C+A9x3UB8C7kOoLwH3JdSngPsU
6lvAfQv1MeA+hvoacF9DfQ64z6G+B9z3UB8E7oOoLwL3RdQngfsk6pvAfRP1
UeA+ivoqcF9FfRa4z6K+C9x3UR8G7sOoLwP3ZdSngfs06tvAfRv1ceA+jvo6
cF9HfR64z6O+D9z3UR8I7gOpLwT3hdQngvtE6hvBfSP1keA+kvpKcF9JfSa4
z6S+E9x3Uh8K7kOpLwX3pdSngvtU6lvBfSv1seA+lvpacF9LfS64z6W+F9z3
Uh8M7oOpLwb3xdQng/tk6pvBfTP10eA+mvpqcF9NfTa4z6a+G9x3Ux8O7sOp
Lwf35dSng/t06tvBfTv18eA+nvp6cF9PfT64z6e+H9z3kw8A9gHIFwD7AuQT
gH0C8g3AvgH5CGAfgXwFsK9APgPYZyDfAew7kA8B9iHIlwD7EuRTgH0K8i3A
vgX5GGAfg3wNsK9BPgfY5yDfA+x7kA8C9kHIFwH7IuSTgH0S8k3Avgn5KGAf
hXwVsK9CPgvYZyHfBey7kA8D9mHIlwH7MuTTgH0a8m3Avg35OGAfh3wdsK9D
Pg/Y5yHfB+z7kA8E9oHIFwL7QuQTgX0i8o3AvhH5SGAfiXwlsK9EPhPYZyLf
Cew7kQ8F9qHIlwL7UuRTgX0q8q3AvhX5WGAfi3wtsK9FPhfY5yLfC+x7kQ8G
9sHIFwP7YuSTgX0y8s3Avhn5aGAfjXw1sK9GPhvYZyPfDey7kQ8H9uHIlwP7
cuTTgX068u3Avh35eGAfj3w9sK9HPh/Y5yPfD+z7kQ8I9gHJFwT7guQTgn1C
8g3BviH5iGAfkXxFsK9IPiPYZyTfEew7kg8J9iHJlwT7kuRTgn1K8i3BviX5
mGAfk3xNsK9JPifY5yTfE+x7kg8K9kHJFwX7ouSTgn1S8k3Bvin5qGAflXxV
sK9KPivYZyXfFey7kg8L9mHJlwX7suTTgn1a8m3Bvi35uGAfl3xdsK9LPi/Y
5yXfF+z7kg8M9oHJFwb7wuQTg31i8o3BvvH/9ZH/B1osU1w=
                "]], {{{
                0.15135204204915775`, 0.}, {0., -1.}}, {35.83333333333333, 
                0.}}]},
             
             ImageSizeCache->{{357.583462930111, 
              378.98397940926293`}, {-41.93344200230793, 
              33.422603515548914`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.0930317506372205`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "1.0370853625610554`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.9516108957202357`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.829528604396353`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.5151388170129128`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.0930317506372205`}, {
               Style["75%", Bold], 1.0370853625610554`}, {
               Style["median", Bold], 0.9516108957202357}, {
               Style["25%", Bold], 0.829528604396353}, {
               Style["min", Bold], 0.5151388170129128}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.7058823529411765, 0.49411764705882355`, 0.5450980392156862], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlYTW3Y9qO0jSFzEiFk9kimuBcPoTImkjGZlZlQpsxjmTNlCCVT5hDn
kmR4SGmiedq73bwHQ5R8vuO7ru+P9/UHR4fau73Wve77vH7nz3Lu8knzaxoY
GNz9+9f//Zf/NN0VFdOj9BPm/u5hO+RxkLj7dmrs/VYJGNJo8oDs9RfEhAal
SYPtE3Au0vJP6pWLomyCX0bUqgS0uNaycmD+JXHwWAvlmPMJcKsf8SrU5rLo
9vlGSdx/CYjZvrjy08kr4l3r4V+nViRgv7FLiIdJiFg0O6Uys2MiLJbbXDU6
FSqMgz0NF0xMRIXJIoNZA8LEFVWNeqWbEnFu94XBzUqvi3+7njRdE5aIU8d2
Xn7/6KbI8epuVpmciMRlSQHtT90WW+68sPQzTMJUL/uxn9+EC4tvU6zr9E7C
WbdZS2rF3xGRA0p6B8xIgrmzx6bZyrvCzXfbgBZ7k6B7uvCDtfF98RPNpaAH
SVjSxioouO8DcdLwxiir3CRci3/7QrHsoeg3atj4GybJCJmdaH3gwSORuC95
St/ByXi5f7+3e93HYlXs0llPFiYjqcP1A3c9n4hGpjUWDDuWjOs6pfnl9Kfi
tssJrzdyMlZX50uT3Z6Jsae6rR1fmgxv89X1UpXPRXG67JvcKgX9vkUHXBKy
2Ntuyo6Z9ik43PZ32LgmL0SXecX781elYKDiUUdt6QsRE7L16NLzKXAdGLV7
58coMa+42RndfykIr84vqRnxUhj2un5pQ0UKCuWQxOkh0eLiKinMwOozejeP
M9x87pUQD5Pu7J74GWM9izwmnY4RmT+XPDbZ/Bn1mgh15LnXwneIwYvjYZ9h
437A+2zIG2G27fgb85TP+JCclvru0VsREd01LtjwC9queXnHPPadmFpbTuna
+wvO/J7l6V70n/jm6JJ1Z8YXpPjbO3rU/yCO+hepBuz9gt6v5PkFfWPFPwlb
yvDgCxpgwcObcz6KuObNvtvnfkHyl74nB4yJE8vcwn5/MElF9Nj8jxvy40SD
IFHLZXAqFEcG1SveFi+u5yTWT1+YijOnSzbPtfwkxlgtaepxLBWlabrVz6M+
CfWiP62L5FTMrZy4/OX8BLHrxrEOK0tT4Za0cJF93UTRUWPdraJVGgpjj5u0
DE8UUX3xzxb7NEwb32R27alJwt178iDj1WnYPUJfnFydJP48KRx28Hwasq0S
zJ1DksW56s1jmr5Pw1xrL6uRE1KE3fCmE89UpEGd1a/vmp8pInXnNdf2VulY
3FJ54eqlz2L926Fzrk1MR2ja8O6XHL+IFg0SF/benI7+rj96dP/6RTyYsHj5
o7B0rOzXIqHO2VThfKx63dCUdJx82c7V4N80oU05uvmVYQaUha1GJqnTREBr
611OvTOw7szGsHEH00XP2c8PJszIwLQ6B2b17Z0h3l9yPu62NwOP3+UMcozP
EEtV6rM5DzKQleg/bfaKTFGn6+bLi3IzYLTw+cRBDbJEiFeTG+UmmXCrbbc6
NCRL2N8JvbducCa+PphiENk2W+R/HfL098JMeMi/79ktyRZ+AxKidhzLxJfj
EyLFvWxh6bvoXb0XmagzsKxj+K9sAfyOP1Kaide1Yy5vlnLETMOjX1qZZeFq
vxsbjuzIEZX2XXIu2GchecSJoC8xOeL0vmfqzquzsCV2/t5RilwxIHaS5tb5
LFROGfEodmSuSG6s/tHvfRZSEnou9vDLFWtdNv2JrMhCv+eZ4ZWRuWKf017D
S6bZ8Fk11cf/W65wLXPereySjTUrDE+17J4nugRY1LMWf/9/3cSXR+bkiR99
Cg95umTDPs4juepInohJuGcavjQbXU92GDv1ZZ44vnbzCf22bOha+OQHafPE
vBZjzPoHZmPsk15PvrTJFzaPmwRtvJWNyoO2TRqMzhc1p2daPo/OhnpSg7rS
inzxqSr0So20bBR3eOrncyJfXAxabT1S+/fnI/3M3z3JFyukoTf3KHLQvp6H
5YCMfCHl1u7zvk0OkrbtXp3wO1+Y7Ei439AmB4caxa6/bq4UmVZBA5wdcqCq
ddAofqBS3Hy9KPLEnBxM/hMjprgohe/ivlLquhzYR1T7j1uuFI71ql+2OZgD
i9dZvrG7lcLs5ptR7sE5qN/z67HiIKUoGnf0v8uPc9Co/sWJkfeVIkIzc7z6
Yw6qr1z9NfWtUuw50iWhmyoHwst9b3K6Ukyx0U9ZXpWDjQF1D0woV4pOyc9S
75rmYkaN/nWyDFTiu/eeWd+75GLE9QSPM41VIrqVc+5AkQuT1HRx3lIljj1t
s2CTSy4u+TVYZNRHJebOVBfKS3PRZMSL+/lCJf75c9fLyC8X7w4N+zptnEoY
XNykHRWYiwFe9xI3zVCJuOGj1+6/lQulJuXj4iUqcSHf9GdsdC7yxn9o2X+9
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
WW0XO5rYXhOz2geEP52rh2rd9Km5jiFi5Oq1qzK89Dhv55F/2O+K6BHtZvNn
vR7yy1Erx3wOFs2aSd/b7dBjSD9xepTjJVE13ypiuL8edq4XjTO+XBD5D+tu
nHdaj9Ydfx/6bHRe/KfQDN51RQ/mr/dck36HhP/vr+n7wd9Prwd+PXo/8PvR
7wP+fej3Bf++9HnAn4c+L/jz0vUAXw+6XuDrRdcTfD3peoOvN90P8P2g+wW+
X3Q/wfeT7jf4ftN6AK8HWi/g9ULrCbyeaL2B1xutR/B6pPUKXq+0nsHrmdY7
eL3T8wB+Huh5AT8v9DyBnyd63sDPGz2P4OeRnlfw80rPM/h5pucd/LzTfgDe
D2i/AO8XtJ+A9xPab8D7De1H4P2I9ivwfkX7GXg/o/0OvN/RfgjeD2m/BO+X
tJ+C91Pab8H7Le3H4P2Y9mvwfk37OXg/p/0evN/TeQA+D+i8AJ8XdJ6AzxM6
b8DnDZ1H4POIzivweUXnGfg8o/MOfN7ReQg+D+m8BJ+XdJ6Cz1M6b8HnLZ3H
4POYzmvweU3nOfg8p/MefN5THgDnAcoL4LxAeQKcJyhvgPMG5RFwHqG8As4r
lGfAeYbyDjjvUB4C5yHKS+C8RHkKnKcob4HzFuUxcB6jvAbOa5TnwHmO8h44
71EeBOdByosy50XKkzLnScqbMudNyqMy51HKqzLnVcqzMudZyrsy513KwzLn
YcrLMudlytMy52nK2zLnbcrjMudxyusy53XK8zLnecr7Mud9mgdkngdoXpB5
XqB5QuZ5guYNmecNmkdknkdoXpF5XqF5RuZ5huYdmecdmodknodoXpJ5XqJ5
SuZ5iuYtmectmsdknsdoXpN5XqN5TuZ5juY9mec9mgdlngdpXpR5XqR5UuZ5
kuZNmedNmkdlnkdpXpV5XqV5VuZ5luZdmeddmodlnodpXpZ5XqZ5WuZ5muZt
medtmsdlnsdpXpd5Xqd5XuZ5nuZ9med94gEy8wDiBTLzAuIJMvME4g0y8wbi
ETLzCOIVMvMK4hky8wziHTLzDuIhMvMQ4iUy8xLiKTLzFOItMvMW4jEy8xji
NTLzGuI5MvMc4j0y8x7iQTLzIOJFMvMi4kky8yTiTTLzJuJRMvMo4lUy8yri
WTLzLOJdMvMu4mFgHka8DMzLiKeBeRrxNjBvIx4H5nHE68C8jngemOcR7wPz
PuKBYB5IvBDMC4kngnki8UYwbyQeCeaRxCvBvJJ4JphnEu8E807ioWAeSrwU
zEuJp4J5KvFWMG8lHgvmscRrwbyWeC6Y5xLvBfNe4sFgHky8GMyLiSeDeTLx
ZjBvJh4N5tHEq8G8mng2mGcT7wbzbuLhYB5OvBzMy4mng3k68XYwbyceD+bx
xOvBvJ54PpjnE+8H837qA8B9APUF4L6A+gRwn0B9A7hvoD4C3EdQXwHuK6jP
APcZ1HeA+w7qQ8B9CPUl4L6E+hRwn0J9C7hvoT4G3MdQXwPua6jPAfc51PeA
+x7qg8B9EPVF4L6I+iRwn0R9E7hvoj4K3EdRXwXuq6jPAvdZ1HeB+y7qw8B9
GPVl4L6M+jRwn0Z9G7hvoz4O3MdRXwfu66jPA/d51PeB+z7qA8F9IPWF4L6Q
+kRwn0h9I7hvpD4S3EdSXwnuK6nPBPeZ1HeC+07qQ8F9KPWl4L6U+lRwn0p9
K7hvpT4W3MdSXwvua6nPBfe51PeC+17qg8F9MPXF4L6Y+mRwn0x9M7hvpj4a
3EdTXw3uq6nPBvfZ1HeD+27qw8F9OPXl4L6c+nRwn059O7hvpz4e3MdTXw/u
66nPB/f51PeD+37yAcA+APkCYF+AfAKwT0C+Adg3IB8B7COQrwD2FchnAPsM
5DuAfQfyIcA+BPkSYF+CfAr8f5/i//kWYN+CfAywj0G+BtjXIJ8D7HOQ7wH2
PcgHAfsg5IuAfRHyScA+CfkmYN+EfBSwj0K+CthXIZ8F7LOQ7wL2XciHAfsw
5MuAfRnyacA+Dfk2YN+GfBywj0O+DtjXIZ8H7POQ7wP2fcgHAvtA5AuBfSHy
icA+EflGYN+IfCSwj0S+EthXIp8J7DOR7wT2nciHAvtQ5EuBfSnyqcA+FflW
YN+KfCywj0W+FtjXIp8L7HOR7wX2vcgHA/tg5IuBfTHyycA+GflmYN+MfDSw
j0a+GthXI58N7LOR7wb23ciHA/tw5MuBfTny6cA+Hfl2YN+OfDywj0e+HtjX
I58P7POR7wf2/cgHBPuA5AuCfUHyCcE+IfmGYN+QfESwj0i+IthXJJ8R7DOS
7wj2HcmHBPuQ5EuCfUnyKcE+JfmWYN+SfEywj0m+JtjXJJ8T7HOS7wn2PckH
Bfug5IuCfVHyScE+KfmmYN+UfFSwj0q+KthXJZ8V7LOS7wr2Xf+nD/t/AAck
mHk=
                "]], {{{0.14061609441866457`, 0.}, {
                0., -0.9999999999999999}}, {36.83333333333333, 
                5.551115123125783*^-17}}]},
             
             ImageSizeCache->{{365.43164136630577`, 
              386.6930497374835}, {-37.30781013252265, 35.393805693746756`}}],
            
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.9798404660682739`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.9504845140911155`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.8830489099412542`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.6959642507507461`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.5220550751133557`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.9798404660682739}, {
               Style["75%", Bold], 0.9504845140911155}, {
               Style["median", Bold], 0.8830489099412542}, {
               Style["25%", Bold], 0.6959642507507461}, {
               Style["min", Bold], 0.5220550751133557}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], 
           "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, 
        {GrayLevel[
          NCache[
           Rational[2, 3], 0.6666666666666666]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndczm3496+mSsOW28qWPRJZxxki5CaJjBsNZMus20pk3FbZOyM70pSU
80xDaWjvcV11JVKJhvb19Lye43j++P3uP9yv68WLq+/3PI/jM94D7HYu3aAs
kUhetP/yf/9P/x16WrV2q0YpzIrQOzvktDdobu/9cVmTHFxa4YG74RO4NsF8
yMwKObh69O/RUPYUBjXsPT2sUA6f9ZKeG0Y/hzfhD350SpbDlEaNh9kfX8KM
40l/N0XIQcWzZ1168Sv4bN7sVxIgh1+hd4xcu76BFbrDuyc+lsM1uy9WT839
QJ62zDn4uhwKNtTfL/b0h903j+V5nZHD9A9P02dUB0Db2tczzxyUg26XjmcT
HYLg3OC8B7u3y+GTz7axvtXBoF/eQW3NOjn4OnUr0rgaAk98jRzNLOUQNF02
S9MqFCbus40fM1sOGSUj1pWNDAMx9cIY/Uly+HBv58pigw+wSPLeU2mYHAbu
fXHzfi8BudFlteX6ckjSmzPDcEIEbDrbzSZdSw6pXU/XB636CLVLTN+Ht5SA
6+00jbrLkXCsx45+T6tKYLBjgex6YRTo5t865iEtgUsJq3OWTouB2w8+yV1S
S2Dv+2Hl+S8+wfBNtfPso0rg3Z8Qh5+j4yBo1ICXFsElMMw//5ZZ9GeY9XuR
rvGzEtj88PyJO04J8OXtv079b5WAkzz3H/+JSbDm8NN0jXMl8Ozzt36D1JPh
+6z0yb8Pt382nJDWsS0Z9mso3c7bWQInXz1Xr1FKBdWk0W1Rtu2/r9AbO6VL
GnhcXmX72qoEvJZenDp1bDr0W3kq6rpZCby+I5u/YmUGvOgXOOzY5BJ4eGfo
pgqPTJgil/63xbAEVv1yNbHOzIKo5zpVVr1LYNeOa0E/DHNg6c6pljN0SmB4
Zrf4DudyochoU+BQRTGoTLfVU7Tkwbamyz07/SqGq653Nww+XACNXPzbWFwM
ro+at6RrF8FJ98qC4vRiCHs2JWXQcil0XfiXaUJMMXiHmTiWjpbB/U7zvINC
iiFV0uFbqk4xjM7c08HrRTHIa8Yv1q4vhtDb97ecvlMMehLVob5fS2CebWKi
04ViMB9y1CKzSA7pQ5vGrXYthuaJPWNvykrBtmLolTm7iyHknyWeuhVfocrP
6s9oh2Ko77Xbdq6iDA4ecF3Vc3kx9D9w1HVx7++gMeNVuMS8GKxLnl42YuVw
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

                "]], {{{0.10619374741120371`, 0.}, {0., -1.}}, {
                53.66666666666667, 0.}}]},
             
             ImageSizeCache->{{494.8031771410017, 519.2018681637761}, {
              41.86312808650975, 96.0063167270204}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.2448106892728108`"}]}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.2682154481670961`"}]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.4287985894320555`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.45705365545534415`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.48330431894310777`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], -0.2448106892728108}, {
               Style["75%", Bold], -0.2682154481670961}, {
               Style["median", Bold], -0.4287985894320555}, {
               Style["25%", Bold], -0.45705365545534415`}, {
               Style["min", Bold], -0.48330431894310777`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[13, 18], 0.7222222222222222]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
gAaTtzn8vcsDAsaq2RbsLMCJhmfPjftwF7ZHltfecilA6RtRIyeru8MvfQdd
reQC/KGd7lNacAf8fsm//y1UiJzHbvFJmRW14n+/pvcjv59+H/Lvo7+H/Pfo
8yB/Hvq8yJ+Xvg/y96Hvi/x96XogXw+6XsjXi64n8vWk6418vel+IN8Pul/I
94vuJ/L9pPuNfL/pPCCfBzovyOeFzhPyeaLzhnze6Dwin0c6r8jnlc4z8nmm
84583ul5QH4e6HlBfl7oeUJ+nuh5Q37e6HlEfh7peUV+Xul5Rn6e6XlHft5p
HiDPA5oXyPOC5gnyPKF5gzxvaB4hzyOaV8jziuYZ8jyjeYc872geIs9DmpfI
85LmKfI8pXmLPG9pHiPPY5rXyPOa5jnyPKd5jzzvaR8g7wPaF8j7gvYJ8j6h
fYO8b2gfIe8j2lfI+4r2GfI+o32HvO9oHyLvQ9qXyPuS9inyPqV9i7xvaR8j
72Pa18j7mvY58j6nfY+870kPIOsB0gvIeoH0BLKeIL2BrDdIjyDrEdIryHqF
9AyyniG9g6x3SA8h6yHSS8h6ifQUsp4ivYWst0iPIesx0mvIeo30HLKeI72H
rPdIDyLrQdKLyHqR9CSyniS9iaw3SY8i61HSq8h6lfQssp4lvYusd0kPI+th
0svIepn0NLKeJr2NrLdJjyPrcdLryHqd9Dyynie9j6z3yQ8g+wHyC8h+gfwE
sp8gv4HsN8iPIPsR8ivIfoX8DLKfIb+D7HfIDyH7IfJLyH6J/BSynyK/hey3
yI8h+zHya8h+jfwcsp8jv4fs98gPIvtB8ovIfpH8JLKfJL+J7DfJjyL7UfKr
yH6V/CyynyW/i+x3yQ8j+2Hyy8h+mfw0sp8mv43st8mPI/tx8uvIfp38PLKf
J7+P7PcpD0DOAygvQM4LKE9AzhMob0DOGyiPQM4jKK9Azisoz0DOMyjvQM47
KA9BzkMoL0HOSyhPQc5TKG9Bzlsoj0HOYyivQc5rKM9BznMo70HOeygPQs6D
KC9CzosoT0LOkyhvQs6bKI9CzqMor0LOqyjPQs6zKO9CzrsoD0POwygvQ87L
KE9DztMob0PO2yiPQ87jKK9Dzusoz0PO8yjvQ877KA9EzgMpL0TOCylPRM4T
KW9Ezhspj0TOIymvRM4rKc9EzjMp70TOOykPRc5DKS9FzkspT0XOUylvRc5b
KY9FzmMpr0XOaynPRc5zKe9FznspD0bOgykvRs6LKU9GzpMpb0bOmymPRs6j
Ka9Gzqspz0bOsynvRs67KQ9HzsMpL0fOyylPR87TKW9Hztspj0fO4ymvR87r
Kc9HzvMp70fO+6kPQO4DqC9A7guoT0DuE6hvQO4bqI9A7iOor0DuK6jPQO4z
qO9A7juoD0HuQ6gvQe5LqE9B7lOob0HuW6iPQe5jqK9B7muoz0Huc6jvQe57
qA9C7oOoL0Lui6hPQu6TqG9C7puoj0Luo6ivQu6rqM9C7rOo70Luu6gPQ+7D
qC9D7suoT0Pu06hvQ+7bqI/D/9/H/b++Drmvoz4Puc+jvg+576M+ELkPpL4Q
uS+kPhG5T6S+EblvpD4SuY+kvhK5r6Q+E7nPpL4Tue+kPhS5D6W+FLkvpT4V
uU+lvhW5b6U+FrmPpb4Wua+lPhe5z6W+F7nvpT4YuQ+mvhi5L6Y+GblPpr4Z
uW+mPhq5j6a+Grmvpj4buc+mvhu576Y+HLkPp74cuS+nPh25T6e+Hblvpz4e
uY+nvh65r6c+H7nPp74fue8nHgCZByBeAJkXIJ4AmScg3gCZNyAeAZlHIF4B
mVcgngGZZyDeAZl3IB4CmYcgXgKZlyCeApmnIN4CmbcgHgOZxyBeA5nXIJ4D
mecg3gOZ9yAeBJkHIV4EmRchngSZJyHeBJk3IR4FmUchXgWZVyGeBZlnId4F
mXchHgaZhyFeBpmXIZ4Gmach3gaZtyEeB5nHIV4HmdchngeZ5yHeB5n3IR4I
mQciXgiZFyKeCJknIt4ImTciHgmZRyJeCZlXIp4JmWci3gmZdyIeCpmHIl4K
mZcingqZpyLeCpm3Ih4LmcciXguZ1yKeC5nnIt4LmfciHgyZByNeDJkXI54M
mScj3gyZNyMeDZlHI14NmVcjng2ZZyPeDZl3Ix4OmYcjXg6ZlyOeDpmnI94O
mbcjHg+ZxyNeD5nXI54Pmecj3g+Z9yMeEJkHJF4QmRcknhCZJyTeEJk3JB4R
mUckXhGZVySeEZlnJN4RmXckHhKZhyReEpmXJJ4Smack3hKZtyQeE5nHJF4T
mdcknhOZ5yTeE5n3JB4UmQclXhSZFyWeFJknJd4UmTclHhWZRyVeFZlXJZ4V
mWcl3hWZdyUeFpmH/Z+87P8Bd//XeA==
                "]], {{{0.25341593795373246`,
                 0.}, {0., -1.}}, {54.66666666666667, 0.}}]},
             
             ImageSizeCache->{{507.47985490760317`, 522.08243916159}, {
              20.75041034868859, 102.86853000361026`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.03794057051217672`"}]}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.051244889953741914`"}]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.18055780606294655`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.4169984218800788`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.47573013429142885`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], -0.03794057051217672}, {
               Style["75%", Bold], -0.051244889953741914`}, {
               Style["median", Bold], -0.18055780606294655`}, {
               Style["25%", Bold], -0.4169984218800788}, {
               Style["min", Bold], -0.47573013429142885`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[7, 9], 0.7777777777777778]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
zFvxyCoTlzxV3yeUCobrYF981ScTo+dpjlGw/QDG9pqXLXIz8amR0GCmYiCo
VQ74e7dYFmY65Aw/mxMAckuiYjbOycJd+2ZGajz2h8abZ0yXbcvCJemRhk+y
fCE5f/6gmVezsGzwl0nmLm/Bc1atx9h3Wah47pj0lbvecN3y1Qbx/Cx0S3U8
uc7JE3am7vjRIJ6NxSu8jFQS3oCqvMy94rnZqJSX9CR3lDuMPZk674thNs5y
E/0b8N9raIy9lR56LRtnOnzT2dHxEpJlVp1845uNo3a1CE86uIKbWecYh4Js
NH3d26pm6wJWYYFBVwbm4J4iuVcK05xhp9Sxbcfn5+B/K0wa/qpwAtVdMzp2
bs/B7cZD8xYnOcJYv9KnmjdyUOZdkt+ovEdQL3BSU/XPQc6bE3V0ShSK/v9r
+nnkn6f3Q34/+n3Iv48+D/Lnoc+L/Hnp+yB/H/q+yN+Xrgfy9aDrhXy96Hoi
X0+63sjXm+4H8v2g+4V8v+h+It9Put/I95vOA/J5oPOCfF7oPCGfJzpvyOeN
ziPyeaTzinxe6Twjn2c678jnnZ4H5OeBnhfk54WeJ+TniZ435OeNnkfk55Ge
V+TnlZ5n5OeZnnfk553mAfI8oHmBPC9oniDPE5o3yPOG5hHyPKJ5hTyvaJ4h
zzOad8jzjuYh8jykeYk8L2meIs9TmrfI85bmMfI8pnmNPK9pniPPc5r3yPOe
9gHyPqB9gbwvaJ8g7xPaN8j7hvYR8j6ifYW8r2ifIe8z2nfI+472IfI+pH2J
vC9pnyLvU9q3yPuW9jHyPqZ9jbyvaZ8j73Pa98j7nvQAsh4gvYCsF0hPIOsJ
0hvIeoP0CLIeIb2CrFdIzyDrGdI7yHqH9BCyHiK9hKyXSE8h6ynSW8h6i/QY
sh4jvYas10jPIes50nvIeo/0ILIeJL2IrBdJTyLrSdKbyHqT9CiyHiW9iqxX
Sc8i61nSu8h6l/Qwsh4mvYysl0lPI+tp0tvIepv0OLIeJ72OrNdJzyPredL7
yHqf/ACyHyC/gOwXyE8g+wnyG8h+g/wIsh8hv4LsV8jPIPsZ8jvIfof8ELIf
Ir+E7JfITyH7KfJbyH6L/BiyHyO/huzXyM8h+znye8h+j/wgsh8kv4jsF8lP
IvtJ8pvIfpP8KLIfJb+K7FfJzyL7WfK7yH6X/DCyHya/jOyXyU8j+2ny28h+
m/w4sh8nv47s18nPI/t58vvIfp/yAOQ8gPIC5LyA8gTkPIHyBuS8gfII5DyC
8grkvILyDOQ8g/IO5LyD8hDkPITyEuS8hPIU5DyF8hbkvIXyGOQ8hvIa5LyG
8hzkPIfyHhHnPZQHiTgPorxIxHkR5UkizpMobxJx3kR5lIjzKMqrRJxXUZ4l
4jyL8i4R512Uh4k4D6O8TMR5GeVpIs7TKG8Tcd5GeZyI8zjK60Sc11GeJ+I8
j/I+Eed9lAeKOA+kvFDEeSHliSLOEylvFHHeSHmkiPNIyitFnFdSniniPJPy
ThHnnZSHijgPpbxUxHkp5akizlMpbxVx3kp5rIjzWMprRZzXUp4r4jyX8l4R
572UB4s4D6a8GDkvpjwZOU+mvBk5b6Y8GjmPprwaOa+mPBs5z6a8Gznvpjwc
OQ+nvBw5L6c8HTlPp7wdOW+nPB45j6e8HjmvpzwfOc+nvB8576c+ALkPoL4A
uS+gPgG5T6C+AblvoD4CuY+gvgK5r6A+A7nPoL4Due+gPgS5D6G+BLkvoT4F
uU+hvgW5b6E+BrmPob4Gua+hPge5z6G+B7nvoT4IuQ+ivgi5L6I+CblPor4J
uW+iPgq5j6K+Crmvoj4Luc+ivgu576I+DLkPo74MuS+jPg25T6O+Dblvoz4O
uY+jvg65r6M+D7nPo74Pue+jPhC5D6S+ELkvpD4RuU+kvhG5b6Q+ErmPpL4S
ua+kPhO5z6S+E7nvpD4UuQ+lvhS5L6U+FblPpb4VuW+lPha5j6W+FrmvpT4X
uc+lvhe576U+GLkPpr4YuS+mPhm5T6a+Gblvpj4auY+mvhq5r6Y+G7nPpr4b
ue+mPhy5D6e+HLkvpz4duU+nvh25b6c+HrmPp74eua+nPh+5z6e+H7nvJx4A
mQcgXgCZFyCeAJknIN4AmTcgHgGZRyBeAZlXIJ4BmWcg3gGZdyAeApmHIF4C
mZcgngKZpyDeApm3IB4DmccgXgOZ1yCeA5nnIN4DmfcgHgSZByFeBJkXIZ4E
mSch3gSZNyEeBZlHIV4FmVchngWZZyHeBZl3IR4GmYchXgaZlyGeBpmnId4G
mbchHgeZxyFeB5nXIZ4Hmech3geZ9yEeCJkHIl4ImRcingiZJyLeCJk3Ih4J
mUciXgmZVyKeCZlnIt4JmXciHgqZhyJeCpmXIp4Kmaci3gqZtyIeC5nHIl4L
mdcinguZ5yLeC5n3Ih4MmQcjXgyZFyOeDJknI94MmTcjHg2ZRyNeDZlXI54N
mWcj3g2ZdyMeDpmHI14OmZcjng6ZpyPeDpm3Ix4PmccjXg+Z1yOeD5nnI94P
mfcjHhCZByReEJkXJJ4QmSck3hCZNyQeEZlHJF4RmVcknhGZZyTeEZl3JB4S
mYckXhKZlySeEpmnJN4SmbckHhOZxyReE5nXJJ4Tmeck3hOZ9yQeFJkHJV4U
mRclnhSZJyXeFJk3JR4VmUclXhWZVyWeFZlnJd4VmXclHhaZhyVeFpmXJZ4W
macl3haZtyUeF5nHJV4XmdclnheZ5yXeF5n3JR4YmQcmXhiZFyaeGJknJt4Y
mTcmHhmZRyZeGZlXJp4ZmWf+v7zz/wCETZXf
                "]], {{{
                0.19886434719417959`, 0.}, {0., -1.}}, {55.66666666666667, 
                0.}}]},
             
             ImageSizeCache->{{513.4934439720346, 531.6260988615736}, {
              19.342978703489138`, 89.27052483119061}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.11015508536614378`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.06274649834097326`"}]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.0905671367484658`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.2546751149748698`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.37826168482972483`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.11015508536614378`}, {
               Style["75%", Bold], -0.06274649834097326}, {
               Style["median", Bold], -0.0905671367484658}, {
               Style["25%", Bold], -0.2546751149748698}, {
               Style["min", Bold], -0.37826168482972483`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[5, 6], 0.8333333333333334]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnc41m3Yx5WZ23Zri2hKT1tDdV0SFQk9DWnQ0I6GetopDQ16StraT9Im
pazzInvvcVuRtEVJRvR6j+M8/3nf/qjjdxy63ffvvn7n+R2f/is85rp1lZOT
C+3863//pT+6FseePUp+DsZBIcttPjxk2kmHy/pIX0DbTM8QPasnTMPukOIJ
lxfg/eLWXqfap0wt78BfzfdfQL1XfHUiD2XdFu1buLrpBeiMLDrY+9kzplS5
2yvfIhzytXK33576nCm47Qye5hsOJ24sXhdd84J1+bw992lxOHj8bbEt6+5L
1rF5W1u/AS8h323Oe9ujEex30+YBvh4vYa9ZRa+nh6NYy153u7aIl/D7qq/e
4dsxrKnrxh3rlF7BW1/z/sO3Ctbos+56keMr8M8Yf2DNnVjWoLEm2SrwFZgt
qNaZ/jGO1Z1b1fDswysYq6Rofdkinn3pvaK30dgISP1rVqjV4wT28YaL5b8H
IuDgQoOMgSOT2PtBSzd2pEaAe/zIk/rJyazmoXPAxu6RMN9hWpvOP6msarRT
jGx5JPTT211cNyWdVb6c/37mo0hYVi0vvaqfycqm/q0V3hwJvunqD7wl2awk
3mHiwOlR4N9rpvlpvRxWZDNnhf/pKNho4tG0Znguy8+2PdmlNAr21in1PfJ3
HstZMCvMY1A0mLlZXV/qk8+yyqzLy7dEw18HDPLWpBew9BXTlWZHR8P16us6
vQyLWOoHixERKjFQ8jrc7Z13MUt0Z05D5sVA02thxJpLWHzj5IPnr8dAoY9M
+eq+Uha3e9J9hc8xcHph451N0nIWIzchb6sZgGPrFgXV6AoWdXTc7zcHAVoK
jm35bv6GRaiNGWifAfBYoadRiFEVWzKrZ9AyNQH/zOfKDTrVzFntQqTeaAF2
ExZnVaq9ZYuy9LLTFwpw5pkP72nVMKez52q89wmo7dvQz7PfO7Zgvm7LpNsC
YJRa5BqzWja/51n178kC3obc+/mf03s2r1TLKLhOQOKZTV/sjnxgc6+dNnOV
xkJtQsLIPVEfmeNyDdsek2IhS+Lrb9XxiTkM8HXJdImFls9y34XNFzbnvcTz
yJFYaAobo9B+8yuzu3/CZ/KDWAiqmjpcUeEbm72pW+CP7FjIK3w5aPOEemYz
0ifkflMsuL5ebDuzsZ7N+qGUuLxvHLyzeRly/HkDm/niiKzntDj4VWHZd8ze
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
QMwLBeWFmCcKyhMxbxSUN2IeKSiPxLxSUF6JeaagPBPzTkF5J+ahgvJQzEsF
5aWYpwrKUzFvFZS3Yh4rKI/FvFZQXot5rqA8F/NeQXkv5sGC8mDMiwXlxZgn
C8qTMW8WlDdjHi0oj8a8WlBejXm2oDwb825BeTfm4YLycMzLBeXlmKcLytMx
bxeUt2MeLyiPx7xeUF6Peb6gPB/zfkF5P/YBgvoA7AsE9QXYJwjqE7BvENQ3
YB8hqI/AvkJQX4F9hqA+A/sOQX0H9iGC+hDsSwT1JdinCOpTsG8R1LdgHyOo
j8G+RlBfg32OoD4H+x5BfQ/2QYL6IOyLBPVF2CcJ6pOwbxLUN2EfJaiPwr5K
UF+FfZagPgv7LkF9F/Zhgvow7MsE9WXYpwnq07BvE9S3YR8nqI/Dvk5QX4d9
nqA+D/s+QX0f9oGC+kDsCwX1hdgnCuoTsW8U1DdiHymoj8S+UlBfiX2moD4T
+05BfSf2oYL6UOxLBfWl2KcK6lOxbxXUt2IfK6iPxb5WUF+Lfa6gPhf7XkF9
L/bBgvpg7IsF9cXYJwvqk7FvFtQ3Yx8tqI/GvlpQX419tqA+G/tuQX039uGC
+nDsywX15dinC+rTsW8X1LdjHy+oj8e+XlBfj32+oD4f+35BfT/yAIJ4AOQF
BPECyBMI4gmQNxDEGyCPIIhHQF5BEK+APIMgngF5B0G8A/IQgngI5CUE8RLI
UwjiKZC3EMRbII8hiMdAXkMQr4E8hyCeA3kPQbwH8iCCeBDkRQTxIsiTCOJJ
kDcRxJsgjyKIR0FeRRCvgjyLIJ4FeRcg3gV5GCAeBnkZIF4GeRogngZ5GyDe
BnkcIB4HeR0gXgd5HiCeB3kfIN4HeSAgHgh5ISBeCHkiIJ4IeSMg3gh5JCAe
CXklIF4JeSYgngl5JyDeCXkoIB4KeSkgXgp5KiCeCnkrIN4KeSwgHgt5LSBe
C3kuIJ4LeS8g3gt5MCAeDHkxIF4MeTIgngx5MyDeDHk0IB4NeTUgXg15NiCe
DXk3IN4NeTggHg55OSBeDnk6IJ4OeTsg3g55PCAeD3k9IF4PeT4gng95PyDe
D3lAIB4QeUEgXhB5QiCeEHlDIN4QeUQgHhF5RSBeEXlGIJ4ReUcg3hF5SCAe
EnlJIF4SeUognhJ5SyDeEnlMIB4TeU0gXhN5TiCeE3lPIN4TeVAgHhR5USBe
FHlSIJ4UeVMg3hR5VCAeFXlVIF4VeVYgnhV5VyDe9f/ysP8Dwn2Ljg==
                
                "]], {{{0.07918188720717254, 0.}, {
                0., -0.9999999999999999}}, {56.66666666666667, 
                1.3877787807814457`*^-17}}]},
             
             ImageSizeCache->{{514.8619984283366, 545.8147931696869}, {
              4.28837031840888, 53.2893711922643}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.37743286066763243`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.3230195699766783`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.24818819781362234`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.20580337028262163`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.19214226810646018`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.37743286066763243`}, {
               Style["75%", Bold], 0.3230195699766783}, {
               Style["median", Bold], 0.24818819781362234`}, {
               Style["25%", Bold], 0.20580337028262163`}, {
               Style["min", Bold], 0.19214226810646018`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.7058823529411765, 0.49411764705882355`, 0.5450980392156862], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnc413v4/22pzkmaGieVSkql09Byv2lplwoNUUrSOArliBMlLe2thaQl
SUIq95uIhOy9994jEr9+1+++f398v/1Rl+sSn8/n/Xrd93M8xu76R3+PlISE
RObvv/7vv/wnOz41rnRJINgbtYTvGu0BpjfzDBJevwWfkX0S3Zw9oXR7eWHw
iLcwaOjUlDW9XmCh2mDpeToAthwz0Oq+7Q31NR2t5xvfgI6T/KvW1T5g81bi
hM22N+Bl/WTs3THP4Ie9gsKOL/4QuPsv/3UDX4CDrtL15Zr+kHzzmLnzeF+Q
GTxn/i6t15C8akLbHUM/UHy8fO3sP/0g2eChh5OhPwyfuWVXn1Jf2DhA2+XJ
zTegEm55NOf9S5hY2UentjwApq53OO93+QUsPOm0uGpVIGgVXHzovOc5eB6/
JvVP1DsQDj0K2LTgGRzyiW1o3BgMer/8v0wa+BQ08/5e+vePENjkFpHdVf4E
Jqt82pcaEAqmI1Pr4z96A9SOP7zf5SNYvCiT8rz2GHIiNkqcORgGVvM6htpY
eIGlacUQg7kiOMT0mbJc2xOG5hc+U18SDmcNR8CIwR7Q+d8XOzvjCFCJN/TJ
TnkAK+sNdaxOfYYZNfYJTifuwVezGz4LgiJBT+Fh+8Qpd+HJ6DCv7rYoMJ0U
/ld8+i1ovLylI043GqyWli6zPnkDJAqMvT7djwEnM/l/lKddg3zPDKN06ViY
Ib152om3l+HLRL0+Q+y+gSnc++9b3wuwY7mS6cHOOHA6XpQwbJcreCmt3B1z
JgE8gieN2f3eGVq6HsqeHJgIHhU5+aZj7WHM3DPW/5YlgoSpxYnO71bQIejX
v8IkkNiZckKvyxh2XX3a2v0oGSR+VHds1FiE1grjuhe5poDEodJF/+qZ4/i6
O7t1j6SCGLan57GtDd4t/M8mzSwNnJZlGfeLdsTINVk7Pm5NB5W9PjvmuZ3C
o7h0Y5BBBkhMMf2zbtZZvD7R5o6DYSaI9cphHnluWPThwJuI7VmwPqtqjvrn
K+iypvziHPNsED58+dNl2HV03Z0f5WSdAyoPHpfn7b+JO0ouFy5xyQXFE05h
c8XbmO2f4DP2Tt7v12986+pgd2zOCnZ645cPjbrzD9VY3Md+jhfzz0cXQKHq
sGVLPz3EOkdtA5XDhWAq3XXp+1kPPLbC3kKztxCMbCrtuwM8cUbpua14sQjW
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
TUajqSoZcorygr3Njtpq5RQ88fGV24yJ8sId3dxzMyAFHxrGKebMkxdCFLdO
Oro7BZfalX+SXSUvpOdnRH44l4L1ATbx/lvkhXbfzbskX6egttyqJXl75IXB
x1N6l6Wm4PeX1flu/8gLM1dseODWmYLTXQf3hB+VF/SHfZ+f/FcqakhlXD9x
XF6wKludOWxJKq4xWj/wq6O8cOltrK3xvlS0v75ts9fvr/2c9QY9vpSKMY+2
3R/w+/vj1n3xr3ybiqMbNh4e8vvnVY9esnZaViq+kLT3CDkkL/StDa+x7knF
26bmU3p2ywtqoXDu/fg0nL1HDmqM5AW9s58m9uqlYbmb5ZTTK+UFc4MFkUsO
paGS2hnjpN/v10X1/c7z19PwVmf71rTfn4d385ze7yFpGFQbg7cGygsRYuD9
IflpOMR2m/bILjmh+NLM+duk0zH6jI6nRaGcIGHsn+Ghlo6n7Sd+d4n8/Tym
TLMtX5OOXeceJdr6yAnanS+Vplqn42WzlAwd19/PI3qy/+E76ZhUkbWiwUxO
sL/5dE3wp3S0dfL/6gJygrvZhJru4nQ0r7m7REFZTgjRfHxWt08Gem780Huq
UVZI71WZeFYjA+3kI326o2SF9viHn+P1M1Bm3L5tx+/KCoPvj9o5yC4Db40+
HtVnv6wwy9K9x+hBBipcMBrvN19W0Ncafv9hRAb2jj6x1baPrGAld2teaUUG
qld0ye9LlRGupA7KmPxHJvr8OHLlxkMZwc/rqs0/MzNxwfdr02X2yggJVgOU
3hlmYkjQFbkoDRmhVvvi6y6HTJRouza5rFla6PtHvzWCVya6pgS/tA6SFtRz
zlafjs5EF/czz53spAW953Jnv9Vm4oNZ9zaMnictmB9zmTBQKQvDjiyr2fZD
SnBdKvXZYG4WprxXzlkXJCV4D3Iyvb89CyXnD37yh7WUEFH061eRcxbuvLun
9sU0KaH49fF7k55mYZy6t5V2laQg8V+n1sG4LNy/0qxPoZekoLL6WHpAUxbe
WzDq7rNtkoL2iDbrH0Ozf8/7Xf0DBkkK2yuPDNRemI1rBXPdYd8kBIegRr9T
O7NxkkmUZKuzhODucmj1V9dstGyNLN2tJSGE6tdW/embjcs3dZ35M68XMlUs
z2xKysaZ12ctatbrhfb6ClX39t//f7WPRMDv+Tz0056IgpE5KH3xeOwFlR6Y
daHEZIJODv5S2zk3zO0X6G/Z+cvSPAfdF0brne3shiOTCtz9L+RgnPPgcZP3
dsOVtu1a7f452O6++HNB2k/w+5ydtiA9B2clWIZXL/0JCVeNrJ1/5uCc6MBf
Z4K7oNYkXTFaJRevxG3e1qreBf2nbfLrvywXn5j0t93v0Qnq3Umr9PfnYo9N
mP6k4Z2gF7uu6vaVXMzdFDXG9NoPsLgT75r3LhcbTi//uGLAD3A1X6U6PicX
1x8bFTzycgf4zPoabiGRh6NtPMpllTogUmq5id+EPJQO+tdh9p12KE6M7G5Z
mYfnd1UtSRvbDlKPdN3nWeWh+ZhrXv1ft4HKQXHuiZt5+GBFjFEvtIH2Au20
yNA81Ip5ujU+tRV2KHw80rcwD7Mf6j+6drAVHDLmKa6Xzcev0978NO/bCu5P
gl/dVM/HL5pSUjtetkCo9exVOevy8Y2sY4Xr+hbI1HlbqWKbj54tC61qO5vh
xwBNV3P3fGxNe1R042nzb1/oN94X8zGkc/ZP5y3NMMt3anhTaT76HNzU7j+g
GTbZv9gxt28B5i5c6zYitgmO6Kl1O0wvQEPr1dJvzzbBtaE+dyM2FaDFZn8d
y1VN4F86fm4f+wJ8JlNQMUWpCRICPFPXPCrAbz9XWBXkNkK905gj1yMLMOmg
w2aLl43Qf92DAVlVBTgyonqRj2Mj3Lx00eCyfCGO0JyrYbuxEZ7Yrp4wc0Qh
3u+9EfpqaiMEbu/Xmjq1EFMVa1ZNUGiEz4tjI479dhGnxjx4sT2pAVLUz10d
oV+I+i8TtDRvNUDxQD3TT7sLcWTXtZ5dpg3Q/ENuuumxQnxy64bD2ekNIFkY
9UvqfCFq3vS+Mkv6t76Odol7cr8Qb880UOrIrgcVv8X39F4XoseC80eMg+ph
+k0py5rwQgyoLdjecqMewCFc61JqIToul9i6+Gg9rDVzktesKMTTqqGHM7bU
g/FKSE/pLMQ2+8pv86AeDmr2eB/tX4Thh8eua5tQDw7DP1krjynC70F/L7z1
Rz1c6D2u+1GzCB11naJetNXBvfL5A02WFGFtj57n57w6eBHfWSBpWIS/F+4t
m6g6eB8Y4ue9rwj/CbCV2OxbB1/vHXNc7lCEpRoqGySu1UHmyTmrqy8V4WGH
KaeGHq2Dyn1tIy56FqGO8aZzC43qoGN9YNX0wCKM9pULGKVVB3Ja1iHJX4ow
busdyb1D6mDomJlnbLOK8Jmj/smkhlqYINe0eXhtETb91XZueHQtzK57rfqh
pwg7dh9t7XGvhSWph1qMBxbjo+qkjWv318LGDxoREqrFqKGTNDhjbi2YedVe
eTynGO/djr1jJVELR869NFm2ohifTzNf0hlZA85WltOqthWjp82lUwana+Cq
4eRfFw4VY/Tc8AgbnRrw0K78Ns25GMdp9t2xvLMaXk946p50vRg/DJdwjfGt
Buxvvs/GpxgH7tIY2bmtGhJaVLWGvS/GMxs1lAvkqiE/u0Qu9Fvx7/3f1e76
qgrqwr3StucX48TZSlX91ldB97Od3r2Nxbi47fnxk/WV0P+KirWXdAlGKlUF
KJyrhJHHCnSWDi1B04FLPkSNqYQpOx4qVqqV4L3TnlcLAipg/lLjgvMLfn/t
ke7jolsBK6aO8tNYW4KJ/bVOlCeUw5ZBOQ6JpiU4IvnX2vlG5WDRdXeVtXUJ
tk2bdyMkvwyOFRmNGOpagtl/jnh9f1cZnIkZVhVypwQ9/4B/VUtL4dbr9OBt
L0sQCr7kXjYrhSe3brr2fCpB5XOp+1WKSuCd46bNnokl+HOOZudw4xKI3D1I
dUlJCda/8pv5KaMYUlclN5e3leCkS6WLNmwohpKZV8PP9SnFQWmZhsqxRdCs
vP7K1JGlWHdC2W6LbhFISQ4w+a5Rir8qwzs2hRbCwMp4jSNCKSZ6ZC9cO7MQ
xn536x68sRSX76tN7b+5AGYErfoWvKcU9xuHT7Fflg/woK/7VrtSHHNys5Tp
vDxY5/LV4tf5Ujx/sfKi5rRc2LH/7FyPB6U4ZHjvHrMJOXBQf7ncYv9SbJI1
2GI5Jhsc58mllUWU4v2GF6lPRmWBm0rU47NppajfseTW6dGZcE/e5ciUylL0
7z03znhcBrys19VJ6CpFP3ezkaempENomqTi4T/KULijHrN8XhrEfhTzB6mU
4dlP2a2tq1Ih6/GJV0Ezy/D4sD258WYpUHle22HL0jLMfhY6eoBzMvw4/Gtl
t2EZ7qpQ/lD/OAnkt3xUfmRZhm9qR46/H5cIw4TjlTqOZTg0o/S0U/t3mDhp
fnDp5TJULLPX/WmSALP/7Dx9xqsMZzm/lixKi4OlbcGb1N+VYUJJyZAdRt9g
U+7R8fHRZdih4NF7reIrmH2e3fxP9u//v6Il+8apGLB+0Soq1ZXhvg1GGQen
RsPJq28vv+stQ4WA0JDRxVFw1e7IDiOlcgyTAFN370jwNNHU+KlajmPu2GxL
tP4M/ssafz6YW47WGh52j9dFgKjxOlZYWY5Zo7J2NMwNh++DD90t2V6O+q2o
dnaqCPk/p1q4/lOOPReWSR7dGgb1xTVzJp8sx1uvG/59YP0Rfn19IRt3oxwl
TGb/6OMdCn+82Zd66Gk5Jld9c5hREwKj7qg9Hhhajmtb9/08qRcMU05UHA6M
K0eT7QNO7f3wDhaY+wiGBeWYoD54h/biQFi5Zs+ArqZyDEx9o7arIAC2zFLN
vy9TgY+GFOeqXX4D+0aW+MKwCmxacDu5dIM/2El5HS+eXIFR81rMv63xgzNV
pitPL6xAdeiMaB7hC7cTxyirravA9H9cH2UpvACf4PyK2J0VqNmU766s/AyC
Hj4IOmhTgbsDZ7usWe4DUae3n1Y8U4H9/J4HK133htQDIze9vVuBtdO75OR/
ekHpxuxxBr4VGLTrfcE0R09omX+36UdYBTpW+hnfVPYA6XFG4r2kCuS8Wklh
2GXt0v/9NX0/8vfTz0P+efT7kH8fvR7k10OvF/n10vtBfj/0fpHfL30eyJ8H
fV7Inxd9nsifJ33eyJ83PQ/k50HPC/l50fNEfp70vJGfN50H5PNA5wX5vNB5
Qj5PdN6QzxudR+TzSOcV+bzSeUY+z3Tekc873Qfk+0D3Bfm+0H1Cvk9035Dv
G91H5PtI9xX5vtJ9Rr7PdN+R7zvNA+R5QPMCeV7QPEGeJzRvkOcNzSPkeUTz
Cnle0TxDnmc075DnHc1D5HlI8xJ5XtI8RZ6nNG+R5y3NY+R5TPMaeV7TPEee
5zTvkec97QPkfUD7Anlf0D5B3ie0b5D3De0j5H1E+wp5X9E+Q95ntO+Q9x3t
Q+R9SPsSeV/SPkXep7Rvkfct7WPkfUz7Gnlf0z5H3ue075H3PekBZD1AegFZ
L5CeQNYTpDeQ9QbpEWQ9QnoFWa+QnkHWM6R3kPUO6SFkPUR6CVkvkZ5C1lOk
t5D1FukxZD1Geg1Zr5GeQ9ZzpPeQ9R7pQWQ9SHoRWS+SnkTWk6Q3kfUm6VFk
PUp6FVmvkp5F1rOkd5H1LulhZD1MehlZL5OeRtbTpLeR9TbpcWQ9TnodWa+T
nkfW86T3kfU++QFkP0B+AdkvkJ9A9hPkN5D9BvkRZD9CfgXZr5CfQfYz5HeQ
/Q75IWQ/RH4J2S+Rn0L2U+S3kP0W+TFkP0Z+DdmvkZ9D9nPk95D9HvlBZD9I
fhHZL5KfRPaT5DeR/Sb5UWQ/Sn4V2a+Sn0X2s+R3kf0u+WFkP0x+Gdkvk59G
9tPkt5H9NvlxZD9Ofh3Zr5OfR/bz5PeR/T7lAch5AOUFyHkB5QnIeQLlDch5
A+URyHkE5RXIeQXlGch5BuUdyHkH5SHIeQjlJch5CeUpyHkK5S3IeQvlMch5
DOU1yHkN5TnIeQ7lPch5D+VByHkQ5UUi50WUJ4mcJ1HeJHLeRHmUyHkU5VUi
51WUZ4mcZ1HeJXLeRXmYyHkY5WUi52WUp4mcp1HeJnLeRnmcyHkc5XUi53WU
54mc51HeJ3LeR3mgyHkg5YUi54WUJ4qcJ1LeKHLeSHmkyHkk5ZUi55WUZ4qc
Z1LeKXLeSXmoyHko5aUi56WUp4qcp1LeKnLeSnmsyHks5bUi57WU54qc51Le
K3LeS3mwyHkw5cUi58WUJ4ucJ1PeLHLeTHm0yHk05dUi59WUZ4ucZ1PeLXLe
TXm4yHk45eUi5+WUp4ucp1PeLnLeTnm8yHk85fUi5/WU54uc51PeL3LeT32A
yH0A9QUi9wXUJ4jcJ1DfIHLfQH2EyH0E9RUi9xXUZ4jcZ1DfIXLfQX2IyH0I
9SUi9yXUp4jcp1DfInLfQn2MyH0M9TUi9zXU54jc51DfI3LfQ32QyH0Q9UUi
90XUJ4ncJ1HfJHLfRH2UyH0U9VUi91XUZ4ncZ1HfJXLfRX2YyH0Y9WUi92XU
p4ncp1HfJnLfRn2cyH0c9XUi93XU54nc51HfJ3LfR32gyH0g9YUi94XUJ4rc
J1LfKHLfSH2kyH0k9ZUi95XUZyL3mdR3Ived1Ici96HUlyL3pdSnIvep1Lci
963UxyL3sdTXIve11Oci97nU9yL3vdQHI/fB1Bcj98XUJyP3ydQ3I/fN1Ecj
99HUVyP31dRnI/fZ1Hcj993UhyP34dSXI/fl1Kcj9+nUtyP37dTHI/fx1Ncj
9/XU5yP3+dT3I/f9xAMg8wDECyDzAsQTIPMExBsg8wbEIyDzCMQrIPMKxDMg
8wzEOyDzDsRDIPMQxEsg8xLEUyDzFMRbIPMWxGMg8xjEayDzGsRzIPMcxHsg
8x7EgyDzIMSLIPMixJMg8yTEmyDzJsSjIPMoxKsg8yrEsyDzLMS7IPMuxMMg
8zDEyyDzMsTTIPM0xNsg8zbE4yDzOMTrIPM6xPMg8zzE+yDzPsQDIfNAxAsh
80LEEyHzRMQbIfNGxCMh80jEKyHzSsQzIfNMxDsh807EQyHzUMRLIfNSxFMh
81TEWyHzVsRjIfNYxGsh81rEcyHzXMR7IfNexIMh82DEiyHzYsSTIfNkxJsh
82bEoyHzaMSrIfNqxLMh82zEuyHzbsTDIfNwxMsh83LE0yHzdMTbIfN2xOMh
83jE6yHzesTzIfN8xPsh837EAyLzgMQLIvOCxBMi84TEGyLzhsQjIvOIxCsi
84rEMyLzjMQ7IvOOxEMi85DESyLzksRTIvOUxFsi85bEYyLzmMRrIvOaxHMi
85zEeyLznsSDIvOgxIsi86LEkyLzpMSbIvOmxKMi86jEqyLzqsSzIvOsxLsi
867EwyLzsMTLIvOyxNMi87TE2yLztsTjIvO4xOsi87rE8yLzvMT7IvO+xAMj
88DECyPzwsQT4//nif8fb4zMGxOPjMwjE6+MzCsTz4zMMxPvjMw7Ew+NzEMT
L43MSxNPjcxT/0/e+v8AMkx7hg==
                "]], {{{0.14189620574641804`, 
                0.}, {0., -1.}}, {57.66666666666667, 0.}}]},
             
             ImageSizeCache->{{527.478022649252, 
              548.7560177131865}, {-7.328566976692926, 58.629381498782706`}}],
            
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.5663538037341143`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.3919369511544602`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.3000490802633265`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.23874359108514712`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.10108182273930132`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.5663538037341143}, {
               Style["75%", Bold], 0.3919369511544602}, {
               Style["median", Bold], 0.3000490802633265}, {
               Style["25%", Bold], 0.23874359108514712`}, {
               Style["min", Bold], 0.10108182273930132`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], 
           "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, 
        {GrayLevel[
          NCache[
           Rational[2, 3], 0.6666666666666666]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
EKw3SI8I1iOkVwTrFdIzgvUM6R3Beof0kGA9RHpJsF4iPSVYT5HeEqy3SI8J
1mOk1wTrNdJzgvUc6T3Beo/0oGA9SHpRsF4kPSlYT5LeFKw3SY8K1qOkVwXr
VdKzgvUs6V3Bepf0sGA9THpZsF4mPS1YT5PeFqy3SY8L1uOk1wXrddLzgvU8
6X3Bep/8gGA/QH5BsF8gPyHYT5DfEOw3yI8I9iPkVwT7FfIzgv0M+R3Bfof8
kGA/RH5JsF8iPyXYT5HfEuy3yI8J9mPk1wT7NfJzgv0c+T3Bfo/8oGA/SH5R
sF8kPynYT5LfFOw3yY8K9qPkVwX7VfKzgv0s+V3Bfpf8sGA/TH5ZsF8mPy3Y
T5PfFuy3yY8L9uPk1wX7dfLzgv08+X3Bfp/yAMF5AOUFgvMCyhPE/+YJ/5M3
CM4bKI8QnEdQXiE4r6A8Q3CeQXmH4LyD8hDBeQjlJYLzEspTBOcplLcIzlso
jxGcx1BeIzivoTxHcJ5DeY/gvIfyIMF5EOVFgvMiypME50mUNwnOmyiPEpxH
UV4lOK+iPEtwnkV5l+C8i/IwwXkY5WWC8zLK0wTnaZS3Cc7bKI8TnMdRXic4
r6M8T3CeR3mf4LyP8kDBeSDlhYLzQsoTBeeJlDcKzhspjxScR1JeKTivpDxT
cJ5JeafgvJPyUMF5KOWlgvNSylMF56mUtwrOWymPFZzHUl4rOK+lPFdwnkt5
r+C8l/JgwXkw5cWC82LKkwXnyZQ3C86bKY8WnEdTXi04r6Y8W3CeTXm34Lyb
8nDBeTjl5YLzcsrTBefplLcLztspjxecx1NeLzivpzxfcJ5Peb/gvJ/6AMF9
APUFgvsC6hME9wnUNwjuG6iPENxHUF8huK+gPkNwn0F9h+C+g/oQwX0I9SWC
+xLqUwT3KdS3CO5bqI8R3MdQXyO4r6E+R3CfQ32P4L6H+iDBfRD1RYL7IuqT
BPdJ1DcJ7puojxLcR1FfJbivoj5LcJ9FfZfgvov6MMF9GPVlgvsy6tME92nU
twnu26iPk7mPo75O5r6O+jyZ+zzq+2Tu+6gPlLkPpL5Q5r6Q+kSZ+0TqG2Xu
G6mPlLmPpL5S5r6S+kyZ+0zqO2XuO6kPlbkPpb5U5r6U+lSZ+1TqW2XuW6mP
lbmPpb5W5r6W+lyZ+1zqe2Xue6kPlrkPpr5Y5r6Y+mSZ+2Tqm2Xum6mPlrmP
pr5a5r6a+myZ+2zqu2Xuu6kPl7kPp75c5r6c+nSZ+3Tq22Xu26mPl7mPp75e
5r6e+nyZ+3zq+2Xu+4kHkJkHIF5AZl6AeAKZeQLiDWTmDYhHkJlHIF5BZl6B
eAaZeQbiHWTmHYiHkJmHIF5CZl6CeAqZeQriLWTmLYjHkJnHIF5DZl6DeA6Z
eQ7iPWTmPYgHkZkHIV5EZl6EeBKZeRLiTWTmTYhHkZlHIV5FZl6FeBaZeRbi
XWTmXYiHkZmHIV5GZl6GeBqZeRribWTmbYjHkZnHIV5HZl6HeB6ZeR7ifWTm
fYgHkpkHIl5IZl6IeCKZeSLijWTmjYhHkplHIl5JZl6JeCaZeSbinWTmnYiH
kpmHIl5KZl6KeCqZeSrirWTmrYjHkpnHIl5LZl6LeC6ZeS7ivWTmvYgHk5kH
I15MZl6MeDKZeTLizWTmzYhHk5lHI15NZl6NeDaZeTbi3WTm3YiHk5mHI15O
MC9HPJ1gno54O8G8HfF4gnk84vUE83rE8wnm+Yj3E8z7EQ8omAckXlAwL0g8
oWCekHhDwbwh8YiCeUTiFQXzisQzCuYZiXcUzDsSDymYhyReUjAvSTylYJ6S
eEvBvCXxmIJ5TOI1BfOaxHMK5jmJ9xTMexIPKpgHJV5UMC9KPKlgnpR4U8G8
KfGognlU4lUF86rEswrmWYl3Fcy7Eg8rmIclXlYwL0s8rWCelnhbwbwt8biC
eVzidQXzusTzCuZ5ifcVzPsSDyyYByZeWDAvTDyxYJ6YeGPBvDHxyIJ5ZOKV
BfPKxDML5pmJdxbMOxMPLZiHJl5aMC9NPLVgnpp4a8G8NfHYgnls4rUF89rE
cwvmuYn3Fsx7Ew8umAcnXlwwL048uWCenHhzwbw58eiCeXTi1QXz6sSzC+bZ
iXcXzLv/vzz8/wHDnjCA
                "]], {{{0.11397128187459474`, 0.}, {
                0., -1.}}, {74.5, 0.}}]},
             
             ImageSizeCache->{{656.7948672217595, 681.3195273416676}, {
              43.012162389025704`, 109.84800436426282`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.2591140454138173`"}]}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.5454644579091069`"}]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.640702109215308`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.6725923536179991`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.7105855488276243`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], -0.2591140454138173}, {
               Style["75%", Bold], -0.5454644579091069}, {
               Style["median", Bold], -0.640702109215308}, {
               Style["25%", Bold], -0.6725923536179991}, {
               Style["min", Bold], -0.7105855488276243}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[13, 18], 0.7222222222222222]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndYznv4x5M4jpk9jhFCkpR1EN7ZZSQywjl25FhFx8jKXsfITCURUVYR
pXA3SdqiISrt/VTP82T7Pb/ruu9/fj9/cD3XlXr6Pp/Pfb/Hq+fyjbPttLW0
tB5o/vrff+VP+34LPrjfr8HJX8G9gypOQPmv1aG7V2pgO+bTjoxep5EaPWFQ
+KkaGJ7YMzh7hSsC2o7MSN1TAz3V41FHQ8/g5HLjvYUba3Cp1OJ4S4NzWB/Y
2/DzkhosT+/byvfueUzT6vymqXUNzg4r8jo3/SIMZ7bc2c28Bi5Vbor+jS+h
iVfDPiYmNYh877gr/L07iio+J4zXq8Hoxl5/PUv0RLRZ1Za5ujX4Ovh5m9O5
XvA5lt/DXqsGC9uFGC446o29mRmxzgoFVmob59k8vIqlBomOJ3IV+PjtSvTP
qmsYuzWqi3eyAv51Y3T6jLmOri9Coh6EK/BywZuBF7xu4Gu7e+tiAhTwMMqt
7NPuJjJX+LTP8Fbgy5KZsbe9biH4gdvzstMKqNdfeaUNf1xocHL1DxcF8lbZ
mvyuvg0n6/26uo4KrCgKbOkdfRezr2x70muZAreb2BT4374Pk6r1y4fNUmCK
wUwX/XcBaDVmRTOLcQq0H0BaB/MDUXncNmihqQKdRge8dvz5APFZM/5e31MB
n66mv1b3C4J//wmNXVpr3u/kyh/vFz/CkW0j7p9poMAqL5+P4248RsLJRQFT
86txv+dv3Vt8C8Yxo8naDlHVOJ3324yApU8wOc5kznmfasyOuBnm+S4UDe3/
8A3dX42ZOw7ojf/7KcIbNf6cs6Iag3dPHtNS9Qw7fRSWjSZWw3Khocs6L8LI
ce89DPWrMXCaQ8qnO+FQf4ypnKlTjTZ1+3zobAQe7AzAvwVVaJg3JvbH/khs
7OLh6h5dhazb9Yvjd0XBKORgPl2vgvOUmiW2e6NRMtdhWOGBKpSPtVgdfzIG
N+oWHm5qV4Vbvw7usfZ9geWukzIHTapCcNef5b/HvkT3QSYD5vapwqjkQXVd
lLF4H99ll3OjKrQevszvmmEc3P5plHSlsBKVwXfCnq59jTlNFHoxMZUIKg41
2xscj9a+WZvKblQi6/jKdTotE5E4ISa61aFKWH/afmrexiQcz7vfYdiqSuz9
b0tWxPpkTNnjbr9wciUCbJJiLPunQKfbwdA9fSvRzaKR+8SyFESEbmx+o3El
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
YLWk7k3NAxU++9h8WVWdjfDGztGNb6jgkGNwOfB+NsyOtovBRRXKuvw0/74x
G8+urIq7dlSFlfPeFEw2ycZKtXvPYTtVyHa9dcRV8R4Ph/67/tsGFeYl7DLK
DniPNVYZPl+WqZDcxCa5r+N7DO0X1WzIXBUsJho4OZq+x8C1MWb+FipE7/nR
8WlNFlSzqjotG63C6LDUsMYPsmCZOvydrYkKQeqbS2ZtyoLyor3SVV8Fk8G7
GnoOzoLF233jm3fW3P/1s28W1WZiQ/zljy9aqKDn12+a6cNMjLg9489wbRU8
C75X7diciektDrZQ1yvRTi/1zIshmTA3rt9iV6nEf4tuDm+tzEDQgS+5TfOV
aHJxZ9aioAz0Nipo+ylDCZfUWbt9nTIwxFAxvChRic8t+vWqGZqBbeZn0lrH
KOFk+T3GTJWOPz2scxaHaebTgZQ1hx6lI2Bq6+AXgUqsDPdtkfJvOnq3zDEe
f0uJ3G87Av8Yno61p3qefeWlhO2fs+auUr/D4qhJAXPOK5G8qe+XgMfvEB6c
mpl1XInp9755ftvyDm/8i2pm71MiujTZfPKf77A2u6Pjw21KjO7jW3C6/i16
dg3aULtBiZClO468D34LnXsL/BrZKWHiaW3Ud9tb1D3KP/VpoRK30vskO4x4
i+ZKn6m7rZXQb/ttc9jnNBwamR+dMEkJT6vkjo2fpCHJ6+rjmFGa53XsRpj1
9jSM6H/q3sJBSpyOcV7iMTINE0cN67q3t+Z5NbBuWPTlDRa9sVg4sKPmeY3u
c9Mk9A0aOHZ7YtNUie9bv07d4fwGC38NOlryvQ5OD5OqYka9QbpJRJ/cqjpU
VF0/o/stFWlWW34Z59bB3tB5+KKwVPzmVO/7KrkOuXYzs27sSIV5g33p18Pr
YHtVf7fCLBXK31btfXS/DmnZX3qafU/BqIV2aYrLdZjeKSnm4NMUbKsqs5x+
vA7RNtfXJO9MgbZV6/vPttbB/NT2Fn+MScHMzA3GZivqEBJnFWj3IxlmcV4L
wmbUwaSx/tyAZ8lIarR78LA/63Bn3JfPX3clI75B26HePeqgvyvRc9LYZMwx
77RI2bgOIxyn7NX7kYQPA3oaG1bWwqSkJvbRriSUbJwVMyq1FnpLPHWn/UxE
zylXUno8roXuu8m2ubsTUe15yeeNWy2azKi58u+vBHjOvG06y7kWn6M8ipu6
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
+ppSlT1jbNe4Qnde3yvWo+NpZiPv4K3Gp9EpZ8f8sLB4Gtva2nJ+y5MwsE9p
1dcsgSR/HVHTN/Z06P9/zV9P8vX8/Ui+H/88kp/H74fk/fD7JXm//PuQ/D78
+5L8vvw8SJ4HPy+S58XPk+R58vMmed78eZB8Hvx5kXxe/HmSfJ78eZN83nwe
SM4DnxeS88LnieQ88XkjOW98HknOI59XkvPK55nkPPN5JznvfB9I7gPfF5L7
wveJ5D7xfSO5b3wfSe4j31eS+8r3meQ+830nue88D0jmAc8LknnB84RknvC8
IZk3PI9I5hHPK5J5xfOMZJ7xvCOZdzwPSeYhz0uSecnzlGSe8rwlmbc8j0nm
Mc9rknnN85xknvO8J5n3vA9I9gHvC5J9wfuEZJ/wviHZN7yPSPYR7yuSfcX7
jGSf8b4j2Xe8D0n2Ie9Lkn3J+5Rkn/K+Jdm3vI9J9jHva5J9zfucZJ/zvifZ
96wHSPQA6wUSvcB6gkRPsN4g0RusR0j0COsVEr3CeoZEz7DeIdE7rIdI9BDr
JRK9xHqKRE+x3iLRW6zHSPQY6zUSvcZ6jkTPsd4j0XusB0n0IOtFEr3IepJE
T7LeJNGbrEdJ9CjrVRK9ynqWRM+y3iXRu6yHSfQw62USvcx6mkRPs94m0dus
x0n0OOt1Er3Oep5Ez7PeJ9H77AdI/AD7BRK/wH6CxE+w3yDxG+xHSPwI+xUS
v8J+hsTPsN8h8Tvsh0j8EPslEr/EforET7HfIvFb7MdI/Bj7NRK/xn6OxM+x
3yPxe+wHSfwg+0USv8h+ksRPst8k8ZvsR0n8KPtVEr/KfpbEz7LfJfG77IdJ
/DD7ZRK/zH6axE+z3ybx2+zHSfw4+3USv85+nsTPs98n8fucB5DkAZwXkOQF
nCeQ5AmcN5DkDZxHkOQRnFeQ5BWcZ5DkGZx3kOQdnIeQ5CGcl5DkJZynkOQp
nLeQ5C2cx5DkMZzXkOQ1nOeQ5Dmc95DkPZwHkeRBnBeR5EWcJ5HkSZw3keRN
nEeR5FGcV5HkVZxnkeRZnHeR5F2ch5HkYZyXkeRlnKeR5Gmct5HkbZzHkeRx
nNeR5HWc55HkeZz3keR9nAeS5IGcF5LkhZwnkuSJnDeS5I2cR5LkkZxXkuSV
nGeS5Jmcd5LknZyHkuShnJeS5KWcp5LkqZy3kuStnMeS5LGc15LktZznkuS5
nPeS5L2cB5PkwZwXk+TFnCeT5MmcN5PkzZxHk+TRnFeT5NWcZ5Pk2Zx3k+Td
nIeT5OGcl5Pk5Zynk+TpnLeT5O2cx5Pk8ZzXk+T1nOeT5Pmc95Pk/dwHkPQB
3BeQ9AXcJ5D0Cdw3kPQN3EeQ9BHcV5D0FdxnkPQZ3HeQ9B3ch5D0IdyXkPQl
3KeQ9Cnct5D0LdzHkPQx3NeQ9DXc55D0Odz3kPQ93AeR9EHcF5H0RdwnkfRJ
3DeR9E3cR5H0UdxXkfRV3GeR9Fncd5H0XdyHkfRh3JeR9GXcp5H0ady3kfRt
3MeR9HHc15H0ddznkfR53PeR9H3cB5L0gdwXkvSF3CeS9IncN5L0jdxHkvSR
3FeS9JXcZ5L0mdx3kvSd3IeS9KHcl5L0pdynkvSp3LeS9K3cx5L0sdzXkvS1
3OeS9Lnc95L0vdwHk/TB3BeT9MXcJ5P0ydw3k/TN3EeT9NHcV5P01dxnk/TZ
3HeT9N3ch5P04dyXk/Tl3KeT9Onct5P07dzHk/Tx3NeT9PXc55P0+dz3k/T9
zAOQ8ADMC5DwAswTkPAEzBuQ8AbMI5DwCMwrkPAKzDOQ8AzMO5DwDsxDkPAQ
zEuQ8BLMU5DwFMxbkPAWzGOQ8BjMa5DwGsxzkPAczHuQ8B7Mg5DwIMyLkPAi
zJOQ8CTMm5DwJsyjkPAozKuQ8CrMs5DwLMy7kPAuzMOQ8DDMy5DwMszTkPA0
zNuQ8DbM45DwOMzrkPA6zPOQ8DzM+5DwPswDkfBAzAuR8ELME5HwRMwbkfBG
zCOR8EjMK5HwSswzkfBMzDuR8E7MQ5HwUMxLkfBSzFOR8FTMW5HwVsxjkfBY
zGuR8FrMc5HwXMx7kfBezIOR8GDMi5HwYsyTkfBkzJuR8GbMo5HwaMyrkfBq
zLOR8GzMu5HwbszDkfBwzMuR8HLM05HwdMzbkfB2zOOR8HjM65HweszzkfB8
zPuR8H7MA5LwgMwLkvCCzBOS8ITMG5LwhswjkvCIzCuS8IrMM5LwjMw7kvCO
zEOS8JDMS5LwksxTkvCUzFuS8JbMY5LwmMxrkvCazHOS8JzMe5LwnsyDkvCg
zIuS8KLMk5LwpMybkvCmzKOS8KjMq5LwqsyzkvCszLuS8K7/l4f9H3Atr1Y=

                "]], {{{0.29209553224542323`, 0.}, {0., -1.}}, {75.5, 0.}}]},
             
             ImageSizeCache->{{669.4092344683338, 684.2624088595085}, {
              27.751032328878694`, 118.99549370300079`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.1639404007167473`"}]}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.29557588949732244`"}]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.47040397419228513`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.6087768166615136`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.7052874157736068`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], -0.1639404007167473}, {
               Style["75%", Bold], -0.29557588949732244`}, {
               Style["median", Bold], -0.47040397419228513`}, {
               Style["25%", Bold], -0.6087768166615136}, {
               Style["min", Bold], -0.7052874157736068}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[7, 9], 0.7777777777777778]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndYzn/0/++GkZHMkFEhlRCZGedGVlYqCWVmi3zIHlllVaSypaGUVbIi
nXdLU3tIew9Ke1H97t/1Pef7x+/3+cPn6tJ1vO/3/Xqd8zzP50Nl+yHDndIi
keiz5I//+3/+78uq7yN2bayC9NKc0pfX70PNV70q8eIqkNHwk6t2fgiqk4I/
KmlXwfK42GKZ8Mew7onOlebhVVDuW7LucO+ncFX+hWFytyrQ7a5tuni5OwSf
U1V+WVsJvXTjz3V/5AF/au5X22ZXwmvZmV2xsl6guqX/l23fKmFl7fA+uZef
wbrEq1fnBlRCUp+l2jUjfOAqiEwUH1XCiAkuPhsSnkPwm+Nj6m0roffy4OUr
HvjBn9F/auMPV8KxLO+YxgsvQfXWrhAfs0pYr+mibW/7GkxEeTcuLq0ERwvr
cc+N/eGa1boN5lMrIVd7kgxaB0BwQbzarJGVEH3CvUDL5y3UGug1DuhZCb5/
jkY6VwbCmNAvodX1FVCeusXvwbz3YDJFxzE6twJmjpjaq9jzA1x39zPzjK6A
4J2G+weM/ATB/VU1zwVWwNFzkYXxvkFQe+F+i+mTCgisy732Xv8LjKlXiNS5
VgF50iF/LUVfwWT7VSf5oxVg1Kf4o0tcCFxP6dpSubkCGuTPf7MwEeDrwuMT
I5ZXwPjz70+vNQyF2rc17U+mVcDJEYZfszeEwdgxu6JPjq6AtSrGrSaW4bD+
Tq6Lca8KUJl+yqn9ZgRcl1m3Y3JTOezpOJ3aIygSQo7Ea/cqKIfp9caG4XXf
oLZ4UWdJbDl8HK31Yc/MaBhr/CUO35dDyOZ9tpOvx8D6iKn3Hzwth4MNvWP1
q2Lh+jS/XdY3yiHDaJd3xfp4CPFSmWZwrBzabL93TEn9DnWD7ktN2FYOh0Zf
l9c3S4SxVxQSu60sh1zRCjmfk0lg2mT3qGBGORjtW2WluTIZbuzs2vtFpRx8
nU2XfhyXAiHpx2a69imH5+cCeht2T4X6xTWyh1vKwO3ZhXH/qlNh7IedKSuK
ykBntfSwoJw0MFXLdVP7XgapM0yjj6Skww1XY0upT2UgU+3iMz4xA0K6x+vm
eJRBsNWwbpEpmVB/bFHPj/ZlMGR91ceZuT9gXPnn9NsnymDSQLfBljVZYLp+
queBHWXwxjQmc373bLgZ5Wu1dHUZbA1Q8rwxNgdwpsp81dllEGZ76NKk5blQ
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
l5GfJrCfRn6bwH4b+XHIfhz5dch+Hfl5yH4e+X3Ifh/5gch+IPmFyH4h+YnI
fiL5jch+I/mRyH4k+ZXIfiX5mch+JvmdyH4n+aHIfij5pfi/fun/+KnIfir5
rch+K/mxyH4s+bXIfi35uch+Lvm9yH4v+cHIfjD5xch+MfnJyH4y+c3IfjP5
0ch+NPnVyH41+dnIfjb53ch+N/nhyH44+eXIfjn56ch+OvntyH47+fHIfjz5
9ch+Pfn5yH4++f3Ifj/lAch5AOUFyHkB5QnIeQLlDch5A+URyHkE5RXIeQXl
Gch5BuUdyHkH5SHIeQjlJch5CeUpyHkK5S3IeQvlMch5DOU1yHkN5TnIeQ7l
Pch5D+VByHkQ5UXIeRHlSch5EuVNyHkT5VHIeRTlVch5FeVZyHkW5V3IeRfl
Ych5GOVlyHkZ5WnIeRrlbch5G+VxyHkc5XXIeR3lech5HuV9yHkf5YHIeSDl
hch5IeWJyHki5Y3IeSPlkch5JOWVyHkl5ZnIeSblnch5J+WhyHko5aXIeSnl
qch5KuWtyHkr5bHIeSzltch5LeW5yHku5b3IeS/lwch5MOXFyHkx5cnIeTLl
zch5M+XRyHk05dXIeTXl2ch5NuXdyHk35eHIeTjl5ch5OeXpyHk65e3IeTvl
8ch5POX1yHk95fnIeT7l/ch5P/EAyDwA8QLIvADxBMg8AfEGyLwB8QjIPALx
Csi8AvEMyDwD8Q7IvAPxEMg8BPESyLwE8RTIPAXxFsi8BfEYyDwG8RrIvAbx
HMg8B/EeyLwH8SDIPAjxIsi8CPEkyDwJ8SbIvAnxKMg8CvEqyLwK8Sz4vzzL
//AuyLwL8TDIPAzxMsi8DPE0yDwN8TbIvA3xOMg8DvE6yLwO8TzIPA/xPsi8
D/FAyDwQ8ULIvBDxRMg8EfFGyLwR8UjIPBLxSsi8EvFMyDwT8U7IvBPxUMg8
FPFSyLwU8VTIPBXxVsi8FfFYyDwW8VrIvBbxXMg8F/FeyLwX8WDIPBjxYsi8
GPFkyDwZ8WbIvBnxaMg8GvFqyLwa8WzIPBvxbsi8G/FwyDwc8XLIvBzxdMg8
HfF2yLwd8XjIPB7xesi8HvF8yDwf8X7IvB/xgMg8IPGCyLwg8YTIPCHxhsi8
IfGIyDwi8YrIvCLxjMg8I/GOyLwj8ZDIPCTxksi8JPGUyDwl8ZbIvCXxmMg8
JvGayLwm8ZzIPCfxnsi8J/GgyDwo8aLIvCjxpMg8KfGmyLwp8ajIPCrxqsi8
KvGsyDwr8a7IvCvxsMg8LPGyyLws8bTIPC3xtsi87f/L4/4fyO6U8A==
                
                "]], {{{0.17266671492442257`, 0.}, {0., -1.}}, {76.5, 0.}}]},
             
             ImageSizeCache->{{675.6754118496083, 693.5534802426488}, {
              35.9983592336464, 103.04656220299177`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.17263200973365533`"}]}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.2420308084703356`"}]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.2934778662706773`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.495606269991918`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.5735944601256496`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], -0.17263200973365533`}, {
               Style["75%", Bold], -0.2420308084703356}, {
               Style["median", Bold], -0.2934778662706773}, {
               Style["25%", Bold], -0.495606269991918}, {
               Style["min", Bold], -0.5735944601256496}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[5, 6], 0.8333333333333334]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlYjXvU90OljNEoMmSKQpPhFJYInWQ8xIkSQqNEnGQKp8l0QpHhKHJU
Ig1SiNWopFnzsJvnmSQNevd7vWu9fzyPP7j2tXfae9+/e63v8Jmx337bweEi
IiJhwr/+77/8R9pX53aBdyd0p2xDbL0Jdgvszx++1AnLQ86tne3uDSkJAZa9
Dp3wLOvkrWGrbsOMXUVbPc074US4wE1zki+cbhujq7i5E/58s+nJM5l7kH9R
b1bIik7IDRGsd9B+AIsUTo5drtYJKtszkh87PwSPF8960hU7QXxS5/IYR3+o
Xl1RYSrZCbKeEvu94h/BqbC5N8s7OsBp5nWnkbMDQK3Uy2IovQPczsS57fB/
ApVifUtmPOuAhU0J2bHaT8Fb/YDkGvcOsHxo88yzJhAMdqeXWlh0gHON2vKJ
ocEw4Lo41E2vA9LPWum89gmBsLCHLkFTO2D8vE0log9ewIHSkX+k9beD9pw7
dVoJL0Fe3GF2a1E7+A28NKkTDYfP6iU/xr5uB5kX3nvn60TAud1r0hbdagfj
OAh+cSESNN2eP9h6tB3KNPoXLC17BfVhsvbHN7ZD7ezgghuGr+Fe6Tk9n/nt
4FvxbdKVjGjYJN4oHT2yHZKkHK9/PfgGhmtsrS+qbQPp8+HH78q8g6jdb2P6
4tvgu2SrxraSWLBym3llil8bXG/5L7sj+gMohV81XXmmDf5J/RmuvDMOsku/
LzL/sw2+pm+Jmbg3Hv4W3zv84pI2kNMIDFB3TIBlGql5AdJt8OPnFtXa24nQ
ulsjMLmzFXb5Hnl7KyUJ/N3unWrIaIVzSZeknoh/hO3hI4wkQ1qh+oOE4K/t
KSBRZjtV1aMVTGNUTO3DU+GdeEGn0cFWmNvSUN+glAb2GpB4ZHUrPMn69rfu
vc+gvCfIx2taK6xKOewSNycDCtwmWEYMtMDky0VtqYmZcDncWSevuAXu6btM
zlmWDSvLasb0vG4Bqf+WbjVUyIGv4hsr5L1bICYy19ZBJBeearwO/82hBR4u
GBlt0ZULf+6Z9vfuTS2wYnHQQmj5AmPdPYzPqraA948YQ4X2PIgP71Lxk2iB
5IrnsSP68uFEmUl/XF0zjFg7WWvC+EJQGZmUUZ3QDD4Gi5SMFhQJr9sCf1H/
ZoiYMc3+3fZi8Npz+9ics83gsqH38D7XEtB3H9I3MGmGDR3j/9TFUugNt5S3
XtoM2+0s7fWGl0NIWU7TFZlm6B9ndv7QJgHsHakb+6KrCTKft+XeCagAac0n
17Mym2CnluNZgUslpOwZu68rpAk8X0fm7NauAmf3k1rSnk1wWrkpSqO1ChZG
VIgtPtQENfYWVYZB1VBdZlBkvKYJ1gdPr7luWQO3R0Y8c5reBPcdpWWq1WrB
UHPy2XuDjTC7qvrK7O+1MLjn782xJY3g4DpbYWl8HYS7t80QRDeC3cLNS7q8
6uFghHH3kHcj3NlmLaVq0QCTyvHjjGONULso9kyMTiOkj5x3d83mRvjeekTE
WqYJXDRv2hxUa4S7Rib5Y4SfS9u0f4W7ZCN0nxb5Zp3dDI3uFlLB9Q0wbm2O
4oaIFngQkVGdltgAIc4JDUdvt8Lm8iVRrf4NsP2zQdUD4bkdIeHvPu5cA0hv
j7lx1aIdojUlTdR3N0DrBin/vo0dYGN6TG3bsgY4dc735OYpnTDNo/TXcdkG
2HNW10T+pnCuROjn+Hyth2Tp4p0LJbrArfxFQHRWPZRtW+xne64LdCTkTxY/
rwfDIHWD4O4uaNd0Mej3rIcLKytT3lp/hUemTYpKh4WvnzKYerLyK+zw2Na2
Ur8eos025r3c8Q0kI9+h+Yx6wH7fuzpp3+B9+aybF3/VgbqpzsLmFd3gIHHd
4klpHVikKi+8EdYNs7R+LPkYUwedI8JLhil/hyJTc8lGnzqQvHRVZ9zN73DV
41Op5PE6WOFjqeMh0gOrIjVDVbfUQcHGG5l6dj3wrfy+y8YFdTBZVVl2bFEP
BEqI/WE/qg5MBpKcYlf9gN1aR2bfaKiF58oFX5QDf8B4s8IfEUm1oDQ27Zb0
6F5I9FiVlveoFlziQ8v22/bCycjgBz3nauHQvoDndWm9MF8w0V5hTy3INk0d
cpjzEwQSZ/R0fqsFiQZBh+DcT7ipVSe9R64WdP2My0XzfsI6s031Z7/VgO+P
k5ffz+6Dnx7RMX7ZNVAfEgi1x/vgReT0K/EvakDJP615x4c+2CfwNK25XAPH
YpRXdon2g6zkt0ViwnO673Bvxu31/ZCqtWf43LU10KdcqDbPrR/OmCXnGSjX
QM/8VeLX4vpB3XNhoPVQNRxyClsa3NMPtZF3Tl0tq4Z524sbDqkMgK9AxCj0
TTVYN7XeD98xABskradm366GjVrVhn+dG4AhrS+dXcerYZLA50jQ4wGINFue
KL21GhomhU1cljAAhz3/81m8sBqcWn+rmlw+AIqvxlnuHF0N09ZmqRl9G4BM
wV86pxqr4ES7aW+i6CBclKwacz+5Cr7aWwy4TBiEJdqGFbGPq0B3RGDwpUmD
0GwWGS44XwXPG/+YlzVlEP71nPK3iGkVjPS7ZWI1eRC2vnI1VtapgrOpf2eY
yA6CWEW7ir58FWjlPX0XOmoQ3kju6j/YXQkXv7wZPNY/ALba8RnuOZWQvUhp
KLphAKbvne8fHFoJlbpvQ72yBiDP89axz1cqYXbeZbuJkQPg8WpAv82yEsAq
q2/7zQFYXnFQfvy6SlhTMcrsmN0AdEhmNanPrAQ3//JMN/0BCNBeFrtNpBIe
y5bdC5MfgNAPq5Wa3lbAlH3nJaUa+kFORjZB7UQFFMZtXZkSIbw+Vg2Hji6q
gN0bnCf1OQuvx4c3o181CaC5KkMuE/rBSOZq2I8AAbROvqZqPawfXlmZ7dA1
E8CWgN7HPdgHU1C975yCAGo76n8+ON0HF2VG+CXklkOrm/sbd+0+aLbKXyN+
rRzMS1y2Vjf/hG0Y2Pj7+nIovH27q+jhT3gr43zt2jDh43/FD/hu+QnK1kaa
Oe/KwEDmc9VGkZ/ggVMLZU6WwfKcju9zQnuhU6br9C71MvguP2/jVpNe2GWd
OP1BcynoVxd594n2Qhz6JFc8KYU9ci+3bwn9AXNkLa1n7i2F2ILxaeeNf8B1
a53xhyeVwppQq6SowR7owTGvnn0pAeOXARenPukBM9mKXe3XSkAk+tONut97
4KN1+KCGQQk41yu+WNzxHdTiLj0+MbwEVkg/8Fvm/R28ZY3Xv4kthu3WG+fK
//YdBqxVWgdOFkNR3rSS3vJusIjr81qlUQyBeYljRC91Q5psxuK/W4rg2h3L
d6Yq3aBp41eS8l8RXGg85zgv8xvci3M4P9q8CIycvNZ6On6D4XL6szYrCvdW
1LJn/07+BpY2cp9u5hXCr+m/n3VN/ArZcY12BdcLYfGLaa2mtl9hmdy7iYq/
F8I+R03b1XJfwd/mWrTpiEJof5odYRTfBRLxe/c8el8AX/fKvvS264KjcprD
6v4qgNWfxdzUJ3dBkY3oUxXNAtjUlO2lndYJq+ILDG1b80Fce5ZppHMnPJEL
7nj5NB8Kzru+fC/UeWNsT3t/M8+HO2YwPjmuAxzjN/62dHI+RFqXGJmpdkCZ
3HSBc34eDDVsVTO72w76tl8vfvgnDxbeKDxcNKodnscnzR1umAftSq9PlJ9v
Axn5O+lrRfPARsXnkXNvK5yxtXLw/PAF3kQfVHnr2Aq18bpyGU5fQOnia+OA
7hYwkB/3TkrrC/yXqBas49QCYbaVe7e35YJlVln7haFmUEiIEPUNzAV/w+V2
TpeFe17eNbh0Xy50Gh0WmzxJuM9sd26aNiUXptk5mFgI9/SWhHnf9hfkgOvY
M71Gek0QIz9w56lXDswTMzrzWbhnp9tlLm82zAFxccV3eX81gkeCf9UCsRyo
LDFp3q3QCK3yx90cMBsmJqxM2RYr3IN2a1WjTmWDanzw++ADDRCbIJ/dq5UN
TqlW47aMawAD9bwmp7IsSCo41q0VWw8KpU5aIluzILu/NXW1XT00uiqddU/O
hHSZ2tlWwj0Vo57wcZxOJvib2o28VVQHHqWHpG6HZkCW3eSWkJt1sMtttInS
zAyQqv237eHmOpiuERbw5E46yBceqTceL9xbpdvbVMekg7n0iQsfcmohzu3n
kkiXz2Ct7m4cd7sWvDQeuuh8T4M13nG/1pnVgnnZ6rR4qzRY4fpw7gqVWlB3
b5D+XfAJhg5XBlzrrgERzaum2ds+wbFFqs4zE2sgu0w9cGdKKmxOd+xqulUD
/u75nQLdVDgqqXc//VANWGo66xwKS4HCl+93R+vWwLLyqX+3zUoBg2HZ9rcn
1oCER2KG492PgJfnORi3VEORpqX8wNiPsLvv7K7a5GoIKh+z79LFZPj5q+fs
gsfCOe8R/mzUjyR4uFLcd5pLNRhoGXffsEmCpVNjYoL2VoOCoG/FpMpEqLJ4
/nv0qmpo9PBz99+eCAdflYrrzKyGMC39nLmfEmCt6bbeaSOrwUXQqPhyRQKc
Xz7KZpdQn23xvGaxJCIeVGTGNeXmVsF0bc3Q93Pi4fzCCRrn31ZBp6Dgh/79
OBCRfbpgY0AVxHme1ksfHweV71e2ql0Tvt5qlVygBAr10DTvcU7C5z94Bkd1
vYfPO+xNqw9UgbnMl+VJQt1fBG4evluqQMR6SnZu4juYty54x4yVVeCFBw9U
PX8L/9QYDdqqVYG67MueDp83MIiiwTaTqyDbutfz17kYyMLldmNHV8HROD2l
sZbRsK6tYM3q/kqQkrsSNnnra8i0/Diyr6USwmzy1szXiYJxO2IdZpVXwpZ4
pcJlM1+B75+9suGZldApd9h6/ZhIGKw2PPBPXCV42YYN7vgeDolxfwSERlTC
9ISfXhaCMFiuKTow+KQSXBa5GdRffwlhVYeP2d6phLgSBfsR+17Ao8RX7Y2e
lSDiFuIzXSsENv3xUG//mUpYpbEydoVYMOjq1c1POSL8+bLsapPCp7DQfNI+
8X3Cn3c/IOkU/AQsnV3ujftD+PNaPYt8Tj+GHfET7mTqC39e4GEcsdEfJiYe
U128RPj6iUv7HsIDEOhVGmnMFT5vtWd9cc0d+Ot7s1KEvPB5vOAt7XELDs9v
7386Uvj71DYl3t91HRw+GigOtVWAS7GvqdQjVzBUO/Vw5+cKEBmb0iH55RTs
TXhstCxQ+DgzxqA+xRzyNNcWXbwgfHxuyqb1cvvxVEXVr0kmwsd1Tsd0nJ3x
uNTrp1Xqwscfux4GdbvigftLBj+ICR9PChTVfn4dCyXG+PgWCUBkycKoivBb
uG7F5kvGwQJwqZCw/G+sL+rqpp6u/kv4vGeNoo3VAzQP+toyV18AqyZVHPLd
748hO67LyIwTPn/EaNVpr8dopOA643Z+OcQlvJlk9uEJdr7/Cn73yoXzbe63
Va1PcfDTtAhlU+HetfVOn6kYjH71a6pklcphevywp+IGIRh4qcn2aEkZVMra
n2868QKj27OXqvmUgb912a70gJdov2LJsbUbyyCsYtbdwsYwvH93/6O3w8tA
6nKp2KehcHxUdPLJ1ahSOKp989hbuUhUiNr/+sPBUsgWGFSELHiFFieG2RlL
lwr13tCGf/WjEHVNonZ/KAF/rdcx13e/RqV/R2YUHRLuWYHtbJdj0XhnX9ay
kjElYO4x86aDZwyOdnCKORJWDHGaJb/2+7/BaEHX0sCtxTC93Mtme/RbPPq2
+v3tziJwcV9ftDbzHV5M+LBz27UiqNT4pb+0LhbHL3MZ0TW3CFaVvQpXGXiP
/m3z71yJKxT6X5upitKITbNWPV2+sxBcFG4ki8nG4ZRtirumtBZAjF3r6XP+
cbhG7WL85vMF0JiwXvOHajw2eH4d2y1VAAoKAY320fFot2L+LJVH+WBg9+th
4+oEXDlyxPFR6vnglPDnjn2ZCdggmhUb/z4PguSjRpf8mYjHBV5Pjgn3XJGt
VMK2ukSsHvpyb2XBF5BIsHH6fDQJr93v0jXc9wWWyacs1B9IwmKrlf+8bcmF
o7bKdbHuyfjD3Ln61QnhHos/e3+x9EfUcbnyn9lQDmTLFW8NffgRnxW8Wlfu
kQMittoSc+en4HfRU+ONJ+aAevw/H/yiUnC7wY7h7fezwVyuxVFBLxU3BJ1/
82l2NnjZrFO9kZ6K+ib+1xTNsyAu7lGV5K5P+AG658WcyIRO2cE7F2s+4caz
R7zDr2aAis2uTf1H0lBPdeSfhv+lw664SFHHvjSMCxw1Pgk/g4fs+Hetrp+x
f/16e5OyNIixtnY4OCEd6wdk72/o/wSNmDxX8CAd7zqmvimb8gkUZGcIjFUy
cMqQf8EKvVQwsD7jnRWZgcpWBcueWKaAExYaGkAmqg81r1996yMEyWgNi0/L
xJTMoGPr45Oh0up69G/GWei6dOdFwdckkMImu4iqLFwS5j9OVSUJpl9Wvumz
JBtf3OqZs3dfIsRob2nbeiYbg/pTO+8+TIAtFWcNxiVk4+dI1WdDFfHQ6BkS
kDYyB/OdD9Q+nR0PLtrFv9w25qAnTBME2ceBQoW4yZpbOXhcp3f10jMIYZ7a
UUNFOTi6X0RxlvIHMNLeLxU7NRe1Knbj0pxYqBX8Y+NkkYsH53//54rnOzjj
+f6j9rNc3DRtWIvmhrcgo90yo6sjFxuD9proyr2B5wKFsy8Wf0FX53v4vDka
9D3XFVmd/oLXJCe4eqa+hjItR6058V/w1Zba3MyXUeAoeHS9WjwPnZ5rpTj6
v4IxnllND43yMHbt8vAj9yIhSGtQf/fNPDxo1rYp5N8I4fyc7y9flIfnLF3H
yD4LhyKPXf1flPLRTyxz7U0Mg6NabsZeB/JxbMy0CaNjX4KEIDLcKDgfD0lF
vbw/KhT8ParGSHbkY8+NCxXXrJ/DMq3xlsnaBfi7j8nEW6XPILt8eeIF5wJ8
u/Srzk7TYLD0sJ66Mq4ANf1qtl3oCARRLd9TfWKFeFpZrCLyxlN4UJ6c93pD
IRrFOzhcW/MfaHt8W3T8RiEmPPioEiz6BNI1Z1xZVFiIwbemqPnlPQaL8k31
LVOKMDN260yxyEcw4H5GL2h/Ea5XXB1yxM8fvDWfPbAIKkL9Ku0rpZp+oFZe
+GN6exFe1PrhPkfvX0hyF/ujXKsYE7L27hFY3gdzTa3Qu6eKMVnr3Drl4LvQ
W2YuaYzFWNNrbz1hmC94uV+3mChWgnZSyuc/298GFc1YzDQswUmyckcdur0h
rqxJ8YpXCY7aK9M9+/ot2OUuf3J9QQly3tqpsTZnxJTS//WYXo/8evr/kP8/
+n3Iv4/eD/L7ofeL/H7p8yB/Hvq8yJ+Xvg/k74O+L+Tvi75P5O+Tvm/k75uu
B/L1oOuFfL3oeiJfT7reyNebzgPyeaDzgnxe6Dwhnyc6b8jnjc4j8nmk84p8
Xuk8I59nOu/I553uB+T7ge4X5PuF7ifk+4nuN+T7je5H5PuR7lfk+5XuZ+T7
me535Pud5gHyPKB5gTwvaJ4gzxOaN8jzhuYR8jyieYU8r2ieIc8zmnfI847m
IfI8pHmJPC9pniLPU5q3yPOW5jHyPKZ5jTyvaZ4jz3Oa98jznvYB8j6gfYG8
L2ifIO8T2jfI+4b2EfI+on2FvK9onyHvM9p3yPuO9iHyPqR9ibwvaZ8i71Pa
t8j7lvYx8j6mfY28r2mfI+9z2vfI+570ALIeIL2ArBdITyDrCdIbyHqD9Aiy
HiG9gqxXSM8g6xnSO8h6h/QQsh4ivYSsl0hPIesp0lvIeov0GLIeI72GrNdI
zyHrOdJ7yHqP9CCyHiS9iKwXSU8i60nSm8h6k/Qosh4lvYqsV0nPIutZ0rvI
epf0MLIeJr2MrJdJTyPradLbyHqb9DiyHie9jqzXSc8j63nS+8h6n/wAsh8g
v4DsF8hPIPsJ8hvIfoP8CLIfIb+C7FfIzyD7GfI7yH6H/BCyHyK/hOyXyE8h
+ynyW8h+i/wYsh8jv4bs18jPIfs58nvIfo/8ILIfJL+I7BfJTyL7SfKbyH6T
/CiyHyW/iuxXyc8i+1nyu8h+l/wwsh8mv4zsl8lPI/tp8tvIfpv8OLIfJ7+O
7NfJzyP7efL7yH6f8gDkPIDyAuS8gPIE5DyB8gb8/3nD/8sjkPMIyiuQ8wrK
M5DzDMo7kPMOykOQ8xDKS5DzEspTkPMUyluQ8xbKY5DzGMprkPMaynOQ8xzK
e5DzHsqDkPMgyouQ8yLKk5DzJMqbkPMmyqOQ8yjKq5DzKsqzkPMsyruQ8y7K
w5DzMMrLkPMyytOQ8zTK25DzNsrjkPM4yuuQ8zrK85DzPMr7kPM+ygOR80DK
C5HzQsoTkfNEyhuR80bKI5HzSMorkfNKyjOR80zKO5HzTspDkfNQykuR81LK
U5HzVMpbkfNWymOR81jKa5HzWspzkfNcynuR817Kg5HzYMqLkfNiypOR82TK
m5HzZsqjkfNoyquR82rKs5HzbMq7kfNuysOR83DKy5HzcsrTkfN0ytuR83bK
45HzeMrrkfN6yvOR83zK+5HzfuoDkPsA6guQ+wLqE5D7BOobkPsG6iOQ+wjq
K5D7CuozkPsM6juQ+w7qQ5D7EOpLkPsS6lOQ+xTqW5D7FupjkPsY6muQ+xrq
c5D7HOp7kPse6oOQ+yDqi5D7IuqTkPsk6puQ+ybqo5D7KOqrkPsq6rOQ+yzq
u5D7LurDkPsw6suQ+zLq05D7NOrbkPs26uOQ+zjq65D7OurzkPs86vuQ+z7q
A5H7QOoLkftC6hOR+0TqG5H7RuojkftI6iuR+0rqM5H7TOo7kftO6kOR+1Dq
S5H7UupTkftU6luR+1bqY5H7WOprkfta6nOR+1zqe5H7XuqDkftg6ouR+2Lq
k5H7ZOqbkftm6qOR+2jqq5H7auqzkfts6ruR+27qw5H7cOrLkfty6tOR+3Tq
25H7durjkft46uuR+3rq85H7fOr7kft+4gGQeQDiBZB5AeIJkHkC4g2QeQPi
EZB5BOIVkHkF4hmQeQbiHZB5B+IhkHkI4iWQeQniKZB5CuItkHkL4jGQeQzi
NZB5DeI5kHkO4j2QeQ/iQZB5EOJFkHkR4kmQeRLiTZB5E+JRkHkU4lWQeRXi
WZB5FuJdkHkX4mGQeRjiZZB5GeJpkHka4m2QeRvicZB5HOJ1kHkd4nmQeR7i
fZB5H+KBkHkg4oWQeSHiiZB5IuKNkHkj4pGQeSTilZB5JeKZkHkm4p2QeSfi
oZB5KOKlkHkp4qmQeSrirZB5K+KxkHks4rWQeS3iuZB5LuK9kHkv4sGQeTDi
xZB5MeLJkHky4s2QeTPi0ZB5NOLVkHk14tmQeTbi3ZB5N+LhkHk44uWQeTni
6ZB5OuLtkHk74vGQeTzi9ZB5PeL5kHk+4v2QeT/iAZF5QOIFkXlB4gmReULi
DZF5Q+IRkXlE4hWReUXiGZF5RuIdkXlH4iGReUjiJZF5SeIpkXlK4i2ReUvi
MZF5TOI1kXlN4jmReU7iPZF5T+JBkXlQ4kWReVHiSZF5UuJNkXlT4lGReVTi
VZF5VeJZkXnW/8m7/h8qN7ja
                "]], {{{0.2289964247424906, 0.}, {
                0., -1.}}, {77.5, 0.}}]},
             
             ImageSizeCache->{{683.1803324229431, 701.6058084337292}, {
              14.110999968111386`, 116.50455422892408`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.05226328266287931`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.2181818803632232`"}]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.5006756191075781`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.6046393871171468`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.6224525126778175`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.05226328266287931}, {
               Style["75%", Bold], -0.2181818803632232}, {
               Style["median", Bold], -0.5006756191075781}, {
               Style["25%", Bold], -0.6046393871171468}, {
               Style["min", Bold], -0.6224525126778175}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.7058823529411765, 0.49411764705882355`, 0.5450980392156862], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnc41m/4983sPeJuaZJ8Vb6067wi2qVUWlq0pL1Ie2hoinbSpIGK1pe6
LjM783bbEokmGQ3x9BzPeT5//H79UYfjcOR239fnOt/n6/3quWz9zOUKcnJy
z//+9X//pT/fMs5vH72zAsrVrM+elnsELU/WdNrpWQHbCyJZwurH8CcYgv6b
WwE9gnJKx3+KAqUjBn1+OlUAV22Nizz6BDQ21j4ealcB08aZn1nt8Az058eM
3da7AvzXHKj+LHkBJg6nsqP1KqD0a3DCK70Y6GHlvvh7RzlMd3FRWNn/JfQz
Gvpl8JdyWOfleNTHnYNVu/quDaXlIFke5ZBSKeDf2nKNyLRyWBMy7FpGr3gY
kf340ufn5bDFxW7fQu8EGPvCr79VaDms7P+HL6tKhAk35j/3DPr7tZbsQMzS
ZJjmbz3+7oFySLZecHpM62uYvUVBWruxHKym9PmQcDMVFrpJPfotKQfXff66
vVelwzKne989ppWDYvTIiTaOmbB64O79N0eVQ69VP54ljXwDG0xm6lVZlkNW
N+9xrneyYZt8vxAz03LIXq+u4BabA7vqf1ovVimHAVLteo/KXDiYl/nyanMZ
DI7q+TJePx/8Y69PKX1XBgvaI30zXQog4PbWEkluGdh1DfasvSmFCycnes4T
ZdAy8IncCkUZXNve7ef5iDIQMPXOxU1FcGdJw2HplTLo00m5b2ZDMTyYmGRs
5F8G3kolRo77SiHK5uJtF58ycMlbOg16lsN/XdbaBqwsg7rH0qmNORUQpzQ2
IXt2GbR9n6mSk1oJKZ8NZ+qMKwP71KTu5lFvIUv6oXKqTRkMrd/hoX+7Cgp4
7PrjZmVwQPJD+eq1d1Aadro9TbsMjp35k5h+oxqqznicUPtTCr7X3EyCI2qg
fsewrhM+lsLbOsWvWgnv4Zu75n2/olIIWJa0TaeyFlqnVA5Pel0Kg4z21Z5W
roN2u+gUxaelMGO0xGXHv/Wg1OOIq/2tUmhYn7cjfPVH0FBd+H5vQCmkyp+5
pxz2CfQbBm7le0uhpYffJdcvn8GkWFGpfV0p1E7JcN046iuYJRQGjHIrhUeq
gyRaE79Bvwf3e/pOLoVtRb6Lj7Z+g3+C9jx8MbwUemedXnrsbgPY7naBH+al
kNmgcrduUSOMWGmeNcS4FPb6DPHc1fk7jHX+vXCrUilEr0sKMMn7DhOGv/kY
1VgCY+6blh470wTTet3c0VhZAmbSsKqQmc0wW2O72uA3JeDlOMO+j3ELLGya
dGH9yxJYuTrhWUlJCywr624ecb8ELjxVHO9/sxU8kxuffLpYAvebFFc2ef2A
DZHJ4wYcKYG69ZNspEN/wvYLl/JWbysBpeLAK58Vf8HufeuWhXmUwOlnC8Kb
s3/BQU/7hvczS+BlV30eGvwb/F2M9/YdWwJjxzbFx3i1QcCoem2PgSVQ8o/1
0Q8j/sCFvq+u3uhWAq77JVrVqu0Qoh1g9VajBNrNnZPcpe1wp3V5TI9fxVDJ
rVq73uyA8MrhkxZ9KIYYT+G3bKgci07VKroiLYbNg//8OHJFjv33+O3KksRi
0NHeaFsmJ8/iLj9pMY0qhhEWC4eO9JBnKQePHpp7vRj6HL2cvidZnmWtdTM8
f6oYjq+48vSIuQKTzhl8s2BXMaybuLvO9rACKwVlG0OvYgjv2f2RR40Ce2dR
JGbOLwbX/vE1P8cqsnq98OlnJhTDwKddJbIriuzbr73lb4YUg27y/NTqZkXW
+m7WWu2+xTB+WOMBlalKrD3Dom2KQTHkOL2TWN5QYkpP2475yxfDySaz1GHN
SkzzWrZp2tciuJ6WP7+XkzLTP3IrTLW8CG6u/nemLFCZmW70Hjo+owiy+l5U
m/5WmZnNn5J86L8ieN8tLHfXgE6sn4PZ7MSwIrjb1lt/8eZO7B+rpncK54vg
nGzS3G/POzFbo5RNYw8VQZrXuq02bZ3YiPbL8ns3F8Hq/kHH+o9WYfa160+/
WloEbO5XozJfFTYh26HHn+lFkB/f8Mv1uQqb/qJzxMgxRaBc8+lQWKMKm3Pj
46gdVkXQ/cUfz0pLVbbQn6c/lxSBw9GRwnCpKnPfcnZ+q2oRBFVpfncLUmWe
bivr7FplcEEEPi98rco2OI303lIjA6cxg36G/FBl3gN1VKLyZJBxQOlZibka
223yLqghTgZ1l4y8w2ersUPyz/oMeigDNzjnCvvV2PH6Y1HrgmVw2VTZ+nm4
GgvIW2QfflwGtXUarU4yNXYx1ibn4w4ZeIUE6nVRUGchtzstsVwtg95c5dfy
AerszsniL6tcZWCpnKO7YJY6i9gesSvUUQZWQcpuA3eps+gl+zXf/yuDyvR1
k03vqLOYiXMu9+klg/nBDp7Ob9RZvI2lpbuuDNKuVvbU+qnOUrq0P7/eXgiL
r+V7Humtwd4o5Y6v/FQII7Ze3fd7mgaTfr4t7V5SCLdMtl645qvBSqU+y91S
C2G2fuDh8Lsa7B2f2nT5WSEoZM7Y6VakwerDeh4ovl0IRsknQ9+ra7JvZ5r1
TAMLwWZU4cfdYzTZjx2pIa77C2GtQqT//C2arN396sBzGwrBdI+37P4DTaY8
deOr/EWFMP306qobtZpMc4jjVIOphRBrJG+5tq8W0+9hWjpjZCGM/ne9i90K
LWaq+tnzdP9CuKy0tLTXPS1m1iB+ZnUuhPa1wfnzGrRYv+LAI1qdCuHZ75qL
v0ZqM+uEVZ2nNElh2qL153se02a2D0bdOVYlhenKPmq1JdpsZJCuXWq2FDaE
s6RFg3WY/e7qBBUuhYL1ccoXjumwCSufz3QKl8IXxeOjr9bqsOnOx98evCyF
e1yxdXgfXTZn+JINCUeloPh7kP3JObpsYS/bDnlvKUh3D+ueekyXeWionmQr
pLCyT9nBGqHLPJtKuu6ZJYUXgzwTSn7oso1lkfdf2ksh7cDNrddt9Jh38oER
bYOkENGidLD/Oj22O9I1dUQPKXROWNDX474eO3RhwFwfLSn0GCLejanXY8f3
dbx/9rsABk5ouHXLUp8FeOZtbakrgGpFnae7vPTZJZdQJTtZAbxpul8cGanP
Qkb5nt2c/HeOWvVf3L1Jn4X2nd7rcXQB3H0z2frecAMWod370bcbBdDtbEvd
4L0GLLq1BQaeKQBr88+dAl4bsJjKtKy1ewpg9tgDH2/pGLL41GC3B2sLoL7A
UM9hriFLebzpU/2CAthp1tPC4bohy77s5Nt/UgEsW1g+Zke9IZMelKivGlYA
eidN6mP+NWJla79cuNOvAIJ8LTcU7zRi1XPizWsMCyChpbT5TpIRq4dzT3sr
FsCND80PGrSMWYOFp+OyhnxYbTFG6dhsY/ZDb0x+SEU+DDdMkI25Ysw6fum5
V2Tmw72encPK3xoz5eqahm6x+TDUxiVhaL/OTDPzxd6F9/Jh1oqL+01Wd2YG
T0/oXL6QD5qbiryn3+vMJNeWBhf55f89/+dC79d1ZmZH7P4x2ZoPTRvXPG7r
Z8LMN6rFznHPh/bvRvoGy0yY9fyySUEz8iHj439O4pIJs3N4VJQH+bBFYqtW
mG3CRlodWqVvnQ/Ljvb0HaBkyuyN5rU6d82Hywv9Zp+1NWUT2638Tqnnw3Gv
Z0bvl5oy51o5o6wfeaAd72Hxx9+UzcnOv6lZmwdOd4/qRz82ZW4vwmwmF+TB
4a96Fz4UmDKPGzvjjibkgZlcp8odzaZsjb+zc8qjPCj5qn9uqp6EbdzSp6JT
SB6sMRmv5tRfwrzdfqx1PJkHLaEV46eMlrA9ThltB3bmwfJtKsMmT5Uwv4Eh
/vGeeSB3aE34oHkSdtxki0R+Xh6Yvzrh+3mJhJ2Vn3AXxufBo4L4g1s9JOxS
fZdhu+3yIM8vI4m7S1hI3tfk2N55MLdAeVHyIgkLjU2Y/VsvD/av6BLoN1vC
Im6frx4ulwdZm6cVyk2QsCcn12z2/pILv5jjy2FDJCxmOyg8K82F/fM2tNma
SVj8EoMzzWm5oNZT171DWcJSJ9b2sH2RC7KN9Wm3ak1Ztk1MxKbQXIgySlSz
SzJl0i6nRj8KyoX7eU/K44NNWZmSe8bXA7kw6Kx3qfsWU1b9ecgC6025oBLx
2nmQkyn7KFWv91qSC6aNvy0cDE1ZAy/3vj8tF1I6Kee/KDdhP8Ieq9SPyoUD
VXU9o2+bsI4zfucsBuTCuv9+m81abcI6+c7vu9I0F4a51P142d+EaXpYR99W
yQUHaVVC59q/52uqgkN1cw64OsqtOHr97/kaIs3pVZ0DJXO7u4+a15n17HFv
ydLcHIhrXxG1QLszM1fd/fWayIGRuTHnDOKMmXXDjN3lETnQEjt85ZmNxsyu
uK9Wt6s5cH6/1hpFM2M2KuHn5QX+OeA1Ouf2hQwjZv8g0/KSTw4E59y7u3e7
EZsYdP2FbGUOdNF3X/XRzIg57946ofOcHJgX/0BJLdWQua6cWDh7XA40pOXc
VNtgyNycu60ItMmByPLf0M3YkHkMb2jKNcuBmVum+G6OMWBreiUd0NPJgcal
LZtHLjFgmzQu6jv/yYaBZ49evKlkwLybvK6f/JgNh8ZfO1AUps/2lLFBmUXZ
sE7JIE1tqj7zSzbkGinZsP57Q/niBj12IvLD1ElPs8Eufny98jk9dvZCbOmR
W9lwZdrn0D4j9dilfafXvA7IhmNbd4x/V6nLrnt6/FLelw3DnXymrTysy8Jc
hh0dtz4bNoQ178y31mURozRNDrhlQ+I6hdUXI3TYk76Vd+ImZ8O8pXsSKuR1
WKx2tJ3ciL8/L9U055mrNktoPZw4xiIbulid7TvvoRZLrVzgsss4G3SXP1Zs
1dBi2akDq2KUssHjYLij8NRkEctVqppq3sCdHJXJFRkaLHZoZMfG+DfgFlL1
0cdGg6WouXb7GvwGwl893/josjqTlrSP8PJ9A2nbtwbdUFVn1eF35ta5vgGD
fTn7l/uoscY907atsH0Dj6OKKrW+qLL2GS1n3+m+gfJhuyrurVBlmn2CHy35
nAWj835NHP9OhUlaHN+UpWbBrZEdV+vcVZhFyudP8+9kgVmvseaBH/7mp0tB
6rL9WZA/a1kPx42dmL3XaIvZi7NgaLEsp+WPMnMeU+OYOzILMn2CE66dVGaL
dE+4TzfJgnkOS8tteiszzyrbfRlNmbCjz6fgazFKzDu6NHhiTiaE+/s65boq
MT+/g7HJ4Zmg7RupHd2qyALmWhU7HMuEMePSFg+4rMhCLPNbxYpMsPauU+1q
r8gi2nyNxjhkQphbjc/KTwosNqv3vzE9MsHQb3/7p4sKLCUk3XlYWwZMzg/5
dXTS33y7afO6J7IMmLXPwFzSLs+qx3U5bvMkA+7NzcraHi3PGo0T7kaeyYDT
/kaaO9fKs/YPnq+t1mXAdb3Fyh0W8kwzRr/m7qQMcA4611/2Xo5JTvynYG6e
AXzh9jXld+SYxeJlZrcUM+DBCYPj71fJMdvB6mN6VqaDrfv8qjQrOWav+HhB
cGw6rNnVvyOuugOcC+b5dLmYDifWnLPo2NQBi0Llz1/Ymg7SI2plbYod4Olz
N9poZjosnTzLwet8O3hPnpEbYJ0OUR7bVsn90w5+3X5+1dFIBwjbELQu8Q8E
fg3ROlGbBlFDBl9b5/YHQuImDFBPTIMGv1mDYlrbIOLstwmHQ9Ig6cI+Tf2z
bRC7/MIKpV1pULXZZqrtwDZIG8oO7puXBjV/Es+/T/8NUrUP19vt0iDFOGZK
w6rfUF1yivvqp4Ez7/LQrNNvaAwfWvbjSyqkGst9G3vzF8jtrfi1NT0VXCdk
r7Fmv0Bz5mGT76GpMN1xlXhV+hMkfQYO2XAwFZofxcgyvX+CRYvU5fOSVOAx
L0pGGf6EISm7N3qO/vt1he/QhogfYH+p36la01RY1mnV5fwJP8DZK+uBR0sK
PH+/4lP+21ZYNGZb2tvcFCh/s/nfap9W8NLt/mFRZAqcCcnx+6HbCt5VScql
/inw6+GQLxqhLeAXvbb3vFUpIMed7LuOaoFAP6Ox0nEpELj3qcqA7Ga4Mffl
IpeeKdAx19tptHszRFgu35n95zUsTp3ltqC5CWLbNC9NLX4NsgCX3NN+TZCW
Ff0s7elryOux0OyTcRPIQhYWjD/7GnZFbtm/+853qN6k9D1x/Wswr1d5ucDu
OzSOe6BrP+U1bOs4X3MxoRHkOs+y5hZ/v3+kY/8ZMxpBu+735FHKr+FGv+MB
l8sbQBJzc/WLt8ngmnklK3BNA1icmHx4yKtk2JZwt3Hej28wZPH3W1GXkmHC
26Nj1Q59g3GDL8cP2p4M7aGKjXF638BZ0aEy3CUZVnj2/zR+9FdYVFD/x3JQ
Muw8pHz4musX8AoN6BKmmQxQ2DYyY9Nn2OEzYnjfuiSY+8o2WefUJ/CbXDXn
RlISHH4S+vD+g48Q2O3Ylh43ksDmSHJLZXo93Pg6OODK7iQwG6hx7+unOngY
VxRpuiAJxo3PvWKsWwexZ/dlnhuaBPbHEvTP2n2AtOX9PxoYJkE/S+XtIW61
IBuao3rmWyJ4Hltt4n3kPVSr+fTTzkwE+6v/fXR+WgONJWbj/O8mwrqxI2Yt
rq0GuYiUpap+iRC12b0xv0s1aO/dsOfQskR4rP7Zu9LlHUhmmlxVgEQ431Xp
SPipKrDoI/7b0yURIvreO+nx5i0MaVkpa2tNAKtg08eWBm9hXIpOi09+Agz5
pB7Tc0ElOF96ZtD6MAHMLFz1sqdVwCKvxYO3nEiAqSv76A/+VgZeY1SmN6xO
gF8n3q8NulQKO3QjvdY5JcC5xLvD+k4rAb+qOcc+9kqA7zrNUfIaxRAY3R66
qiMerH/6rnDMkcENvztJNSXxUNSmOUrpeiE8nDvt3bLn8VCmLQmfvEMKsZYt
cpWB8RB20PZzL7cCSGu72t1tYzys6ZHXw39iPsiyHEcVT40Hq7hnAXsgD96H
fJ7nahkP7Wsm/WkekwuNm4K253eKB7kDLLF8fA7IOY4OmvEuDqLi6ljf+dmg
3bnmcRaPA//sDuMlH7Oga93x7MlX4qB+0pNT8baZYBFj+yXFOw58h5098s/p
dBhyolTDaXYcPGovtBr0JxXGLT7YP2FwHMgmNR9J8U2BmYOtxjPtOJA8nrNt
o8ZrWKSY7/GyXkDNq7auGfeTwKvAd/+I1wJs29NjPBYmwo7Q3iHPbgr4suh6
blnXBDjik/7Sdq+Ag/Pn1n/4FAeBkzeXPFoooLPCt/rf6QJudOvy03q4gEFj
nWdO2Mzh4dd44wdGArRdv7oXeb6EnQcKVs2s5hB4PPfGy10xEGje99aUqxxC
dN73U77/Ah6mb6lwmsNhXsu7na8ankHG+kTJWB0Om3KVTrY6P4UPBoZzRqa8
guLkCft3vo4GuefuZ+z2vYLjvr4aFbOioOvCqIyBI15BWMykub9aH8EwOUVV
y+8vgXjtrFszHfo8+N9f4/dz+n78/zj9f/jzOP08fD2cXg++Xk6vF38fTr8P
/r6cfl98Pzi9H/h+cXq/8P3k9H7i+83p/cbPg9PngZ8Xp88LP09Onyd+3pw+
bzwPnM4DnhdO5wXPE6fzhOeN03nD88jpPOJ55XRe8TxzOs943jmdd3weOD0P
+Lxwel7weeL0POHzxul5w+eR0/OIzyun5xWfZ07PMz7vnJ53vA843Qd4X3C6
L/A+4XSf4H3D6b7B+4jTfYT3Faf7Cu8zTvcZ3nec7ju8Dzndh3hfcrov8T7l
dJ/ifcvpvsX7mNN9jPc1p/sa73NO9zne95zue5wHnOYBzgtO8wLnCad5gvOG
07zBecRpHuG84jSvcJ5xmmc47zjNO5yHnOYhzktO8xLnKad5ivOW07zFecxp
HuO85jSvcZ5zmuc47znNe8wDnPIA5gVOeQHzBKc8gXmDU97APMIpj2Be4ZRX
MM9wyjOYdzjlHcxDnPIQ5iVOeQnzFKc8hXmLU97CPMYpj2Fe45TXMM9xynOY
9zjlPcyDnPIg5kVOeRHzJKc8iXmTU97EPMopj2Je5ZRXMc9yyrOYd/n/z7v/
Lw9zysOYlznlZczTnPI05m1OeRvzOKc8jnldUF7HPC8oz2PeF5T3cR8QtA/g
viBoX8B9QtA+gfuGoH0D9xFB+wjuK4L2FdxnBO0zuO8I2ndwHxK0D+G+JGhf
wn1K0D6F+5agfQv3MUH7GO5rgvY13OcE7XO47wna93AfFLQP4r4oaF/EfVLQ
Pon7pqB9E/dRQfso7quC9lXcZwXts7jvCtp3cR8WtA/jvixoX8Z9WtA+jfu2
oH0b93FB+zju64L2ddznBe3zuO8L2veRBwjiAcgLBPEC5AmCeALyBkG8AXmE
IB6BvEIQr0CeIYhnIO8QxDuQhwjiIchLBPES5CmCeAryFkG8BXmMIB6DvEYQ
r0GeI4jnIO8RxHuQBwniQciLBPEi5EmCeBLyJkG8CXmUIB6FvEoQr0KeJYhn
Ie8SxLuQhwniYcjLBPEy5GmCeBryNkG8DXmcIB6HvE4Qr0OeJ4jnIe8TxPuQ
BwrigcgLBfFC5ImCeCLyRkG8EXmkIB6JvFIQr0SeKYhnIu8UxDuRhwriochL
BfFS5KmCeCryVkG8FXmsIB6LvFYQr0WeK4jnIu8VxHuRBwviwciLBfFi5MmC
eDLyZkG8GXm0IB6NvFoQr0aeLYhnI+8WxLuRhwvi4cjLBfFy5OmCeDrydkG8
HXm8IB6PvF4Qr0eeL4jnI+8XxPuxDxDUB2BfIKgvwD5BUJ+AfYOgvgH7CEF9
BPYVgvoK7DME9RnYdwjqO7APEdSHYF8iqC/BPkVQn4J9i6C+BfsYQX0M9jWC
+hrscwT1Odj3COp7sA8S1AdhXySoL8I+SVCfhH2ToL4J+yhBfRT2VYL6Kuyz
BPVZ2HcJ6ruwDxPUh2FfJqgvwz5NUJ+GfZugvg37OEF9HPZ1gvo67PME9XnY
9wnq+7APFNQHYl8oqC/EPlFQn4h9o6C+EftIQX0k9pWC+krsMwX1mdh3Cuo7
sQ8V1IdiXyqoL8U+VVCfin2roL4V+1hBfSz2tYL6WuxzBfW52PcK6nuxDxbU
B2NfLKgvxj5ZUJ+MfbOgvhn7aEF9NPbVgvpq7LMF9dnYdwvqu7EPF9SHY18u
qC/HPl1Qn459u6C+Hft4QX089vWC+nrs8wX1+dj3C+r70QcQ5AOgLyDIF0Cf
QJBPgL6BIN8AfQRBPgL6CoJ8BfQZBPkM6DsI8h3QhxDkQ6AvIciXQJ9CkE+B
voUg3wJ9DEE+BvoagnwN9DkE+RzoewjyPdAHEeSDoC8iyBdBn0SQT4K+iSDf
BH0UQT4K+iqCfBX0WQT5LOi7CPJd0IcR5MOgL8PJl0GfhpNPg74NJ98GfRxO
Pg76Opx8HfR5OPk86Ptw8n3QB+LkA6EvxMkXQp+Ik0+EvhEn3wh9JE4+EvpK
nHwl9Jk4+UzoO3HyndCH4uRDoS/FyZdCn4qTT4W+FSffCn0sTj4W+lqcfC30
uTj5XOh7cfK90Afj5IOhL8bJF0OfjJNPhr4ZJ98MfTROPhr6apx8NfTZOPls
6Ltx8t3Qh+Pkw6Evx8mXQ5+Ok0+Hvh0n3w59PE4+Hvp6nHw99Pk4+Xzo+3Hy
/dAH5OQDoi/IyRdEn5CTT4i+ISffEH1ETj4i+oqcfEX0GTn5jOg7cvId0Yfk
5EOiL8nJl0SfkpNPib4lJ98SfUxOPib6mpx8TfQ5Ofmc6Hty8j3RB+Xkg6Iv
yskXRZ+Uk0+Kvikn3xR9VE4+KvqqnHxV9Fk5+azou3LyXdGH5eTDoi/LyZdF
n5aTT/s/fdv/A6TRlek=
                "]], {{{0.06314944900364039, 0.}, {
                0., -0.9999999999999999}}, {78.5, -5.551115123125783*^-17}}]},
             
             
             ImageSizeCache->{{683.1551328232383, 717.1882567978491}, {
              39.73174021247465, 90.5810604445372}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.20498026447673928`"}]}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.287749300409266`"}]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.31033837711315376`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.3821215103663865`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.3985508016045364`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], -0.20498026447673928`}, {
               Style["75%", Bold], -0.287749300409266}, {
               Style["median", Bold], -0.31033837711315376`}, {
               Style["25%", Bold], -0.3821215103663865}, {
               Style["min", Bold], -0.3985508016045364}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], 
           "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {{{{{{{{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, \
{}}, {}, {}, {}, {{{}, {}}, {}}, {}}, {}}, {}}, {}}, {{{{{{{}, {}}, {}}, \
{{{}, {}}, {}}, {}, {}, {}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, \
{}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {{{{{}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {{{{{}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}}, {}}, {}},
  AspectRatio->0.4,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.5833333333333334, -0.7105855488276243},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"Italic\\\
\"], \\\"cat\\\"]\\))\"", TraditionalForm], None}, {None, None}},
  FrameStyle->Directive[16, 
    GrayLevel[0], FontFamily -> "Arial"],
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      2.9999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      3.999999999999999, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {15., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      15.999999999999998`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.5833333333333334, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      16.416666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      8.499999999999998, 
       FormBox["\"WT\"", TraditionalForm], {0, 0}}, {21.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      22.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      23.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      24.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      25.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      26.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      27.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      28.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      29.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      30.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      31.833333333333332`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      32.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      33.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      34.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      35.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      36.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      21.416666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {37.25, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      29.333333333333332`, 
       FormBox["\"R164A\"", TraditionalForm], {0, 0}}, {42.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      43.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      44.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      45.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      46.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      47.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      48.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      49.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      50.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      51.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      52.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      53.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      54.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      55.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      56.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      57.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {42.25, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      58.083333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      50.16666666666667, 
       FormBox["\"T79S\"", TraditionalForm], {0, 0}}, {63.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {64.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {65.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {66.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {67.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {68.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {69.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {70.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {71.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {72.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {73.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {74.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {75.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {76.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {77.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {78.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      63.083333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      78.91666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {71., 
       FormBox["\"N100A\"", TraditionalForm], {0, 0}}, {0.5833333333333334, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      78.91666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      2.9999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      3.999999999999999, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {15., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      15.999999999999998`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.5833333333333334, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      16.416666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      21.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      22.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      23.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      24.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      25.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      26.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      27.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      28.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      29.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      30.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      31.833333333333332`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      32.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      33.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      34.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      35.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      36.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      21.416666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {37.25, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      42.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      43.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      44.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      45.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      46.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      47.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      48.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      49.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      50.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      51.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      52.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      53.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      54.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      55.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      56.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      57.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {42.25, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      58.083333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {63.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {64.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {65.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {66.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {67.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {68.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {69.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {70.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {71.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {72.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {73.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {74.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {75.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {76.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {77.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {78.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      63.083333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      78.91666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      0.5833333333333334, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      78.91666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLines->{
   None, {2.571941635074462, 
    0.7242758696007889, -0.019996628416253673`, -0.090176630349088}},
  GridLinesStyle->Directive[
    RGBColor[
     Rational[2, 3], 0, 0], 
    Opacity[0.2]],
  ImageSize->750,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     2.9999999999999996`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     3.999999999999999, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {11., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {12., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {13., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {14., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {15., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     15.999999999999998`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.5833333333333334, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     16.416666666666664`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     8.499999999999998, 
      FormBox["\"WT\"", TraditionalForm], {0, 0}}, {21.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     22.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     23.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     24.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     25.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     26.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     27.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     28.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     29.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     30.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     31.833333333333332`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     32.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     33.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     34.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     35.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     36.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     21.416666666666664`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {37.25, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     29.333333333333332`, 
      FormBox["\"R164A\"", TraditionalForm], {0, 0}}, {42.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     43.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     44.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     45.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     46.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     47.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     48.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     49.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     50.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     51.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     52.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     53.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     54.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     55.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     56.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     57.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {42.25, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     58.083333333333336`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     50.16666666666667, 
      FormBox["\"T79S\"", TraditionalForm], {0, 0}}, {63.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {64.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {65.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {66.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {67.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {68.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {69.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {70.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {71.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {72.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {73.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {74.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {75.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {76.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {77.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {78.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     63.083333333333336`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     78.91666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {71., 
      FormBox["\"N100A\"", TraditionalForm], {0, 0}}, {0.5833333333333334, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     78.91666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{
  3.7995277403996572`*^9, 3.799527877388109*^9, 3.7995279320705233`*^9, 
   3.799527968438005*^9, 3.802298496547171*^9, 3.802385500436633*^9, 
   3.8071300197623663`*^9, 3.808938082734283*^9, 3.8104920242605257`*^9, 
   3.810492250210318*^9, 3.810492289420445*^9, 3.810497948543743*^9, 
   3.810497986315504*^9, 3.8105016275981007`*^9, {3.810501699794278*^9, 
   3.8105017172593603`*^9}, 3.812391821105044*^9, 3.812392042734549*^9, {
   3.812556099772128*^9, 3.812556103421811*^9}, {3.812662906813723*^9, 
   3.812662911708358*^9}},
 CellLabel->
  "Out[144]=",ExpressionUUID->"6f6f42a3-801d-4dd7-9c81-646dd9c3c699"],

Cell[BoxData["6.391629528151198`"], "Output",
 CellChangeTimes->{
  3.7995277403996572`*^9, 3.799527877388109*^9, 3.7995279320705233`*^9, 
   3.799527968438005*^9, 3.802298496547171*^9, 3.802385500436633*^9, 
   3.8071300197623663`*^9, 3.808938082734283*^9, 3.8104920242605257`*^9, 
   3.810492250210318*^9, 3.810492289420445*^9, 3.810497948543743*^9, 
   3.810497986315504*^9, 3.8105016275981007`*^9, {3.810501699794278*^9, 
   3.8105017172593603`*^9}, 3.812391821105044*^9, 3.812392042734549*^9, {
   3.812556099772128*^9, 3.812556103421811*^9}, {3.812662906813723*^9, 
   3.812662912359605*^9}},
 CellLabel->
  "Out[149]=",ExpressionUUID->"231de53a-0b68-4e3e-a1bd-f6482e0ff009"],

Cell[BoxData["4.810864087389426`"], "Output",
 CellChangeTimes->{
  3.7995277403996572`*^9, 3.799527877388109*^9, 3.7995279320705233`*^9, 
   3.799527968438005*^9, 3.802298496547171*^9, 3.802385500436633*^9, 
   3.8071300197623663`*^9, 3.808938082734283*^9, 3.8104920242605257`*^9, 
   3.810492250210318*^9, 3.810492289420445*^9, 3.810497948543743*^9, 
   3.810497986315504*^9, 3.8105016275981007`*^9, {3.810501699794278*^9, 
   3.8105017172593603`*^9}, 3.812391821105044*^9, 3.812392042734549*^9, {
   3.812556099772128*^9, 3.812556103421811*^9}, {3.812662906813723*^9, 
   3.812662912380979*^9}},
 CellLabel->
  "Out[150]=",ExpressionUUID->"23eb5341-9ee3-4fbb-b25a-5d0f939fcf9a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SlowChip\"\>", "\[Rule]", "0.8588916454664289`"}], ",", 
   RowBox[{"\<\"SlowestChip\"\>", "\[Rule]", "0.8588916454664289`"}], ",", 
   RowBox[{"\<\"ValScan\"\>", "\[Rule]", "1.141108354533571`"}], ",", 
   RowBox[{"\<\"GlyScan\"\>", "\[Rule]", "1.141108354533571`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7995277403996572`*^9, 3.799527877388109*^9, 3.7995279320705233`*^9, 
   3.799527968438005*^9, 3.802298496547171*^9, 3.802385500436633*^9, 
   3.8071300197623663`*^9, 3.808938082734283*^9, 3.8104920242605257`*^9, 
   3.810492250210318*^9, 3.810492289420445*^9, 3.810497948543743*^9, 
   3.810497986315504*^9, 3.8105016275981007`*^9, {3.810501699794278*^9, 
   3.8105017172593603`*^9}, 3.812391821105044*^9, 3.812392042734549*^9, {
   3.812556099772128*^9, 3.812556103421811*^9}, {3.812662906813723*^9, 
   3.812662912382222*^9}},
 CellLabel->
  "Out[151]=",ExpressionUUID->"ba763d4b-448b-4a73-be2a-86cda5309364"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.7166666666666667, -1.0059545454202972`}, {80.21666666666667,
      2.737324574799373}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[
    0.7]], {}, {{{}, {{}, {
        {RGBColor[0.8941176470588236, 0.7098039215686275, 0.7490196078431373],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndcjm/496/ruqP6GmVmfK2yycgIyXkZ2Xtl8yXKioyyo8zKyEpGEsrO
iAo5DjJSRInMkIyMlkq513M/r+c4nj9+P3/w6tXtvu/rus7zOD/j3WTmotGz
FUmSHpn++r//8p8Ojs6NHR20EJLu82hajQOiVr+6rQp6aMFxrttya22o+Duy
pOPpvlp43i/3h5dyWHyYmtZj5lAtrFnWK7a8dZi4N+983/rjtLD6smdBNadw
ccZn29CMqVqYrb/dP37JMbFz4+xx2+doId/CzXtqQoRYFtx7Wv9FWlheLcHK
p/4JMSmsgbvRRwvzwvcvyNt+Uoiz5Yvi1mthh/cm2221okTTuOcrvLZpocGz
ua8rXzklLO9d2tB6txb+O2143Mv9jMhP2x7w6aAWyrrp+nxyOCcysubuOXxc
Czee3zBLqH1BxP9wOTzunBacbp33vG95UYSVNTlZ9aoWzNfHbrGodUlsrGA4
/yBBC/5fz3n42V8Wc6u/vrb+vhYmDahoGzrmihje6Bp0f6KFhZMXbDm2JUZ0
ars7qShTC35jSl0/P7wq6nT3TDv7QQu3fY+/SKwXKwwug1+75Wqhvd+KtTtX
xYlPo5t/alCkBaGc+RaSGy+Spis/X/zVQu2rRy5187ghzi/IKt6p0UGLTYc+
nyy9KfasvK4fWFkHTU88f+q475ZYsXl/RaWWDr5svbG0qi2KqXuWWN1ooIOY
pubVHsu3RZ/w4XWWNddBWSPPM39yb4uW51s3sW+vg8jAqUvPvL4jqlyv2PqL
ow7WP3mcbXyWKIruZzscVXXguyP4uvWLuyLz2S2nCYN08Gza6+rFH+6Jmx8O
9qs2Wgf2w4rnQvF9EfHLe1jyJB3Ujm0bt7laktjyd/R4/1k6mGxM2TLF8aFY
YN5+es8FOhhqo7MePSdZjK5ZyaNkmQ7aFLlP9AlLEY5Nvi6+sFYHJ1+Ncn3z
/pH4t13iSvfNOli74KlNUOtUITsd9Wu8Uwde2mdf9697Ir4MWB34KkQHL2vd
FWaeT8Wjsa57d4frYEXXRyHeTdLEpf86HRlyWgd2O79tOfUqTez3tIo0u6yD
DRdcbML3p4vVq39cSLiug2oj7WbMmvBMzNj6INY7UQf/prpFlTXMEP33Hcf2
j3RQ+fn2pXO+Z4g2Eb4Pv2XoIOTQ04gr158L6+jJ6cfe6cByzlPfrztfiNIb
jm8mfdGB0/b4DMt5meJNUo2cGvk6cLk2Qmc76KXA5/k/H/3RgcW8PQVO9q/E
yeyUkk2SHua9PTZ+Wu3XIiA/ytDLUg/gs2zLXrM3YrHO37ysmh6OXmq1L/fP
GzHOcob1pXp6OJ+6aejcgreiR+2edefZ6WHQlhkOjfPeiUZ2dWzt2uphY+mN
NfULs4RZh+LWbzub3j9jkPnc8vfie8+nnfY566Hg2f5jgf4fxJNB53oO76+H
0sjvu+pV+Shixm91MR+hB+VzL7e5oR/FwVluw9FVDw3siuZvaJktfBerritn
6KF/5LzkOdezhdvaf2c4zNXDrogX/e1GfBKDAso8fnjp4WLao67w5ZNoF5Lh
dWKVHm5rvbr33ZAjap64uGqqvx7WDvDtfaXhZ1F+Mci/dpAeDrue+GEDn0VW
gkfQk716OBi8yd9n5heRmNxv39YjerA/djwy0+KrOJXZOKx3pB62Jg9r4nz5
q9iRo4v8e0EP+cuGJp+d9k0sLXwZfSVWDyXNAqY2r5orJhhi4hagHnzTK46/
gLmiV6Xg280e6mGRuXNqX+/vwq7OwuSsND18j5nz9mu7H8Ki2aBnIa/1MH16
6u7d33+IXx2bvR35SQ952U7Nep/+KdJ7yZ8tf+qh8+H/7PLm/RJxQ979ulOs
h7FjtQd3tM8TRybEl67W6yF2V3Bg7T95wm/2PmPnigZolR5cZ+XtfOG+xMsi
r6oBihddNI4eUCCG+g6rFmVjgA9qtoNLdIFwCGpVb0ZjA/SICvtva51CYRNa
wa5uKwNklebPsfYvFLqTH9ukdzTAlWlrrj7JKxTZlxM6B/YwQAND1qjYyUXi
AYQ69+trAO8VzZ9ce1gkzj1a3l8/xACXzPYMu9nttwh+NWrEtbEGeDv59OqY
U7+F9xf7CYumGmCm7kxoQN1iMeW35X8t5xjAzMzXt2VgsegtfZn70dMAR72r
nfTWF4vmVe4sOehjgGYdW9lPWVwiKtULWz1mvQGm1Y4uuvWpRBQ0X7Wx8jYD
FLlMPuDvWipedBq//V6wAbbvu/ttR0qpuKE67F930ACRV9YWoPgjwodVPep4
3AAOVjZddFf+iM2TvkcVnDVA3s1BA5q0LBPz3e9fPB1juv4lH35YHS4TI5dF
xM9MMEDsl8IeUVblosuGdXfq3zfAJO3EhHt+5aLejkkpGakGuB/Vt8PgknIh
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
NrLfJj+O7MfJryP7dfLzyH6e/D6y36c8ADkPoLwAOS+gPAE5T6C8ATlvoDwC
OY+gvAI5r6A8AznPoLwDOe+gPAQ5D6G8BDkvoTwFOU+hvAU5b6E8BjmPobwG
Oa+hPAc5z6G8BznvoTwIOQ+ivAg5L6I8CTlPorwJOW+iPAo5j6K8CjmvojwL
Oc+ivAs576I8DDkPo7wMOS+jPA05T6O8DTlvozwOOY+jvA45r6M8DznPo7wP
Oe+jPBA5D6S8EDkvpDwROU+kvBE5b6Q8EjmPpLwSOa+kPBM5z6S8EznvpDwU
OQ+lvBQ5L6U8FTlPpbwVOW+lPBY5j6W8FjmvpTwXOc+lvBc576U8GDkPprwY
OS+mPBk5T6a8GTlvpjwaOY+mvBr/f179//Js5Dyb8m7kvJvycOQ8nPJy5Lyc
8nTkPJ3yduS8nfJ45Dye8nrkvJ7yfOQ8n/J+5Lyf+gDkPoD6AuS+gPoE5D6B
+gbkvoH6COQ+gvoK5L6C+gzkPoP6DuS+g/oQ5D6E+hLkvoT6FOQ+hfoW5L6F
+hjkPob6GuS+hvoc5D6H+h7kvof6IOQ+iPoi5L6I+iTkPon6JuS+ifoo5D6K
+irkvor6LOQ+i/ou5L6L+jDkPoz6MuS+jPo05D6N+jbkvo36OOQ+jvo65L6O
+jzkPo/6PuS+j/pA5D6Q+kLkvpD6ROQ+kfpG5L6R+kjkPpL6SuS+kvpM5D6T
+k7kvpP6UOQ+lPpS5L6U+lTkPpX6VuS+lfpY4D6W+lrgvpb6XOA+l/pe4L6X
+mDgPpj6YuC+mPpk4D6Z+mbgvpn6aOA+mvpq4L6a+mzgPpv6buC+m/pw4D6c
+nLgvpz6dOA+nfp24L6d+njgPp76euC+nvp84D6f+n7gvp94AGAegHgBYF6A
eAJgnoB4A2DegHgEYB6BeAVgXoF4BmCegXgHYN6BeAhgHoJ4CWBegngKYJ6C
eAtg3oJ4DGAeg3gNYF6DeA5gnoN4D2Deg3gQYB6EeBFgXoR4EmCehHgTYN6E
eBRgHoV4FWBehXgWYJ6FeBdg3oV4GGAehngZYF6GeBpgnoZ4G2DehngcYB6H
eB1gXod4HmCeh3gfYN6HeCBgHoh4IWBeiHgiYJ6IeCNg3oh4JGAeiXglYF6J
eCZgnol4J2DeiXgoYB6KeClgXop4KmCeingrYN6KeCxgHot4LWBei3guYJ6L
eC9g3ot4MGAejHgxYF6MeDJgnox4M2DejHg0YB6NeDVgXo14NmCejXg3YN6N
eDhgHo54OWBejng6YJ6OeDtg3o54PGAej3g9YF6PeD5gno94P2Dej3hAYB6Q
eEFgXpB4QmCekHhDYN6QeERgHpF4RWBekXhGYJ6ReEdg3pF4SGAeknhJYF6S
eEpgnpJ4S2DeknhMYB6TeE1gXpN4TmCek3hPYN6TeFBgHpR4UWBelHhSYJ6U
eFNg3pR4VGAelXhVYF6VeFZgnpV4V2DelXhYYB6WeFlgXpZ4WmCelnhbYN6W
eFxgHpd4XWBel3heYJ6XeF9g3pd4YGAemHhhYF6YeGJgnph4Y2DemHhkYB75
f/LK/wcjz5oa
                "]], {{{0.17905509939328915`, 0.}, {0., -1.}}, {
                1., 0.}}]},
             
             ImageSizeCache->{{88.35823008810422, 
              106.29838029080852`}, {-112.59806185409145`, \
-55.70953021975744}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.283183351093137`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.203202672954048`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.0815702175178847`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.9833776731025035`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.8553028060769892`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.283183351093137}, {
               Style["75%", Bold], 2.203202672954048}, {
               Style["median", Bold], 2.0815702175178847`}, {
               Style["25%", Bold], 1.9833776731025035`}, {
               Style["min", Bold], 1.8553028060769892`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlYjVv4959HRfM8IkNOQockJNNaxoQQkTlDKFPpGEKEEKKTKZlSInOS
QkrrliEynCRJySylVCqhtPe73+t3378/3tcfXK52ez/7eda613f4dJznP3FB
C0mSMlV//d9/6c/VuL8PmJgphL5VcuATryT2SumlMdZKIZJsL1Tsz7zClLNC
V2+1VojggZ2PaLKrrHNG4peMjgpxfvrqLtuLUtjY1kVTf9gqRMYT/5PL911j
gUEaOd27KUTnPxoJ3XxvsMMFPQcs7KEQgctOBXeZdZOJ3jMvxvRSiE2NJtbF
gRns874w65d9FUJKLjNLO5/JdL8nRxgMUIjVNR5J1qHAeo1/o3RlCrHjXZ3+
8ju32dRLWis2DVOI9TvOHNe2uMNCdPp8uOGqECFtXm2+vPEuO+03Z9L3MQph
7bfc3aLpHnuUHX636wSFKMr91atxdzartb3eZ56nQmh4NfXU6/OQWW79kHBk
qkKY9VWeM67PYYM/6Fk+n6kQR29t7ngy5zFbwF126sxVCHuD4Dcz0p6y8Bif
xmELFGLZ4Ny1K+fksit//l0S7Kf6vJTAXTUBz1jh9PTXKcsUIuW73Sm/iDym
uFHq/m2FQnQ3VATZpD1nf1kYC9vVCtH7wpmAqd/z2ZhVg3rOXqcQg9dt6TnM
uYCteO4bF7VR9f6jn55oH/6SHXI8YPzfFtX9+a2xreW3Qpb5rwhtFaYQ3xRP
GtvPKmKfvn2tZ+EKUd8v9fqu4mKmPdZ8YdC/CtHpQKjxDN8S5nh+yMuk/QqR
FXOo03G1t8xLc9mo8kMKce9rSL/zU96xDQuj0zoeUwhng+vPbvV6z07dvdNt
eqxCbN0QaNPC/APLsak+uu+UQmR7/x6+RPrIaja11nt0ViGGxXTYX/b9I7N4
O2Kj2iXV9yk/FOXz9RMbNGhF9YArCrHXf4/ybvlnNv/osTkrUxUirbEq7mt1
Kdv1O/vZxTSF8HEJXXvlzxeW5FU39PMt1fdr1kytMShnBantUqyzFCKvY/CD
dV2/smaT0bZT7ivEla+R263dKlinwFVRETkKEfVh4ZCTyyuZW25sq+ynCrFN
Ob/2yeFvLKDH4yBlnkJUO5wr9s2pYlG7f5Y7v1SIf2vTj5tKNSzjq82MgGLV
60tqZ8w/XsM+jhr3+Oxb1ec97TO4aeB3pnVm7aD3HxXii2bAutQ335mDxulE
qzKFcNT/ULN4Sy2bMj+3/cRKhWj4q+XgWrs6Fny7KXJXjUIMvTe4tMN/dexk
e7sWd+oVwi8qLPTRmnr2cMPEf5p+KUTMy6T6ex1/sOriDZ+cmhVi5vU1Tp8e
/2Bm/c9NXiorBWv3WWoKamADo/Pvn9JQii6lb6cV2v5k8xqUziVaSvH2RFqs
x/OfbIen/TkzfaVojF323WXzL5aYPKX1OGOliPLplu/j8Ju9MNwSvt1cKcz4
5aUJJb9Z0/JLfzJbK4XreuOzz8Mbmc2TwmU/26ner2ew312XJjbKXv2tQyel
aLb5Fe/+pYkt3+kwwddOKdRz1f1GHvjDDnyZfjvWXvV6hXP2Tt7M0kds7/XK
QSnq9L401VY0s/fxV+KNeqt+//CUitlRCqbZosR0dD+leFaW63KRKVmPOZrb
twxUirxjYk76FyXzzHT6eZMrRXzfPG9nV4mva+vtWzdcKRSdl3q+OCzxuHW7
Xtm7KcUf9xap5ysknl2YOtrHXSnm97Y/e2GgzKv6vk8/5qEUadMHej7ZLXPT
g7rdX0xWio2HnEs0Xsu8f51zjN50pQj9p0xy79aCz/GYbzBytlI8yN716sia
FjzscsSmjfOUYtGIRQ9K77Tgl/Rufr+2UCk6P9nc928DNZ6/5PO86sVK0bb8
hP3CaWq88aFhvp2/UszOOzUh4qQa79Bl4Ig5/yjF4PoU6eRXNT5y+6Jr0WuU
QrdsSO8YR3W+7NM+u2frlWKmb+T2TWvU+f6hmdFam5Ti6PAnnV0z1PnN2HKt
oVuVIv1u84MapTp/pzBdv26HUgT5aR8KHqrBW87ilcm7leLsdxubr6Ea/O/0
JbMqIpViV2qap8tdDT7J6tDTTgdVn5cxccFitZZ87ZosNvOwUozsmxAVMqQl
j33xLenAcaWojtEYt3pjS37fycrmSZxS9D8VVT7hZkteuXf4fo0E1feZOXqR
4Y+W3LjGX33weaVQM4r5kNqjFXcZd3TV6kTV/VHz2Dt0USvuffF+aWKyUgxw
Cbx9PaYV36Zd6/XlmlI4ZO55Zf6iFb/oa/2wfbpqvSo1ZszV1uR590f1nyqU
oqb5eGn0YE3+66+VFyLvKIWO5DhMrNDk7UNPtH2YrRQaNrsXFsRr8hHvc/bI
j5XiW/PkTe/yNfkS1qBwyVWKlQFlLd+pa/F9xzsGBOYrxcfDv+69dNLiN5rG
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
ZHj9u+/xwz5/2Mfg+aWhM2RYl/Erc/PeJtZg/7td7CwZnoa+tc3IamRaxRFe
Gd6q9Rw62LHXr9+s7a6/Igvnqu5fuE3mC8ffzMHl5oP6+TKkxW3R3uv/iw0r
Gy8bLZTB+bjvUI8rP9mUQ59duvvK8ORz3lW1nw3Mb+T6QLfFqp/Prqw5yBtY
8A/DCwuWyuA56m7Vjz0/2L+nEj5uXi7D7fDADsZv69nJSQPbxgSonueq4xGv
nOrZtRZ5njcDZQiInF0xYHcde3hl0Z6ClTK0D9t9smtZLXs9p/le7WoZ3DWC
Sve71rJqg/0K/bUyRPRyTFt6/jtrIbo426+XoXpvYG2C4XdmtjzT33WDDPrg
ObTvuhrWxdrz7PwQGUaMLZ/b7mk1G/i4/F3IZhmWL13dd1xiFRu/PsTqWKgM
l/v+mFZ24Bub181s4o1tMjS+crxStLmSrXp1fld+mAzSw1aHTVdVsB07+J2a
nTL0j/R6sn35V3bMuaBJd7cMk1eGj+20vJxdLl3Su2uEDFNTu/cr+aeMZR2U
l42IlGGon+nVsyFf2Ivhh07P3SdDVGTCrXV7S1lZ3d9vNhyQIXtBhqHbuc+s
6WSW+ZEoGYzUjvzUyv7E9CdOHX8tWobRviFdU75+ZDZyVVjeEdX/s4bFDzb9
yPokhULVMdW8SV6yOXbYBzbK2+q39gkZ7Dw6FecGvWcz9C872sXJMOZzcMz9
q+/Y8lvDFw+LV/1+6uHXNWVv2ZalRSe9T8sgs89qaavesINtAorXn5HBP+Cc
/jO9EnY2R8M0+pwMJ3cd1u90pZilrz06NuWCDH+XujlGehexp10ct+VekuH5
Y+tQbatX7P3L+7cqL8vQO/PEf0ElL1n99pkNmskyvFhw6OSNiwVMs29tD9sU
1Tx8Psj+wvYXrM3nsEVDrslwrGfpWocl+azHAevYWTdk6KZhGmgz/TkbMuxq
4dqbMlzYEZE1e1Ie86wdZRSVIcP6x24fM6Y8Y75xb9ySM2W4aVIyQ8snl62f
sHLLU5Dh6K/wjZMbnrIIpVb61ywZ3F7Nr3zl/ITFJZ6oa3lP9byawjv03/2I
pczq83enbNXn/xjX07juIcvWfeTDHsrwaHxWSOOSB6wofc7xGY9kKIzdqAxr
uM+qFje8WPNEdX+GxAWM3XePya136x/4T4b42wMSCwbfZaYPO7omPVOt3zGT
mpKbsphd0PWQx89l+LB7n+eSB7dZfzv3G2UvVPNw5/O7YadUx1LBhxr1QtV6
NfdaY91esLnbgrp2LJLh/BbPHG3jW2xlb/15g17L0HKGjvq7Duks7GP8kWlv
ZDCoq9x4anQaO7LP5fmqdzKcC7dr6x1xnV0a8p/Ovg8yJOaYVJlXpDKo8Rme
+Em1/690ffPcO4Xln2gMzimVoeLyYvcTFcnsy7jI1NIyGVofadl+4p4rrLHZ
tqpFhWq94x+9S+md23/7//+Prxf0enw/Qe+Hnyfo8/B6BF0PXq+g68XvI+j7
4PcV9H3xfgi6H3i/BN0vvJ+C7ifeb0H3G5+HoOeBz0vQ88LnKeh54vMW9Lxx
PQhaD7heBK0XXE+C1hOuN0HrDdejoPWI61XQesX1LGg943oXtN5xPwjaD7hf
BO0X3E+C9hPuN0H7DfejoP2I+1XQfsX9LGg/434XtN9xHgiaBzgvBM0LnCeC
5gnOG0HzBueRoHmE80rQvMJ5Jmie4bwTNO9wHgqahzgvBc1LnKeC5inOW0Hz
FuexoHmM81rQvMZ5Lmie47wXNO/xPBB0HuB5Iei8wPNE0HmC542g8wbPI0Hn
EZ5Xgs4rPM8EnWd43gk67/A8FHQe4nkp6LzE81TQeYrnraDzFs9jQecxnteC
zms8z8X/nuf/c94LOu9RDwjSA6gXBOkF1BOC9ATqDUF6A/WIID2CekWQXkE9
I0jPoN4RpHdQDwnSQ6iXBOkl1FNAegr1FpDeQj0GpMdQrwHpNdRzQHoO9R6Q
3kM9CKQHUS8C6UXUk0B6EvUmkN5EPQqkR1GvAulV1LNAehb1LpDeRT0MpIdR
LwPpZdTTQHoa9TaQ3kY9DqTHUa8D6XXU80B6HvU+kN5HPwDkB9AvAPkF9BNA
fgL9BpDfQD8C5EfQrwD5FfQzQH4G/Q6Q30E/BOSH0C8B+SX0U0B+Cv0WkN9C
Pwbkx9CvAfk19HNAfg79HpDfQz8I5AfRLwL5RfSTQH4S/SaQ30Q/CuRH0a8C
+VX0s0B+Fv0ukN9FPwzkh9EvA/ll9NNAfhr9NpDfRj8O/+vH/8evA/l19PNA
fh79PpDfxzwAKA/AvAAoL8A8AShPwLwBKG/APAIoj8C8AiivwDwDKM/AvAMo
78A8BCgPwbwEKC/BPAUoT8G8BShvwTwGKI/BvAYor8E8ByjPwbwHKO/BPAgo
D8K8CCgvwjwJKE/CvAkob8I8CiiPwrwKKK/CPAsoz8K8CyjvwjwMKA/DvAwo
L8M8DShPw7wNKG/DPA4oj8O8DiivwzwPKM/DvA8o78M8ECgPxLwQKC/EPBEo
T8S8EShvxDwSKI/EvBIor8Q8EyjPxLwTKO/EPBQoD8W8FCgvxTwVKE/FvBUo
b8U8FiiPxbwWKK/FPBcoz8W8FyjvxTwYKA/GvBgoL8Y8GShPxrwZKG/GPBoo
j8a8GiivxjwbKM/GvBso78Y8HCgPx7wcKC/HPB0oT8e8HShvxzweKI/HvB4o
r8c8HyjPx7wfKO/HPgCoD8C+AKgvwD4BqE/AvgGob8A+AqiPwL4CqK/APgOo
z8C+A6jvwD4EqA/BvgSoL8E+BahPwb4FqG/BPgaoj8G+BqivwT4HqM/Bvgeo
78E+CKgPwr4IqC/CPgmoT8K+Cahvwj4KqI/Cvgqor8I+C6jPwr4LqO/CPgyo
D8O+DKgvwz4NqE/Dvg2ob8M+DqiPw74OqK/DPg+oz8O+D6jvwz4QqA/EvhCo
L8Q+EahPxL4RqG/EPhKoj8S+EqivxD4TqM/EvhOo78Q+FKgPxb4UqC/FPhWo
T8W+FahvxT4WqI/Fvhaor8U+F6jPxb4XqO/FPhioD8a+GKgvxj4ZqE/Gvhmo
b8Y+GqiPxr4aqK/GPhuoz8a+G6jvxj4cqA/HvhyoL8c+HahPx74dqG/HPh6o
j8e+Hqivxz4fqM/Hvh+o70ceAIgHQF4AiBdAngCIJ0DeAIg3QB4BiEdAXgGI
V0CeAYhnQN4BiHdAHgKIh0BeAoiXQJ4CiKdA3gKIt0AeA4jHQF4DiNdAngOI
50DeA4j3QB4EiAdBXgSIF0GeBIgnQd4EiDdBHgWIR0FeBYhXQZ4FiGdB3kUQ
74I8jCAeBnkZQbwM8jSCeBrkbQTxNsjjCOJxkNcRxOsgzyOI50HeRxDvgzyQ
IB4IeSFBvBDyRIJ4IuSNBPFGyCMJ4pGQVxLEKyHPJIhnQt5JEO+EPJQgHgp5
KUG8FPJUgngq5K0E8VbIYwnisZDXEsRrIc8liOdC3ksQ74U8mCAeDHkxQbwY
8mSCeDLkzQTxZsijCeLRkFcTxKshzyaIZ0PeTRDvhjycIB4OeTlBvBzydIJ4
OuTtBPF2yOMJ4vGQ1xPE6yHPJ4jnQ95PEO+HPKAgHhB5QUG8IPKEgnhC5A0F
8YbIIwriEZFXFMQrIs8oiGdE3lEQ74g8pCAeEnlJQbwk8pSCeErkLQXxlshj
CuIxkdcUxGsizymI50TeUxDviTyoIB4UeVFBvCjypIJ4UuRNBfGmyKMK4lGR
VxXEqyLPKohnRd5VEO+KPKwgHhZ5WUG8LPK0gnha5G0F8bbI4wricZHXFcTr
/r887/8BgKbnGQ==
                "]], {{{0.06551048891817923, 0.}, {
                0., -1.}}, {2., 0.}}]},
             
             ImageSizeCache->{{88.05977505478714, 
              122.15408408854077`}, {-107.57412705779919`, \
-58.41166976758419}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.1697984872827014`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.1021367174931673`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.0832326832439563`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "2.014155096325495`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.956281159541553`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.1697984872827014`}, {
               Style["75%", Bold], 2.1021367174931673`}, {
               Style["median", Bold], 2.0832326832439563`}, {
               Style["25%", Bold], 2.014155096325495}, {
               Style["min", Bold], 1.956281159541553}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlYjWv09/fQQFFkKEOU4ciQKcd0Oi0UchQO4UQZMmU6ZS5DykxmcZCh
yJTIVBnKutFcSIkGhYpQJLVr793eu7f3etd6//j9/MHVpevZz36e+173d/hY
e/lMXSSTSCQPm/76v//yn8C2K084WilRT7fmw02vEHBqc2qcVT8lHrBrZmDW
7AQYmiXVaYYp8duVBU5DMv6DjFbVl/MdlZiuOeH04sYpOGRqOTN2shK7XpH3
i7wdClNNJhgem61E80POkRfzzkL7luvifJYo8eJVA800szAoMA5f4rJGifNf
YUnBxHA4a/TcvPdWJbq1jwz+ceoCzG+uStEPVmLhiwN7zmsvQo9mPf1KTihR
lBXnGvhdgi8Gf9vgBSUmuTi0mWZ0BaL0t+SF3lTiqV/5i57HXAUfvWt7/B4q
8fOHAyrnTZFgJ88dPj1ZiSt+fNEb6BEFdVLp10HZSmw4KTo/db8JDyW2p0yK
lbio2/X4CyNvQUDjPxMqvirxjstJB/k/t2G0bocqRaHEPzzqTlzfeQf0tbeu
RUhVmNRq2uTxiXchteGde1BLFdo3z+q5o20M7Fc3M5rTQYUFo9febb0hFqao
hjwc2VOFplhkFF4ZB22U85aZD1Kh1yOHyWXrHsDbuv0da+1V6DzhtOPBNo/g
tOJ+epazCjed/DP77+R4mFNbtvGGmwpHfdu8/+PBx9CtplXfffNUeKBHqIV0
mIBP1faFi1eo8PsQ8+k2g5/AtZ/ewY5+KgwIndV82IinsKIq5A+rHSoccrmH
6T6XZzDwh6jQHFLh7F3qE+tWJEJtZWVofqgKr7m8eDvxVBLEVVi4xF5RYc0n
21iPnGTY9M1Jc/SuCts67PRWdEwFh6++UT6owlYXb1rM800D2ZczHi4ZTf+/
oM320px0SP6c2qL3WxWWBV069nRsJuz9VBuvX6rCbw4yqX3yc3Ats1pZ8kOF
3j/afN47/SW0KnWxRLUKO9g43/jpnwWvP/o9DzVQo96u2foPpryCkx8itviZ
qXGIlWf54AHZMPt9lu30Lmrss9vK2rddDnQt1hQN6qPGyYX2/bfKX0PJO5uD
JkPV2L1NqN5y1Wu4XOjmUDFajQemp30cWZ8LywoCf6S4qlGyZnqHX5o3YJsf
dS7CXY21q1eXHTLKg+q3eZOCFqlxXHp/O1OrfLj3Rq/Rc5Ua7T0CjZf8WQB+
uQOjR25Ro+XoO1sOexWC/WuPueZ71Vgcsyh96aF3IMnZY1obosYxvl3/KnlW
BM9e3cOsMDXeL1nYuqixGHZlffC5EaXGMkUL2RnrD/DXyxZW++6r8Wrp/PLy
5A9g8mJ41uJENa7vtWPeQ5+PkJ25MNAxS4233Nzv13cqgeMZhwdavVOj954W
FrsySsA9Pf6DplyN0W+SX40LKIXOaV8O59eocUqE7XKLIWXwIaXt6NhGNV7O
TD7zprIMIpJHVR81bsC1Qapps65+giVJK8J9zBvwUvdncf6LP0PfxJN/u3Rv
QI+kIQOb9SqHH08Tpb0HNGD8mAzfN1/L4c6Tn7f1/2jAMeW3dt65+QXWi85e
JeMacKpPbemSdV9hBDqb4dQGPPQxYTP++Q20CWufhs5pwI8Ou3K2GlaAiA9b
7besAX8unma+MrsCdjzK7DZ9fQMaPFc4TDhXCc4PldmDtjXg2PjRNq+XfQfj
Bz22mxxswM31Ix5mDPsBL+Om2FWcasCILZZGlXpVcDR2c2nKpQZ8aztue9Wr
KpgRc/VYxO0G/K76sGf85J/Q8d5rx6CEBnxklNxrdMxPKLojqfVMa8BlFj0K
sGM1hN/uFzEyt+n7jr654NzWalh46x83848NeOtYtz5xpdVgE71Dr7ayAc9Y
bZpSNu4XVN64dS9L2YDbLpnmNF79BdFR7xbe0NNg6IBDEaXNa2DN9Wbt9rXS
YK5fXMbSpTUwNHJI0uLOGjQcdDNoRUoNqK/OW+doo8HuquIpyd1r4fGV/T2t
hmhw4F4YMjWgFoIu38/VgAbbTSmIrXhTC2Mvle3Mn6jB1vkBbXxsFdAsotXQ
2Jka9Fu83u1BkAIyL9h/PrpAg7GBHddczVHA4XDvEz4+GnS902dDp+514BYW
Ms5lkwanT318/JdPHZifF3U2uzW4sl30ZNOHdVBwtvKy/jENrunufshNWg/n
zljMLDmnwSdXDiRdHlsPXqFOhhipwdPDj+tX7qqH3077xoXGanCxsZVVi6R6
+HryzBK/pxq8e1eW8LOxHqL+SzWf/kKD8d3Pr9k5TAm+J2pTBhVo8GZmwce4
5UoYctzKz+SzBn+13vFkwxklKI+52FRUa1Av0UgTm6aER0f98lK0GjwqWxW/
tEYJAUci9kQ01+LvD2Zv3dVBBWMOZw0PaqfFypK+1gb2KjA4pPniaa3Fje+M
v5XOUkH6AZtTI221eGxC8X+W61VwYL/bBPMRWry6VLfo7gEVTAkOVNU4abG2
T6LZ1XAVtN0XdS1rihZ12aJEckcFeXvy3G94aPHCjevhSY9VcGa3ntE+by0a
FynDJKkqmLtr4MPFa7XYxsL83uPnKui202OZY6AWPxZP62OapYLP2/d0tNrf
dH9LvZPlL1UQue1euuY/LQ6adu/urXQV/Bv0YWP+RS1W3bT17/dMBYMCW/SN
jdbigLpW3w7dV0FtwPDCo4+02C/Rs21dpArub1kY7JOixYt1A2w3n1bB5s2H
/3DJ0WLfkYabRu9WwahN8RU277V4fWVrhyWrVCDf+CVUv0KLLQ8ePNHKXQXJ
fm1dSuq0uE+2ZKmXgwr2bRileSzToZeNqeN2axVMWr8iKtREh7bFr4eHylRg
tu6kh19HHQbvi0nN+aiE3DWJLab/psM/o97FzUQlnFr9M37QYB1eW1pZNTVU
CR6rOq80cdDh4FeDZ/9apwQrX2fLigk67LGvChdMVkLZv2ufp0zXYfvjL07n
9lLClZVhWyLm67Dv8gTl+qb1snxFpm3QSh06u4yasuFNPfRfrizy9Ndh6LuV
swxu1MOvpT0Ojtypw7fT4iqmba+HWO8pDuZHdDh09cXMQ+714L9k84+aM02f
b3fh6NcB9fDn4qvnsq7qMDWzi/9hg3qQLHo96cY9HXaprR15t6gOEhdIGvcK
HSrDVlZujamDPV79ohdn6tA97HNu94N14DL/n7mOeU3XGzZ+csaSOjCdt8PU
qkyHk0u8zoSPqYPsObdQU6XD21+Xpmd1qYMTnu988ht0OKbZroNBGgXM8mhm
FWvYiPAaexYWKqDL7CFZR9s04tgv44fKExTw0X1eoE/XRnQ2+POOZZgCIv7Z
P9ClbyNuCTGId9mpAO+Z9z/YDGvEPeX/7L+1QgH9ZpQd1ndsRGlOnfuSGQr4
6dZqdMmkRuz1a7TjgTEKuDvNvvrxrEb81/jaCPtBClg/1Ts8dHEjbiyUVgV3
U8DIv0P+9lvdiPc25Sceaa8A3WQhnR7QiEO3JibMa6mAp5Mqbw/a14gz0mN8
mxsqYKerhZfJiUbUM5+vOyVXgLOLk1lFeCPamEQ169L0c4uJvk9TbjTi+aL+
Uef0FZA14czqiAeNKHN4tqmbsQJCnFO7BSU1opOiS8CNNgqYOb422/NVI6pb
rLMd3VUBHcdZbR9Z1IhH+pv7v2uaZ8VOLnbmXxvRtNwkbRMo4IKjX2lNbSM6
1EfIO7gpwM46e4K3RCI8J2eEXF/edH2rL+EzDCSi4JPHBptdCqjrqlM5tZCI
raN7jtp2UQH/dG071c5MIoKnhPW59kwBD7v0ibS2kIhXEq9ewZ8V0LnLKFmr
LhLxu6RtZZsWdRBgOWOWrrtEPO9Yr2c7pA7ed15xp7K3RAzLfl2eMKcORnfe
ZlQ4QCJOGLk2iwqug4udTnql/S4RsbLl3wua5qd+p5sP4/6QiA2wwrlfZR0s
7phodnm0RJw7c7FFYNd6SO1QsCxkvESsnem1555bPfTp8PPpNleJMAzLCrgc
XA/7LQw6rZomEctbnB8zKLEefph3XjPXXSKq+m181V9XD1PMB2e4zpWI0A29
f24YoYQ77Z272y+SiIkZY8aXNe23Nu3nbOqzXCKMymcH/nVXCevarc2xWCUR
eXMuLgisVsLbtvv6Gm6QiPDsdMWsgSoY3jZsu2KzRHTa0O/ETR8VnG4TW1i6
TSKkM9tbTo5WgcYs0y57T9Pntf9NbVqlgjlmJcHioERErwqbmthfDaK1svRm
iERM7n6rK/yrhm6tTezPnpaI00v8XKbdUMOOVj1CgsMk4q+X5Tk5FWr4ZDqy
0v+yRPS+Prz4WO8GGG86xck7SiIGf2tRvHhxA1wzWXxmxh2J+FTU5obVhQYw
Ntlc63RfIg4pbK4ef9cAK1oedbF7LBHtuhWmn26ngRctrkZYJzZdf5hrur6r
Bga2eKwxTZeISWPnDbixTQNHjV+76V5KxK79HXy9YzVQa/QtqjJXIhbOHNqs
1RcNzDCS6BcWSgRGfzi8xVwLcc3be6Z9lIh1h/3eBjtpoUPzfjFx5RLR9cOi
mvY+WtjUbEzLy98lYkv/L7M0J7RQZPjPopAaiTAtzK/rGK8FB8N/E7apJGKc
2uP3acVaCDPY0W5Vo0Qs0Xh32q3Vgszg9Mq5+lIxMX3g9NMddLBQ/1aSq7FU
JD9yH7t6sA6S9ZIt7VtLxeIAjVndeB3Y6L1b18dcKvrHLo01maWDvfJfzy0s
pcLvbZTeFW8dVMia/WbYXSqu+qQ+uL5GB66yLgEKG6l4k3ElyHiTDqKlQ96U
9peKv688bYwN0EEr6V/9s4dIReYE39ywpp9XS+btEiOlItv+y+WEjTp43biu
+OYoqajZVtVFr+l6QxuDh54dJxUtJYOrVyzRwUld+MFgF6novc+58NdMHai1
cZ/9p0rFgbIVEUeddDBb+9zB+x+paH+3qNNEWx0kaEpPzJgjFb0cFe0szXTQ
VaP64bRQKo68rVtiXKOFoAbT8XbLmp5H/YmSjllaKFH3PG/tKxWlrZ0mTr2m
BSf1H/Wm66ViQNjvbg8DtHBZ9fdk3SapOP/I+ZjnFC00Uy25UhkkFa6q2xuc
u2hhmXJLY8FuqUjodcBhb9P7zaw/NjPtgFRs9nT7PCBaA/3rr0XHHZOKDsec
rSet1sChOjS8fEoqTmW8GVc/SAPVity5Ieeb3scRfadRPxpgmqIibtslqbg4
qX4fXGmAe7XSVquuS4Xi7kFpS88GaF9r7j33tlT86OFY9cS0AfxqbIVrnFTk
R9l980M1FPxytLBPkIrr0bufua5Qg/0vd98+z5q+f2vbNZ7t1XCu2ifVIk0q
/jDXkycnqEBSvdPK8KVUNNzf63/ZSwXzf4b6KV5Lxar9rRO76KvgWdXtrNIC
qeiZGBY2+ZISelal2GR/kIpzppt3z3JUwu4fRYHis1S8m78xZP77evjyvSbv
ZqVU/P6iv+9u/3r463vzQWd/SUXhs4bhVa2b9Fll173BSqnIqLNeEX+1Dkwq
f//or5OK3cOLXpg51IFvxcQR3noy8XVB+Mz22QrI/jb/yAwjmTjvute8YmHT
PP624atTK5l4sqh5j5i6Wjj+9cBou/Yy0XFufeDJ3bVQ/+XiKevOMrE5ud7o
gXktuH95UG3aTSZm1s/3GnmlBh6Wv5yg6yUTG1wi38DQGuhc/im80lYm9mTM
n1qZ+AsCPjeoCuxkIiU/f7zXtF/w4VPrqWkjZOJFiv+5Zx+rYcynXpFxIBMH
7HLCBvlWQ0TZn7LLY2Vim1dQRabuJxiUTZsVMlEmGjOLPWIO/IQlpUvvbPtb
JgZ3CdU3svwJaSVbjVbNlAn9d+uGZLtXQZ+S415zPWXiVKlZxvuNP2D/x+sP
XRfIhHeEgd+6s9/hx4cnZvZLZUJva9CHtCeVMOXD22V9fJrud2/K4dZfKuDO
++9PLdbJhOtmy68BrSqg7Xt5J8NNMnFhTUaLMX98g/XFHdYoAmVi1LvhOXu8
v0Je0YCM0l0y8epat0cBJ7/AiKKx3bP3y4RN2rf3LhnlEPpu9iZxVCYcTmt/
dpCWg6ZwVc7NkzIx7TfnvkYjP8Ocwt19z56TiS6P49xg/ScQBWe3B0fIRGTM
gwd5MWXQreBuoX+kTCS0vtWvRlkKO/LT7LxvycTRgZMMr0EpfM57HzwjViZq
kl7Ymu0rAec8RalTfNP1vv9q45T3ESLfGtvbPW2631P3n/3d5yMYv7UOsU6V
CdNpMZ8mBn6AlW+GVZq+kImD9ikbt9x7Dy9zXZ10OTLR7fPR1FW+xTAwd8GZ
ynyZ6AFbegUPKYKjr/1rC97LxMTfW0S/lryD2pxDLmmfZOK+d+R499wCmJFz
KSKuQiYm3NUtsryTD/ezH2kuVcvE+wALz+7/5UHH7FduIfUyAWs98lbveAub
X5VHbdPKxPrvqkrJxjdQlKXVWyWXix82pY5JG3IBstp4zm0uF483Nljd2/Ia
wl/2jnE1lYs73/sfeBycA7KX0NK+nVysuTg/KDs8Gxa+mL6oTye58AsyMCvE
V5D8fHmChbVc/PvcNlR8ygKb50HtDHvJRWBEUaV3myzYl/nfSkU/ubjvaVr1
75EXUJlxI6l0sFxk9Cz52dH4OUzKeGaZPVwuQlJ3GO06lgG30vPXCQe5GFv9
steePunQOr3q+U0nuZAUn4xOf5kKa9L0fzv7l1xUbrh4V7I9BV6ndgoIniIX
0X1zXhY6JsPQ1EFv/GfIxauUqJHGZklwMmV8f28PuXhk79HO/vszUCd77prh
JRfp/oEPOuQ+BY/kNcVO3nLh8Oag3qS0J/A4ae9Qu3/lYtakiLCgNAFWSecP
Wq+Vi17ecPx+JMK2xJjPphvl4siWtD5G+QlQ+izDQbdVLszGuLuNtYyHsc8+
nqjcKRfO5aeN49Y/hMtP638UBMvFhOOZi6LK7kOzpy3Hpx2Ri3rvROmaxXGw
7En383H/NV1/1BEf94YYyBQj6i+dlYtDW68fib5wD/qLyZNDLsqFZfKd+uTZ
d+EwLrqy7ZpctPwRP7im5x349XhTo2+0XBTEju6+T3Ib3B4fmTk3Ri66NFsW
lJobDTEJV6JdH8lF5uqXMQ9Sb4B5QoKh/RO5cE84FRmRdx384nPm9kmRC3gd
fN9FLxIKHn2Ns3je9H4D/ui9+a+rYP+o0dQwRy6ue8Xv04u8DOcetvNW5MnF
taFzlY+tL4HkYV9RWiwXodnfmgT4RfB6MNoiu0wuuoc+PDp9+gVIvD/TV3xr
eh7+g2ONTcPht/srU2/+bHr+5qo/pzw4D7vjtludrZOLzuGmHdw3noWvsaf8
gjVN6/P6toXj5obCxNjoLH+ZnlhrYhD45+JTEBWTZOPdTE+MrFiSvPbAf2AS
Uxg4w0RPxI7ot80u5zj43qvOc2qrJzY5bMx99XsIZN81HGTXUU9wfjvkruVe
a6v//TP9PvLv0/WQr0efh/x5dD/I90P3i3y/9H2Qvw99X+TvS88D+XnQ80J+
XvQ8kZ8nPW/k503vA/l90PtCfl/0PpHfJ71v5PdN6wF5PdB6QV4vtJ6Q1xOt
N+T1RusReT3SekVer7SekdczrXfk9U77AXk/0H5B3i+0n5D3E+035P1G+xF5
P9J+Rd6vtJ+R9zPtd+T9TvMAeR7QvECeFzRPkOcJzRvkeUPzCHke0bxCnlc0
z5DnGc075HlH8xB5HtK8RJ6XNE+R5ynNW+R5S/MYeR7TvEae1zTPkec5zXvk
eU/nAfJ5QOcF8nlB5wnyeULnDfJ5Q+cR8nlE5xXyeUXnGfJ5Rucd8nlH5yHy
eUjnJfJ5Secp8nlK5y3yeUvnMfJ5TOc18nlN5znyeU7nPfJ5T3oAWQ+QXkDW
C6QnkPUE6Q1kvUF6BFmPkF5B1iukZ5D1DOkdZL1DeghZD5FeQtZLpKeQ9RTp
LWS9RXoMWY+RXkPWa6TnkPUc6T1kvUd6EFkPkl5E1oukJ5H1JOlNZL1JehRZ
j5JeRdarpGeR9SzpXWS9S3oYWQ+TXkbWy6SnkfU06W1kvU16HFmPk15H1uuk
55H1POl9ZL1PfgDZD5BfQPYL5CeQ/QT5DWS/QX4E2Y+QX0H2K+RnkP0M+R1k
v0N+CNkPkV9C9kvkp5D9FPktZL9FfgzZj5FfQ/Zr5OeQ/Rz5PWS/R34Q2Q+S
X0T2i+Qnkf0k+U1kv0l+FNmPkl9F9qvkZ5H9LPldZL9LfhjZD5NfRvbL5KeR
/TT5bWS/TX4c2Y+TX0f26+Tnkf08+X1kv095AHIeQHkBcl5AeQJynkB5A3Le
QHkEch5BeQVyXkF5BnKeQXkHct5BeQhyHkJ5CXJeQnkKcp5CeQty3kJ5DHIe
Q3kNcl5DeQ5ynkN5D3LeQ3kQch5EeRFyXkR5EnKeRHkTct5EeRRyHkV5FXJe
RXkWcp5FeRdy3kV5GHIeRnkZcl5GeRpynkZ5G3LeRnkcch5HeR1yXkd5HnKe
R3kfct5HeSByHkh5IXJeSHkicp5IeSNy3kh5JHIeSXklcl5JeSZynkl5J3Le
SXkoch5KeSlyXkp5KnKeSnkrct5KeSxyHkt5LXJeS3kucp5LeS9y3kt5MHIe
THkxcl5MeTJynkx5M3LeTHk0ch5NeTVyXk15NnKeTXk3ct5NeThyHk55OXJe
Tnk6cp5OeTty3k55PHIeT3k9cl5PeT5ynk95P3LeT30Ach9AfQFyX0B9AnKf
QH0Dct9AfQRyH0F9BXJfQX0Gcp9BfQdy30F9CHIfQn0Jcl9CfQpyn0J9C3Lf
Qn0Mch9DfQ1yX0N9DnKfQ30Pct9DfRByH0R9EXJfRH0Scp9EfRNy30R9FHIf
RX0Vcl9FfRZyn0V9F3LfRX0Ych9GfRlyX0Z9GnKfRn0bct9GfRxyH0d9HXJf
R30ecp9HfR9y30d9IHIfSH0hcl9IfSJyn0h9I3LfSH0kch9JfSVyX0l9JnKf
SX0nct9JfShyH0p9KXJfSn0qcp9KfSty30p9LHIfS30tcl9LfS5yn0t9L3Lf
S30wch9MfTFyX0x9MnKfTH0zct9MfTRyH019NXJfTX02cp9NfTdy3019OHIf
Tn05cl9OfTpyn059O3LfTn08ch9PfT1yX099PnKfT30/ct9PPAAyD0C8ADIv
QDwBMk9AvAEyb0A8AjKPQLwCMq9APAMyz0C8AzLvQDwEMg9BvAQyL0E8BTJP
QbwFMm9BPAYyj0G8BjKvQTwHMs9BvAcy70E8CDIPQrwIMi9CPAkyT0K8CTJv
QjwKMo9CvAoyr0I8CzLPQrwLMu9CPAwyD0O8DDIvQzwNMk9DvA0yb0M8DjKP
Q7wOMq9DPA8yz0O8DzLvQzwQMg9EvBAyL0Q8ETJPRLwRMm9EPBIyj0S8EjKv
RDwTMs9EvBMy70Q8FDIPRbwUMi9FPBUyT0W8FTJvRTwWMo9FvBYyr0U8FzLP
RbwXMu9FPBgyD0a8GDIvRjwZMk9GvBkyb0Y8GjKPRrwaMq9GPBsyz0a8GzLv
Rjwc/n8e7v/xcsi8HPF0yDwd8XbIvB3xeMg8HvF6yLwe8XzIPB/xfsi8H/GA
yDwg8YLIvCDxhMg8IfGGyLwh8YjIPCLxisi8IvGMyDwj8Y7IvCPxkMg8JPGS
yLwk8ZTIPCXxlsi8JfGYyDwm8ZrIvCbxnMg8J/GeyLwn8aDIPCjxosi8KPGk
yDwp8abIvCnxqMg8KvGqyLwq8azIPCvxrsi8K/GwyDws8bLIvCzxtMg8LfG2
yLzt/+Rx/w8hvHWl
                "]], {{{0.21861521800458544`, 0.}, {
                0., -1.}}, {2.9999999999999996`, 0.}}]},
             
             ImageSizeCache->{{103.72325781714848`, 
              122.04785009059457`}, {-116.1167144023234, -44.05109329441822}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.2131568775787764`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.1969472888614314`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.0836304342617655`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.8284613152211242`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.8133050545960163`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.2131568775787764`}, {
               Style["75%", Bold], 2.1969472888614314`}, {
               Style["median", Bold], 2.0836304342617655`}, {
               Style["25%", Bold], 1.8284613152211242`}, {
               Style["min", Bold], 1.8133050545960163`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[1., 0.7215686274509804, 0.2196078431372549], EdgeForm[
         Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
rhpC6j6yzm58MJSMiZllt11DLMoISBt9MxByE3Mu+e7VEMY7bcy9pp+A7KWd
O1z/S0NETpvrW1ceAOmlk10/+WuIpzL3268cjsErH9eX8hANEda/JH5c56OQ
3PP0qNERGoL565PLz44ui/7fr+nrkb+evh/y96Ofh/zz6P0gvx96v8jvl34f
5N+Hfl/k35c+D+TPgz4v5M+LPk/kz5M+b+TPm64H8vWg64V8veh6Il9Put7I
15vuB+T7ge4X5PuF7ifk+4nuN+T7je5H5PuR7lfk+5XuZ+T7me535Pudngfk
54GeF+TnhZ4n5OeJnjfk542eR+TnkZ5X5OeVnmfk55med+TnneYB8jygeYE8
L2ieIM8TmjfI84bmEfI8onmFPK9oniHPM5p3yPOO5iHyPKR5iTwvaZ4iz1Oa
t8jzluYx8jymeY08r2meI89zmvfI857OA+TzgM4L5POCzhPk84TOG+Tzhs4j
5POIzivk84rOM+TzjM475POOzkPk85DOS+Tzks5T5POUzlvk85bOY+TzmM5r
5POaznPk85zOe+TznvYB5H2A9gXkfYH2CeR9gvYN5H2D9hHkfYT2FeR9hfYZ
5H2G9h3kfYf2IeR9iPYl5H2J9inkfYr2LeR9i/Yx5H2M9jXkfY32OeR9jvY9
5H2P9kHkfZD2ReR9kfZJ5H2S9k3kfZP2UeR9lPZV5H2V9lnkfZb2XeR9l/Zh
5H2Y9mXkfZn2aeR9mvZt5H2b9nHkfZz2deR9nfZ55H2e9n3kfZ/yAHIeoLyA
nBcoTyDnCcobyHmD8ghyHqG8gpxXKM8g5xnKO8h5h/IQch6ivISclyhPIecp
ylvIeYvyGHIeo7yGnNcozyHnOcp7yHmP8iByHqS8iJwXKU8i50nKm8h5k/Io
ch6lvIqcVynPIudZyrvIeZfyMHIepryMnJcpTyPnacrbyHmb8jhyHqe8jpzX
Kc8j53nK+8h5n3gAMg8gXoDMC4gnIPME4g3IvIF4BDKPIF6BzCuIZyDzDOId
yLyDeAgyDyFegsxLiKcg8xTiLci8hXgMMo8hXoPMa4jnIPMc4j3IvId4EDIP
Il6EzIuIJyHzJOJNyLyJeBQyjyJehcyriGch8yziXci8i3gYMg8jXobMy4in
IfM04m3IvI14HDKPI16HzOuI5yHzPOJ9yLyPeCAyDyReiMwLiSci80Tijci8
kXgkMo8kXonMK4lnIvNM4p3IvJN4KDIPJV6KzEuJpyLzVOKtyLyVeCwyjyVe
i8xrieci81zivci8l3gwMg8mXozMi4knI/Nk4s3IvJl4NDKPJl6NzKuJZyPz
bOLdyLybeDgyDydejszLiacj83Ti7ci8nXg8Mo8nXo/M64nnI/N84v3IvJ/6
AOQ+gPoC5L6A+gTkPoH6BuS+gfoI5D6C+grkvoL6DOQ+g/oO5L6D+hDkPoT6
EuS+hPoU5D6F+hbkvoX6GOQ+hvoa5L6G+hzkPof6HuS+h/og5D6I+iLkvoj6
JOQ+ifom5L6J+ijkPor6KuS+ivos5D6L+i7kvov6MOQ+jPoy5L6M+jTkPo36
NuS+jfo45D6O+jrkvo76POQ+j/o+5L6P+kDkPpD6QuS+kPpE5D6R+kbkvpH6
SOQ+kvpK5L6S+kzkPpP6TuS+k/pQ5D6U+lLkvpT6VOQ+lfpW5L6V+ljkPpb6
WuS+lvpc5D6X+l7kvpf6YOQ+mPpi5L6Y+mTkPpn6ZuS+mfpo5D6a+mrkvpr6
bOQ+m/pu5L6b+nDkPpz6cuS+nPp05D6d+nbkvp36eOQ+nvp65L6e+nzkPp/6
fuS+n3wAZB+AfAFkX4B8AmSfgHwDZN+AfARkH4F8BWRfgXwGZJ+BfAdk34F8
CGQfgnwJZF+CfApkn4J8C2TfgnwMZB+DfA1kX4N8DmSfg3wPZN+DfBBkH4R8
EWRfhHwSZJ+EfBNk34R8FGQfhXwVZF+FfBZkn4V8F2TfhXwYZB+GfBlkX4Z8
GmSfhnwbZN+GfBxkH4d8HWRfh3weZJ+HfB9k34d8IGQfiHwhZF+IfCJkn4h8
I2TfiHwkZB+JfCVkX4l8JmSfiXwnZN+JfChkH4p8KWRfinwqZJ+KfCtk34p8
LPz/Ptb/87WQfS3yuZB9LvK9kH0v8sGQfTDyxZB9MfLJkH0y8s2QfTPy0ZB9
NPLVkH018tmQfTby3ZB9N/LhkH048uWQfTny6ZB9OvLtkH078vGQfTzy9ZB9
PfL5kH0+8v2QfT/yAZF9QPIFkX1B8gmRfULyDZF9Q/IRkX1E8hWRfUXyGZF9
RvIdkX1H8iGRfUjyJZF9SfIpkX1K8i2RfUvyMZF9TPI1kX1N8jmRfU7yPZF9
T/JBkX1Q8kWRfVHySZF9UvJNkX1T8lGRfVTyVZF9VfJZkX1W8l2Rfdf/6cP+
H/nbFVs=
                "]], {{{0.30630801556153464`, 0.}, {0., -1.}}, {
                3.999999999999999, 0.}}]},
             
             ImageSizeCache->{{113.1915525481904, 
              128.1368041239678}, {-125.92964676435186`, \
-25.430893136219527`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.305880646700497`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.194227423645597`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.074434581921935`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.6555412926209723`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.592685441978647`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.305880646700497}, {
               Style["75%", Bold], 2.194227423645597}, {
               Style["median", Bold], 2.074434581921935}, {
               Style["25%", Bold], 1.6555412926209723`}, {
               Style["min", Bold], 1.592685441978647}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[1., 0.7215686274509804, 0.2196078431372549], EdgeForm[
         Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
FnPLqtgy9+TSSwl2slm1IS9/VFDRe2y7Bxfj7OQoW4/FU6uoGOVx697FSDu5
wVDH6YODik7Tlq9MC7eTFwt1lwJrqnioSpPxe8zX+/P1+8DntVV0tNgycOZg
O9n4wQ2L4fVV7Fnj9+HmHnZyePbx/XcbqDhuueWAy452cm16dI++TVS8ra96
QOht5fnkBe+ymqsYOrryrh0PbWXh3rEru7qq2DG155kHx2ylc3SPpudbq1gr
7YN1SYStHLK6eXaHdiq+rTnOzWqErVwZVnHyib9U7PafcZO15rYyLbjIrqWn
ipW6blr667eN/Bz4+MhBqeJix9KcTxdsZF0/6OPcTUXteHtRsNJGDvTd9yW2
p4ojl7d1t+5jI5d5rtpQvZeK246eju1Z3kaecpvqtrmvigOyN75Iv15GfnAe
dKfcQBWdh66/Pm9lGVmrWoeQlUNUnG/RLCaycxnZ17Z2Fd1w8+/Pt3lR2bwf
FxnUlLCRKtb38w5xOGItjxfmD/4zRsVn3/ZPPzbKWr59fa0oJFDFpn9im5SW
tZbVHyRvLRivYnCH+VrZNCvpmx3VfuIk8/1eMXOuIchKLkif9zDvXxWtc95Y
fCxnJZOSx8wdNd18PeeTrQpSLOWrvd1qPpypYm7jglQnf0tZNbrp2YFzVLTQ
P6560GAhe6wuP/LGfBX/iu2TtWOXhZwT9kPfM9x8fx5vdKghLeTh4IexF5eY
X1f4fKXzC518Fpju5blCxQ9LMiq7h+lkRb89L1JXqVhv2vblFWrqZBffiEWt
16k4b/DNwh8nNTnLc0r9o5Eqfu8W3F8doMkDbgMuNt6iYtZlq1N+n1T52Lld
4J5oFfVHVrautlyVZavVsqi9U8Xm1mtxTB1Vetkq+6PjVEyPvtJyQKpZDxre
dK+8x3x/PpTa2vVX5N7Cq/lr96tovFWx7PA7JpH7OjHCOkFFj5lbs/drJlHm
weYmS46oeDj3ygnhbhQe2XOu6pNUvOYSuGv0eIP4N33UpNknVGzYPu9Wp+16
sTu5i933UyouCO3nVOVGqcjZ2/jIlDQVTx81FVTXSoVFdNk+79JVfFncOn9p
hxLRfvW3grEXVDwz6qQhIrhY/BOWu/5phoq31m7u7Xfoj4gJPuvql6WiyCj6
XT//t7gZuPv2nWsqnp/s6ujQ4LdQ/JZP731LRf/6Fc6MCfol2vhOqnwlR8Vh
p2fvbnKgSIz37Heic66KK+J6Ttj2+afY5uY++Nwj8/OusHHYPfefItu5RlG7
ZyrOne802RT+QxgcjFHHXprXR8KIvzxufheutq/btXhjfj83n9I9db+LAMOV
B/HvzPerm2HJkJnfxJbCI3Pqf1Ixw71mx8nXC0Xm6401Yr6Yry/tQfWSxoWi
ODc0zeG7+fOuh0S7lP8qmmePGLGxSMVBe3/bJ94tEKPTpd6uWMV/S4tDInd/
FpHJDWNX6M37vdqjV19nfhKX9tp6qYqGnasV2bzu/1EUbf36fL5Ow5TPy+os
cP8gmqy+F/7LSsOdvguLs+q+F/5hZ+pNt9WwVo9hf92t/E6sDY678Kmcht/2
TBu7u1y+gMClAeMrafg2OEffquJb8W3oRN2rqhoOOdL+0vKab0QD3z77RlTX
0MGUD1EtXouhnq2759bS8GvE4HnDeuSJVW7V8vvX1XDCMfd6Fya8Emed9Suu
OWk4cvv1ZIh8Kb44vGrco5GG0w+vHLhkyQtRzzYzC5tq2P73ksAx35+JgYZD
/3R00dBzpPPWt8FPxfLCDban3DRc5DWq+LnhsUh9PfOwm7uGlrE3LCttfyQ+
5g7vfbi9htUeFBZ36vJQOGZ7FTTsqKHi+LRtveJc0Tfdef1uLw2/PKqzdWb6
fbE4uYxrrS4avk+bdaNw/T2RsrfgVlR3DZ06Gc95/3tX5G/NCa7oo+GZHbuy
XYbliOqrUyut6a3h2ITAtv363RG9wmKOW/bXMMFh0QT/gbdFWPDiQYsGadg2
6OiaXxduiuTA8T9Lhpqvd3NI8emi6yJvaK+oWf4a1lwRsbmfuCaq+rq1Kxyl
odvuS8//xF4VPT3tH0waq2Hz4W2vNa2UJea5lcx+G6ThSafsSc22ZYojzi+q
/z1Rw0tV0jO6tb4snjtknHk8WcN6E9fmZj+/JCrZJvgPmabhwW9bj1SIvSi6
GtaV3grRsOc0+ysTplwQoYUhMb6hGp71NM5u2hvFwdd+npfnari55okZ/rPP
i8e5nZ6LMA0rT25q2jnznCiXXT88bZGGL5vmluSsTxMi3ape22Uaeo2wyMWM
0yIk+RMmRWhYmJQW5mKfKvbtvT222RoNz72Kz3y38KR4sPWktn+9hhGnpmRf
VlKEzeode+tu0nC55cUO+7cfF53CwrvtiNKwQ/TVmMnex8TU4KC3VbdrWGLd
KNqqbLLYHeizYkOMhok/Imo+zDwq7g5t2dh2t/l6vpgt787DwtK3Stayvebn
d2L3KLfNCaKD55+JpngNw8t7un88ckBMcntmM++QhmuXFnfYlL9fxDhfPPTz
qIZd7/fJ+sdrn7jlcKDXtGMaxgTNDb10fI/QbNd+/pBiXi/0x90QvC7o9P9/
TT8P/PP0fsDvR58H/Hn0fYC/D31f4O9L1wN8PXS9wNdL9wP4ftD9Ar5fdD+B
7yfdb+D7Tc8D+HnQ8wJ+XvQ8gZ8nPW/g503rAXg90HoBXi+0noDXE6034PVG
6xF4PdJ6BV6vtJ6B1zOtd+D1TvsBeD/QfgHeL7SfgPcT7Tfg/Ub7EXg/0n4F
3q+0n4H3M+134P1O5wHweUDnBfB5QecJ8HlC5w3weUPnEfB5ROcV8HlF5xnw
eUbnHfB5R+ch8HlI5yXweUnnKfB5Suct8HlL5zHweUznNfB5Tec58HlO5z3w
eU/zAHge0LwAnhc0T4DnCc0b4HlD8wh4HtG8Ap5XNM+A5xnNO+B5R/MQeB7S
vASelzRPgecpzVvgeUvzGHge07wGntc0z4HnOc174HlPegBYD5BeANYLpCeA
9QTpDWC9QXoEWI+QXgHWK6RngPUM6R1gvUN6CFgPkV4C1kukp4D1FOktYL1F
egxYj5FeA9ZrpOeA9RzpPWS9R3oQWQ+SXkTWi6QnkfUk6U1kvUl6FFmPkl5F
1qukZ5H1LOldZL1LehhZD5NeRtbLpKeR9TTpbWS9TXocWY+TXkfW66TnkfU8
6X1kvU9+ANkPkF9A9gvkJ5D9BPkNZL9BfgTZj5BfQfYr5GeQ/Qz5HWS/Q34I
2Q+RX0L2S+SnkP0U+S1kv0V+DNmPkV9D9mvk55D9HPk9ZL9HfhDZD5JfRPaL
5CeR/ST5TWS/SX4U2Y+SX0X2q+Rnkf0s+V1kv0t+GNkPk19G9svkp5H9NPlt
ZL9NfhzZj5NfR/br5OeR/Tz5fWS/T3kAch5AeQFyXkB5AnKeQHkDct5AeQRy
HkF5BXJeQXkGcp5BeQdy3kF5CHIeQnkJcl5CeQpynkJ5C3LeQnkMch5DeQ1y
XkN5DnKeQ3kPct5DeRByHkR5EXJeRHkScp5EeRNy3kR5FHIeRXkVcl5FeRZy
nkV5F3LeRXkYch5GeRlyXkZ5GnKeRnkbct5GeRxyHkd5HXJeR3kecp5HeR9y
3kd5IHIeSHkhcl5IeSJynkh5I3LeSHkkch5JeSVyXkl5JnKeSXknct5JeShy
Hkp5KXJeSnkqcp5KeSty3kp5LHIeS3ktcl5LeS5ynkt5L3LeS3kwch5MeTFy
Xkx5MnKeTHkzct5MeTRyHk15NXJeTXk2cp5NeTdy3k15OHIeTnk5cl5OeTpy
nk55O3LeTnk8ch5PeT1yXk95PnKeT3k/ct5PfQByH0B9AXJfQH0Ccp9AfQNy
30B9BHIfQX0Fcl9BfQZyn0F9B3LfQX0Ich9CfQlyX0J9CnKfQn0Lct9CfQxy
H0N9DXJfQ30Ocp9DfQ9y30N9EHIfRH0R/m9f9D99EnKfRH0Tct9EfRRyH0V9
FXJfRX0Wcp9FfRdy30V9GHIfRn0Zcl9GfRpyn0Z9G3LfRn0cch9HfR1yX0d9
HnKfR30fct9HfSByH0h9IXJfSH0icp9IfSNy30h9JHIfSX0lcl9JfSZyn0l9
J3LfSX0och9KfSlyX0p9KnKfSn0rct9KfSxyH0t9LXJfS30ucp9LfS9y30t9
MHIfTH0xcl9MfTJyn0x9M3LfTH00ch9NfTVyX019NnKfTX03cN9NfThwH059
OXBfTn06cJ9OfTtw3059PHAfT309cF9PfT5wn099P3DfTzwAMA9AvAAwL0A8
ATBPQLwBMG9APAIwj0C8AjCvQDwDMM9AvAMw70A8BDAPQbwEMC9BPAUwT0G8
BTBvQTwGMI9BvAYwr0E8BzDPQbwHMO9BPAgwD0K8CDAvQjwJME9CvAkwb0I8
CjCPQrwKMK9CPAswz0K8CzDvQjwMMA9DvAwwL0M8DTBPQ7wNMG9DPA4wj0O8
DjCvQzwPMM9DvA8w70M8EDAPRLwQMC9EPBEwT0S8ETBvRDwSMI9EvBIwr0Q8
EzDPRLwTMO9EPBQwD0W8FDAvRTwVME9FvBUwb0U8FjCPRbwWMK9FPBcwz0W8
FzDvRTwYMA9GvBgwL0Y8GTBPRrwZMG9GPBowj0a8GjCvRjwbMM9GvBsw70Y8
HDAPR7wcMC9HPB0wT0e8HTBvRzweMI9HvB4wr0c8HzDPR7wfMO9HPCAwD0i8
IDAvSDwhME9IvCEwb0g8IjCPSLwiMK9IPCMwz0i8IzDvSDwkMA9JvCQwL0k8
JTBPSbwlMG9JPCYwj0m8JjCvSTwnMM9JvCcw70k8KDAPSrwoMC9KPCkwT0q8
KTBvSjwqMI9KvCowr0o8KzDPSrwrMO9KPCwwD/t/edn/AoV32IE=
                "]], {{{
                0.12023494061207807`, 0.}, {0., -1.}}, {5., 0.}}]},
             
             ImageSizeCache->{{116.12974787918674`, 
              140.75585755738663`}, {-108.77105703790373`, \
-55.606002601745956`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.180383931614858`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.1423417521843384`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.064223352839588`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.9453756474953219`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.910224699073426`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.180383931614858}, {
               Style["75%", Bold], 2.1423417521843384`}, {
               Style["median", Bold], 2.064223352839588}, {
               Style["25%", Bold], 1.9453756474953219`}, {
               Style["min", Bold], 1.910224699073426}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9490196078431372, 0.8627450980392157, 0.43529411764705883`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndczm3496trZKUSEaIkZGWP0CEzK8nOiCQ7lJWdLaMUUkoSGRmRCOk4
G8qIhtBNKglJ47rau6fn9RzH88fvd/9x369ed+O6vtd5HsdnvA3tN9usVlNR
Ucls/tf//S//s7ajh0wzqRC144/rnjU9Dn/NfP461BZiBx+jL25qJ2H98sD3
z/sU4RmzjJDRSncodLv5UGthESb6jrM7UX8aNt14cMHxaBGam+kvHWbsAcWv
n7pGhRdhdO3glNoIT9hSiMva5RahxxDr2mf550Cp+dpirVYx1nxc5tajnzc4
D00xjjYvxqk6zqO37zsP5QsyWrbfVIwnb5XK87MvwPbdOUXrLjd/veth+XUb
H6gMyE/FN8W4b6v1nDefLsGuGEVEh+piNFDM/eywzg9q8qp9N/Qqwbtli7/t
0vCH3S1U98fMK0Gd3DKfqpgAqO/X0r7j4RL0VgvaEXcsEPbN1p6y6WEJVtuF
jfty7yo0Ouv1jcsuwf6txky0vBoE499pHW+jrkCjA8fuuvpdA5Xv7V1HdlOg
eWnxCgv/YIgt7rTBfrgCd5fuTt164zocUtFfdmamAsuUvZ2eRNyACe0MZ0eu
UmDNgs+Wb5JCQNrT2OLnbgVm3jTwXFhwE+KHmwxt66XAgMsR/aRtb8ORqQOM
R99W4KyqUs91I+/AlMWDOzoIBc7J8F1q4BgK8g3DW3p8UeA6nYg5933vQsLe
0XXPihX4bF1KK8/Ue3Di7LiiPJkS0xoOO0/VeACWVy2yNfWV2HfpyF3GvcKg
5aPJqWbDlCj+TQptnRgGb+Omxa2eocSvlRmfVdY9BPdPsyI87ZVY1cOodXTr
RzDjz5ybL1yV6NSvxLHi/iNoUzPf97enEs1cT79baBMOSa1sT2nfUqK3Vt/Z
FyrC4UzX5fvGohKXelqGL7v0GKwG2m9e81mJeosss1aYRUDb8Y4rvYqU+MTo
cN853yIgec76uS+lpfj2x1nPH7ufgOcqp8n5XUpxqsfHw9GdnoL1dueROkNL
cdhDdbOgx09B+/gOE/Pppdjmc/oVC6tISLu0u8u6laUY4XH7mu2vSPC6s1/j
/K5SXDDWPfSO6zOYG3WoKdqjFBed8bWvbvUc2n84pvwbUoofrU32SX2fQ3q2
+8/20aXo2X7QQj+jF3BBefYTfCrF6XFjQs/deQELJN6J6wtLcUmbq1mPB0SB
bgefZxckZTj1yZ70/LtR8KXX5VDRuQy3zbvkqt7nJVwaFRjwb3AZBl9sbVF9
5SUsmh7soTutDPVy8ibc1o4GvaU33SxWlGHczswR7Q5Gw9dNoS4bd5bhoeQN
Xj0LosHvwIPVPmebf5/H8C85sxGWnAtfGHujDNMe/V076yFC1+Cn04qiyjC8
bWSEmbqAzMcvxnRKL8MWQQ4lj4cKCEjAARP/leGS1p2fGywXsDwjrruTWjlq
rjkw4PQxAd0KErV99crxs1xF0uKegOy6d5L4QeU4+v3a7TdTBVzVSKkonlqO
D7Y26h8sF7Cie/ofPbtyVNlxP/l2hxgwHJzx36Qd5RgcK9lqPjwGcidkvtt8
phyzzp3+tHhuDFybl/PS73o5Tuk9/mCXLTHg4Jj34NWLcoQT4UuvnYqBnrvy
gxRp5ahh4OTWJiQG8k4WencpKMem2IHV+zEGQi4rjk5RrcCU3nm79TJiwPFe
+c6tnSrwY4rbRDVFDPTC6nX+phVYLVPvY6ceC/kp9UsSp1Rg5N/Cmwu6xcKt
XBWr0mUVOEDp1FdreCysLZeO199egVFPwsrDZ8RCX3nLIZanK3CVlZbxBvtY
KOio0dMluAJb26VV2LnGQqiJtu6V5xXo6JQbjZ6xsHFMhxZvUivQMHWM0cNb
sdB/ll5tWX4F5s6LXbYqJhaKlusXdlOpRN24CxbSb7Fwf4th1rSOlagwi3wX
WxELToeMU7YNrMStMGh8snYcmJ43iQ2cXInRcU7Tl5jGgeLGgMdvl1ai879Z
Bn5WcRD2dHBIhUslruz4N0RsjoOtb4ZfMjhViX/l+y7JvONgyLfR7jOuVeLY
q5vvBEXGQWnhuL07nlXimSCvR8k5cRDeaOEUlFKJfjND3ya1jodtWlNWJP2p
RNmkiVszRsfDsB7TbaoaK3GLS3zIsA3xUDHUalIP3SocqftT1utqPDyZbDNi
1oAqrE9d9rksIx52LFzQZ9ekKhzn2FMvv8MrGLnOtnPwkipc7Kt6ZvbCV1C9
e3mbD85VeONZ+R3XgFcQedq+sfpkFY5OlqS+yH8FrlccFUZBVSi9GFvqMDoB
zMLW51pFVqFE06D8g0cC1MY4pbsmV2H2fPepCwoT4MVH54Trv6tQNWTqXZvZ
ibD3147I5IYqDD8UcdboWSKMrdp9p7Z9NXaae9LKuO9raGhxwN+4fzXGrLj/
5dm11xDd+fBZ64nVaLBBYTjB6A3s73/84B7bamz1qvxQ97tvAMxPOYdsrW5+
fpVNEePegoq1h0PqiWq0rs0NXJnxFsRK7wX1gdXokvZ27eG978DNxcey99Nq
3Kxw3+XaNwkmHL1sZvOhGvVG+Y8NzE0CiU9g/32/qrGw+5GBs268h7hbwd1u
1VfjdJ2uphnOH+DI85taH3Vq8L+oDeHeM5JhclKoWmPfGizW7bXsZ8cUkGU9
KO8zoQa9r04+numRAgkl4b/nLq7BQ+URLp80UuG4amTG/i01OCX73dWCc6kw
VSfq7e3jNbjGHBKHdU2DFsYiKv1KDZ5p+8X99d00eDMi/n5TRA1u37Nn4JOJ
H+Gk5eurfd/X4De/NTNb/vgI022TvObn1eCmyd+TXx9Jh9YbU44crKvBaWdS
BlUN/ATv9qXvCG1Xi6s8J8w6m/0JTntkrP1sUovaM7blHL34GWYFZdqqWtSi
r5d5woe5X0AjPGdm/0W1+O6MW+PcjhnwIT7PfOHmWnytddK7NicDPD7nDzp0
rBaLV/w4ERT2H8zOL+xxL6AWsz7kpBke+wpatYr2GY9rcV1Bx4VWK79BausK
uSSpFnMmm+2psMiEc/o11QN+1mLExenHvvX+DjamDQWLamvxl35IaGy7LNCx
UP1+WLsOUf7KwVEtG9JtZMn3+9ThrC9fvfZWZsN5h5Yx/0EdPnup/Gm7Mwfm
79AIly6sw5oj82KXV+SA7gntG6ZOddje1wr0t/+Az74dfGyP1mGfwFM71lT+
AJ9QvZNH/evQriLKqY1rLix6qb8nLLwOu441Vvtanwudkg03fXtbh4b5fTQv
u/2E/3KM7eS5dejdbf+rTup54FdqMmdwTfPP/147rOuZPLCVDpy4VKsejce4
F23U+QVddIcMP967HvflmQSm+v6CzN4jej8yr0f0t8/SMvgN/qPN9L7Pr8e3
Y1SVxTd+w7IZ5q1bbKrHphmRqYP7/YFuyyY0DDlSj7WSxXqBD/5AltOUkmWX
67GbVbCoH5IPgQen/zjxqB6PH4iVakXkwwovq4/hb+oxVKON7dXhf8Hgus2r
rJx6/LDQN2T747/wI2LB05bV9djPv3vjosEFcC3R9vYwzQZsb9Epo/3dArD/
b/llu14N6P5QMml7z39g9M/+jPu4BjS4c7KLpd8/yKt3PBAxrwG9w8yHLNMo
hBttN2zN2dCA/Td+O3RsXyGsNti8qvXhBozwf7r4UkEh9BriMn+EXwMabbfb
u25eEfyZuHPqyocNeL9jd6uPz4vg5vw9o0+/bsC9KQ7Kh/rFsHbNgX5Psxsw
3DF7dd7eYjBxPayfW9mA+hsnBM/MKIa/7sc1Ndo2om7KlbBk0xK4439KdZRx
I8p7TIicf7gENtz3KLMf24ghme06vU0rgX7C+9eZuY3o8XPwUw1NBRSm+nyJ
XN+I62sCUgOGKODez8tvfro1YmetVlWa8xSwqSLwRVvfRhz2SL5xhYsCBqpf
vzc6rBGLfs3VP+OpgJJOtwIdEhvRYqRbwIVQBTzoe/ecR1YjLnTLMNgTr4At
Y8MOP69oxB5RfjvHf1PAYKvH23+1acLhlj7yghIFKO0i12j1bEId+97R+9SU
8Ghr1OIxY5rQwPuSpkRHCS6HxQxHmybc07Pdj0OGShh6IX7cuXVN+O6N2kH1
gUooD3ltGnWwCeeW9vTyH6WEiMgkwz8+Tai72UQ220IJO96m6LR70ISDHPUa
+lsqYURmumxcQhOWZLnFTJ6lhKqijKo135twwdm9t29bKyGyKfOvV3kTVpfc
ka+3UULUCUVRlkxFBOgOe3+p+Wv/c6WO27RVxKjsQXunzVHCPr/y7Jb6KiKo
3ZvbHlZKWBZcuSiwj4rYfaLPxQPTlWB+tzp12DAV4Tp5eLeBk5XQLaJ2evMU
Fj9lK9zDzJXQ+LI+zm6GipDvkG7vOlIJWQmNYysWqIjzqy6EHW9+f5is8sTd
XkU4uUUMaGGshMAMNVMDJxXxtMvyH+GdlXDwh/RWhKuKcLs7PPSqphJWFMgN
ZxxVEeqXR43NkyhhfFkLvxxPFTHN/XODd5UCDOpb6ezwVxFXnENq4gsUoCrT
ON36loqwm/0x5tR3BfzQ0JQFhauIZrFgW5+sgFhd7f0jUEXMm+Ji1DdWAde6
61S9e6si4h77xPd+rIBDfTpsWfm5+fV2W6mnHqIA+8Ed/1b+UBGpyeO6/+ej
gIlmevani1SEbXl03r2TCug5scs3wxoV0WLKst3n9yhAOlN/3lOpqvh7MTnP
b5MC8uZ1fz9TS1U4WEq0P9gpIH6Z4ZTcLqrCeWvcm9E2CrjuaIQ7e6uKkLqO
D/InKeDoZuNRGkNVRctV9qZ5IxXguKv3w2vmqsKrndmhYf0UMMXNpO+o6ari
w2X5jZxuCujl3i/4/XxVMWG2zeLidgqQew/oumqlqvjVLqmnvboCfl82vVC9
UVUM8vpyY391CSReH9z27C5VsW6bjULzZwncujf0uNERVZF/3qHI9UMJnHgy
XOWZh6rYGdO+ZdTzEliLI12tLquKaZfLV3+8WQKWr0eX/gxp/vlTG4qfXyiB
PqljNrg+UhWtrIeu3XCkBFp+HZfXNlpVtH7y5uQ3lxIoyIVl19+oilhtX20V
hxJ4+8/i8+hPqkKu9Ml6N6/5fpdPnJ2coyrs5hq0GjSlBNwbJr92KFQVKs6o
1nVUCayXW1rUVqkK+wRxc1/fEpihOf25h0RN9Dg4erWFfgn07zRzqLGmmqgq
WWpto1UCbQyt7j7vrCYmdFrY009SAoUm1sbWvdRET9vv81WriiFpiM2VX4PV
xM6lGbe3FBTDvTHzOu4ZpyYWur2e+eF7MZyZtMBTa5qasNHtbamSWgxOsxa1
DJmnJhKqvcv/xRWD1QLbQ2NWqAk36xc6O54Uw0C7pXUpG9TEIsnxv4duFUPb
tcu3Oe5s/v7wS/MqfYuhZMuKorpDaqLvRM3f4e7FkOxq73jurJp46XW1+sru
Ygg75JDdy09NDD7QIdFvXTF4nnJcFHWj+f9HmB1yX1gMW86vTZ3zUE1cKVrq
OGdSMVgHrJ/+J0pNdB28PiXNtBgGh2yM2/taTbwzSrcp1SsG7QdOY9ulq4lx
7tZvvdWKofTploib2Wri9IsLzpf/FkGacB447p+aOKA5qK7oQxE8erPtZlql
mshLOeW/5VEReKXtMFirJhFzomcOaHm+CFy+7fJt0JCIq9hi1BWXIpibt7ud
t55EBI/Zqd1xThEMK9p7qo+xRPTYY1iypH8RtK/cL40eJBGGmX6N82VFUN54
cN/csRLxYrnFvpJvhZCufrgyf6pEDF1/MEUnrBAitI5u3j9XIqbeP3HlgVsh
XNQ7nq9jJxEHstb+CbMuhB09Tq68vV4i8j5v6KauXwgL+p36ar5DIlTu+E4M
/v0PRgw7MzfdTSJ0Zwxp2HnvH+iO80had0Yi6nqUhrlu/QdVk89NbrokEaek
//yvDPkHX6y8o89fl4j7iU9KshQFELnwwsi+YRKxenN89rDm/XhphU8YvpAI
z/H7YvwdCmDXOl+T+YnN7/9efZcOnQtgsfPlawVpEnHzRPuoK0l/YfSegC4H
sySir8+CV2P3/gW9I4HnOxRIRJDLd1He5y/Ung7SCK2QCOtgz9sf0vLh64Xg
Y+NVpSKp4FpFums+PL9yo+lTG6moHtw2oH23fLh88+auDZ2kYlPIp64B+Af2
hN1WqvSUijum33ccXP4HljwLXX/RVCpiA/sP/Fj7G8bG3vvZb4xUdB2zD+6e
/w1d3z1YGjNFKl7q13Qw7v8b6j8+/LTARipqTuvvXRzzC75nhlsVLpOKxkkv
TqyZ9wte/opIdFsnFXtmWSmcfuVBQPHT8R23S0X8zHIr7215sL/q2bO7B6Vi
xpkJ+6tV82C5StSQCaelwmdeYrv4Mz/BvGV06BcfqfjRJt6oe6ef0L2d6Lkp
WCp6L057PiQoF5o6xwaoPZCKwxs1/E1MciHbKF730nOpeF6Z+N007AeI/gke
AxKkYlb6eV/nET/g6vDXLeJSpaKntrFj96gcOGj+1m3R9+bn9bHeZLVFDqyc
mlRblC8VCTJh9/t0NlhYf3A5XC4Vy7fnrVZczALDxSmFnVRkYtGjzsFTgr6D
mn3a6vutZUJobw6efDcTctenZ03sKBNjOmcOnBX5DeJcPi/8r4dMNMk9lj99
9RWC92akOA2Uia3zlwzNSv8PDh/9Ok1qJhO2vaUBer8zwOFsZqzvZJlwliR0
xpovMMkna4zpHJmY++rcCkOtL9Dzas7j+KUysWfFZVVPk88gu507wHatTNx8
sxUXTPkEvx7mhZS4yMQAf7ucl47p8Or57+5HD8hE775lLq1PfYSQuPxLnU/J
hNHTNaf2h6fBsaQC7bCLMpH7ZGqFTU4qOH4qdJ98TSaG9O9agNrNfiKrWPLt
nkws7/oov2pqCvT+o9i75ZlMjM3ttXK2PBnUFaUVslcykfnisX7ZsfeQX13u
dDlFJiINkof2aJcEr1Wr/gzKlAmHmRO/6956C7da1axI+CMT6Oxs22raGzip
U/ffkjKZeB2v42ZYkQjrujbYKBtloqt/TfuDdxNgmnHTu2Ot5OLFcYlk7OZX
0Heg6uSuunJx+KHR75Xj4qHVSEn0Q0O56CYx6VeuGwcFIBs5dYBcpD6bfqS0
LgbeWaqHZY6Si+BW2+1mFwoIndPSxHmSXBT3GrngXzLCKdvW19St5cKjdpqZ
9/eXsHGVRpeAJXKx/tGEZGvVKJi5UfP8kDVyYe44zT7V7Dn0366t8dpZLhyu
ju7x5GQkaOzXObZsv1x4FXXsdqHoCRQd69BUelIutEyHTa1dHQHvPTruOnFB
LnZrlGxbWxoO9y/pKfWD5OJswqC1tl6P4GxQl/Xhd+XiaL8XSRMnPwSnO/o/
LSPl4qBj4AivVmEwO7z70qw4uTh2x/LL/Lh7YBpl+MklWS5OfNGP+eMdCpqv
jKxafpML8M7aG3L0NijeGyde+S0XvYzGO030uQkpn3uPH1YqF4aLu/kcS7wB
Ydkmz940yMUSbaPE7h2uw7n8fkPsWqqL41vduybsvwZblQNCy9uri03BVtuH
SoJgTq1pT3cDdfG+fNFZywmBMEQyJKB7f3WxtW3xlYf3/aFdm2G6ESPVhUv3
Y9b9p/lBafsRHtMnqovuxo7vZ2pego/6o1rkWDX/fPj85SGNFyC8l5nbdlt1
EdovsGP7DufhvOnY2laO6sKn/d7a8dZesG2UucvVreqihXb5cNX7njDPYnzh
8H3qIjEq8P2ORWdh+PQJq9+daP57S1zj0s6dgg5zJ2WtOK8uvC58DR4sPQkV
S6YsrAxUFysaFy77EnoMPjtYppwKVRecZz/ZNH2a4dP//TV9P/L30+9D/n30
95D/Hr0e5NdDrxf59dL7QX4/9H6R3y89D+TnQc8L+XnR80R+nvS8kZ83fR7I
nwd9XsifF32eyJ8nfd7InzedB+TzQOcF+bzQeUI+T3TekM8bnUfk80jnFfm8
0nlGPs903pHPO90H5PtA9wX5vtB9Qr5PdN+Q7xvdR+T7SPcV+b7SfUa+z3Tf
ke87zQPkeUDzAnle0DxBnic0b5DnDc0j5HlE8wp5XtE8Q55nNO+Q5x3NQ+R5
SPMSeV7SPEWepzRvkectzWPkeUzzGnle0zxHnuc075HnPe0D5H1A+wJ5X9A+
Qd4ntG+Q9w3tI+R9RPsKeV/RPkPeZ7TvkPcd7UPkfUj7Enlf0j5F3qe0b5H3
Le1j5H1M+xp5X9M+R97ntO+R9z3pAWQ9QHoBWS+QnkDWE6Q3kPUG6RFkPUJ6
BVmvkJ5B1jOkd5D1DukhZD1EeglZL5GeQtZTpLeQ9RbpMWQ9RnoNWa+RnkPW
c6T3kPUe6UFkPUh6EVkvkp5E1pOkN5H1JulRZD1KehVZr5KeRdazpHeR9S7p
YWQ9THoZWS+TnkbW06S3kfU26XFkPU56HVmvk55H1vOk95H1PvkBZD9AfgHZ
L5CfQPYT5DeQ/Qb5EWQ/Qn4F2a+Qn0H2M+R3kP0O+SFkP0R+CdkvkZ9C9lPk
t5D9FvkxZD9Gfg3Zr5GfQ/Zz5PeQ/R75Qfz/fvD/+UVkv0h+EtlPkt9E9pvk
R5H9KPlVZL9KfhbZz5LfRfa75IeR/TD5ZWS/TH4a2U+T30b22+THkf04+XVk
v05+HtnPk99H9vuUByDnAZQXIOcFlCcg5wmUNyDnDZRHIOcRlFcg5xWUZyDn
GZR3IOcdlIcg5yGUlyDnJZSnIOcplLcg5y2UxyDnMZTXIOc1lOcg5zmU9yDn
PZQHIedBlBch50WUJyHnSZQ3IedNlEch51GUVyHnVZRnIedZlHch512UhyHn
YZSXIedllKch52mUtyHnbZTHIedxlNch53WU5yHneZT3Ied9lAci54GUFyLn
hZQnIueJlDci542URyLnkZRXIueVlGci55mUdyLnnZSHIuehlJci56WUpyLn
qZS3IuetlMci57GU1yLntZTnIue5lPci572UByPnwZQXI+fFlCcj58mUNyPn
zZRHI+fRlFcj59WUZyPn2ZR3I+fdlIcj5+GUlyPn5ZSnI+fplLcj5+2UxyPn
8ZTXI+f1lOcj5/mU9yPn/dQHIPcB1Bcg9wXUJyD3CdQ3IPcN1Ecg9xHUVyD3
FdRnIPcZ1Hcg9x3UhyD3IdSXIPcl1Kcg9ynUtyD3LdTHIPcx1Ncg9zXU5yD3
OdT3IPc91Ach90HUFyH3RdQnIfdJ1Dch903URyH3UdRXIfdV1Gch91nUdyH3
XdSHIfdh1Jch92XUpyH3adS3Ifdt1Mch93HU1yH3ddTnIfd51Pch933UByL3
gdQXIveF1Cci94nUNyL3jdRHIveR1Fci95XUZyL3mdR3Ived1Ici96HUlyL3
pdSnIvep1Lci963UxyL3sdTXIve11Oci97nU9yL3vdQHI/fB1Bcj98XUJyP3
ydQ3I/fN1Ecj99HUVyP31dRnI/fZ1Hcj993UhyP34dSXI/fl1Kcj9+nUtyP3
7dTHI/fx1Ncj9/XU5yP3+dT3I/f9xAMg8wDECyDzAsQTIPMExBsg8wbEIyDz
CMQrIPMKxDMg8wzEOyDzDsRDIPMQxEsg8xLEUyDzFMRbIPMWxGMg8xjEayDz
GsRzIPMcxHsg8x7EgyDzIMSLIPMixJMg8yTEmyDzJsSjIPMoxKsg8yrEsyDz
LMS7IPMuxMMg8zDEyyDzMsTTIPM0xNsg8zbE4yDzOMTrIPM6xPMg8zzE+yDz
PsQDIfNAxAsh80LEEyHzRMQbIfNGxCMh80jEKyHzSsQzIfNMxDsh807EQyHz
UMRLIfNSxFMh81TEWyHzVsRjIfNYxGsh81rEcyHzXMR7IfNexIMh82DEiyHz
YsSTIfNkxJsh82bEoyHzaMSrIfNqxLMh82zEuyHzbsTDIfNwxMsh83LE0yHz
dMTbIfN2xOMh83jE6yHzesTzIfN8xPsh837EAyLzgMQLIvOCxBMi84TEGyLz
hsQjIvOIxCsi84rEMyLzjMQ7IvOOxEMi85DESyLzksRTIvOUxFsi85bEYyLz
mMRrIvOaxHMi85zEeyLznsSDIvOgxIsi86LEkyLzpMSbIvOmxKMi86jEqyLz
qsSzIvOsxLsi867EwyLzsMTLIvOyxNMi87TE2yLztsTjIvO4xOsi87rE8yLz
vMT7IvO+xAMj88DECyPzwsQTI/PExBsj88bEIyPzyMQrI/PKxDMj88zEOyPz
zsRDI/PQxEsj89LEUyPz1MRbI/PWxGMj89j/k9f+P9brFIA=
                "]], {{{
                0.3848527188386954, 0.}, {0., -1.}}, {6., 0.}}]},
             
             ImageSizeCache->{{128.49437092973804`, 
              143.9484832712505}, {-141.49596267816978`, -9.156388119171055}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.567175523880297`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.348579957585796`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.0788652390445495`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.9051090134674664`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.2292786567857545`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.567175523880297}, {
               Style["75%", Bold], 2.348579957585796}, {
               Style["median", Bold], 2.0788652390445495`}, {
               Style["25%", Bold], 1.9051090134674664`}, {
               Style["min", Bold], 1.2292786567857545`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9490196078431372, 0.8627450980392157, 0.43529411764705883`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
aPokK83XVCJOfmvcr/0BBUTMW91vhblESIu2n+8Qp4B2WtNziy0l4nmbhPX1
UxVwPiLRdIG1RKx43vzRi0IF9LRz3z6nu0Q0s3WsH1irgFvPlZUz+kiE6mT3
No3r7ouz15EFUwdIxBTHVi031923x5IBWROcJeJZQb1ub7yUMO7E+6FjXSSi
n+OVaP1eJWT3W39jxGiJCFl9/L72phI8Mv/pMGyCRGj/GsQ9zFdC0bLkg87u
EjHVZ4OvS6Nq8K43S+o4WyIc9kVV+vevBkWkxrfffIl449CpYLBXNWx0PFnY
e4lEZLpaxR2NqIZ67wZN6L5SIlJdaw94pVfDPp9P2GV13f/Ly6PDNdVg2mhT
r46BEtHzmSXW710DJ2PaRbbbIhEX7cJjYhbVQCfApuY7JOLgxJTa8Sdr4HKu
56aWeyXC6fOXoJ9ZNdB3teRP80MSUXz+/afxRiq41/SMh9FRiRi6ItJkrqsK
XOKGvGhwWiL23ew2S7FJBRnDvgySx0hE3LUdHj+TVDAlf9tlfZxEuPjrJplW
quDjuo5t1dckYpB/965uPdSw0CQ1VJEoETf/u3hp6WI1lF5ZqCm7KxGii/E1
5zNqWD2y3vLSFInw92/tHJWnBs2Xc3k/nkjEy5wN6fNMNBC8cfjory8k4mjz
KZPdx2igcesfd/KzJKJz0aGLE7ZpIPzGzq55uRIxRowM75ikgTZuNsfeFUjE
zGcz9WdKNXD2R7rh6yKJyJaNd4psr4Vu25auy/glEY0OZNn+naCFG20bFT8p
l4hW9S74em3RguPti9MeVUtEw3u7YvKuaOHhxDFPHugkYmdo3tYOuVoYXfrL
IVkuFXktolqayXTwZsfe84kNpSJ6d2hJmI0OZlr1MItvJhV9lmX0WTJWB1/u
vgi53FIqcufO+LvJWwfL3FcqLrSRipQTq01vhOqgoqzporNWUhH8ttelL+d1
EBh67e3pLlJxwebe38oHOpBZT3A53kMqkjTTVzzP0sEeUZbwn71UNDp5r/nE
Ih20mHWw48GBUtG+c66rT6UOjinswveCVHgaFeta6HVgdeCNbJerVKzLvCq6
1dNDnK2/X/AYqWjmXp1wyVAPdmkmXzZNlAr3Tc5RO+u+vuN5c2LgNKkQ88+W
3zLQwxD1lJQAD6lQjOiaaK/TwdPDit6rFtT9/MRFh9TlOpjQKyJqxVKp+GRx
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
IOc1lOcg5zmU9yDnPZQHIedBlBch50WUJyHnSZQ3IedNlEch51GUVyHnVZRn
IedZlHch512UhyHnYZSXIedllKch52mUtyHnbZTHIedxlNch53WU5yHneZT3
Ied9lAci54GUFyLnhZQnIueJlDci542URyLnkZRXIueVlGci55mUdyLnnZSH
IuehlJci56WUp+L/5qn/k7ci562UxyLnsZTXIue1lOci57mU9yLnvZQHI+fB
lBcj58WUJyPnyZQ3I+fNlEcj59GUVyPn1ZRnI+fZlHcj592UhyPn4ZSXI+fl
lKcj5+mUtyPn7ZTHI+fxlNcj5/WU5yPn+ZT3I+f91Acg9wHUFyD3BdQnIPcJ
1Dcg9w3URyD3EdRXIPcV1Gcg9xnUd+D/9h3/04cg9yHUlyD3JdSnIPcp1Lcg
9y3UxyD3MdTXIPc11Ocg9znU9yD3PdQHIfdB1Bch90XUJyH3SdQ3IfdN1Ech
91HUVyH3VdRnIfdZ1Hch913UhyH3YdSXIfdl1Kch92nUtyH3bdTHIfdx1Nch
93XU5yH3edT3Ifd91Aci94HUFyL3hdQnIveJ1Dci943URyL3kdRXIveV1Gci
95nUdyL3ndSHIveh1Jci96XUpyL3qdS3Ivet1Mci97HU1yL3tdTnIve51Pci
973UByP3wdQXI/fF1Ccj98nUNyP3zdRHI/fR1Fcj99XUZyP32dR3I/fd1Icj
9+HUlyP35dSnI/fp1Lcj9+3UxyP38dTXI/f11Ocj9/nU9yP3/cQDIPMAxAsg
8wLEEyDzBMQbIPMGxCMg8wjEKyDzCsQzIPMMxDsg8w7EQyDzEMRLIPMSxFMg
8xTEWyDzFsRjIPMYxGsg8xrEcyDzHMR7IPMexIMg8yDEiyDzIsSTIPMkxJsg
8ybEoyDzKMSrIPMqxLMg8yzEuyDzLsTDIPMwxMsg8zLE0yDzNMTbIPM2xOMg
8zjE6yDzOsTzIPM8xPsg8z7EAyHzQMQLIfNCxBMh80TEGyHzRsQjIfNIxCsh
80rEMyHzTMQ7IfNOxEMh81DESyHzUsRTIfNUxFsh81bEYyHzWMRrIfNaxHMh
81zEeyHzXsSDIfNgxIsh82LEkyHzZMSbIfNmxKMh82jEqyHzasSzIfNsxLsh
827EwyHzcMTLIfNyxNMh83TE2yHzdsTjIfN4xOsh83rE8yHzfMT7IfN+xAMi
84DECyLzgsQTIvOExBsi84bEIyLziMQrIvOKxDMi84zEOyLzjsRDIvOQxEsi
85LEUyLzlMRbIvOWxGMi85jEayLzmsRzIvOcxHsi857EgyLzoMSLIvOixJMi
86TEmyLzpsSjIvOoxKsi86rEsyLzrMS7IvOuxMMi87DEyyLzssTTIvO0xNsi
87bE4yLzuMTrIvO6xPMi87zE+yLzvsQDI/PA/y8v/H8AoNig/Q==
                "]], {{{
                0.22197161641712862`, 0.}, {0., -1.}}, {7., 0.}}]},
             
             ImageSizeCache->{{134.82144674022572`, 
              153.17865622517795`}, {-118.37953449285853`, \
-44.8892830807181}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.3437910243252955`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.166410127596493`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.0836304342617655`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.8489739503448335`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.7491949807608664`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.3437910243252955`}, {
               Style["75%", Bold], 2.166410127596493}, {
               Style["median", Bold], 2.0836304342617655`}, {
               Style["25%", Bold], 1.8489739503448335`}, {
               Style["min", Bold], 1.7491949807608664`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.6705882352941176, 0.8784313725490196, 0.9372549019607843],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndczX/498/KyIj4ZmVlVnZWxJWE9DUrZKYoJCsR5avsbJJkhLKTkRQZ
XW8hK0Qoor1VWud06jR+fo/7uu4/7tsfPHqozjmfz/tzXa/x7Om0zsZZJpFI
Xv/963//5T/7YlKGb5pbhcf3264ZlnIMVKfytYNdqnCVU4LxmzH+sHyzKuPF
5ipc6OWoeRN1ApLstB4U761CicPZFh7WJ8HCpP3h9qeq0FST5dSqNhDutu21
zOxaFVovqxua9TIIupcNNV3+oAq9Oru2s7xzBo58MNc59KoKz86xH7n/wTmo
C5+ZG5lchfGtEzxaZJyH1QeXPE7Nr8L5NlvC2p28CD9WrTkuV1dhkZ7wCn4X
AlZW21YYN1Ni70mR7jbtL8GDvgfH2XZUou01942Z6y5DX60z7bz7K3GJu+1M
ddoVCMi+Xhg6WonNLod3mOh0DeRxD/CtlRKnTLF2XF17Hdwvxp+ssFdiH7NG
nw7XwyBj+9fVnVcpcbhZbkzh6nCYuThngsVWJd6xqHD3mXwbYsdWdnDdr8QL
up/6j9a/CwM6y0qPn1biDIwaMaxnBJxVt3kRc0OJN17v9F0y7B5oJ3c/kxnz
9/VemIZrzYqELVGD1jd/q8T6XhWblnvdh/wT4yYP/aHE9IXlFyIiomCu+zT9
+UVKHPnk9cxuqmh4MWthhW+tEr/s+x34dcpDMBns+vq6tgr371xep7kaA6Gt
tp5P7KxCs/oVze60ewxtivd5qI1U2Ntg72fFkSfg8zbQusdYFWolTT7RQi8W
Sq9f6WH1rwq3P6kzfXMTYdG++6p1C1X4Xi9xV/A1Ae+cnyecWv3392U8O2Xk
+wzGWH4ORW8Vfli+AHY4xMF1g8wt+QdV2Or3ai3/Sc+hg7Rshs45FUqX9Bpk
PewF7E1v6D0qXIVbrtXtPN7nJVQ9baVZ8kSFazT6yy26x8Oyc/qf9iaocNis
lifNur+Cz17G127/VOE6wwtuC/u8BvP5Y/77VqzCjhGGWWuHvoE7o6baNtSp
cO19y8jRE99CNz17w76tqnHr0CW4Z8E7OFTl0ji9azWmaHtV6XkmgObzpq+b
BlZjeOfGsmtB78E1YvfN4HHV6OEwtcuf2A+QcvTEjpfTqzHJ100EF36EKWtD
55UsrkZVcpeuQw4lQvS0iIH/rK1G1DFvva7PJ+htLOTjtlfj9sNfhy8Wn+BE
84/flx+pxqiuw/LfLPoMsoJfdw6dr8aJ7UZq76r9DOvji/fcv12NTY/Ltsw5
nQTplzULf8ZWo9a4iMdNTL/AjF3awxQfq1Gx4Ja+4/cv8MSxU7MB6dUY+LR4
jrHXVzA2759m+6caLxYalxt1+QZnuo26791YjcrPr716P/kGzeonHbiko8ak
8uhvqYuSwTPVbum77mrs8z5b0aE+GfJilo2sHKzGDab+vifOpYBdkHvLLuZq
3PE+4Zre2O/wfPOOLItZajzq/H31spTvMGzOsYeuS9VYPLNZz3EeP+CiyYUj
/uvV+F+Sx9MVrVNBR/f28ke+atz/j07H61dTYXvZkzFZx9S40D6w3wuzn1D8
4V0b7ZC/P7/acMKuxJ+w8NaPvKERajx7X3fubcdf8PZg4ZP5z9RY4LxpSJuy
XzDaVe2/45Maw7bsvL3JOw2uWTVddSNTjZ7bf2luydNBr58efCpXY/yT1NcH
/NJht1aff2qkNdjf8wqUKTKgMtvkdw/dGrw2e/SY5xMzwCnO4pmVQQ1eiNEc
vOmbAYkXZ59aP6wG06RxOkGPMwB8lq4JsqjBlos3xXpVZcDtxesmCpsa3Pf8
UudJxpmgb7a9U4FTDV6aE7K80CETDnY+/EdnYw1W7A8xcfDPhFr12ZejdtWg
qqHL6fNxmbAyOeysw4kabPJ03aWQskxIjorZsO9SDV5cMdx5uX4WTA54PeVO
ZA22qh1bmzMpC+67J3dNfl6DsaYTDvRakwW9ZudVNiTV4O5qi6kG/lngP1j5
pm9ODZZ2O7Yp934WSForLs6oqsENqw7ZbvyaBeuKdTdvVtSitpVpvy+VWZD2
tue08+1rsWiIv7Fum2yYdmOIQXzvWuxW9mGfqVE2PN4H6pLhtdj0e4iFvUU2
GLnM+PDPpFps//SAyXb7bAiyXHx53JxaHGizoOKJWzY07eXm5exci+3eR3sZ
+mTDZqn3rMObatHt+WDVt6PZkJO+v2/Unlq0rai/8eN8NtjGBtX9PFmLhnPX
X5oeng1x5659VlytxdE+e9pOfZgNQ7yjrw+IrsVMY3DKj8uGC/NfbreLr8Vs
5VhDy4RsaD36i922b7V41u+i1rYv2bBNL9vocl4tthjmuS88NRt+V5VLElS1
uEGnpLUyMxsWJEmSK5tosMpgot/G/Gx4HaFzq0sHDU4YcdJzSnE2jDrWbdfE
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
ZFzR3q8KseVWqFGA5BZoX7L8euaXQthr33UoKAqDCbrTxO1chTjms93wlvI6
bNlhezOuRCGiRn7bv6r7NbhbtiDwm1IhdFu+nXfT5QrkOzjtKKpXiBNGorHp
20vQ7eMqtwYtLRF32nFQV6tQmDt+wzzd1lrinHONy/H0i3D41haLvnpa4lpu
fAvDbhfghb7vwDHdtMQbLx8HEXYO6g7u6zijr5b4FxwXrXc6AyaaI3KnQVqi
MKty01eLIHB1DSzdNFJLFEXGe4RMDYTQ78Hf94/XEsHLAt6d9QiA71ZXXgRP
1hLTY299CHnmD20eht+JmKEluhu4aZ0ddBys+t0/83KuluC82Cfw8Z7vS/7/
r+n7kb+ffh/y76PXQ349ej/I74feL/L7pc+D/Hno8yJ/XroeyNeDrhfy9aLr
iXw96XojX2+6H8j3g+4X8v2i+4l8P+l+I99vOg/I54HOC/J5ofOEfJ7ovCGf
NzqPyOeRzivyeaXzjHye6bwjn3d6HpCfB3pekJ8Xep6Qnyd63pCfN3oekZ9H
el6Rn1d6npGfZ3rekZ93mgfI84DmBfK8oHmCPE9o3iDPG5pHyPOI5hXyvKJ5
hjzPaN4hzzuah8jzkOYl8rykeYo8T2neIs9bmsfI85jmNfK8pnmOPM9p3iPP
e9oHyPuA9gXyvqB9grxPaN8g7xvaR8j7iPYV8r6ifYa8z2jfIe872ofI+5D2
JfK+pH2KvE9p3yLvW9rHyPuY9jXyvqZ9jrzPad8j73vSA8h6gPQCsl4gPYGs
J0hvIOsN0iPIeoT0CrJeIT2DrGdI7yDrHdJDyHqI9BKyXiI9haynSG8h6y3S
Y8h6jPQa/l+99n/0HLKeI72HrPdIDyLrQdKLyHqR9CSyniS9iaw3SY8i61HS
q8h6lfQssp4lvYusd0kPI+th0svIepn0NLKeJr2NrLdJjyPrcdLryHqd9Dyy
nie9j6z3yQ8g+wHyC8h+gfwEsp8gv4HsN8iPIPsR8ivIfoX8DLKfIb+D7HfI
DyH7IfJLyH6J/BSynyK/hey3yI8h+zHya8h+jfwcsp8jv4fs98gPIvtB8ovI
fpH8JLKfJL+J7DfJjyL7UfKryH6V/CyynyW/i+x3yQ8j+2Hyy8h+mfw0sp8m
v43st8mPI/tx8uvIfp38PLKfJ7+P7PcpD0DOAygvQM4LKE9AzhMob0DOGyiP
QM4jKK9Azisoz0DOMyjvQM47KA9BzkMoL0HOSyhPQc5TKG9Bzlsoj0HOYyiv
Qc5rKM9BznMo70HOeygPQs6DKC9CzosoT0LOkyhvQs6bKI9CzqMor0LOqyjP
Qs6zKO9CzrsoD0POwygvQ87LKE9DztMob0PO2yiPQ87jKK9Dzusoz0PO8yjv
Q877KA9EzgMpL0TOCylPRM4TKW9Ezhspj0TOIymvRM4rKc9EzjMp70TOOykP
Rc5DKS9FzkspT0XOUylvRc5bKY9FzmMpr0XOaynPRc5zKe9FznspD0bOgykv
Rs6LKU9GzpMpb0bOmymPRs6jKa9Gzqspz0bOsynvRs67KQ9HzsMpL0fOyylP
R87TKW9Hztspj0fO4ymvR87rKc9HzvMp70fO+6kPQO4DqC9A7guoT0DuE6hv
QO4bqI9A7iOor0DuK6jPQO4zqO9A7juoD0HuQ6gvQe5LqE9B7lOob0HuW6iP
Qe5jqK9B7muoz0Huc6jvQe57qA9C7oOoL0Lui6hPQu6TqG9C7puoj0Luo6iv
Qu6rqM9C7rOo70Luu6gPQ+7DqC9D7suoT0Pu06hvQ+7bqI9D7uOor0Pu66jP
Q+7zqO9D7vuoD0TuA6kvRO4LqU9E7hOpb0TuG6mPRO4jqa9E7iupz0TuM6nv
RO47qQ9F7kOpL0XuS6lPRe5TqW9F7lupj0XuY6mvRe5rqc9F7nOp70Xue6kP
Ru6DqS9G7oupT0buk6lvRu6bqY9G7qOpr0buq6nPRu6zqe9G7rupD0fuw6kv
R+7LqU9H7tOpb0fu26mPR+7jqa9H7uupz0fu86nvR+77iQdA5gGIF0DmBYgn
QOYJiDdA5g2IR0DmEYhXQOYViGdA5hmId0DmHYiHQOYhiJdA5iWIp0DmKYi3
QOYtiMdA5jGI10DmNYjnQOY5iPdA5j2IB0HmQYgXQeZFiCdB5kmIN0HmTYhH
QeZRiFdB5lWIZ0HmWYh3QeZdiIdB5mGIl0HmZYinQeZpiLdB5m2Ix0HmcYjX
QeZ1iOdB5nmI90HmfYgHQuaBiBdC5oWIJ0LmiYg3QuaNiEdC5pGIV0LmlYhn
QuaZiHdC5p2Ih0LmoYiXQualiKdC5qmIt0LmrYjHQuaxiNdC5rWI50LmuYj3
Qua9iAdD5sGIF0PmxYgnQ+bJiDdD5s2IR0Pm0YhXQ+bViGdD5tmId0Pm3YiH
Q+bhiJdD5uWIp0Pm6Yi3Q+btiMdD5vGI10Pm9YjnQ+b5iPdD5v2IB0TmAYkX
ROYFiSdE5gmJN0TmDYlHROYRiVdE5hWJZ0TmGYl3ROYdiYdE5iGJl0TmJYmn
ROYpibdE5i2Jx0TmMYnXROY1iedE5jmJ90TmPYkHReZBiRdF5kWJJ0XmSYk3
ReZNiUdF5lGJV0XmVYlnReZZiXdF5l2Jh0XmYYmXReZliadF5mmJt0XmbYnH
ReZxiddF5nWJ50XmeYn3ReZ9iQdG5oGJF0bmhYknRuaJ/1/e+H8Ao2u72w==

                "]], {{{0.26574186463828736`, 0.}, {0., -1.}}, {8., 0.}}]},
             
             ImageSizeCache->{{144.43745628113408`, 
              
              159.11989544868476`}, {-123.59518936933375`, \
-31.72370201634658}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.3369210110040455`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.2776256164036592`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.059447316161571`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.894668300996763`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.57394626223522`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.3369210110040455`}, {
               Style["75%", Bold], 2.2776256164036592`}, {
               Style["median", Bold], 2.059447316161571}, {
               Style["25%", Bold], 1.894668300996763}, {
               Style["min", Bold], 1.57394626223522}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.6705882352941176, 0.8784313725490196, 0.9372549019607843],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
JMisitWwx7Tq+avIAhZRrm92/5Ma9hm5jdmwtYAtmDV/qE2tGmYMy+wfalfA
Wj+MsnusUcObge+m3u1QwJ72Vy2Y2FwDn7O+GA/7ks/2Bk1ze95eA/I2sYs3
PshnVtJzPjO6a8D7ps63IjCfVbpVheYO1EA3mZDcan0+u/yWxTmP0oBE6p7s
Pjmf/TMlMK3IVgN6Ww/3Odovn7VLLJcvmdF0PiNx5O8W+SzTwrLqwwIN7Hse
eGhkXR7zPnZAtspVA6NXenh+rchjo9UFpt/dNRDmmGp3RZ7Halb3H+q2SwMP
TobYtczLY1fzdtj98tPA3iEtrkNBHltqm7XA86QGSq8ktFj1IY91jDN3U53T
QMrv1glX/+SxF53dfPZe18CG29eP922bz3wPQqg0UQOPvKRhgX/nM+s/beL8
eNPPx6TsClyTz365LE8zeqGBnhkLLF5dzmfRL+/IjxVqoMzk/Zfayny2bKx+
VbsKDZik9049b1vATK/Nk4VUaSAuwH2+V9P9z2kfZdpFpYGigZfNzdoXMj/v
hiEX9BvhYO+2a80DC9n4nw52vdo2gqSr/qH23eSsbuHZBdfMG8F9p1vG4WQ5
i336c+Og/o2QW517RLq6iLmOZD7xIxvhnOcfZ2WvYtYl4kToSNYIlXMiS9/W
FrPXLctv3HVohBaHv3p0zH3L/HeMTLOe1wglKwZtaXxcwmw/+8phWSOsPB5V
/j79HVM6Ffy029gIF0sV/XRFpewm9JNlbG+ElGxp+VNJGVs1eIfpdN9GmCHv
caPwXBnrdiZzSM7xRrC5/qLR2v4DK9A3t5sb3ggL3p/hdb8/sIAtGxfIrzZC
acCzXdrYcmb/PmXj4tuN0DXqufFk9wqmntbGp+xRI9TOfdDn3tiP7Pa9ZaGu
zxvBpdLY/a/Wn9i6PndufM1r+j457XYcrPzELE7qpW0oawRLrzs2B15/ZnKt
s7zmRyPAx5L11fwLO7H+2s9tikZYNPpUzb93v7LJcqW0QaqFHaOS//2S+I1p
7R1M97TSwoTAteOyH3xnSbfChwidtdCTRfm9yfjBNnT7OeFAHy2MSTmc6V9S
yXofGb/A8C8t/PHbKPOp/8neKo5vPDpOC2ba7sm2narZSdcP+9tO0cLk8Dlr
LnWtYQ65I0KD5mhhc69fu/bdrmHCeN8bZv/Rwg11sJnn1Fp2Lzo/9dw6LUwN
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
812ida7AHZrtubHPT8vGD/HjjQUCHzVr1kW9HloWVjE0C0oE3uqCo615UiOr
P1OYv69c4JcftQopm9LIZjt6l9l9FfjzV9o36+UaFttswA/9KoFXZKgnFrtq
WPNHuXXPfgu8x4fNDg5Vaua6dafEv0HgZ6e0E0u2qRkf0KvFdJ3APWx/eN5W
qliXsqyOrfSlfGNharfaHSrmFbytR46RlGccChqZomxgr6d3HXSyjZQvdOy2
xtajgQ2VPbWa20nKbx10anW5Wsn877uJncylPKjmcWObNUr22d1kmtxCyi/x
XK+EUgWz7cudw/pJ+ZDoHMOHcxTsbMkal8VDpPzFxm8b5j2rZ8qTbdd3Gynl
q5cIrnfG1LO5U5M9ykZL+XWb0BBZTB27qVvufWm8lL9WPHXf3qWOtUhqccTV
Xsp3uu2vtDvyh63ekBDU10HKzf4za3eo6jdL7bkk4ussKZeuCs+NWvubdSvS
j4l2lvLWRXVJ1+S/2M7jcYkb/pHyqz3Xlj+b/IsVTJzPhy6T8keeYzOs79ay
vzS6zJpVTedvs2ijVb9aFnA7Kv/2BikPPZY75nNIDfu6ZnbZti1SPtTdO2uv
YQ2z7676Pmq7lA+wqDm5RFnFIvIv1Sn3SHn9j8BNU8t+MvWRaZIHPlJekdT7
QpesSjZ/wh+jPYelvCRn0qVB93+w28qzHdlxKT/Rty7tZfR31ip+Yg8hSMoT
B8gznSK+sXUrqwamhUm5ctXqRIOwr+xplxCrAxFSnrRv2U6r0C/M4jUTJ1+V
crnK8FWP8M9s96GvDoaxUt7s6InfhpGfmHx8oHPWLSm/OUpxYPDNj8yybozL
0btSvupV3hRIrWAnYsrXzXok5dVz2o79VVzOfiw74tE2TcrNK16MrlN+YJNN
Lb3fZEj5tYq4zzXmH9il7BL/oGwp3+v8bEyzyWVM63sgaH6elC9aEnv7SlUp
W2Q9NMKsWMoX23aOL/nnHUuqLYh++17K/30yvro4/y1rG/Vv4rlPUp5l/kOe
sriYbVjan//nh5TH75KfPVMjZxkdcjMtaqVc3DqialuTn+idtSO/ol7KQWdr
PZsVMO99PcuuaJqex+M0XR9VHiv5O+v7aqmM84anPcofv2F/V22tG9Bcxh17
rS5ZH/yanbxsLqk0lvGPiZs8znrlsqpFT4zi2sv4tNYrei5cmcMc2rp13GTW
9PMZTrsKUrLZ1WedeozoLuOZZ+/xMVkvmLAXBv7pLeMnD/r0WlmdyRZbrrFK
GijjCceslQUDn7N739uI24fLeFxYclnj7mesw8X7DmNHyfiRoAt7Zn96wjbN
X+6ssZZxr0eG1X+tSGcvjFu4pNjKuOTI/UXqulTWL/3OOu/JMu7y4PoP/XOP
2f6diz0mzJDxo5VnBl+Zz1npcH1vvTkyDrJyxWyHFDb2yw3/pwtkfEdFq6qH
hg9Z8Ll5QYeWyvi+AK+7FpX3We0c3QUHVxn/PWlwoXHNXTbDKCq65ToZr20V
v8y8QxKL4o6J2e4y/oxP1n6fl8D0vBrghIeM704Y+9Dg7m3mMuRSptMuGd/v
pE42HnmLPaxwyO+wT8bPjTheP+ZUPDMJ+/2+wE/Gx172+Zr0K5ZtcTz7PTSg
6fP9UztX7otm2c0m1i06KeM7j+WrJoyPYgMf/dSZh8r4i7gbXUf1ucr8tgYb
vT8n4zXLPU87WV5mHwawjhcjZdw4t7bVmLWXmE3Zl+4rrsv42luDX55/HMFC
g08M7BPfdD2TrJ6c9TzP/kwfY/Uloen7JT874xgVzhxl5ex6sowvD056PKnD
GRZ7399hPW+6v/jHYNNI5yFP//9j/H2g38fzAZ0PPw/o8/B6gK4HrxfoevH7
AH0f/L5A3xfvB9D9wPsFdL/wfgLdT7zfQPcbnwfQ88DnBfS88HkCPU983kDP
G9cD0HrA9QK0XnA9Aa0nXG9A6w3XI9B6xPUKtF5xPQOtZ1zvQOsd3weg9wHf
F6D3Bd8noPcJ3zeg9w3fR6D3Ed9XoPcV32f43/v83/cd6H3H/QBoP8D9Ami/
wP0EaD/B/QZov8H9CGg/wv0KaL/C/QxoP8P9Dmi/w/0QaD/E/RJov8T9FGg/
xf0WaL/F/RhoP8b9Gmi/xv0caD/H/R5ov8d5ADQPcF4AzQucJ0DzBOcN0LzB
eQQ0j3BeAc0rnGdA8wznHdC8w3kINA9xXgLNS5ynQPMU5y3QvMV5DDSPcV4D
zWuc50DzHOc90LxHPQCkB1AvAOkF1BNAegL1BpDeQD0CpEdQrwDpFdQzQHoG
9Q6Q3kE9BKSHUC8B6SXUU0B6CvUWkN5CPQakx1CvAek11HNAeg71HpDeQz0I
pAdRLwLpRdSTQHoS9SaQ3kQ9CqRHUa8C6VXUs0B6FvUukN5FPQykh1EvA+ll
1NNAehr1Nie9jXqckx5Hvc5Jr6Oe56TnUe9z0vvoBzj5AfQLnPwC+glOfgL9
Bie/gX6Ekx9Bv8LJr6Cf4eRn0O9w8jvohzj5IfRLnPwS+ilOfgr9Fie/hX6M
kx9Dv8bJr6Gf4+Tn0O9x8nvoBzn5QfSLnPwi+klOfhL9Jie/iX6Ukx9Fv8rJ
r6Kf5eRn0e9y8rvohzn5YfTLnPwy+mlOfhr9Nie/jX6ckx9Hv87Jr6Of5+Tn
0e9z8vuYB3DKAzAv4JQXYJ7AKU/AvIFT3oB5BKc8AvMKTnkF5hmc8gzMOzjl
HZiHcMpDMC/hlJdgnsIpT8G8hVPegnkMpzwG8xpOeQ3mOZzyHMx7OOU9mAdx
yoMwL+KUF2GexClPwryJU96EeRSnPArzKk55FeZZnPIszLs45V2Yh3HKwzAv
45SXYZ7GKU/DvI1T3oZ5HKc8DvM6Tnkd5nmc8jzM+zjlfZgHcsoDMS/klBdi
nsgpT8S8kVPeiHkkpzwS80pOeSXmmZzyTMw7OeWdmIdyykMxL+WUl2KeyilP
xbyVU96KeSynPBbzWk55Lea5nPJczHs55b2YBwPlwZgXA+XFmCcD5cmYNwPl
zZhHA+XRmFcD5dWYZwPl2Zh3A+XdmIcD5eGYlwPl5ZinA+XpmLfD//L2/+bx
QHk85vVAeT3m+UB5Pub9QHk/9gFAfQD2BUB9AfYJQH0C9g1AfQP2EUB9BPYV
QH0F9hlAfQb2HUB9B/YhQH0I9iVAfQn2KUB9CvYtQH0L9jFAfQz2NUB9DfY5
QH0O9j1AfQ/2QUB9EPZFQH0R9klAfRL2TUB9E/ZRQH0U9lVAfRX2WUB9FvZd
QH0X9mFAfRj2ZUB9GfZpQH0a9m1AfRv2cUB9HPZ1QH0d9nlAfR72fUB9H/aB
QH0g9oVAfSH2iUB9IvaNQH0j9pFAfST2lUB9JfaZQH0m9p1AfSf2oUB9KPal
QH0p9qlAfSr2rUB9K/axQH0s9rVAfS32uUB9Lva9QH0v9sHwvz74v30xUF+M
fTJQn4x9M1DfjH00UB+NfTVQX419NlCfjX03UN+NfThQH459OVBfjn06UJ+O
fTtQ3459PFAfj309UF+PfT5Qn499P1DfjzwAEA+AvAAQL4A8ARBPgLwBEG+A
PAIQj4C8AhCvgDwDEM+AvAMQ74A8BBAPgbwEEC+BPAUQT4G8BRBvgTwGEI+B
vAYQr4E8BxDPgbwHEO+BPAgQD4K8CBAvgjwJEE+CvAkQb4I8ChCPgrwKEK+C
PAsQz4K8CxDvgjwMEA+DvAwQL4M8DRBPg7wNEG+DPA4Qj4O8DhCvgzwPEM+D
vA8Q74M8EBAPhLwQEC+EPBEQT4S8ERBvhDwSEI+EvBIQr4Q8ExDPhLwTEO+E
PBQQD4W8FBAvhTwVEE+FvBUQb4U8FhCPhbwWEK+FPBcQz4W8FxDvhTwYEA+G
vBgQL4Y8GRBPhrwZEG+GPBoQj4a8GhCvhjwbEM+GvBsQ74Y8HBAPh7wcEC+H
PB0QT4e8HRBvhzweEI+HvB4Qr4c8HxDPh7wfEO+HPCAQD4i8IBAviDwhEE+I
vCEQb4g8IhCPiLwiEK+IPCMQz4i8IxDviDwkEA+JvCQQL4k8JRBPibwlEG+J
PCYQj4m8JhCviTwnEM+JvCcQ74k8KBAPirwoEC+KPCkQT4q8KRBvijwqEI+K
vCoQr4o8KxDPirwrEO+KPCwQD4u8LBAvizwtEE+LvC0Qb4s8LhCPi7wuEK+L
PC8Qz4u8LxDvizwwEA+MvDAQL4w8MRBPjLwxEG+MPDIQj4y8MhCvjDwzEM+M
vDMQ74w8NBAPjbw0EC+NPDUQT428NRBvjTw2EI+NvDYQr408NxDPjbw3EO/9
//Lg/wdTE3DO
                "]], {{{0.18540346378349243`, 0.}, {0., -1.}}, {
                9., 0.}}]},
             
             ImageSizeCache->{{150.5563786968958, 
              168.55822179733818`}, {-113.33067081670896`, \
-39.984884220181144`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.2714646001430636`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.1783762549048884`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.0836304342617655`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.9698181053106711`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.612127945445106`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.2714646001430636`}, {
               Style["75%", Bold], 2.1783762549048884`}, {
               Style["median", Bold], 2.0836304342617655`}, {
               Style["25%", Bold], 1.9698181053106711`}, {
               Style["min", Bold], 1.612127945445106}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.3176470588235294, 0.6549019607843137, 0.7529411764705882],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlm3lYT2vU/p8digxR0ShNotCcEPbjSDKEkDGhIikJGaIMUUgKGULIkKEI
mYW9KMSRKcVJKoWiJLOQ3ue93rX88fudf851X6dT3+/ez7DWfX+Wie/c0TNU
GGN9mzD2v/+mfzZeHFNa0oJBbYbOmNhveXKmTe+0ZHUGu2z+bS3XPZSfHjZa
OKklg0Ota3scNcyXf3dsynVbMfhT/aDIPrpANtn2Vr1QaNOMp4a3rJ/Jg1s9
KEhszSBk6/gl4UbP5eDVZ1M82zDIvr74UMLEEnnzz51BGhoMfu5eqHnxU5l8
ft6KnnlCX7y7rvhBRbn8vMpf2tCWgeputX+fq7yW2bSh99zbMag4FZh5YnSl
3PmpzQ5VTQbnCpcxncK38tAR7X1zhLbpVxNRnlAjz735s3uUFoOUrfoheVEf
5K19y77L2gxOtZG0YcJH+dKZmzcahK6aV686UOOzXGqVvjGrPQP94tnrTd98
kZse2DQhvIP471uD/ZaWfJMt9RaZOeswMHIeHjW0/oc8YtPk2i9Cv85caTnf
+Ze8QG3ApUxdBnuO26un72yQk5ZbrAnVYxD9aX2Xf9oyfvVry5HW+gz2rSwo
sJ4p8fLgj3o1QkPadfn0fRWu9qrw1TEDBkNUZiXcGNKUd5985WSAofi8D5db
9nvajHs+3r+0c0cGEyZaJxYtUuOLh6wdVCH0ymd919p1bcGTIbjtfiMGLQNm
u559p86vO49+7tOJwa/BWUYnr7bibzKcDxsaM/jg23XK4JQ2vKVFx3lFQocs
9u551b0tt92j0jfJRPy9AZkX27i3417aVarjTBkcfGO+N8RDky/dkPdIy4zB
m9nl4zpN0OL7VM4kPxI6RXV6zsgAbZ4TnhSQYM7gUdO0FwZL2/O3dZH2Hp0Z
TN0cm7AxoQPXmOXXoG7B4Ii/8X97Dutwx1L33Fyh1UZ6m/e8pssnjrNOjOnC
YOdL6//sCvT48jwtH9euDJ7u72I57Z0+P+ha31XFksGk5dPbxvw24LlZJZ8V
oVXq09dOU+/I39vnXIu0YjDN4Xf5YU0jrpl2bL1LNwaZIyeMa63diTubJIyt
F3rHkjF5B1WNuXdSWKcL3Rl8dY4riF5uzKM0Jr0L68GgVeH+IeofjfmRGPmc
vTWDyrW5B7ZMMeH3GsxX1gk923XHxehsE/4xTH1Yhg2DFlWuXTxNTXmHmg/t
g20ZWB7ZdXx2uCl38Ssos7Rj0G2a9mLPXFM+rehyeqXQHs2v+ya0MePRnimL
Uu0ZWA8/0OnyMDOelhs9wM+BQap+bL+wFWb8gRzUysRRvD+vW3ohx8z4l/Oj
npYIPdzAI33mHTOub93zQLKT2J+TN1p1LzXjcqrBnEk9GcT+it6S/M6M+xtK
vXSdGSwyHVmfWm3G1ye+USkUevrk/Gtu5WY8Q/1eXmIvBrxFm80b75vx/FWn
kzx7M1h/Qhm085QZ//Fju59GHwZXbpnFJq0z4x1DI6zzhN6WfS/wzjgz/k/l
9PpYF/F8Xk/JWGJgxgN8Bue49xX7Z+hMfempKY8r6J6g2o9BVxOTqLvrTXnm
cM1JOUIX8DE33R1N+dPs7+ZR/Rk8j6k48bPQhP/u8+KDLDMYsNL4wqz5Jtwk
88blBqHfn8rLslAz4W6WR6OzuDhvsla0vLvNmAelbBwVPoDBZIflHWqNjPkm
nQUGzv+I9RBckDzHrRM/Fz/hzRehf+SezdvsZsSLmvU/nTmQQZOix41b5Y68
McIsItSVQWj/G3HZ9obc/EvzwdaDGMQd05UDTAz40KDadjVC27x6l5vTSp/P
Lc8vPubGIN/q1VS9b7p868RLRwIGMxgW3bAmqUSHX3q4d35ndwb3BzZrCLzd
gZcMXtOvQuiJ3wf9OXK6PW+iBDbfP0Tst7gz26fs1eZde47M9xnK4KaNnkd0
vBb3OOG413DY/37fp3/UVmvy+eb6gUVCv5tY8jMroh3fsbvRIWk4g1Wr0if6
R7TlVzRf//HyYLC37KDp9GYavHz93TtaIxgUdlixdolxa64mndr6SOi1HofX
Gw1rybsv2TY1YaT4fE8C01xiWnDPD0utPEYx8DmjGG55rMYXzZz2Vd1TPP/I
S9+v2ary3S8GQa7QzUszLrvsb8phbLcNMaMZtNao1Ztm3oS//rftONcxDKYE
zFX3vyxx9YHfjFXGivU2vkzF149xm8vPqxWhQ9+dfpjZ/4/sZXf9fKSXOO8v
zezjW/xLXnr08CqXceI+KV7lGbavXt7XKW54vdC2H7++8F/7Xc7ZPk/nwngG
gUZxpfGJX+W3rceXh00Q69c0vomc/VluE933hP1E8Tzi1Nsebf9JdvhtsqRO
6E3TX204v75OnrBAbWDGJAa3J5weYd6vVo58V9M6eLJYn4eemMYcrpYPTH/8
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
K6/gu/Nfyu43wk38SsX9+8ozeJJSJs/pPbXGuIzB0jmtTg4bXCZvOeV6oUTo
CVFDV/i3KJMvdLGKSn4p6ov2SRZXmpbJxXs1PCaVi3rI/+TuS73KZKnDVx3d
CtH/zNGY1i61TLbYWFReIPSWZO3E5CEv5WFN4UTiK9Evt/Z7kG9RLs9blrrE
8zWDqoPefGK/Cnn7p9iBGm/EefK5MvHOxldyVmBomzyht5t6G5jqvZHLyrz+
i60U9dGdV3s3lVXKzSa4HHKvEvt9bqNq8Ou3stUD47mqbxl8Gqw6pbtljTzS
TbVPjtC3Ro/r5nuiVg67Wt006p14n4u2HSy8VCfvdHz0QK5mcMJbfd1//T/J
19LP72oQepRjhF7sm8/yK9PkGVk1or8qnsJOn/4qt9i1yjb8vehHp2w712L/
d9m6XcCvnrUM9ttvKul7rl4es274rS9CF/xze0tR7S95SaPd5swPov5Ru7Nj
7Ig/8p5FOt6hdQwSDdt6/g5k/Mb73xbWH0V9fsvD66si8Ur/8o/VQvf643ZW
w7IJb1V8+8qxT+L9z3Vb1S21Kbcbc2JtwGex/4b/aNLKUZWPu7tldOcvDHbX
f/T1KlDjEQOWdKwQesHi2OjYdS34/otTqlK+iv2oFdezpUdLfstm4BmfbwyK
+3TarGnamlcf7rrc8DuDUptfcE5Vg7c1ajOkSGj7YseEj6LfdNr2WSvpB4OX
j/4U2ka245Na/VfiVS/254KV0bNEv7pi9bVjWj/FfbFs2Msnop899PNg2COh
GxZYa+4T/e6deevlhF8M9qT+vPlC9MO1VSHqHr8ZDAlKiEgU/bL2tLEF6g2i
vhk4p/dZ0U/3fto7JVdoq7C33WxFv+0zolNQzB8GTqb5K5+Kfnz1zaY9XRsZ
VB5037ZI9OtH+75jKkyCfV2yOzwU/XzemQf/KkLbJZ7ss0/0+5+szm2PlCSI
GHXFZJebEdc5sGu6i4oEc4ILpoW5deJ99VZ2rxd6WETUkzojYz5904zv55tI
cOnU1IH3thnzGLVhN8KaSmDjPDjJSs2EH19uu9G+mfj/d/bPnjPfhD/62n5C
ndDkZ3wL/mWaoSrBU/Q7DF6VvQ9Sk8AS/RA++dZFy+bSX79kxuP01ZVCV6Gf
Ejtk84jUFtJfv+UkLNLzU5f++jFPnL1fGbeUIBb9mvqMASdLhCY/x8iiy9Lk
VtJfv8d1T6tBk1pLf/2gQO1PGrptJNiAflH8hqdFBUKTn3RG5WpqooYEHug3
PQs/EOrZVoJ69KMa6ta6aLST/vpVprPmqOYJbYt+1uDS0Y9iNaW/flfwuF7J
7lrSXz9sc17HAFVt6a9fdt61iX2O0OSnFWdV/V7VXoJg9Nskh/u35Q7SXz/O
Iu3Mlgahya8bZrJzSpaO9NfPC01a3jVcV4Lt6Pdt0/D/3FNP+usHXo4Zcu2L
0OQXljZYr8/Ul6Ap+olNF2qPDTWQYDL6jZY19UbWhhIUoh85wq/0bbXQSehX
hhXlnD3WUXx+9DN3eqatCDCSIA39zmu5CUM7d5L++qEV8sL2FUI/RL+0+YVJ
ZSnGEhxAP7WHNU/3MRHrAf3W0amdFxmaSrAf/djFhi0HFAl9HP3a5MS6lklm
0l8/97p6YaGXuQQ16PdWrsrar9VZgt/oB7eqTwl+JDT5xXahMc4JFhJEoZ88
rjJIxaOLBN7oNy/z8cxT7yr99aNTCnom5Qo9CP3qm8MN/WIsJbiOfva7bMna
1UqCveh3a7hU/pC6SbAC/XDHzHvZitBb0C+faJkZH9ldgvfop69I2THRpYcE
Vui3H9KJNK8X+iX68XfifT+ct5ZAG/362mbul8NsJKhDP18rske0va0Eh9Hv
7/VFc1Sd0KcwD5gS9EM/w04Cc8wLospfvA6yl+AC5glHJmafsnSQ4DPmDfce
Hl1WKXTdrv/LIz4NjndLdZTgKOYVOsqCdn5O4vlintG358Ri454SPMK8Y/qJ
/kdKhA7EPCTG3Hx+srMEupiXpO9u0W9SLwl61fxfnvJQ84Oabm8JEjBv+br+
yeMCoYMwj9GXLu9J7CNBAeY18pJ9szxdJKA8x//DGgeNvv+/xp9X6Ofx9yn0
+/DvKfT38PMo9Hnw8yr0efH7KPR98Psq9H3xeSj0PPB5KfS88Hkq9DzxeSv0
vPF9KPQ+8H0p9L7wfSr0PvF9K/S+cT0otB5wvSi0XnA9KbSecL0ptN5wPSq0
HnG9KrRecT0DrWdc70DrHfcD0H7A/QK0X3A/Ae0n3G9A+w33I9B+xP0KtF9x
PwPtZ9zvQPsdzwOg8wDPC6DzAs8ToPMEzxug8wbPI6DzCM8roPMKzzOg8wzP
O6DzDs9DoPMQz0ug8xLPU6DzFM9boPMWz2Og8xjPa6DzGs9zoPMcz3ug8x7v
A6D7AO8LoPsC7xOg+wTvG6D7Bu8joPsI7yug+wrvM6D7DO87oPsO70Og+xDv
S6D7Eu9ToPsU71ug+xbvY6D7GO9roPsa73Og+xzve6D7HusBoHoA6wWgegHr
CaB6AusNoHoD6xGgegTrFaB6BesZoHoG6x2gegfrIaB6COsloHoJ6ymgegrr
LaB6C+sxoHoM6zWgeg3rOaB6Dus9oHoP60GgehDrRaB6EetJoHoS602gehPr
UaB6FOtVoHoV61mgehbrXaB6F+thoHoY62WgehnraaB6GuttoHob63Ggehzr
daB6Het5oHoe632geh/7AaB+APsFoH4B+wmgfgL7DaB+A/sRoH4E+xWgfgX7
GYX6Gex3FOp3sB9SqB/Cfkmhfgn7KYX6Key3FOq3sB9TqB/Dfk2hfg37OYX6
Oez3FOr3sB9UqB/EflGhfhH7SYX6Sew3Feo3sR9VqB/FflWhfhX7WYX6Wex3
Fep3sR9WqB/Gflmhfhn7aYX6aey3Feq3sR9XqB/Hfl2hfh37eYX6eez3Fer3
0Q9QyA9Av0AhvwD9BIX8BPQbFPIb0I9QyI9Av0IhvwL9DIX8DPQ7FPI70A9R
yA9Bv0QhvwT9FIX8FPRbFPJb0I9RyI9BvwbIr0E/B8jPQb8HyO9BPwjID0K/
CMgvQj8JyE9Cvwn++k3/50cB+VHoVwH5VehnAflZ6HcB+V3ohwH5YeiXAfll
6KcB+WnotwH5bejHAflx6NcB+XXo5wH5eej3Afl96AcC+YHoFwL5hegnAvmJ
6DcC+Y3oRwL5kehXAvmV6GcC+ZnodwL5neiHAvmh6JcC+aXopwL5qei3Avmt
6McC+bHo1wL5tejnAvm56PcC+b3oBwP5wegXA/nF6CcD+cnoNwP5zehHA/nR
6FcD+dXoZwP52eh3A/nd6IcD+eHolwP55einA/np6LcD+e3oxwP58ejXA/n1
6OcD+fno9wP5/ZgHAOUBmBcA5QWYJwDlCZg3AOUNmEcA5RGYVwDlFZhnAOUZ
mHcA5R2YhwDlIZiXAOUlmKcA5SmYtwDlLZjHAOUxmNcA5TWY5wDlOZj3AOU9
mAcB5UGYFwHlRZgnAeVJmDcB5U2YRwHlUZhXAeVVmGcB5VmYdwHlXZiHAeVh
mJcB5WWYpwHlaZi3AeVtmMcB5XGY1wHldZjnAeV5mPcB5X2YBwLlgZgXAuWF
mCcC5YmYNwLljZhHAuWRmFcC5ZWYZwLlmZh3AuWdmIcC5aGYlwLlpZinAuWp
mLcC5a2YxwLlsZjXAuW1mOcC5bmY9wLlvZgHA+XBmBcD5cWYJwPlyZg3A+XN
mEcD5dGYVwPl1ZhnA+XZmHcD5d2YhwPl4ZiXA+XlmKcD5emYtwPl7ZjHA+Xx
mNcD5fWY5wPl+Zj3A+X9yAMA8QDICwDxAsgTAPEEyBsA8QbIIwDxCMgrAPEK
yDMA8QzIOwDxDshDAPEQyEsA8RLIUwDxFMhbAPEWyGMA8RjIayjEayDPoRDP
gbyHQrwH8iAK8SDIiyjEiyBPohBPgryJQrwJ8igK8SjIqyjEqyDPohDPgryL
QrwL8jAK8TDIyyjEyyBPoxBPg7yNQrwN8jgK8TjI6yjE6yDPoxDPg7yPQrwP
8kAK8UDICynECyFPpBBPhLyRQrwR8kgK8UjIKynEKyHPpBDPhLyTQrwT8lAK
8VDISynESyFPpRBPhbyVQrwV8lgK8VjIaynEayHPpRDPhbyXQrwX8mAK8WDI
iynEiyFPphBPhryZQrwZ8mgK8WjIqynEqyHPphDPhrybQrwb8nBAPBzyckC8
HPJ0QDwd8nZAvB3yeEA8HvJ6QLwe8nxAPB/yfkC8H/KAQDwg8oJAvCDyhEA8
IfKGQLwh8ohAPCLyikC8IvKMQDwj8o5AvCPykEA8JPKSQLwk8pRAPCXylkC8
JfKYQDwm8ppAvCbynEA8J/KeQLwn8qBAPCjyokC8KPKkQDwp8qZAvCnyqEA8
KvkZxKsizwrEsyLvCsS7kl9CPCzyskC8LPktxNOSH0O8LfK4QDwu+TnE65Lf
Qzwv+UHE+yIPDMQDk59EvDDyxEA8MfLGQLwx+VXEIyOvDMQrk99FPDP5YcQ7
k19GPDT5acRLI08NxFOTH0e8Nfl1xGOTn0e8NvLcQDw3+YHEe5NfSDw48uJA
vDjy5EA8OfLmQLw58uhAPDry6kC8OvLsQDw7+aHEuyMPD8TDIy8PxMsjTw/E
0yNvD8TbI48PxOOTn0u8PvL8QDw/8v5AvD/5xTQPgPMCQPMCOE8ANE9AfjTN
G+A8AtA8As4rAM0r4DwD0DwDzjsAzTvgPIRC8xA4L6HQvATOUyg0T4HzFgrN
W+A8hvJ3HgP9fJrXwHkOheY5cN5DoXkPnAdRaB4E50UUmhfBeRKF5klw3kSh
eROcR1FoHgXnVRSaV8F5FoXmWXDeRaF5F5yHUWgeBudlFJqXwXkaheZpcN5G
oXkbnMdRaB7n/53X+R9KVCo7
                "]], {{{0.019165286140718274`, 0.}, {
                0., -1.}}, {10., 0.}}]},
             
             ImageSizeCache->{{119.52608057336448`, 
              215.14576868528468`}, {-133.170505253876, -35.09904953833595}}],
            
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.1320268213326337`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.0880457083543122`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.083630434261765`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "2.0715963620607423`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "2.027118674307947`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.1320268213326337`}, {
               Style["75%", Bold], 2.0880457083543122`}, {
               Style["median", Bold], 2.083630434261765}, {
               Style["25%", Bold], 2.0715963620607423`}, {
               Style["min", Bold], 2.027118674307947}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.3176470588235294, 0.6549019607843137, 0.7529411764705882],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
7YIr0iXiuc2a8M9rJQrjt88O1r2QiHOds/bV7ziF7cTghIbZEtEzo9zPNUKi
mJg+JKV1bv31UjvuaXxIovAe8et1pwKJaD4wXPLguESx8caZQtMf9ffnzImd
W05LFJH9Z6styyVillNt5Oh4ieJCXJtmdmqJeLC3wrjVWYkivesT49E6iehS
lHnxW5xE8Tly0+CJDaTi4qm/rq9iJYrKFjZOM5pLRcek0q3PjkkUzbeXunsZ
SMWAsEKrvCiJoqfu1IplnaTC28zhcrs9EoV94MzgABOpcB545eiKEIli2q+W
kZstpKLboqTS8kCJYtmi9ISwAVLRZcbu7DOLJYqQL0EpB2yl4sBgl+cR9dcn
5p/BGcdGSEVZbuG6W04SxdVXxYVnHaViXtfD182sJIpnTifUV8ZLxf1BJRu/
dJUo8tGtWcpUqcjuEaj+0VCiqLZt3u2Ru1TYuKx+dOKzDtpcShuc4SkVRx6V
aPol6qC3+Xqnjz5SEf9qqFu4nw4cTgyYpVxZ//8HxRs9t9WBu+G3Fb8CpGLa
oPXpNRot+EUcDdb8KxWFl/1e976lhf8aTYuUb5OKw1tuf/ZZo4WTm5skNg+X
ioX/2D992F8LyWqR0mG/VEwqmhk7WVkHr30DM7ofloraYZ9vdj5UB9+/91P2
OSkV7S7pH7YdVwcSz0K19VmpyJm6yvyquhYM3x9uprgoFY1rcyJPnK6FAZMn
dxt3QyqK744PbD2xFpyeNLSaliIV3+TZaR0qa2DuyHtOHg+kInoJfH94qAYC
bvnP8nkmFX9+KJ/1t6+B3QP7rPTLlIqCMSM+LsythriEvOCg9/XX107SetP6
arjXPToy9KtU9PC9ot3dvhreHpqYGPGt/v208n2TeEkDZa317x0uk4qns+8s
+u6sgQZhdzJOV0qFwQGroR5f1NBF5qe8UCsVKmmrdT381WC93lyTLJeJfi8s
mrg2VMP4P5+bpTWRiRFROvvaaBUsWHKw24vWMnGqm8GkkRYqCMp3sXpnKBN6
//m62iVXwQF3mXOesUz8l9Glj3RMFZzPTJ5VYiYTx7+m21zOrIQH41aurOwn
EzvzVMu9PSrh433TrTormSgymL9wePFfqLDLjWxsLxPPDOePnLr6LzS5ui+x
7SiZcDz8MOFhbQWY9Bl7r8s4mRg+ouzOlW0VYBery+g1WSb+HexdM6RFBUzp
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
A+URgvMIyisE5xWUZwjOMyjvEJx3UB4iOA+hvAQ5L6E8BTlPobwFOW+hPAY5
j6G8BjmvoTwHOc+hvAc576E8CDkPorwIOS+iPAk5T6K8CTlvojwKOY+ivAo5
r6I8CznPorwLOe+iPAw5D6O8DDkvozwNOU+jvA05b6M8DjmPo7wOOa+jPA85
z6O8DznvozwQOQ+kvBA5L6Q8ETlPpLwROW+kPBI5j6S8EjmvpDwTOc+kvBM5
76Q8FDkPpbwUOS+lPBU5T6W8FTlvpTwWOY+lvBY5r6U8FznPpbwXOe+lPBg5
D6a8GDkvpjwZOU+mvBk5b6Y8GjmPprwaOa+mPBs5z6a8GznvpjwcOQ+nvBw5
L6c8HTlPp7wdOW+nPB45j6e8HjmvpzwfOc+nvB8576c+ALkPoL4AuS+gPgG5
T6C+AblvoD4CuY+gvgK5r6A+A7nPoL4Due+gPgS5D6G+BLkvoT4FuU+hvgW5
b6E+BrmPob4Gua+hPge5z6G+B7nvoT4IuQ+ivgi5L6I+CblPor4JuW+iPgq5
j6K+Crmvoj4Luc+ivgu576I+DLkPo74MuS+jPg25T6O+Dblvoz4OuY+jvg65
r6M+D7nPo74Pue+jPhC5D6S+ELkvpD4RuU+kvhG5b6Q+ErmPpL4Sua+kPhO5
z6S+E7nvpD4UuQ+lvhS5L6U+FblPpb4VuW+lPha5j6W+FrmvpT4Xuc+lvhe5
76U+GLkPpr4YuS+mPhm5T6a+Gblvpj4auY+mvhq5r6Y+G7nPpr4bue+mPhy5
D6e+HLkvpz4duU+nvh25b6c+HrmPp74eua+nPh+5z6e+H7nvJx4AmQcgXgCZ
FyCeAJknIN4AmTcgHgGZRyBeAZlXIJ4BmWcg3gGZdyAeApmHIF4CmZcgngKZ
pyDeApm3IB4DmccgXgOZ1yCeA5nnIN4DmfcgHgSZByFeBJkXIZ4EmSch3gSZ
NyEeBZlHIV4FmVchngWZZyHeBZl3IR4GmYchXgaZlyGeBpmnId4GmbchHgeZ
xyFeB5nXIZ4Hmech3geZ9yEeCJkHIl4ImRcingiZJyLeCJk3Ih4JmUciXgmZ
VyKeCZlnIt4JmXciHgqZhyJeCpmXIp4Kmaci3gqZtyIeC5nHIl4LmdcinguZ
5yLeC5n3Ih4MmQcjXgyZFyOeDJknI94MmTcjHg2ZRyNeDZlXI54NmWcj3g2Z
dyMeDpmHI14OmZcjng6ZpyPeDpm3Ix4PmccjXg+Z1yOeD5nnI94PmfcjHhCZ
ByReEJkXJJ4QmSck3hCZNyQeEZlHJF4R/5dX/B+eEZlnJN4RmXckHhKZhyRe
EpmXJJ4Smack3hKZtyQeE5nHJF4TmdcknhOZ5yTeE5n3JB4UmQclXhSZFyWe
FJknJd4UmTclHhWZRyVeFZlXJZ4VmWcl3hWZdyUeFpmHJV4WmZclnhaZpyXe
Fpm3JR4XmcclXheZ1yWeF5nnJd4XmfclHhiZByZeGJkX/n954v8DYLShqw==

                "]], {{{0.2001221219824351, 0.}, {0., -1.}}, {11., 0.}}]},
             
             ImageSizeCache->{{166.04211008933163`, 
              184.18698793373272`}, {-117.92274553833488`, \
-33.55056393263749}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.2892725660509203`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "2.2017738773326005`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "2.0648188152213045`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.939596919885256`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.5716083753120929`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.2892725660509203`}, {
               Style["75%", Bold], 2.2017738773326005`}, {
               Style["median", Bold], 2.0648188152213045`}, {
               Style["25%", Bold], 1.939596919885256}, {
               Style["min", Bold], 1.5716083753120929`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, {}, {}, {}, 
        {GrayLevel[
          NCache[
           Rational[5, 6], 0.8333333333333334]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
wPEm7xPcOpQp4hfbOEzRQMq9CZOTZoSycLO+JpGzNPBlh53T6sxQJgTUi2QL
NPD+T5va70cusS+y9O+zV2ig8mb+hOyLYezoar93MZ7N1/tTatdec5n1K5if
qt2igbGRs8VTkiPYq8kWka57NGBl+6Pt4M+RzCu+5lj8kebrT/7HbnnbaNbe
7P5G/dMaKCicOr/3+iss2f+Q6/IQDWTcOutoKb3KFshmsftRGkhw7OzaL/E6
k7ub9G17SwP954guCBE3WFh+VRuPZA3csfx2LJzfZJMmJ0gy0jUQE/Zka3S3
O6wybndZlxcaEDsOPVwYG898e0x77vVOA+Uys+ne4++yvv4d4p6XaODZfbZt
XmYieyktvWD+RQMtR3ayb7Emma13j9277ZcGflzp08PAJoW1zfdxf9OkgXm/
Tt6sN0tliYIwq49WA7uGnr66ZNgDNj/OeNQ+Ay3E/pe24KvnIyYzLe5R1F4L
qnZZbUfmZLBQv2jdIaZa8Ag+nLD1NmcTpRt+HbHWwluL5O7vDR6z8lVjC0oH
a8HVTP253Z4n7FCe7qNRo7XQFLo/qkbvGesjvLtyUtDCmScpC4fcfM6y7lwK
qHbUQo5NVFDw6iy2ztTDe+I8LRxdUJj4acJL1sZv+OILS5p/7jX/V8zgHJYg
Udv+dtdCqgnbFzT2DZu3KnuA/UYtrF/m43Jp2DsmyT3f4fKO5te72aL8kHMu
C2ErFI0Hm3/+N9D4/qE8NuHOwMqZAc33cznL3615npR1l2ZfPa+FWT9qgq+2
KWQHjz++q7qshcEyA8XptUXMWnLy4vwYLbTr963tgMJi9nzlvwdvJ2hhl+RF
padTCfPMtfbUfaCFn0m2dqOLPrBWrHbOkida8I09Ue+5/hOLu/1wTHKOFhbG
vzbj7cqYc/djFq2KtHDE4tyThsefWeMxZ4NVn7XgODFp2rLMchbcZFb78LsW
LpiPVOTEVLBxK38Ud6zXgqzkVKTv+Ur26V0yrFNq4caDDibjjn1hQk+e/5+O
iNsnG6vO7q9i7YuuvWitL+Kt+jc+HrW3mlWeCHiYZizivaJcF/P9X1my3eZ4
93Yi3tTf/VLq0W/siGLBlfadRfxO9oyaqDPf2YK7E4LTTUT8Nl9pJYn4wfqt
sQrwNBfxoPiNb3rf/cnk5gb7O/cS8Z6/fE+GPK1hrwp/b8nsK+LXryTtulPy
i4WdyF+9YZCIfzm75M7Dv7+Zl13aIhMbERdim1520PvLmCLc6dkoEW8Tt6ZQ
3bqWtbvra7t5nIi3No05siSkllV6rP3HjIn4iZ95A59a1rEk8zkDsu1EfNSs
xEm5sXXMt3CU+VYHES8aMGKN+bB6tuCEaQfLWSJutUJXMyW5nvW1E+u9nivi
6yNaHygd1cBk8q/yHQtE3GuOxPRAcgN7mZDz23qxiPuLPox8NrSRXfJIrHi3
XMRTRWP/2Mc0sg3mIYV7Vom4tqZ3Wlj3JjapcG92P08R/zjmWqW7XxNrd2Jl
esEGEe/0cYCV0NDEKmwd7x7YIuJ/Dpn2fe0qYYnyIdcGbRdxR9cR1okpEuab
0Oni+93NP49Ncg1pK2UuHooTvgdE3OTZ6NOD3aSsj3n5gWFHRPyMm9V16zgp
kxU88/nkJ+Ir3/qqRzVIWXbArTXHTzX/+xn/Xz1tZCzU9sySkedEfHKoZ78Y
DxlbL982pzxYxG0bG6yCg2RsYsKSKSfCRPzUTumyx+ky1tbDdsyYqObrN4hL
0ymVsXKzfoOqron4j/khN8Y2ylhiQWuLwJsifuzHP+vmtJCzwwENHSfEi3ix
2bBhY4zkbL5tif73JBEv7XBq8E8DOesjz1CeSxXxvpNKb3loZUwaf/UvS29e
D7oddB/8lrGs1f5fajJFPGTkuMD6Zn8earapOPi5iE/fa3Z6QKKMrStweWX3
SsSlGa2Vh47L2ISA8fD3rYgrZ9rPt3aVsTa2lkmXCkTcvfes5ZPMZeyzTC9m
Wknz+srVFuuXSVlC/K/QhtLm5xlYZJIRJGWHVuediqgU8bz/7DOuOkjZPLPU
QzO+iXili9amZaOE9S64vE1aI+JDXrWxHXJRwiT+h9deqRXx363To7zHSFjW
ZM9ls5tEvCJl7trBeU3soszJWSkX8W72jy7cX93E1saPnBqjEXHN2clbN0sa
2YTV3cfNayHmmQ3Te6cfbGStzURDtPpiniTfqtUYNLKy/GrLW63EfOcAnVaX
TzSwBP9XnV3bi3m/ufe8Na0a2MHJdw1bdBHzli+nNfj71zNnWZA6rruY+4xZ
Mfdmy3pmHb+nblFPMY/KMHn/ZF8da3J3q9azFvPGieL8iZJa9qKHQ0liPzGf
H+TeYe/6WhaSP/j1ssFintPO70fWk79srX/HTKPhYr62e6c/N+78YeMny5NT
/hHzt/lHQlyCf7NWsrIbbuPFfMaJUMXhg79YWdzTsDaCmIsyJZaV62tYvPvN
wAdTxHxRsdGuLot+sgM9An1XO4p5QoWFAI4/mHP+1h0dnMR8Sed6wy0TvrNe
/ovXZziLm59347KHw7+xRmHyirWuYj500qpV5oO/sufSPvO7LBHzy7nVlzoN
qmbBca0cHq8Q89TyDcmth1UxT/f68V7uza8XKNqwcewXNq7H+6Hd14r5zCtx
xy84VLJW+em9nnuJuXy9aX7u0gpW6nel6xZvMXeoSh25fmc5ixP8jM13iPmG
m2G37Ed/ZgekXtrsPWJ+8NSZ8Pl+pWxu3PyGrQfF3LjY993iHx+Zlfu4b5ZH
xfxagJAR4fqBNZpafHztL+Y3/Eftmlfwnj3La/l252kxP9RV435xeTEL8qt5
3Pt88/2N/qo8LC9ka4TclNwQMQ/JbX29S3QBGytNubn3spjLBmZETv03nxnH
hYX3jxbzjn+Cq5XmeezTqkNnC6+Leb73bLMODe9YnOmaowdvifnmzCMDk26+
ZfvzZu0anCDm0xzDfYYFvGZz/EZ4lSQ3v5/T626dj71iVoKJ25E0MX/53WRU
9uVs1iDRuNhkiPnPauW3a29esKd3qhxLH4u5Yfn7IdJuz1nQqpcT/V6IeeKb
ghT17qfMwzTBZlRO8/Pqtza8VvKYjcm70LvinZhfjTnZW3s8kxn57TY5Wdh8
P+mbpzvbcPaR/dd67Acx959+MbpHWTq7LZkqri5rXu/7otfdOPSQ7bszqCnw
i5gHqW4aHXVKY7NXdfgx4buYg3vu5Hp2n1mayj59/yXmp9Pg9QCXe6w+t/Td
+ToxV4SOP7bpRBJ7evzJU0Ei5push80zrLrLLrDY1F8KMb9fFVExeVECWy05
dTtEK+YTNkfuKPtwh4254xM5RVeH2wyOn1k++hYzXLXofK2BDo+50CpsSdYN
9qG7cDystQ7fuDH72iS/6+x2bu89Dh10+B6T7XYB26+yvceNNzV20eGjjp+b
6xYYzZxY3cpIUx1OfYGFpMh1psX//hl/H+j38fWAXg/fD+j98HqArgevF+h6
8X6A7gfvF+h+8XkAPQ98XkDPC58n0PPE5w30vPHzAPo88PMC+rzw8wT6PPHz
Bvq8cT0ArQdcL0DrBdcT0HrC9Qa03nA9Aq1HXK9A6xXXM9B6xvUOtN5xPwDt
B9wvQPsF9xPQfsL9BrTfcD8C7Ufcr0D7Ffcz0H7G/Q6033EeAM0DnBdA8wLn
CdA8wXkDNG9wHgHNI5xXQPMK5xnQPMN5BzTvcB4CzUOcl0DzEucp0DzFeQs0
b3EeA81jnNdA8xrnOdA8x3kPNO/xPAA6D/C8ADov8DwBOk/wvAE6b/A8AjqP
8LwCOq/wPAM6z/C8Azrv8DwEOg/xvAQ6L/E8BTpP8bwFOm/xPAY6j/G8Bjqv
8TwHOs/xvAc671EPAOkB1AtAegH1BJCeQL0BpDdQjwDpEdQrQHoF9QyQnkG9
A6R3UA8B6SHUS0B6CfUUkJ5CvQWkt1CPAekx1GtAeg31HJCeQ70HpPdQDwLp
QdSLQHoR9SSQnkS9CaQ3UY8C6VHUq0B6FfUs/H89+//0LpDeRT0MpIdRLwPp
ZdTTQHoa9TaQ3kY9DqTHUa8D6XXU80B6HvU+kN5HPwDkB9AvAPkF9BNAfgL9
BpDfQD8C5EfQrwD5FfQzQH4G/Q6Q30E/BOSH0C8B+SX0U0B+Cv0WkN9CPwbk
x9CvAfk19HNAfg79HpDfQz8I5AfRLwL5RfSTQH4S/SaQ30Q/CuRH0a8C+VX0
s0B+Fv0ukN9FPwzkh9EvA/ll9NNAfhr9NpDfRj8O5MfRrwP5dfTzQH4e/T6Q
38c8ACgPwLwAKC/APAEoT8C8AShvwDwCKI/AvAIor8A8AyjPwLwDKO/APAQo
D8G8BCgvwTwFKE/BvAUob8E8BiiPwbwGKK/BPAcoz8G8ByjvwTwIKA/CvAgo
L8I8CShPwrwJKG/CPAooj8K8CiivwjwLKM/CvAso78I8DCgPw7wMKC/DPA0o
T8O8DShvwzwOKI/DvA4or8M8DyjPw7wPKO/DPBAoD8S8ECgvxDwRKE/EvBEo
b8Q8EiiPxLwSKK/EPBMoz8S8EyjvxDwUKA/FvBQoL8U8FShPxbwVKG/FPBYo
j8W8FiivxTwXKM/FvBco78U8GCgPxrwYKC/GPBkoT8a8GShvxjwaKI/GvBoo
r8Y8GyjPxrwbKO/GPBwoD8e8HCgvxzwdKE/HvB0ob8c8HiiPx7weKK/HPB8o
z8e8Hyjvxz4AqA/AvgCoL8A+AahPwL4BqG/APgKoj8C+AqivwD4DqM/AvgOo
78A+BKgPwb4EqC/BPgWoT8G+BahvwT4GqI/Bvgaor8E+B6jPwb4HqO/BPgio
D8K+CKgvwj4JqE/Cvgmob8I+CqiPwr4KqK/CPguoz8K+C6jvwj4MqA/Dvgyo
L8M+DahPw74NqG/DPg6oj8O+Dqivwz4PqM/Dvg+o78M+EKgPxL4QqC/EPhGo
T8S+EahvxD4SqI/EvhKor8Q+E6jPxL6TU9+JfSinPhT7Uk59KfapnPpU7Fs5
9a3Yx3LqY7Gv5dTXYp/Lqc/FvpdT34t9MKc+GPtiTn0x9smc+mTsmzn1zdhH
c+qjsa/m1Fdjn82pz8a+m1PfjX04pz4c+3JOfTn26Zz6dOzbOfXt2Mdz6uOx
r+fU12Ofz6nPx76fU9+PPAAnHgB5AU68APIEnHgC5A048QbII3DiEZBX4MQr
IM/AiWdA3oET74A8BCceAnkJTrwE8hSceArkLTjxFshjcOIxkNfgxGsgz8GJ
50DegxPvgTwIJx4EeRFOvAjyJJx4EuRNOPEmyKNw4lGQV+HEqyDPwolnQd6F
E++CPAwnHgZ5GU68DPI0nHga5G048TbI43DicZDX4cTrIM/DiedB3ocT74M8
ECceCHkhTrwQ8kSceCLkjTjxRsgjceKRkFfixCshz8SJZ0LeiRPvhDwUJx4K
eSlOvBTyVJx4KuStOPFWyGNx4rGQ1+LEayHPxYnnQt6LE++FPBgnHgx5MU68
GPJknHgy5M048WbIo3Hi0ZBX48SrIc/GiWdD3o0T74Y8HCceDnk5IF4OeTog
ng55OyDeDnk8IB4PeT0gXg95PiCeD3k/IN4PeUAgHhB5QSBeEHlCIJ4QeUMg
3hB5RCAeEXlFIF4ReUYgnhF5RyDeEXlIIB4SeUkgXhJ5SiCeEnlLIN4SeUwg
HhN5TSBeE3lOIJ4TeU8g3hN5UCAeFHlRIF4UeVIgnhR5UyDeFHlUIB4VeVUg
XhV5ViCeFXlXIN4VeVggHhZ5WSBeFnlaIJ4WeVsg3hZ5XCAeF3ldIF4XeV4g
nhd5XyDeF3lgIB4YeWEgXhh5YiCeGHljIN4YeWQgHhl5ZSBeGXlmIJ4ZeWcg
3hl5aCAeGnlpIF4aeWognhp5ayDeGnlsIB4beW0gXht5biCeG3lvIN4beXAg
Hhx5cSBeHHlyIJ4ceXMg3hx5dCAeHXl1IF4deXYgnh15dyDeHXl4IB4eeXkg
Xh55eiCeHnl7IN4eeXwgHh95fSBeH3l+IJ4feX8g3h+/DwD0fQD8vgDQ9wXw
+wRA3yf4n983+D8WaADj
                "]], {{{0.12084792950950389`, 0.}, {
                0., -1.}}, {15., 0.}}]},
             
             ImageSizeCache->{{193.9110275536702, 
              218.54706552705477`}, {-104.3382166974996, -33.43229964759653}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "2.088623186838416`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "1.685307554344674`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "1.6718189835969126`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.560132806231479`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.560132806231479`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 2.088623186838416}, {
               Style["75%", Bold], 1.685307554344674}, {
               Style["median", Bold], 1.6718189835969126`}, {
               Style["25%", Bold], 1.560132806231479}, {
               Style["min", Bold], 1.560132806231479}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.8941176470588236, 0.7098039215686275, 0.7490196078431373],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlm3dcjm/499O4s7OSWREhe1M4Lzt75Vv23mSVioyQFckoImQTESUhPldE
ZEVIVnuvexfC0/P6Hcfvj+fxj9f9at33dZ3XeXzG+2w1f/XkRYYGBgaWRgYG
//d//rdiTfDFc03SEerrNDd6yRlR0nHtsOBO6cjtO3nJy91nxeo8x6yDUjpy
ClbM/LrvvFCfs96+yykdc2Z5blsTd1G4za6w3rw0HYUjpoy93OWK0DdNwnrv
dGwwStny91OY8Px4efbygHSk/vfj6e9H4eJXwNY/cy+kI1a/ue0Z9wjhPdY5
xDkmHf0dt10d3e22+Gva1WH8q3Tsrb+qzr/6UWLbE8WXYenpmJ327+jEltHC
cOsPTwdtOnrHrt+b5xQjdtpHW/SonoG28oJxWx7cFwr9gej2LTJwut/SVmlT
Hoo9txZNteqWgU6+e16uqSeLmqsGas2HZeDA7esOrw/Hif3tzY/UdsmAfbxD
5eweT0Td7OLuRisz8Mo/7M9BZbwIOBOf9HNrBk5tarA2980z0WBGyGrlkQzc
WfJZ8+nNcxHY2K1u3uUMuJTsTHinShQW78eEf39Q9fXmqauk/q9F8AGbsR/e
ZmBbswatdlx6K5qP+l2YmJWBNgHHzD1avhOnjJP3xpVnIEn7+mDWpvfCSg5r
H1MrE4rc43+sy5LF2U3bE25YZcJw9h4LeHwUNn2nL77YMxMPut58Pbhxirio
7m4SMjIT9o9lWL38LNrdqHHh8IxM1Kjz87Yc9EWELcsYsnd1JjI3WNTw9vom
OrW9l7F1RyaU7sUOx9b/EDfSA7ZtOJaJ/6YEdjs3JF10C1lqtepaJvrBbtZE
5wxx21l6tACZmDV/YViqR6bo1bDJrOnJmZibqvvR+0KWiH5T9ntiXiZe1/68
ZOK3bNFvX8KJkb8zETZQfmVqnSvuDz/Tf5BZFr67fe3VeXWeGFDN43Mvmyw8
P5H0Z8eLfPEodrxHx75ZaL3n1+K4LoVC8rRt3HpMFgp+RU7ef7pIPO75N6rJ
nCy8Xb3WanOTEjGs7OMUs/VZuOchnWgZUiqehYWrTXZnYcuV2rvcGimF42Lf
Q5UnstB42JnutmlKkdhqVjfNjSxcu5syIDlcJcZ+7/W24HEW+qfeH9Bmm1q8
OV7bNf1TFlZOCev6YKpGTHLKrp1SmIU6LnXe9OyiFclmsdde/636+WXDC21q
6MTUl0dGxzfIRqdtT9Ka5+pEyq4VBfdts5F2v6De5Xi9mDZk6J5b9tkYkjFg
/dgL5eLrn2btrozPhtNB0eHgzgox65766en52fi1u12HsoU/Rbpb4sLADdk4
+dCtrGDYLzG/2zmj/fuyEX191IDfNr9FdpHXue2ns6FtOejLqWqVYvHlSYO9
bmfD8Y20auz3SpE/v0P66mfZeDL618jt0X/EcstqWxd/ycbcv0YjYvf/FcWp
n1vOKs3GVDe7q15z/gnXwIjYKYY5iHxZvMnSwkBSTtwzY3TjHDgkz141wttA
Wld77i/JLgeLFYmbfv0wkLQJfYP7DspBznj/BUaimrRhh1m/LpNz4GFeq0fn
kGpSxaC8T20W5+BV6PErI/XVpI2/Hrk335iDMee1wbbjDKXKO0GNGvjnwCzU
avC5UENpy1rXyOrncmA16FbAMaWhZNB5xOR/d3JwUhPllT/ASNqe31Kle5ED
fWiXDt6+RpLxBd3B4u85eHrTw0EkGkm75rzukqXKwfifMdk2tYylGs0vvk41
ycXqv1/rtHY0lvw+ea9MapoL5bXFi/r6GEt1DjvVSuici+rJbxcsiTaWDo7r
FPZwcC5SVpYPeZBnLNWvYTwqamouAlfvzx9sbiIdif+aF7YsF/FtRz8xEyaS
+bbIXWc350IzpsnJQYtMpOMOfm2PH8pFnQUOTiW7TaRm5fPj/S/monJ0zkVx
2UQKuW2/wPdeLmJ/HY+f9cREsnRtYOj9OhfFl/UGbt9MpNAOhaHrMnJh63N5
xm21idQ6J04s0+XCPU0yG6tQSBdCg3/MqZGH/OaN63tYKCTbmWs3/9cyD8ln
6+xbYauQrliMajGuex5mGVx1XNBTIdklWz8YOjwPNiP3dA4epJCu+1dMs5+W
B5ddz444OiqkLqOTKrqtyoPrrjPR1ycqpAiTK8fa+eSh49Lv5gYuCqlH3NY+
loF5mHL82JdNsxVSlLfzx0ZX83DRMnmg80KF1KdfV7daD/PQMzRI/WyZQorR
KBoavsvD1PGGgZWuCsn+5o9bFdl58HDWWdm6KaTY5dETyyrycG4Qlq/yUkiD
bP3Lcmrn48TzMRHlWxRSXMYi/2/W+bAybdMqZ6dCGnpqYOfkXvlQnNjlM9FP
IT11MX/1wjEf2XdiP4w/rJBGNipZLs/MR5zNrcZlwQrpxdv4GnfX5CPPP8zY
/pxCGuMXciV8Zz6q9gRd92sK6fUIt5EXjufj0pCA+PdRCmmi4djcE9fzMXRe
TEJ9KKT3D218D8n5VeuhyY/vLxSSk9dvmz0f8uEe0GSf1UeF9KlX8uMt+fl4
n3LJ8l66QnJRhs1zr8xHVJfrlbuKFdKXa9sNVtYrgPGV3elzKhTSzCXTz8xv
UwB/k+xB5sam0o/WPQZN61eAqwrjiPVmptLcHzW+TxhbgASHTUuHNjOVMoMz
No2YW4Cso60eObYxlRZOvddsoFsBclsU3x3W2VTKrXfoXs89BTBZ2vuyrpep
tPTVUhe7kAIsDMx+buFgKhXulsqtIwqw9mli8SJhKq0c2iTIIr4AddO8W50Y
bCqV/i3rVfdzAd5ez5zvWvV6zf2EZOPiArRVXh91apCppHY/s+73vwLsb555
L7OfqeTW3aO+umEhuv+L8q/sairpi8dH5LcrhMHzjMHXbEwlryu2E9IcCmFj
/W3/7Yam0u8Ff0s+TihE9KdOhl/+KaTNVp/2v1pQiMsl7qdK8hTSvy/hHZ94
VP28OsLx0UuF5BPkm3jPrxDHw2dObV11f4wmz1oWcaYQe1q45et8FZJvnd7V
L0cW4vvJbi7NZyqk6i9qXz6VUIgGuicbN3VWSPt2Zg8/+rUQoZcX5Jj8MpFq
S7HZ+8oKYW3cufmtOBPJ//eRHT5GRai4c/zaxp0mUr27K1p7WhRhfPACackQ
E+nwuqFxrh2LkBhY7eT238ZSoy7N5y4SRQiq990n7aaxFFSg/jtjShGSXr07
dWyOsdTkYuKpyUuKcKyXt+PLmsbSibnnBozaVIRRO1uOPXvLSGrRYuNXcbAI
NaJ/Bo5wMpJOp0za2Od8UdX87/WtRG0oWR/p0LTz3SKct53S7+0BQ+nc+Gox
Ni+L4P0y8G67toZSm5qp/zVLK0JDx92Z/e5Vky49jdDV0xTB/1ajgY6jq0kd
fPYcNTUtRkpaqHz6s4F0bcDcnn+bFSO/1o5JexYaSJ0r+r7XdinG4a6J8y99
+yduRpqtLRpSjP+8ctNOF/8V3VfnmWX+V4x2UkB0yM8/ItIONz4vL8b+X4WZ
Q43/iN65QePebilG6gfdlX51KsXds67FTw8Xw6zvhx2W5r9F/1kj/GIvFSPP
86nlsRa/xIMmlnaR94uxNKds2uA2P8XAD7rnV98Uo4F76cyYThUCB18vCc0s
xgzLzzGH+5SLwWMuKo7pizGm04CT84boxRPF5osHapbAOHBSw4iJOjHisdOw
nZYl0N5yWW44Xyueb+6UtbFHCfy+lR38uEEjRvc33r52RAkuWH8/cfqgWrzS
frVeOr0EBg6HZydeV4nxEZGY7VqCS13czR++UYqkFX6zp24vgYXFVnGhqExM
brfgz5igEjwcahN+d1ip+JBpHzIkrAT1w8bkjLhaLP473cCh/6MSzP77rNb7
pkXi87TC1K7vq14veVcnIahATDd/7GmbW4JV2X+++Fjni29JwRYtf5Wgw+Kz
D8fezRWz96+Nbli3FJEb+ifNnZEjMkaOmlqzdSl6P7E+kFs7WywwaqU16FOK
jyefuetfZoqcRxWHy0eVQjXZ703w8QyxZGNS99JZpehRNG3ly3XpoqD3laTs
taVw3tqltSrqh1ih2rr6q28pOs+se8XozDdRct257vvgUhwZcMvW8/wXsXpp
1/Dn4aV4fHLw58y4z0JlYzoWcaVQ+LqsjP/5SaxP+1F452Mprt+bbbh/9Eeh
OxG993pBKb7L9VsHRyYLj//825//U4qZZoXhA3u9Fz/rL04Irl8Gj8ZbXuJl
ktj0euDigLZl6Dv0sfdd9Rvxd4+5ye7+ZbgY+XShn+crsW1YyfnN48pg0qo8
+792icLQ4OkQt3llmD68e6OVfxLEzgchGcvdy9DULv5U459PhcLDbdu8vWX4
tdOs8/4m8WJPj7FWLqfKEH/Ix1qa/ljULLV5NP5WGZanLgrcFCuL/Vd/zxz+
tAz654VTsPGRqLso+bdDahkuWHwoPB/9QARYXzvRo6QMj5U9I6Z3uCdquMaF
HDVQYuM0A5vrb6NF4pjOxQdrKmG58JvzhktRwq9DsINfIyW0+TVX3Ay7Lcaa
mvjtslTCa2bHQ0tSI0TdnDVffNor0fZvh2OBc26IN4+/ddjcQ4nKO8P9hv13
TQSEOnp5DlCiqTwuLuzQFTFxS9Tz9SOUMHhQs+BD7UuiwUzrJqsnKlH79/Sg
uk/Oi/f99y9ZPl0J05bb72fePCuOWlREL1qoxPVhltP6nj4jnHQLFPNclVgc
YHDSt3+IaJz8dupMTyWSA3pfFXbB4lOEw0Xn7UpM+TAodPWyIHHc/7J28n4l
HC4snri97IhwWdlw2PggJXpMycl9FHNINBu99cioUCWSDjTacdf7oPjarihz
WJgSd+cYSMP1fiLExLmHFKXEuXsP3938sEfMynrs4/BIiUDbGqXjzHYJy7gu
7/o8V2JlSnHYgNM7RNrpE9Y93ivh272k0nmjjwj1Vqzp/E0Jt2/PwhfbbxXz
pq9D+1wlbo9NM21r6C1a9/tRt41SCZVBv3NPB3uJLPPRs61+KZFZWb/nMuUG
cUFzJ7yZsQprVhzet1zhLha9a/XHvK4K61rkB0zZvF7Y3jwwtn4TFSxXpUxP
nrBO5O3/ebJ2axVy5DuL7nitFVeWLyoy7aRCsqe56ZfyNWK54zt7oz4qTDSC
Rbfna4Sd7cB9f4UKHxvW/36zYI0oNrqa+nOUCm9GbO7qPHOtuJ7RqINuigod
nu37bNtqnXDFNk/lLBV2SkcsW9mvF11OFScULVFhT8KoNaPC3IRyo4tF3loV
Wjc3sbzovkFEuMQvztykQpHng5oDz3qKdX26RX/3VeFY3RB7656bRI9GISap
B1VILezbakmPLUKrMp36IVgF/yennp1M3iai3q6/8Pa8Cp82FvgufL1dbAhP
0ySGV73/839eRdXyFX39xgx9dleFxlOsHAYf3S0qlt49HBengvvjlDXjV+0T
90bYZMa+VOHWu5hxkacOiI1tDnaP+ajCwQm3PVYFBQgHw9/bItNUWOZtY7fg
0GFRmbY46UaBCodv74hTxB8VDx++twrTqFDjiail7HFMbDk5aPXFPyo83bFl
l2FWsBBeYY9CTdXY7rX028rUEGHg3LhuSH01zl0sLkquEyriem2fday5Gvcm
V3MenHJWbG9Qev1wWzUmRw2qp351XgxVTqs80FWN26o1WeGqi8L4zdMxe/ur
EW7ee8Epxyvi2bXuJ3cOVcNriFSvzccwsWvvqcKt49RwfxFlK58IF45Lathv
clZjgavV/R3jI0T14e57N8xTw+JhQcq7slsisXXG57Ur1AibZNWuXWSk2Gcw
rv0qdzXs4tLzFp24I8b+iPFYulUNS9eWQ9Zfvitqx7ZJWLBXjfbp0+b3+nZP
vAkOaDzniBoPbPoFzrOPFf4elYumn1Lj0tFeMxvEPxITpy69M/WyGrJhzyVH
H8qiXs8PxpNuVX1+u/XzznZ7LN7Xk5zGPlDDcUbW+eqxT8SR0mvnRz5VwzS6
1pRjc58Kp1cWmiFv1dh73KegtlWCMA/bMWRQqho7Li7+2qTiufi0u+xQ/yw1
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
XMp7wXkv5cHgPJjyYnBeTHkyOE+mvBmcN1MeDc6jKa8G59WUZ4PzbMq7wXk3
5eHgPJzycnBeTnk6OE+nvB2ct1MeD87jKa8H5/WU54PzfMr7wXk/9QHgPoD6
AnBfQH0CuE+gvgHcN1AfAe4jqK8A9xXUZ4D7DOo7wH0H9SHgPoT6EnBfQn0K
uE+hvgXct1AfA+5jqK8B9zXU54D7HOp7wH0P9UHgPoj6InBfRH0SuE+ivgnc
N1EfBe6jqK8C91XUZ4H7LOq7wH0X9WHgPoz6MnBfRn0auE+jvg3ct1EfB+7j
qK8D93XU54H7POr7wH0f9YHgPpD6QnBfSH0iuE+kvhHcN1IfCe4jqa8E95XU
Z4L7TOo7wX0n9aHgPpT6UnBfSn0quE+lvhXct1IfC+5jqa8F97XU54L7XOp7
wX0v9cHgPpj6YnBfTH0yuE+mvlnmvpn6aJn7aOqrZe6rqc+Wuc+mvlvmvpv6
cJn7cOrLZe7LqU+XuU+nvl3mvp36eJn7eOrrZe7rqc+Xuc+nvl/mvp94AJl5
AOIFZOYFiCeQmScg3kBm3oB4BJl5BOIVZOYViGeQmWcg3kFm3oF4CJl5COIl
ZOYliKeQmacg3kJm3oJ4DJl5DOI1ZOY1iOeQmecg3kNm3oN4EJl5EOJFZOZF
iCeRmSch3kRm3oR4FJl5FOJVZOZViGeRmWch3kVm3oV4GJl5GOJlZOZliKeR
mach3kZm3oZ4HJl5HOJ1ZOZ1iOeRmech3kdm3od4IJl5IOKFZOaFiCeSmSci
3khm3oh4JJl5JOKVZOaViGeSmWci3klm3ol4KJl5KOKlZOaliKeSmaci3kpm
3op4LJl5LOK1ZOa1iOeSmeci3ktm3ot4MJl5MOLFZObFiCeTmScj3kxm3ox4
NJl5NOLVZObViGeTmWcj3k1m3o14OJl5OOLlZObliKeTmacj3k5m3o54PJl5
POL1ZOb1iOeTmecj3k9m3o94QJl5QOIFZeYFiSeUmSck3lBm3pB4RJl5ROIV
ZeYViWeUmWck3lFm3pF4SJl5SOIlZeYliaeUmack3lJm3pJ4TJl5TOI1ZeY1
ieeUmeck3hPMexIPCuZBiRcF86LEk4J5UuJNwbwp8ahgHpV4VTCvSjwrmGcl
3hXMuxIPC+ZhiZcF87LE04J5WuJtwbwt8bhgHpd4XTCvSzwvmOcl3hfM+xIP
DOaBiRcG88LEE4N5YuKNwbwx8chgHpl4ZTCvTDwzmGcm3hnMOxMPDeahiZcG
89LEU4N5auKtwbw18dhgHpt4bTCvTTw3mOcm3hvMexMPDubBiRcH8+LEk4N5
cuLNwbw58ehgHp14dTCvTjw7mGcn3h3MuxMPD+bhiZfH//Ly/8PTg3l64u3B
vD3x+GAen3h9MK9PPD+Y5yfeH8z703kA8HkAOi8APi9A5wnA5wnovAH4vAGd
RwCfR6DzCuDzCnSeAXyegc47gM870HkI8HkIOi8BPi9B5ynA5ynovAX4vAWd
xwCfx6DzGuDzGv/veY7/A+2VQuw=
                "]], {{{0.14333059596543082`, 
                0.}, {0., -1.}}, {21.83333333333333, 0.}}]},
             
             ImageSizeCache->{{248.73468942714578`, 
              270.031270210416}, {-55.28980668158073, 17.482295854760366`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.301122959294224`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.8525258506734882`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.8226522781346803`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.7248783379985573`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.6772280925094489`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.301122959294224}, {
               Style["75%", Bold], 0.8525258506734882}, {
               Style["median", Bold], 0.8226522781346803}, {
               Style["25%", Bold], 0.7248783379985573}, {
               Style["min", Bold], 0.6772280925094489}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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

                "]], {{{0.0769967919255293, 0.}, {0., -0.9999999999999999}}, {
                22.83333333333333, 1.1102230246251565`*^-16}}]},
             
             ImageSizeCache->{{251.70998050849533`, 
              282.61322789348156`}, {-29.723246210657422`, 
              19.08497342286443}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.8871214806339599`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.7979438167866122`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.7545929031009203`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.7001873347194462`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.6341260448355969`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.8871214806339599}, {
               Style["75%", Bold], 0.7979438167866122}, {
               Style["median", Bold], 0.7545929031009203}, {
               Style["25%", Bold], 0.7001873347194462}, {
               Style["min", Bold], 0.6341260448355969}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, {}, {}, {}, 
        {RGBColor[
         0.9490196078431372, 0.8627450980392157, 0.43529411764705883`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlYjWv093dzdIgIFUXmdAqhTN03QqZMSaYUoiREjqkoQjJXpogQoUhK
kli3igyplCFz8zzsvYtSqbf3etd6//j9zh/O1SV7eJ77Wes7fPqt2rTAWVEi
kdxv/+P//p/++7dO27PmbB74RHp9gkVhLB5WF+y6mQfZl8YFdrp0hVkejZmn
9igPTsj03BxarrIX9m1Pg17lQZFS7zNfPMKZzcA5//b9kgdZbd2OxrZdZ59k
IReiKvJgFDPN6x8RwVY+LeswtjkPrlzw19jkeouVBozZ8VwjH6y3XzXJnx7J
Ni/2K5nfOx8ymj1fZky5wxr7Z9v+MM6HwJe5q4IdopmP1CBl/cR8CK3Q1H2T
fo+pP3Ef0TAnH3a7fv9i0BzDTh1+fHm/Qz7kzaw8qzA+lunYdejcZVM+1J38
ddH4WBy7arjY6+LefDBbZNjLUf6AGdWGVww5mQ8fNOdmrnB7yO4/lts/CMuH
WYubMssbE9g4f542KSYffuYX67y+kMhSbI+PzniWD32Sg61e2CaxWf2+XVua
nQ/Z/bMNIgY8ZTnVQ7VKC9p//2DiYD1VwZYnbvfZWpcP52U2Mn3VZ6zo4POa
NqUC2DR6SV2KVjLbsLDbiqPdC0Blx8jmjcYprN7A6U2vgQVQPfvYKr+Fqcy7
6u7Y66MLYLjewZx1/s+ZyqOWiBHTCiAmepKG15sX7PiBmT2e2hXAPgWbC4Z9
XrIeC875zVxXAA1Vzbcee79il/RL5B+3F4B398qY69Wv2aBKM6fV/gWQo6c0
aaJ7Orv70Dez9lz7+3Xp+fBby1tm7pc50etWAXSSeCh/u5jJYF6fKPXEAvAa
OXnUyxtZzLqPm+7p1wXQ23R/rxuH3rGs8gT/fl8L4E2fDxNMPbKZfbxqw53K
AphoLFsSvDqH5e2zdR7XUgCzJyiXFDu8Z65zr+a8+KcQ9riY2dqs/sBketJJ
C/sUgtOTXL2azR/ZrrKJ937+WwhrJ6t1LDz0iSk+OKK/wbIQHjjcDbO+mcsC
fD8fbbQpBI/Qji3m2Z+Zls3gZr+VhaD93+RHaSpfWYjuNteumwthe/SkHxpT
vrH+pcmfQn0KoWJJYbJ2wHcWGdtlmtGpQngUvL257ssPNsrHIS7+SiFYxy42
/Kybx5JmRxlOuV8Ia2S7Eozf5jErnaaTmcmFsHJpaOR2v3yWXjy9bVlO++fb
fdbpMS9gtvdPu5cVFoKK0s7YBoVC9n1P4VfP+kJ4sq57qdHLQuY8a8RMBZUi
MNsx/tb8oCJW03NvwjHtIihruqG+bnUx+68ofZDuoCJQm7ZzwzqLEtZ6T/f0
jTFFEGNj+Hm6Vik76O2iZDa9CELHGMqbpaWs88x4D1hcBGtGOwbsel/GzvZQ
zpvlUgT5p7+si08qZ30L59vk7igCt7bwsLBbFexm9OWkNYeL4MNy3/NDLlSy
4V7VRrLzRXB3V7ryhFNVLMF6/Hnv20VgMeNe/osj1YxrH1br+LgItt08tjs2
oIa9yv+47cybItj5+YRrxbFaNv/ugCLDb0Xg28Vk+q2ZUvZl15YF0VVFYO5W
dsQlS8pWTRdi/N8iiFNcAwPsZayiW2fTl52KYdIu15SMfBnbkrcs1Fa/GGaH
yy/ZuctZU9QtjXyTYtDqUu8d2SRn+3c27HRnxaB6t2fM48N1TGPa1LI/c4vB
6O7aO5669SxYK8juoGP7v/+Wr5ESVc96/8xL1fIoBodf6ocD+S8WHmlidtm3
GDSSFihnfPjFjHd4XRkWWAw51ef2rtzwm8VZvdZMuFoMI6566Q9XbmATu/ba
YxVbDIqarwYOCW1gL747V2WlFIPSgG9NJuaNzOZ27NIV74uhf8jSo8OyG9nH
/xRelRe1f76r9sNVNv5hDlPmmv/3qxiadJN9L3ZsYiWaodcVVUvgdai336eI
JrbpW0W3Ez1KwMU3f+L5qc2s4abFPr3BJaAS556TUtjMfLYdlEaYl4CRYvQR
i30tTH3ye4dR1iWwZ/qZzE99/7KTnQ3fCvv2n63sjH3hL+v1ddP4Oa4lMPTA
10XdHFpZWMSTW593loD5DPnQDS2tbKinRq+1ASXwNsYkziWkjcXwJQflISWw
OX3RebmehI/rFFG/J7IEupl+OeawXsKTP9ev0kgqAe/sMYHOCRI+88bkd2fT
S+CEhXV4vYoCz95ykg34XgKD+l93bVygwJeyH3fuVZfAffmtUSsuK/BCDePe
E1tLINp7cEfNSgW+IXdnwKvOpXAyLSniz2hFXh+e1rjIoBT8excEqPsoci8P
7XUFpqUwuGdk46BXilzZcvWHjbwUjjdOUeVdlfjRjjFTmueVgtr+f69a2itx
7U+tMYecSmH06LGXOl1S4qHXZvftvqUU4pZMSzxboMQHbQ45HravFOQ/n0an
DVTmdyeUtRgHlUK+47uJ/uuU+ZgOY9weXSuFNV3WjEmNUOZPP+z/PDWuFELu
JB5ZW6LMp119Nz07tRRepqc5LO2vwjM3GsQ7fCgFWc++nY84qHD78e4DKotL
ga3xm1p0VoXnqT0O3P67FJqSfnVakKnCXd6rKyirlYFihtUPoazKpWF2m072
LIOD6/+J6mOhyne4h3/vPaQM9tuo/F3kqsoVxsln3bIog59RlxsXn1Plh1V5
4ugZZZB64+1OreeqXCvn2JDkJWVQv6Gs77ZaVR5y+esZm/VlMOvEOefNPdW4
4YahKl93lYFu4c2bvyao8dsW27euO1IGkVtvT21YqcZHqjzPr7tQBsr954a7
+Kjxx++05vlElcHNtpUzLC+p8SmXHJ/+86QM2vLMSt0fqfH09XeNz78tg3nn
A9xr3qlxW/OWkIE/ysCi5V6vhFI1/k1pZof7Ne3v3zt7b2qTGl+TdXa7ZVsZ
PNq99GpnDXVedbG4+LVmOVzdtaA+sJc63+ZqZru4bzlM1TrjOre/Om8d7Ztc
OLwczpRm7Z0yTJ0fVMwcvnlSOZTWDJq+ebg675zZ+3LL/HJwttzqmjtSnZ+5
sL7T4VXlMHCK+nCf9p/1XRJ2a28th6IFPw65m6rziFGqFVf2l4Obv4HyzaHq
3FTB1t4kuBwCGhR+WvRT5wlvr7xIDC+HK0cKG416qHMeUjtq+oNyODQn9EOA
ujp/uXbitZzn5fDFTvXc2kY1Ps/sSFfHj+WwdcWV5rfFajy3LXdvVUk5jPXa
Mjs7S407pQ+q2dFQDvW3/y4/2H69ys95LldRr4DZph67Wi+r8S3Oya9P9aqA
TcMVV87zU+NNI7qM1R9aARe2+xkGrVXj+1pXRNweWwH5VjOG/pymxju+idQ2
n1kB/eULu9oMVOOBZ//sT1laAckFv0KbFNS43prp8rluFeBSXXxF8l2Vhw8/
7fhtdwUoK1WUesWrcuO/BRkuRytg9Gxj3WPHVXncq+ETf12sgAjrxTfnOqvy
CWf2RPreqQDT62eiCsep8tRV6Tqdn1ZA7c6LmS6aqnyOqa5/SEYF3N6QPqyt
QIV/aF73e9DPCgh+FW2a9kCFO7x8sCa2tgKaFT/tzT+kwkuClXKYpBJ6DrPJ
3bhEhW90mj8pvUslROW9rj5hpMJ//3s52r5fJfTJSLRxblbme5uq+hSPqISl
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
KChPxLxRUN6IeaSgPBLzSkF5JeaZgvJMzDsF5Z2YhwrKQzEvFZSXYp4qKE/F
vFVQ3op5rKA8FvNaQXkt5rmC8lzMewXlvZgHC8qDMS8WlBdjniwoT8a8WVDe
jHm0oDwa82pBeTXm2YLybMy7BeXdmIcLysMxLxeUl2OeLihPx7xdUN6Oebyg
PB7zekF5Peb5gvJ8zPsF5f3YBwjqA7AvENQXYJ8gqE/AvkFQ34B9hKA+AvsK
QX0F9hmC+gzsOwT1HdiHCOpDsC8R1JdgnyKoT8G+RVDfgn2MoD4G+xpBfQ32
OYL6HOx7BPU92AcJ6oOwLxLUF2GfJKhPwr5JUN+EfZSgPgr7KkF9FfZZgvos
7LsE9V3Yhwnqw7AvE9SXYZ8mqE/Dvk1Q34Z9nKA+Dvs6QX0d9nmC+jzs+wT1
fdgHCuoDsS8U1BdinyioT8S+UVDfiH2koD4S+0pBfSX2mYL6TOw7BfWd2IcK
6kOxLxXUl2KfKqhPxb5VUN+KfaygPhb7WkF9Lfa5gvpc7HsF9b3YBwvqg7Ev
FtQXY58sqE/GvllQ34x9tKA+GvtqQX019tmC+mzsuwX13diHC+rDsS8X1Jdj
ny6oT8e+Hahvxz4eqI/Hvh6or8c+H6jPx74fqO9HHgCIB0BeAIgXQJ4AiCdA
3gCIN0AeAYhHQF4BiFdAngGIZ0DeAYh3QB4CiIdAXgKIl0CeAoinQN4CiLdA
HgOIx0BeA4jXQJ4DiOdA3gOI90AeBIgHQV4EiBdBngSIJ0HeBIg3QR4FiEdB
XgWIV0GeBYhnQd4FiHdBHgaIh0FeBoiXQZ4GiKdB3gaIt0EeB4jHQV4HiNdB
ngeI50HeB4j3QR4IiAdCXgiIF0KeCIgnQt4IiDdCHgmIR0JeCYhXQp4JiGdC
3gmId0IeCoiHQl4KiJdCngqIp0LeCoi3Qh4LiMdCXguI10KeC4jnQt4LiPdC
HgyIB0NeDIgXQ54MiCdD3gyIN0MeDYhHQ14NiFdDng2IZ0PeDYh3Qx4OiIdD
Xg6Il0OeDoinQ94OiLdDHg+Ix0NeD4jXQ54PiOdD3g+I90MeEIgHRF4QiBdE
nhCIJ0TeEIg3RB4RiEdEXhGIV0SeEYhnRN4RiHdEHhKIh0ReEoiXRJ4SiKdE
3hKIt0QeE4jHRF4TiNdEnhOI50TeE4j3RB4UiAdFXhSIF0WeFIgnRd4UiDdF
HhWIR0VeFYhXRZ4ViGdF3hWId/2fPOz/ASdjNGs=
                "]], {{{
                0.13774893219696305`, 0.}, {0., -1.}}, {26.83333333333333, 
                0.}}]},
             
             ImageSizeCache->{{287.66397277976785`, 
              308.8882306798698}, {-39.749823831992785`, 
              16.517575132338365`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.0333784102780987`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.9408425724438695`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.818440182177929`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.7568133401664748`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.6966042981349192`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.0333784102780987`}, {
               Style["75%", Bold], 0.9408425724438695}, {
               Style["median", Bold], 0.818440182177929}, {
               Style["25%", Bold], 0.7568133401664748}, {
               Style["min", Bold], 0.6966042981349192}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9490196078431372, 0.8627450980392157, 0.43529411764705883`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
yRKYpj/IdzgnCePystsarJVgZVVJgtZRlXD0Rs9J5uslmO9u65J2uU74ehfS
2qVIEPC525Pi6nqh04O+n5w2STD82/bXIf5/hbgndzp23SJBZVN7u8hJauzK
C78oYZsE4p13u4IuqLNGrx+m++6QoHXKNk8nk8ZsQPmw70G7JJgd2KJQZ00T
tv7zc5fQPcrz/jOmR20LDfb4e2jMpH0SvAnW+fDuWDPWqubNuempElz8s+D8
sSAtFl47sWbeQWU9vDCLMdDVZocbPnksPSzBgKXJ04pKdFhlo+h5yWnK6+8a
wZZk6zEXzV/Zm48p6yE870fRUH0Wqxtbt+eEBFf8Pd8/DjJguYa1PdLSlesN
/n1mhRiyf6aLFp05rfz/DdvcAyYr542VWl52hrKf9nTMbIg3YmvaJv7j5yTY
Oa+io/52Y1Zkp9knP1OCp4Oy9bSyTZiJ87rlT7IksB3qmTOpzJSFuuvfLM2W
wE//sttOTTN2sNvWph9zJMiKbN/a0NOcffRqNeDnZQnenW1zp+c0C+bkvXd1
7VUJrLUamcQftGSzBtjkq3MJTk4MP+Hy0opl+x/R1r6uPN/1wqdLRtasIahj
gNFN5f5/uLmqZ0cb5j3y1Aar2xKUGx84MvG2DVsd5lbU4a4EnkHOwxIntWGF
4y8YuOVLEDpU0hncqC1rGek5rHuBBA9W+5+ZndqWjYq+stX7gQSFGyvK0nq2
Y/tnsWd+Rcr9Mdaasu9ZO1Yx76bp8McSPHtnsc4gxpbZL/IdFf5UgvQCu55X
m7VnM5cV7I58JoH3htM+4fvaswtJQ0pjXijrUdV6SZZbB/Z77VOr+JcSaOQ8
vpZ0rQNjm0LGriiVoJPzFnlnoB1bub30wLrXEjSN6duQ9dKO3d8z7v22txI4
HZ6+7uSEjkz/YEW71PcSLJj/Tt3nU0c24uiUiOMVErh5lHQYPcWe7U3/dvTc
RwmuR02szP1gz96djfmc+1mCebYtdHuPdWB2F0X7m1+U/SxAtzj3qQOLvjx/
WuE3Zb+ysj2p5ePIzvM/p579kKDvwh95jTMdWe2tpT/e/FL2wzFVF5ZbOLFe
95u4VVZLoJ3asv+4JU5sRdHqWdWicv286r7Pfe3E7hbrZNbLEgw6f+LkXk9n
pvdqo9ikToKHJdczT613ZsFvjbrq1Svnw2mfgIQyZ7brw8440wYJLD8+OVRh
58LefLHMsfknwaHXRZnZ0S7M9teB3/bqMkRm5Q3JT3dhUZKtV+fGMpwYu9nh
Z4ULy/h9PMGrqQxnM7aIKlNXJv1zgv7NZNg9/d3OrH6urGfTc2qBWjIcGDNy
SW2UK1vavIt3iLYMu+Z2+rhxjSu73SJnxXhdGRaumuIXeNiVaRv3uhXVQoZu
zlEfmmS5siDzaxqxBjJkblpgnwiubLt1f9+EljJ0nJE75uB1V1Zqey85yViG
3DNHPDrnubK2DgH3U0xlWPF98syW511ZpOsjnV1mMnQeuSnRer8rO+0xfPAh
Cxl0xnr7dl/uyqq7l6SkW8mwZ3b95gHhrsxTGPPogrUMMyt6VXR1d2WL+70z
zGsjwwtfl4LfDS7sxsCI4DvtZIjYrRW54ZoL0wqs3FbUXgavhzlOPxa5sMHB
05+X2MlQ7H26V3s3F7Z1VFWrcnsZXuX029vvlTN7GT539DdH5fPcvfg0YrEz
s55Ut0dylsEwLrtHupkzi5iaUPbXVQYIkPXZaSd2coa6taa7DP96Re0K6e7E
fs1ZOc7AQ/l92zxd9zxH1nWB1iHzrjI8abdhiaGXI1u4eH15O08Z/PMTD/hm
OrBrKwzaO/eQYajXzdmOtg5MI3nb5K5eMvwaP/G9WYo9899gdlzoLUOIWeuB
8WJHtmnLvkpfJoNn9omynOCO7PnONo5DvZXXS47S9z9rx6z2p0WH9pOh9Naa
5yea2bEJh+3PTPKRYQE7821IaAd2/Pjpn9N9ZYhdn/H3enp79v10p05xg2SY
M+h3SWKdLeucmTV7qb+ynra4r7Hqb8vmX+p+IXmwDGvrvsQZp7RjeVevSpuH
yDA32W2l9Lwta3KjT7e9Q2V4cDTD0cemLRt499b8tGAZruq0T90wpQ1LKRyY
e2aEDAfXXZCHnbNhTx8X1meHyJCa1g3cZGtm/iKo17XRMpjtNcm+sK41G1dW
vDg/TIabM+aZdbSzYmnvR/En4TJM9XNtN1fpV75+KlMvGyeDd3DP8vhp5szt
+/i+HyfIoL9vYXcdUzM2r/pD4s9JMrQO3v/nxz1TdkU19XbtZBnm7U3zfZVo
wtQbvjdrNFWGlVslOd7XmA1oNHug9jQZ1nTqxqYaG7F1zeQ1RtNlMBp0Z5X7
N0P2WCe+wGqmDFdWPw8MLjRgrQz/6trNUr6fQWlwrxx9NsZ0eaDbHBl+z7+y
d8+4Fuywpcam7nNluNZwPC0jQpd9brPmsXecDAXvIrKF5drMxU7PyH+BDKMO
tCjMvajFYp02Dx++ULnf7QeNjWusyXI6mewIT1Dez6Nj06wpGuxf190vIpfI
8O7mRc/9H5uwfl6tzWctkyGo+GfXQQmN2Zo+h0LjV8gwveFEdZ5TI/bQp8O+
FSuV54drGdaIaszY/+TrdatkiK/UKU1N/yeMDnKx2Z4sQ77bQtPI/Q3CgRHn
x6euVb7v3A4tPlyrFz6Gdj18fL0MNmaqp5nGvwXH8bkV51KU53lYws3xu2qF
WZN7d7i8Sbm+49qfivVXCRenXY+8uUWG91v1Dke7yMKfGJ8ThdtkCFhZtvR2
b0nwnpf/5dkOGS6ziT8aFonCqoWDnd7ukqHu/cZmKZ9rhMKlj6dX7pHhdKvy
1aqlNYJh0oiM6n3K89nFMzG7f40Qsvblr/pUGT7se7E7qGuNsH9juHvTQzJ0
fznyyqChNUL5tvdz9I7IMNnixTT7XTWC/Z7JWaZHZchwt0qJbS4KMw58kW2O
y3B7VG7BuTRRuJA2w9PhpPL/+8UvnRglCb9PVi/ofEoGj5wPgzVCZEE4O++y
1xkZBsqLJujNUAkrs37/6X9WhrinheEV6bVCfu7i3oHnZfi7SsP0vf5vQZ83
WhpyQYawzpJJ4N56YcStpGvjL8rwOj9Zb0xAg7Anv3njaZdksJ1b4Wbb7p/w
7uGGfrG5Mnw+HVYQuEGNdSg2TEq4oqznCMf3wXvVWfTL7XeS8pT16JngVJXb
iJ17Y661kSvXqzDMaWVlY6aq2D9o13UZHAJ7R3e1a8p6fWm77tBNGZzVWhm1
maPBlv88Wph+W4Yo4zVZgwqasbuiQ4usu8p62Pfgz4FOWkz395khefnK/bIJ
8qo72JwN++e++U6BDD8GjPfRt9RhO5tkPyl6oHz/8SG71+zXZa+1ehq/LFL2
p4jplaJdC2bbAkaUP1b2Rz+rhRNC9dlUo747vz2VYW/2sCmnbQ1YhtmdEumZ
cj4UeXdT/2nAxNZ+Fv9eyPC49PXD+BxD1sP2YZjmK2V937jo7LqiJVtqP2y/
QZkMI7J+nHXyM2K3XJ6/MX+jnF83Srcv0jdm2h6hbWzfyXCj253tto+N2ZDu
byY4lyv7Q9n2/R1TTNj23hOPdP0gQ7OgMyfX+Ziy0r6fPgiflPPt+crMESpT
1mbgNLuBlTLoZjilbzzQikUO/jll6FflvDocmTiojxk7NWzOydDvMnyveOK1
94UZqw5RfZ30U4ZbY3qXH4swZ57hC51nVCnfX7P/lj2fzFnCxH8z4mpk0M78
lX5ujAW7MWXF2aWSDMNCo1d3uWPBNGc0q05WyfC2ujpvbTtLNnjO2s5b6mRg
EcMmW8+2ZFvmt5i7t14GVdOzw+aet2QlCVsupjUo92dAlcquwpJZrzCtPfNP
BstMh/DPGlZs0uo93S+pq+BWq21Vi82t2Mn11guvNVZBTlE7zYLWVuzn5sNX
8puqYNmUba53W1qxLjvt/j5ppoIeljd7JtZZsvh96UKZlvL7LhXG9kWWjB9y
XfZRWwXNhwwMUO2wZBrHM6//1FVBTXDnaT5BlszvdLcmdS1UEBTbRCfxjwXb
dP5y/0aGKrg62eSa+24L9ixbWKVtpALbPw7w2cGCWV69cdfIRAVtqjqED84w
ZxOuD2jeupUK2radONOyozk7due+n525CracuRdhst2MfS8IXO9mqfqP17k/
fvKge2sV9ESeN//5SP2+Nqr/eF9e6asg/7YqAOSBjd+P3TLcVvUfLxz4qfxp
eAfVfzxxw7dIkykdVdALeePTqq8jZzmo/uOR5qqZu+KdVHACeeXYPzUvV7io
IBJ5Zpr6fMv1bipYirzzi8afMdvdVfASeaibztLUVA8V2CEvnWfQ5N3xriro
gDz1ssnqtuc9lddH3qpuqTPpcg8VeCCP9WmzMe2mlwoWIK9d18HoU2Fv5foj
z33kuLPjc6YCNeS9pp0so956q6AYeXBY1wPplf1UMAN58aGett+rfZT3R578
mR13+eOrgmrkzc4+TjFN/VRwH3n0HL+z5/QCVDAdefWlIR41poEqCEae/Xf4
JY82QSqoR97dL9RrnsMw5fWQhyeP49mdh6vgEvLyhxH96rxGquAO8nSjaXd7
+IxSQRPk7aNj/BcFhirrCXn8gblFV0PGqKASef2H+OB/48eqgCPPd1z6gk0b
rwJX5P0xK8OWx05U7j/mARfXvL2REKECfcwL/qRMaroqUgUFmCf02fbZZ+NU
ZX1i3rBqd/TqXdNUsAjziILUX/cOTVfBNcwrDNNitU/NVEEp5hkhJ2v9s2ap
oCnmHfsyFm3Im6OCVMxDyi+oFd2Zq4J8zEs65iYaPIpTwVzMU2aA5rCXC1Sw
A/OWzJvrtpYvVMF6zGPq7uk/+5aggpmY1wgPt5rKS5T7jX8Sn7Ya9W/Z//8z
/nugf4+vB/R6+H5A74efB+jz4OcF+rz4fYC+D35foO+L1wPoeuD1ArpeeD2B
rideb6DrjfcD6H7g/QK6X3g/ge4n3m+g+43rAWg94HoBWi+4noDWE643oPWG
6xFoPeJ6BVqvuJ6B1jOud6D1js8D0POAzwvQ84LPE6fnCZ83Ts8bPo+cnkd8
Xjk9r/g8c3qe8Xnn9LzjfsBpP8D9gtN+gfsJp/0E9xtO+w3uR5z2I9yvOO1X
uJ9x2s9wv+O03+F+yGk/xP2S036J+ymn/RT3W077Le7HnPZj3K857de4n3Pa
z3G/57Tf43nA6TzA84LTeYHnCafzBM8bTucNnkecziM8rzidV3iecTrP8Lzj
dN7hecjpPMTzktN5iecpp/MUz1v+33n7f+cxp/MYz2tO5zWe55zOczzvOZ33
WA9wqgewXuBUL2A9wamewHqDU72B9QinegTrFU71CtYznOoZrHc41TtYD3Gq
h7Be4lQvYT3FqZ7CeotTvYX1GKd6DOs1TvUa1nOc6jms9zjVe1gPcqoHsV7k
VC9iPcmpnsR6k1O9ifUop3oU61VO9SrWs5zqWax3OdW7WA9zqoexXuZUL2M9
zamexnqbU72N9TinehzrdU71OtbznOp5rPc51fvYD3DqB7Bf4NQvYD8B1E9g
vwHUb2A/AtSPYL8C1K9gPwPUz2C/A9TvYD8E1A9hvwTUL2E/BdRPYb8F1G9h
PwbUj2G/BtSvYT8H1M9hvwfU72E/CNQPYr8I1C9iPwnUT2K/CdRvYj8K1I9i
vwrUr2I/C9TPYr8L1O9iPwzUD2O/DNQvYz8N1E9jv82p38Z+nFM/jv06p34d
+3lO/Tz2+5z6feQBnHgA8gJOvAB5AieegLyBE29AHsGJRyCv4MQrkGdw4hnI
OzjxDuQhnHgI8hJOvAR5CieegryFE29BHsOJxyCv4cRrkOdw4jnIezjxHuRB
nHgQ8iJOvAh5EieehLyJE29CHsWJRyGv4sSrkGdx4lnIuzjxLuRhnHgY8jJO
vAx5GieehryNE29DHseJxyGv48TrkOdx4nnI+zjxPuSBnHgg8kJOvBB5Iiee
iLyRE29EHsn/45H/xys58UrkmZx4JvJOTrwTeSgnHoq8lBMvRZ7Kiacib+XE
W5HHcuKxyGs58VrkuZx4LvJeTrwXeTAnHoy8mBMvRp7MiScjb+bEm5FHc+LR
yKs58Wrk2Zx4NvJuTrwbeTgnHo68nBMvR57Oiacjb+fE25HHc+LxyOs58Xrk
+Zx4PvJ+Trwf8wBOeQDmBZzyAswTOOUJmDdwyhswj+CUR2BewSmvwDyDU56B
eQenvAPzEE55COYlnPISzFM45SmYt3DKWzCP4ZTHYF7DKa/BPIdTnoN5D6e8
B/MgTnkQ5kWc8iLMkzjlSZg3ccqbMI/ilEdhXsUpr8I8i1OehXkXp7wL8zBO
eRjmZZzyMszTOOVpmLdxytswj+OUx2FexymvwzyPU56HeR+nvA/zQE55IOaF
nPJCzBM55YmYN3LKGzGP5JRHYl7JKa/EPJNTnol5J6e8E/NQTnko5qWc8lLM
UznlqZi3cspbMY/llMdiXsspr8U8l1Oei3kvp7wX82BOeTDmxZzyYsyTOeXJ
mDcD5c2YRwPl0ZhXA+XVmGcD5dmYdwPl3ZiHA+XhmJcD5eWYpwPl6Zi3A+Xt
mMcD5fGY1wPl9ZjnA+X5mPcD5f3oAwD5AOgLAPkC6BMA+QToGwD5BugjAPkI
6CsA+QroMwD5DOg7APkO6EMA+RDoSwD5EuhTAPkU6FsA+RboYwD5GOhrAPka
6HMA+RzoewD5HuiDAPkg6IsA+SLokwD5JOibAPkm6KMA+SjoqwD5KuizAPks
6LsA+S7owwD5MOjLAPky6NMA+TTo2wD5NujjAPk46OsA+Tro8wD5POj7APk+
6AMB+UDoCwH5QugTAflE6BsB+UboIwH5SOgrAflK6DMB+UzoOwH5TuhDAflQ
6EsB+VLoUwH5VOhbAflW6GMB+VjoawH5WuhzAflc6HsB+V7ogwH5YOiLAfli
6JMB+WTomwH5ZuijAflo6KsB+WroswH5bOi7Aflu6MMB+XDoywH5cujTAfl0
6NsB+Xbo4wH5eOjrcfL10Ofj5POh78fJ90MfkJMPiL4gJ18QfUJOPiH6hpx8
Q/QROfmI6Cty8hXRZ+TkM6LvyMl3RB+Skw+JviQnXxJ9Sk4+JfqWnHxL9DE5
+Zjoa3LyNdHn5ORzou/JyfdEH5STD4q+KCdfFH1STj4p+qacfFP0UTn5qOir
cvJV0Wfl5LOi78rJd0UflpMPi74sJ18WfVpOPi36tpx8W/RxOfm46Oty8nXR
5+Xk86Lvy8n3RR+Ykw+MvjAnXxh9Yk4+MfrGnHxj9JE5+cjoK3PyldFn5uQz
o+/MyXdGH5qTD42+NCdfGn1qTj41+tacfGvideRjo6/Nydcm3kc+N/renHxv
4oXkgxNPJF8cfXJOPjnxSPLN0Ufn5KOjr87JV0efnZPPjr47J98dfXhOPjz6
8px8efTpOfn06Ntz8u3Rx+fk46Ovz8nXR5+fk8+Pvj8n3x/nATjNA+C8AKd5
AZwn4DRPgPMGnOYNcB4BaB4B5xWA5hVwngFongHnHYDmHXAeAmgeAuclgOYl
cJ4CaJ4C5y2A5i1wHgNoHgPnNYDmNXCeA2ieA+c9gOY9cB4EaB4E50WA5kVw
ngRongTnTYDmTXAeBWgeBedVgOZVcJ4FaJ4F512A5l1wHgZoHgbnZYDmZXCe
BmieBudtgOZtcB4HaB7n/53X+R99Nn7S
                "]], {{{0.02623822809622626, 
                0.}, {0., -0.9999999999999999}}, {27.83333333333333, 
                2.220446049250313*^-16}}]},
             ImageSizeCache->{{269.5706290312226, 
              342.5388231928302}, {-80.90635429760954, -2.1520141842190625`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.4388068944564425`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "1.3893626717850471`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "1.380113161411459`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "1.3668524247843952`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "1.2943626619811321`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.4388068944564425`}, {
               Style["75%", Bold], 1.3893626717850471`}, {
               Style["median", Bold], 1.380113161411459}, {
               Style["25%", Bold], 1.3668524247843952`}, {
               Style["min", Bold], 1.2943626619811321`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.6705882352941176, 0.8784313725490196, 0.9372549019607843],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndczvv7x+OYcZAZDocyjjikbOUyimTPjEMoKyu7g8zsUFbZpWFkhTLz
skrKodDee9fnvtvz/Po9vtf1/eP38weP+1Hu+3N/Pu/39X6NZ88Vm2avbKih
ofGo/q///Vf+lEzV7tvS8hMCt0x73i7kGK3ZnBd3veITTgxuN2j6sxOUeOGN
0+CzwUifHvTJMMiR5r50Nv3Y/zN2f+wy26fiNAUnWlfND/yMqKjdDha3nWjM
LyMe5iwNQbvpxdHDs53pad8W1nsqQvDvjRrTZcbn6I+pidqtz4biR3Ovmdq3
z9N1W99/3Pt/gaVPm5tF/S5S+wsOB4cEfkGjPtrh7T+60LEXFsM/Lf0HgTef
Gr3deYnqEvTyF1b8g4vaforhxCu0rWGdW77zV6xdsHf/K/1rlN0nfN6+/t/g
8nNilM+IG7R0iqdm28BvaOztttf3oRvlPntlOXtQGObNu5it+8Odepv3ftl1
Txi0AlJirZt6kGX86fYZwWG438+0s/40T7q8sWLjgw7hiFz1boKplxdFaKz4
vHNFOKaE3Lq0us0tan0uVHfcw3CcM3rot+TMbTLvPXSvZk046hbHjVfp3KXD
z65H/zD7DlNNzbuFoT6Eyc0Mr134jq8nGzzvdfI+VcVtPrUq9Tt+f5E02nr5
QxqyMS5r0KAfOJiY/RW3HpGthun4yt0/8NejBsN7+/jS3bMPrr4P/gHtvYnb
p756TOm9tMtPdviJVukW729EP6Eezw7MmrfiJ0bDqM/xX/xo0eQ8n+4Pf8Jd
GTFsi5E/nY+b2yS7+ifc9hQFfjj0jMI2vFnmaxaBmS8Xu2bEPCdNjT9e7boQ
ga2RZ1uOoZdkcta5g0lqBL687LZixNNXtL9X9aZfB0UiJS+lcuLIAHrpbx0S
uTsSR8r3z7jy9Q2VmH3t5RYcCf8/XN7NG/WW9OOG71vbIQq7OuokZXd4RzYb
3GMMVkRh5LpbZgZV78jzX80hNQ+i0Ctp8MTFWe8p2Xnb6cDqKExOept7IuED
demVmH3aLBp9w70SM+I/0lz/SRMWXIhGxw6j+p3OCCQnM99rPVOj4bTpt6qb
5UEUEtulIndgDBrv7LtlbLtgarTBYfbT3TG4vGve+n0jPtPYfwvu2QfHYLbW
54nbV4fQLmeLppM6xKK81ZB7hm6h9FT33fI2K2Lx5ZeYJcGpX0jx03sd8yAW
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
V4XwqsyzQnjW/8u7/g9yeSbG
                "]], {{{0.36179780614512985`, 0.}, {
                0., -1.}}, {28.83333333333333, 0.}}]},
             
             ImageSizeCache->{{306.18097625642616`, 
              321.4857247320418}, {-71.24932946603633, 33.633472580658804`}}],
            
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.269006296805452`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "1.1333941595044235`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.7802039799230674`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.7130739237826791`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.7130739237826791`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.269006296805452}, {
               Style["75%", Bold], 1.1333941595044235`}, {
               Style["median", Bold], 0.7802039799230674}, {
               Style["25%", Bold], 0.7130739237826791}, {
               Style["min", Bold], 0.7130739237826791}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.6705882352941176, 0.8784313725490196, 0.9372549019607843],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndcjn34969KSUuXmzSsulXKuFO47e8Z7vumYUbDpmSHQoiMZFS2SHYS
SqEkq+OUpJKEJO1xdc2GhobW0/P6Hcfvj+fxBy+vel3jPM/vMd6ft/Ear4Ue
ygKBILXnr//7L/051xRcuW9OEawYkGlxvTmKVQV8W2C4tgiSLl3TKC65zyYO
GMIn+RXBHg2bPzeIo9nJyHVjnEOLoPF5wM5LOrGseHzc1V9xRXDUaWHkilGP
mFVai8aFjCLYf/aFz8C1j9nhJdwe68oiOKYyafDQmCcsV3xcktNRBPKzuTGD
1BOY+e7Pi730imH4bqPghN1P2d7ehqnaVsVwWX/js2PtiSzr0hrrmDnFMMPh
ar31hSQ2dET0Tbu1xeD2j1m944wXbEdSo47MrxjWdMUc36j2iqXOnrr/WGgx
lNyel/VH+Ws28EeAwvRRMRzaYROU/QXYxg0fXVMzimFBR1K7US3PXrUNSF9T
2fN+wttD+a43TOfkiglKncVgLLseE2H0lq02jLpzQ68EYv2+ThXNSmUJD+r6
TbcqgV5amQH3975jalMmHiqaUwLRyev7G71OY64fDtbtXVsCK0Zd8XPSSmcx
SzOWG+wvgesKFceN6zNYl0KY9Sy0BFJ2PeQ3fM5kC/zcJi95VALh+kXbXf7L
Yne0Iu41ZZTA51PtA8ZlfmTNVxV65yt7fu7mPqPB9RObPXrc0bGdJXAq6fB7
2305LPy1X+MnvVKosMz5SzHvM6t1fLd6q1UprPTNu51n+YVxJdo5WnalcO3n
1nNNml/Z+a1LpkevLYX88pQDlo1fmbjresyc/aUgXrUlzLUsl008LTGUhpbC
ccvjtau/fmMnh1qdCHxUCu8+aNUNyspjJXG+LcMzS2HdwD6OSzK/Myvujcfb
ylJ4uuGqiehjPjuc0yd3dWcplBxSWnw+7wfbaGVhfFCzDL6e9jYbLSpgF3wd
Xebpl4HTkLcbdzcXstf89tNDTMtAOm2s7jTtYiZWD02rGVsG/IT2nLEjSpju
ghedr6aXQWJ6xxmj/0rZpLCSccH2ZRAYObw7d1wZW1OuvHmpS8/rHTc1yH5f
xoItzCMsPcpg+Nbb15yWlbOn2+0L2raXweCCVZtnNpSzkudewowDZXAuP6LW
50QFU1e+MPtyUBmM08yd89a4ko21S/L3vFwG/trR59VfVjK3c0WJEyLLYN/T
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
nSFq63n2W/1L859GdZC/8OsNjbBk9ueC5tGN5nWwPvCp+bGDr5hDmKFHyrg6
eDfaXsf96Au2s3z61bO2dWCXpd4r624Su2Gx9uuquXUwdOkk3WuViSx9+zEN
q6V14JPe7Zoz+Smrfx5t2+1ZBzePwqzl0fHMSDnHN9unDlZP77oyedwTNsuu
Ke7aoTqIH659d2XuI7blnL5k86k6OKLUsfbkgDgWWjB1yNTwOtC3lrddjYlh
vMnqxZr36sB9SMs6+80PmGzj0eCChDq4ktd34dGF91i/+Ptv77+pA+LBU9s/
/vbN/v//j78P9Pv4ekCvh+8H9H74eYA+D35eoM+L3wfo++D3Bfq+eD2Argde
L6DrhdcT6Hri9Qa63ng/gO4H3i+g+4X3E+h+4v0Gut/4PAA9D/i8AD0v+DwB
PU/4vAE9b/g8Aj2P+LwCPa/4PAM9z/i8Az3veB6AzgOeF6DzgucJ6DzheQM6
b3gegc4jnleg84rnGeg843kHOu9YD4DqAdYLoHqB9QSonmC9Aao3WI+A6hHW
K6B6hfUMqJ5hvQOqd1gPgeoh1kugeon1FKieYr0FqrdYj4HqMdZroHqN9Ryo
nmO9B6r32A+A+gH2C6B+gf0EqJ9gvwHqN9iPgPoR9iugfoX9DKifYb8D6nfY
D4H6IfZLoH6J/RSon2K/Beq32I+B+jH2a6B+jf0cqJ9jvwfq9zgPAM0DOC8A
zQs4TwDNEzhvwP/OG/8zjwDNIzivAM0rOM8AzTM47wDNOzgPAc1DOC8BzUs4
TwHNUzhvAc1bOI8BzWM4rwHNazjPAc1zOO8BzXs4DwLNgzgvAs2LOE8CzZM4
bwLNmziPAs2jOK8Czas4zwLNszjvAs27OA8DzcM4LwPNyzhPA83TOG8Dzds4
jwPN4zivA83rOM8DzfM47wPN+7gPAO0DuC8A7Qu4TwDtE7hvAO0buI8A7SO4
rwDtK7jPAO0zuO8A7Tu4DwHtQ7gv8bQv4T7F0z6F+xZP+xbuYzztY7iv8bSv
4T7H0z6H+x5P+x7ugzztg7gv8rQv4j7J0z6J+yZP+ybuozzto7iv8rSv4j7L
0z6L+y5P+y7uwzztw7gv87Qv4z7N0z6N+zZP+zbu4zzt47iv87Sv4z7P0z6P
+z5P+z7yAJ54APICnngB8gSeeALyBp54A/IInngE8gqeeAXyDJ54BvIOnngH
8hCeeAjyEp54CfIUnngK8haeeAvyGJ54DPIanngN8hyeeA7yHp54D/IgnngQ
8iKeeBHyJJ54EvImnngT8iieeBTyKp54FfIsnngW8i6eeBfyMJ54GPIynngZ
8jSeeBryNp54G/I4nngc8jqeeB3yPJ54HvI+nngf8kCeeCDyQp54IfJEnngi
8kaeeCPySJ54JPJKnngl8kyeeCbyTp54J/JQnngo8lKeeCnyVJ54KvJWnngr
8lieeCzyWp54LfJcnngu8l6eeC/yYJ54MPJinngx8mSeeDLyZp54M/Jonng0
8mqeeDXybJ54NvJunng38nCeeDjycp54OfJ0nng68naeeDvyeJ54PPJ6nng9
8nyeeD7yfp54P+YBPOUBmBfwlBdgnsBTnoB5A095A+YRPOURmFfwlFdgnsFT
noF5B095B+YhPOUhmJfwlJdgnsJTnoJ5C095C+YxPOUxmNfwlNdgnsNTnoN5
D095D+ZBPOVBmBfxlBdhnsRTnoR5E095E+ZRPOVRmFfxlFdhnsVTnoV5F095
F+ZhPOVhmJfxlJdhnsZTnoZ5G095G+ZxPOVxmNfxlNdhnsdTnod5H095H+aB
POWBmBfylBdinshTnoh5I095I+aRPOWRmFfylFdinslTnol5J095J+ahPOWh
mJfylJdinspTnop5K095K+axPOWxmNcC5bWY5wLluZj3AuW9mAcD5cGYFwPl
xZgnA+XJmDcD5c2YRwPl0ZhXA+XVmGcD5dmYdwPl3ZiHA+XhmJcD5eWYpwPl
6Zi3A+XtmMcD5fGY1wPl9ZjnA+X5mPcD5f3oAwD5AOgLAPkC6BMA+QToGwD5
BugjAPkI6CsA+QroMwD5DOg7APkO6EMA+RDoSwD5EuhTAPkU6FsA+RboYwD5
GOhrAPka6HMA+RzoewD5HuiDAPkg6IsA+SLokwD5JOibAPkm6KMA+SjoqwD5
KuizAPks6LsA+S7owwD5MOjLAPky6NMA+TTo2wD5NujjAPk46OsA+Tro8wD5
POj7APk+6AMB+UDoCwH5QugTAflE6BsB+UboIwH5SOgrAflK6DMB+UzoOwH5
TuhDAflQ6EsB+VLoUwH5VOhbAflW6GMB+VjoawH5WuhzAflc6HsB+V7ogwH5
YOiLAfli6JMB+WTomwH5ZuijAflo6KsB+WroswH5bOi7Aflu6MMB+XDoywH5
cujTAfl06NsB+Xbo4wH5eOjrAfl66PMB+Xzo+wH5fugDAvmA6AsC+YLoEwL5
hOgbAvmG6CMC+YjoKwL5iugzAvmM6DvC//qO/+NDAvmQ6EsC+ZLoUwL5lOhb
AvmW6GMC+ZjoawL5muhzAvmc6HsC+Z7ogwL5oOiLAvmi6JMC+aTomwL5puij
Avmo6KsC+aroswL5rOi7Avmu6MMC+bDoywL5sujTAvm06NsC+bbo4wL5uOjr
Avm66PMC+bzo+wL5vugDA/nA/68v/H8A+esC8A==
                "]], {{{
                0.09248847969566919, 0.}, {0., -1.}}, {29.83333333333333, 
                0.}}]},
             
             ImageSizeCache->{{307.7541656575323, 
              335.46978409535075`}, {-29.87883701123819, 
              24.338277975716196`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.8807682524644473`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.7922571993067294`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.729183514060671`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.6593271352058168`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.5489164163391659`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.8807682524644473}, {
               Style["75%", Bold], 0.7922571993067294}, {
               Style["median", Bold], 0.729183514060671}, {
               Style["25%", Bold], 0.6593271352058168}, {
               Style["min", Bold], 0.5489164163391659}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.3176470588235294, 0.6549019607843137, 0.7529411764705882],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndYzX34x60nITOzJzMj9IjIjDuyipBN2bLJI3tnhbJC9kpKIVmlJ3qT
kBFpl0p71zmn0zkn++d3Xff9z+/nD66uS2d8v5/vfb/Hq+NCl8nOtWrUqJH+
56///Vf+dF4Xopu7/iMs91/6/Wr5MTq8q9dr54qPsHl7s41dsxO0efSUcf37
xcIsqF7WzUNe1NO+8YNB/8YiqkP7ajfjU5Q55Z3R0KBYVNZNtV/8/jSdmO2+
x7o0Foq5v7qWnj9DIxfYlNiYfsLWz7GXnx46R7qlvx3GOH+C1acu9Y6ev0CB
a8LD7Hw+wdZLMaTNx0s0Z8OmjhO+fMLJPV2+eDW/Sk229z3kYBwHzfsOa4ZP
u0Yv9iiUU2fFYY7+2I97A31o46FbM2d6x+H5PHXc2Ba+1P340meO8XFoZnK1
ys37BqV7m5jOaxKP9rEetzqZ+9PxS1+OLbSPh79F+O32WTfJxveCzvlwPMa+
3NtuTWAgaQNnzFv+Oh6uRdFPax27TQH3DF+vqpOANr5DNLFHg8jp8cdea4cn
YGLT/erF04KpMTy8XXcmoLH65cPyf+9R5MsxvzaGJ6DDpPfbNl26Txve116y
tToB+Tdv261PeUCm8YjZYZmIXpkjEiebPKLPqdss3dYl4p/1J4p37Ayho1kD
Lu27m4jTnX/GO5aE0vBCdZ2DZYlQv276zH5pGFWV313l0T0J6aeOtryr+Y/8
q1YmHF2ShJN9DqYmnH5Cs793s/K6noTt5Tt/G4yNoIa18q6fzkrC6CE9Cyfo
PaNn+lcbnGubDHuz0xdyVM9ofWMn14uzkxEWUNsoveA5dWvZ+vOVM8mw3Tih
uUN+JKUZJ4y4npCMZ2Z7TCaXv6AjJscD/ZqmYElx1vaSX1Fk3WN8s8AJKSi4
3SKwvdErUvfW33rHIwUVhX1GqYa9Jr8BUdnB0Sl47NwwbObqaJo1bLftw79S
YTPrqp7tjTdkMMrqXuiIVJTHnKgTXvCWMK66dfiuVMS/6Fnl3uc9rZv8cHfE
k1S8Xbjr4/79MdRl1tqi519T4X1n9fDTOR8oZZ7ZpJf90/Bj019ONp1jyWNJ
UWi0axpuVR+/d+JzLA1b7dv+fXAa3ua38G555hNVus53/1iehhpd7jjenR5H
N7YaK+J6fIZV/hLL/kbxNNMtZXrS0s+4P/HrXI/seGpw8FREqu9nFD1YHLj6
dgJFHJ3UNSP7M/YNnBH5aGsi/Xva4GhWu3SsPR7lbj4+iTpfjNbkOqbjg8cK
3+sdkinZZ9+cwrPpcC+dG5SsS6bDAdYvSxLTEVPTb9LRTyk0NPiHWUWzDNiX
hW52v5NKypDHp1QTM1BS9fHgbo80uv50/Y8qzww8mJl8tN/KzzQ9qvfi6jcZ
6Lnu/i6n8elU713Zu+96mQjpdGfj3V4Z9OTTzb6/bTKRvCGsOqdpJq1NWXyh
llsmhpZ3H3JLk0mdvnSorReRibkx7qvDU79QUn76inrfM/HmfKPauXOz6GDZ
2TiDgV8wYcOCgxGxWWSlnjq4yYYvSLN9SrYjsqniaxMfw/tfoFfRc5jTg2zy
qRFTr5XiC+5FGWXGmuRQ4N6ogQ1bZiHkYnLR7pM5VMfdp+xovyy88C7B6Fq5
NOfw7qtNpmTh6QO9Az9dcin0yNypXv9m4UNfuzFu6bnU9ISVfvPjWUgwPNjh
7pg8WnHK6MnpoCxsxFRn53t5FHWm2qVVTBbCtp2I2tsmn9peSDI5V5qFnh36
rSzdlU+bLj9MNqqfjX9XN+iyKy+fYq95eVw0zcYJf5ttJmMKqMeNtdRuTDZW
NHWNjfAvoL03J6ivOGfD899vWwbpFVLGLTP/jvuyocs5nLRjYSH1v1vf8brP
n9//5L9g85NCOn6/qFGX59kwb1UrqlXzIip+9CrS70s2TIOOZY1fXkQ2Yb4b
TX9lI8rWLrP+kyK6+GRPj0DjHGDcgV5jDIpJi/mZPYfkYLki7djXWcU06cUw
rzuzcjCzwcWGxjeKKeCV8WjzzTkoXFr+PbC8mGq//fY12DsH/UfvUvr2LSGn
mJQ7Fo9ysGBog8f1N5VQSGzIgofxOfCpujv2S2gJNU441aJ/ZQ4qnR3uddOW
0PLkdW9Cm+TiS7ceeqV9SikybdKOQea5+Of2MzuLlaVknNmrT7h9LvRnbJml
71NKG7IN8q1W5aLFs9pvtiSV0se8krMRh3Mxx7rg4yn9MjItih5vHZCLha1d
ui4fWEZ7Sv1qRL7OhUXJtMK6S8roc8W+hzYFuVilmO2y90QZWVYuXPayTh6O
WfS1UvxXRsc01sZjTPJQ/Hezd/Nyyqioul1s9PA8pMV22FRSt5xG/Pix125+
Hgb26zvzRs9yuvA7bcD7nXm4/Fq/k799OWlqhZXaX8pD0nDnOnXXlNMEvTNX
PobnofZyW890z3K6WW/DFIe0PMwKOH6AAsupZsMpdeOr82Dtc27G+Ffl5Nik
T/jUVvl4UKfz382zy+mhYWOXJMt8tOo2p0/wt3Jq1Kq808yp+Rhx4++Dgwwr
aKnRu6TUdflInh0W9rpHBT1vG3DY8UQ+fAJdjdYNryCjju7DMu7mI9tsfeDE
GRW0vrNz5dwP+fjbe1f9TasqKKabjV9WWT4M4ie4/tpdQd16dpy9sEEBjmw4
cvf7qQpy6/W7YV73ApQEubTed7OC0vpkPHceW4DUiW9O3Q6voH6W4RsKlxRg
UOiB84c+VNCRgee6L99fgFez51uYZ1dQ4ZBNGSXXC9Aj4tzPYHUFWdO0E6si
CzBw9umhnfQUdH5E31EVWQVQDa6Rcbq1gtSjmn51+V2ARk0nb23XU0H2torb
qraFaG42y/XDUAX5jY+Z72pViPYL96tCJymoxqRbzTWzC3Fr3jVt2SIFzZpy
KHrjlkKMHem/fNcmBT2YvnR79ZlC1EtzNHHzUJDB7FG9t4YUolk3x2+1rypo
yRyTvO8JhYj1Hv6hzSMFYX7NszvUf17f/fKJhLcKarP4y7jfTYuQ7zNv8uhs
Bbkuffp7d+8iTGi7zNqtWkHvV1x4UGtiEda9/it1nL6Suq7ZsnTf6iJ8UzQ3
/NBcSbv+nfG3nmcRLndMuRbbUUmp6y0/ugcWIWlOl1IncyVZbDbcW+9NEbI0
Bou3D1WS5zZVf4/CIjyq6uw5cLyS8nd+LDHQK8a9/gMLzzsqifbcuXy0czEq
Vjlobq9U0tn9HpOb2BRjolf77pu3K6ny4HI9rwXFcIoOSf/rqJLGeY75z3B3
MX4bhYycd1VJN451WXP6cjG8rbIWHHmgpF9etTu1elqM4cmDVWdfK2mmd3bi
2c/FsDoQM/twupLun8Mho2/FeJrS7srySiU1uHRp6MXWJRib6mUzrJ6KnK9u
U7UdUIKWy+KHNu6ooojrs25cmVaCT/1dMnMGqai1/4BZHdeXYK1D1n8RU1T0
b2CLhte9StD+Q68z/mtU9O6O+lnneyU4vHbpxGuHVdT53qf1fh9LkP+4w/Mg
fxXtfHjX1LSiBCcr7R59eqmi5NAj6QEGpZg/69Db+vkq6hO+8njPnqWImjhl
/qy/KulwhO3IO7al8P5ivDe8ayXlPe9W3WtZKe5Me5n6j20lDX351+3gA6VY
+ejQqVurKulMdO48ixuluF0ndE6vE5Wkevfc8OGLUvRqMH18UEgl2X288toy
pxTnWtZN7ZhRSb5xO7aF1iiD4y3rxB111PQz0dF8UPsyvI9u7/zITE0zUgfl
/je0DO281d/DpqkpOL3VGSunMjhobzpu26Wm+lkau4itZSi91+9MYYCaFuXG
/6JzZejg37x1aYKanhbcu/88tAxxSV/91taoopYlx5bYJJXBdrDfpgVmVbS2
fLXRy6oyrOxSa+CNmVX0Rjnuw2jDchj6OnfqtL+KTKq674nuU46HsfUNn96r
ou26uv3tJpWjd4D31VmZVZT0Lb/43Zpy3N50eUBafQ2Z/3pxyf5IORp66Q/q
MEBDh2r6OHy8VY6JjTv8bbBIQ7l1dv/l8LYcU8zNjuw4qiEr/blhcUXleOAz
7dKUMA15N7BaPbVuBWo+upS1KldDikZGHZO6VODNjRsX/Q20ZNusOmHGyApc
tP1dmd1PSz4tkg6mLqyAcmV4w2+OWvrR+qGVo1sFxi8rGP/BTUvTjL2U6Vcq
8L711fVD/bR0t/1a37kRFRh8csvnrm+0pG8yYWZWegWejHx+dkWJlhZ2NTNY
+L0C/RIW3y+up6Pw7vWf5bZRYG9cY7sD3XTU4p8iV+eBCmz26/XGxEZHLr1f
dSucrkD15J0N/J109Lqv7+dlGxQIvhPvrnXVUccBe46VnFTg3KzXG78d1NG2
wfNtVt1XIHuKTnvxgo4Shw7TlccqsLDlyV5vb+nIfLjxLReFAq6WZcvXhulo
ZKcdd6v1lLha+Lb/7igdKU1WHRrUUomYv8ZvL3uvo8tdHBdt7aKEfUTzY4Fx
OrLrZjc0vJ8Snk53h99P1JHWdFCrHzZKLDUqU/7887NvD1OV1RQlXmaYeh6O
19Eks1bvdixUIu7binMzPujo1z96NyL+VaLOrmGWS1/pKNBcs/P37j+/33JG
o4hwHU3vkzfT+rgSFQN1TouCdFSnb7yF2xUlFuT1SJp/WUfB/SINIoOU6HKj
9Hykh46c+t8rqBWhRETN8SZnNuqo/sCrz2xi/rzemtguirk6Chl07Py+dCUo
yGRbxkgdLR6yc/3LUiU+5jr+2miqoyZDV0/Q+65E4VaDFXF/7seTYU6mY+qr
sH3rUgv9Yi2tsB5X62AbFdKuhDhZvNJSyxGD06NNVdiXsmXqqmtairLpHlJv
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
SgZ6Gzeu6liNlT8bd3JZHUKP6zpPutO7Gja0Tplu+IiW1Jv6xyVWw9dtyskN
bx9QswY2dcwnViNUz3Zr7PH7FGFgkekytxpuixa1cVtyj1Y16vg4eHU1Nk1a
vavVuGBq3aSJl2p7NaKrrn8cvj2IXjX9vdLCsxpRF7sdm7TzNq0zrBjleuHP
67e9HLD6QiC1a5HR/mFgNXZY32oSEHeT3rd8/7UqrBqGJ/Usmpr40+bW4fGW
b6rRvkiT9cDjBnU1CryzMaUaO1cZW1xp4Etxf59zDy2shmWd4bY513xoZ9uD
C6q1f76fZUzro/bXyKz9piGD9L7i1KucZiENr1JKhyUttrb4igFHap3NjrxE
+zpNU/zX+Ss8Ii+0u3fsAll0Hvnme9+vsGsx4U2r3ecos0vf61Y2X5G5cn9T
J68z5Nmt044dk7/CP9rh7oeo0zSwe9MZEQu+ouGLtCnvWpyivB41+vxe+xXX
aljahe31Ii8zRX3r3V9xecaZ3w0anqBhvTLzdh/7ikh3vaID849RmXlMxPPL
XyF59tk+T87WCvr/P/P/h/x/fj3I6/H7Qd6PPw/k8/DnhXxe/j6Q78PfF/J9
+XpArgdfL8j14usJuZ58vSHXm+8H5H7w/YLcL76fkPvJ9xtyv/k8QM4DnxfI
eeHzBDlPfN4g543PI+Q88nmFnFc+z5DzzOcdct75eYA8D/y8QJ4Xfp4gzxM/
b5DnjZ9HyPPIzyvkeeXnGfI88/MOed55HkDmAc8LyLzgeQKZJzxvIPOG5xFk
HvG8gswrnmeQecbzDjLveB5C5iHPS8i85HkKmac8byHzlucxZB7zvIbMa57n
kHnO8x4y73kfQPYB7wvIvuB9AtknvG8g+4b3EWQf8b6C7CveZ5B9xvsOsu94
H0L2Ie9LyL7kfQrZp7xvIfuW9zFkH/O+huxr3ueQfc77HrLvWQ9A9ADrBYhe
YD0B0ROsNyB6g/UIRI+wXoHoFdYzED3Degeid1gPQfQQ6yWIXmI9BdFTrLcg
eov1GESPsV6D6DXWcxA9x3oPovdYD0L0IOtFiF5kPQnRk6w3IXqT9ShEj7Je
hehV1rMQPct6F6J3WQ9D9DDrZYheZj0N0dOstyF6m/U4RI+zXofoddbzED3P
eh+i99kPQPwA+wWIX2A/AfET7DcgfoP9CMSPsF+B+BX2MxA/w34H4nfYD0H8
EPsliF9iPwXxU+y3IH6L/RjEj7Ffg/g19nMQP8d+D+L32A9C/CD7RYhfZD8J
8ZPsNyF+k/0oxI+yX4X4VfazED/Lfhfid9kPQ/ww+2WIX2Y/DfHT7Lchfpv9
OMSPs1+H+HX28xA/z34f4vc5D4DkAZwXQPICzhMgeQLnDZC8gfMISB7BeQUk
r+A8A5JncN4ByTs4D4HkIZyXQPISzlMgeQrnLZC8hfMYSB7DeQ0kr+E8B5Ln
cN4DyXs4D4LkQZwXQfIizpMgeRLnTZC8ifMoSB7FeRUkr+I8C5Jncd4Fybs4
D4PkYZyXQfIyztMgeRrnbZC8jfM4SB7HeR0kr+M8D5Lncd4Hyfs4D4TkgZwX
QvJCzhMheSLnjZC8kfNISB7JeSUkr+Q8E5Jnct4JyTs5D4XkoZyXQvJSzlMh
eSrnrZC8lfNYSB7LeS0kr+U8F5Lnct4LyXs5D4bkwZwXQ/JizpMheTLnzZC8
mfNoSB7NeTUkr+Y8G5Jnc94Nybs5D4fk4ZyXQ/JyztMheTrn7ZC8nfN4SB7P
eT0kr+c8H5Lnc94Pyfu5D4D0AdwXQPoC7hMgfQL3DZC+gfsISB/BfQWkr+A+
A9JncN8B6Tu4D4H0IdyXQPoS7lMgfQr3LZC+hfsYSB/DfQ2kr+E+B9LncN8D
6Xu4D4L0QdwXQfoi7pMgfRL3TZC+ifsoSB/FfRWkr+I+C9Jncd8F6bu4D4P0
YdyXQfoy7tMgfRr3bZC+jfs4SB/HfR2kr+M+D9Lncd8H6fu4D4T0gdwXQvpC
7hMhfSL3jZC+kftISB/JfSWkr+Q+E9Jnct8J6Tu5D4X0odyXQvpS7lMhfSr3
rZC+lftYSB/LfS2kr+U+F9Lnct8L6Xu5D4b0wdwXQ/pi7pMhfTL3zZC+mfto
SB/NfTWkr+Y+G9Jnc98N6bu5D4f04dyXQ/py7tMhfTr37ZC+nft4SB/PfT2k
r+c+H9Lnc98P6fuZB4DwAMwLQHgB5gkgPAHzBhDegHkECI/AvAKEV2CeAcIz
MO8A4R2Yh4DwEMxLQHgJ5ikgPAXzFhDegnkMCI/BvAaE12CeA8JzMO8B4T2Y
B4HwIMyLQHgR5kkgPAnzJhDehHkUCI/CvAqEV2GeBcKzMO8C4V2Yh4HwMMzL
QHgZ5mkgPA3zNhDehnkcCI/DvA6E12GeB8LzMO8D4X2YB4LwQMwLQXgh5okg
PBHzRhDeiHkkCI/EvBKEV2KeCcIzMe8E4Z2Yh4LwUMxLQXgp5qkgPBXzVhDe
inksCI/FvBaE12KeC8JzMe8F4b2YB4PwYMyLQXgx5skgPBnzZhDejHk0CI/G
vBqEV2OeDcKzMe8G4d2Yh4PwcMzLQXg55ukgPB3zdhDejnk8CI/HvB6E12Oe
D8LzMe8H4f2YB4TwgMwLQnhB5gkhPCHzhhDekHlECI/IvCKEV2SeEcIzMu8I
4R2Zh4TwkMxLQnhJ5ikhPCXzlhDeknlMCI/JvCaE12SeE8JzMu8J4T2ZB4Xw
oMyLQnhR5kkhPCnzphDelHlUCI/KvCqEV2WeFcKzMu8K4V2Zh4XwsMzLQnhZ
5mkhPC3zthDelnlcCI/LvC6E12WeF8LzMu8L4X2ZB4bwwMwLQ3hh5okhPDHz
xhDemHlkCI/MvDKEV2aeGcIzM+8M4Z2Zh4bw0MxLQ3hp5qkhPDXz1hDemnls
CI/9f3nt/wFgxMEj
                "]], {{{0.27969008785531974`, 0.}, {
                0., -1.}}, {30.83333333333333, 0.}}]},
             
             ImageSizeCache->{{322.0041971020794, 
              336.7770014152188}, {-59.92030873818038, 29.593839635173453`}}],
            
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.266945153208639`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "1.0387817581699879`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "1.007133783153017`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.7882081173965558`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.5837766519586213`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.266945153208639}, {
               Style["75%", Bold], 1.0387817581699879`}, {
               Style["median", Bold], 1.007133783153017}, {
               Style["25%", Bold], 0.7882081173965558}, {
               Style["min", Bold], 0.5837766519586213}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.3176470588235294, 0.6549019607843137, 0.7529411764705882],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
W7coc+QN8+K7H81VQvKNsEW6Nxx5Ve/QE2UFSuh2vcv0H1GOXKU1wnjgOyUM
MjZY13yIIy/Od4ja8anp/Z9rmBam78gLjjeWFsuVYLSgvZ/vUweeFfphStey
pr+/RmfaszgHnt7/5pPoyqbnr1zbaDvagafp7/V4/lMJsvjL1guNHHhyYdhZ
u0YlXDPMz3uTY8+PnPGxWKqjgh0ZEybFb7Hn8cudYx40V0FLL/XPO0PteYyX
1ndTMxUkN1ZLo7TseaTxx9lBVirQ7n5kYN2aDnxJ0e0XabYqeJYlL0v/3p4H
p+7z0nJSwchrl57/u7g9D1y17NL4Lir49Nm+y2GFHR8zbLTt6R4q2NXq3D99
Ztlxb/NOO6r6qmCFHvM++N6We0i0670HqeDeYYl77URb7na5ZGHCEBVopZ78
tqvAhttHp7+T+aigi/YA8/hxNtxy1MER7n4qKKq62q1zflN9abviZswkFdxM
vpq13a+pvqjGOhdOV4GdwSC/T6+sec31Lvucg1UQEb2696gp1rxsk572yoUq
eN7WNb/mc1te4iddnrVUBe32n4z+s6gtL7TL+Gy5UgUb6y4fif3ZhueUHx4X
EqWCt+Untp+NbcMf3I3IuLVJBY3e58SqNm34ta3juxpsU0F9m+pc04tWPHVS
12OB8SqYK3sXsHGoFT/hZGiUul8FrZYNdy/+ZMkTquSRdUdVEP7fsLCuUZZ8
C4Da57QKBjzbyNbbWPLoXccmHzmnAk3g++7vH1jw8Omrs0ovqaBfUqM+m2/B
Q7pM7ON5QwXGMf00N0wt+PTa7klx6Srw1p3uN+Beaz4+y8i8WKggeFb7Dk9D
W/Ph+1Qb3Z6oYExh+X+z7FpzzzmPvkU9V8GbXbPvV70y5z16JM7Ke62Cs+fP
pa7eYc6dG9c8ty1SwbmHignyEebc+tmkQUskKriTIvNy0TPnpkd6XchQqeDz
yYEn3bJbcZ0FJu1MK5q+79ojRLa9Fa/rU7ptVrUK4i0Cp7iPb8UrtLNqL/9S
QYxWqIO+dSsuKzgV8vevCi7G91nMFWb8XWL0Gz99NSz1+/Iz66oZzwubMuyU
sRrG7q27E7nJjD/07HO90lwNErPhtf0nmvFbhmaO3tZqcMjoEqrsaMYvvi3f
s7eDGgx2v4JbdS35qeQnf6UuanCOjs6qSGnJD65IWtq7qxpKh+c8cpnSksfx
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
5eGYlwPl5ZinA+XpmLcD5e2YxwPl8ZjXA+X1mOcD5fmY9wPl/egDAPkA6AsA
+QLoEwD5BOgbAPkG6CMA+QjoKwD5CugzAPkM6DsA+Q7oQwD5EOhLAPkS6FMA
+RToWwD5FuhjAPkY6GsA+RrocwD5HOh7APke6IMA+SDoiwD5IuiTAPkk6JsA
+SboowD5KOirAPkq6LMA+SzouwD5LujDCPJh0JcR5MugTyPIp0HfRpBvgz6O
IB8HfR1Bvg76PIJ8HvR9BPk+6AMJ8oHQFxLkC6FPJMgnQt9IkG+EPpIgHwl9
JUG+EvpMgnwm9J0E+U7oQwnyodCXEuRLoU8lyKdC30qQb4U+liAfC30tQb4W
+lyCfC70vQT5XuiDCfLB0BcT5IuhTybIJ0PfTJBvhj6aIB8NfTVBvhr6bIJ8
NvTdBPlu6MMJ8uHQlxPky6FPJ8inQ99OkG+HPp4gHw99PUG+Hvp8gnw+9P0E
+X7oAwryAdEXFOQLok8I5BOibwjkG6KPCOQjoq8I5CuizwjkM6LvCOQ7og8J
5EOiLwnkS6JPCeRTom8J5FuijwnkY6KvCeRros8J5HOi7wnke6IPCuSDoi8K
5IuiTwrkk6JvCuSboo8K5KOirwrkq6LPCuSzou8K5LuiDwvkw6IvC+TLok8L
5NOibwvk26KPC+Tjoq8L5Ouizwvk86LvC+T7og8M5AOjLwzkC6NPDOQTo28M
5BujjwzkI6OvDOQro88M5DOj7wzkO6MPDeRDoy8N5EujTw3kU6NvDeRbo48N
5GOjrw3ka6PPDeRzo+8N5HujDw7kg6MvDuSLo08O5JOjbw7km6OPDuSj/19f
/X8APUvKNA==
                "]], {{{0.040238964632356926`, 0.}, {0., -1.}}, {
                31.833333333333332`, 0.}}]},
             
             ImageSizeCache->{{312.0253853989172, 
              362.31306188279626`}, {-29.371573398257418`, 
              31.61383289320159}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.7406913699780682`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.7020721608609662`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.6700773935619534`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.6541322261065031`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.5650054758846186`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.7406913699780682}, {
               Style["75%", Bold], 0.7020721608609662}, {
               Style["median", Bold], 0.6700773935619534}, {
               Style["25%", Bold], 0.6541322261065031}, {
               Style["min", Bold], 0.5650054758846186}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[2, 3], 0.6666666666666666]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
sqK/9b4zTUkhowpWNYrLQp2fmuNIOyU52ume0KvLwqcfdXFaT5S0KMj6yRLN
bGzxfjB4cpKSejd7GXfMKBvvL05Z6qWmop/TFIrna7LRNHdXtHFvFb04S73T
T2TjlI+uQxdS0f6v9lNaP87G20WDmwxcoKJJnUOtRnzNxslZprMPblBR28Wt
L6yuzsaRrVUfdHerKOH6bH/Hv3JgaWSmmmivolsZLhlvxuYgpvG9qynHVbSx
X2Kz/FU52LIhq1ebkyr6d72mbqdjOUitKXpe5aAi1cOV84we5GCQx6zEl3Yq
+ljqsWdzZA6cHA1H7LJR0bl/C25ersiBkfaw6cvWqGjhLt2QD11yoWHWsb2L
qYp6vbEuKhuVC7cHCW8njlZRwW/fDlorcjGzRbvlt/58vucTFCOnHcmFWq81
h781UdG+Y7TC1jMXr+62SOuUo6SJn+wd3D/n4pj5o0rHICWptw19+KU0F+f1
Xj7e7aakeNPWMfUd82CdsbNpw51KunVxdl3/kXkwTlK/u8RESRuSXLTnLs1D
SYDf6Ze9lDRUK3Gi3aE8ZOlP8plYqSDlSs1NDzzy4Bm7GP9+UNAHj5XO8WF5
uJ425dozFwWdzfd41ag4D5HB7cflrlLQgn8KUvXa5+O15swFv/QU1HObbhPz
//KRb2nXUFNZT/kvrAcfX5yPO3pHXdeG1JN3re+cFwfycSPg+nqFUz3tHa3Y
me6ej7lhDpdql9ST8UFyax2Sj0OjB+Xu7FdPbYLtg0f8zMf44H+vnCuuo/hm
oQWr2xZgruLXMtOXdXRzemsNp6EFMKjMM4y0q6P152YPD1hQgCz/vfYaU+rI
IMZlaf7eAgSMW5TWs10dKTon2ne6WYAraq1mN0iopeDFml5GwQXorHPb+PmN
WjrjtjJqc14Brt1t6zN0XS2ZZXpUX279E7ua5E/cp1tL2v0LenzU/4m5vtts
7KtqKG+97oTyeT9xw2t1+Og3NfTskfV6rd0/0dVFs9vlwzW0p8z33LTrP1H3
xdHfYUoNGQ9T+Ni+//P3U3eklrWpoTa7/4z87J94sL8qIvhrNX17Y98wskUh
7pd0n5J3sZrc1EIHKv4pRN4No5gJi6vJ0rj1rAGmhbByP9flbY9q0j8+e8dc
20K0M/E3HJNaRfWfXK7aXSnEhimtx9xzq6LgtonvH7wtRLSuv1nm0io6PVcz
Lz6zEC+NXsyL615FZq4r1Rs3K8IttfCKdQmVpJXs8a/+4CJsO712pP35SsrT
KlhsPqsIF99HhWqYVNLTVbqHjm8vQqtPvf9Va1JJe+5a33vhWoS2p7pPGeNf
QeMLfCPS/Yvw2rah6estFdRaV1HROr0I+mNzlm3sXUGx2+ivkY2LYXPDafvk
mHJy87Eft2ZgMUK+3n0z5XA5ra0LWes0oxjKOEvfTXrlpD+m9ZmArcUw+vvr
9BdJZVR/cPbzfJdiTNXyLuxzpIwCg10SO/kV49qn21eCBpfR6eaJv42+F8On
U0ShW3QpzZuh2d+qQQlGjbJq+WFHKWk5rpxxpV8JGk8fN3lK11LKifGw/ji1
BDNXbvHcb11CT7sUXCrfXIJyvee1R58V064lutByLkGWKqVJRlERjb9hnT3N
twTnTKa8jhhQRC1/+LbamVSCOQEGexyXF1Jsf8WQ279K0NbNx8v6wk+a6aP9
cJ1GKfQi3P8JDCugofFG2N+nFKu/RsVEKfOpa53F1/PDSlHpahtSoZtPyr8c
su9PLsWW2Imlh1fkUcZoz1osKkWRidI0wSmXPiwLb/Vt45/X7x9gNSsoh7wO
FmoV7i+Fb5pxh0lV2XTWXd2goWMpHrsMK+s8MJu2B+tP7OpeiuDYrBxN8yxa
kGO6UPdFKa6tcn3o6/SDRjffsdH4Yym2Bt57YBiWST11XA8sTihFzLUVXRo0
yqQmM/ycthaUwu3HCYtllEH5m5PvOChLcdarc/DtA+n05Zzq5TX1MjiPz908
5nAaPX+m/cm7ZxlG9Lw1ZIh6KrnGGKWGGpRhzG39Uw9vpdC+KouyVOMytPtn
0km9Mcm0ootD4yqzMpR+bNNCPyORJo707NJqfRkSrY6O6HY2gQYtCdfptbcM
WnXr900zjif1/YVjhp8pg9r4+we6NP5G5W7qc0xulMF6053pkRGxFP9Of7XF
szJ06rV51sNbMeSfabpzd1AZVq34Z3CG3Ve62XjHyXNxZWh0r7HBBctoOtLf
9bpHbhkep2vdyFoSReun+D31rytD49QNeP/8C83ckBwU3aoc/S8jtdeHz2Rw
WvUtV7McH2fXnfjxM5y6PNYuUOmV483MiGtFA8JIEWmk6jC+HFvNDMo77g6h
9DKLdjrzyuHuH3hKM+0DBXdw6DNubTkSGm765L8omO4P8/zPbFc5pjvd97+Q
F0hnFoRP3XSyHDMvXV1lfOo9We8uND98rRzh/db3mG/0jsyuqm+99LgcTlWX
DE93fEujAvTtH78rx1kbw2KDT/6knWZ6MfhrObpt7mNu7+FHjRvsuJ+UVQ5D
jFg30/0l5fd2fVNaXY7mL7InL3znQxHGfpFNW1TA0mFS6ZFfz8l7bXJmj+4V
2Db780L7Jd508biqyuCfCoQaN2/S9ttT2uul3WIqVaB5s4fjlImPaflnox7L
51RgU/M68+ZjH5JxsYXeDosK5LZqXxwRd58GtnMYf2rHnz83mejxw+0etTHw
nH/rWAXMfg5/WHzRg8rmhlu+vFwBR6NHx139b9O3HYV7Ix5UINV5rtqrlu70
2lX93I+ACnQePmzdhMM36YafvntdZAUuZoyyMRrnRkeSTX3aZlYgy639mPDg
q2SpsgntV1mB2CHdYH/2MplouyaPalqJfwp2rm51xZWGGPkVz+laiap/V1qO
yrpAnS2SG1jqVGKelqnJ3xtcqP6IquOB0ZVoZ/s6etig85R2V3ugy8xKnOlp
YVmi5UxBoUajvFb8ef3espH6U53Is8Bi5jvrSpztO3BmgocjnW7tsPLbkUpo
RZXMfTTUkbbpetoUXqyE+cqW/btmnqP5s8OPNbxfiSZNA2bY+p0jQ+vCK139
K7E3Mviq/c9zpO2i/lg3ohIvOqsvXjbKkRr56r83TqtEyWL1PY0eOVJevGns
4rJKTHtlqJo6zYk+19nkbm1UBeWwQouf7Z3pWXfXeodOVVgRf8XLqNl5ujDG
r831AVVYfcfQoOkAF9qzPLnn85FVUNPWaxBnfYGWHVINDZtehe/ja7/XFlyk
Cbe1J6ctrcLs5v4Pvp+7RAM+GC2u2lKF7oa13TutukKtcy02tzpchck/e4wZ
t+oalTV3ONjLpQonc6dOaOnkRnE6nueH363C7qm6Lk47b9LrGeF3TV5VYX2V
b8frb2+Rm1Whn0V4FUaoZnVUat4me0f1iN0pVUjJW6FSXrhD67z1088V/3m/
Y4/Oy+5/l2bEmlZ4qFVjl15lfHHUPdKvtmn6pn017vjNcjd2uU+durp2+9q3
GknoaKa27QHVjfT7O++/apj3G7NgwLpHlLokmX5NqcbvgVVdPW2fUOB+lWnH
JdUYGPEh8EHkU7p3Q3utzuZqkKHdhJ2lz+j0e6Pd4+yqUdxadWi/5nPa+sPi
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
6f8P9v5l6g==
                "]], {{{0.22568832176882106`, 0.}, {0., -1.}}, {
                32.83333333333333, 0.}}]},
             
             ImageSizeCache->{{335.7511839578168, 
              354.14451208831167`}, {-75.70230801019514, 
              35.947670645002006`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "1.5842491369776777`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.9151921913445605`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.730915754341139`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.6373565204138545`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.42866496696636414`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 1.5842491369776777`}, {
               Style["75%", Bold], 0.9151921913445605}, {
               Style["median", Bold], 0.730915754341139}, {
               Style["25%", Bold], 0.6373565204138545}, {
               Style["min", Bold], 0.42866496696636414`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[13, 18], 0.7222222222222222]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnc41v3bx7WLppY2Snvd0ZaTum9NGndbOw1NDe2iaEfSXpSQijZyKW9k
hcrewiVJGZfRRk/P8TvP3x/P0x93R8fdkev6fj+f83yPl86KzbNW1VdTU6v7
85///V1+JZvdO/BTWUATny7SG3DkHGnvT29wVlFA/R54anawv0CbfBodH+BS
QB6mnm2aeV+ioKxhLcOtCuhUlUlWr29XqKnGsrOLTArIb2SzypNbr9OcMY5a
X7QKyDooMnBIyxvkbqW47qhSUgfH7fGL994k1aUi3d7RSvJILmmVWe8WGUa3
8w52U1LP46t+3Xb3oBPfTAbN26kk2/anb4Ut8aK03psfl5sr6VPKD8vOI72p
19xrI4/1VpJu7qoTLgPv0pbDr55r1+VT3+MDUuvIh4KffjUJTMknt6qtX7W3
3qfm73tGzfTNpx6tDasTlz+k+W1nTvvkkE+d+729febKI/IafyDh0KJ8Cuwc
u+JEwWOq2nJvbheDfNq8/O65EsOnZHwzPeuJRj49X3T4R5qXHznFN1o+rSCP
stMzJlvoBFDm72Ef3ivySNHwYtVWn2fUd8iy9ftd8siiQfO8JpMUZLPEUdV+
XR550PYpZVVBFOaosLlvkkd6LVR33z94Qa1eFP007ZRHLRqFBrrsBT1L76eG
/Fx67jJ94t/3QujfkQ7qKudcOuP9tbz7jVAqPf+unY5xLoWtf/646bUwOlo9
qses8nfULq/nXx6uL0n337P97F3fUddxKwYevR1Ozx+V6j81e0cjrvTbMcY/
gua2nmRUWJNDX7KO/BgdE0kVm9wndfDJoayRDXKqlVF08nXNrIkWOXRpbyO8
/h1NegPnLd6lnkPeq4a36KIdQyEnHq25E5hN2dMtd/aZEEsLizW2Zq7NplfB
Yw4MWxtH1RNX79PQyqbJ6e7dtji9JievkCOGUVkU2vy6S0u/N9S3UZczG3dk
0fwpuWMHZb2l8JU2V131skjHsm9MlW08LQl76/k2OZP6lmve6tsmgb5r93+o
5pBJt58f6//8RgK52Doo/tLPpMDEzMH6gxNp4Lt34SuUGfTkWafq1oGJFGk4
+u3ZMxkUfk5RmGacRCuuns0IN86g42mm09UjkqjmR2nBl/J02hns1XnAP8l0
Yf6kst5u6dRl0X6X4JBkGhrg/n2eeTrpDvnWe+rIFIppX1v/eG0aTVez0F/o
nUKW2+e1UPik0UvtG2G72qZSXeKjjp8t0sh49z8zR+1KpSt/NdftqpFGVSvd
TwxJTSUD59UDzRSpdFiv9PfPgWn0pixkxAGrVBrVfWzauH1ptNasi8kDrVRq
tSXO2v1lGtX3sZmaF5VCo5Oa1Muqn07X1OPntNmZQnpTbnVzH51Oo6z6Lxvf
O4VSL5w1DFqTTolRDuu2pSTT7bP7e1adSqcNvXO3ezgkU+6+E6bad9Kp8eHR
tin6yXTC4U77ns/T6UbB2eONC5LooI/NyA8R6TRmfNnZkS5JtLFL70dLItMp
+cYk17UmSdRqmfavky/Syfq3u/dlVSKlP/lab9e9dFJfUvs4xi2R2ru/bTvS
OZ08ns978cs8kSYmr1EUrU8noy6PowbWJZDBgTaHHhulU/ru5omLfROobqrp
/VdN02lr+upsp0UJNHuAc/bamDRqOTL0AzQSyH+Q4kKyfRp5n+9SoVLEU8Ih
y5QFw9NofLXNL5118dTpluF2s9xUyp4V3+jfTvHkpzC8rHEolUpWzNFueuYt
+aVubf2tWyppa6sPX1f+htaXfry+60kKzc4Jnhxn9oZGzFk4sW58Cp26sm3J
YJ/XVLlpy8WfcckUMq/vNmf119Sy48zsgpnJVN0u52jln3O8L2PoSv3EJOqb
eOba7KhYWlMd/9jSPIkWnTZ95K8XS1maDpHVkYnkPO1XhJZDDAUftpu63DCR
ops9zNyjfEXbP3ZS9nmQQDWRluXZxq8oTbnJMqJHAg116NSQ3KL/fL9afT+n
eLI0eaN1szaK6iKLuud/f0uX6g4NarAoilY3+lCQlfiG4oJGjl+liKTp++//
MP7zuRvuLpkbpRVJXVt/zig7HEejRtxc329nBM1/M3BU0LJY2lA1x+5kSjjF
qVe/3jsuhm48VD9fqh9Ohy80dHvf9RUlb8Sd6S4vac6cqB2+v6Oo6YDtwY9U
YRRCrf91+BBJhh/7JrWdHkZFasOrmyRG0HbPnCIb31By7TfNLSYsnLxXuNSk
aYRS8JGK3JmBLym7x8Q2Y9aF0MIpdpYd/MNIW/Ft6qgzoBs746vsA0PpmMFy
mxqzYBpwa8beHy9DSHU/xjVE/QXFeZitdbkHWtbPINohKohOPPQP2vLuBUXf
ul4xyUFBukvfdWqo85yGdm/SpYVJIDUeMrmj5zYFXbpk/XdCbQANGbbgwuXU
Z6TWNnPjeYU/bfr9PLL1lABa6zjh4oKdfrS0/mAjvTd+lN7EN6SbwVPq1jGg
97sVf+b5oQ6f8lWP6cGQiANDmz4h7xrbtl6+j2hx53lr1IIfUeudxYbr1j2k
HweC9+k6PCSV0jNukfl98rRru1Hx9D6FpO3qURh1j8z6B1xItvMh57ipWzea
3CHbkzMHqNbfJevQ7hFfFF5kFt65dI6NNxn7V3Q8YOBBRk+mrx13zYta3wtf
1/j+TRpRN8P9ba7Hn+c+ZG+36a60dHTzgH5068/zSNEePP4yHdvSYfnSwJt/
vt/eSKPh58hz8Cqr/WY3yO6HSbrrDCfqeGbQ945frlNInGPPkBEOdLnQJkTH
9iqpGT/JCRu9nWr0W+r2HHmZ1NSuDEhon250+IDPpv5dLpLatm5fAgZtx+bN
do3M+p0n4w/jHyiGOsCjY/nLu0vP/vl531ZenuIEv1elBluen6EQtznNDYed
w7MAH9t345xJ2//B6gF0Gc6Bfa1aRTiSXVyz0M7TXNFI3zS20cyTZF3xqMVh
n5uotduYYNv1ON2oeaeoGeaBc2+NRlX1OkrxTZqv3R7oBc9HZWti1xwmlebo
9iV0B83ab/O6r7T/875Xh62MvAedF34FdmcP0Yx+ZzdnTbuPxrWe/VbvOkij
Oi9zumP1EGuWr/ELP21H6W5fLQt9HsE+pPV+x4e2tFbPcayO6jGmuu/JD7h5
gJre66m5WP8pqkP7jrKp2E+Xhio+XtrhB53fX8aFuu6nUf4zkBzoD/tldp36
3tlP0WOLzreuDUDbytPd27Q5QPND92+YZhyI7Etjm2ukH6Dvpu0mHLNXwMP8
TLOXtbZ0LO5up/DIIEzNcZx7IMyO+s4yUf1u9gKTq0f0sw44SM/S0iLHmgVj
79F6s6/mHqL5izdd3+kMHD8faxNi6EDbt9RXZFiFwOzolUPOCYfJ8KmZ506N
UPjHjxto5naUmn+75NzeNxTtm9z8HeJ9nJJHv9/7xDwMdT8SDbJUJ8lj35A1
M1Vh6GtiHnFrjxNtwJ5Z5Wde4vKVZovueziTQf3IcY764di35MUOGupCDf9p
029ASjiajsgwzco/S3FHF7V7tSMCm8MOn9wcdJ6uxdz+vVorEjURVQ6/gy+S
ZYuqTw0VkcgKXn/pZtllMphhlOpuEQVVxpiwfdOuUY3L8VDj2ijEnH6TEpHp
SuEpyT7vXKPxl94u03evb9A5Le1L+4xf4UYDpX7yJHdaZLHevrPyFQI1vz1Y
l3uLBrr6b3pmHwPLmGajo108qTqv3sK5erFQJuepaVrepvCeZv9UR8Ziu/fc
lutm36FTqy8NdVkbB+Va55mllvdo9p2CLkPVX2NO8/n9X17wpV4lg5u8ufca
7r3qttZ+ekAlg/dUrjd7g1FZ3cOH//WInm+JyGlW/gZJ+/ymtbZ9TA5PW7+6
7fwW2sNq9hzMfUJ3fw3K1O0UjxSUa1bP8qOW15PeVljFY+/8qFOvMvxpq9Hu
iBBFPMIrL45esP0ZZeZ2DzqtkYBDwUE7y3UVZHQw/OGSRQkYGqf7M64wiLx0
13kN8k1A9+iner1fvCD18FbXamoT8GVJy3l/3QFtWuV3JtY8EdcmdzeoTQ6h
1MYWR6+4JcK46MWSsNxQGuOttt9KlYiV+XhRUh1G7pO9to4ySYLrPwmNbdqF
U+PPU9c2cUlC3uNH2mZGEbTpVMXiVGUSTHodn7hsayQlDrr4r6d+MoYljDc9
+zCKRrw1nLzdIRlevTZHhH+PJldrpdGElGS0nlL+4PWUGKqvecxAs3cKur5Z
43vQK5bWPRnUP39HCnpE73l6V+M1vZmd1ONhVAom9xlipbXnz179uqu9rVYq
2mxS87xc8ZauXOyuYW6Vipm3n6p/fRZPdaPC1bopUjHGOPC01f4EWp1p9fWz
ehoKevd73NQ0kWL2tipRWKRh/Z1pOU81k2hYN7/84z5paO9epDXjj065ELww
bX5tGvRGpDq9CEimn0vVXvcxT8eLbp81ladTaEU9r7Cvrum4Wbzinsf6VIp0
n/osojwdg7V7aZVPSaPBf1f4njPOwJUhpXPvD0onl8ILt1aeyYD/E1vdpLYZ
9POI4eVhygwoq+LWzarNoCV9lU719DPhP1E3XO9TJoW9OuoQb58Jc+85sVMz
s6j/+kF73JIz0Xb9r33Rr7PJqXnS5k16WSgcHrzfMzyHvvruWjVuRxZCXzeb
VRn8jhZO727RPCoL5dvm24c//6PbVS9nZHXMRu9DceldluZRbxcr07trs7E1
xzvKPz+PTui3MtwdmA33Fj4FpqvzqTL56V+T1HOQqrhUqCzJp7k7FvbpaJGD
XvrP/vawUVJwR7VuH+7lICMrudFttQLSDfTU9KvJweGIyv3NnAroxMKpTR3M
3mFuQm7Tkm7vqeyXqnaW6zts65bzxPrhe5p1/UKVTvk7HNsRl634p5AURobF
KsrFpjibyLKcQuqel/8Ozrk4cOKm7l+7P9CRg0eTnfJzYexZ4uLVsYhsznQo
HNwpD8UXlutsCyyiPiuKl14wycPYuEaPA5d8pKxhzzNrrfKw8rLPpqtNismx
wek5q1zy8EbPdvDIp8Vkkrw8Pk6Rh7szXmZ6W36iKg+DqQYFefAoPJjYtNNn
um3TJPKqRj6SdIPN1yd8pgWmmcYNDPJxZ2htdK5jCWl09A1atygfptsKVlmb
lxKKbEckOuTDavqDVTpty2jLs1mPRvvmI7hi9jVVVhnpHdcbeDMlH4diqyuT
vcspbcF3r6Z1+XBcNeDnO0MVnewfq2PdW4l+u38/nnxbReN+Xb+WZq7Ewv13
d15pW0HlsdYdaacS3ajrx+cHK+jWtQkuXm5KnPjaefaligqas7FDi5bRSsRv
fXK71cpKamZUfNRGpcSxlaXL6qVWUlDL5/VztAow93Sn0xOnVNHGXKf9f5sU
YFfwl6wAVJHOw+Xf71kVwLsm0rXniGpKsjPY1talADuqN/2Y51tNR2c2Kduj
KEDse8vf3fS+0GjdzLVKZQEsrJd8GHP9C5VW+hRM1niPMd7zja3bfyW3l7ZL
Hum/x+KLF4z2OX6lmedmZWgt+vP/r7Wu7dToGzVapTfbzuE9Nq4ISKm37xsF
DP/+psjnPep5pyqKK77R+saxk6envIf9zrcXD6/+Tt3Srof7177HqnXTA45m
fKeE29bUvXchPnbrMvjmlB9kv2uC4rB5IWL32Uw+FPiDhk/uMLx0RyEWNeyl
lqX3k4o7FT+Y7VaInVnNVlmc/klXPwX1fx5ViLl2Mzo//fKTpgc5efZUFeJG
o/bhF+b/onqnlmuf1PqAKVPO7fYP+EVPFhlcrTT+gDaj0vSjNWtozaAmHRZa
fcDVl8Wj7K1qqFNdhnPomQ/wrH1y6GZQDb1+46PRT/EBP6Ovauc1rSVbN9sj
zsoP6G3b5+zvGbWkbz2r3nf1Ipj6lmqHn62lQmO9fUv1i3A1Tr/X1/hautjm
+9dIiyKc0/KbsaJpHU1VxmwZ7FCEZ817VmSMrqPax9dLzvsUYf4k9a76q+ro
kb31mtrkIgwbkZc76UQdrZw9QWlZW4SMgx1X//Kuo456HRbH6X2EWvCwFkND
6+jVl49p+uYfsXBK4e6ExDraGxk06+qOj2gxeJ3b25w6GnLR6XV9t4/ILTFH
D2Ud5a9ZPmld1EdcaNlo+fPcOjo/yuBlQvlHjMt3M/FMraOJzZoYjdYqxoMA
A8PcyDr6kZHx7IZxMarmrxiw/WEd+d710W9qVYxRS53Dt56to6V7be9vPlOM
F2/tNpZtrqO202b1SwssRj/9lOa//6mjiK56HkbKYiR+GJga0r6Odpd+6+6l
/gmDzB00Z+fW0oDgmMst9D9hRPN9hdnutZTjdL2djcUnvHQd2Np+WS2dWWp9
Otv+E5JC9B5v0aqlCUMnqP/t8wmtWw5rlhZTQ9/UOhy+l/wJlgGbhr7fWUN3
Ej7+1qz9BCoxzI3rUUOL3YP27NH7jEZDj/aNCvtFrbY5fck3+4xp66LHaCz/
RaETlltP3vEZc1cO10n6+ZNs2hl8fuj6GUiwOLLQ+Sf1KWy8WivqM86u3bfr
nc5PyvLLyLMt/4yngWlDrj/4QY5HfCyKOpbgzX6ttJTRP8hknm2quXEJDPR+
zIkO+U5VfWbN9F9bgpUPRnT3+/s7eX7vFdftTAmmZqT9zI74RgtefTM9HFiC
FGVEvt3f30jjSkxoSX4JHl++F5Uf8pWw7rrhbPVS1HRuusN47FfaMtY6IGhY
KVyVi1bmPPlCPZtPGNbTohSXZix0/N7/C6Vlt/c9YV+KqvBPsxNuVNNx3499
Ku+V4nDcTwuv9tU07kCQ+4LkUpyyy7b0O15F5eZO3UJrSrGhq57+2NpKutVj
+aW+emXIeVW4cZt1Jc1R6bd1NiuD79We9pcKKqhJaGOnbzZlwL4dpwrmVlDQ
mYymS13LMP7fIINTMSrauMLHPjKyDFfPx7hGG6lIR9+2blB5Gfwj/71yZU05
JTWYtft8x3Jc2GDV/sq/ZXQ0uVd1DZVjwJG93hUmpTTa89smy7XlaFa39Mjv
YSX02SamONa5HF09dlR26/OZ3EyvW+oHlqOxydjOt7p/opkdrXOv5JfDKHd0
RV6nYqq/XWdQvUYq5D0530qv00dalH3ik0EnFZrbzT/7rGsRPf27+vbaQSok
dw1vmNfrA7X0XbzqmokKuu2U47L+KqS17aN04+eokOrhOKdwwnsK2z80r8E6
Fd7O13cysCigzh8uXx95QAXjrQcm/dyppO3mDSzWu6hwvbbPzxVX8umN/wYt
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
T8+8PYS3Zx4fwuMzrw/h9f8vz/8/tyoHZg==
                "]], {{{
                0.21586641746141014`, 0.}, {0., -1.}}, {33.83333333333333, 
                0.}}]},
             
             ImageSizeCache->{{343.5775325805363, 
              361.8754122300073}, {-41.22483238778452, 83.17689866586213}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.929456066296125`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.7753460724553496`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.7439019401159512`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.48472582227091354`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.3030838020318878`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.929456066296125}, {
               Style["75%", Bold], 0.7753460724553496}, {
               Style["median", Bold], 0.7439019401159512}, {
               Style["25%", Bold], 0.48472582227091354`}, {
               Style["min", Bold], -0.3030838020318878}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[7, 9], 0.7777777777777778]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
n/sY6O3z6/H6xq9KZuqYvn0xeY02qACuF1I61a3QMX2d8rrZgugCXLYKH7/Z
VscU9cjfV1mAWWdbufc6qGMa1PfV4nq1Bei6utHTRmd1TANnjKn3t34hBu7d
t6nhNR3T55sDfB4aFiK5+GBY07s6pgFnh89tZFKInr37TGngr2P65Knfj6Xm
hbgZ8uxq2nMdU//EP677Wxdi+NSatqeDdEz9tL5TmzoW4uylV5YNFDqmD3sZ
lqx0K0TU7X7BQ349vj/l9rkAn0L87vmstEmwjqnvht7GLYML0WbU29mHX+iY
+py6nr0muhCbL7l+uPLr9bwfdT35UlkI56ddsqb/ej9esReHt6ktxL+j5oU4
X9Uxvalu/229fhHuFbY0nn1ax/R6N/eDwYZF6Pbi2vUbjjqmVye0GdjOpAgW
GaXFjht1TC+vc4ncaF6E2YPWBOVb6JhePN7c7o11EXZ/shiVbaxjev7BsZ6d
HIuwwG+5/o4+OqbnIht92upWhErblc2u6OqYulUe3PrBpwihe4f6hIfV0dlO
Oh26BRchP3L1w+B/6+i0sUPwjugiLI9Oa915ch2dtNSs+6wsQuF52xD1r/Ny
4vCelr1qi5B4/pLD3ju1dOxuxZM9+sVoY7Bz8eP5tXTkq+2yMMNiFF8O/BGi
/tWfy0oa9DUpRo9Tf0xMvaKlg+023dtnXoxORmbz2o7X0v4x+fOjrIvxrsmn
ma7xNeS43Epj6FiM9J+bTfZvraF/DmTddHIrRt9uhvWbNKwh+9urZsT5FOP9
lNAWFueqaW9IimpQcDFc7nSd696nmnYVL7lwKLoYejbN9SoeamhHmwRKUhZj
oJnNe89f9drWyCJvaG0xTlYNyowOUtPWxVEuR/VLcG/d2qCnE9S02cFsZKph
CUz3dbbc9/YnbbwZmjLCpATrQ4evXTTpJ214P+Pwv+YlaNjR8c0/r3/Q+vwP
gzKtSzClfpun3U1+0LqWk2NGO5agfr9+/257UUVr/ny977RbCYa9Onno9vAq
srQw6ZPrU4IDvZO9VfcraYVd4OfxwSUItjl6y7lvJS27Onq7W3QJXsSUe7ld
raAlr592KlCWIOW271izdhX0d86w16a1JbhrnDhIefI7LWzqZ31evxRmLh0t
XRp+pwV//PFbiWEpVk578XLbP+U0f57vs8kmpbjY+IL2VUUZzd3Vf+Vl81KY
xHr4X99cRnMueumWW5diTHFYy8l5KpoV1OvhdMdS6D0+GRdtqaKZGdcsrruV
ose6mbdKXpbStEZdtZU+pfhz11oL3yclNGXARa9ZwaUYMN3pq8GjYpo0u/0s
z+hSGFll7Pf0K6IJtm7f1cpS7OukM83mcSHRud8uz60txbKa8wdeviiga8lT
b0Y3VWHdo746YW/z6dqWRpWObVUIcLM6mxyppCs676YP7KHCHX0vw87ZeXTF
9eCV2AEqvD9ZHhOgyaVLBhNU+0eo8EfO9Fep7XLpYkDdpEGkQvrWC3OfG+XQ
henB5+NnqFAW81uizZJsOp/0T+HBBSo4eanPtXfOIo9N42jwShWikvK7xftn
0rlatWviBhWsF+abvs/NIPczz3Odd6pw6EoH/aoeGeTWe8/YoU4qHN2/vc5+
RTq5PjFy+XZchcGuL1++nZxGZ6dWZBxxV6FN9rY2NvEpdCbB32jYdRX23fP7
WbUzmU7b2B5PuavCy45mKbbdvpFLzZCUY09+vV5o0NnEiEQ65VIydARU2BMa
1f730wl0sucD57QQFXQn3zm68u94+td/Y8KJGBVGJ5wbtmZQHJ2YPHDQyDQV
Ah1vPurZPJaOxSmdMvJVuFk08JFDRTQdtb4TfbJChZVTm4xfqoyiI5p1/UfX
qZAYeLuJR24kHT5psC+raRlK3n75oFsaQc7ds8Jc2pahNNV388F6EXTI72bv
sT3K0LTwhv7TcWF0cOKq3TkDyjCm5u92gUdD6UBM989nRpShprVP94e5n2m/
VUq38VSGlf3XrO35dwg5/bxsmzejDM+W+Xtf//aRHE8see+6oAx1Pfe8ebrt
Azl07dTJZGUZGn0vM8lv/57+eRi/KX9DGRbPdpv86utb2mfqoXDfWYaEDnmn
fN3fkH3UgramTmXY1+Lju8kbX5PdWn3rwuNlaG/xqnPVXAXtrYoM9HAvQ/YS
y1s3TwTTnmNnWk+8Xgb/FtNSTp5+Rbs7m60pvluGGZO/jff57yXtut/y2YUn
v/79lfXJJfnPaadJaLPJKMPfj1otXG78jLZHnFhRGlIG1ejd28p9npLt6hn+
l2LK0PxoGP77/Qltq2isOzWtDEZhxmMvvfOnrUc+LC7LL0Ox+Qe83P6ItnQ8
/OBKRRlueYad627kR5t9J9WbXlcG3cz6D/5r95A2ja9v8b1pOXTPnvGpzrlH
G8MUPtfalqPri1VZSxLvks0qp5oZPcqxcmP/ZL2SO7Sh3Hhu5YByLN4TO2dX
b2+ydq7xvDGiHGMarPNM3+lF69sH/viLypFUGzBdkXWLrHzs/voxoxyDI3fW
nNx8k9aNHX391oJybLD8rvP1txu0NrSqfPbKchyaOtrZ8MJVWrPi6VT1hnK8
mxQa02T8ZVqt2nHJa2c5pr9OiLzY7CJZHhxWYuZUjuHuq6It6p2nVW3LJlQf
L4fw3ZXe/53zdv/fj/n5kOfz/wf5//j1IK/H7wfyfvj9Qt4v/zyQn4d/XsjP
y58H5PPgzwvyefHnCfk8+fOGfN78fUC+D/6+IN8Xf5+Q75O/b8j3zecBch74
vEDOC58nyHni8wY5b3weIeeRzyvkvPJ5hpxnPu+Q8873AXIf+L5A7gvfJ8h9
4vsGuW98HyH3ke8r5L7yfYbcZ77vkPvO9QBSD7heQOoF1xNIPeF6A6k3XI8g
9YjrFaRecT2D1DOud5B6x/UQUg+5XkLqJddTSD3legupt1yPIfWY6zWkXnM9
h9RzrveQes/9ANIPuF9A+gX3E0g/4X4D6TfcjyD9iPsVpF9xP4P0M+53kH7H
/RDSD7lfQvol91NIP+V+C+m33I8h/Zj7NaRfcz+H9HPu95B+z/MAZB7geQEy
L/A8AZkneN6AzBs8j0DmEZ5XIPMKzzOQeYbnHci8w/MQZB7ieQkyL/E8BZmn
eN6CzFs8j0HmMZ7XIPMaz3OQeY7nPci8x/MgZB7keREyL/I8CZkned6EzJs8
j0LmUZ5XIfMqz7OQeZbnXci8y/MwZB7meRkyL/M8DZmned6GzNs8j0PmcZ7X
IfM6z/OQeZ7nfci8z/sAZB/gfQGyL/A+AdkneN+A7Bu8j0D2Ed5XIPsK7zMK
2Wd431HIvsP7kEL2Id6XFLIv8T6lkH2K9y2F7Fu8jylkH+N9TSH7Gu9zCtnn
eN9TyL7H+6BC9kHeFxWyL/I+qZB9kvdNheybvI8qZB/lfVUh+yrvswrZZ3nf
Vci+y/uwQvZh3pcVsi/zPq2QfZr3bYXs27yPK2Qf531dIfs67/MK2ed531fI
vs88QCE8gHkBhBcwT4DwBOYNEN7APALCI5hXQHgF8wwIz2DeAeEdzEMgPIR5
CYSXME/B/+cp/4+3QHgL8xgIj2FeA+E1zHMgPId5D4T3MA+C8CDmRRBexDwJ
wpOYN0F4E/MoCI9iXgXhVcyzIDyLeReEdzEPg/Aw5mUQXsY8DcLTmLdBeBvz
OAiPY14H4XXM8yA8j3kfhPcxD4TwQOaFEF7IPBHCE5k3Qngj80gIj2ReCeGV
zDMhPJN5J4R3Mg+F8FDmpRBeyjwVwlOZt0J4K/NYCI9lXgvhtcxzITyXeS+E
9zIPhvBg5sUQXsw8GcKTmTdDeDPzaAiPZl4N4dXMsyE8m3k3hHczD4fwcObl
EF7OPB3C05m3Q3g783gIj2deD+H1zPMhPJ95P4T3cx4AyQM4L4DkBZwnQPIE
zhsgeQPnEZA8gvMKSF7BeQYkz+C8A5J3cB4CyUM4L4HkJZynQPIUzlsgeQvn
MZA8hvMaSF7DeQ4kz+G8B5L3cB4EyYM4L4LkRZwnQfIkzpsgeRPnUZA8ivMq
SF7FeRYkz+K8C5J3cR4GycM4L4PkZZynQfI0ztsgeRvncZA8jvM6SF7HeR4k
z+O8D5L3cR4IyQM5L4TkhZwnQvJEzhsheSPnkZA8kvNKSF7JeSYkz+S8E5J3
ch4KyUM5L4XkpZynQvJUzlsheSvnsZA8lvNaSF7LeS4kz+W8F5L3ch4MyYM5
L4bkxZwnQ/JkzpsheTPn0ZA8mvNqSF7NeTYkz+a8G5J3cx4OycM5L4fk5Zyn
Q/J0ztsheTvn8ZA8nvN6SF7PeT4kz+e8H5L3sw8A8QHYF4D4AuwTQHwC9g0g
vgH7CBAfgX0FiK/APgPEZ2DfAeI7sA8B8SHYl4D4EuxTQHwK9i0gvgX7GBAf
g30NiK/BPgfE52DfA+J7sA8C8UHYF4H4IuyTQHwS9k0gvgn7KBAfhX0ViK/C
PgvEZ2HfBeK7sA8D8WHYl4H4MuzTQHwa9m0gvg37OBAfh30diK/DPg/E52Hf
B+L7sA8E8YHYF4L4QuwTQXwi9o0gvhH7SBAfiX0liK/EPhPEZ2LfCeI7sQ8F
8aHYl4L4UuxTQXwq9q0gvhX7WBAfi30tiK/FPhfE52LfC+J7sQ8G8cHYF4P4
YuyTQXwy9s0gvhn7aBAfjX01iK/GPhvEZ2PfDeK7sQ8H8eHYl4P4cuzTQXw6
9u0gvh37eBAfj309iK/HPh/E52PfD+L7sQ8I8QHZF4T4guwTQnxC9g0hviH7
iBAfkX1FiK/IPiPEZ2TfEeI7sg8J8SHZl4T4kuxTQnxK9i0hviX7mBAfk31N
iK/JPifE52TfE+J7sg8K8UHZF4X4ouyTQnxS9k0hvin7qBAflX1ViK/KPivE
Z2XfFeK7sg8L8WHZl4X4suzTQnxa9m0hvi37uBAfl31diK/7P33e/wMJGL+A

                "]], {{{0.19899632030552955`, 0.}, {0., -1.}}, {
                34.83333333333333, 0.}}]},
             
             ImageSizeCache->{{351.43812809063587`, 
              369.5720654843228}, {-35.08748328596095, 31.04290783560112}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.9262996697993414`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.8504599900857187`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.6636182476911104`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.5838843841399477`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.46116173592196696`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.9262996697993414}, {
               Style["75%", Bold], 0.8504599900857187}, {
               Style["median", Bold], 0.6636182476911104}, {
               Style["25%", Bold], 0.5838843841399477}, {
               Style["min", Bold], 0.46116173592196696`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[5, 6], 0.8333333333333334]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndYj23Yx9uSyizK3mRlp3Dd9ozKzHqsyshKsoWS7MhDSJKMSFZPtu8d
KUVpS7T3/pWKhrze4zjPf963Pzg6pN+6rvP8jk/31VusbFSUlJSi/v7xv3/z
14bBhuc6HnmNKsWEc23FVZGyOlvrockbJNu9OTFx/zUx+eJdl8mlb1BR02Nu
abmvePjRoTHlGuDk0b1cdaifaHnw6ouQ/jLMndUK9h25IaZeVv550EXG2hdH
n+WX+ot9wTbDZ6XJGLLQySPK7pZ4HBO5RW90KIKW6oy6W3tbFBUOCszwCMXj
G44lTZcCRDfVc4UBxaFQcbs5zcTqnljYubaX4+S38I0dr/Wy631xcvSSVeN9
3qJ4bWlxhsoDEWb55qrmr7fIntB+eN3+h6J+Y4/UeMt3UNr4LOzikUfC2M1N
/+q9dzCLrOti6/VY2PoWW9mph6GqITV1f8gT4f1izpmh/4TBYcgIt/CMYJGY
+Phjw7MwWDb3DpzfLkRoVehrhrd5j2Nrc0/ozX8qpOZ7J3vYv8erZp08snye
iV09Mw4uCX8Pv7t9D12rfi6Cxk163atbOH4f92rTbcFLkbvodl357nBc7tRW
t5/8Shg6tBj1PCEc+zrU/Nwy8o2wOLnFwWVQBObVitAbwRDutxKCzI9GoIue
6uRHPrJ4I48uaZ8VgaYt4cOv2YWK6tQrfbNNP+BH/fWB6SPeioE1f9YEnv+A
neZxbY003onVLdf6OpV/wKneijEm394Jr/4fvkvTI2Hz64nd0ydhImbSQIMW
fpHwNnE0tzrzXqit8FiQ1BCJAJ2Dkx5sChdjd1WfvbYgCm5tx51dNidCOJxb
HLP+QRS+hK50/mn8QdwJfKU1ovlHXBzuZt9KL1Jkhneb1rT6I5wTDiwfVh8p
9LNcXT68+ohhznoLczKixOyGQpzT/wTzYSGv/N9/FIf1zBuXbf2EpnmvPvy4
+0k8G/LIpG/UJ2hVt2mYcSZaKGbo7ajsGY2fh1/6dnaIEX3W7n70cn80TjV7
viLb6rNYdiCt7MiXaKx/Zq841iFWnPeaYGQxNAY/Fxsv0XSLFVGPb9oanoiB
WmOc9+3KWKEU3fxGbm4MysSmgK5L48Sogk0ZQeM/Y/fw2cv7vY0T9srxHXd7
fcawm3kj9/SJF/4dRy2eVPUZIYNW3o85Gi/KDM2jNPrEotRnrVdmXrzQ7Odc
WGIVi/kOj13tpQTRa+QjjTjnWJin5bYfejFBiIk5vUICY7HNMXFTRVGCWDJX
b9KVr7HIf/9nx0aTRLFj2bRVBzXisLCDzVz7w4nCY/1uZ5vhcTA5YeL3KiJR
BDrduzpzZRy2DsmtNdJMEhEuaS+HnIrD1znvmh+flCSyPVqmtnsRh2F1uh0f
7U4STVcn/KrLj4Pen52m++4mCYN72/Uz2sZj3svKU5+SksSIZzdHhEnxWDhv
jKd7Q5KY+/6LVcCmeExaFrTUu2Oy2BDffNvpy/EI/Nnxbd3IZOGWYXZme0Q8
NNZ3uuw1M1lcL910f3F1PNo+/ZTiZJ0sXtVd+ziuewJCm58L8VqdLFI04ot6
zEmAUdWbSE3bZPGjrZqm5t4EnDz1wyBlTbLQ7T6qT9ntBPjO7Tawy7Jk0X/w
usnxiQn416Bbs7o5yWKy2eXVT5UT0aWk2PjU2GSxcvqng96DE/Ht62Z/9d7J
Yu+CJp9DSxOxIref7KmZLC6sNn5t656I7W5lwx0LksTjLau/zfovER0e3n2T
EZokovedrzPOTsTlRP26Dl5JovBYeHv9lklYuSb/yfoNSUL14q+RDWZJ2J3w
oaDHmCTRxd9ofua6JASGWGy6pJYkTB8tc3j/bxKuXJ87t290oljw5rTH3bdJ
CC3Xdh/gmSi2fpSDzlQkIWRVpI72okRxMqXqk2OnZLw07P5+iEGiuJ3Xq8R6
RjKslrv/afqaIN5WLWwunJKxvu7y4NJLCSLtj3vfXjeS0d3H/+AG6wTxS/vl
lOaxybBs+3SwokOCaGdYtqa8MRn9x1p0r02JF0P6dj2c0P8Lblirev68FC9m
jrD0fbbwCxbXHHi0bVm8sJ3g8uaqyxfcfr/UO69bvDg057/vhx9+gUael3Z8
QZzwXlpQb5f2BS1KNPsFP4oTT9cZGJhrpSB9yI3Qls5xIn7HrNHDRqdgVVcj
Q1uLOFF+eP+C9mtTUNHiibtZnzjR3OPB9kaPFHzsrNxCWzlO9LqadTbrdQpG
h1uULsiKFdLdtg/Di1OgYZF0xCsiVix5OiXmXvuv+FRXc2VucKxwCttZ6jH5
K3b5ZT6tvh0rzsUFaDlt+4ov+POhyS9WBKZ/67fU5yteX3GLyLoZKz6U6EyT
Pn5Fl8JBi3UfxYrcX8Km96+viOhuuq0yLFY0qTu4aPVORaW6j0ft38c3bOt/
vcIyFWsiZh4+qBknRnRLRuKBVERYR6mWmsQJi0Ga6c/vpWLQ62XLLmz/e99N
TRt9UlIRoLZLOelZnHCbZm/oqv4NCfptjBo044XffB+T9cO+oeyG47o5a+PF
q1WxC+f88w3xFg/3tP4YL1I2q+wYfvIb9tvLLV3GJYjqvSM8Ozz/hqNVA6Z/
fZkgdI/ZPvqd9w0X8k2NJk1NFEYXvD5nt/mO++/sVxd+TxRTb0SVRYjveGId
26zIOUmsfNjY4r79d3wYcmXt8iHJYt/rwUbnLn2HucmWAUtLkoVX1MrpO8O/
46h7zaPMJ1/E4y/nbJf9+I6wrQfHV7mniJjcMNcJ3dJgu95yxNENX0VhZa1f
H/M0nO71ZNHpxalC7U+/0BZ70mD3z9b3ZVbfRDftpRmKW2kIdnw4yMX6uzA1
OPU7KSEN/VQHFPa1TxML+6DjS6V02DvvfeFzPF1sHV45xndQOhZ6zV/wIDhD
nJR6Lj6yJB2ZspKJ1o5Mccd8gdOGo+kw0FraS9LLEm+XHD0/NzgdKzUsbGNe
ZIl0u+ePR2Slw6tRP++ITbaodyyJNdDNQP87+ReG6+WIdoc7VzSZZiCiZ4C/
b2SOMD4zVyfXLgMLH+l5njucK2Z7HxoQeT4Db2aYbPso8oRtwJMZQaEZiG5r
o62lnC8Oh+TZeZZn4NzmE/21wvNFTFaLSa90MtHBNO6d6+kCsaywV/zgXpm4
dnqehfGSQlFcPm7VddNMWJqla4T2KxI7axYq2lpmYov5P0OK6oqEeuMWZze7
TMy683m7dXSxOKdyTLdufyYM940bFepXIro197u68Xwm3lpcKo7ZXSqCWr4c
mH43E0NdUrcbW5UJM/3Elxahmbjgr+bqOaBcRHYqm/nuSyZSJp1suqleIRb1
1EgdWZ4JxeYzy/QzK0Ru/67r76hlYbZtn+YzlyuEg7HJL8OOWViXcrXeLkoh
lEZbHj01NAuLdFtZjh9dKU6N26CvND0LS+6O3nb7RqXoONnlpsOKLOxcaqTp
3LJK3JnpPSLPMQvnN1qO9dtTJUZZ/vdu0YksaC/9/b0it0qELYqxirqehW2d
x3hMn/NDWK4oyBr7LAtzfh9qOh3yQ2SsVdr2ICYLfTdpNd7uXC3sNxoo9cjL
gl0n4wd7XKpF/bZhZ843ZMHyeOwTRUG1cN81q0uzNtnwVR1gVjuzRug5r72/
u1825uxS7bcnsEbcOLJ/bOn4bCilv+mzWbtWDD154eOKBdlo8210aPiGWvHm
3IMlcRuzsWNY6817I2rF7EsfiiYdzkZ5jNUVtx4/Req1rF0hXtlwM+8TnLf3
p7C7Vd+s/4NsJDl6dL+U8FPUBLa9eOV9NjJ0dKf69/8lDj8Z2Ef3ezZmqag5
6hz4JVq9mPLfwapsdLNpTE+L/SV85BWTf2jmQEMr+Gj3HnViQMTOBJuuOZjq
qNGzYFudeB7tsTplZA4MOsU2CLlOTE0MqJw5OweZI4o+C516kZj69uDr1Tlw
HGhzp3FxvVid9a2l8e4cdK+Yff/0jXpRUVDt43cmBxGH2ta0LKsX+8t1Buvd
ykGGr46F98gG0aKmz+ujr3JgETyuleX+BuHVIGbXx+dgh1N09OywBtFHxfqb
fVEOTNtd6PdAq1EEazpsyPiTg05mXY56WTSKCS1P1Fnq52Lp5r0J/S80is96
/u5hA3PxsdmxUa7fGsWyTq/bj56Ui+ubS+I+dPstinsk3wqwzkXPida7O9j+
Frv6V4zstDUXf7bd2uh577dQN9Z8f9otF+d36WpbV/4WnqO6z1e+movUXmbe
R0c3iW7jTHO2P8lF+39df5odaBJBk+Y55EfmQm9U3tyz75vE2Jn2ytaZuZgc
bVDmq/NHRFoc8fhYm4utsavKDy38IxYt8uk6XicPgy7NbTnD94/IW/406GHP
PJjZt9mqWfJHOKyNHdfTNA++FTEP7ToqSUobiz79a5EH4z3qHZMmKEmnt6ks
07TLQ7v777Ti1ilJHXd1LNmzPw/OS1rar/BQkgIOjNhT5pmHnf9YOBx4piSN
OmLefOXdPCx6s/m4cZaSFHbC1itezsOVjU/mOmgpS1bnnPtO+ZIHj8UHXMQI
ZSnDyyvkaVkectpkNDu3QlnadO3RFCO1fExo2SFt1TFlqf5mVKK3YT5ubW/Z
42awsuQemLOm5dB8HFe6194iU1nSf9JYdWhaPmq8WvZdoK0i3Xiud7h6eT7u
lz0t9jdRkYbKg1vbOeZj+R8L08E2KhLCp/l+PZ6PsZ5Tx6SfVZFmR68cMvt6
PoYvy7PzfaMipSbsfvPmaT50jleHrChRkdalnjMfGpOPaVX/tFbuoCrVZN77
fiM3H70t9jzZMllVcikI26jfkA8Du5LkM1tVpVblafXurQtwymm8/lRvVcmn
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
eqEipeLUdWdPBYasi7yUIkN02W5Y9MxHAdMZrsJjz2thU3vLuCpAgdMf4nr2
WPRSBO4evmvAfwoctdp+r8WC5+JHI7BWVmDxaI+Rnx2eCtODs5v5fFTg35dO
ujVB/4mDql/nfEn++/tvm8zW1gwWEW42F1plK1BRtubfe/seC12tqrQZZQqc
3aH+YmWLR2LBqQO9XX4p8CvtdVaZzQPh3arFpleqlQjrec+9U26gyPG8GFyj
W4lFNnemyqfviv7tezUONqxEQcyJkDVr7oitlx9OWte7El/zLhy69c8t8bTz
uBPXjSuxKyY4ddwhf9HkGxmfalYJpXXJKdXv/cSUXgsN202rRGaq9ePAAdfF
idvZq8ytKjG/vjLk+cprIt5oS4Db8r/fr3Fr28ffWxgENSiw7u//p6+VQ91N
6rb//+/p58E/T78P/Pvo8cCPR88H/Hzo+YKfL70e8Ouh1wt+vfR+gN8Per/A
7xe9n+D3k95v8PtNnwf486DPC/x50ecJ/jzp8wZ/3nQewOeBzgv4vNB5Ap8n
Om/g80bnEXwe6byCzyudZ/B5pvMOPu90H8D3ge4L+L7QfQLfJ7pv4PtG9xF8
H+m+gu8r3Wfwfab7Dr7vNA/A84DmBXhe0DwBzxOaN+B5Q/MIPI9oXoHnFc0z
8DyjeQeedzQPwfOQ5iV4XtI8Bc9TmrfgeUvzGDyPaV6D5zXNc/A8p3kPnve0
D8D7gPYFeF/QPgHvE9o34H1D+wi8j2hfgfcV7TPwPqN9B953tA/B+5D2JXhf
0j4F71Pat+B9S/sYvI9pX4P3Ne1z8D6nfQ/e96QHwHqA9AJYL5CeAOsJ0htg
vUF6BKxHSK+A9QrpGbCeIb0D1jukh8B6iPQSWC+RngLrKdJbYL1Fegysx0iv
gfUa6TmwniO9J7PeIz0osx4kvSizXiQ9KbOeJL0ps94kPSqzHiW9KrNeJT0r
s54lvSuz3iU9LLMeJr0ss14mPS2znia9LbPeJj0usx4nvS6zXic9L7OeJ70v
s94nPyCzHyC/ILNfID8hs58gvyGz3yA/IrMfIb8is18hPyOznyG/I7PfIT8k
sx8ivySzXyI/JbOfIr8ls98iPyazHyO/JrNfIz8ns58jvyez3yM/KLMfJL8o
s18kPymznyS/KbPfJD8qsx8lvyqzXyU/K7OfJb8rs98lPyyzHya/LLNfJj8t
s58mvy2z3yY/LrMfJ78us18nPy+znye/L7PfpzxA5jyA8gKZ8wLKE2TOEyhv
kDlvoDxC5jyC8gqZ8wrKM2TOMyjvkDnvoDxE5jyE8hKZ8xLKU2TOUyhvkTlv
oTxG5jyG8hqZ8xrKc2TOcyjvkTnvoTxI5jyI8iKZ8yLKk2TOkyhvkjlvojxK
5jyK8iqZ8yrKs2TOsyjvkjnvojxM5jyM8jKZ8zLK02TO0yhvkzlvozwOnMdR
XgfO6yjPA+d5lPeB8z7KA8F5IOWF4LyQ8kRwnkh5IzhvpDwSnEdSXgnOKynP
BOeZlHeC807KQ8F5KOWl4LyU8lRwnkp5KzhvpTwWnMdSXgvOaynPBee5lPeC
817Kg8F5MOXF4LyY8mRwnkx5MzhvpjwanEdTXg3OqynPBufZlHeD827Kw8F5
OOXl4Lyc8nRwnk55OzhvpzwenMdTXg/O6ynPB+f5lPeD837qA8B9APUF4L6A
+gRwn0B9A7hvoD4C3EdQXwHuK6jPAPcZ1HeA+w7qQ8B9CPUl4L6E+hRwn0J9
C7hvoT4G3MdQXwPua6jPAfc51PeA+x7qg8B9EPVF4L6I+iRwn0R9E7hvoj4K
3EdRXwXuq6jPAvdZ1HeB+y7qw8B9GPVl4L6M+jRwn0Z9G7hvoz4O3MdRXwfu
66jPA/d51PeB+z7qA8F9IPWF4L6Q+kRwn0h9I7hvpD4S3EdSXwnuK6nPBPeZ
1HeC+07qQ8F9KPWl4L6U+lRwn0p9K7hvpT4W3MdSXwvua6nPBfe51PeC+17q
g8F9MPXF4L6Y+mRwn0x9M7hvpj4a3EdTXw3uq6nPBvfZ1HeD+27qw8F9OPXl
4L6c+nRwn059O7hvpz4e3MdTXw/u66nPB/f51PeD+37iAcA8APECYF6AeAIw
T0C8AZg3IB4BzCMQrwDmFYhnAPMMxDuAeQfiIcA8BPESYF6CeAowT0G8BZi3
IB4DzGMQrwHmNYjnAPMcxHuAeQ/iQcA8CPEiYF6EeBIwT0K8CZg3IR4FzKMQ
rwLmVYhnAfMsxLuAeRfiYcA8DPEyYF6GeBowT0O8DZi3IR4HzOMQrwPmdYjn
AfM8xPuAeR/igcA8EPFCYF6IeCIwT0S8EZg3Ih4JzCMRrwTmlYhnAvNMxDuB
eSfiocA8FPFSYF6KeCowT0W8FZi3Ih4LzGMRrwXmtYjnAvNcxHuBeS/iwcA8
GPFiYF6MeDIwT0a8GZg3Ix4NzKMRrwbm1YhnA/NsxLuBeTfi4cA8HPFyYF6O
eDowT0e8HZi3Ix4PzOMRrwfm9YjnA/N8xPuBeT/iAcE8IPGCYF6QeEIwT0i8
IZg3JB4RzCMSrwjmFYlnBPOMxDuCeUfiIcE8JPGSYF6SeEowT0m8JZi3JB4T
zGMSrwnmNYnnBPOcxHuCeU/iQcE8KPGiYF6UeFIwT0q8KZg3JR4VzKMSrwrm
VYlnBfOsxLuCeVfiYcE8LPGyYF6WeFowT0u8LZi3JR4XzOMSrwvmdYnnBfO8
xPuCeV/igcE8MPHCYF6YeGIwT0y8MZg3/r888v8Afss4Ug==
                "]], {{{
                0.15135204204915817`, 0.}, {0., -1.}}, {35.83333333333333, 
                0.}}]},
             
             ImageSizeCache->{{357.58346293011107`, 
              378.983979409263}, {-32.50927138158479, 40.70151646837905}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.8796787688138168`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.8237323807376518`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.7382579138968322`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.6161756225729494`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.3017858351895092`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.8796787688138168}, {
               Style["75%", Bold], 0.8237323807376518}, {
               Style["median", Bold], 0.7382579138968322}, {
               Style["25%", Bold], 0.6161756225729494}, {
               Style["min", Bold], 0.3017858351895092}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.7058823529411765, 0.49411764705882355`, 0.5450980392156862], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndYjn3Yx1MpkbIlkVlkj0jid/HYkZA9K7NHxmMUZctMyEgeIiK7EJLx
vSihNLVL8+5u110ZkfI+73Gc5z/v6w+OjqMjd9f1G9/z8/10d9g4e5W6mpra
o//++t9/+Y9n9RyLcd/C8U/jgBFjnvuJD667J8+0icDhVnYWua5XRVO12/OW
BkZg4KvufzJu+Itxhz+v+lvtHXxvG9SPUlwTu/Uat+5Y+A5FuqHvbg0PEGHn
+hw8/OgdlhxcV5/oc0PUGc05c65FJAZrzw101AsUwwN2Xbu+MhLvNg6/qel7
S2zqd+vhw1eROKe/Vm2ZxR3x4FGijA7vsfDI1dHtK+6K0lENcTEb3+PAOY+A
T8/uC5M3pjmZH94jemPyqR6+QcJhyuzKku4f8Np50oy0D8Hiapx7w4+dH6C7
eJlT04SHImteoK5W0gfcneO4a3nhI2GQndC53YCP2PZyTUxfrRAxb9Vvsx6H
PuJPl95+14c9Ed7lJpaDcz5iZOLHN9obnorYLbOmjrWIwowVSX09nzwTuvVu
C6afjsI6z+Mu9s2fiyn7b65ZVBoFj153PR+tDxMHdRK2r/0rGu61hUYBWS/E
21P1HtsvRWPsH4Vkt+iVaOxocu7gt2jM7rKlRUbha2F5xTbA2+YTbn6LOHVN
yGK7idvjq4Gf0KJbwx2btm9EyP0bbx+oxSBU+1mv6oo3QjU8PuHlwhhkjXp7
2CPurej/8ldu1KMYjPyjKFcPDRdOf/VWpbWIxd43gUmLAyPEzaiZf5QrYxHd
IV5j9+V3In/WTr1vr2JRvr7UcfbFSNEtPaCLRsc4PG4ril9efi+WrIjr33pT
HHLtPV0uBX4QF4p+jjb+GId9qZkZUc8+CqeR3jc6tI5H3tbwh0axUULHzfT+
5THxWNW4bL19abQIfP0ypJdTPO6cmmTtqBsjJqrPfnn3fDw0I+VVRcNihWJi
UfjQ8HiUYvXT+yvixP6j7tHPq+JhmzHMx2JqvOgW0/qzZJQASxtF3A5FvECr
wIz3UxLg4W3ZomxfglhqZ5Vvsy0Bnf8t3+3QPVHU+ySUJPsnYEtWzZbXbxPF
xczV1UtiE1BdP2tj+KrPwsL4d13BrwSUJK9ZO6l5kkhxOK32t2ki9sSd0zMI
ThJbb5o0q5mTiO8z2y5vNj9ZtC19ob9jbyLMJtaWpTQmi4cDZnVUu58ID5PP
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
i9H06ES/Aau1pZQqn87dHIrhPKC79gt3benmaYcrjq7FOL1Kf6LXSW1p67AB
PQO9irFX7+X0C37a0oTkHzdLA4oxz/GK2afb2lIbl7dmA18UQ8Qda2n8UFvK
NzjxYHNCMYZ1nDzzSIi2FBw2f+iTomI8qbZya/Lf13uX9Hha11CMmet7zjkU
pC3ZNpaPsmpXgn3vHya0C9SWul599mqPWQlahdr1u39RW6oct39cuFSCV1Yl
n2Yd05ZeFkx/pzW/BBob9y3Q3q4teXp0nDrNuQQ98kddTVqqLS0yzf904kAJ
MK7PlbfjtCWzj/dsE3xLEKBy3pTVXVv65eSS1C64BMUObhMGNWpJH3THL1gQ
WYKSFG+7qBQt6cID3ax/s0qQmXMx6fVdLWm1berynJoS5JTPLjDepSWNqPEv
6KFTiu9nGlzVrbUkzbPr16w2LsWGknN2u9prSUnmI8tum5ci3+tm0a2splJA
apONFdaluLIuQ7pytan0z45PNYMdSrGq7YpvbvZNpfGdfbZvdS3F3c6WOkuM
m0qtXtn/euZVigh9n5SlGZpS7rL+u+sDSjGocfrXq/+tzwdqP5qIF6VIDT/b
edIUTWn3tTce+xNKUVPcveXGeg3JZoKnTmRRKUaZhGwbe09DMlLOO6HTWIqz
GSIxdZGGVH64e+sZ7cqw1DL2xjJtDSmsb/nZU2Zl+LUktqTuobp0LPqpQZJU
hrLuybeiF6lLi5z3Xeo4vwwulbUWv5uoS330p3db7FyG2qE39gYHNpHqgjsE
+B0owxj9USf0pjeRImfnmeb7lqFP4iQXqyo16fzXu3d7B5dhXca5yStOq0kr
z28ftC6yDFtTz2ddGaomDbcY9/heVhky7zX3H3fzj9DMaDFSVVOGqqen5FbK
RpHolhI2TKccjjozb37v1SiudfEf62JcjuzQhMjRjg1iE/5+G2ZeDpe+STNN
/X8LyX7EpEbrclz+7NnQmF0v9DSaRI1zKMeLl0NqtLrUi+yA6BkeruXQSU84
uW/xL/Fg0vmED17lsJ96yS7o4k/hXrxiru6NcgS1vfs8NqNOTD/WL33mi3JU
nndsZ2RUJwz7f19yJqEcXX3cdiYs+yFKY+TclKJyOCx4cMvk+ncRuvH4SsPG
ckzJ7ltuW/JNHGk9r3hpuwp8av5c78CQb2LB427r/c0qILW4N7HC7aswmVtW
pZAqICbt6vnqQ634/v3Jlj7zK/AqZYBnF4NaEXlh74+/nSuw/eyseyOcasRZ
S2u3oAMVmBaGmgGoFiuz2v+p8a2Ag3OGrknHajF0d+7+EcEVaPN6SeHYf1RC
vdtdrZ2RFcjfYmHdz79KxL/ZduxVVgXmXpr1z9GVleKqo6TXpLYCw7quCXw/
sEJsatrCe4JOJfx+TazRVysXYwOT2x8xrkS3flv0D6eVCr2pV32jzSuRA8cj
00NLRFapUxf96ZWwueAYt/NKsbjnae4/26ESOyvLlpn+l0fdB6r1Pu9aiY01
fbIcDirFtPioW+lelTjVdb3VqP2FwvCfc/273KiEb8TkioeHFaK47YrgFS8q
8dtT/0/c2QIR+sRseEBCJTLH75jlfTtfHJr/7VlRUSV+Ten0tvZdnpj3E6P7
NVbCeuv2JWUlucLk32PY0K4K7SI2H1/fPld8tZr71yOzKrxuuscn9lS2iMg2
fv9N+u9rd/vXp5p+Ed57S6eNml+Fd86dm9QeyRQOPZ7EujtXoeerw4PCDTPE
4Ig9s+UDVUjeviDrY1iaUFs9LUXjYhX+KXF4F7U2VcRrt180ObgKwX/Gjvbo
lSL8bud8ORZZhZCtnw+HVCSJDdZ37GOzqrDPY8OcVhGfhVXF1sLWtVX42Lx1
sxmBieLQ+yshdzRV6Lv2wlAjnwThbOCx/ZO+Co7rdub1PxMv5q5zsqg0VKEi
y7fJghFxYkzYzF/6Jir0mxKy+ujSGNGrhfnLIUNUSP3Yeta4f6OF7hLD3XOs
VGizI+5LfOVHUXvvj9g2WYVufssPHZ7/QWQ2KJr4zFah/2TLR7eSIkW4TVR4
6FIVjtSLuHOr3ok7V4I8MtaqMNZyxNsLOhHCW3V28u8tKsTeT1xVj7dix7id
Ol33qJA50v2vlkfeCHvv5dHimArnw3fOMbaXxZSCCSfsz6mwZZTex2bnXovB
w81mHriqguHbsO89Dr8UBh76rW/cVWFB5092Vj5h4k/y18TIpyo8re8VrhMR
KopMMs4Wv1Fhx52ezpN0n4lYF8xrHqPCX57trUM2PBFPPwQY9E9TwSXK8JxR
6WNxudOxjBkFKoScLje13fVIeDhtvLSxUoX5BhpZpqYPhfMLu2Wnf6owKeev
KzoxQcJO17LbY81qzB3yaIr/1vvCaqlxfpJ+NZ6VGdvXj78rej7QDPhuWI1j
3dZZ6424LVr8KVllYFKNqy6L5+dbB4qamXGmlkOqYTrGUXF6/w2RcTWkZLFV
NTZGTN48Ne26eFvte3fX5Or/8om4ONn6mrg9fo/zldnVeLHAX+tL+lVx+szK
QW+WVsOod4NXmuYV4aqYWp2/thrMX1eYD3qsufX/f03fD/5++nngn0f/H/j/
o88D/jz0ecGfl34f8O9Dvy/496XnAX4e9LzAz4ueJ/h50vMGP296H+D3Qe8L
/L7ofYLfJ71v8Pum9QBeD7RewOuF1hN4PdF6A683Wo/g9UjrFbxeaT2D1zOt
d/B6p/0A3g+0X8D7hfYTeD/RfgPvN9qP4P1I+xW8X2k/g/cz7XfwfqfzAHwe
0HkBPi/oPAGfJ3TegM8bOo/A5xGdV+Dzis4z8HlG5x34vKPzEHwe0nkJPi/p
PAWfp3Tegs9bOo/B5zGd1+Dzms5z8HlO5z34vKf7AHwf0H0Bvi/oPgHfJ3Tf
gO8buo/A9xHdV+D7iu4z8H1G9x34vqP7EHwf0n0Jvi/pPgXfp3Tfgu9buo/B
9zHd1+D7mu5z8H1O9z34vqc8AM4DlBfAeYHyBDhPUN4A5w3KI+A8QnkFnFco
z4DzDOUdcN6hPATOQ5SXwHmJ8hQ4T1HeAuctymPgPEZ5DZzXKM+B8xzlPXDe
ozwIzoOUF2XOi5QnZc6TlDdlzpuUR2XOo5RXZc6rlGdlzrOUd2XOu5SHZc7D
lJdlzsuUp2XO05S3Zc7blMdlzuOU12XO65TnZc7zlPdlzvs0D8g8D9C8IPO8
QPOEzPMEzRsyzxs0j8g8j9C8IvO8QvOMzPMMzTsyzzs0D8k8D9G8JPO8RPOU
zPMUzVsyz1s0j8k8j9G8JvO8RvOczPMczXsyz3s0D8o8D9K8KPO8SPOkzPMk
zZsyz5s0j8o8j9K8KvO8SvOszPMszbsyz7s0D8s8D9O8LPO8TPO0zPM0zdsy
z9s0j8s8j9O8LvO8TvO8zPM8zfsyz/vEA2TmAcQLZOYFxBNk5gnEG2TmDcQj
ZOYRxCtk5hXEM2TmGcQ7ZOYdxENk5iHES2TmJcRTZOYpxFtk5i3EY2TmMcRr
ZOY1xHNk5jnEe2TmPcSDZOZBxItk5kXEk2TmScSbZOZNxKNk5lHEq2TmVcSz
ZOZZxLtk5l3Ew8A8jHgZmJcRTwPzNOJtYN5GPA7M44jXgXkd8TwwzyPeB+Z9
xAPBPJB4IZgXEk8E80TijWDeSDwSzCOJV4J5JfFMMM8k3gnmncRDwTyUeCmY
lxJPBfNU4q1g3ko8FsxjideCeS3xXDDPJd4L5r3Eg8E8mHgxmBcTTwbzZOLN
YN5MPBrMo4lXg3k18WwwzybeDebdxMPBPJx4OZiXE08H83Ti7WDeTjwezOOJ
14N5PfF8MM8n3g/m/dQHgPsA6gvAfQH1CeA+gfoGcN9AfQS4j6C+AtxXUJ8B
7jOo7wD3HdSHgPsQ6kvAfQn1KeA+hfoWcN9CfQy4j6G+BtzXUJ8D7nOo7wH3
PdQHgfsg6ovAfRH1SeA+ifomcN9EfRS4j6K+CtxXUZ8F7rOo7wL3XdSHgfsw
6svAfRn1aeA+jfo2cN9GfRy4j6O+DtzXUZ8H7vOo7wP3fdQHgvtA6gvBfSH1
ieA+kfpGcN9IfSS4j6S+EtxXUp8J7jOp7wT3ndSHgvtQ6kvBfSn1qeA+lfpW
cN9KfSy4j6W+FtzXUp8L7nOp7wX3vdQHg/tg6ovBfTH1yeA+mfpmcN9MfTS4
j6a+GtxXU58N7rOp7wb33dSHg/tw6svBfTn16eA+nfp2cN9OfTy4j6e+HtzX
U58P7vOp7wf3/eQDgH0A8gXAvgD5BGCfgHwDsG9APgLYRyBfAewrkM8A9hnI
dwD7DuRDgH0I8iXAvgT5FGCfgnwLsG9BPgbYxyBfA+xrkM8B9jnI9wD7HuSD
gH0Q8kXAvgj5JGCfhHwTsG9CPgrYRyFfBeyrkM8C9lnIdwH7LuTDgH0Y8mXA
vgz5NGCfhnwbsG9DPg7YxyFfB+zrkM8D9nnI9wH7PuQDgX0g8oXAvhD5RGCf
iHwjsG9EPhLYRyJfCewrkc8E9pnIdwL7TuRDgX0o8qXAvhT5VGCfinwrsG9F
PhbYxyJfC+xrkc8F9rnI9wL7XuSDgX0w8sXAvhj5ZGCfjHwzsG9GPhrYRyNf
Deyrkc8G9tnIdwP7buTDgX048uXAvhz5dGCfjnw7sG9HPh7YxyNfD+zrkc8H
9vnI9wP7fuQDgn1A8gXBviD5hGCfkHxDsG9IPiLYRyRfEewrks8I9hnJdwT7
juRDgn1I8iXBviT5lGCfknxLsG9JPibYxyRfE+xrks8J9jnJ9wT7nuSDgn1Q
8kXBvij5pGCflHxTsG9KPirYRyVfFeyrks8K9lnJdwX7rv/Xh/0fYoSKRQ==

                "]], {{{0.14061609441866704`, 0.}, {0., -1.}}, {
                36.83333333333333, 0.}}]},
             
             ImageSizeCache->{{365.43164136630577`, 
              386.6930497374834}, {-32.440371500807224`, 38.20526886857029}}],
            
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.8400363015655917`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.8106803495884332`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.7432447454385719`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.5561600862480638`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "0.3822509106106734`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.8400363015655917}, {
               Style["75%", Bold], 0.8106803495884332}, {
               Style["median", Bold], 0.7432447454385719}, {
               Style["25%", Bold], 0.5561600862480638}, {
               Style["min", Bold], 0.3822509106106734}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], 
           "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, 
        {GrayLevel[
          NCache[
           Rational[2, 3], 0.6666666666666666]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndcjm/494smLXsn81tZ2bKOy4iQUdkjShHZMzsJ+RrfJJGZRFJpD0nH
2R4q7WQmUVFEQyr13M/rOY7nj9/PH7yu132r+76u8zzOz3gPsNppZtNOTk7u
seyv//sv/yn6Gq38PbwIzsdpnh/i7A0/93fNEh5F4PMX7p3Wewgd5Xe4XTlW
BGku/bs3lvvA0AspqzdZFkGOZpavXpIvSD0GDDA0KgKrPyper+L9YLXX4fKO
ekVw7XKP+vzSANg3Ij/gvVoRLHx2a5xDlyC4FDViX3BNIQirl+Y+xsHwaNbZ
yU75hTBoU4Nn6eUQiM8qkVsRVQjHYn3yp9WEwttVk1P0bhXC/s4dz2dah0ND
2ZWLLScKoX/AtlGBNRGgtava/OXGQuiyp+sHlatRoN88p7fX3EIYOu3jTFXz
aJh9xrNk37BCmFumv758WAxYdGp6OFezEIbc3bmqVCcW7G+Zb+9dWwCW+x57
ePYScOWfgLHVhQWgpDV7mt6YOAgIUWrC6ALQ7OrcEL46HlKmbRCudwog9Wae
Sv2VBPiY+vSMjWMBbLV99/Ha+0RoNu+ycNKmAviUsabYbEoydP+wrUvH+QWQ
9eyfr28fp4DB1uTidyMKoGtjlPWPEWkwv76/Z1CnAjgV8vaGUVI6WDsc2nSq
Ph9eeV10urU7A453zBu+vDgf3pW9XhcyNguuuw+v1X2eDx/SK7QHKWVDyIAz
T5s986FMb0xex9ZsyPD/cCLLKR9iA3yVauVz4ctEwzn3bPOhsk1z1KTOeSCX
4Kq2z0R2bfbf5Mmj8qH3oqrcOQb50Hjr47wVqwpgXLGRR6+u+fD11tDNVS6F
sMj67vqq33ng/dPBcFlhEdj+aByCb/Igbod7+De9Yjh12KzqMubBscKuL5Qv
vIbbiv4h1vfzYNVUS822ljcQ6aJ4aOLZPKh0uG0z+Ng7yOmzHjrY5UH5/eat
+Wof4NvDKMV3i/Lg+6NJOYOWl4DSmM4ZgWPy4FWMoe3nER9B57mdq2P3PFCX
V67IVS+FycZJK5c15UKfutGL1RpKYWmedn/d97lgLKcwNPDLJ9hhYf+5KS4X
zgw5YVL4oQycK3P8Mh/kwtRxPVI9Pn4Gr33D9niey4XmdUsua1R9gZg2p0l7
t+fC9N57LOe0lUPhv+9bjUxzwebgCYfFfSqhptukpJ7jc+HeJ58r46Sv0OHe
5fPfeuaC9hybbS3bv8Hg4d9MY1tyYN4lu5F+3lUwPXJ2z8slOTDTtduPWWXV
sHLmnfcbE3PAMaRJL3z4D9ib+dt7wqMcyD1Uav53eg1cXGlqp3ohB350nxHa
rqoGfD49Hv12Zw5UhI1O2HD7p+w+KzQ+Mc+B4JM1nTqa/4I3f9bFnpyYAzmX
Rt74pVYLDU6RTkv75IBLFYYovqgFTa1OC/5pywbvToltoy7Wgf7NrZ2aSrPB
8IyNzWrzepg9NLEoIzkbBoxY2LK1XwNYBPe7c/dxNmTFlSkbfWsA+6kHrfdc
ygajcae+p8b8BteUbH2jPdmQvv/W2PzLjeBvpv+zx/JsKFZV3zdj6x9Ifncq
8qthNkTPuW5dYdQEJbbvjj3vlw3zPJ/k3h7cDE21E2a7yGdD7N3/fMYqtYBu
q0635PSXMMOkuNr+awtYdM2/Z+f6EvQS3YoNc/6Cq/7ZkZ1Wv4QndzJzIboV
kqXJzyIGvISkjeho+qANmpZXz11bmQVvWrN395onJ43c7pkvH5wF8XjR10zI
SVanzC197LPgz5GAvLGT5CV3D6XvJlIWDH64Y9DNIHkpPfDp4V/KWaA4cPs9
G712UmvSNuXrLzMhw0l/8k6vdtK4t/3dpl3LhPSJZZmufdpLtr9ydT5ZZMK2
ISEzHru1l26pnAlwHpoJ77uUX76kriBlaxtOHvk9A57Mf/y5xxkFSWF8VXJe
eAY89RD3+7UqSJMW3DU/dCwDPpkdcj6wX1HaZmlWom2UAa/nhMQ0flOUPA8q
bk9Uy4AOq8uqD1kqSfkXo/5syX8BFnm6m18WKEkq3nZnNG+9gO39hg7LMlaW
pkdrdwnf+AJsl+VoLIhWlvZk59xdPewFuIfV5PfWV5EefnEaLlebDsu95s3v
fF1Fet0y8emD6HTYo2VtpaSgKml0+Wa0wDEdbPxeLM3YrirN1LuTWzMvHTps
iog2LFCVDoDpevdO6ZDyt8F/8OQO0uNlClVTitPAaNaA0o23Okjv7SLtP3qm
Qea0pIys5g5SV8etimdt0+D+gwdPp63sKBlf7+c63CANYsIzq88Fd5SOPsnW
zv2dCsm/tyReVFaTghJP+R3EVOi3a27G4NVqUtnrCZP6nU0F9T1vy4b5qkk9
f1Ymxi9KhS5bYlefrFOTTJRvm9p2T4WzqrbtFaeqSw79lrxXf58CL7zGrrx+
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
s/n5cpJwycqbrncWe2bsterwQfbzRtxW+fLkX1SrWtI/tFz2/9Ptpl0cdwlj
+nXWCv8ue31sP8Pe71zQZH5D38ZaOankpFNe9V1XDK5vyrX5LXt/9rftcVZu
WDi+fFdlo+z92uYqV4e4o9a0kF87Zdcl26K9bCuu4f6f0/tU1Mve/2zAtKl+
HpiVsPnozJ9ykqfquSLNHTcxJ3LFsd1fZZ93Zc3uTwa38a7pqPVbPsr2z8MV
apG1d9C7pB50CmXXh9ebG63xRDer4j6XUmX7bcAVncCp99Doj8jwj5J9v9Tk
6p7aXmj+aKKK/UM5qWZnU7Rjmxf2jI9YU31ZTtLpMdK5quQ+FnVZ9Y/aETlp
SazlsuXx3nj0mPy1AkvZ57e5OlDcf4APRsrfMJE9vyC1tB96px+inbSgeL+u
7PuEtsRc2eSD6zJn+69QkZO01hj8+3fuI3RoO9Wz7oVsPbWzXrFZzxerb5xS
z3Rsg12+1wbndHiMPRwb1i4ZL1uvS178nFz1GKMPe3a/9km23n+3xnpn+mGg
4f7Ozy+2Qs2dMRc0Av0xNNU1o2SsbH/M2bTK3iUAS387w6DCv7Ck2mNo6e4n
ePZ3n+c++/6Cg1tm7QLzQHw2OjjpiuZfeHXboWR17yB8P9H9vYZPC+za3TtF
83wQbu5utnnmlBZQMQoLSGwOwu6eo3esymgGz56L3A5tC0a7meDksLoZJlWV
Hx75Lhg1ogpdPn9ugmw8aflpYQje2avwIHJHE9he6WN8PTYEd5d/yBpa/wfk
NoePXDgqFFeWaFRvPPQHrk9e3K2dZyhuaXfX0bO5EQw0KpsjtMLwVh/L8xpH
GyH1o2Op3ckwXL6nZklJ02/YEN43TedXGDoduiQZ2/+GRueIwAKrcLSz+xNn
X9cALmuXuP+bF45tU6w0vXc2gI7B16MwOwLDtL01WirrIaq908a6sAjsffbd
sJCN9bCkqN983yGROLWX8/jfb+ug4nGkgYV7JC4/oD+5eVkdOBw37dFFOQqP
jovZXJ1VCz3Nvv1NORiFe+/nVDXPrYWgIafLjlZE4Qdjrzfmcb/A+I/2i9Gr
nmIENGkMmPILSjKigr+kPcVpnwd1uhT+E+w9za7fnByND4/nKyQa/AStfVXH
l/hF477UQS5f/Wvg0dwzNop9n2FA0JW0f/RrQOqjYxJ94Rn6hi5bJJn+gFff
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
sZTXCs5rKc8VnOdS3is476U8WHAeTHmx4LyY8mTBeTLlzYLzZsqjBefRlFcL
zqspzxacZ1PeLTjvpjxccB5OebngvJzydMF5OuXtgvN2yuMF5/GU1wvO6ynP
F5znU94vOO+nPkBwH0B9geC+gPoEwX0C9Q2C+wbqIwT3EdRXCO4rqM8Q3GdQ
3yG476A+RHAfQn2J4L6E+hTBfQr1LYL7FupjBPcx1NcI7muozxHc51DfI7jv
oT5IcB9EfZHgvoj6JMF9EvVNgvsm6qME91HUVwnuq6jPEtxnUd8luO+iPkxw
H0Z9meC+jPo0wX0a9W2C+zbq4wT3cdTXCe7rqM8T3OdR3ye476M+UHAfSH2h
4L6Q+kTBfSL1jYL7RuojBfeR1FcK7iupzxTcZ1LfKbjvpD5UcB9KfangvpT6
VMF9KvWtgvtW6mMF97HU1wrua6nPFdznUt8ruO+lPlhwH0x9seC+mPpkwX0y
9c2C+2bqowX30dRXC+6rqc8W3GdT3y2476Y+XHAfTn254L6c+nTBfTr17YL7
durjBffx1NcL7uupzxfc51PfL7jvJx5AMA9AvIBgXoB4AsE8AfEGgnkD4hEE
8wjEKwjmFYhnEMwzEO8gmHcgHkIwD0G8BDIvQTwFMk9BvAUyb0E8BjKPQbwG
Mq9BPAcyz0G8BzLvQTwIMg9CvAgyL0I8CTJPQrwJMm9CPAoyj0K8CjKvQjwL
Ms9CvAsy70I8DDIPQ7wMMi9DPA0yT0O8DTJvQzwOMo9DvA4yr0M8DzLPQ7wP
Mu9DPBAyD0S8EDIvRDwRMk9EvBEyb0Q8EjKPRLwSMq9EPBMyz0S8EzLvRDwU
Mg9FvBQyL0U8FTJPRbwVMm9FPBYyj0W8FjKvRTwXMs9FvBcy70U8GDIPRrwY
Mi9GPBkyT0a8GTJvRjwaMo9GvBoyr0Y8GzLPRrwbMu9GPBwyD0e8HDIvRzwd
Mk9HvB0yb0c8HjKPR7weMq9HPB8yz0e8HzLvRzwgMg9IvCAyL0g8ITJPSLwh
Mm9IPCIyj0i8IjKvSDwjMs9IvCMy70g8JDIPSbwkMi9JPCUyT0m8JTJvSTwm
Mo9JvCYyr0k8JzLPSbwnMu9JPCgyD0q8KDIvSjwpMk9KvCkyb/o/edT/A8ul
zLE=
                "]], {{{0.10619374741120319`, 0.}, {0., -1.}}, {
                53.66666666666667, 0.}}]},
             
             ImageSizeCache->{{494.80317714100175`, 519.2018681637762}, {
              18.372439827150373`, 71.22974974755803}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.04198795752586338`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.018583198631578143`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.14199994263338128`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.17025500865666987`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.1965056721444335`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.04198795752586338}, {
               Style["75%", Bold], 0.018583198631578143`}, {
               Style["median", Bold], -0.14199994263338128`}, {
               Style["25%", Bold], -0.17025500865666987`}, {
               Style["min", Bold], -0.1965056721444335}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[13, 18], 0.7222222222222222]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
ipyXUp6KnKdS3oqct1Iei5zHUl6LnNdSnouc51Lei5z3Uh6MnAdTXoycF1Oe
jJwnU96MnDdTHo2cR1NejZxXU56NnGdT3o2cd1MejpyHU16OnJdTno6cp1Pe
jpy3Ux6PnMdTXo+c11Oej5znU96PnPdTH4DcB1BfgNwXUJ+A3CdQ34DcN1Af
gdxHUF+B3FdQn4HcZ1Dfgdx3UB+C3IdQX4Lcl1CfgtynUN+C3LdQH4Pcx1Bf
g9zXUJ+D3OdQ34Pc91AfhNwHUV+E3BdRn4TcJ1HfhNw3UR+F3EdRX4XcV1Gf
hdxnUd+F3HdRH4bch1FfhtyXUZ+G3KdR34bct1Efh//1cf/2dch9HfV5yH0e
9X3IfR/1gch9IPWFyH0h9YnIfSL1jch9I/WRyH0k9ZXIfSX1mch9JvWdyH0n
9aHIfSj1pch9KfWpyH0q9a3IfSv1sch9LPW1yH0t9bnIfS71vch9L/XByH0w
9cXIfTH1ych9MvXNyH0z9dHIfTT11ch9NfXZyH029d3IfTf14ch9OPXlyH05
9enIfTr17ch9O/XxyH089fXIfT31+ch9PvX9yH0/8QDIPADxAsi8APEEyDwB
8QbIvAHxCMg8AvEKyLwC8QzIPAPxDsi8A/EQyDwE8RLIvATxFMg8BfEWyLwF
8RjIPAbxGsi8BvEcyDwH8R7IvAfxIPgfD/IvL4LMixBPgsyTEG+CzJsQj4LM
oxCvgsyrEM+CzLMQ74LMuxAPg8zDEC+DzMsQT4PM0xBvg8zbEI+DzOMQr4PM
6xDPg8zzEO+DzPsQD4TMAxEvhMwLEU+EzBMRb4TMGxGPhMwjEa+EzCsRz4TM
MxHvhMw7EQ+FzEMRL4XMSxFPhcxTEW+FzFsRj4XMYxGvhcxrEc+FzHMR74XM
exEPhsyDES+GzIsRT4bMkxFvhsybEY+GzKMRr4bMqxHPhsyzEe+GzLsRD4fM
wxEvh8zLEU+HzNMRb4fM2xGPh8zjEa+HzOsRz4fM8xHvh8z7EQ+IzAMSL4jM
CxJPiMwTEm+IzBsSj4jMIxKviMwrEs+IzDMS74jMOxIPicxDEi+JzEsST4nM
UxJvicxbEo+JzGMSr4nMaxLPicxzEu+JzHsSD4rMgxIvisyLEk+KzJMSb4rM
mxKPisyjEq+KzKsSz4rMsxLvisy7Eg+LzMP+X172fwAyuSUt
                "]], {{{
                0.25341593795373246`, 0.}, {0., -1.}}, {54.66666666666667, 
                0.}}]},
             
             ImageSizeCache->{{507.47985490760317`, 
              522.08243916159}, {-2.8174859528932217`, 76.67405891067304}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.26560054071269`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.25229622127112483`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.12298330516192019`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.11345731065521206`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.17218902306656214`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.26560054071269}, {
               Style["75%", Bold], 0.25229622127112483`}, {
               Style["median", Bold], 0.12298330516192019`}, {
               Style["25%", Bold], -0.11345731065521206`}, {
               Style["min", Bold], -0.17218902306656214`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[7, 9], 0.7777777777777778]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
3WG7i7TlBp0eEOz6cSvb0Q3sE7UvJZn0wNlY0XPHNT7Aq7fOjrkfe8BKReVw
T/07qBlyeoduTg8I3U/ttLJ3BaervxwWDuqFkglv10+Ht3Bgic1y7UW9IGKR
s9z/5xvosL5R+vxALyj1DFXYYOUM2edPrf9j0QvOBQ9WBp57BelqOzYv/db/
fPwrVxTxEu5lSc7b+LMXBG/0B4mNcoAtO0Y5Dh/VB853Y2vkj9gDru6VOSjo
g5Iji5K2+j/t3++SFeNO9oGcptPXSxLW4OUYbzX6WR+I7JRRXOZtAZGhy38r
hffB7fFVrXd2PASBde1xjdo+EBQFY1KLKcz6bPBujKSI4LbG9BFLlYxh2IO/
5w0miQhEXjlpONScBGfv4RcbFPsfC9PeTvu+GQzXaGt6C/of3zj6U2awPhpW
mbdbb+v/fTtFt5Oh53DFaJExpgb9j6Xvjsm8egO938XmnDrb/zj8RMSUF3dR
76LmKs1b/b/fY9eR1maGUoevyQ14JCIQqAiVHu58glPn+u8xtxcRlCxv8XHK
tcamRbk5Wc4iAmdd8+QrZrbY2fnAJ8+9//mXpv7atuwZqqzbqf7Iu//1nvqK
K1Q54AJ3X5XigP7ne234R9zOES++OeGSFCIiOJhUtKpk7WucYWYyaIew//mt
QQr7Opxx8eiTh40i+t/v3j3VBG0XfFxmuXZwpIhAKLtVc5nbWxyr8y1wcf/P
rVzG73Ltc8UTZ38crkERwdmFFYdH6L7H57dOXpjb//oCoee5W54fUNHB37nD
X0Qgt9XY5Ncgd8yPGSm/10tE0FC49rHePg+ce2t8tI6biCDl5LCX0b4f8bHf
Z8f6VyICr64ct0XSn3G27z4VRdv+62X+1v/1YU8095U/K2fW//nHn46SDv6C
AwZm6CZfExGM05lUs/I/L1xmVj5n/UkRgdnLAWeblnhj8osHc+30+9+vrKrV
vcQb68+bPYvd2P/7cxNvHrT4iqvcLe/UL+9//3PeYmNVfPBmcHHgmNkiApUg
+0c/yn2w4VXe2x2yIgI3kRsj71n64pHMgTuO9/SBjKaBg+oKP2ycf36cQ1r/
/WS5Tu5vlR8O0htru+t9H1RnzfvwwcYfi8Uvt0Vf7QO9KSMU968OwB2FnkZD
tPog7kir76jaALy0Vztk3YQ+UPqcv+K7XSAe09oATjX956FZGGGqFoTTjpic
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
plNAv+9wDxwalYsqL9YdFkj5w5b3h/Z0/c7FWEUt2ZmWvjC3fWJ39fg8fLlb
sGv2HB8Q18p0ylLPw2zbzKFXM72h7OUTiDqTh3qHZ4do2nvBt/r1pd4v8lA9
JUTvebon2MOAu6+j87Be4vvk068+wXnrbzMeN+ThdONTI00fecCW8gsx1ybm
o3PSs/MaDm4wa+n8o0fX5eOfFe67lWPeg+jDKsld5/JxdXb88yyZd1CU8/rj
Wsd8lHUVXvK+8ha+zd29eWFsPq6zrdq+t+MN2N8Y+WdKYz4O29csOG/rDKeT
vltJTy7AW297W1davgItufuLOtcXoEX+OJeZ0x1h1vnVGT/PF6DRCoM/48sc
QDSq7VKmUwEeODgke0n8Myga7T02Mq4ART/Hf5HJtgN/o+NBXk0FyHmzTdD0
va+mFP5/j+n5yM+n10N+PXo/5Pejz4P8eejzIn9e+nuQ/x76e5H/XroeyNeD
rhfy9aLriXw96XojX2/6PpC/D/q+kL8v+j6Rv0/6vpG/b7ofkO8Hul+Q7xe6
n5DvJ7rfkO83uh+R70e6X5HvV7qfke9nut+R73c6D8jngc4L8nmh84R8nui8
IZ83Oo/I55HOK/J5pfOMfJ7pvCOfd5oHyPOA5gXyvKB5gjxPaN4gzxuaR8jz
iOYV8ryieYY8z2jeIc87mofI85DmJfK8pHmKPE9p3iLPW5rHyPOY5jXyvKZ5
jjzPad4jz3vaB8j7gPYF8r6gfYK8T2jfIO8b2kfI+4j2FfK+on2GvM9o3yHv
O9qHyPuQ9iXyvqR9irxPad8i71vax8j7mPY18r6mfY68z2nfI+970gPIeoD0
ArJeID2BrCdIbyDrDdIjyHqE9AqyXiE9g6xnSO8g6x3SQ8h6iPQSsl4iPYWs
p0hvIest0mPIeoz0GrJeIz2HrOdI7yHrPdKDyHqQ9CKyXiQ9iawnSW8i603S
o8h6lPQqsl4lPYusZ0nvIutd0sPIepj0MrJeJj2NrKdJbyPrbdLjyHqc9Dqy
Xic9j6znSe8j633yA8h+gPwCsl8gP4HsJ8hvIPsN8iPIfoT8CrJfIT+D7GfI
7yD7HfJDyH6I/BKyXyI/heynyG8h+y3yY8h+jPwasl8jP4fs58jvIfs98oPI
fpD8IrJfJD+J7CfJbyL7TfKjyH6U/CqyXyU/i+xnye8i+13yw8h+mPwysl8m
P43sp8lvI/tt8uPIfpz8OrJfJz+P7OfJ7yP7fcoDkPMAyguQ8wLKE5DzBMob
kPMGyiOQ8wjKK5DzCsozkPMMyjuQ8w7KQ5DzEMpLkPMSylOQ8xTKW5DzFspj
kPMYymuQ8xrKc5DzHMp7hJz3UB4k5DyI8iIh50WUJwk5T6K8Sch5E+VRQs6j
KK8Scl5FeZaQ8yzKu4Scd1EeJuQ8jPIyIedllKcJOU+jvE3IeRvlcULO4yiv
E3JeR3mekPM8yvuEnPdRHijkPJDyQiHnhZQnCjlPpLxRyHkj5ZFCziMprxRy
Xkl5ppDzTMo7hZx3Uh4q5DyU8lIh56WUpwo5T6W8Vch5K+WxQs5jKa8Vcl5L
ea6Q81zKe4Wc91IeLOQ8mPJi5LyY8mTkPJnyZuS8mfJo5Dya8mrkvJrybOQ8
m/Ju5Lyb8nDkPJzycuS8nPJ05Dyd8nbkvJ3yeOQ8nvJ65Lye8nzkPJ/yfuS8
n/oA5D6A+gLkvoD6BOQ+gfoG5L6B+gjkPoL6CuS+gvoM5D6D+g7kvoP6EOQ+
hPoS5L6E+hTkPoX6FuS+hfoY5D6G+hrkvob6HOQ+h/oe5L6H+iDkPoj6IuS+
iPok5D6J+ibkvon6KOQ+ivoq5L6K+izkPov6LuS+i/ow5D6M+jLkvoz6NOQ+
jfo25L6N+jjkPo76OuS+jvo85D6P+j7kvo/6QOQ+kPpC5L6Q+kTkPpH6Rvzf
vvF/+kjkPpL6SuS+kvpM5D6T+k7kvpP6UOQ+lPpS5L6U+lTkPpX6VuS+lfpY
5D6W+lrkvpb6XOQ+l/pe5L6X+mDkPpj6YuS+mPpk5D6Z+mbkvpn6aOQ+mvpq
5L6a+mzkPpv6buS+m/pw5D6c+nLkvpz6dOQ+nfp25L6d+njkPp76euS+nvp8
5D6f+n7kvp94AGQegHgBZF6AeAJknoB4A2TegHgEZB6BeAVkXoF4BmSegXgH
ZN6BeAhkHoJ4CWRegngKZJ6CeAtk3oJ4DGQeg3gNZF6DeA5knoN4D2Teg3gQ
ZB6EeBFkXoR4EmSehHgTZN6EeBRkHoV4FWRehXgWZJ6FeBdk3oV4GGQehngZ
ZF6GeBpknoZ4G2TehngcZB6HeB1kXod4HmSeh3gfZN6HeCBkHoh4IWReiHgi
ZJ6IeCNk3oh4JGQeiXglZF6JeCb8X57pf3gnZN6JeChkHop4KWReingqZJ6K
eCtk3op4LGQei3gtZF6LeC5knot4L2Tei3gwZB6MeDFkXox4MmSejHgzZN6M
eDRkHo14NWRejXg2ZJ6NeDdk3o14OGQejng5ZF6OeDpkno54O2Tejng8ZB6P
eD1kXo94PmSej3g/ZN6PeEBkHpB4QWRekHhCZJ6QeENk3pB4RGQekXhFZF6R
eEZknpF4R2TekXhIZB6SeElkXpJ4SmSeknhLZN6SeExkHpN4TWRek3hOZJ6T
eE9k3pN4UGQelHhRZF6UeFJknpR4U2TelHhUZB6VeFVkXpV4VmSelXhXZN6V
eFhkHpZ4WWRelnhaZJ6WeFtk3pZ4XGQel3hdZF6XeF5knpd4X2Tel3hgZB6Y
eGFkXph4YmSemHhjZN6YeGRkHpl4ZWRemXhmZJ75/+Wd/w+UWcAJ
                "]], {{{
                0.19886434719417953`, 0.}, {0., -1.}}, {55.66666666666667, 
                0.}}]},
             
             ImageSizeCache->{{513.4934439720346, 531.6260988615736}, {
              7.11897488564523, 74.97795593270044}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.22364816731018353`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.05074658360306652`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.022925945195573984`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.14118203303083005`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.2647686028856851`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.22364816731018353`}, {
               Style["75%", Bold], 0.05074658360306652}, {
               Style["median", Bold], 0.022925945195573984`}, {
               Style["25%", Bold], -0.14118203303083005`}, {
               Style["min", Bold], -0.2647686028856851}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[5, 6], 0.8333333333333334]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlYzevXxqNBmocdEikdw6GUeUg9TyKhSIbMCtGRFDIeQwgZO1Ikpagj
pdJcmtbTHI1mCilD5iGVDNW7f9dvrfeP9/UH17qufW17f/fzrHWv+/4YrvJ0
dO0uIyOTLP3rP//SH0vDlvjq9YLtu5LkMvNNHGMrtp7vM02wc7beSTrTrjN+
oc3XZYBgY9Mv7170OpH5Jn5+Pv8bsFM+RY0lPJkdHtac8ToaWILpw/19U1LY
0aiWUzuWAXPWuLM10jKNndD/7qqkCexd+NK/cl+ms1PBPyaHFuexb45WW6qv
ZLLTWr+1R+zKY8x1dtOsw1ks8ETnOxiRx56Ofaab6JvDzip0K5j7IpfZh57U
8Y3MY+d9ZM+/OJfLjp00NzTZLFjoT3mvrXa5bErl+H3rovLZRW/F6T265bLy
BY1aU98WsEuflPTPp+WwAnl5mxCrIhblpto6bH0OmzdiRvK0hGJ2pVG9Ikc/
h8k5DagcZFbKYpZpRc6+m80+FZod719WxuIeSHY9P5LNCudM+aW1/RZLcOg9
d/PkbHZasuvRJ4sKlnRLd6jc1yyW3SArCe1fxVKn9usK+jeLWVSoXjuoXMPS
8/QfDFmSxcbq2pr769xmNyYYxt9Qy2Jqwzzb1pncYTnJRr6zCm8w3U8K/Q7N
u8vyjAcvfbr9Bru1Zlr4cr97LP/K0FGexjdY1t4Bd9dV3GdFBsN7dmvIZCaN
4Vq6Bg9ZSYjJ84CgTLa0MMP11cFHrExilvHHzEy2qVAMZO2PWcWpUafSOzPY
NL/aHqF76liV4lhX25QM1rqwJcpD8pTVHBg/uXZdBsv4sUlOKfcZu/d7ovaG
fhks7v6RTc3mz9mDbZPfddSks/lyfQYmDWxgj75Y5vsfSmd9F/AeX7Ua2ZP1
VsGGk9LZp/FLq+tVXrBnL609Uz6lsTZWFXdV4yV7vsLGZlpkGtvX76u+t/4r
9vKRbf+HTmlswUiV7HXjXrPXjrNa3FTSmGfS1dZ/FzWxNxX25T9FKnM87fHB
/tAb9sHG4fKJralsY3Gx2d85b9kn4bhTf1gqs1c+eWZa5zv2ZdICh8RnKWzL
e5lmMfMDa0l1GjLlTArbkDparuPSR9Y2Yknn3ekprFeDpYm83GfWfnXZfdff
yczvQeZgrwlf2O+BK+O+JyYz7cKls2xbvrDOUJeDR12TWeDMzKSjaV+ZTO81
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
CaB3781oo2INHjq6U7/gn+uwdKZ5z/gwDX4rfPeEau1ECOwj86V+m7QetMvF
YmUi2Lc3u1U7aPCSa9uPXYtNhK/7x3c7NVyDF4zcmqLblgj5rRbWJj2kdcbm
J0esksApY+jcv0vVeZ6Fl3zbiSSwdHPXDTugzrMKPUaseZQEjbuqrZ4waT3D
3emOUTKM6dhQ4NilxtOr3Xy4ZzLMTB2n0ydfjScvWBuTkJUMGyoz/rA6JK3r
Vt/pp5ACiSsXWjyfpcYTXFx+HZubAstjjbvJ66jx2KYVf/wITYFpvkdW5DxX
5bEey+zXvUmBzgbJUY3rqvzKt8Xb7o9OhaeZN1sVfVT55Z1O4db7UqGz9sDi
2HnSumt+WdKtVNiY7Rzb9qcqv3jI8euAXmlw2bnW6GN3VR6i7ND3lEsa+Az3
sT/2TIWHnLa3/h2XBkuOr5Yry1HhZ3vP2rC+PQ2amc6RsDAVHhBmG/TIOh3k
vIb6dvlIayObPBv/dMiNGjT8+VoVfirGuim1Nh3sr91npnNU+DFTKw2jwRmg
ueemae1EaZ1mOfH0pgwYGdFtWMVgFX7YfPKqrpwMCPkROOGTjgo/kD/xuIdi
Jny/NWbZkB7Sevr41Lp5mbAh6K+YZT+V+d7KMU9nhGdC5cNV6zZ9Vua75o1S
yHyXCef1R5lNfy2tH5uaDh53A2wv2mrlPVPm21aaLArcfwMGn1NNSX2kzDe/
Gra/e+UNUFJZvVnxnrR2Hxrr1ScL9F5+PBVUo8w3fh1099nqLOhwbps5vkqZ
r99u9NvuehZceZ2mWVYhrTsMBmX/zAJ916ZQQ2m99qD+7D9tskHFxqtvf2m9
qme/7edOZwM70T73zH9qf90I+afZEPRwxq1llcp8hU7vm1uG5oDuxNmf5krf
f8kFSXPDlhyYaXx05KxqaW2opecAOVB26fVoQ+nnWRitPjVPKRccS3Jfxklr
RxNVD+OFuTBf0hRV+p86RelsyKVcmGJVum6WtJ49UREUP+bC1LRRd7Wk7zcT
5N9sm5AHdZ7qK35IP8/MabKarw7mweX9YR51N5W5TbnMpHnVedAZ6LDpbLEy
nzK3c1V+X4CHS4Z0KApp/fDXcdO1AAvVvBq1bihzy+U/UsOSAJoj3tsEJSrz
SS/anip3AHzYaZ21+YoyDxuzS9biDwFu8mUz/EOU+YXv7b1bZghYHOQVUHNC
mZ/P2m58zVPADbvet/vvkdZ72viqIAHdmj9+WemuzM/xrQt0swXYBQ0L3u+k
zINkW/6qeS4g5POHUZ5W0rpk894jCvnw0HLl715/KvMzR78GWBrnw+chvRX+
UlPmp+28olvn5sPW6hwLp69K/LT65+y47fmw72WX1/3bStz/jkfN6rB8WF/y
Ys7j60r8ZNCHl30L82H0ZA+PJVI9dXKR+4/bb/Jh8ZpcS8c1Svy43jvVo2oF
sCboSp+cSUr86DO3gXxMAXSrKxsepCatLzWN+764AHadnrrvSX1PfmTN2lkJ
+wpgx1KtdwEJ0nrIq5Wu/xbAYDsN5exdPfmhd6u9+5UXwPfIe2zx1J78YHyj
390vBVDzdmHIFmVp7eUSdqxXIWzY63Nfs0aR7x/9PMlqciHUyafbWgQo8n1t
K0raXQqh1di9VsZRWt94Wnv9SCGccLvz1U1dke/Zvezz2vhCaJqbte7grR78
b1Ynq3+3EJQnx25beVBad1/S5357Icw8PCdWdVIPvrP4kfEJ/SJYqmZfFf5J
gW/3c7KynloEF9v2PBl6SVrPerDg519FUJWX8y5nrgLfqrZgfZJ/EazYyPps
klHgW27f3euWVgTRM8/vWhovz7cEOp4ZUFcEkumblc4skuebnG5HP5AphmJV
uX9Mu8tzz74OOScHFwMftsF/Rqwc93xaVTPVrhh0/RrH/HSQ4x4R9q9+bSqG
f/u94EvbZLn76oofyeeKYefYxS2HQ6T14Flq63OLofRQ7e9zFrL8r7c3Bxq+
KIbR17qcY+q783VxtuMfKZbAj71NGx74SGvP0ln+I0ogfmDzxUmG3bnrKBtn
m/klIHEQgV9FN766tci7Y2cJbO95sL2Xs7TOtD6aGl4C7kujN5Z0ynCXvwvC
3ItLIGDT24N6YTJ8paVV8sD3JTC08vGFkebSupsoeaxRCsG3bYKsk7vY8iLL
un/GlcLUjE1ZvT51sqVHcj9PX1YKtbpvv6kMk9YzJ8t17S8FhzPvPZes7WCL
VbP7pEeXQsra8d6jIn8zp5qJJh6VpXDC3HRi6fNfzOlMptUf30qh+fTY6hkD
frEFC8cvrOtTBidKveXfrfjJ5ummrw+wLINJ9QMcH4T/YPOejNk3Y00ZRP0e
l2Pe2M7mhqeckTlWBh4Wj0umDW5nc1aNuppxvQx295/5uP+G72zOoKScjffL
YKBt4L9vU9qY/RvT24N+lcE6u9q2Bx2tbNa1hFdPDG6CA1+5UGGmtN5o8vOM
zU3QPmKdGRLcwmaMjFObteEmfFu4fVTa229sesswo+4BN+HT9FPfvC2kdUbM
+BsZN+G5urn59zPNbNquoXZeT29C1UGv+U4fvzJri2jnIbK3INTX6HTCDGkt
M3jrs6G34KLm1emSmC/MqjDqaNDsW2Cw4PLtMOUvjB02umjnfQuuWivo5jZ+
YmzG5WTZkFtwTUklozr1I7NQMSzNglvAL8xaGHDyAzOvDq/b9OoWuNu1vR/g
8Z6ZB+h/GapcDimBn4P8571jExeEyT03K4fxa+pjWvhbNr5PP91zC8shd1J+
yYqxb9j4uhCT2bvLYX1D1ZvHZk1s7EXdKfKXy+FeV+S+jaNfs9EuwQtzSsvB
0WrbYUOLV2z0H73dt3wsB9WNky+22L9kI5uC9g3TrgCZnLA/X7u+YKaxksCG
CRUQOilS8s63kZl6nLkavKIClgdUTOhxrYGZmGnlzvGtgMsPdhYaP3rOhn/7
57ZCbAW8j7YzsFOR1unqr3OrKyBe/kNM7Kln7M+dp356t1aAap3uY3etp2zI
ZFV1Y71KGOtjPD45so4N6Tpu9IJXQp683s05U2rZoAKlCSFrK6F/w6mdWp8e
MaNDR+3mnqiEPhL11UVXHjIjW0UXxeRKSF1v09d4wwNmqHxkKzyshGyTfu0q
lvfZgCr5Y9s6KkHbZfHqIf3usQGnfS+aGFVBV3hZrzEKd1n/+bIpL22rILnn
gyUff91mer0PlF7YWAXvrH+WD+ioYXq1Mk8cA6sgq7/rrK09a5hu2L4vPbOk
9Y0xf0+3qmK9nTvl8uurIFLRygN8K1hvoz26O+Sr4YCSgfeNJ7eYzutfJqbD
q2G3Q8vXENubTDtm15TXDtWglNhDr6y0lGlv+LEwbFs1TNScNCdgcQnTNN3h
Pj+0GpwDzj7f0lHE1Jvb9ikXVAM3VOFPkguZetrWwIKmaih7fMCt/84CpjB5
170chRpIdF2kEDonnx0Ou7EiWLcGfK+Oa80dK5hCV/ubLcY1MLDA74/7C/KY
r/OELXNYDfTyt9HstTyHyRVs7xjmWAP/PNthpuOTxXyNMo4ouNbAzvKi+Pjc
TNb9UJtm4/Ya8MuKfwiSDHbg9djQ3GM1kGXuf3ykbxrrbrt18PmwGvipkHn2
k1Iq84lJTfROrIHg8kaVt9HJTEa5ZZJDYQ2YvncM1F2SxHw2jC4e/qAGpka/
iN5nkMg6KzfP6fG2BvRT4aJ1Szzba5r8uPFXDTR3doTqVVxjnf98XZ2ndhvI
f93dbPbpvOH/r/H1QK/H9wN6P/z/gP4//DxAnwc/L9Dnxe8D9H3w+wJ9X3we
QM8DnxfQ88LnCfQ88XkDPW/8PYB+D/y9gH4v/D2Bfk/8vYF+bzwPQOcBzwvQ
ecHzBHSe8LwBnTc8j0DnEc8r0HnF8wx0nvG8A513vA9A9wHvC9B9wfsEdJ/w
vgHdN7yPQPcR7yvQfcX7DHSf8b4D3XfsB0D9APsFUL/AfgLUT7DfAPUb7EdA
/Qj7FVC/wn4G1M+w3wH1O+yHQP0Q+yVQv8R+CtRPsd8C9Vvsx0D9GPs1UL/G
fg7Uz7HfA/V7nAdA8wDnBdC8wHkCNE9w3gDNG5xHQPMI5xXQvMJ5BjTPcN4B
zTuch0DzEOcl0LzEeQo0T3HeAs1bnMdA8xjnNdC8xnkONM9x3gPNe9QDQHoA
9QKQXkA9AaQnUG8A6Q3UI0B6BPUK/K9e+a+eAdIzqHeA9A7qISA9hHoJSC+h
ngLSU6i3gPQW6jFBegz1miC9hnpOkJ5DvSdI76EeFKQHUS8K0ouoJwXpSdSb
gvQm6lFBehT1qiC9inpWkJ5FvStI76IeFqSHUS8L0suopwXpadTbgvQ26nFB
ehz1uiC9jnpekJ5HvS9I7+M+IGgfwH1B0L6A+4SgfQL3DUH7Bu4jgvYR3FcE
7Su4zwjaZ3DfEbTv4D4kaB/CfUnQvoT7lKB9CvctQfsW7mOC9jHc1wTta7jP
CdrncN8TtO/hPihoH8R9UdC+iPukoH0S901B+ybuo4L2UdxXBe2ruM8K2mdx
3xW07+I+LGgfxn1Z0L6M+7SgfRr3bUH7Nu7jgvZx3NcF7eu4zwva53HfF7Tv
ox8gyA9Av0CQX4B+giA/Af0GQX4D+hGC/Aj0KwT5FehnCPIz0O8Q5HegHyLI
D0G/RJBfgn6KID8F/RZBfgv6MYL8GPRrBPk16OcI8nPQ7xHk96AfJMgPQr9I
kF+EfpIgPwn9JkF+E/pRgvwo9KsE+VXoZwnys9DvEuR3oR8myA9Dv0yQX4Z+
miA/Df02QX4b+nGC/Dj06wT5dejnCfLz0O8T5PehHyjID0S/UJBfiH6iID8R
/Ubxv37jf/1IQX4k+pWC/Er0MwX5meh3CvI70Q8V5IeiXyrIL0U/VZCfin6r
IL8V/VhBfiz6tYL8WvRzBfm56PcK8nvRDxbkB6NfLMgvRj9ZkJ+MfrMgvxn9
aEF+NPrVgvxq9LMF+dnodwvyu9EPF+SHo18uyC9HP12Qn45+uyC/Hf14QX48
+vWC/Hr08wX5+ej3C/L7MQ8QlAdgXiAoL8A8QVCegHmDoLwB8whBeQTmFYLy
CswzBOUZmHcIyjswDxGUh2BeIigvwTxFUJ6CeYugvAXzGEF5DOY1gvIazHME
5TmY9wjKezAPEpQHYV4kKC/CPElQnoR5k6C8CfMoQXkU5lWC8irMswTlWZh3
Ccq7MA8TlIdhXiYoL8M8TVCehnmboLwN8zhBeRzmdYLyOszzBOV5mPcJyvsw
DxSUB2JeKCgvxDxRUJ6IeaOgvBHzSEF5JOaVgvJKzDMF5ZmYdwrKOzEPFZSH
Yl4qKC/FPFVQnop5q6C8FfNYQXks5rWC8lrMcwXluZj3Csp7MQ8WlAdjXiwo
L8Y8WVCejHmzoLwZ82hBeTTm1YLyasyzBeXZmHcLyrsxDxeUh2NeLigvxzxd
UJ6OebugvB3zeEF5POb1gvJ6zPMF5fmY9wvK+5EHEMQDIC8giBdAnkAQT4C8
gSDeAHkEQTwC8gqCeAXkGQTxDMg7COIdkIcQxEMgLyGIl0CeQhBPgbyFIN4C
eQxBPAbyGoJ4DeQ5BPEcyHsI4j2QBxHEgyAvIogXQZ5EEE+CvIkg3gR5FEE8
CvIqgngV5FkE8SzIuwDxLsjDAPEwyMsA8TLI0wDxNMjbAPE2yOMA8TjI6wDx
OsjzAPE8yPsA8T7IAwHxQMgLAfFCyBMB8UTIGwHxRsgjAfFIyCsB8UrIMwHx
TMg7AfFOyEMB8VDISwHxUshTAfFUyFsB8VbIYwHxWMhrAfFayHMB8VzIewHx
XsiDAfFgyIsB8WLIkwHxZMibAfFmyKMB8WjIqwHxasizAfFsyLsB8W7IwwHx
cMjLAfFyyNMB8XTI2wHxdsjjAfF4yOsB8XrI8wHxfMj7AfF+yAMC8YDICwLx
gsgTAvGEyBsC8YbIIwLxiMgrAvGKyDMC8YzIOwLxjshDAvGQyEsC8ZLIUwLx
lMhbAvGWyGMC8ZjIawLxmshzAvGcyHsC8Z7IgwLxoMiLAvGiyJMC8aTImwLx
psijAvGoyKsC8arIswLxrMi7AvGu/5eH/R/6v30j
                "]], {{{
                0.07918188720717284, 0.}, {0., -1.}}, {56.66666666666667, 
                0.}}]},
             
             ImageSizeCache->{{514.8619984283366, 545.8147931696869}, {
              11.902350984971314`, 60.03263705697457}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.1640798788442287`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.10966658815327464`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.034835215990218604`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.007549611540782058`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.021210713716943518`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.1640798788442287}, {
               Style["75%", Bold], 0.10966658815327464`}, {
               Style["median", Bold], 0.034835215990218604`}, {
               Style["25%", Bold], -0.007549611540782058}, {
               Style["min", Bold], -0.021210713716943518`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.7058823529411765, 0.49411764705882355`, 0.5450980392156862], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
uXdIAxQHplRsFb9gxNn15zOa6uH32WX2T6q+oLTqj8vDE+ph1KqEMd/6FmC/
PTZtv+/Ww98j9aJmqhdgUF2G0eqD9WDyLXbL8Y0FqKuTMTh3fj3Yhgsdb08W
YIBHsoeVRD3cuhDt9sezAN/O2qPbGVcHYUbac/TiCzDwxDWHTRfqIFst4tOV
2gIs1IqJPb6kDtqa5h9OH1iIs+f03WbQWQvK0aF9h2oWYoqKhFOify2oO2v4
mpoU4miLv0Z2mtbCWpMgvUfnCtFjw18qJXK1YDllVkW1dyFu/6ur3enlN3Bu
97ebkVyIM+Ypf1Nc+w3846aNOdZUiLrtz0+db6yBZFffyPDBRZj8v2/BfS7X
QK35pC2/FhShubJuZPzYGlCY5d2us70I3Zwe3SgJ/gqTfqm5XXIsQpdHn30c
db6Cforn7LTnRfi+v9a56rRq2HVn9Kf/fSpCuaxfq/82robze+8d2tJWhCWz
Fri9Ka6Cx5oqfT1VijFi4IhX93dWgSh9+1nl4mK0HwD/TqishNKMwXrTdhWj
SumHQheLSvjt6Vp+5HIxNl7OPqhaVgGjLJXsQgOKMXH+7M7hWytAW/va6O6s
YnwXEDDnXW45mPTtFyl0FmPDtcpF69aVw8m8y8ZOY0owJydvs0pyGXj4yLen
LC3Bp3Yqtlt0yiDs+IWbg/aX4OtvMR0bIkrhs4707M3XStDu0Rft1XNKoU3J
Pu3+6xJ8cqA+u9/GElAu+X2wPK8EX26LmX5SvxjmvDzdZ8rvEtzpsFHKfEER
+C46kxU2qBSjr9VcnT2zEN5M0H68ZUIpCip/dltMLIAExW6rnnml2Fd+05YD
Y7/A55a34LmsFIOaX2Q/HZUP1fm2A3TMSnHbT91bF0bnwQ9xflGlZSkGS1wZ
t3VcLsj4tvtdtC9Fr3sWIx2mf4bBLqEnp7mV4sw70xINFuTAeJvjyz76lKJ5
9Je2thXZoLFVY7jV21JcP3x34UeLLNDRbalWTu39+ecRowfaZ8K66UGhocWl
OL5GJbLxSQbsULZyNP5eigcaRo6/n5oOVp0zjbqly9A6r/KCXfsnOFfaoPZw
aBluqT6p0709DVwS/JuFqWVoc/6VZFlOKjwMOIgVC8uwp7JiyDbjFAhwn3bN
aXUZKit6/XH9mgTvTn8zm7qjDEcvb/3i5pAIqRa+01Oty/DIeuPcwzMSoHD5
3i5LpzL8GRzxZnR5PNTNnpQ06E4ZPpAE87vecdA1vOp2iF8Z1nscN023fg99
Jbz3bI4uw+UzvWyfrIkFla87NbvSy/Dq6PxtTfNjYGqamsyDijJU/IFTLs0Q
QSu0NBPayxCu6kvamESDwX3PR+UK5ZgZ2PTvA+so2OywzerCyHJUMdf8qeAd
AXsOjIYpM8sxrzbltHrdG7BZV9g/RShHrR/7u88bhsMFrXuFh43K0WjrQIe9
kaHgNtbET2lPOTpOH7xt8dIQ8JZTOfnathxtc4Km7CwJhtcNuYab/ivHJUPL
C6e4BEFs9q1hnQ/K8bb27czKdYGQGbmx+l5gOSovbN2TsioAyh4PDl38vhz1
hc7YlhH+8P1ylkNZTjkmWTl55vd5ARJHXdc71pTjlpbiuyoqvjDQeJ3a5O5y
lAzVdFxl4ANjQak5qX8FJgU8D1e+6Q0zJ32KPqRagWfVu+Tkux/Dov7Xrg7U
qEBri7clM888glVtK82C9SpQ6VvAVncVLzArUJy+0bgCOa8+FJvc2XHg/39N
70d+P30e8ufR/4f8/9Hvg/z70O+L/PvS90H+PvR9kb8vXQ/k60HXC/l60fVE
vp50vZGvN90P5PtB9wv5ftH9RL6fdL+R7zedB+TzQOcF+bzQeUI+T3TekM8b
nUfk80jnFfm80nlGPs903pHPOz0PyM8DPS/Izws9T8jPEz1vyM8bPY/IzyM9
r8jPKz3PyM8zPe/IzzvNA+R5QPMCeV7QPEGeJzRvkOcNzSPkeUTzCnle0TxD
nmc075DnHc1D5HlI8xJ5XtI8RZ6nNG+R5y3NY+R5TPMaeV7TPEee5zTvkec9
7QPkfUD7Anlf0D5B3ie0b5D3De0j5H1E+wp5X9E+Q95ntO+Q9x3tQ+R9SPsS
eV/SPkXep7Rvkfct7WPkfUz7Gnlf0z5H3ue075H3PekBZD1AegFZL5CeQNYT
pDeQ9QbpEWQ9QnoFWa+QnkHWM6R3kPUO6SFkPUR6CVkvkZ5C1lOkt5D1Fukx
ZD1Geg1Zr5GeQ9ZzpPeQ9R7pQWQ9SHoRWS+SnkTWk6Q3kfUm6VFkPUp6FVmv
kp5F1rOkd5H1LulhZD1MehlZL5OeRtbTpLeR9TbpcWQ9TnodWa+TnkfW86T3
kfU++QFkP0B+AdkvkJ9A9hPkN5D9BvkRZD9CfgXZr5CfQfYz5HeQ/Q75IWQ/
RH4J2S+Rn0L2U+S3kP0W+TFkP0Z+DdmvkZ9D9nPk95D9HvlBZD9IfhHZL5Kf
RPaT5DeR/Sb5UWQ/Sn4V2a+Sn0X2s+R3kf0u+WFkP0x+Gdkvk59G9tPkt5H9
NvlxZD9Ofh3Zr5OfR/bz5PeR/T7lAch5AOUFyHkB5QnIeQLlDch5A+URyHkE
5RXIeQXlGch5BuUdyHkH5SHIeQjlJch5CeUpyHkK5S3IeQvlMch5DOU1yHkN
5TnIeQ7lPch5D+VByHkQ5UUi50WUJ4mcJ1HeJHLeRHmUyHkU5VUi51WUZ4mc
Z1HeJXLeRXmYyHkY5WUi52WUp4mcp1HeJnLeRnmcyHkc5XUi53WU54mc51He
J3LeR3mgyHkg5YUi54WUJ4qcJ1LeKHLeSHmkyHkk5ZUi55WUZ4qcZ1LeKXLe
SXmoyHko5aUi56WUp4qcp1LeKnLeSnmsyHks5bUi57WU54qc51LeK3LeS3mw
yHkw5cUi58WUJ4ucJ1PeLHLeTHm0yHk05dUi59WUZ4ucZ1PeLXLeTXm4yHk4
5eUi5+WUp4ucp1PeLnLeTnm8yHk85fUi5/WU54uc51PeL3LeT32AyH0A9QUi
9wXUJ4jcJ1DfIHLfQH2EyH0E9RUi9xXUZ4jcZ1DfIXLfQX2IyH0I9SUi9yXU
p4jcp1DfInLfQn2MyH0M9TUi9zXU54jc51DfI3LfQ32QyH0Q9UUi90XUJ4nc
J1HfJHLfRH2UyH0U9VUi91XUZ4ncZ1HfJXLfRX2YyH0Y9WUi92XUp4ncp1Hf
JnLfRn2cyH0c9XUi93XU54nc51HfJ3LfR32gyH0g9YUi94XUJ4rcJ1LfKHLf
SH2kyH0k9ZUi95XUZyL3mdR3Ived1Ici96HUlyL3pdSnIvep1Lci963UxyL3
sdTXIve11Oci97nU9yL3vdQHI/fB1Bcj98XUJyP3ydQ3I/fN1Ecj99HUVyP3
1dRnI/fZ1Hcj993UhyP34dSXI/fl1Kcj9+nUtyP37dTHI/fx1Ncj9/XU5yP3
+dT3I/f9xAMg8wDECyDzAsQTIPMExBsg8wbEIyDzCMQrIPMKxDMg8wzEOyDz
DsRDIPMQxEsg8xLEUyDzFMRbIPMWxGMg8xjEayDzGsRzIPMcxHsg8x7EgyDz
IMSLIPMixJMg8yTEmyDzJsSjIPMoxKsg8yrEsyDzLMS7IPMuxMMg8zDEyyDz
MsTTIPM0xNsg8zbE4yDzOMTrIPM6xPMg8zzE+yDzPsQDIfNAxAsh80LEEyHz
RMQbIfNGxCMh80jEKyHzSsQzIfNMxDsh807EQyHzUMRLIfNSxFMh81TEWyHz
VsRjIfNYxGsh81rEcyHzXMR7IfNexIMh82DEiyHzYsSTIfNkxJsh82bEoyHz
aMSrIfNqxLMh82zEuyHzbsTDIfNwxMsh83LE0yHzdMTbIfN2xOMh83jE6yHz
esTzIfN8xPsh837EAyLzgMQLIvOCxBMi84TEGyLzhsQjIvOIxCsi84rEMyLz
jMQ7IvOOxEMi85DESyLzksRTIvOUxFsi85bEYyLzmMRrIvOaxHMi85zEeyLz
nsSDIvOgxIsi86LEkyLzpMSbIvOmxKMi86jEqyLzqsSzIvOsxLsi867EwyLz
sMTLIvOyxNMi87TE2yLztsTjIvO4xOsi87rE8yLzvMT7IvO+xAMj88DECyPz
wsQTI/PExBsj88bEIyPzyMQrI/PKxDMj88zEOyPzzsRDI/PQxEsj89LEUyPz
1P8vb/1/AFVLCVQ=
                "]], {{{0.14189620574641904`, 0.}, {
                0., -1.}}, {57.66666666666667, 0.}}]},
             
             ImageSizeCache->{{527.478022649252, 
              548.7560177131865}, {-3.5255463417986235`, 60.61638423603666}}],
            
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.42654963923143213`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.2521327866517779`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "0.16024491576064423`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "0.09893942658246481`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.03872234176338097`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.42654963923143213`}, {
               Style["75%", Bold], 0.2521327866517779}, {
               Style["median", Bold], 0.16024491576064423`}, {
               Style["25%", Bold], 0.09893942658246481}, {
               Style["min", Bold], -0.03872234176338097}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], 
           "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, 
        {GrayLevel[
          NCache[
           Rational[2, 3], 0.6666666666666666]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndYjn/490NLw96k7KSSTcp5RUgkWV+jbyhkh6+i0LKJilBmhSRSGtqd
V0qTNDQ076KBaEqZT8/xO8/fH8/jD477yNF939f1uc7zPV6jLG1WbusuJSXV
0vXX//2X/9xY2/tWYUc1GPRPKex0ug+PD7v9Da6rhsc5dU2mZwIgwbun1anC
akicZFW2KC4QsmNOp5q/rIbkcCvjnyMfg6Skh8b0iGoIviw1OSQyGFp+Ol9U
vFcNi0Pmvd9qEArSKn+aqj2rYVPvmZGfU57BwHlHV8c6V4Nw8F8fQ+twmLCp
I8rTphrmDt4yeYNGJMx2th2+06IaRC/9JPU+UWDs1+IomFQDDOsTmzAsBsxf
2FQP1qsG6S9RUpuWxcHe9w0LGzWqYUzhxpNjHyaAk/SuR6lDq8EuYWrWmUEi
eIyrU7ojXw2SIoVi4/1J4L9o637b71XQMupbimz1C4iwrspfVlsFfWfU7G/Y
kwKpZy1mjS2oAtxuYDulXyoUPSq98TO5Ckrm+Rn1zk+Dj5nr/uSFVUFP/XXL
XoRmwI/PBVuC/KpgpkZcytknWaCkvOqli0cVpPaZFu+X9hpGaueor3eqgvQ+
T+ofdMuByaYmbjr7qmB5b72OLTq5YLA/s1Hu3yrwvHDhl9/+PFjpuXhV5dIq
SFHsHyiVnA9bw1KeP9etgudZDSED1QvALt9g2KWJVfBp2Ygetr6FcLYt8fi2
IVWwybewM1izGHwG6lXpyVXBvrwzx41fv4PHM2MMB7RLYF7BTo1s11KI/2dm
4OcPEuje5r070qQcso+EKybnS+CV1KPLh7QrQeKjY3PjhQQSbT7Zxl2WQHNs
cN6BZxKQS/5Zd8mnCnqUacxc4iuBz/XpJZWPq2HA74c+au4SqA0f6pef8R7G
jxz3+/txCQjSRdrnWj/AbPDf/GaPBKbILbw/ZGItGG9WTQnYKIHTPXxLL++q
g40utyY4Gktgzej3nVLR9bDXf+iFNXO6fl5yssfWvp/AMfnaV011CZSc+24b
YfcZPD70Xyk9WALXDBJrq+oawF/GM7JURgLtr2oC87Z+he0mI6Zu/1gJ/vtD
7a2+NMJ590GdA9Iqoa7q7o1wsQmCc/uIyfcrYeqDbsarPJohp7/imYOulXBR
qbDDZlsLtK2RWT5qcyU41Wi7v4dWGOz9d0COfiWsjtx221W1DXRLOksdh1dC
YFGz6Qjpb2Axos1fq7MC7C+Y7XT48g1cLL7uLCusACtp4/lbStvhvm+9zoWI
CjgUFJvj/vo7pFVXf59zuQKcB82KxOQO+Dy2PLHepgLeD7xs+iChE3pZF526
blIBhmMdShpjf8CUR7nLFk2qgHQr/UtL4n7C6s9Z/b/JV8DwuWLmP4m/4IhW
asm92nLQPBxgFJf8G27aiH4rU8rhjvY9sz5ZfyDxWeyObv7l0O1F0d+v+X+h
ujVicqhTOSSO6v3i2z4pQWZmSLvFv+UwK/zMnKVtUoL6kUcJynPLwfTbArdE
+27C0th7J+OHlIPf07D6AX+7CTa/bi/d3V4Gp5WuzOh3srtweZ53v2FvyyB9
02lDe/keQqTz5Xfpz8rATFZbTsmth1D8ws33sHsZ7Dl2I/VCL2nhl/QZ6/F7
y0DNPMs8xl1aUF3sol1gXAabJv60WdNbRph/7ui3E+plMHzO3hC1izLC9izb
+KmyZZCQa9O3TF5WOKe8/0TV+1LYUSH0W+IqKzwx3WXskVQKu/SdWyd2ygpv
PLf2hbulsKW86KfBXjmhNd+i+MuxUpjg5vR8TYWcMGjQ+ru3NpSC11Vh6qRl
8sKcdau2L51dCvIqt+D8c3nB/IaJ1o+BpbDY5XmwnkpPwblscVtgawkMGR50
qpdzT+HeyPlx/+SWwBSjDwuyK3oKqZv1XGVDSsC2Q6e3yRwF4ZP/zCWRbiWQ
Vzbsi4W7gqBco9Nn664SOFhr1FoiURB0Jkwq6mdUAlWdJ21vaikKq3aOu5M0
rgTGXhmu42irKBx+rLptf48SsLxstG9rtKJw48tQTdWqd1DvsktzWruikDB5
QOvrxHfg+k/cjHxtJUFyoFfssVvvIP77Kv0plkqCdIS8yySHd+DisahF30NJ
mNDe3ajkn3cgN/Ver6/RSoLx7N+9zs14B/qFBlt0y5SEfQ7fC2b1fwfd9Gfk
qf5QEjzjm2/VNhXDXJ+8LXf7KQsRfz5bXc0uhq2t80cnjlMWioRaDcMnxTDa
7NakU9OUhZ+ukuaWc8Vwss/58930lIWRL0ui/ayLoWTb1YmGoCwYyBU4rVhY
DDOOqUdu0VcWti55s+jv6GKQXbzf4eBMZeHshQzlp1LFcOqCscFlDWXh8evk
t+YVRXDlu90oyVBlIbt34k3F+CKQ0ly6ylFaWWgxi7aM9SkCW4upvzw/KQkD
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
NoNUi2j7fIYDnLd3n2Sm3LVPjppN3+F3ABYZX9whZd71Wi6lZtowSyg8d1nP
K6Drtdo984apI8HW0UnnTUPX68JOVZlZm/H1rLhMO+1WkLLck5sTsh9TbhiU
r9rd9fpdaT9VQ3v8pqSeM/VeKwiB44JmNjjjz9Ye9e8LWkG0Ks/8d+YplB76
4MzcHm0gqF79fNL5HHoJd/b0m9QGUqXLlJ5kXsT4AtXahSZdP1/qem2ngifO
NwuXid7Z9fOJFeOPT76Cbo0HMkyd20Aiqxvlsfoq9p9hAZ0ebeD74eri+/bX
sa/nVb8HN9vA+UVzUdQdHzT5rbJ7qW/X7/M12ZGVfBMv3Bu9rfZO1+9zfNRR
UX8bszVdnxy+3gZNwa6GnbK+KBj6hcicb4OcW6FKJ4b6oUb5ibG37Nog9ELF
WyVNf+yeBt+X/tv1fg5Kt6/Nu4fOVZ90Js3rer+dutvUzO5j25OZRauHtsHm
dTu0gqwe4IyizpT6r62wYvG1b9PsArDhdvtRRWwFnZkpCQlnH6LqYt2mmnOt
oDau5dTim4FYkxmhc8+063oOUFueG/wIZ97rnGvXpxUk3ZcP2igGoTh27Nzr
r1ogp/loxYe8xziyR9u8uSdbIFTyKGBfzRN0idh7//asFvB4U7Sv43swlrlV
ev6q7ToPiTKzXBVC0HSC6j3vy80QWujz91SvUNw98uaVCN1mUMsOfZ95PRRN
1ktqvSqbwPtlWlrvUc/whstUDyeXJpBPqHi8OugZdu9T6BOn1gTOEd/cfaaF
octNU59RRxuh6bHSoYr4MFx4bNqzS6FfYfO9MevGLArH+xtX/F5e/QWKb+jq
7XgTjqp2AfYtfb6A0WUzteB1EfjAcEGnnH4DRJ/bId1SFYF31VaeG2H9GXRc
nOpn7o7EC14qpbHun8D3yLVXR9sicZtbXuSuqI/QZ39wqHj8Oc4qE/eHVtTD
WesULxm5KFyWlWCnJFsPHRalR4w9olBWnJH/Q6sOdqxtMXcfGo2O/S0zWtbW
gsSkp8Fb/2hMjP5ru92lBlYsVBs3VDMGVylkHX0R/AHS9Wb1tIiMQZXWhti9
Ze9h9vTlX/znxeJh6X39M5TfQ+Ckbbl1abG4enjw1Mnzu+bVmGORmmZxaK2Z
tLvNvgo8hl3xOVASh1DmfWN7pASk+gUdf24Vj67PtMbc+FgJR3ombfnZEI9j
9ENG5+6vgHqp4oWCXQKGTbD3qpXq0h8dXyee+puA5q6Xsw1ulEJOo0yvzLOJ
GKJ0f4G+fgkIdSNaevVDHCIriR3/qRiiK6YVrrqJmDnO6Dr4FcGA3eP+XdZP
RFfrgVoJloXwqlbnzde1InrUd4zJ0C6As5Z6Bp43RXyi9eGDi8xbECoWh0+T
iKge363fz9o86Fi/alzh2CSEipNy8/JzIaLA4vqRnUmY7dJhZZyZA3vMdvUc
/jQJiw8f1NLyfgNjX9seTWhJQsOkG7VqXftPYuTyZdOsFzhqfIjH3Mos8E5x
29T92Aus7yhqnjM6E1YL3rn3xRc4cZuedpZ9OijF31uwWCYZhe4bf3vWpELK
rJDIj0uS8e1Pt/Jx216Cc3jsBLdLyah6I3XBgI5kmD051Uc7Pxmtvma/rLr9
ApqCchVzB6dg6ucV+oprk+DJ+PLj/5mnYFaoWbWsmghb/esbB/ql4Ff/E1Hn
2xNgxMi2LdE1KejYu//5bdlxUOzzN3+Dxkv8WT/V1CY1BjwGKi76ve8lJkzf
9ua/8ihY5jko+m74S/Q0c148t99zkFYerTG/4yV+XHdW0c0qAuLPat36oJeK
Iwf+UNLMCYMj0nN6nXFJRY2hQw2r1z4DHWdD54mpqSjXQ72jsSEE6n+atmQp
pGHjdRXpQxuD4f7hjVv3mabhqhPP97W2B4F56/bCPl5p+LA+oteIhEAYYHPQ
KLw4DQWHzScCHwdAzqfjsWtU0nF7zPTwLeJ9OLv9nGbHlnTs810cpNbpD4bV
XnduBKQj5++//vXto//5/39N/x/5/9PvQ/599H7I70efB/nz0OdF/rz0fZC/
D31f5O9L1wP5etD1Qr5edD2Rryddb+TrTfcD+X7Q/UK+X3Q/ke8n3W/k+03n
Afk80HlBPi90npDPE5035PNG5xH5PNJ5RT6vdJ6RzzOdd+TzTs8D8vNAzwvy
80LPE/LzRM8b8vNGzyPy80jPK/LzSs8z8vNMzzvy807zAHke0LxAnhc0T5Dn
Cc0b5HlD8wh5HtG8Qp5XNM+Q5xnNO+R5R/MQeR7SvESelzRPkecpzVvkeUvz
GHke07xGntc0z5HnOc175HlP+wB5H9C+QN4XtE+Q9wntG+R9Q/sIeR/RvkLe
V7TPkPcZ7TvkfUf7EHkf0r5E3pe0T5H3Ke1b5H1L+xh5H9O+Rt7XtM+R9znt
e+R9T3oAWQ+QXkDWC6QnkPUE6Q1kvUF6BFmPkF5B1iukZ5D1DOkdZL1DeghZ
D5FeQtZLpKeQ9RTpLWS9RXoMWY+RXkPWa6TnkPUc6T1kvUd6EFkPkl5E1ouk
J5H1JOlNZL1JehRZj5JeRdarpGeR9SzpXWS9S3oYWQ+TXkbWy6SnkfU06W1k
vU16HFmPk15H1uuk55H1POl9ZL1PfgDZD5BfQPYL5CeQ/QT5DWS/QX4E2Y+Q
X0H2K+RnkP0M+R1kv0N+CNkPkV9C9kvkp5D9FPktZL9FfgzZj5FfQ/Zr5OeQ
/Rz5PWS/R34Q2Q+SX0T2i+Qnkf0k+U1kv0l+FNmPkl9F9qvkZ5H9LPldZL9L
fhjZD5NfRvbL5KeR/TT5bWS/TX4c2Y+TX0f26+Tnkf08+X1kv095AHIeQHkB
cl5AeQJynkB5A3LeQHkEch5BeQVyXkF5BnKeQXkHct5BeQhyHkJ5CXJeQnkK
cp5CeQty3kJ5DHIeQ3kNcl5DeQ5ynkN5D3LeQ3kQch5EeRFyXkR5EnKeRHkT
ct5EeRRyHkV5FXJeRXkWcp5FeRdy3kV5GHIeRnkZcl5GeRpynkZ5G3LeRnkc
ch5HeR1yXkd5HnKeR3kfct5HeSByHkh5IXJeSHkicp5IeSNy3kh5JHIeSXkl
cl5JeSZynkl5J3LeSXkoch5KeSlyXkp5KnKeSnkrct5KeSxyHkt5LXJeS3ku
cp5LeS9y3kt5MHIeTHkxcl5MeTJynkx5M3LeTHk0ch5NeTVyXk15NnKeTXk3
ct5NeThyHk55OXJeTnk6cp5OeTty3k55PHIeT3k9cl5PeT5ynk95P3LeT30A
ch9AfQFyX0B9AnKfQH0Dct9AfQRyH0F9BXJfQX0Gcp9BfQdy30F9CHIfQn0J
cl9CfQpyn0J9C3LfQn0Mch9DfQ1yX0N9DnKfQ30Pct9DfRByH0R9EXJfRH0S
cp9EfRNy30R9FHIfRX0Vcl9FfRZyn0V9F3LfRX0Ych9GfRlyX0Z9GnKfRn0b
ct9GfZzIfRz1dSL3ddTnidznUd8nct9HfaDIfSD1hSL3hdQnitwnUt8oct9I
faTIfST1lSL3ldRnitxnUt8pct9JfajIfSj1pSL3pdSnitynUt8qct9KfazI
fSz1tSL3tdTnitznUt8rct9LfbDIfTD1xSL3xdQni9wnU98sct9MfbTIfTT1
1SL31dRni9xnU98tct9NfbjIfTj15eL/9uX/06eL3KdT3y5y3059vMh9PPX1
Ivf11OeL3OdT3y9y3088gMg8APECIvMCxBOIzBMQbyAyb0A8gsg8AvEKIvMK
xDOIzDMQ7yAy70A8hMg8BPESIvMSxFOIzFMQbyEyb0E8hsg8BvEaIvMaxHOI
zHMQ7yEy70E8iMg8CPEiIvMixJOIzJMQbyIyb0I8isg8CvEqIvMqxLOIzLMQ
7yIy70I8jMg8DPEyIvMyxNOIzNMQbyMyb0M8jsg8DvE6IvM6xPOIzPMQ7yMy
70M8kMg8EPFCIvNCxBOJzBMRbyQyb0Q8ksg8EvFKIvNKxDOJzDMR7yQy70Q8
lMg8FPFSIvNSxFOJzFMRbyUyb0U8lsg8FvFaIvNaxHOJzHMR7yUy70U8mMg8
GPFiIvNixJOJzJMRbyYyb0Y8msg8GvFqIvNqxLOJzLMR7yYy70Y8nMg8HPFy
yLwc8XTIPB3xdsi8HfF4yDwe8XrIvB7xfMg8H/F+yLwf8YDIPCDxgsi8IPGE
yDwh8YbIvCHxiMg8IvGKyLwi8YzIPCPxjsi8I/GQyDwk8ZLIvCTxlMg8JfGW
yLwl8ZjIPCbxmsi8JvGcyDwn8Z74v7zn//CgyDwo8aLIvCjxpMg8KfGmyLwp
8ajIPCrxqsi8KvGsyDwr8a7IvCvxsMg8LPGyyLws8bTIPC3xtsi8LfG4yDwu
8brIvC7xvMg8L/G+yLwv8cDIPDDxwsi8MPHEyDwx8cbIvDHxyMg8MvHKyLwy
8czIPDPxzsi8M/HQyDw08dLIvDTx1Mg8NfHWyLw18djIPDbx2si8NvHcyDw3
8d7IvDfx4Mg8OPHiyLw48eTIPDnx5si8OfHoyDw68erIvDrx7Mg8O/HuyLz7
/8vD/x9Iei8a
                "]], {{{0.11397128187459453`, 0.}, {0., -1.}}, {
                74.5, 0.}}]},
             
             ImageSizeCache->{{656.7948672217595, 681.3195273416676}, {
              19.478453100663685`, 84.58235754526906}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.02768460138485694`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.2586658111104327`"}]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.3539034624166339`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.3857937068193249`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.42378690202895003`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.02768460138485694}, {
               Style["75%", Bold], -0.2586658111104327}, {
               Style["median", Bold], -0.3539034624166339}, {
               Style["25%", Bold], -0.3857937068193249}, {
               Style["min", Bold], -0.42378690202895003`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[13, 18], 0.7222222222222222]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
xA2W6REcL8S/+jwNPaXpArJHhwddrxbiH0NNjDYMvg0rszS2WfQpR85fb8/V
H6Cv8v+v6fuRv5/uh3w/+nnIP48+D/Lnoc+L/Hnp90H+fej3Rf596XkgPw96
XsjPi54n8vOk5438vOl9IL8Pel/I74veJ/L7pPeN/L5pPSCvB1ovyOuF1hPy
eqL1hrzeaD0ir0dar8jrldYz8nqm9Y683mk/IO8H2i/I+4X2E/J+ov2GvN9o
PyLvR9qvyPuV9jPyfqb9jrzf6TxAPg/ovEA+L+g8QT5P6LxBPm/oPEI+j+i8
Qj6v6DxDPs/ovEM+7+g8RD4P6bxEPi/pPEU+T+m8RT5v6TxGPo/pvEY+r+k8
Rz7P6bxHPu9pHiDPA5oXyPOC5gnyPKF5gzxvaB4hzyOaV8jziuYZ/jfP/p13
yPOO5iH+Nw//nZfI85LmKfI8pXmLPG9pHiPPY5rXyPOa5jnyPKd5jzzvSQ8g
6wHSC8h6gfQEsp4gvYGsN0iPIOsR0ivIeoX0DLKeIb2DrHdIDyHrIdJLyHqJ
9BSyniK9hay3SI8h6zHSa8h6jfQcsp4jvYes90gPIutB0ovIepH0JLKeJL2J
rDdJjyLrUdKryHqV9CyyniW9i6x3SQ8j62HSy8h6mfQ0sp4mvY2st0mPI+tx
0uvIep30PLKeJ72PrPfJDyD7AfILyH6B/ASynyC/gew3yI8g+xHyK8h+hfwM
sp8hv4Psd8gPIfsh8kvIfon8FLKfIr+F7LfIjyH7MfJryH6N/ByynyO/h+z3
yA8i+0Hyi/ifX/zXTyL7SfKbyH6T/CiyHyW/iuxXyc8i+1nyu8h+l/wwsh8m
v4zsl8lPI/tp8tvIfpv8OLIfJ7+O7NfJzyP7efL7yH6f8gDkPIDyAuS8gPIE
5DyB8gbkvIHyCOQ8gvIK5LyC8gzkPIPyDuS8g/IQ5DyE8hLkvITyFPwvT/k3
b0HOWyiPQc5jKK9Bzmsoz0HOcyjvQc57KA9CzoMoL0LOiyhPQs6TKG9Czpso
j0LOoyivQs6rKM9CzrMo70LOuygPQ87DKC9DzssoT0PO0yhvQ87bKI9DzuMo
r0PO6yjPQ87zKO9DzvsoD0TOAykvRM4LKU9EzhMpb0TOGymPRM4jKa9Ezisp
z8T/8sx/807kvJPyUOQ8lPJS5LyU8lTkPJXyVuS8lfJY5DyW8lrkvJbyXOQ8
l/Je5LyX8mDkPJjyYuS8mPJk5DyZ8mbkvJnyaOQ8mvJq5Lya8mzkPJvybuS8
m/Jw5Dyc8nLkvJzydOQ8nfJ25Lyd8njkPJ7yeuS8nvJ85Dyf8n7kvJ/6AOQ+
gPoC5L6A+gTkPoH6BuS+gfoI5D6C+grkvoL6DOQ+g/oO5L6D+hDkPoT6EuS+
hPoU5D6F+hbkvoX6GOQ+hvoa5L6G+hzkPof6HuS+h/og5D6I+iLkvoj6JOQ+
ifom5L6J+ijkPor6KuS+ivos5D6L+i7kvov6MOQ+jPoy5L6M+jTkPo36NuS+
jfo45D6O+jrkvo76POQ+j/o+5L6P+kDkPpD6QuS+kPpE5D6R+kbkvpH6SOQ+
kvpK5L6S+kzkPpP6TuS+k/pQ5D6U+lLkvpT6VOQ+lfpW5L6V+ljkPpb6WuS+
lvpc5D6X+l7kvpf6YOQ+mPpi5L6Y+mTkPpn6ZuS+mfpo5D6a+mrkvpr6bOQ+
m/pu5L6b+nDkPpz6cuS+nPp05D6d+nbkvp36eOQ+nvp65L6e+nzkPp/6fuS+
n3gAZB6AeAFkXoB4AmSegHgDZN6AeARkHoF4BWRegXgGZJ6BeAdk3oF4CGQe
gngJZF6CeApknoJ4C2TegngMZB6DeA1kXoN4DmSeg3gPZN6DeBBkHoR4EWRe
hHgSZJ6EeBNk3oR4FGQehXgVZF6FeBZknoV4F2TehXgYZB6GeBlkXoZ4GmSe
hngbZN6GeBxkHod4HWReh3geZJ6HeB9k3od4IGQeiHghZF6IeCJknoh4I2Te
iHgkZB6JeCVkXol4JmSeiXgnZN6JeChkHop4KWReingqZJ6KeCtk3op4LGQe
i3gtZF6LeC5knot4L2Tei3gwZB6MeDFkXox4MmSejHgzZN6MeDRkHo14NWRe
jXg2ZJ6NeDf8j3f7l4dD5uGIl0Pm5YinQ+bpiLdD5u2Ix0Pm8YjXQ+b1iOdD
5vmI90Pm/YgHROYBiRdE5gWJJ0TmCYk3ROYNiUdE5hGJV0TmFYlnROYZiXdE
5h2Jh0TmIYmXROYliadE5imJt0TmLYnHROYxiddE5jWJ50TmOYn3ROY9iQdF
5kGJF0XmRYknReZJiTdF5k2JR0XmUYlXReZViWdF5lmJd0XmXf8vD/s/BPP9
CA==
                "]], {{{0.2920955322454232, 0.}, {0., -1.}}, {75.5, 
                0.}}]},
             
             ImageSizeCache->{{669.4092344683337, 684.2624088595084}, {
              3.930199132996691, 92.23303783850581}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "0.13960071050811945`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "0.007965221727544282`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.16686286296741845`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.30523570543664685`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.40174630454874`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 0.13960071050811945`}, {
               Style["75%", Bold], 0.007965221727544282}, {
               Style["median", Bold], -0.16686286296741845`}, {
               Style["25%", Bold], -0.30523570543664685`}, {
               Style["min", Bold], -0.40174630454874}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[7, 9], 0.7777777777777778]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
qllP39x/JfUE64+vjubBLpnPEeoPWyDY9fBGw5V5YF1nubLYRVLvguGPgSPz
YPWe+n4DX7TAtT1rbWPqvoJWhX19quTnuqULxllFfwWX7788FzxvAX1l9SCt
x18hYv23DJOnknrSw/S/H/sKSaPPpB+63wITy+Trn6z6Cgrt58L+udUC9hHN
17eM/gq6do47r0ier+5F+aRejblg+/ppVc4ZSb3L6WGhsblgfnuQ6pXDLRBq
Em5o/jQXHi5+oe6zW1JvpU+runku9Elo07beIKmn4upUpJMLmjeWtCsuboEG
uZtT74zNhY+LX4XfmdwCBpVWsWuac2BzVq8B04ZK6kX/s1eUkAO7RgsjZGUk
9dx3/vFzzYEOByFOXNsMDnZrHhw6mQPtr7WcFHKboeHv+bPGr8sBi2m225wj
msFgtVpy1vgcWPJIfW33u2YQ1IaaOrRmw/v0AYmn7jfDpF7ycsu+ZMNzAznt
KZck9aqaXFqfZ0OBffeApUck9eLKFrw7lQ3zB9/aVL69GXZ4pmUab8iGcM1z
6Uu0JfXsw8yGTcyG3QPdG0/PlNQ75N0nqT0LYlqMT4aOl9Rb6/LqkqSP361f
fnjWwGZomuK4dL5bFqwwvTFURlpSr69Vfu2ZLHD5qBu5SXKehZpDli83ZUHn
nz1+y743gdqXHYo7JmVBv2/9ZboKmsDxnc67/p2ZMPtbm83zzCZoujFvdVRq
Jrz2SHyxNbkJdhxRLTvjngmLFeccmJnQBOEbhlhrWmXC3Df1C3bFSepNlxte
qZsJVk+VS2slPzv2b/J9pJYJSfrNf8t8aYKWX6UbNv/JALfNT+Q/pjWBYUpq
lXxGBvTY/1lpWJ6knrdwOfh1Biwx0GxfUSmp9+/7scfPZ8CEqWcGbpA8/61j
Tz+r6mVA8qoL71bINUPL5ht6BZMzYHDrn665w5vBUOtcnZMoA0S+h3vP1myG
cMVD11dnpYNe9Q137TXNMLlx+6Q/b9Ihp9rmqMXfzXArfXWY74V0mNbjbFCM
naSe71zDg9vS4U11X5elb5pht/Ok1jFT02FxmHRFeWozRJorOWVIp8M1iywF
n9+SenqyU+1z0uD7IZ+NL9Ra4NbsxhjwSoPUF233Phm0QJtSqXHzpTTJ593l
WHa9BXa3pHR5bk8Dz3zTB+PCWyAyC+8bTU+D2gX25Xt+t4CGv9fMIXJp0P7p
2N8P5raC070nSQlfU8FiY2vtp5Ot0GbpcPCCdyo8H7RQ1SOgFXYbnJWdeyUV
ViqPcTfoaoXoeaYuNTtTIWZFR6fPijbQGL59wfMZqZB/8UbwI8c2cGpflbmt
RyqcPt/X8ffXNmjLnWOmUJACQuP6JX7q7WD0WaVPxIcUMNKUSvE80w7RDwe/
OnU1BVpmlNwI/tIOGmdllk7bnQIldpmj45Q7wHlnQ17ZzBT4q3+D87vTHdCx
sOTkg14pIK2n7bAyrQOEea4TnoYmg9H6w3MOafwGh3ar7b1Mk6FZlGTRavcb
DD/vvGmulAzlaNUYVv4b1M7OjyoSkuC+xcc5z5Z1QtPCob/X/JMEJyMigk2f
dYLQ2aT5aWgSWD6/MLBR1AW3QtL2j4/4Aq8PD/2usKcLDK29Hzsc+QILjSfN
cgzrAjVwTGsd/gVmpmst11b+A23dh3rujUqEcLtVWT0u/YFIQWdJklkifGsL
X/iy7A/cuqBqPn9UIqTtEx+sWd4NhsvkPF/GJMDSLkclnxfdoCFTVtT/RAL4
p249uEdKJG6LEJTOjkmAIYNTB53WFIkjLz9dWxkXD41X5mf2+Eskdl557sJm
i3iY55HZt8VBJDaS3+EfPC4eNJoaF2h8Fok1Yub+VE2Mk9xzO4XblZJ6dkoT
blvGQW2Z6z+DFKXEsasbDf4ox8Ff5UFX7i6SEjv3SnU8mBQLQ2IL8uX2S4mN
4r0iM07Hws1zVhvWOkqJNa47dIBKLIybNENls5+UuHOtqeablBj48m7kOOk8
Sb2+q/cPORcDr7YqndfpltT7ovL4gmoMfDhgrzBIWVps4iiTVpMWDf30+kxd
u1xarLmxpIeBdTR82HutqNBYWtzZHxdHqEeD1IuFqUE20uLYlMcnpmVGwcVz
qsYpj6XF9/898/qBTRQkvlz9vo+/pJ6uQZGsRhQoqW59tCtZUm/QHCWz7Ei4
elAx+1OFtFiUMWht3sVIGKu8rqpnh7Q40bneRntaJMRs1J6j3VdGfF8v+ZNP
bgTk/B0nbzxKRmwy5F3NKNsImCXv7bhpsox4Vra98lXNCJjs2N4gP0dGLLp/
wKAxLxw61+7aeBZkxIkG2o677cLBPWFH0EttSb3hEyPjtMLBWhy54exaGfGB
r1IdswrDIFlGUGlbL6n3qGi667Uw+Lx7iYnSBkk9w5B9fWaHgbRcybwkye+n
jHr06GSxALH5m4vGrJIRPy44lVpyXYDK7/LPZcWSek/1e6yfK0Cw6bE8K8nz
HAg9cMYsCmHP7bst1yTP21M8sVJ7FMJZkwFH1SWfxzWsaPPoE6EwwcsiZVcf
GfG85Y9CGuNCYNJBNT/1NmlxTqS+evy4EIiSsY+8VSotNtNWvONqGQxtTne8
78VLi3vGfhFZJgWB4oJirRXe0mJXnWv/rFcJAu/zol5PbkuLxQkrciac+wzn
3++qe20uqbdOtKIjLRCGZB54dmKLpF5S0PsU9UCYsW5pvIympN4my5HuNgGQ
qBfTc19vabFHqpadVbY/jLo3tvx5qZRYvKW2Ycs0f5Ap8oyKC5AS52S83j3Z
9hN49ThZX+kgJT6lvy9elO8H5ssnWff8S0o8IGfcnGwtP5j7dP+6xdOlxB7b
85+9u/YR5jTndTl3icTivHsKl4t9wXCsW/XYeJG42HDL6R1zfWG/xeFRv5xF
4lOF/So0HT9AX8NhCwbvFokHGMVv6lHhA1NK+to9UxGJvUtsgwsW+kBB0uZX
W7K7YfXepWofnbxh3cWYYhujbhDi2lWV0t/DjcZNGxoq/0Bdoll3mI0XrEss
3ppi+gc0U75lHZn2Dt7HrB+6oqYLjNJ3e43MfyPZ20INLQ9J+ktWpm3sNU+Y
aZts6fxd0n9y1+2ymPsaCoOtpkbv7QRRQcQs5Qp3CJzW9mhuwW/QLF7QN9np
FUxw2zV+sN5vMCrzKTsrdoM2m0vL7BI6wLVSLUit9gVYJmf9GyzugJQqF6fM
R89h+4J/7hZ9bAfRzyGmF3WegVWhru9INUk/Lh55aXetC2wvX9z/8cM2KK7s
pRWg8wSyTe+fu963DcQ/W4sHuj2E041DjAdbt4JrY8XNQ6L7oCWb+8LoVwuM
60hfErXzDugoT73xwKgFbEThP8f4O0Gua8+gb5J5Vizv/fiU4i3Y2728x4nl
zWAzYtG9l3n2kCi8MTf2awIb1WHN25xsoSqoaWS+ahOIZzXp9tGxgbPVz4bL
SfS36KLrHqtuC1g+vcdUqf6Sn+f6LIjN3Q+PtM+ZNlxqAJH3EOWdOlOgrurY
2872ehAZH8l6bLYXddcFWMKxerAZev79tzXm+OF0yrq8qjqw6YputCmwxsEj
chtq9taB6HiPUQoBl9F4goyUMv4C8b4podul7PGDvu+6qMBasDHYaPRqzU08
alm5vtX/Jwhu8y+06zjhaCdr1++BNWDksjbNpdYZ86Q21ERjNYge7Jqgffse
fsgLzQ+O+wE2TkfNa+Y+xGGjqkc0ZFfBOIcLUU75jzFv2Zg11398B8H29pD5
F1xwyrVP8p5S38Eb03x/KT7Du2bbv/0z+huYBe/MX7bvOeLQwza/FleCOLBc
9q7/C/S5HnVwzd4KGPDp8NSqXm6YNOeE9u0b5VD8oUVvkeErfPfgSVJ+cBm4
vj9vfdPLHd+/3ZI3p74UzN72dC8VvcYZLvPNvSaXgvj1v8mzt3ii9pSOwvUH
S0D0akTbVbc32LHbyHvUu2JIef5iXH7rWzyu8jsEaorA1UVDZ/oaLxzueM7L
92ohmD32O3bx8Xtc5u4y/s70Ari/buwXU0tvdN5ptqaoOA9ECXv3OI/zQctp
UslXJbr9gI5Hc0icD6ZYuLdfMs6FlJiaa9+Of8Aly4uqQ7VyQFN7xpiBo3zx
hW94zCiFbLgfafFhQZQvyu/c6ulUnwmi5Z+1TY58xKd9eit1FmWAUdifrzeG
+uFfZ8qWzMtJhxRYftRf8MMBP3xfTviaBpqhdjIlBz+hST/74nsVqXBrUeK9
3oP8cfiycyWHOlJAFDRAY1awPy5WhQnmwyS6ZL6esGtfACqqvoqXO58Egv+D
rXb9AjFs5bSIlMJE0JxT+N3bPxCLsibJVm5MgFsfla2+Gn1GBY0nU4pS46BO
6++Bsr2DcLZ8315bTGLByOeN21TfIGxbv1I6Sz4GhOl187cZBuNK35sWHQFR
oOk1K8lGLgSXtQYM23wmEm5pnDb29ApBk9ayrQfXRECdZ0hL+rZQzK4vepqq
Fg5G6tLXu0SIrzPyE4YqhYHgrj1W1RMxIlDfOK6fAANuR233UBdwSvKMpG+T
Q2F12rcJi60FzHa2WrdmczCcGti7NjVNwDFOS+qybn4Gj00aAftVw3DNInXZ
txUBUHxzw8XfZ8PwSKZmZdVmfxiQbLbuVkoYFg02PuWb7ger+90eoqISjsMv
mVybZvoRTq33Kw48HY5vt3rPujzYFzwcsj03JIXjeYebC0pSfaA4od28TDkC
PZ/02nTymTcM6DMKTllG4B3FsC91su9BvGZJL4XECDRd/ihv6fe3cOqaUfqz
cZHopblP0bDaEzxiLz6ZYxGJw4Markb1fQ05Pdz+ToiLxAsDok71W+sOA1bF
zDAaE4WTJijYpr50A/GVqt9Nx6OweObLJt9hL8Esqk/0tZgoTD71b9E+t+fg
ITvt1phR0Zi4KXDTc0kfzFm+aYevWTTOfK9vOF3WFQZcOj5xdVQ0jm6P3Bbs
/gTE4c61+cNj0OfEaNGQo4/ATMo/4NiRGKzUbdNdYPgAPMS5F+UjYpD925zz
v9c9Ghr7/36m30f+faqHXI/+P+T/j54H+XnoeZGflz4P8uehz4v8eel9IL8P
el/I74veJ/L7pPeN/L7p+0D+Puj7Qv6+6PtE/j7p+0b+vuk8IJ8HOi/I54XO
E/J5ovOGfN7oPCKfRzqvyOeVzjPyeabzjnze6T4g3we6L8j3he4T8n2i+4Z8
3+g+It9Huq/I95XuM/J9pvuOfN+pHyD3A+oXyP2C+glyP6F+g9xvqB8h9yPq
V8j9ivoZcj+jfofc76gfIvdD6pfI/ZL6KXI/pX6L3G+pHyP3Y+rXyP2a+jly
P6d+j9zvaR4gzwOaF8jzguYJ8jyheYM8b2geIc8jmlfI84rmGfI8o3mHPO9o
HiLPQ5qXyPOS5inyPKV5izxvaR4jz2Oa18jzmuY58jyneY8870kPIOsB0gvI
eoH0BLKeIL2BrDdIjyDrEdIryHqF9AyyniG9g6x3SA8h6yHSS8h6ifQUsp4i
vYWst0iPIesx0mvIeo30HLKeI72HrPdIDyLrQdKLyHqR9CSyniS9iaw3SY8i
61HSq/hfvfofPYusZ0nvIutd0sPIepj0MrJeJj2NrKdJbyPrbdLjyHqc9Dqy
Xic9j6znSe8j633aB/C/+8B/9gXkfYH2CeR9gvYNgfcN2kcE3kdoXxF4X6F9
RuB9hvYdgfcd2ocE3odoXxJ4X6J9SuB9ivYtgfct2scE3sdoXxN4X6N9TuB9
jvY9gfc92gcF3gdpXxR4X6R9UuB9kvZNgfdN2kcF3kdpXxV4X6V9VuB9lvZd
gfdd2ocF3odpXxZ4X6Z9WuB9mvZtgfdt2scF3sdpXxd4X6d9XuB9nvZ9gfd9
8gME9gPILxDYLyA/QWA/gfwGgf0G8iME9iPIrxDYryA/Q2A/g/wOgf0O8kME
9kPILxHYLyE/RWA/hfwWgf0W8mME9mPIrxH+69f8x88R2M8hv0dgv4f8IIH9
IPKLBPaLyE8S2E8iv0lgv4n8KIH9KPKrBParyM8S2M8iv0tgv4v8MIH9MPLL
BPbLyE8T2E8jv01gv438OGQ/jvw6ZL+O/DxkP4/8PmS/j/xAZD+Q/EJkv5D8
RGQ/kfxGZL+R/EhkP5L8SmS/kvxMZD+T/E5kv5P8UGQ/lPxSZL+U/FRkP5X8
VmS/lfxYZD+W/Fpkv5b8XGQ/l/xeZL+X/GBkP5j8YmS/mPxkZD+Z/GZkv5n8
aGQ/mvxqZL+a/GxkP5v8bmS/m/xwZD+c/HJkv5z8dGQ/nfx2ZL+d/HhkP578
emS/nvx8ZD+f/H5kv5/yAOQ8gPIC5LyA8gTkPIHyBuS8gfII5DyC8grkvILy
DOQ8g/IO5LyD8hDkPITyEuS8hPIU5DyF8hbkvIXyGOQ8hvIa5LyG8hzkPIfy
HuS8h/Ig5DyI8iLkvIjyJOQ8ifIm5LyJ8ijkPIryKuS8ivIs5DyL8i7kvIvy
MOQ8jPIy5LyM8jTkPI3yNuS8jfI45DyO8jrkvI7yPOQ8j/I+5LyP8kDkPJDy
QuS8kPJE5DyR8kbkvJHySOQ8kvJK5LyS8kzkPJPyTuS8k/JQ5DyU8lLkvJTy
VOQ8lfJW5LyV8ljkPJbyWuS8lvJc5DyX8l7kvJfyYOQ8mPJi5LyY8mTkPJny
ZuS8mfJo5Dya8mrkvJrybOQ8m/Ju5Lyb8nDkPJzycuS8nPJ05Dyd8nbkvJ3y
eOQ8nvJ65Lye8nzkPJ/yfuS8n3gAZB6AeAFkXoB4AmSegHgDZN6AeARkHoF4
BWRegXgGZJ6BeAdk3oF4CGQegngJZF6CeApknoJ4C2TegngMZB6DeA1kXoN4
DmSeg3gPZN6DeBBkHoR4EWRehHgSZJ6EeBNk3oR4FGQehXgVZF6FeBZknoV4
F2TehXgYZB6GeBlkXoZ4GmSehngbZN6GeBxkHod4HWReh3geZJ6HeB9k3od4
IGQeiHghZF6IeCJknoh4I2TeiHgkZB6JeCVkXol4JmSeiXgnZN6JeChkHop4
KWReingqZJ6KeCtk3op4LGQei3gtZF6LeC5knot4L2Tei3gwZB6MeDFkXox4
MmSejHgzZN6MeDRkHo14NWRejXg2ZJ6NeDdk3o14OGQejng5ZF6OeDpkno54
O2Tejng8ZB6PeD1kXo94PmSej3g/ZN6PeEBkHpB4QWRekHhCZJ6QeENk3pB4
RGQekXhFZF6ReEZknpF4R2TekXhIZB6SeElkXpJ4SmSeknhLZN6SeExkHpN4
TWRek3hOZJ6TeE9k3pN4UGQelHhRZF6UeFJknpR4U2TelHhUZB6VeFVkXpV4
VmSelXhXZN6VeFhkHpZ4WWRelnhaZJ6WeFtk3vb/8rj/A/B2rjg=
                "]], {{{
                0.17266671492442134`, 0.}, {0., -1.}}, {76.5, 0.}}]},
             
             ImageSizeCache->{{675.6754118496083, 693.5534802426488}, {
              23.18768523185466, 88.26048976756894}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.05913892778961554`"}]}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.12853772652629583`"}]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.1799847843266376`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.38211318804787825`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.46010137818160984`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], -0.05913892778961554}, {
               Style["75%", Bold], -0.12853772652629583`}, {
               Style["median", Bold], -0.1799847843266376}, {
               Style["25%", Bold], -0.38211318804787825`}, {
               Style["min", Bold], -0.46010137818160984`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[5, 6], 0.8333333333333334]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
gqCffe6Vxb+hxtXq1VqnzyNff/d6y1VvSfJWDY+PvTPz//+v+ftJvp9/HsnP
4/+P5P/j10Pyevj1krxefj8k74ffL8n75edB8jz4eZE8L36eJM+TnzfJ8+bP
g+Tz4M+L5PPiz5Pk8+TPm+Tz5vNAch74vJCcFz5PJOeJzxvJeePzSHIe+byS
nFc+zyTnmc87yXnn+0ByH/i+kNwXvk8k94nvG8l94/tIch/5vpLcV77PJPeZ
7zvJfed5QDIPeF6QzAueJyTzhOcNybzheUQyj3hekcwrnmck84znHcm843lI
Mg95XpLMS56nJPOU5y3JvOV5TDKPeV6TzGue5yTznOc9ybznfUCyD3hfkOwL
3ick+4T3Dcm+4X1Eso94X5HsK95nJPuM9x3JvuN9SLIPeV+S7EvepyT7lPct
yb7lfUyyj3lfk+xr3uck+5z3Pcm+Zz1AogdYL5DoBdYTJHqC9QaJ3mA9QqJH
WK+Q6BXWMyR6hvUOid5hPUSih1gvkegl1lMkeor1FoneYj1GosdYr5HoNdZz
JHqO9R6J3mM9SKIHWS+S6EXWkyR6kvUmid5kPUqiR1mvkuhV1rMkepb1Lone
ZT1MoodZL5PoZdbTJHqa9TaJ3mY9TqLHWa+T6HXW8yR6nvU+id5nP0DiB9gv
kPgF9hMkfoL9BonfYD9C4kfYr5D4FfYzJH6G/Q6J32E/ROKH2C+R+CX2UyR+
iv0Wid9iP0bix9ivkfg19nMkfo79HonfYz9I4gfZL5L4RfaTJH6S/SaJ32Q/
SuJH2a+S+FX2syR+lv0uid9lP0zih9kvk/hl9tMkfpr9NonfZj9O4sfZr5P4
dfbzJH6e/T6J3+c8gCQP4LyAJC/gPIEkT+C8gf43b/ifPIIkj+C8giSv4DyD
JM/gvIMk7+A8hCQP4byEJC/hPIUkT+G8hSRv4TyGJI/hvIYkr+E8hyTP4byH
JO/hPIgkD+K8iCQv4jyJJE/ivIkkb+I8iiSP4ryKJK/iPIskz+K8iyTv4jyM
JA/jvIwkL+M8jSRP47yNJG/jPI4kj+O8jiSv4zyPJM/jvI8k7+M8kCQP5LyQ
JC/kPJEkT+S8kSRv5DySJI/kvJIkr+Q8kyTP5LyTJO/kPJQkD+W8lCQv5TyV
JE/lvJUkb+U8liSP5byWJK/lPJckz+W8lyTv5TyYJA/mvJgkL+Y8mSRP5ryZ
JG/mPJokj+a8miSv5jybJM/mvJsk7+Y8nCQP57ycJC/nPJ0kT+e8nSRv5zye
JI/nvJ4kr+c8nyTP57yfJO/nPoCkD+C+gKQv4D6BpE/gvoGkb+A+gqSP4L6C
pK/gPoOkz+C+g6Tv4D6EpA/hvoSkL+E+haRP4b6FpG/hPoakj+G+hqSv4T6H
pM/hvoek7+E+iKQP4r6IpC/iPomkT+K+iaRv4j6KpI/ivoqkr+I+i6TP4r6L
pO/iPoykD+O+jKQv4z6NpE/jvo2kb+M+jqSP476OpK/jPo+kz+O+j6Tv4z6Q
pA/kvpCkL+Q+kaRP5L6RpG/kPpKkj+S+kqSv5D6TpM/kvpP+t+/8nz6UpA/l
vpSkL+U+laRP5b6VpG/lPpakj+W+lqSv5T6XpM/lvpek7+U+mKQP5r6YpC/m
PpmkT+a+maRv5j6apI/mvpqkr+Y+m6TP5r6bpO/mPpykD+e+nKQv5z6dpE/n
vp2kb+c+nqSP576epK/nPp+kz+e+n6TvZx6AhAdgXoCEF2CegIQnYN6AhDdg
HoGER2BegYRXYJ6BhGdg3oGEd2AegoSHYF6ChJdgnoKEp2DegoS3YB6DhMdg
XoOE12Ceg4TnYN6DhPdgHoSEB2FehIQXYZ6EhCdh3oSEN2EehYRHYV6FhFdh
noWEZ2HehYR3YR6GhIdhXoaEl2GehoSnYd6GhLdhHoeEx2Feh4TXYZ6HhOdh
3oeE92EeiIQHYl6IhBdinoiEJ2LeiIQ3Yh6JhEdiXomEV2KeiYRnYt6JhHdi
HoqEh2JeioSXYp6KhKdi3oqEt2Iei4THYl6LhNdinouE52Lei4T3Yh6MhAdj
XoyEF2OejIQnY96MhDdjHo2ER2NejYRXY56NhGdj3o2Ed2MejoSHY16OhJdj
no6Ep2PejoS3Yx6PhMdjXo+E12Oej4TnY96PhPdjHpCEB2RekIQXZJ6QhCdk
3pCEN2QekYRHZF6RhFdknpGEZ2TekYR3ZB6ShIdkXpKEl2SekoSnZN6ShLdk
HpOEx2Rek4TXZJ6ThOdk3pOE92QelIQHZV6UhBdlnpSEJ2XelIQ3ZR6VhEdl
XpWEV2WelYRn/X951/8DbNzgfg==
                "]], {{{0.22899642474249055`, 
                0.}, {0., -1.}}, {77.5, 0.}}]},
             
             ImageSizeCache->{{683.1803324229431, 701.6058084337292}, {
              21.598653751483184`, 120.78164451280651`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.16108969916052437`"}]}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.4315348621866269`"}]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.7140286009309817`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.8179923689405504`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.8358054945012212`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], -0.16108969916052437`}, {
               Style["75%", Bold], -0.4315348621866269}, {
               Style["median", Bold], -0.7140286009309817}, {
               Style["25%", Bold], -0.8179923689405504}, {
               Style["min", Bold], -0.8358054945012212}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.7058823529411765, 0.49411764705882355`, 0.5450980392156862], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1: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
Ye73fPgd79ejOdyaXfZe+el0Tj4Muhlm+vihNbvlMsY7+20+bPxhEvEtw5o9
6GdebhGTDyYqWrLNtdbsqVXp5plX8uHTD9OTbiY27JXqS93jR/PBx8pV18XB
hiWVHY6Qbs+HiutFrlNG2bAPaX7dTVb//f9/tYdNdrNh0hfDYqZ650PLruXR
/efYsJyrBs4HJ+dD91cHgisW2jDZQVnah+H58CQjYdcGPxtWsvHxIv0e+ZC9
50MS97VhlQtDqyZa5MPCDM35b+bbsJqJ87aHauTDgSXtju+ZacOaHPsbva3O
g7x17lkqE2yYmq1GpKY8D3THOL8cNsSG6Wpm9x7/OQ+OzVnzZ5CdDTOqvB23
42UedLA39m3VtGEWWf9Nir+dBz8Dy95fKbFm7YVHTuvpPPhk/lp3cJI163Kz
+7LRoXnwLu1JYUKkNet5tKluy795MPVYUL7vems2IPjz7ji/POh59+20/i7W
bJjfZbPG6XkwqrqpxzgzawZuGy8PG5MHFVqa6bGFVsx5yGTHjf3y4Lai1P7x
VSs2pWPH+Cft8yDieZPdDH8r5qHza2qNfh74epQ2vHSwYl5VbwodG3NhbaYi
0bLk7/rKPbMy8FsuhDmrLAm7aMmWJq76cy8zFwzndPAdOceSrbozNrzydS7U
tCx5NLeNJdtwwsKmz6NcCJTGnWwbb8GCt5XdWH4xF/q+HL70SKAF27H01dBb
h3Lh8w7D5ep2Fixs2tE337bmwrVRkqsRH8zZ4eFLZnZfkQt5kls3t280Zyc7
jShe7JULc0x9l323M2fn9dusuzIhF04m3NHQTTZjV2rkqsohuTAgRXJZd40Z
u13w5LB911z4WdgE7S3M2IM3YR0Xts2FY+unBK+La8ue3fO+G6maC4MW1a1z
WtiW8YgBowp+5MC6Y2GnL2u0ZW9CND+0K8yBZNeonTk3TNnHgBwvrw858Fij
7XtdN1OW5hFdGvE8B578qipcUGXCckeGBGXdyIFNCa5lmidNmLzrTG2LUzkg
d6+43sXJhH1r43Byxu4cSN2w2VUpM2aV9X+6HFuXA9tdNrkv3WvMamWpjyQ+
ORBzo3ZLel9j9if5yljjaTngvlrN//RdI6b+KEjiPjoHin3+SyxSNWK656Ys
PNA7B+KTrSVPPdsw4912P1JscuBy72Nd59w3ZJararbq6eZAxOKH6vX6hqyD
5zuDifXZULkr2lkEGLAu7NzZvV+yoZ9Ue3LRB33Wy2FNzzdp2VByQfF9k6M+
czQdH6uRkA1D+LPAB2f12PAmywnj7meDe9CGE5d09BgUf88MicyGUyGSHYs3
6TKXj3yx2J8Ngx/nyAwrdZhbzLGals3ZMH/41qJbS/7mlailO0f5Z8OLtMaJ
rkpt5hXqZLrFMxs6jWw9X+qrzXwCjS4+d86GM53GdD/+TYst81L2+z3w7++b
uaijc6AWWz3u6auhnbLhYW62pK5Zk23oHe72r3E2jNkcmRh1UJNtMV+Q/7gl
Cz6N8yl07KzJdrY4Lv9VngXlXcojo+I02L4SrcYBeVnQYX+wi9RTgx1OzQ1d
k5wFW4PvtXlcr85Oxd61vPc0C6LHv1/Q66w6i7y041rF1SyICCrVsR2rzq6G
zxrc+3gWmMz/smlpuRq7s77n64AdWRC8Z0dL+Wk19tC7ZfrNNVnwMP1CY9gk
NRbrIpWXzM+CpyFtu9u0qDLR79qabm5ZYDDn06eNj1XZW6vNrX5OWfAz3Nxg
y0pV9lHV/eBlhyxoNVmg2dpDlaWX2bdXWP59PSdOOmR/VWF5abW37bSywMZ7
4/LCaypM8SJ5xIKaTNA42Hb/12Uq7NvV88nnFZmwz9dL8b63CvtxMHB2fmom
mG9zaI0vboW6jc4lNjwTBq042aN1bSs0L7T+d050JgSF6Rb8UW8F9UkVGhFn
M6Fl8oxxK061gN7A+GOZYZngvvjfZSp9WsDE9kQn86BMSLux5sSq181gpen/
wGNJJrgMHRC1yrsZOlSOZEdnZELI3hn94+r/QNcs48+pYzNhxukQA9Njf6C3
KPY2GpAJK9c7ug3q9wcG3nxW7tYxE1a0vD71NaUJhh/dH7zfMBOmWMZNqVrW
BCx4oV5KUwak83b37bSawNVv0Gndsgxws1T5OeZyI7i76fSYkJ0Bkgmpy/uy
RpgxJD9mz5sMeO+8TLzK/w1zO953TnqcASsexmV/DPoNi3R2patfzgDHF7F5
I81+g3+Vp+/YIxnQRxY8tOpuA6zJ7VW9/b8MSNVadjZ9QgP8m9i6na/MgM4l
S8rT5fWw9U6aUcvcDJiYum5g8aZ62HXieuTISRlQf0Gyp8G4HsK3BfcJHpYB
8x4MqdS/XgdHlk59EdstAxZyl7G2I+sgYlrnyQ1mGVC9PUa7V2otRA2vzxmi
ngFec4JcRvnWwrVOKcs2VKXDs+QZ3nNra+COflT9o6J0cDzmIT28pwYe1azd
U/0xHXrYzbMrt6iB5wUu5gNepEPqvfU7tl37BfFvbK6svpUO68u0X84d/Ave
3qt0vBuRDq9bT305nVgNnyIS4sv3pEOKk7PDP/9UQ0bIyWm9NqRDRbf9R88W
VkF+QECRv286XPp47tPx5VWg8Bi96sY/6fAi8Wb1nIafUDrStPkrpEO4PGyM
7u6f8LPr1/CufdOB3VCvjjf5CfVtntv42aZDaYBDueuoH9Bcf+DmJb10qN+t
uTfKsxI05D7D5A1pEJf1x+nD2grQfz/4bceSNPj0atAbo0PlYPpId9b8jDSo
e3L9/u0738HqXEHxucQ0iAx9UydLKYOOux+sy3uQBuH99G/9KC+Fbqt2q9lc
SINrrtJzFsal0MdzzpHZB/9+/75E02ODv8FA1sfu1JY0COmpufGCdwmMcFC9
lxGQBkn7/K2CQr/CGNOMUWZz0iDq/PPv02K+wISmGx+mu6bB6zEjZiwoKYap
xVvmHhmcBurrfavT2xXDzI/Tyj53TgNV/YogmYcS5sV02dTGNA2KbDVCow8p
wDeqQdtNJQ1+d7110O+zHAJCP5wMr5TC6kjrhz3bymFN4IWu7/OlsLFcL85+
rgw2eq1/rJMihYs9PE1S3Ytg27gJ41xjpRC/tIvpgJ8FsLu3rXT3dSkEH/y6
8sSZfAg3/7nw9QkpmCbdHNbVPQ+OtiT+UNslhRnGtY9U9XPhdMmpbWPWSuHw
7+AlzpJsuJC63HD7QikMbDYYqXExC67FwrlX7lIYYmQTPXlzJkRfatureaQU
fu8aVNHJOwMeh5fEOvWSwvOOaR3DJ6ZD3Pq4CZutpRAS//Tof5AG8d6Hsp5p
S2HsiknNtaOl8M7Fd0l9rQTG7WSvC10l8Lnf0NrBxRJoiS9lXb1SIdNKf9d6
qQS0JK0WC79/gnzVItNHQgILJj85lDDoIyjLHl6suiuBsmHHQvscToGytD39
+5+XQKfWrN79m5Oh6oUXXxUugcGTa0PfBb+D+qt93aM3SWDvw1n/Buq/hZaD
agXfl0qA8T+2H24ngWZQ5vKesyQQ1pIS5zfvNRj43GpcNv7v/y+4KC2wTQTT
SdvCrjtKIMVrdtm38niwHjjd6qudBOaq/SxrShFgZ9vtehcjCcSNmTZ9wjoO
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
0/6/vu3/AetS0OU=
                "]], {{{0.06314944900364035, 0.}, {
                0., -1.}}, {78.5, 0.}}]},
             
             ImageSizeCache->{{683.1551328232383, 717.1882567978491}, {
              41.6379650806996, 91.66030112823401}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.3447844289794216`"}]}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.4275534649119483`"}]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.45014254161583594`"}]}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.5219256748690688`"}]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                RowBox[{"-", "0.5383549661072186`"}]}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], -0.3447844289794216}, {
               Style["75%", Bold], -0.4275534649119483}, {
               Style["median", Bold], -0.45014254161583594`}, {
               Style["25%", Bold], -0.5219256748690688}, {
               Style["min", Bold], -0.5383549661072186}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], 
           "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {{{{{{{{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, \
{}}, {}, {}, {}, {{{}, {}}, {}}, {}}, {}}, {}}, {}}, {{{{{{{}, {}}, {}}, \
{{{}, {}}, {}}, {}, {}, {}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, \
{}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {{{{{}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {{{{{}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}}, {}}, {}},
  AspectRatio->0.4,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.5833333333333334, -0.8358054945012212},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    BoxData[
     FormBox[
      StyleBox["\"WT/R164A normalized\"", 16, StripOnInput -> False], 
      TraditionalForm]], 
    Scaled[{0.85, 0.92}]],
  Frame->True,
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"Italic\\\
\"], \\\"cat\\\"]\\))\"", TraditionalForm], None}, {None, None}},
  FrameStyle->Directive[16, 
    GrayLevel[0], FontFamily -> "Arial"],
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      2.9999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      3.999999999999999, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {15., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      15.999999999999998`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.5833333333333334, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      16.416666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      8.499999999999998, 
       FormBox["\"WT\"", TraditionalForm], {0, 0}}, {21.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      22.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      23.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      24.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      25.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      26.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      27.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      28.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      29.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      30.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      31.833333333333332`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      32.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      33.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      34.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      35.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      36.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      21.416666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {37.25, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      29.333333333333332`, 
       FormBox["\"R164A\"", TraditionalForm], {0, 0}}, {42.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      43.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      44.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      45.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      46.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      47.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      48.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      49.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      50.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      51.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      52.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      53.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      54.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      55.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      56.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      57.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {42.25, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      58.083333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      50.16666666666667, 
       FormBox["\"T79S\"", TraditionalForm], {0, 0}}, {63.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {64.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {65.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {66.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {67.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {68.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {69.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {70.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {71.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {72.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {73.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {74.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {75.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {76.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {77.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {78.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      63.083333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      78.91666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {71., 
       FormBox["\"N100A\"", TraditionalForm], {0, 0}}, {0.5833333333333334, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      78.91666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      2.9999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      3.999999999999999, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {15., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      15.999999999999998`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.5833333333333334, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      16.416666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      21.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      22.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      23.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      24.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      25.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      26.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      27.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      28.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      29.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      30.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      31.833333333333332`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      32.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      33.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      34.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      35.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      36.83333333333333, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      21.416666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {37.25, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      42.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      43.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      44.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      45.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      46.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      47.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      48.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      49.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      50.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      51.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      52.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      53.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      54.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      55.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      56.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      57.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {42.25, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      58.083333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {63.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {64.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {65.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {66.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {67.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {68.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {69.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {70.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {71.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {72.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {73.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {74.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {75.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {76.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {77.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {78.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      63.083333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      78.91666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      0.5833333333333334, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      78.91666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLines->{
   None, {2.571941635074462, 
    0.7242758696007889, -0.019996628416253673`, -0.090176630349088}},
  GridLinesStyle->Directive[
    RGBColor[
     Rational[2, 3], 0, 0], 
    Opacity[0.2]],
  ImageSize->750,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     2.9999999999999996`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     3.999999999999999, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {11., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {12., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {13., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {14., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {15., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     15.999999999999998`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.5833333333333334, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     16.416666666666664`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     8.499999999999998, 
      FormBox["\"WT\"", TraditionalForm], {0, 0}}, {21.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     22.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     23.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     24.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     25.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     26.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     27.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     28.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     29.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     30.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     31.833333333333332`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     32.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     33.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     34.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     35.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     36.83333333333333, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     21.416666666666664`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {37.25, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     29.333333333333332`, 
      FormBox["\"R164A\"", TraditionalForm], {0, 0}}, {42.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     43.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     44.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     45.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     46.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     47.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     48.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     49.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     50.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     51.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     52.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     53.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     54.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     55.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     56.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     57.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {42.25, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     58.083333333333336`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     50.16666666666667, 
      FormBox["\"T79S\"", TraditionalForm], {0, 0}}, {63.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {64.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {65.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {66.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {67.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {68.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {69.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {70.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {71.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {72.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {73.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {74.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {75.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {76.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {77.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {78.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     63.083333333333336`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     78.91666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {71., 
      FormBox["\"N100A\"", TraditionalForm], {0, 0}}, {0.5833333333333334, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     78.91666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{
  3.7995277403996572`*^9, 3.799527877388109*^9, 3.7995279320705233`*^9, 
   3.799527968438005*^9, 3.802298496547171*^9, 3.802385500436633*^9, 
   3.8071300197623663`*^9, 3.808938082734283*^9, 3.8104920242605257`*^9, 
   3.810492250210318*^9, 3.810492289420445*^9, 3.810497948543743*^9, 
   3.810497986315504*^9, 3.8105016275981007`*^9, {3.810501699794278*^9, 
   3.8105017172593603`*^9}, 3.812391821105044*^9, 3.812392042734549*^9, {
   3.812556099772128*^9, 3.812556103421811*^9}, {3.812662906813723*^9, 
   3.812662913039282*^9}},
 CellLabel->
  "Out[155]=",ExpressionUUID->"be7466d3-debe-4ca7-8005-71e3a5da2bec"],

Cell[BoxData[
 StyleBox["\<\"Final normalization factors:\"\>",
  StripOnInput->False,
  FontWeight->Bold]], "Print",
 CellChangeTimes->{
  3.7995277403779373`*^9, 3.7995278774422703`*^9, 3.7995279320744*^9, 
   3.7995279684486628`*^9, 3.8022984965499287`*^9, 3.802385500439384*^9, 
   3.8071300197663097`*^9, 3.8089380827448797`*^9, 3.810492024264721*^9, 
   3.810492250220751*^9, 3.810492289428989*^9, 3.810497948548627*^9, 
   3.8104979863175163`*^9, 3.810501627600573*^9, {3.8105016997965937`*^9, 
   3.810501717261001*^9}, 3.812391821111154*^9, 3.812392042740594*^9, {
   3.812556099774572*^9, 3.8125561034244947`*^9}, {3.812662906835388*^9, 
   3.812662913133757*^9}},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"e69a6a49-25b9-4261-8050-ba55661750c0"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"190407_S3_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    "0.9235351485467043`"}], ",", 
   RowBox[{"\<\"181119_S2_d2_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    "1.6533344342192962`"}], ",", 
   RowBox[{"\<\"180614_S3_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    "0.7378600621476811`"}], ",", 
   RowBox[{"\<\"180614_S2_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    "1.782277377368745`"}], ",", 
   RowBox[{"\<\"180225_S2_d2_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    "0.777148057765942`"}], ",", 
   RowBox[{"\<\"180302_S2_d3_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    "0.8703767674685695`"}], ",", 
   RowBox[{"\<\"180402_S4_d3_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    "1.4154169617293375`"}], ",", 
   RowBox[{"\<\"180522_S3_d2_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    "1.3307458473331166`"}], ",", 
   RowBox[{"\<\"190205_S3_d1_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    "1.4646322337659081`"}], ",", 
   RowBox[{"\<\"180528_S3_d1_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    "2.037012591900974`"}], ",", 
   RowBox[{"\<\"180531_S2_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    "0.6070431262580952`"}], ",", 
   RowBox[{"\<\"190506_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", 
    "0.5166558523923667`"}], ",", 
   RowBox[{"\<\"190626_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", 
    "0.49711731333224896`"}], ",", 
   RowBox[{"\<\"190630_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", 
    "0.7700287103641613`"}], ",", 
   RowBox[{"\<\"190609_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", 
    "1.6343797841842298`"}], ",", 
   RowBox[{"\<\"191128_S2_d3_cMUP_1_SlowestChip.csv\"\>", "\[Rule]", 
    "1.379761951149461`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7995277403996572`*^9, 3.799527877388109*^9, 3.7995279320705233`*^9, 
   3.799527968438005*^9, 3.802298496547171*^9, 3.802385500436633*^9, 
   3.8071300197623663`*^9, 3.808938082734283*^9, 3.8104920242605257`*^9, 
   3.810492250210318*^9, 3.810492289420445*^9, 3.810497948543743*^9, 
   3.810497986315504*^9, 3.8105016275981007`*^9, {3.810501699794278*^9, 
   3.8105017172593603`*^9}, 3.812391821105044*^9, 3.812392042734549*^9, {
   3.812556099772128*^9, 3.812556103421811*^9}, {3.812662906813723*^9, 
   3.812662913134948*^9}},
 CellLabel->
  "Out[157]=",ExpressionUUID->"cae05a91-0268-4067-adea-6ecc512264e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "normalizationData", "]"}]], "Input",
 CellChangeTimes->{{3.81050193692599*^9, 3.810501938500998*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"2a3b2cc6-7b27-47c4-912b-c96bd7741d86"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{3.810501938766912*^9, 3.812392046756571*^9, 
  3.8125561162569532`*^9, 3.812662915744322*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"1fb70812-391a-4482-bb81-92d62e232196"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Aggregating WT data across experiments, applying normalization factors:\
\>", "Subsubsection",
 CellChangeTimes->{{3.7432657657977343`*^9, 3.7432657737257137`*^9}, {
  3.752261734813532*^9, 3.752261784148533*^9}, {3.792700461152413*^9, 
  3.79270046209615*^9}},ExpressionUUID->"5094b616-35cf-4c74-b305-\
46d6cb89a1a7"],

Cell["\<\
Apply the calculated WT normalization factors to each dataset (on kcat) and \
plot histograms of the WT kcat values before and after this correction, to \
assess improvement:\
\>", "Text",
 CellChangeTimes->{{3.773585362189486*^9, 3.773585414184277*^9}, {
  3.7735855816504393`*^9, 
  3.7735855821165457`*^9}},ExpressionUUID->"20269f84-03b6-417a-9af5-\
0720ef100c8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allWTkcatValues", "=", 
    RowBox[{"Normal", "[", 
     RowBox[{
      RowBox[{"groupedbyMutant", "[", "\"\<WT\>\"", "]"}], "[", 
      RowBox[{"All", ",", "kcatKey"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allWTKmValues", "=", 
    RowBox[{"Normal", "[", 
     RowBox[{
      RowBox[{"groupedbyMutant", "[", "\"\<WT\>\"", "]"}], "[", 
      RowBox[{"All", ",", "KmKey"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtMedian", "=", 
   RowBox[{"Median", "[", "allWTkcatValues", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KmMedian", "=", 
   RowBox[{"Median", "[", "allWTKmValues", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "calculate", " ", "95", "%", " ", "confidence", " ", "bounds", " ", "on", 
    " ", "both", " ", "WT", " ", "parameters"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<95% confidence bounds on fitted WT kcat and KM parameters:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"wtkcatCIs", "=", 
  RowBox[{"Quantile", "[", 
   RowBox[{"allWTkcatValues", ",", 
    RowBox[{"{", 
     RowBox[{"0.025", ",", "0.975"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtKmCIs", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"allWTKmValues", ",", 
     RowBox[{"{", 
      RowBox[{"0.025", ",", "0.975"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "distribution", " ", "of", " ", "WT", " ", "Ki", " ", 
    "values"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Aggregated WT kcat values, before correction:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"histPreCorrection", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{"allWTkcatValues", ",", 
     RowBox[{"{", "10.0", "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", 
      RowBox[{"ColorData", "[", 
       RowBox[{"16", ",", "6"}], "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<WT \!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"], \
\"cat\"]\) (/s)\>\"", ",", "\"\<Counts\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normalizedWTkcatvalues", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"groupedbyMutant", "[", "\"\<WT\>\"", "]"}], "[", 
         RowBox[{"n", ",", "kcatKey"}], "]"}], "]"}], "/", 
       RowBox[{"normalizationData", "[", 
        RowBox[{"Normal", "[", 
         RowBox[{"groupedbyMutant", "[", 
          RowBox[{"\"\<WT\>\"", ",", "n", ",", "\"\<UniqueExptID\>\""}], 
          "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "allWTkcatValues", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtNormalizedkcatCIs", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"normalizedWTkcatvalues", ",", 
     RowBox[{"{", 
      RowBox[{"0.025", ",", "0.975"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Aggregated WT kcat values, after correction:\>\"",
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"histPostCorrection", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{"normalizedWTkcatvalues", ",", 
     RowBox[{"{", "10.0", "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", 
      RowBox[{"ColorData", "[", 
       RowBox[{"16", ",", "5"}], "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<WT \!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"], \
\"cat\"]\) (/s)\>\"", ",", "\"\<Counts\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Aggregated WT kcat values, before and after correction overlaid:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"histPreCorrection", ",", "histPostCorrection"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exptsWT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"groupedbyMutant", "[", 
       RowBox[{"\"\<WT\>\"", ",", "n", ",", "\"\<UniqueExptID\>\""}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"groupedbyMutant", "[", "\"\<WT\>\"", "]"}], "]"}]}], "}"}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normalizationFactorsWT", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"normalizationData", "[", "#", "]"}], "&"}], "/@", 
     "exptsWT"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"enzymeConcsWT", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{"groupedbyMutant", "[", 
         RowBox[{"\"\<WT\>\"", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], 
         "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"groupedbyMutant", "[", "\"\<WT\>\"", "]"}], "]"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kobsExptIndex", "=", "1"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "kobs", " ", "determined", " ", "by", " ", "scaling", " ", "linear", " ", 
    "fit", " ", "at", " ", 
    RowBox[{"lowest", " ", "[", "S", "]"}], " ", 
    RowBox[{"by", " ", "[", "S", "]"}], " ", 
    RowBox[{"and", " ", "[", "E", "]"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kobsWT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{
        RowBox[{"groupedbyMutant", "[", 
         RowBox[{"\"\<WT\>\"", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
         "]"}], "[", 
        RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"normalizationFactorsWT", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{
            "\"\<WT\>\"", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], "]"}],
            "[", 
           RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], ")"}], "*", 
        RowBox[{"enzymeConcsWT", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"groupedbyMutant", "[", "\"\<WT\>\"", "]"}], "]"}]}], "}"}]}],
     "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtDataNormAll", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"normalizedWTkcatvalues", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"allWTKmValues", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"normalizedWTkcatvalues", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"allWTKmValues", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "6"}]}]}], ")"}]}], ",", 
       RowBox[{"kobsWT", "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "allWTkcatValues", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.742652362839676*^9, 3.742652380661831*^9}, {
   3.742662923126995*^9, 3.742662949849794*^9}, 3.742663025530064*^9, {
   3.743106739043399*^9, 3.743106739400647*^9}, {3.743181602222378*^9, 
   3.7431816032162733`*^9}, {3.743181701393721*^9, 3.7431817449048853`*^9}, {
   3.7432592501453867`*^9, 3.743259262505809*^9}, {3.743281608553597*^9, 
   3.743281677030294*^9}, {3.743281715323691*^9, 3.743281740427846*^9}, {
   3.743281790038743*^9, 3.7432817980751553`*^9}, {3.7433930422742567`*^9, 
   3.743393148459118*^9}, {3.743393183690099*^9, 3.743393202874153*^9}, {
   3.7468444206250143`*^9, 3.7468444655986547`*^9}, {3.7468450346065483`*^9, 
   3.746845049061058*^9}, {3.747066826297124*^9, 3.747066826667961*^9}, {
   3.74707220021774*^9, 3.747072255396533*^9}, {3.751039541523519*^9, 
   3.751039542329698*^9}, {3.7599755559883738`*^9, 3.759975558292756*^9}, {
   3.773429234616478*^9, 3.77342923677919*^9}, {3.77358541853152*^9, 
   3.7735855613008547`*^9}, {3.773585591639422*^9, 3.773585613226948*^9}, {
   3.773585646317428*^9, 3.773585774329821*^9}, {3.7742045987038603`*^9, 
   3.7742046013668833`*^9}, {3.774204664567692*^9, 3.7742047860572357`*^9}, {
   3.774204845165806*^9, 3.774204920375288*^9}, {3.774204971608788*^9, 
   3.7742049718090353`*^9}, {3.774205101842469*^9, 3.774205171643632*^9}, {
   3.774205300955345*^9, 3.774205363558544*^9}, {3.774205426548074*^9, 
   3.774205438518694*^9}, {3.774206047575396*^9, 3.774206050659711*^9}, {
   3.774206318008513*^9, 3.774206334469187*^9}, {3.774206376578258*^9, 
   3.7742063767217083`*^9}, {3.774206410131431*^9, 3.774206410293715*^9}, {
   3.774206577976108*^9, 3.774206623778853*^9}, {3.774206658728702*^9, 
   3.7742066797934647`*^9}, {3.774206735535329*^9, 3.774206748785411*^9}, {
   3.774206785615361*^9, 3.7742067995274363`*^9}, {3.7746286969117203`*^9, 
   3.774628816195325*^9}, {3.7747998132969017`*^9, 3.7747998143265553`*^9}, {
   3.775069941070692*^9, 3.775069941873201*^9}, {3.777997985843741*^9, 
   3.777998033885041*^9}, 3.777998122905759*^9, {3.777998182279489*^9, 
   3.777998182608243*^9}, {3.779459958808988*^9, 3.779460064614203*^9}, {
   3.779460159660983*^9, 3.779460163580591*^9}, 3.779829211055059*^9, {
   3.788025044070764*^9, 3.788025067942425*^9}, {3.788025787438581*^9, 
   3.788025826672001*^9}, {3.788026097296002*^9, 3.788026121543302*^9}, {
   3.788026208708357*^9, 3.788026209470842*^9}, {3.792177634959347*^9, 
   3.79217763719993*^9}, 3.7926256505876827`*^9, {3.79262573546389*^9, 
   3.7926257581145887`*^9}, {3.81265092822756*^9, 3.8126509358137417`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"45826b42-1679-4f65-8a12-9479d91334d8"],

Cell[BoxData["137.58626771518686`"], "Output",
 CellChangeTimes->{3.799528037848549*^9, 3.8022985331000013`*^9, 
  3.802385536304229*^9, 3.807130023766135*^9, 3.8089380845411663`*^9, 
  3.812392050813671*^9, 3.812556118754035*^9, 3.812662917074995*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"238b144c-2c63-4a46-a04b-956d8b2e5af4"],

Cell[BoxData["85.32610727291508`"], "Output",
 CellChangeTimes->{3.799528037848549*^9, 3.8022985331000013`*^9, 
  3.802385536304229*^9, 3.807130023766135*^9, 3.8089380845411663`*^9, 
  3.812392050813671*^9, 3.812556118754035*^9, 3.812662917076168*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"90de6926-46af-43a7-8638-82321c27f2c9"],

Cell[BoxData["\<\"95% confidence bounds on fitted WT kcat and KM \
parameters:\"\>"], "Print",
 CellChangeTimes->{3.799528037853348*^9, 3.802298533104801*^9, 
  3.802385536308481*^9, 3.80713002377145*^9, 3.808938084544807*^9, 
  3.812392050822905*^9, 3.812556118757256*^9, 3.81266291707717*^9},
 CellLabel->
  "During evaluation of \
In[159]:=",ExpressionUUID->"44173cc3-6c88-459a-be44-de0b37d8fd4f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"48.41008212059103`", ",", "324.16609616037493`"}], "}"}]], "Output",\

 CellChangeTimes->{3.799528037848549*^9, 3.8022985331000013`*^9, 
  3.802385536304229*^9, 3.807130023766135*^9, 3.8089380845411663`*^9, 
  3.812392050813671*^9, 3.812556118754035*^9, 3.812662917078257*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"6648b59c-0872-4afe-9c9e-bc36873b59ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"40.85747591253645`", ",", "144.01512811705035`"}], "}"}]], "Output",\

 CellChangeTimes->{3.799528037848549*^9, 3.8022985331000013`*^9, 
  3.802385536304229*^9, 3.807130023766135*^9, 3.8089380845411663`*^9, 
  3.812392050813671*^9, 3.812556118754035*^9, 3.812662917078981*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"f4425d1c-1be3-44ee-96ff-22e51065a0bc"],

Cell[BoxData["\<\"Aggregated WT kcat values, before correction:\"\>"], "Print",
 CellChangeTimes->{3.799528037853348*^9, 3.802298533104801*^9, 
  3.802385536308481*^9, 3.80713002377145*^9, 3.808938084544807*^9, 
  3.812392050822905*^9, 3.812556118757256*^9, 3.8126629170799713`*^9},
 CellLabel->
  "During evaluation of \
In[159]:=",ExpressionUUID->"522f4b82-d3aa-4464-a54f-01eaf38e7863"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
    EdgeForm[{Opacity[0.427], Thickness[Small]}], {}, 
    {RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
     EdgeForm[{Opacity[0.427], Thickness[Small]}], 
     RectangleBox[{10., 0}, {20., 1.},
      RoundingRadius->0], RectangleBox[{20., 0}, {30., 1.},
      RoundingRadius->0], RectangleBox[{40., 0}, {50., 6.},
      RoundingRadius->0], RectangleBox[{50., 0}, {60., 12.},
      RoundingRadius->0], RectangleBox[{60., 0}, {70., 8.},
      RoundingRadius->0], RectangleBox[{70., 0}, {80., 12.},
      RoundingRadius->0], RectangleBox[{80., 0}, {90., 10.},
      RoundingRadius->0], RectangleBox[{90., 0}, {100., 9.},
      RoundingRadius->0], RectangleBox[{100., 0}, {110., 4.},
      RoundingRadius->0], RectangleBox[{110., 0}, {120., 6.},
      RoundingRadius->0], RectangleBox[{120., 0}, {130., 9.},
      RoundingRadius->0], RectangleBox[{130., 0}, {140., 8.},
      RoundingRadius->0], RectangleBox[{140., 0}, {150., 6.},
      RoundingRadius->0], RectangleBox[{150., 0}, {160., 5.},
      RoundingRadius->0], RectangleBox[{160., 0}, {170., 8.},
      RoundingRadius->0], RectangleBox[{170., 0}, {180., 9.},
      RoundingRadius->0], RectangleBox[{180., 0}, {190., 5.},
      RoundingRadius->0], RectangleBox[{190., 0}, {200., 6.},
      RoundingRadius->0], RectangleBox[{200., 0}, {210., 7.},
      RoundingRadius->0], RectangleBox[{210., 0}, {220., 4.},
      RoundingRadius->0], RectangleBox[{220., 0}, {230., 7.},
      RoundingRadius->0], RectangleBox[{230., 0}, {240., 3.},
      RoundingRadius->0], RectangleBox[{240., 0}, {250., 3.},
      RoundingRadius->0], RectangleBox[{250., 0}, {260., 3.},
      RoundingRadius->0], RectangleBox[{260., 0}, {270., 3.},
      RoundingRadius->0], RectangleBox[{270., 0}, {280., 3.},
      RoundingRadius->0], RectangleBox[{280., 0}, {290., 2.},
      RoundingRadius->0], RectangleBox[{290., 0}, {300., 1.},
      RoundingRadius->0], RectangleBox[{300., 0}, {310., 2.},
      RoundingRadius->0], RectangleBox[{320., 0}, {330., 1.},
      RoundingRadius->0], RectangleBox[{350., 0}, {360., 2.},
      RoundingRadius->0], RectangleBox[{360., 0}, {370., 1.},
      RoundingRadius->0], RectangleBox[{390., 0}, {400., 1.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{2.2, 0},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Counts\"", TraditionalForm], None}, {
     FormBox[
     "\"WT \\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"Italic\\\"]\
, \\\"cat\\\"]\\) (/s)\"", TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 18],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->450,
  PlotRange->{{10., 400.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.799528037848549*^9, 3.8022985331000013`*^9, 
  3.802385536304229*^9, 3.807130023766135*^9, 3.8089380845411663`*^9, 
  3.812392050813671*^9, 3.812556118754035*^9, 3.81266291712119*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"f7152f48-141b-48f9-932c-7e9c2a0b522a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"37.49266075404308`", ",", "285.54746152349605`"}], "}"}]], "Output",\

 CellChangeTimes->{3.799528037848549*^9, 3.8022985331000013`*^9, 
  3.802385536304229*^9, 3.807130023766135*^9, 3.8089380845411663`*^9, 
  3.812392050813671*^9, 3.812556118754035*^9, 3.8126629173049173`*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"6730df44-16f1-481e-9f2d-8e47d19f7a03"],

Cell[BoxData["\<\"Aggregated WT kcat values, after correction:\"\>"], "Print",
 CellChangeTimes->{3.799528037853348*^9, 3.802298533104801*^9, 
  3.802385536308481*^9, 3.80713002377145*^9, 3.808938084544807*^9, 
  3.812392050822905*^9, 3.812556118757256*^9, 3.8126629173059072`*^9},
 CellLabel->
  "During evaluation of \
In[159]:=",ExpressionUUID->"b410b4d2-f18c-45ba-8a46-aac13e653648"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.8549019607843137, 0.9607843137254902, 1.], EdgeForm[{Opacity[
    0.44799999999999995`], Thickness[Small]}], {}, 
    {RGBColor[0.8549019607843137, 0.9607843137254902, 1.], EdgeForm[{Opacity[
     0.44799999999999995`], Thickness[Small]}], 
     RectangleBox[{10., 0}, {20., 1.},
      RoundingRadius->0], RectangleBox[{30., 0}, {40., 5.},
      RoundingRadius->0], RectangleBox[{40., 0}, {50., 8.},
      RoundingRadius->0], RectangleBox[{50., 0}, {60., 5.},
      RoundingRadius->0], RectangleBox[{60., 0}, {70., 9.},
      RoundingRadius->0], RectangleBox[{70., 0}, {80., 6.},
      RoundingRadius->0], RectangleBox[{80., 0}, {90., 7.},
      RoundingRadius->0], RectangleBox[{90., 0}, {100., 17.},
      RoundingRadius->0], RectangleBox[{100., 0}, {110., 9.},
      RoundingRadius->0], RectangleBox[{110., 0}, {120., 14.},
      RoundingRadius->0], RectangleBox[{120., 0}, {130., 18.},
      RoundingRadius->0], RectangleBox[{130., 0}, {140., 16.},
      RoundingRadius->0], RectangleBox[{140., 0}, {150., 9.},
      RoundingRadius->0], RectangleBox[{150., 0}, {160., 8.},
      RoundingRadius->0], RectangleBox[{160., 0}, {170., 5.},
      RoundingRadius->0], RectangleBox[{170., 0}, {180., 7.},
      RoundingRadius->0], RectangleBox[{180., 0}, {190., 6.},
      RoundingRadius->0], RectangleBox[{190., 0}, {200., 5.},
      RoundingRadius->0], RectangleBox[{200., 0}, {210., 3.},
      RoundingRadius->0], RectangleBox[{210., 0}, {220., 2.},
      RoundingRadius->0], RectangleBox[{220., 0}, {230., 2.},
      RoundingRadius->0], RectangleBox[{250., 0}, {260., 1.},
      RoundingRadius->0], RectangleBox[{280., 0}, {290., 1.},
      RoundingRadius->0], RectangleBox[{320., 0}, {330., 2.},
      RoundingRadius->0], RectangleBox[{350., 0}, {360., 1.},
      RoundingRadius->0], RectangleBox[{360., 0}, {370., 1.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{2.8, 0},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Counts\"", TraditionalForm], None}, {
     FormBox[
     "\"WT \\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"Italic\\\"]\
, \\\"cat\\\"]\\) (/s)\"", TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 18],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->450,
  PlotRange->{{10., 370.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.799528037848549*^9, 3.8022985331000013`*^9, 
  3.802385536304229*^9, 3.807130023766135*^9, 3.8089380845411663`*^9, 
  3.812392050813671*^9, 3.812556118754035*^9, 3.812662917345755*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"f67ae8d3-e18b-4040-bd70-5e1c9fb0b398"],

Cell[BoxData["\<\"Aggregated WT kcat values, before and after correction \
overlaid:\"\>"], "Print",
 CellChangeTimes->{3.799528037853348*^9, 3.802298533104801*^9, 
  3.802385536308481*^9, 3.80713002377145*^9, 3.808938084544807*^9, 
  3.812392050822905*^9, 3.812556118757256*^9, 3.812662917350037*^9},
 CellLabel->
  "During evaluation of \
In[159]:=",ExpressionUUID->"bb9f30a6-cf93-4ae1-b324-58003473aed5"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
     EdgeForm[{Opacity[0.427], Thickness[Small]}], {}, 
     {RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
      EdgeForm[{Opacity[0.427], Thickness[Small]}], 
      RectangleBox[{10., 0}, {20., 1.},
       RoundingRadius->0], RectangleBox[{20., 0}, {30., 1.},
       RoundingRadius->0], RectangleBox[{40., 0}, {50., 6.},
       RoundingRadius->0], RectangleBox[{50., 0}, {60., 12.},
       RoundingRadius->0], RectangleBox[{60., 0}, {70., 8.},
       RoundingRadius->0], RectangleBox[{70., 0}, {80., 12.},
       RoundingRadius->0], RectangleBox[{80., 0}, {90., 10.},
       RoundingRadius->0], RectangleBox[{90., 0}, {100., 9.},
       RoundingRadius->0], RectangleBox[{100., 0}, {110., 4.},
       RoundingRadius->0], RectangleBox[{110., 0}, {120., 6.},
       RoundingRadius->0], RectangleBox[{120., 0}, {130., 9.},
       RoundingRadius->0], RectangleBox[{130., 0}, {140., 8.},
       RoundingRadius->0], RectangleBox[{140., 0}, {150., 6.},
       RoundingRadius->0], RectangleBox[{150., 0}, {160., 5.},
       RoundingRadius->0], RectangleBox[{160., 0}, {170., 8.},
       RoundingRadius->0], RectangleBox[{170., 0}, {180., 9.},
       RoundingRadius->0], RectangleBox[{180., 0}, {190., 5.},
       RoundingRadius->0], RectangleBox[{190., 0}, {200., 6.},
       RoundingRadius->0], RectangleBox[{200., 0}, {210., 7.},
       RoundingRadius->0], RectangleBox[{210., 0}, {220., 4.},
       RoundingRadius->0], RectangleBox[{220., 0}, {230., 7.},
       RoundingRadius->0], RectangleBox[{230., 0}, {240., 3.},
       RoundingRadius->0], RectangleBox[{240., 0}, {250., 3.},
       RoundingRadius->0], RectangleBox[{250., 0}, {260., 3.},
       RoundingRadius->0], RectangleBox[{260., 0}, {270., 3.},
       RoundingRadius->0], RectangleBox[{270., 0}, {280., 3.},
       RoundingRadius->0], RectangleBox[{280., 0}, {290., 2.},
       RoundingRadius->0], RectangleBox[{290., 0}, {300., 1.},
       RoundingRadius->0], RectangleBox[{300., 0}, {310., 2.},
       RoundingRadius->0], RectangleBox[{320., 0}, {330., 1.},
       RoundingRadius->0], RectangleBox[{350., 0}, {360., 2.},
       RoundingRadius->0], RectangleBox[{360., 0}, {370., 1.},
       RoundingRadius->0], RectangleBox[{390., 0}, {400., 1.},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {
    {RGBColor[0.8549019607843137, 0.9607843137254902, 1.], EdgeForm[{Opacity[
     0.44799999999999995`], Thickness[Small]}], {}, 
     {RGBColor[0.8549019607843137, 0.9607843137254902, 1.], EdgeForm[{Opacity[
      0.44799999999999995`], Thickness[Small]}], 
      RectangleBox[{10., 0}, {20., 1.},
       RoundingRadius->0], RectangleBox[{30., 0}, {40., 5.},
       RoundingRadius->0], RectangleBox[{40., 0}, {50., 8.},
       RoundingRadius->0], RectangleBox[{50., 0}, {60., 5.},
       RoundingRadius->0], RectangleBox[{60., 0}, {70., 9.},
       RoundingRadius->0], RectangleBox[{70., 0}, {80., 6.},
       RoundingRadius->0], RectangleBox[{80., 0}, {90., 7.},
       RoundingRadius->0], RectangleBox[{90., 0}, {100., 17.},
       RoundingRadius->0], RectangleBox[{100., 0}, {110., 9.},
       RoundingRadius->0], RectangleBox[{110., 0}, {120., 14.},
       RoundingRadius->0], RectangleBox[{120., 0}, {130., 18.},
       RoundingRadius->0], RectangleBox[{130., 0}, {140., 16.},
       RoundingRadius->0], RectangleBox[{140., 0}, {150., 9.},
       RoundingRadius->0], RectangleBox[{150., 0}, {160., 8.},
       RoundingRadius->0], RectangleBox[{160., 0}, {170., 5.},
       RoundingRadius->0], RectangleBox[{170., 0}, {180., 7.},
       RoundingRadius->0], RectangleBox[{180., 0}, {190., 6.},
       RoundingRadius->0], RectangleBox[{190., 0}, {200., 5.},
       RoundingRadius->0], RectangleBox[{200., 0}, {210., 3.},
       RoundingRadius->0], RectangleBox[{210., 0}, {220., 2.},
       RoundingRadius->0], RectangleBox[{220., 0}, {230., 2.},
       RoundingRadius->0], RectangleBox[{250., 0}, {260., 1.},
       RoundingRadius->0], RectangleBox[{280., 0}, {290., 1.},
       RoundingRadius->0], RectangleBox[{320., 0}, {330., 2.},
       RoundingRadius->0], RectangleBox[{350., 0}, {360., 1.},
       RoundingRadius->0], RectangleBox[{360., 0}, {370., 1.},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{2.2, 0},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Counts\"", TraditionalForm], None}, {
     FormBox[
     "\"WT \\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"Italic\\\"]\
, \\\"cat\\\"]\\) (/s)\"", TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 18],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->450,
  PlotRange->{{10., 400.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.799528037848549*^9, 3.8022985331000013`*^9, 
  3.802385536304229*^9, 3.807130023766135*^9, 3.8089380845411663`*^9, 
  3.812392050813671*^9, 3.812556118754035*^9, 3.812662917366379*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"aa30f7ec-748c-4b58-bbc0-de3d059815cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.5000727137636156`*^6", ",", "1.210597882362922`*^6", ",", 
   "1.640642473051746`*^6", ",", "1.3306678515151113`*^6", ",", 
   "1.7822925051765053`*^6", ",", "1.505132707177685`*^6", ",", 
   "1.6699317693080371`*^6", ",", "1.2920551488940343`*^6", ",", 
   "1.647266212911247`*^6", ",", "1.7442338409809466`*^6", ",", 
   "1.7850633416977804`*^6", ",", "1.4453295944335246`*^6", ",", 
   "1.9277254260419554`*^6", ",", "1.646382987799125`*^6", ",", 
   "1.644432303788963`*^6", ",", "1.5088830722460647`*^6", ",", 
   "1.5003293304263398`*^6", ",", "2.0323453707388537`*^6", ",", 
   "1.0985003619646893`*^6", ",", "1.2937858063707924`*^6", ",", 
   "1.0841046980889728`*^6", ",", "1.1584219322048714`*^6", ",", 
   "1.5929086981454275`*^6", ",", "1.1792218834165526`*^6", ",", 
   "1.170897858113397`*^6", ",", "1.4044622185702734`*^6", ",", 
   "1.507471138288416`*^6", ",", "1.206664601784741`*^6", ",", 
   "1.424602241240011`*^6", ",", "1.5891660325763251`*^6", ",", 
   "1.259524761118525`*^6", ",", "1.4842188496623558`*^6", ",", 
   "1.3189128887539285`*^6", ",", "1.2197332117525144`*^6", ",", 
   "1.2031560894675057`*^6", ",", "1.5650220397396085`*^6", ",", 
   "1.1137515948537907`*^6", ",", "1.2287799211899482`*^6", ",", 
   "662317.1761166994`", ",", "653195.7583114268`", ",", "737225.4612269934`",
    ",", "1.0128515570749464`*^6", ",", "1.1413002736513834`*^6", ",", 
   "1.2681219688199586`*^6", ",", "1.3602902160636163`*^6", ",", 
   "461377.50514651876`", ",", "1.4741241041995555`*^6", ",", 
   "343341.2543424464`", ",", "1.2745357260552265`*^6", ",", 
   "383912.26327245584`", ",", "628855.1497041786`", ",", 
   "1.0436941054453825`*^6", ",", "849629.0951147652`", ",", 
   "1.22065317048941`*^6", ",", "1.1155846156783341`*^6", ",", 
   "1.132544888366809`*^6", ",", "711439.8201442318`", ",", 
   "626130.0226151043`", ",", "740666.6045141065`", ",", 
   "1.0203400323381935`*^6", ",", "768693.0741463895`", ",", 
   "1.9983620791263555`*^6", ",", "980149.4235855401`", ",", 
   "2.065137681418674`*^6", ",", "840172.5678280331`", ",", 
   "2.4332568655445445`*^6", ",", "2.2572863023973494`*^6", ",", 
   "628325.8746621229`", ",", "722768.7449783364`", ",", "733847.0212413796`",
    ",", "1.2271210865946487`*^6", ",", "1.5540261347857509`*^6", ",", 
   "1.0647157318921713`*^6", ",", "544452.4642450811`", ",", 
   "929799.5808263434`", ",", "1.924538214000947`*^6", ",", 
   "175340.78636634754`", ",", "510159.69556595624`", ",", 
   "648429.6829684933`", ",", "1.8367414706118526`*^6", ",", 
   "2.1743674305360746`*^6", ",", "234525.35400206377`", ",", 
   "126693.84735563686`", ",", "863683.5995910284`", ",", 
   "522586.18158406584`", ",", "785405.2802938386`", ",", 
   "1.0166148793510894`*^6", ",", "1.2740982010050074`*^6", ",", 
   "996481.8040746327`", ",", "535985.3723663273`", ",", 
   "1.5009650195736403`*^6", ",", "945269.0586631361`", ",", 
   "710249.5184294312`", ",", "1.122333812285029`*^6", ",", 
   "974345.321236449`", ",", "1.0316793802113879`*^6", ",", 
   "904182.0811546511`", ",", "457490.62286651984`", ",", 
   "349221.9561432561`", ",", "984403.2387994282`", ",", 
   "350434.67119364283`", ",", "588059.3694311208`", ",", 
   "373601.2139762364`", ",", "1.2996280666914098`*^6", ",", 
   "373439.26667756826`", ",", "374718.8897461939`", ",", 
   "315148.2032939677`", ",", "518343.7635291563`", ",", 
   "1.1426871206780071`*^6", ",", "1.6045328126868044`*^6", ",", 
   "879611.8696981955`", ",", "1.9726678376511417`*^6", ",", 
   "1.7830182750935087`*^6", ",", "1.604949602962112`*^6", ",", 
   "1.601965827588066`*^6", ",", "1.1047276045560527`*^6", ",", 
   "994637.5178574331`", ",", "1.0079230175297997`*^6", ",", 
   "1.0879663517510819`*^6", ",", "711954.5388324586`", ",", 
   "342757.0927578006`", ",", "486225.3098169531`", ",", 
   "1.9473269697364466`*^6", ",", "402635.3675698549`", ",", 
   "691698.4471160366`", ",", "2.4407309320396692`*^6", ",", 
   "749627.6288642118`", ",", "946749.2147231407`", ",", 
   "1.1052316494758797`*^6", ",", "939799.3116664311`", ",", 
   "714243.8226349744`", ",", "689534.5576872277`", ",", "663415.0754780475`",
    ",", "1.1873774423487457`*^6", ",", "957041.6438712924`", ",", 
   "799104.8380942442`", ",", "885561.4993918302`", ",", "709316.0683779294`",
    ",", "1.092238108567418`*^6", ",", "747852.3951107848`", ",", 
   "1.4787326683457831`*^6", ",", "955854.9767328094`", ",", 
   "417398.8623874268`", ",", "684997.965182268`", ",", "300042.1348780769`", 
   ",", "611915.4715678177`", ",", "651306.1549579427`", ",", 
   "645400.7546311514`", ",", "863896.2289874707`", ",", "937585.6458922392`",
    ",", "1.031924043909806`*^6", ",", "837565.5305516329`", ",", 
   "1.2559657120934997`*^6", ",", "1.1746652390697456`*^6", ",", 
   "1.4152489333975753`*^6", ",", "737650.0847426011`", ",", 
   "1.0527306363897228`*^6", ",", "1.0285907388225053`*^6", ",", 
   "1.2247681564093698`*^6", ",", "662480.6695870033`", ",", 
   "1.7934934470106342`*^6", ",", "564431.4032201273`", ",", 
   "1.348979493330201`*^6", ",", "410875.58000843803`", ",", 
   "610320.2201734172`", ",", "414842.9823649498`", ",", 
   "289737.03557555017`", ",", "1.152482238958604`*^6"}], "}"}]], "Output",
 CellChangeTimes->{3.799528037848549*^9, 3.8022985331000013`*^9, 
  3.802385536304229*^9, 3.807130023766135*^9, 3.8089380845411663`*^9, 
  3.812392050813671*^9, 3.812556118754035*^9, 3.812662917767778*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"da49f610-eb71-456d-95ae-1896f3c0ef60"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Generate an overlaid plot of the wild-type Michaelis-Menten fits for \
coplotting with mutant Michaelis-Menten fits, to aid interpretation of ",
 StyleBox["p",
  FontSlant->"Italic"],
 "-values:"
}], "Subsubsection",
 CellChangeTimes->{{3.747071481427661*^9, 3.747071533174438*^9}, {
  3.7735858760138273`*^9, 
  3.773585878708321*^9}},ExpressionUUID->"78ea248f-e80f-4a6c-92c4-\
e27cab06a79f"],

Cell[TextData[{
 "Now want to look at the fitted WT Michaelis-Menten curves overlaid. \
Plotting all the individual curves in light gray, with the ",
 StyleBox["median",
  FontWeight->"Bold"],
 " curve overlaid in dark gray, and curves corresponding to the 99% \
confidence bounds shown as intermediate gray curves:"
}], "Text",
 CellChangeTimes->{{3.773585809332531*^9, 3.77358583644274*^9}, {
  3.77358724515436*^9, 
  3.773587330840275*^9}},ExpressionUUID->"8c19fd34-8780-4e56-94cb-\
af37054b6fa2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"curves", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RandomChoice", "[", "normalizedWTkcatvalues", "]"}], "*", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"1.0", ",", "0.01"}], "]"}], "]"}], "*", 
        RowBox[{"sub", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"RandomChoice", "[", "allWTKmValues", "]"}], "*", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"1.0", ",", "0.01"}], "]"}], "]"}]}], "+", "sub"}], 
          ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "200"}], "}"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"curves", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"normalizedWTkcatvalues", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "*", 
        RowBox[{"sub", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"allWTKmValues", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "+", "sub"}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "normalizedWTkcatvalues", "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"curvesKm", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"1.0", "*", 
        RowBox[{"sub", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"allWTKmValues", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "+", "sub"}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "normalizedWTkcatvalues", "]"}]}], "}"}]}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.746998486362586*^9, 3.746998487993392*^9}, {
  3.7469985227357683`*^9, 3.746998541030939*^9}, {3.747071110024844*^9, 
  3.74707111041481*^9}, {3.7470715503457117`*^9, 3.747071589634535*^9}, {
  3.747071629555717*^9, 3.747071739080809*^9}, {3.747071783969421*^9, 
  3.7470718170376787`*^9}, {3.747671802083928*^9, 3.747671812548944*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"8f2c3714-142c-40a3-ab30-f458756220d3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"densityFilling1", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{"curves", ",", 
      RowBox[{"{", 
       RowBox[{"sub", ",", "0", ",", "1500"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Gray", ",", 
         RowBox[{"Thickness", "[", "0.015", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.05", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotPoints", "\[Rule]", "2"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kcatResampled", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Median", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{"normalizedWTkcatvalues", ",", "5"}], "]"}], "]"}], ",", 
       RowBox[{"{", "526", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.99"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KmResampled", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Median", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{"allWTKmValues", ",", "5"}], "]"}], "]"}], ",", 
       RowBox[{"{", "526", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.99"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"densityFilling", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"densityFilling1", ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Median", "[", "normalizedWTkcatvalues", "]"}], "*", 
        RowBox[{"sub", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Median", "[", "allWTKmValues", "]"}], "+", "sub"}], 
          ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"sub", ",", "0", ",", "1500"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
          RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"kcatResampled", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"sub", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Median", "[", "allWTKmValues", "]"}], "+", "sub"}], 
          ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"sub", ",", "0", ",", "1500"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Dashed", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"kcatResampled", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"sub", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Median", "[", "allWTKmValues", "]"}], "+", "sub"}], 
          ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"sub", ",", "0", ",", "1500"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Dashed", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}]}]}], "]"}]}], "]"}]}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"densityFillingKm", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"curvesKm", ",", 
     RowBox[{"{", 
      RowBox[{"sub", ",", "0", ",", "1500"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Gray", ",", 
        RowBox[{"Thickness", "[", "0.015", "]"}], ",", 
        RowBox[{"Opacity", "[", "0.02", "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "2"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.746998449748304*^9, 3.746998459800695*^9}, {
  3.746998490183465*^9, 3.746998512000492*^9}, {3.746998615335558*^9, 
  3.746998620635936*^9}, {3.746998669868988*^9, 3.746998671460804*^9}, {
  3.747070991563325*^9, 3.747070995258498*^9}, {3.747071131536311*^9, 
  3.747071137044113*^9}, {3.747071828878646*^9, 3.74707186211793*^9}, {
  3.747671774993894*^9, 3.747671782645012*^9}, {3.747671818988652*^9, 
  3.747671819902158*^9}, {3.747671963798854*^9, 3.747671972234253*^9}, {
  3.753135443737899*^9, 3.753135455245417*^9}, {3.753135505009099*^9, 
  3.753135642942466*^9}, {3.753135675295429*^9, 3.753135675531107*^9}, {
  3.753136047628459*^9, 3.75313611727547*^9}, {3.753136161213852*^9, 
  3.7531361804770327`*^9}, {3.753136217688282*^9, 3.75313624211241*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"bc4ab314-861f-4e28-b67d-89752ee63129"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"60.92663221377692`", ",", "191.9478938118564`"}], "}"}]], "Output",\

 CellChangeTimes->{3.799528052128289*^9, 3.8023855635600557`*^9, 
  3.807130033219185*^9, 3.8089380897319117`*^9, 3.812392059568233*^9, 
  3.8125561312885933`*^9, 3.812662925632412*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"f7c219fe-cd3c-44ab-b544-f01859196cdf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"56.9513387166978`", ",", "117.47687918664367`"}], "}"}]], "Output",\

 CellChangeTimes->{3.799528052128289*^9, 3.8023855635600557`*^9, 
  3.807130033219185*^9, 3.8089380897319117`*^9, 3.812392059568233*^9, 
  3.8125561312885933`*^9, 3.812662925702917*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"b6aba463-a38e-40a1-9c44-684e8961225b"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmlMU2kUfb66tNQlNgUDAsOIHRciSgZBo+gZkFSlDMrevq9UETfqwFNx
GCGUlmVYimxdGMYNouBuEAgao9AgglvMQGqqqCONW4YfY7BRRJD6mnCTm/vr
nJxzz/kxNTN2N01RVAi3rvtVk34ry5C8cXZUYXu/u3qjtyJtnYoNBUn8vyHP
IxxSe444kJVCUBa9v8saBcuDxkgP43Y87ZLG8z9vw8vFM3XubBL2X6+5XyuM
g4tPLFOiKClgRXNVPPQH3o8LjDshZxKsJzoS8Hd9fb2gIA1nl+xpTj2ViPO9
UaECdi985+xwj5EnocPxzcpPSceQV38rHEno8Ws5xJf9BtUedc/6rGT891MQ
f7oPixer6JYhezLYMDcbz3gQMSEX7q+BHKNxr5t4wsOgu1YviKiVw2WPV5CF
Dl/V7PBBOWbqTBG8sSOwxEee/eipwLG6DBGPzUbo3C+9LbEKiK9K7fT7PzA6
7dqu6mIFTnAC6JQcTCyk/TPbFPB/Pqahn+SiT+L2w7SXClwcGYimZXno0zlW
DdIMgviXvek7GjSI/AazJAxIVfcnykeLuhf+R0MjGbxuOt5DGXUYC5iVoM1j
wNm5rI0pgOyXcM9KMwNXGpSwEBXKQ8ttVxhwcnK0vYXI7pBYy+4w+DgQnUoV
FGFBZpD0sY1BSMrNLdqwYjR3Cw19wwyOcg+ixorhLLKzxgkGlGvYElj8Bu3z
fQg2cYHkB5RiiOf480MAQYnHs8fOd6VIHpe1ja8lmLui9aRTWY7NpQ0/2+MI
Ym/4Fud76nFb3yqxqQhMEfoDTqse5cF05Go1gasvzqhjEK73FCdoCXa8/WdR
/qxK9D9re7SsnOAMF5CzuxJnKsq+VRim8N7VuLHdGujdNIU31KDsSfawWw9B
52mvlV0jNTAGie/NeDjFF1ML3oO75Fb/FJ+bAemp8yzqfzk/XGE69xmg2lqV
rn5D8G78woim1wBdY2J18DDBcs7gpM6ITYHXiwI/ETzipvOVEcG5tiNpXwky
RIUWTZgJ80jsygwnQevJD+cmv5gwOnFQM0OgRDwXWGeiGQMhDU7zHCU+LyVV
mnYzzDyTZLpIib84gg2iOlx5den4rx5KrG2/9/tkZh0at+U6sr2U+A5awH+K

        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#1"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWmdFIhVWcFggPjWqqi4RkTAHq1bfYBuCBszpYNy711btVyU
t7EFKqGD0A5aQBRtnKkbjqFDtjBCkDBS3SLGCLiBChq0iA9qfSGC1Nvgl3z5
fp2Tc75zFirS4igOQRAb2PXcd1p1a4Y5UXzjfYpAqFeJg/aRkd8x4XD+dNoY
qZJAej9PsIaRYl3Hb5mhS79E+79nPg+wfIWNzIM7b1ricXfJzAJ/5hskTzxf
uFWYCA+fICYJzcW5XSu796H0wPCEtyUFBn6VxPlShhM1NTXehSSU3SbXst/l
+MW+K9yb+R7152w7R+Ym48+X73t4cjVsnT3HahuS0bng4iFezEG4NoZE3RKl
YGRZGG9GMAN+jlAZWJcCJtrnP64lHemfPNpyha/A2N4hG9f3MLy2T3VkKBXw
2OMWZkC1u8+4uFmBmQWVEu54Jg5JynqVbgXKqjV+XCYbcZYXeoM4FYIG6X3O
cA7mBDjqDLmpqGUFcOR5OPjthQpxQyoW3x7XcnqP4Mm966HygVScd92M5cQc
hX0z/062D4kwXn0Q528tOGtEMt5nJGSmjtdEcD4i1o0l5iSSGLKd7CQsBcis
FZbsPkmCtVOfv6cQnXlnRrf+RcKTBuGrh+Dy/OXhvSRYOXn5dj2eBbr6ZU4S
L27GKojCY7BpunMHvShskLfsyI8uwqz4hNCHIRRy2QcR40WQlndZTSIKhGeY
Ysx5dfbCFzIK29hAdKsMeJfVur9IQ6E4oO+622FAQt+rsS4dBX5o4yl3UgnO
eS/PslspxDWHFOkCS5GmuTpQ1UChUlJ6wN1TiktJ8w43tlLw9MW9qwzSX3t1
k7coJD+8sUjnZYTv6PkRDFE4ywbk7jCiyT/MOjn6ER/0I/wrdEsmZ9DTeHM5
nEfU4Y5VNNqs89dedpVDLf3f8IeInubbU4FYoSkqLJqe5vMxY61ob4s4lsY2
tjBtSjMcW0oa++NpOCbqXFq7GZ9mbs9eL6OxkjU4VWDBNWJT/1I1jWvstA1a
4P94nu0KQ0Pjp2/XRlfCK811en02jcZTzp+n3lZCZp2t0uhpxLOBtX1dheZ/
Lr6V/EDjzQqZSdtUhfFLq6OeGmkcZwk2+1WjP2F1pMpCI6LpatZUWjUGu9oH
WmtofABvb4q+
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#2"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYveklCpiow0qkFiI6neEhIUYQDXhcVZylokih9ycUJagLKtSJ
ylD6oBCYlULthQ4FlfCyitYXoiiPlIrOGUY60Klxwog4xTgrQUWU7jbhS758
f52Tc75z/FMz43bwKIoK49Z1PyvTb2cZZauqLOWDd/p3rxKStJUpinB0Xqq/
N/pxNaIHcvhLFNFg6Cxd8gIxOu5Xr/VmN8PvwuvGZmYTnn07RTNbkYhTUr91
TeFxcPHxY5LhU7T4qVW/Bbo9L8c92O3YL2l99L40HicqKio88tLgWT9SKyZS
nO0Sh3sodmFob9OXpnEpro987XWXp+Nx4DdFlDoBtnmXfnKP2Yt85nnQzrcJ
eLUo1N3NV4GNNVMnhsWJUER6PqLZfRg9H+wTUJmIj1sG6+hp+6GN4p+2DSTC
ZY/Oy4LaMqJr9pNhiqZMRI8dgGTu2zeF8TIUmzK8aMUhdHbzrGn5MvAvRg/w
XmZjY6jyl0iLDJWcAJ48Bwc7182w98mw4OmYktd3GNc9Mm+3fpLhnMMu4cXk
YrxG0KuawyDUvVHI61TiwsLvj2mWMUgqsY5SvmoEDNdWCzYxGKw7aaNYDb6r
rjcsUTHg7DSqY/OQtLVvli/LwJUGNU0LQ5j31+IGBpycHHWXFv80Ws1nbzJ4
b5ekUnn5oCOyV5TcZxAmb/lBHVmA4B7T7pQnDH7mHkSNFUDQmr1m6SsGlGsU
hegWfrZFuRGs4QJRBRah+2iLtnImQaH3427nUBHSr/o/2CAkmB58pcqZfBTP
enxFPaEEcTf8ClQ+OlTL3YrbVxKUiXR7nL06NO/TOULWErj64hQXgz5JIm4k
EGx70TNfNVWPhiCToF9OUMMF5LTqkdPvLzLvnMQLSzEsEfGXH5jEGw14p+/4
7S89QdtpQUi7w4BbufyMM+wkX+xxzDeIV4ecmOTzNMLy0DjDUsv54QrT9qMR
brFdd+rMBEPjZoeyywi6vjQw8yJBAGdwQsPCvE2bqm0meMBN23MW/0pLjthv
EWR4aTuUkWX4U9Py95d2gitV/zVMfCrDhtz17Ou7BPFcYG0J5XAsmhN0+XeC
D4uTSpTXyrFjeUoF8wfBrxxBlJcJ2bZZeGEniLh27+BEpgnahWcypA8J/gcD
yosU
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#3"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUnlMU3kYfGlNBTTERYSAYBTQNdYjhCxgBJlw2AVaiRQRpdf76S5bwpaC
igpLD47AggWlDyurFQ0eaI0KBa8gGkBiWFgP3OCNBEUbr1RXtBDoviZ8yZfv
r5nMfDNLSG7qLxyKosLZdd0JTXbHLmNGjENgLj0do4wJ2LZjnVwdAWXjSvjo
YiEYKfRerRbg76ao/8bcN+JW34kEH2YTuAWDypDxVDwP4ekXqLcg/K7FmjO4
GS4+b6EUvokyezqVgeqcN5PuDI1zdaGHL7ZvxV8NDQ3uJTvgW6jvjvLJRHNv
coS7OgvXa/jN+yIluPxl6qGbLBuStLyfGL4UPYsv5bsJf4eJ10/xJ6SwLQt1
mxWoRtW4xfnKIoM62mOIy+QhRPquXLlBjm/i0VPcOTthEM/7YWpADpc9bsku
TAmyhr8EKcDT18dxHbuRe03oJ81QwGBSeXHVe/B0aVjV+koFvC8IRjhv9kK0
PyJeaVXgKCuAIytEWXtjYMUTBYKfOjScf4tADQuKgqcVOGd/IOIIi/Hx86eh
lkU0Qt3OB3C6NRC9XHyxLoqGpLbrKxWoQxHPGu2bQWP01JEeitGjSrzC4f0n
DdbOeV1KCX70f5E3eYyGKw1qTik+cBJztltpsHIKdb2lGG2Vd+X30vj8QESo
kjL0q6R7kx7RCJddT9RFl0P7POGP2TYa+9gHUY5yeGTZYru/06Bco66AoZbS
1ywgiGcD0fIrcckmbu4OIqjwefyPc6wSRv9YU9waAs9VrWantAo/W6mAzA0E
qVcXlWv9qtGQdPudxyaC+rjqHOfDavAF84ThmQSuvjiTDUiI71GFqAgUr+8F
aWfXIDmC2fOtgKCJDcjZVQOzs7j/V+0MPuAA9LPeN4XVzuCNB6HPnJu/0ELQ
2ei/5qb9IHiDHW3ZLTN8KXVIMbfLi6/M8HkYccOTmT/RxfphC9P5mxF+3BN+
2XcIxibP2jW9Rty937L/7ADBCtbgtJ6BZ1md4fgQQT87ncMMTqaPH5U8I1B5
ld7SRNfjbZI42P6SoNX86cz093okdKyeb7ERpLGBdaYfQlBMpH3wA8H4ckmt
pu0QRLaRsGd2gsMswXovE/oe9aXd/kqwtu1OwXSuCZEDS64ccBD8D2Ufh3c=

        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#4"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1MU3cUffQRLWhMVjuyOjATdal2Q2F8BF3hJC0wUzoVFDZCO2jfTxko
PBgDBvFR2hGJRFD6aqkKZFPEdZ1xhDU4JhBguKEzDmHELeoICnM4HUNxhazd
a8JJbu5f9+R83A2GojQioigqVhj/XuTyvyu1vpf4SPYgM6qVTQzNYnZ+wMZB
eto6+MeRFKRMVkoj2BQowrmdvotp6B/5LCmE3wt9znDBW3GZuLtpRc3LbCac
K41X64qz4OeTpuqQXkaPuO5ko/7QzFIQn4ukngHv9249TjscjiAzg9m/54Ya
ZTm4OKyJC2IPYt/sX7e7u3Lgnv9vTKzPh2dkYfWVmFwMvXa5RJx6GM7oJp3z
81w8ej1SHBjGIkGtox/4csEqgydovhiJ1zZsbdpjwIv0qXZ61Ue4rG7eLrUb
4LdHm0tRSGcY4scNWFFjU9GejzFdPaP5cLURx+2FEpotx7u2Jzv6lEZIL6VM
imYqwBvOFoXlG3FWECDSV6I5Zu2PO5qM2PibhxONV4G3h3/tchvhnBvVilKP
QLmNO/xkwohIsStUNMhBdf2Z48CCEdmNA8+pMBM2v6/aUyBhMNV+ZojiazDp
6rgQpWYg2HGZdpvRpqlIzsti4G+DWmWBtuTe7NoiBoKcStOwBdcPhih0Qm7/
jGoNlPlTvPOGvPwAzyBW/+0uk7IWFbLFp9p2Bp8IAVGeWjx0DgZHfMOA8oM9
ipvXSn6KGmWgFgqpVtTB491Szt1ncDTkzk3fdB2u7hWXvfSYwZo3O1t8umPY
PNtXkUwTpHWvr62W1WPLz/cKAtYQ2FT1h3xj9Vg/pn0c8wqB/198muO4cuLV
+EgFQc7DW+HVKxtglag6xdEE54SCfAMNSIpWq6reXr4PPYGMWw6LJnX53noS
ZV/K/tyeR9Dbtm5b39xJJPsSNnGFy3y7m7Au1rK/oXSZL9iKZ/MBLwJNBGrh
YXrzrGj1hFQV1xJML30xxw1bsRgxIP/qGMFWwaC3hsfvBR3Pz/AENwT03ufR
H/jL+XQHQaHE0s8pbei5bT4/1ULQ2fK0w/uvDeUWt5y/QLBPKKw34xSanQGK
bifBgjy7kes6haWNIq7nEkGzQJAgsUP+60RrWydBfNcPZd4iO+7eGJ8nboL/
AYleiMs=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#5"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1MknsYfYMssHW3CK1u0pfVWs3KzdIy61y1WWmjtKIU4f01Gk0yqJC4
3ETAHC2yD8HIklq5TNO+XN+ZmhnZl5XVXDSvY5QWLc17l0ou6WXz2Z49f52z
c55zpm9Vpm5jURS1mNnA/anPqlVbN6/Y+HEg3xGavSIsXRYrVUVjgjO3kyxN
RJJbx5+vSsKtyEctU98J0fD07MpQ23poX157OOJyGtpnjjKGqESIjKr917h+
EwJ8/JRMHAzXRUhWboZlR9cg10agV6/6tsi5BSdLSkq4JhmSl+4SlvWno8KZ
HM1VyXEnfFFjd08Gbv7/6y1HkoWM7XbBg/tiNE27upuTko199kLtTEUmvsyO
5IwUqJDVwuZH+TOhigtuY9t2wfLoi3tyngT9aZ7z7DF7QD51i252SxCwxzap
MUMQa+5dJ8UoY3EC25cDU4Xo67gKKQrtO3ls1V6EzJ/1uOOHFPzLSW5Wlxaa
shsij4BGKSOAJdFhWtHIgZw4GuEffHrWu38w8VmVdGo6jYu9rWtZKbmMPg0/
Xk0jklMdxnqoh2Osx7fgEA3xkcYflMCA77WKKxHnaHjOn2qibEZoFUWO6Cc0
GDvVBqEJtm/sZWdcNAJpUGPyUeXuT3zlpcHI0Rmc+Tit8Ezy+mj817p2K2Xa
D5cSQRwOwWLJ3dWGuAJw/fc6/goh+Jt5EOUrQIlrvL16OgEVGJUZOerCeHEM
QSITSN68A1AEjQ5qiCcwh75v8XcegOvu5BdFKQR/RNQ4/JkHccHaJquREKTe
nlKQN8kCrbbdxZMTFCdYdvjfWqBzGLxcJUGgL/7kQsioHs37XAL606sZeaMP
Qzbn67j6/QRlTED+xsPgl96v3GgZxocdxT1rxpSL9mG89RiUpV2v5ZcI6s78
uaC+9xignFuxrmaYT1iErOefn3BvDfMFW9FaLpf31zN+mMLUbbfC6S0vX9hE
0DlY2at3WhHV/aEhoZlgLmNwyGhDm/lqqv8lwXNm6jpsmLW3T1z1hmAnL79B
H1eMlsoR2TFtBDWOngtDA8XYptlyaLCdYAMTWN2m42BRwaIoN0HfHPER/fXj
iGnuO5v2keAEQ7CcZ4fSHGtP7yJYcr1ZM6S042k9T7jGS/AbOXmNtA==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#6"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvet12ILOUIGNBggWBRWm6AxoKnIiICooiiiKgtL2Xgvh0YJW
rK70IYNZoWhbaq2oRPGF2XyUZqKriqXuFeYEo6LMNGZVY0RhcwpsdLcZX/Ll
+3VOzvnOmSYsz6ZYBEEkMOu7I8ri6zsMG5O1ZK/DWlSeHJYnFmyVJmJx7Iye
yd3LkO5WBM2RpuNU1LkGrSQbN39qSQsxrkXogc5bGdG56J/upw6W5uIuR6Jc
fygPPr6gzHz8VpW2oXBmPnQlz0c5xkKM7qkNzpqzFUcsFgtHI4a30WVM374N
Z10ZiRzpdmS5FnXN5xbC/ue/veyCYrztH2oLbCmEM/JiBTuzFPw4iS2NJ8TL
6HnsCeFS1Cd2OEUaIaRJ/g9IowwTknl9Pz8R4v26Z61kQCWWfrqgkh0ngs8e
qdmBdtLSNqlCBD+1KYUc3gny1sd9+RdFqDeXcUnpLrAFAbHxL0QI+ibdzXpe
hYKunGsKnhhHGQGsAgVOd5gIv+ViRD0eVrLu70F7nidTLhPj/OC9VazMLzGw
125ZZxZjHvtCGOu2EpvvuEVTOsTYou98R4SrEFFZyuf0ifGs1eokjGq8jjob
McClwNi5oMrSQB5j/3pTHAVfGkSAFq39+skTUykwchQqlxYpgdQIP4/C0L1V
QkKzDx/llA/2lFFIKOhYoUqqgX7lO5dAQ2E38yBiuAYH9DJBlZEC4RtpLU6H
z+Ddb6eQygRSHVuH0GC+dloXhdqQR91eTx1WL3y00tpD4ZPPLzd78/fDaftC
njtAIfu7iJrqUB0eJuhC7CMUTCm6Em+vDt69riGFHw1fX7wZ9Whu/OozYRiN
bX/c5VdPbACVxMkxR9M4yQTk7WxAqWq+Z2M8/T8+rBGR11B1bOk43nAQnhOB
/m4hDcdx3twbgweR0i14Gls8zpd1CCffXlLHy8b5/A1oujGlQq6kkcoUxiEx
4M5h9xXHPhqe0XODSpcB9a/+sXfvpzGbMTimNoIza71kbRONX5hxPDWiqHdo
zY9WGmVc7U1lkgm/Out2TW2hcbn5zZmxDyasiFk8N6aNRg4TmGNDExbcJjv/
+pbG3zO36JW2JqRxiqxHbTQOMwRLuGaUrImWRV6lscj2g3ys3AxZo+d39fc0
/gMx9H3g
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#7"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlUn9Q03UY/rqVMXdX3ELKGJxYLJZF7q4TOAIewVrKaMgIYWzffT5CYYPY
11xJM8Y2RMydmm1ApB56HFf+OLTJdabcENPJeWZKmHqUY6fC0ekRPxUHrO+O
5+69994/3uee533e+E2m/I8FDMOs5ivcn1qNXWZXUeaz63tmu++UZ0q1ZWkG
LhnnVvZIjCVroAxYopI4JdrWDZUmR6pw/sqR96LdG9D/4vCNwNEN+Oe1xfal
3EZ020rGYtYXIMwXpdLjQeGAvPf9Qjgrh4MiN0WCmumJvbkRP7S0tIgcZWhx
BZfZlhbjJ19Osogrx/DlmF99Ui1+mZjrj2CN0Fzd2TH9RIuLy099HqH6DE1v
yqW3TpdgRKaIeCaWg+m4TGQq0IFLX3JL6N6CwOwLpx76dXisudcuFG+F9XBW
erJWj7A9ocOMmkHNpVyfHovtjdnCmS9w0Dw1tVPGYk9zlUTIbcP99tH7XV+z
iOpQBgTD1SjKyPJXXGFxkBcgYC1YUa1w9EYa8OrAjFVwcztkzt6//8gz4NhY
X65AVYPq0rxPNE4DFBEnpILfrLjxV9z8oh4DdPsuTDGxNvzcp75cNW7AvfYD
Fxm3HX3H004qEgh4OydsagdSxRbj7RSCcBqMuA6Suc7rshwCXo7F5qvDseVN
kZk6gvG+3E2MYwcSJ1sfZ1QSrGbPrrOl12P2U/lhbCf4ij8QM1OPA5JHIe03
BEwYXAPUk8WexDaCtXwgtSt3YaIoJTjXQdAQfedaaGgXxHfZmlVnCZ5/y3Mo
pN+NCbMyePcaQf6ZuPraZU6M/FtxibtN0JjtrAz1O/H6kR0eZ4Ag/C+hnD3Y
mxI/XTNOQB5cX1H73F60vvvBaOlTgjY+oNAFfv5zxPLfIrqwL/0WRtYujIqk
C/uu/Xh4Zmu0WE7hbX3l7e6x/Ui1s/6TSXSBT/0dXk4a1MW9Qxf4lrjQkCbP
KsugWMs/jHezC49Ug6I12RRDwaNjVp8Les0W9biS4g3e4LzdDXf5SwkDeRRX
eXj9bpjzp7qjP6KoktSdt6Y3YiienUwqpvAcGv1x/kkjVp0LBoKEooAPzFvY
BO82defpMorpRN0+a2cT/PqGwg83U3zPE2RImtFlksX8XkGR2tn75bypGZ7p
3VCYKP4Htw2LRg==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#8"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9Qk3UYn+/UxtZhx5EpPzLQODSkqI5FRX5o6E4G8XPvFxNoEmSuyV6V
FNfxDoY7kQkDtoHoODQRqSPt1o66LjaCyaG3IyFME8xoB+adaeNHhtbWu4vn
7rnnr+fz4/k8UcXqnFKKx+O9xnVgPmKV35Wb8rf4JMvCf/OqtkS8W/LGe4wY
v7dMSBbqUiCd0oTGM1JQzyhm0Lsd/VfObF1tzoZSerBsUP0Obm1YWf00QyDS
vXRLOJCFAF5oeiG0o+bm9OvZMKjuPA4y70JK8IUub2cOTra1tQXpSpBVQSmO
S3LRPSQTBzG7kfDp/Y4T3+eid+7fcUGREl8oBc7NsXlwPfflfkH6XjRduZyf
VpmHuzEJguWRDDo6BLToUh6YZOF1vnkf9tTuj9tJyfEw13OOLzqAeGWie4dY
joA9vq4cYeUer7VUjpXVFgl/8WO4+uwf7WiQo761LITPHEJ4e4yStckRekE6
Rd2pwHzpupDhMTmsnACqSIPeXzKU7gdyrJ9YZKlrn6DHJTMsF9L43DuWQaVX
Yt/0xW0/RtFIEPREUIMsptdee7JOTKPAOLDAi6zCDyK3RSWj4Tl3ysUzV2NV
j+hVYxkNzk5PVaYOhzvv8mNZGoE0eKIaqJon/zl9nAYnR1M1VAPFsHPjmpM0
Zscyinm6I2gwRhvOd9FILPp2e1WyHnNxWmepjcZh7kC8RT2el3UZPuijwQsU
cxQV2b5tB0ZppHKBaF+ohTHqdZH1Jo2jq38e8c/UwpqWYE3x0AjebGv3F9bB
c2n+ZtwcjZxvntVr1xqwl6W+OvKIhkViUPnHDZjN6PZWLiMI/ItfVg/x+3Xj
6mACxfTVaO0TDWiardSUhxKc5QLyDzRgcp394sth5P/9iEbY07Rv399AkHgs
ReHUNOIYW/jr3EaCGyMPc7U3GlEglZwdjF/CNzXBvmJNy4iYwNER9qLT2wSd
bf2ZVW8u8WU2o/iVcHMMlviEJnzdd6/1tpQglXsox4cmZOnn/9DLCGYef+Zl
h0y4Fx3jEGYSbOIO4Ks2I+lqhatXTuDmynHbDOaQatNUPkFZSE0/m2xB0lOp
6j93EtjaH5z3/W1BfadqYmAXQR4XqINuweUVk+raEoK/YguMrL0FkVHufvFu
ghMcwFshrYizyX8a3UOQZB8+6FO3Qr2g7SYqgv8AY/SSeg==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#9"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1Q03UY/92GOCBJF5HU5NKIcL7AtMIuJh+0QOZssu331TPlzWmkglMn
0DrHGC+TdhuDbcCYhNZ5BrcT4czjOpogY2EmGpjYlXqkwZFxHC9JE9v67Y7n
7rnnr+fzfF6elblHpQdYFEVtYjown2kOdaksu5MVXvdBu68gmbdH8X6WMhE9
z7ZAxt2CtBF1xHplGs4GN358M1iE7h/PfRhpzUD4nqQNX2o/wv2Y4NKXlbtg
Wv10bVPbTgTwIsT7cNfCXRLXlgHDkbH5EGsO1sZOzLxzWIpGu90eolOAj1aX
Yl6KbzzbE0OUn4BWHFyqypfhysx/dziZh7Bzt/j55HUZ3K9fOs4R52OcPStR
RsoxHivgBK1QIpUHeR+RQykMHWZbj+FJJc/RbJRjTvboPDvsBIobHFemu+QI
yGPrVBBkV40JRuUILrVtZXtPYnjNxFBhKA1jfQGXrSyCZ2nvIgefRsTFtBHW
WDH6TyWvS0+jcYYhwMpUY3+Pc3lIDo03fvNqWL98jscTneu3FdNonRrcwRKf
QlT5m8YsIw0Bx8lj9Wog38XRN5ylsbf62j/UCi0S7Km++A4aj8473JS1FMvN
4ZLNP9Ng5Di1Eh2qTPy2oIc0AmlQYWXYOC1KvfGEBkNHrfWUoVdTO+mcozE9
uCOX0pWj/e/Ex90sgnczv0vXCisgXOSQvbaE4DPGIMpbgdYXTjy4GUlABUqp
R/sry9KL4gg+YAIpWXMaZUXCIX0CgT7y1wH/6Gm8HW8TxWwiCF/X0eTf9wVc
QS++FJtKIO2MriiJMsASl1zpEBPYthqO+O8Y0DP0R973UoLAv/i3G8EfOemI
ziTI/vP2qpLFJty4nWLO20/wNROQ/5oJtVR5lipvYZ9nhudc818jxxj+VSnZ
V9VmJPVtnBUVEtwbmJOV3DMjbNxRWa5ewLfUwK2W9Kp0BK7mV+OvTtXg8Kqx
xoTKhXuSWhhEG3J+qFq4F2pB1Gz+YpOZ0cs8lCvPggPdbmePhWB0vmVK47Fg
dKhpcLiOgM8Y4Cu14pZgoK/9DMFPTLkeWqFfPZNb3ExQwC3r1ght+L2sM+at
rwg6miYv+P614XnLp10pFwjkTKAuUofjU+PftrUQPI3bW625XIcHNYLoUCdB
AwOwmVuP6rve+xkXCd673F/oO1qPpP7rt/SXCP4HAj+T/w==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#10"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUnlMU3kYfLbiFnXV1KKroUZAEfEg6C4epDBaalHoGjxQkZa+n6Xucj4E
EakWWiQQKpdtBdxFI6ioIYoEEa9arwbxJnWNKxutKB5xl6IRRZTua8KXfPn+
msnMN+ND0tckciiKCmHXfb9qky5lGTeG9xlGnK2uSw/3jlOFJjCLkOHfGnD8
tgRSR65gPiPFmY+/nBaOj4G147BkkikGvs6sKpnHevwzY5TOi9mABSPe2pe3
b4CbTxAth7mr5P3Sh5tgSHk96GmicfXerg98ejMO1NTUeOpVUO26f6WuNh7H
bVGLPJmtyPEb66M5KEfrx+92niIJy77wXWMzFbgxvWkbLzoVpfR684uZCXjr
H8wbKWTgm516LMWSAEY0+jHXlIFvGvFkTx8lPq/tPsodk4luW/ed5Dgl3Pa4
+ixUpIltL/cqMUpnFnMHtoOebK07fF6J0qo0PpfZgZ4ZQf7lDiUEp6QOzusc
OF8MXf/dg8afrACOIhfhkc6Nt2bS8Hs6oOU80iCp36t+tpjGyb5OGSd6N/5a
8WuuU04jmNfozbmuBZ6+ydyWTSO+/NonSpiPxDkNqv69NLqP/nGDMulwzs4L
e9dCg7XTmL9aD/m7mE1tNhruNKgxBfjPILgofUyDlZObbyuA+PnaprYeGh86
ZYTS70H4s1DZrE80QhQXVuaLCvHjYr+fGjkEO9kHUQOFSN4hMMePJ6DcwxTB
+vcBSYk/QQQbSN6cYrw890o4K5igaNKTe66eYpDIVfqgUIJx85prXfISKO+q
vc7ICNa0TSvMm2KAuiw2NSyWwCw2pLjsBjg7Iv9NUBC4++KKKkWysPXm7lQC
5asHvnk/lEFNVVYUZRHUswG5rpVhc1NgBTTDeO8KdGzdM2gvGsYbK2GKmDuN
c5DAcmhq0JW+SnT1ih3c+mG+1ftw8bL6jb1hmG+0EbXfT+T0NrF+2MJYfjMi
4zbjEJ0l6Bk80ae1GdF7SRKbeJ4gkDU4pDNhXuAEhfQqwR12LM9M+FkdV+1x
kyCNX2DViswQ6bgLj7QTNNf2Ngx9MSNqi6Sm+D7BOjYwS+x+hNDtQQ87CfoD
4su1LfuxoFhidT0iqGYJwvhV0DerNF5PCJa0tGcPpVch4LQub2IXwf9ixohi

        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#11"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1MU3cUfbZGWtgwMkSdMNuyMXTzg2xBFi2cAa4hgkxAkSKVvvdjEPl6
CJtSR+nHoI0FqWsL4nCFbOJQYhQ7Ecdq41i3kE0XQ4PENI6R4RYSCK5TENfu
NeEmN/evc3LOPUdMV+eU8CiKSuQ2eJ+rjw7XWQ6ltFzNMIbGlqdEy8muI+xO
/P7jSw8GF9Igm1RFbmNlEH80Ohaf+iFcoz17oqz7kfC9wdtszoP39VXatWw+
ZrN3vCJy5CPIF5lZhJXPZuwz6+QwVTxeElqV8DYH+lMXC3Gus7NTqCOo1ST6
JhqK8I17704hW4qcu+PiN5wK3PjnvzGB4ihOTEZ/cG30CEZEV48JMisR/3Z7
QUt+Mf6OSxCsjGHR6Hh0yztUDFYaOs631iB83calktVKPMudusAPq0XS06zO
T+VKBO3xdXXI3fV8w1yXEqu0tjT+4sf46zJtjnugRGtHVQSfPY7k+hvG91+m
EXlFNsl7fAIZU8L9cVIaXZwAnkKFKJFdZC6jEftwUc3znMSaHaU315tpXJq/
n8XLbMD1nhBTioNGgqA/mveDGvfaAuJqD43DbXf+pWI0MPbKdq/w0Zi68MUI
ZdUivDZQemwLA85OvyZbhxr7vYOjqQyCaVBheiChW6AqYMDJUWncekhm9tGX
qxg8uZ9FU7rPsLrg3LxOxyBRcStDI21C5azUJbIxqOceRC02YX33xhU9vQyo
4LAGhCYnOvrcDNK5QBrfMsIvmZ4p9DAwRE3cDUwbYZsNG0+fYhC+deB8oOgU
jn+7adPCCwY5N19ratxggkWmL/QKCGxpporAmAm+s2ll2yMJgn0J7G2FPFty
KXUzQfGfv0kaQ07DTobm1r5D8BUXUODOaQwmF8tVu5fx0WZcaTEMROxbxlvO
oLzBU/RmJYHT/ur22/Nn4I999+K2umW+7M/RLclrfqJa5gu1IKn7ZI/TQJDO
FcZZZkHNsLbp11aC6aW+ebXbgj23PfJeC8EWzqBfa8XEwhq360uCX7hxPrIi
5Se9IuRrgqoIvUstteGA5g+fuI9g4PzcRf+CDd7yevbhAEEeF5jzYDvqfCVb
1YMET+MPt6kd7YipGup68R3BWY4gOaIDyop6+pCL4D3Hz5/4qzuQmzQstIwQ
/A+hZIZR
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#12"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1Q03UY/7VxtKG90UTzIMC38+UMht6MHPIhzKUMWAMRtt934A7SaMJE
QIXbGIyJsZsOtjFIOHwJCzMDglacoQdIZZ6HZhcm6O2WvNQVrpk2dazf7nju
nnv+ej4vz+eJVhZLC1gURb3JdGA+0RZeLLVkJzoNpqCXIksSw2X5m3PVm6AJ
LsiNfWEbRM4K3htqEV6VSTbUxkpw+eqpd8Ks72E1K2pVUkwGJlYEVy9S7wK/
Bbrx5TsRwOOJCep34t6e2iwYVVNPudbdYPc3uMLrd+HjlpYWbk0+ZKMpZYsy
s/HZSMomrnoPvnLwIr54mI2vPb5bHEUh9vav71YdzMFwVFcJR7wPK+xhYw9c
OZhZxecERaixcZmy7ECiDOqEkF/Z1v2Qfs41d5pkeJzh6mAvOIA7P4VwRDdk
CNhj15SCXsNbI1koR3C1LZntLUNSnzAkDXKY7EWhbPVB6CNPC/cXycG7IHKy
pg7Bs7hX2WmXo5URwFJUoDVvsq3vohzL73i1rF8q4Wj0CWPvynHOfTOVJdbA
I5nm25/JweecD2cNafHXlS/F0iU06OOD/1IROjwLveBy8Gm4Ok4MU9Zq3G6f
HmtW0GDsnNel1+BcoSHPUEIjkAa1QI/NtiXlLAMNRk6FbkQPgSNsn6CJxj83
U5VUTS2+v5Fa8vZZGgJF/3ZdggEfuuKVyX00DjMHorwG3G0YL5cO0aACpa6D
ILo3yD1OYysTSNW6o8gNrtzRMU2jLuz2df/kUVzRRPu7PTReXN/T5if1EEp+
e8jlEEi/ed1Q9ZoR496T76teIbAlG1X+W0acmYl+LmspQeBf/CkmdC6WfuBc
S5B3f3RZ1fPH4O362dgYR3CGCcg/eAzvZm7smomf3w83Y4dgyH5KRCD4KCnv
UoUZxXHm3xemEYxdf5xRNWZG5MojuzdkzuNbGvBt+gP9YC7BQPvSmEvuBoz6
Yj6JK5jnS2/EOrnsiapwni/Egu/emtsuLiXYyjzUwF4L8if+djw6RDD5tNOt
HbHgftSPaeUagrXMAeaqrTgsPznhMxBcY2rgnhW+HOcUt56gKFR/WZtgQ477
5W0eE0FP2+ync//ZUDl8rT/fRpDJBDqQ1YSY9tk/ZpsJHq2mj2t7m5BQpzmr
aCVoZgC2hNqReHV6S087QXzvD+VzxXZ0CyPcf54m+B9XT5Lu
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#13"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtU3tMk3cU/dIiFhCMjMeYMJERohhQGOpUSs98tLBC+/1AwDAFIRgfQfjE
+qpYSitSqQjYt4OJLASKr411SjaoKFrYshA1qCiZGxplRqOpRrQSqF8TbnJz
/7rnnnPPvQuLyjK3cSiK+oZNT/2o2NUj020StIwG2CsSGEF4XvGaAmYlLMtb
kwaNgGhMHhTPiHA6Kr67/YIQfX+d3RCiJ9AfiQz5/H4a/on2rgpmcnHhXEr4
kEMMD15Q+hb4T4kDdcEZ0JaMT/roCxHNt1vvektw2mKx+KiK8Sixp2miR4IO
h3ilD7MdO7RepiyxFJffTg3z8ndhbCJK1tkrxY3In8t56btxYjLz4TV/Gs9j
EnheEQxS7uX1TiTRYPi+97n6PUihK0Qrcmi8z3rSxvXbi4pLra395TQ88rgq
GS6/ZGwntDS8qwzruK59mBJRyvVnadSZSgO5zAFozcskMhuNoIuiMc74QfQ9
csTW3KTRxBLg5MtReEUzeHuYxlejLgXn7mFserpgjvkxjU7nnQxO+hGYrVav
ea9pJPDOh3P6FeA3827v/Ehjc/31d1SEEvMMi28OeBE8afvhBqWvwn/J0kHf
UAJWznmlVIVZEV+vjlxA4HGD8lOjvaM9tTmGgKUjVzrU+M3ftvRUHMGbOxlF
lOooYvVC55wkghX5v6cp+dUw/Xjl17DVBIfYBVGuakQPhwX0CwgoTzA1mFU3
op77HcF61pDKJRoE5d5yXZMQ1IQ8GHI/00C+r8lnWRZBQFxXs3tLLYriE/2z
vyfI7P6yujJMi8K3f1qCCwgM67Ql7mEtYuKtoW1FBJ57cYvrwEVnkmAnwdan
t6IqZ5/EA862hXQJwU+sQe7rJ+GX3H0xuWymP7wBxpbi7C4Zy//4t1uvyhvw
Knu0V3CAYGTofVblSAMSV6mZXw7N4OsaERZHHUxVENjPfLH0qrMR5TkbRxjl
zDzpKbxIM7WoVTPzfHWQdQyk7j7G6mUPyr5Dh36pb4FQQ/Bs0upUOHRwaj6T
BNQSxLILmK7SI70+jy6tI/ibDfu/eiTk/c/j1ROUBqr7FHwD5ptrx3UNBF3N
r9unPxgg/GNg6KiOYCNrqD3HCBdvQ+gL9i8mFm2uV9iMOLa2cLbQSGBmAVIC
Tcj98DzGaCJYZRvcP11mwv7GnHejZoJPbuKIKw==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#14"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cUvmuN3kKEDVFRq6MymWPiwgyg2Uo/VkxBqUjb+xth5THHAE0t
xQfKw5YWWSsVW2mxY4JEpWEsBJWQZTNLQSbIwJGOgeI2XFQemrEoLug6tna3
CSc5OX+d73G+I9hXJPuUQ1HUdrb98x/tge+O2DJEAbd8PwecUIn4mXnv5Wji
se6DTY1LBImQPCgL3aqR4NYTcW4yNwU9gxd3rrKngwmbv9ZvlmLijaX6lZoP
ccfemdedsBd+vNDULEiC3O2xknSYVTMLPPvH2C+LFtOBMnzR0NDAM+Th8lh3
6v2LMnzZvzuepylATr7wWPMaOb7+679ROvsABJzi4lfK5bgZfvUQnXoQ29TV
nJ4hOZ5ExtBL1mtg8rw1MRCsgEYYcJdrL8ZE7KWYyRQFXsofObmBh5Fu/ON4
WIUCfntcwxG8qd8Z/rhVgaX6ejHXcxRXDDVBpcMK1DrUIVzNMYz3Lu/reKZA
aIfkAWfmOJIdCxveD2bQyArgZJfhYGtW25UoBhG/erScsXLMutUFFWIGX82N
SDmpJ+C1nY6iMhnE0O18zvdaLNtDC01qBkpL7zy1vhIyWO4r9AweOc/fpOx6
PJ057665xIC1016ZZsBs35bE5GsM/GlQgVVwCsOk8y4GrJyyyv4qNBm4qo4h
Bs9HpPsow0lof0vC6bsM4rKvp1QKq6FSdsS1PGRQyh6I8lRjMn8dzfuTAeUv
jRFzA1qux8cgiQ1E97YJSs9rpc00gXHVvWHftAnPq1omf3iVICi6s8mXVYPe
BMfqkdcJZN9sqNatMWNhKiL4RiRBvdis8o2accg6eIFEE/j/xbe7Fh8JZkWW
HQS5U+6NumVnsGXC2S4UEVxmA/L1nkHcVZG5LWlxn2+FQLp/9dAegrhTibnd
ZVbcHny3ziQnGB9+KdeNW8HP+SR6RcYivu0sCsIjljfmEria177TPXcWm2dv
/NKct8iXVodd/Knp8sJFvgAbPmvra+wrIkhiH8pVaIOztikt/jDB9ELbnLbf
hm9jnZmnSgii2AN49XasMJYEjVUQ3GbL9bsdmaMrr/+kI1CHVPVohfXY5c0e
6DIQdDY9bfX+XQ8lNtHbTAQKNlAXOYfE2PyT7hqCF5uVFm3XOUy+4P2bUUvw
OQuQEOLAsNVY+KOFYEfXQIm3yIEWYWTX1jqC/wGQL43g
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#15"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvWmZtiBkaWoTDbr6IjiGBqMyxhhng45IK2B5tff+WpXAUEC5
AkPB2RcDm3W81paXY8RsTOgIIQTN4kxFaYgiIwbBZ9AxAnVubOkYCKJ0t9Ev
+fL9dU7O+c7ZlFWozOFRFLWXW999ocu7UmJVxe4LM8ukAfmxwXR29EE2EuK1
Hy4fevYxEibLxTvYBBR2Nv3VUiRH/9B5mcR2AHU1jXOu7hRMbF1lXMtmYvbh
Td6tXiV8fGKFBm3FqeOe0DRYCtzLQtthOEeDD3TGp6OlublZaMpGbNKe93Zt
yUDHoDxSyObidtmtC0fvZuDS3KsxgTYP2uc/Gu8ezYRL2lMkUBxD699PJ2Om
M/FHSITAbwOLzOG0rwOTVGBj/O/xbSdg2hQ4Ft6hwvPUqXZ+QDFyjlklxgUV
fPb4phI8U4kid0erscpoj+MvfQ7RcMm2uZNqVDceF/HZk1h8WRyyplsNcXfC
JM99CpohodT8WI1vOQE8bTnuO/0uRvvT2PJoSccbP43/6KLqOxE0HJ7R/TzF
GSycEKZMpNOIEHQF8wZ0qGpTykdKaZDa6/PUBgM2O1RlAjuNqfZzLspmxNBA
6TX7EA3OTpch2YTZNHVh3u80fGlQARW4ND9vq12kwckpNwxWAE+T8iMCGfw7
uj+LMn2JEeV3qaVSBnu1l/cZYirhLi8b1O9iUMY9iFqqxOm39JL8OAaUb9iz
eELe/0KexSCeC0QfZkZo5Ge1+SyDs5IHI94ZM4RZ0jjXGQZB4b2tXs1XkA3Q
QdoGBsqfN1bq11kQcCe54PJ5BvY4S4F3zAK+ZZpUdTHw9cUrr0Z2evi8vZ/B
oenbm/Wra3AjJ8z5500G33MBea/XwCPbbh0ffYMPrsPMNddB49QbvLUeintv
yx9TBM629TuveuqxPihXpltNXvMlf4M6YT2ZCCSv+fyt8Nsq/sC9jiCeK4zz
iBUOk6Oq6R2CmeVOj27QisQRjUCyjeBdzuCK0YaWNbnphp0Ew9w4n9iAlF94
RbsJjosq+nUxdhTofu2JiiLobf3nwsqiHSt+UyGpnxCkcYE5MxrQpnF3dHxK
sBBKanV9DXD0DfzwKJGgiSP4SNQI/40/9cwmEUT13ShdKWxEu1mR+JuS4H/G
vICA
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#16"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9Qk3UcfntnNqB150SvaCSip26YxJmM9ICncO4WA3Rue78ikPzoQo7w
JdciyLEN36ZMoLXhwgQ1AxHpF+7Qg6Tdoh1lliLWZZEBh0ZyAUk/EGG9u+Nz
97nPX89zz/N5npV5+zQv0xRFxfMbvPdNRZ8bnCQ57eH8XmlxUbIks2DLS6wc
vZe5+fIbgHKoPHwDq8T5c25x9TYVvN+cUix37cCjV9dvVOxKx+DqxZZlLIN+
Se0Hs4PbEeQLV2fjwCcOdfdSDezFd2ZDXLng+o5IpA80ONbQ0BBiLYBwbUUU
/dlOtPpT5SHsK6gYe+h+1/NadN6bGxDmFOGrXH9EzEUteqM+fU2ofhVnT+2e
G47QYWxNnHBRJAvF6B9cSYkObGLojwJXKdqinySiTh3+3TnSLAjbj4wPVeaV
0zoE7QmsBijjs5sNMj0WW+pTBDOvY1161PWCTD1q3CViAfsGjPIlu2hOj/CP
lUP0nTL4Bqe3rD6nx3FeAJ1TjqqNqW8br+ix6ucZE32jAnm/51oPjuvRNtWf
RqsPYPKuX+YVMogTtkvoL024HL2hzRbNIKvO9zcVaYZcaa+QbmYw0vx+L+Wy
oEx1rHUmnwFvp92cYUXX4VJ9nZFBMA0qrAoTsUbtNRsDXk652V8FiafbN+xm
8Fd/Wh5lPYg/X/xNPNzCID6nS2VO5GDZvO3rMQ+DN/kHUTMc9k8vi1jiY0AF
h7UhT97UKbrJYCsfSGXMIdxVPJhcNMrAtvyn7wK3D8F56UrKngkGjz3d0RjI
roZo/d4iA02gufgUV/mEHb+cd3e8EEZQn2IvDgzYsXZ3l/rkUoJgXwKpNXhc
9GyLdBXBntGr0ZWP1OJWy46mfBnBaT6ggK8WnaeNnCpuAS95B7LrnCg2aQHv
dCCpfWBySEvQcyIi9ospB/rtvyqozAW+jHexwvFMwnjOAl+oE5su7F2TUEiw
lS9MT6ET1/ruJTQWE9yePTtl8jsR6SUrbrIEMt7gvMWFFj19YaSM4Ft+em65
kJz+/SbPWwQl4iqvKbEecycOSwvMBB2NE2fm/6uHpnW8u9BGoOUD69EfxUdp
HfBWE/yzLqvO5DmKS1lNoXM1BO/xBEliN0pPGnRRDoLnPH3G+X1u0Gd+UMW4
CP4HXreAaA==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#17"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1Q03UY3wvBGPbCRERuJBDndVB4HB5UBnw4ZqiDQ7bvD72EtYCiDGTQ
DDZrG1sIMnnRbeJS7DhuRygULa480IGEJEpWC4XgCiYFQS9uRQhybP12+tw9
9/z1fJ7PyxORXyp6g8VgMF6g2zsfqA5dlhsOpJSFMH+UPS5P4b9auPM1WSL0
31ql68kCpDuUQbGydATMURGxtUIM3GjdFWzMRjvn+IRzdxZ+jvKt2iTbj4Gv
9jVIRvbBixeUkQfeitR9viEb+uL5NX/j64j5TBih4Yvwkdls9tcW4mV1V7y8
RoRPhoWJ/rIiTH6jmFmeFOHLf9fHOJJDMBWlFD8IE2MovLuck1GCq/pzPS4i
xsK2OI5PmAzdppJfxrViyJK442xjGbKd9sr+DjHui2ct7IB3Ebqh0R51Uwyv
PLZWjj0rDsvW38XwrTKlsVePYMB3ZLeWSVDffJjHllVgqf3avb82EwR9mu5g
zVdCnmreORNDcI4mwJIocVFeeuxyEsEzU6sq1u2juDYV+o49k+CCy57JyvgA
FdVtZfm5BHGcTj7raxW6C3MqWt8myG0c/I8RpoGO2bSj7wjBrOXsEMNYBcWJ
ugWunoCW06nJ0kJU2aZTGAm8aTACdEhJYAYltBDQdJSaYR02z+ScEVsI/rFn
5jO0HyJC01p+t5MgQdK7R5NUjfVda+POLwgUtEGM1Wps0wZG63sJGN6S1WDx
Rl5r/TCBgA5EHVOL7/wKLvmNEtQE/3TLM1eLEcep1bgfCJ543triyavDc8LP
r3dPEoguPV2t3qJH2RX9iaemCUxp+mLPmB5DF628xFkC7794hPVYstzcsrBI
IP3t+0i1XwO4nX8uH/2boI0OyDPYgMix1Dd/dT3a5zehK81HkLpC8z+eKu1X
NiH2QHjvS2sEE7fui9UTTVCGh0xvdD/CN5xE8h91oSVsCraPQ7f3u06iQ2C1
OR+jHt7LOoW2WeeOgxzq4T2uAV2SvvTFDRQE9EPZ3jIg24erCHySwtxah0s1
bMB2+50LUYEUomkD3FVGFPUdTNu4icIoXbZpI3hX60zOYAqHeboBVZIJU3df
GbwSQsHacq/dvWICU+64E82nQOhAbTmnUW6+HT8aRmH52dxGVc9pHGMZ90u3
UjhDAyTzmtG89/2Z+XAKL/Zcf89d2oylsfiCgkgK/wOsypey
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#18"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfb6KFIgOES0qFHVK/Jg1GIUYbT2zSjOgiEWhfU8KcxKHY/Cm
sjnQ0o9VCBURWr6kKoqIOkKc1DqrQwRWiRJ0iDabDqIoojIZitPCpHsNu8nN
/XVOzrnnzN2WIUshCYIIY9d9R1Q7r+4xyte2V/1ybuonKWsDqe2rk5hw6IPF
Uyb8JYTkUZa/gJGgQJTb52iVoOnmiQ0zTJswu+kP7WCRFH/On6SZziTAN0qR
7euIhZvPPzoR5fZLMbFJMhjSno16mT7HJdFch2dhHI5UVFR4abejZXXa7BDN
ZpyxR4V7MTvQcFHRXh+xBdY3H7q4yp0IN7y92P9iC1rnnN/Fjf4a1dcMHeWZ
8XgeEsqdGMTAmm7zjxiIByP0dnBM3yCbV/XjiCwB7+J6azg+u9EZIHhxpS4B
bnsc7R6I9F/85BhNwCRNiZjjzIQ58rcbvHVyFJSl+3GY72Bst3Q/UcvhXy95
RD7bi2POq2TSZTnMrABSmYWWGLFHxoAcHz9wqsh72WiYGcq/O0uBc0OdUjJ6
P2o9FggXblAglFsXSLaoEDRynxz6SoGthc1viSA1at+U+1QWKtBbU9lKmDRI
6bTa3nUowNqpU2/UYjnvgH3NSwXcaRA+OlR3y2IPelBg5WSp7ToEd6XaAvgU
XndKtxHaH2CwxfRMXkkhTGn7TC3UY6mIF1AcSeF79kGEU4/U691+N5QUCPcw
uajTSi1WHYX1bCA5S/LQn59BVpso5M74vcPVl4e+3gmfnjpFYcrSC0ddifnQ
xQgWCJopyH7m63NmGpDcsCbv/m0KJWJDmqvLgJHKy213H1Jw98UVVQCB7+1b
/w5TSH56Z16O5yEc91zWJiRoVLMBuZoP4XzV47gxb3ocH3gY1pyVH/jB9Dje
WITH8zLNVetoNB6ftezaUBFu8ZNe1UTS43wbi9HPiz+cKPufz9uI9w9Km4eT
aaxnC9P4pRG/Xo/46OEOGn2jZ4dUdiP+HtAs16fTWMwaHNOYECTuObMom0Y7
O409JoStOH1zsYZGup+uSSUsQcjJRanOAzQuHB2sHXtfgvw7g03cYhqb2cAa
40vBZ7peSsto/LNwa6HKUoq04fp9qWYa5SyByK8MsUqzPPEEjVWWtm/HMsow
baJFsuQ0jf8AslKJ/Q==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#19"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWsJoxb5QVqcDJiAYbAFEI3gq+PwGIQBAwsWeh/VCQgaHhdE
rQgtLet8oDBsC4ICGwuCxhlEVwgxRcE1SgQJqTEbI5OZUTEkgszJQ6i3CV/y
5ft1Ts75zvE9WCTN4REEEc6t4y6pjtwt1WdGOu9t3S7Nzo30IrN372cjUH+4
YGowDYifLBOFsPGo6s8a+bU/AfeGfv7aw7AXQ5Lb0y2TKZjY7KwRsxlouj5T
UfaJFA4+URKDnN8CLDm30lCdb1sWGL6DZ/Jz9qeZdDQ1NjYKtNlYOZAa4Gbb
h05LYoSAzcVI6kP5cLcMpvkVq4viCIJMT9pHqAw82NRV4pJUgPTCls3RrzIw
HRDm4uTNIux8heRtViZYybpnfEMxUorG532HM/Eu7UU7X3gU7257+L0OlMNh
j68thc/sqGngpBzOGmMMf/EYPtN94628L8eFhkJ3PnsCLxN6I3QfkRDdjJ/k
2ZSom+7xFO0mcYUTwFOUQX7VVSYuIuE/vqjiPT2Fb63/bEluIXF9biyZl1SB
IOZqLvOIRJjLDS/eoAqhO+KOPp4lQdcOvCW8K7FNkeUqFFN40X75AWHQoFQy
WJyzjwJn50ZlihbLF0tObCih4EiDEFahtoPcMHSeAienrNJSBWWPdqarncKb
seSDhPZ7/BUT9+fCXQrhir6ESokOe5aknz4ao3CSexCxqEP0kwWfWBsFwjHs
aSztNMm6XGnEcoGovzyDgpfiSKs3jdMef4zYp84gxqNthyCEhltwd7OdOYdT
wrzc2UQa0l4fnXpjNV6pNy0MyGkYY6rz7dZq8DP8LLZDNBx9sSdeQFvw8alM
NY0D/476qT+uQZRu1Np3jsYvXED2gRqQ27OUTcY1vNeP2NXTmf7ftTW8vg7D
prOdz4ZpmFs9Q/vn6hB11r/8zdM1vpSLGBJtbTZPrPGt04MKFwjKZzg/XGHM
eXrUSmUhx+ZpTC1fm1NZ9Jj+3DM7dInGF5zBVY0BeXFuE/PODB5zY/7bgN/L
lU5O6xkUulfdU0mMoDuer590Z9Dd/LpjdcGIkgCiRujDIJ0LzCyrR3FByA+M
P4P/A+la1Z16XBKTh3WBDC5xBF+5N2AlMtxfF8xg552Hx1eLGtDW+l6j2Mrg
A6ZYgaQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#20"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbZMeQxxFCQ1lDHrfCEdOAPihp5JJygVImW2tL33MgJCBOVu
IArG0lIIbg0UaSugkE3FoI6NDXzFIBZUsCrig2HGRMWinROjYHQiK/U24Uu+
fL/OyTnfOZ+k5SZlcAiCiGDXdd+pt7bnG+VrRoKGnFa/9DWBivQvaCYSrxqz
347+Go3Y4SI/ERMLndyulkfFwXL10NdzTZuwo6Xies8fCRhaMFPrz8jwcZpP
j+b0Jrj4/CQkLMHXeD+XSqHPsU96mL5F+zNCNPgyGQfq6uo8StJhj8u9khiw
Gce64yM9mEzoei8GSjxlOP3K0e9ObUVSlah55YAMl4J//95dsg2U9UOyVyfH
04Xh7m4CBi+PCIdl/BQw0Z53uabvUHvZYdMdTMF/UttRrlcehJ76kEFvBVz2
uCX5EH85/j8vT4GZWnMMd2IHRJUptLRXgYqa7b5cZicSbI0zNgQp4fdb7DDH
vgsOb8Wp5Ewl6lkBHKoIy0btKw3HlRD+PaHm/Lkbbi2pZx49VuLE2O2NHMke
qNYurJ4jUCHcvTmQc1GNsFuHSs8lqqAydL0mBBrYfjHcy1KrYDt68BJh0uJu
vVt91S0VWDvNmsQSDEpHOjvfqOBKg/DSgWz9SJDDJ8HKKdJ066AtLMjuiyIx
fntjGlFSivgRR4JQTiKCOrdeE12GR5/rK2rzSRSyDyImyrD8QXmAwkCCcA1T
Dn6M2PSNhYSYDaQ4ZC/2nE8K6RsgUT73rxvOJ3sR3rYq23+UxOzQ1gYn+SOU
jT2ZGTwKSWeDyor5erS8bhPUfkrBHKPPcfbrcV5y3/E0goKrL874CoQ9zJUv
kVFIfXxzfvGsSkTUi9KWb6FwhA3I2VWJtiYztzp/Gh9YhedxS+3Fhmm8cR/O
SHga3gUKHT/N++zC2D780JDnP2Cd5kusRmdNqCm8f5rP04iMRXcarHYKYrYw
HVlGfHWiVzpnjMKTyeNj6m4jni24r3B7R2Epa3BKa8Jsb8b7Ay8a19npeGDC
NR9rKp9HY7uvzqKONsNnMiv133k0WhteNE29NaN9sim4bwmNZDawjs37UXhz
2PJPGI03i1UG9cn9WCeU9l+NpFHLEqz2rUFBTsDQztU0ok5eKZjKrYHz8IrI
cTGN964Xhn8=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#21"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlUntMU3cYvWt9FBQUxNcENikyNl8hEpAM8Iy6VEaJUhEZ9vH7NWCVsXpB
UAd6oWVIJ0OQXuThA5uFiBs+4urGJqkPmkocIYiSsTAVgkrIkpHiY+uI7W7D
l3z5/jon53znrNYdUOaJGIaJE9Z3/+Pyu4st2Vvq9BmGgaK8LaE5uR9r2Xi0
jEo3OeYC8rHSkA2sHLHJwYFzsz7D7fvWT5fxGRDd4canenbgceQ841J2N8qO
Skde5e+Ejy9EoUZgc19DRvEu1BRMzPjxFD++VBZsDtqN1paWFj9TLjJXNO/N
INnocKbF+7F61PfLqm+UfI6fXr59JNHko9B5YVu4NgeO968VSRRfYn9H6mBi
1B5MRsVI5oSxgrC0dasG94BN8v9dzBfimJTveq1X4Z+d4+3iBQfxw4OUCOdf
KvjsiU3FyL+/zX2eqDHP2CgTu0uQG9DunOxVo7bJECxmD+O8dbm0IUqDkCvy
MdHEEexbvVYWWabBWUGASFMKM6+XjN/TQDri5kRDZVifdDF+OECL712D6SLF
Mezte1I/mq5FjKQzVNTDYfI5XtnMWqjq7r5mwiqQSN06l12L8fYzDoY3oq9z
yDawiECw01mx3QTncOvUwTUEvjSYBZW4c/zbIGsCgSCntMJZiXBjZc9RBcH0
YLqOMX2NGHbS/wMNQZzm19SKpCqYYh3emwaCr4QHMe4qLL2UosvkCBjfsNUI
uGo98ayVYKsQSPlaM2r56MB3Ogiql/3R731hxrDzwYovbASB66+f86pP4LKx
/6H6NwJlV3hV+coa9LYpN3uGCBplNQXeRzVQrUx+smqUwNcXb1ot/iTFE9PT
BOT5QET5/JOILJfLumcIvhMC8t49Cfb4Q0/EHDqLD62Hflc2O7aEzuItp/DN
1THZjY0U9rZ3N95ynULCz0o3E0dn+bY34D0/Zd3iRDrL52+By7Awyyyn2CoU
xr7PgpTDHewbBcWLmUsuzmmB7ZOe1FglxUeCQY+RB+iHf0erKPqEsT/lMWNN
3vCMUBiCK29zSY1wLFwUdiSP4vq5qYuefxshHmkojDFQZAqB2bNOYz4bLcsp
ongTrarjbKfxS1BXm+4QRbNAkBzchP31JW/TSikSbL2HPAea8NRY2L2co/gf
Q6yBow==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#22"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvWkJ4xHRNaUbUB/VxciIr0gAJ6WH8JpaVEALtr/LNtTJXMUL
UkHYSikwjJUq9NKubp2iafCBBg0wY0xFRwhzgEog0xm2MCMNCm4FHJQq3W30
S758f52Tc75zJHmHMvfxKIqK4dZ357QHbhWbcmSLOsrLRXcOysTKvZs+Y2Lh
X+Ia/TMzCWkjZcI1TBpCg0ISv5Kno/NeU4qIzcCmHUNJZ69lYPgj/8pQJhsv
q1lmwpEFH59QTsNfKnw4E7cLBrXTE8h+gVlJV/BChQKnrVZroH4vzq61fXIz
OhsXurfGBjL7sYE39/iwMxsdU28GA3IPYOey/FlBWQ66lrUWBcgPIqr3SWnt
dA7GVq4P8FvM4GjiGUZBdoORBv3OZwsxrBCGaNp3YybrqZ0ffBgzCcMdvTwl
fPb4+mJ89/6nfsZUJfwrG5P4bg36xCWtX+qVqLMUCPhMCVLXPbts/1kJ4dW0
EZ6zFD+9SP07y6nEj5wAXm4Zjlsf2VIEKqx44tbyhsqh6ZuaW7lRhUuugXSe
/FuE/2vyVBMV1ge0iHm/aDHxOh6D36hATt59RS3WoVC9IPTIaRWe2n/oothK
1I55Isf7VeDstOi26zFtXdODURV8aVDBVXgdJx4Y96jAySnTdVfhzokZb8Qi
gsmB9DxKX43kR9vip5cTxOTe3KyT1kA33tRgjiY4yj2IctfgwuTXrqUpBJRv
mFpE2NqMW/YQJHOBVEQdA5XwYaSokKBW9LjfO3oMrfVjW5ZoCUJWX7d56eMI
/6C0WWImyLyxpKYizABZmKU9tomgMcmg9g4aYImLVHReJvD1xbu1Dinnl5oz
bhN8/uzB8or3jHgVZuOrewjOcwF57xrRrHw+JH74Di8+BfWkUEKPvMOb6kF+
bXnhfkPgOBO+9rarHva8uoUFfvRbvu0NuJcfMXAuiH7LF2RCVdFLGRHRSOYK
48g34X5x8TZnBI1Rz0WXttuEqOc9fTIJjY85g/OVLM5pWOOeKBq93Dj+YrHv
ypR5wzoaBYKqTq20Ef2Uxv5HNI3rtn+a52cb8VtDt6NdSmMnF5hDYcaC+MyC
iUQa/60iJ7VtZuxqKynip9L4niNIEFggr4nJcW+msbGt58j8IQtGpAb2QTqN
/wF8gYUN
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#23"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbakFnC6kEIGFnzgUMDpQEXFFI6pFrQ01Up7fzJhG0ExFeRO
qmNUSmlFCQQrtgWrNOADnExRGcNHCALTapAodjJiiDLAwfA55uYElHqb8CVf
vr/OyTnfOfNSsxTbORRFRbHrvuM6dbPGTGJ5vOHyvHnbY4VJaWu+ZlZi2TX7
Z+rpIsT15wqWMHF40F0cWVovQWvHyfV+ls2o3z+nLeK5FI8X8Ap8GRqBWtuH
cZMcbj5BQjKIUaKJnrMZJRnDE56Wb6EdSOamhyhw3GazeRrS4Hg565TtrQI/
OqQrPZl0eE28Ee+q2oKmNx8e8lPUMPmvGfo0PBE3517aw0/IRM8opPrqRIyE
RPA9Ahncv70h9JSHEozIq4dr+Q4BeU+lvK+U+H/LYA3XOxuizD65olYJtz2u
QYMu5l180V9K8AqsYu7YXmyVDMSvCFahtGK3D5f5HjtHzj05QqsgqI/r5wzn
YCJT8+roQRUqWQGclFxc8j8Yxr2sQnDvmI7TrcV+3/qYAz0q1I06ZZyEPDyo
vcitHFchgn9eyPlVh2yLsvJaAI1tpvb/qEA9PBrSBNGraAzWnLhJWQqwLqat
oyyDBmvnvF5uQFj1v1eeGmm406C8jZDnzL5qtdFg5eTqHUZ0Bkd+ef8CjX+c
slTKcACWhE1jv7TSiEq5vkEvKkTkHcNatZPGD+yDqLFC5PwWLeYP0qDcwxxC
SGMzP3UawTo2kPzwInze+5MsbhbBIb9H91xDRYiq1cxQCwlmftFgdyUX43GH
WHtmOYHialBhvn8JZLe0x3+PJbCKSzJcD0tQcXLXHu1GAndfXNJSOEfsQetT
CL75s2t+/vTDSKrxNWvTCU6zAbnaD+PZqsUr4pkpvPAIOtsXSm7op/DmMvTP
DJXcshO0VAUsvTFaBo8LeZcVZ6b45EfROOQlq66b4vMy4+/iu8LiJtYPW5iW
nWY4xOk/L24mGJo4N6pzmNH0MmdjZRtBGGtwssCCT4LqXry4S9DJTkufBZm9
/a3OLoLdPsZWnciK7B2hS03dBA3212cn31lRNk3WYX5CkMgG1qIqx3VjVlXf
AMHbRdtMusZyzJg9P81zmOAYSxDjU4Fn3klnfZ4TrG68s28yqwLhfoI/3r8i
+Aiz04PG
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#24"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1MU3cUfXudUGjUSGgZytfq1GUMnThQguhJAJsKCBTo+8n4cMg2UgUf
gsjqKLTQQayWj7awIijq3JhiMepw0405ht1SlilGZxZmxGCl+g9WAwqV1teE
m9zcv87JOfecd4v2yT6jKYqK5dZ751SKXyoNZOv4/9au4E3FW0Nyi+ML2Y1o
jbCZtMLNkDxUBq5lJaj01aXeCNyG67aTySJjJh4sjlG6pSm4/56PWsgyyNjg
K3k9tQNevsDUfPSuoy99MpoB3d5Jl5/xU8R1a1+LxzLRaTab/TTFOKdcw/ec
l6HXmrLRj/0CPdtHKvJ3ZmHgxfwdfoECYdGR4t2TWRiOuLCfn1oKVbyu/63C
bDxZvZ7/diiLiF3zDvGNbLAJ/vd4xnJYq3vGdobm4GXWxBmeoAJieZA4Q5ED
rz2ephJVt4TjAksOfNSmRN7sATiqeuZDn+bgaEdZAI89iJb0rqbfw+UItEge
0pPVKI5yNTjT5ejiBNAFSszE9pZUH5Jj5disir57CKOjhTtcp+Q467ydRqfW
wGpfFk3/Kcd6fl8I/YcK0rlFQe5JOfKah6ap0DqIHkn703wYTJw5NkwZ1RAe
HxlesZkBZ6evLl0D83ZL7jvZDLxpUIJ62NeM/FiiYMDJUdZZ6/Hv9Ofhm2oZ
PL+dVkRpGqD/6lV8XxuD2IKr0roELZaWR0/Zv2XwJfcgalaLrx1rRfQAA8o7
bCNyD5bok+4ySOICqY1sQuLqa7mmCQaNov/+8TxuQqksWRbmZLAk6mK3J/8w
Gto+HhL5E8h+CtPWBusguB8nOykkMCXq9nru6OCJEZzojCDw9sWTchSdp2a2
0TEEu+y3xLW+eiQWNV/RbCE4zQXkGdIjs0ab3C5ZwIe0wGxRXGkjC3hDK7pn
XNPaKoLBE8vX/eZsRdlAZaa0ZoEvvQ3DkaVOW/0Cn78BrGJ8T1ALQRJXmMES
A8oNgnsOE8Fj1w9OldUAy7TtkvYYwQecQbfaiLmyGvWH3xH8zc3gAyPsHz0p
iD9HUBZQf12VYMK14xX68AsEF7unvne/MmH5hr6l7M8E2Vxgg/J2JDwLWzX+
K8HM+3nNqsvtuNmfFhw1RPANR7AloANXHVQjsRLEXf6ryr2vA0c6857tthG8
Aeu6g3w=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#25"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbaKrUSipKLMSpguSCAw0CgBVjiipGFAARki9D4m01gVyx3i
QJQ+JTgaHqWtHTAmjLCBio7KjCHCmJqyLMhTcRPrgk4Z0QXwCRpab6Nf8uX7
dU7O+c75OCdv5z4eQRBbuXXfN6qDVwtMu2NvFq62X8o7ECvO3hvNsBHoW0UZ
623bIJ0oFoWyUpypK2+/P56I3j+b4n3MaQiV9lJzkWlwfOKhXcVmwqM97q/Z
b9Ph5hMlUQibOPfEFxkw5E6+FZr3YMXlcaPauAt1tbW1Qt1eWGjtXVlDJlrt
iRFCdj98Nu0b9izcjcvPF24J6IM4+yBVUBmchRv+v+QLkg5DNWxlmq5nYSog
XLB4HYvpwKg1mvhssJJld/jmrzH0b1OF7ddsvE5/2ML3PIJGReyh2tVyuO3x
dQWQ3HsdYT8sh4fWsp0/fxQdA8p7W7rkqLAqvflsIS46FHuKnHKILkgneJNF
mDn5tKY/msT3nAAeXYy2mxmNm4+Q2DA+r+LdPg7roChF3ULi7OxIMi+pBOV3
a3LJURLhgvNi3nUVVHbv+uwFEmTVtZfEOg0ySTby2QYKD1vqbxBmLVo1OaKj
CgqcnfOaFB1Mfp//RJRRcKdBeOoRkOYZe6iZAienWGPXI7kv/umTbgrPRpJz
CN1JTE/7VdnGKGyluxI0klIIxc8X/vufwjHuQcR8KZIdjplLfBqEe9gyZLby
fEuDaezgAlEHn4I+Uin/XUKjzOfvAdfjU8g3OsNdMhpeIbYGF1WOJRZCO6Ck
sfOKX6na1wCddVOBroSGZbsh13XLgOZRL2WJgYa7L67ECsS0Hcg/0ULjy0dD
69VLKxEwM6i1dtBo5gJyXauE7sfRRxu7P+DF1egKC5b1j3zAm4wIiursfDlH
o+fMR5/+NmtEgLJ9zLSIec+XUgNx0MqY+0LmPd8yE1Krm6LLfRns4ArTozDB
le4KeeHP4PHbtlmV3YTE5V4hawMZBHEGnVoz5qfCF13YwqCfm55/zEi4qF/r
/xkDpbe+VyWxYDzu3Jg8joGtYfpn55wFMp9qa5SMwRdcYD27TqP+TZ/iQTqD
V4FklarzNKST24qoLAbfcQQx3lYQKzcPt9MMIjv/+MaZZ8UPjjzm9lcM3gGO
r4eJ
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#26"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvWmJa8G50aDJKjoHTmUqs6mzLAtwBpiKtLzBQu/9zRmIpENo
oTCp80JbGggdoLblNVDUII6AMYimc6aTqsSQuSj4GPGBiMBMzDZwol0H3W30
S758f52Tc75zPtpTnJ7PoyhqG7f++y+ruaS3qWJ36ByyO0nfxIbm5n3xlVYG
+XVhh1kXB/mEISRSK8dAotQY2ajA5eHj21fY0+CZ1+cZK9LwcO0S43LtLnz5
krXx+zLg5wtRMPgPbMndHVmwFs54hfav8ZPi4MI/pmy0tba2Ck15aFkXW6E3
7MLpoSSZULsXVsdRAxunwoUXC7cFRIPusICxmhkVrq45WyJQ7MO8ujeGX5KD
Z+skgoBVWkQFH9k6PpMDbXTgPb5dh/Y+TUa+MhevMia7+EGlWFjr6nF35cJv
j2/Sw/tIqCIvcrHE6Ijne8pQ4JamiKLUqG8uEvG13+LnmoZTaWVqhJyRT/Bm
9uNp/+734nvVaOcE8IgBc69ia0cfqhF+38Py7hzAd8lZo1cCafTMjih5ioNw
nhhM75fSkAh6Q3lXWLz/uIGE5dCgG90vqVVVKNtQcMN4gMZk1w9XKbsRY3Gi
4FInDc5Ob1WKCZliy/dNozT8aVBBZkTInIm3ntPg5BiqhswYHB4VZwUwmBtR
7qFM1UgdrNiuFDPYRi4mVkVbYPvbUD8eyaCCexDlsYBaunXZ5jgGlH+0NQgq
5z3X5DNI4AKp3FiLkEu6KWsZg5oVY7/5pmvRvPHmluFqBss293f4mDqEHm+x
THUySHeutlR+YMVkZ0z5RB8DR7y10HfbCpVu/nXURQb+vviS6rEv+NBnEbcY
7J66GVb5TgM+Lu003b3P4CQXkM/dgDXhI9cE02/xoYdQWpftXel5i7cdhsS8
qdApJnAdE3/6y+xh7OxZvTc5jLzhSzmCtvbflW0R5A1foA0nC45K82QECVxh
XAU2HKtzdD6LJpj2/jjLDtmwZbr2iTSB4BPO4KLRjnPXJEvDUwl+5cY1bseD
x7rqG1kERSLzZTbaAfe9Qq9cTdDf8Vf34msHJH+4P7yQT5DJBebKbkJy98p3
z2gI5jfQjexAE4pi5li2mKCFI4gRNSNz7nxChJ7g84Hr5YvFzVif+mfw2f0E
/wOJu4Ow
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#27"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWsVC4pRAoXO1sc0PoPID9GxIScqVi0I9nHv9QGKQoAG9Q6R
zU5LoTbgOhRogYHUDRFErYYo4oZaGLrOMSJVwUeaMR5CQ8Y2O8CJVOptwpd8
+X6dk3O+cxYdOCJN5hAEEcau575TK+9mGujIWs0SWe3xpEjh7qTP9jHrUCBJ
/Jsn+hziXpX/akaMofvWrc1jUWhpq4riG3dCJHgakuIlwR9LvHICGApzieTh
7d/ugIfPPzoei27FpL4uioM+3THhbUwEs3DjGknhTlSUl5d75ybB3Ca2ntgl
RZ1Vss6bSUFG2B7vSpcUjSPvO3kJShxNjxfna2V4sLA+gxd9CJU6m841KsPQ
0lDeNBGDoGBz922FHEyEz3Ou8QtkPEq0rbosx/+y/hruzKOY1tOz3+GUw2OP
m5sJftXjTHuoAl45JZu448ew4mqALU+pQEHZYT8u8yVsjV16gUkB/+viXo7j
KzS116zVtClQyQrgJKjgWpr2y4kRBRbbx9Wcrq+hetGVZg4iccX5JIYTfRLn
187IKgwnEcozCzn31ZBdSN5u3EVi79nWMUKkwcF7ge1zs0j015x7QBhz0C4c
ajHVkWDtmDWxuZj1Krx+cTMJTxrETC2iG2e/C+gkwcpRaaxaCBlxsclB4r8n
MQeI3FN4rB2b0z1OIiyhaZsmQocfyiv1b3woHGcfRIzrIE7N2MKZR4HwDJOH
3/jCX+PWU9jMBpK9Kh+xYcXVd6Io5PFfPnIP5uMfO79GKaUwO/iGyR3/DbrX
WE93pFGQ/jhfly3QoxUvRs9nUijZpE93d+rRb3I5B9QUPH1xSwrg+qkv8KNi
CvsHbJ9kzziDoOnKLYMVFKrZgNytZzBn/cao5OopvLAQs/otPMnNKbyhCJGl
gba4DgqW7z8OaXYWQSB6lnCxa4ovthgB9mexTfYpPh8DNrjkA+EO1g9bGEuq
AUzdgoarwxQGJy471VYDfEc7Nv/lpLCSNTiZY0TvcH1rzwSFdnYsfxpRu+zV
jnMEjcN+2hZ1RAmKzCv7gqfTuGH699Lk2xKk/XzyYZ8vDTkbmIUsxZ3XVdU8
Pxpvlu89q24oRco1W4Uvn8Z3LMEGvzK8p8UhIwIanzY8zJo8UgbVQdHvTSIa
HwC8Noo1
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#28"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWsJa8V0WjvMJmyoQACdC2pExOIxgIWAEh6F++BtJ8YgXBWB
wWx5yCAg5dECQovEKOIDHSOEjbohA8IaxEUbCCGwARIBY3CDTaCCdLcJX/Ll
+3VOzvnO2ZmUFv4NjyCIQ9xa73vluV/SNeSxyKc2X3YOnz3mQCt84lkvDK6N
qo+2AbKpbMk+VoZtS3JjmjEI3QM3A+y1YbjgVB8vU4XiT2fbvE/ZaLyG6Jp9
RxisfJKQWISVzFHFzhEoTZldFWoTkeQ2maX3iUR9XV2dMF8BtvVthnS7HHf7
g72EbDL+uvvYu8YoR8e/H4YEcefg254pGqCj0OfUelEQch7OuidNp4ej8NrV
U2DjyEI82jLZIo0GK900wtdegE276HhmbTSWI6ab+HaXIP/V60DNq2hY7fHz
06F+UVW114OEbV61H998GadMptSJMyTKalPFfDYT/J/CsaInIXkkm+LNZuEN
DN9/94yEnhPAi8tGn+xIuq+ZxO4xs5I3nAP3/sdv5pwo3F8wneSFXMGDj04E
CgIoeApaHHi9SgTYjE9vOUMhprznHeGYC4/dwXzFVQrTTbo+QpuHArXezcVA
gbPTkhuaD+CdWGKiYE2DsCuAyj2BjJijwMnJzu0vwGTyU8EnHygsmk4mEflX
odApks9voXEozhCUKy1EqHrHSPkuGt9yDyLMhXC5EanTHKBBWIctgsF51f1W
OA1/LhDVnmLsj78zO5pAo8h+9A/LTDE65XubA1NpiL5qa7DEluD3qZkfNhfR
CP/5i0LVZ6V4P53kd6WKRrVfaYplqBTN+16+iGmgYe2LJbgMNGWcr/yRRsKr
57tUH6sR21h222ygcYsLyNKjxnzr7Yn/ejfwDhVgno8t/ja0gddUYjx24hmz
SKOr8fOvnyxUgo1Y/kdo3uALrYI+yDCQYdng26TBYpFRqLNj4M8VpuusBjzP
5DVyK4OZ1XsLyn4NvCWugy/tGXhwBtfztPD2ERkUOxkMctM1oYXF0b870ZVB
qrigWymtxlImlXNwD4O2hr+b11eqcfjhnf2nDzKI5ALriqrBSP36fM9hBktu
MeXK9hrYyiumLEcZXOcIfMW1KFkea9pxnIF3uzFjPa0WpLHPsD2Awf+aQojJ

        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#29"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfbaMtVa2wPCL0Y7BMGZTVDDgAsWjfIUAQ4vQ0vceU9RoCMID
K5tVSil2MBkw11Zk4CbBZkAITnSIWitBA5P6STBKKCoSC6hE0YmFIt1rwk1u
7q9zcs4958vMXMluDkEQoey67owqy6TQyTbGSWIV8dasjb7yXeHfM2GIMI70
xHI3I25Y6R3ExCFk6cTN9T0J6Oytj1mi34qWGG3Q2NstGPrKvXgxI4Wx9+X4
qEcKXHzeiTSMR5KFw4ZtKM8edfD1O/CRI/jhqs5U/F5TU8PX7EJrsy2/tzkN
jd0JYXxmD578NNmxYq8U7W8/9PMysuD7IeBRsJsM1/3+zucl7sPgYH8mt1SG
8RXreG5CBrN8r6FNUzIw4oUPuPo8xNhbpW5p6XifMmLkCvbj6cW1dVua0uGy
x9UoUPHCQuW+SYd7sSGKO30ApyUdDf4hclRU53hxmR+gPVGn7M2Ww7s1bpgz
+iMiUleHqU7JUccK4GQosX3ifYrojhwBg9Mqzv1DUJyRxO6YlqN5si+Jk1iI
HIvtqfULEut4Lb6cayoMHB2QeUSRoKq63hFCNRoCJhTynSRGjLXXCX0xNL/8
sbS2jgRrp0WdrMFnxkDRsnYSrjQIQQl67gn8btwiwcpRqrtLcMU84zM0QuJN
X1ImoTmCijGR9bCdRGjGpXi1WAt3R/usRUDhIPsgYlqLndK+M+NCCoRrmFK0
xE7kOSIpRLOBFH1ThivVu+OF31EoXTJw22krg+Bu1bIsisInq9tOOumjMCX9
HNlTQEHSIdIWLS9HuEjV/J+GgiGqPNvZXw7zTFdDaSUFV1+cCRVIkJpm+acp
bH9217/o40qsNQW2L2ql0MAG5OyqxHDboee1F+bxvr/iGSNpKrwxj9cdQ3Ce
vGxujIL5T581VyeP4ZKnp9rn9Txf8m+otIVOvZ6a51uog2eq/z9WLo1otjDm
vToIlGK7nU/D5miaVHXrsB68y0Of0viaNThXrEd40bWViz6ncZMd82M98s+K
PUg/GjleJZ0qsQFUQf3Lw4E02k6++mvObsC9xlMxm9fQ2MYGZk47jgWWQtN4
CI2plVSV6vxxNNaHBWVvoHGCJYj0qsZWqznJEkHj2/P/FszlViNaeescbxON
/wFmZ4uy
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#30"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfbYTQSIGrI0iDKwiaCNIJqAxwHGInYKCKAjS96HB2TGBJx8V
ixba0vnRCWJfQUSCDYqgxCghIJuUjikxiroBg7G5GEUxhIwNNxyF2O414SY3
99c5Oeees/JQTtJhAUEQ4fw674w6836+MTXa0suts2YdifY5kLGFZiPARY3N
b+kFZK9UomBWhjfLrJPC8Z2wPjbHirk96C0f8PMcSsQfq100S9n9aMsXkeTn
e+HkE8WT0JoG6hVLkmE4+m7WjTuIqY2lT3JPpeBydXW1mzYD5izFpri6/Wjs
iYtwY48gzGh+wX2birZ/Pg64UpnQvbi76uukNDzwv5PrGp8FwuPawRFbGsbW
hLp+4stCIpT+XXT2ANjIhUNC7hjax5M7p+en47+9I9eF7nlQUMNxf+amw2lP
qM1HU2OYSNyfDheNKUZoK8Cbq8mBXJAc56uyvYTscRTtqReKC+QQ3Za9Erwr
xPOkvuB/O+S4wgsQUCqs/uxWQ+y0HKt+t6kFvxRhrd5sndhA4uZk3y5B/CnM
hCrWNmeQCHVt9hH8qMaHJnXACo6EvLx7ivAtwa9f7hvq6iIxcr3mAcFpMOXx
1D9tEQXeTnNJgha3gu237SEUnGkQ7jqY2hKkWxMp8HJUJT06ZHV0mMlsCu/7
dh0itKWwmmqjz56jEE59t6MkUo/F7jFl769ROME/iLDpIflqY353JwXCOexp
KPsXbJeMU9jGB1IsPQOZsqFywkHhtHj4mWP0DPKkgck1S2h4rG+pdZDnMPIw
/ZuJCBpJ9z7VFy83YNC3o/H7L2iYYgxHHQMGeP28QtKeSsPZF0fceRyPCriY
p6TBvP1JUrygDOEfibzdpTTq+YAc3WV4uOXJY0PFHN7nArb/VuiZcnMOb6zA
ybudUeJBGpY675CuyQo0jC8Ps72c40u4CO6ER/vJsTm+hUZ4dyuDVbM0tvGF
sSiM0Czb+tw+j8HobNOkuscIUey8RG8XBut4g3YNh+IZLTu6iEEvP5aXHKJf
D9dd9mSQ7aWzqiNNELfr7ocsZdBS+9cN+7QJBVJZo8CHwT4+MEtKJVobVKEx
fgw+BMnL1a2V8B8d8suUMLjEE0R5VWHzhpDawgAGm1sfKe05VdAHGH7ICWLw
P/COgR0=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#31"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvWm1A4nGkGKdK4tTogxUQJwMCXB8kEbLG2Nr7/2hIohWBhcQ
URiXPmxgVmGsrRXFETJ5zQcNosFHKmEIvjUgIWbpEBEIcS9UdEVGvU34ki/f
X+fknO+cr9JykjMEFEWt59d9pzj1rUMmZbRNsi3f/7Y6WqpKj9jFhqHg4YnF
pT6bIBsqEq9hZWjIChuIEcai435dzCJzEmoGpjQjfklw+Im0PqwCuRvWHDTE
p8DNJ44laIqxro0Y3g5j1thHT/MemOOr66clO3CmurraU5eOFznGKbmXAk3d
8jBPNhMr6a4W5xMFrr39/5lHqhpc4Hvtxjwlupba8jxiv8Oj5vLenCklxleE
eMzxZeHffOW4Mnsn2Mh5A0JzLr5f/XLV2t6d+JAyXC/0ygdXk2H/4msV3PaE
ukOI1i9/nFuggkhr2Sx0FuCEpudb0XUVTlqzvYVsIbjxuu6YSRXEl2VDgrEj
qElqWJUcSKOGFyBILUJw/qBazNBY/ruTE/QXY6utVrStnMavE71xgtgSKHuk
NytsNEI8LkoFv3GQyN5d3ttPg6nsnKR8NWh8UPZq3Qcaw/VnuyizFr4HN2YG
hDLg7VzUJOggER6ZcMQxcKdBeelxoE961baPAS+nSNOth7pD0tpXwuBNb1wa
pTsGcfH1wlwTg/WpN7ZqIg0Q7Hkb0NLI4Cj/IMppgMkxn7l0gwHlHrYM/y5U
VKocDLbwgZQGliPsm/i08L8YlC16/tg1Wo4zUcUh4dMMFqxuPecix8HeDMoY
khAkt39pKP3ciMJEn+AmPwLLZmOW65kRPyiuhj4KJnD3xSU/CYGp4fwuGcHu
kafLSj+rgKugPmEoieAXPiBXZwUs05mvx+lZvPRHzN/rHdWSPYs3VcGnraSq
s5LAXrsk6PZEFRwL+mrDrbN8CT+BvjN4L/PnWb55JpT9fUnnvECwhS+Mfb8J
hsEru9NbCUY/Nk9w3SZMBi0VWdoJAniDM1oz9o+Mnk3pInjIj33QjE0vX8wd
u0eQ7a3v4CItsN6fGyp/QtB67p/Gmf8sIHWeryueE2znA7PvOIVbvlnn8/4g
eO/PVHJtp7BCbtMHDROc5gmivK3wS+xP7BkjCG+7e3gmxwp6IKM94k+CT1SZ
h9E=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#32"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9Qk3Ucfm8zN+CuiBs7ih+n9OOKQsI6jHLxcJpoYyDb+37jkh9rLUxS
9oqog679AmKKgGPvhPmjJOCITrvkdh6EwWI4EQ2LJoqdR7iCsys8MKvJwXp3
9Ln73Oev57nn+TzPWo1O+b6Aoqg0fkP3oaH0QoU9P8M35qjpWl+SEfeO9vVi
dgNiaLcs5XEZsqarJOvYLNi+j02fW7MF7tG2N6VcHgbbkz0PrryF20+vNkez
b8Pq6rXe+kuBEJ8kuxCp6ht9hQnbUb97djGMexd9lZHjgsXtOO50OsMsWswf
LfF83pWHL7zyDWHsTvzS++tN9Xolzt9f8omLSiH4s9+m7FBieM3X5eLsPYi9
dk7ZLFTh7rOp4lXxLDzuO2fVtAqsLPyGkNsL6dbj+VecKvyj8ncKI/bBnD+X
HDWhQsie0FKBivKl72bCaaw2OzYJA/txsWnHsCOdRkNLWZSQPQht5GR/4ns0
JF9lTQtm9Yh4sVS6w0rjJC9AUFSF076JRn83jad+DhgE1z/CrpisS5kjNL6c
H1cIsj+GXS+S+/00UsVn4gQeA4bPvuROXKJR0DT0gIo3QTtiuiaXMPB3nhim
ODOm9pS15soY8HbOmHIteHmwZGNjLoNQGlRENdRrHzOb1Qx4OVUmbzV+8or2
y1kGC+MKDWWpwaqFofYwI4O0om+2mWS1eOaka+z6EQaV/IOoQC0mGpaqvU4G
VGjYOpz4VstpzjHYzAdifMGK7tFHHq67wKBOOjkWnLEi4fAtp8bL4NHknlPB
wsP4sVl2KGWSgbI3odb4RD0qW3devj3NwLGpfnfQV4+bacJ98b8zCPUlKG+A
a9sfB9gAA/VvPyQaRY143qTos1EE7XxAwaFGkMv6YrWIrODjjiIyp1wRKyEr
eLsNH2YYA7VJBAOfPZkyOG+Db5azcClkhS+3GYcirur2vvI/X7gd+sx75W0y
gs18YQY+sKNj7tO6QCbBzGL3vMFrx8a7YlHSFoIk3uCymcP5V926uByCq/wM
THHYquuIvpNHUBZV7TbIHKhR5nTWMQQ9p+51Lf/rQOHB+z36AgKaD2yAHMPU
6b7wS8UEfz9X0GRwHYO0wyNc1BC08gRvRLXgtYV+X3QJQbpr5MCyrgWjFz9p
i9lF8B8WXogN
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#33"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbmdtYAaZYjWUQbazFqdj8SID5CzwIaNBaS9vzlQq1NURJTr
A+QhLS0wGooC6wNhPiaIymwMIJiqAxkSNPiAGRkCIUqIKENGqBFhDdTbhC/5
8v11Ts75zvHfm6jYT1MUtY5b1/1fHf/nSeNPwQv0W3S0ODbYJyZ20242AK3e
Uv+MsY0I60vzWsmGQVpY5z7aHIrG1svfe5uiEGzJ77xJZOgV87Xz2e14k5ct
zUuWw8XnJd8FOrRNWFwfAUPCW4eb6WdYL35V9UvgNpSWlJS46WLxta1k/OW/
23C9ZWuAG3sQ9+wFMzSnonD7w+QLgSoeXbSvQTUUhWa/quMC+RHYJccb0+UK
DH6zRvCFiMWrj33a2ZcUYIPcO3mmY1i/SMj3HVDgk7K/gudxAg6/eS3vlyjh
ssfTnUSy7VDqihgl+FpzCG8iCZbqHVeW5ylxpvioJ489Bb6pvn+kVgmvm2F9
9NsULLaWNW3pUeI8J4BWpeGQtJzunVRiSc+Emu5Ix4Fl9yRrRQz+GH0eTssz
0I6R1PoNDNYIrD70AzXe345b0aFksLOg6SMlykRbgW/Uo8MM+it+a6ZMWnwQ
37dttDDg7FgzI3WIHozw8Ktk4EqD8sjCP+KupVV3GXBy0jJbsvCJvjo8+zED
+/PwvZQuG//RheXbuxmsU92VZQblIOX1xVvX3jFI5R5ETeSgcLgzZP4YA8o1
bC7Y7Nf0uTkEoVwgmuV62GVqSZuQINe765lzQI/h9NToODHBnG9rLjh35SHD
tkpmDyBQ2HxzNEIDZAmC0nEQmEMMCc4XBgSmiOPzZQSuvji3nkH09eCJ09EE
e960L9bMPIu/k/rmvdtDUM4F5Gw6C0dZoH7y4DTepxDV3oo7QUnTeGMR1v/V
dsucT9BwadGq+6NF4IcnB3YXTfNF/oqIegeGLNN87kYELPxOpP6d88MVpiHO
iM29kf4zKggGHJWj6hYj9HWrefsqCaScwSmtCTW8no4b1QRPuGl4ZYK/SHK1
tI7gqGdWozrIjBtfxgjj7hDUXBi5NjVuRtKsZUxFIwHDBdbwowXdPzycu7CZ
YEyys0Bda8HQIKNKfEhwjiPY7FmMl/1rNdZWgg21j5KnEouxYySmrP0pwWe5
NoWa
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#34"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9MU2cUfbZOisQldoBZQ8lg05kRRkw2lEn1LC0pExQEwlBp+94nMkRG
H4gblFFKkWDa0YJ9pRb5EbLIUIxxzjU6sRqmzDgiBBEUtqkjwlyUtYNNoUL3
Gr3Jzf3rnJxzz4ki2ox9Aoqi4vkN3AV9YW+ZLWfrIvtizUhy/taI3XmbNexG
TDfktP15CVA+1IW+zyqR+MEblhhnCq7e7EwK53ai0PWhWdG6E7+9s6ImjP0U
Y44yRVtxFgJ8oakqxCVpTHMt2TAXTfuCOQY90uzk9qwctDidzmBjHiLDd9Rd
ubQL3f0pG4PZzzD8QGw3PNoN1+ziiEhdiLUz6Qn0gz249tbZUlHq58gYCPd1
unLxeN0G0XIpixnNgsmtVYGVrRwTciWQrOE0ytVqPMucPCEMOYjoytvW8g41
AvaExjJMVsducUo1WFFjlwvnD6F5Ni5MZtGgwVEsFrJfwr44OFwyq0HoGeVD
wXQ5tlGZQ9p3abTyAgRqHWJQJfOk03h7Yl4vuFOJVi7x/I0vaJzyDm8XpFbh
/sfiHq2TxgbR6QjBT3oMTozvT75II9fa9y8lNUDRHna9a5TG5Inj1yiuBtah
A9KgEAa8ndOGNCOKrKVNumgGgTSokFr0NP51Y9cmBrwcnaG/Fgu9JfKBVAb/
DG8nlPEwrreMHZ7TMIhX//iJQVaHtODYu54SBhX8g6j5OjxfJfFMGBlQgWHr
IXn6vXy8k4GCD6Q65giSlr1YH3aWQX34vVv+qSP4ruDZoOUyg9djz7X5VSas
apf/Uj7KIONCZF31m2YEfZV+WfAHA7vcXOQfMWOurGO5/wmDQF/8KQ1w7Uus
OLSMgH40FF0dZIGvp/cJFULwDR+Qv8+CBFdnaVQoeYmPaERUXvfxxLXkJd7W
BEdml0knJ3B3SOKueJsgrvTkZ2x7xZd2FO4K0WuP01/xrbRBsudnjlYRKPjC
uAts8N39dUa5l2DKd9Kr77dB3t06tVBA8B5vcKmGA9dXH3/rIMEAP+77HAze
/L2z5QTF4tqrepkdIwbT70+rCM61/f3t0nM7vuaMNwvrCbL4wNzZzfjoh81e
j5ngv/W5Vv35ZpiU46OZjQTHeIItYge6VMrVdo4ggW/FktYB4Uk20nWM4H9e
GYvf
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#35"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlUntMU3cYvbTOUUiMIq8pMGRmGkHAueEmIkeLQ2ONvDJZV0rv74eTAZZa
0UrRtjzqCxGxLVgfY2xqdSHqGFOcypAa5hYsG2k1RB1hTJwbDkERkMH1NnzJ
l++vc3LOd848kp+yWcAwTAy/7vtKl3O9wJQenxp/Z8GN1tz4IGlWbKZqGT7/
PfmKc1KMxB6tb6QqEREWPTdnZhJafq1b429Oxs8fOm27w9LwcP70Yj/VJvTv
UCvrZmyCm89XkoHcp5cWXF71KcrzHo+LzCxG/TtNd0elOG61WkUlWdirtnX3
pMtwrm39MpFqC2z93u9/UZiBy88nnJ7yHCz/bOhhdI4ct0IvqT0lW/FL2cGU
8JhMPHl3iee0YBVenLZERD3KhCrO657QvA0916xa/UoFRlJ7zwi9t2P3/y7x
iEEBtz1hSQE6+qOibdcUmF5sEQvHdqApduRc14ACFTVKH6FKgwMTX98zhbDw
vZDYI3i8C1eVw3+eXcviJC9AINfiZm9qwnUli3fuj+kEriJcDZPa5VUsvh3s
3CCQ7IHOeHOux3cslnjWBwnsOhyanTQucLCQVbYOM8EGzE4LcTT+zaL3zIlb
jLkYhZHqE5GBBLydesPGEnCiOkoWE7jTYLxLMViU9yx0FQEvR2toK0X3l9rC
ylSCoc4NhCkpw9DmbXmOLIIY+Y/rDHFGaMXTIl4VEBTyD2LGjGj3kdWHlxEw
7lHtg2HLnr3DtQQJfCD68P0wu1w3GuoJ9vl3Obi+/VCkt/u2NBHMWNxwiss4
iLqLXKhHB0FKU4hR/1Y5gtSdGkkXgUVcnsc5y/HHIbkxoJfA3RdufQVkX+n1
ScMEike/henfPIxZizpWOyYIvuED4loPQxOTcuzfN+gUPugI7pxfVxHsR6fw
pio8OWD/YSCKorl2TtRPg1X460K7hvuATvFtPIq3n0rtzlg6xedlQuB75PsH
H1Mk8IVpzjahOrtxvp+Eom/8/KCuzYQroq32kGSKRbzByWIzGGLwviilaOen
udsMbeDtmcszKZQ+pS26OAuylw551FKKhlMDtslRC1yVS/smcinS+MCaP6mG
viUgejyf4uVCWaWusRoL1/4T0LWd4hhPsNKnBv85WS+rhuKjxts7J/NrIPDa
KV9RRPEaU4CM+g==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#36"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvW0ZFthgQmGRVIfYiLHDaZaoZEOOQ2lIeSstvb3gimw4gnAF
po5ulz5sRCsPbQsFoeico7AyHWo1zFSC2D3ixLCSOdkjTIVt2TTFMcdj3N1G
v+TL9+ucnPOds7K4Mu9tPkEQG7kN3Dmm7GqNpSAlJnqpZHi9JkVMlry+i96E
KHtQrHokCbKJWtE6WoYlaYJHjGw7Br85vT3Gmou+GmdEfIIcP0mC9dG0EmF9
+XEv6bIR4BNlFOLjUJ+nqTwX5vKp+RCrBlO2BvuFwTy0t7W1hRhKcKo6+E7K
2A44vfJNIXQpHsd6u4wDO+F+/J9PWFSGj5Q5t3u1+RiOO18lzNiLFxccqxxx
Cvy+eoMwaDmNa+IH6S+fU4BODv1eYN2H3bt5FQelSjzZce+sIKwa18+tdf5p
VyJgT2CoQXB3RC5/TolgvS1VMPse+OGvaS/lFKChtSJSQB8Ab0D1/ElHAUSf
ySb4UwehIdf3zt4vQAcngF9UizvhhqFxiQqrxmcZ/pgWXySsGRHvUqHXP5rJ
z/gQUXMJW6qtKmwQusT86wzu1nzuP3BDBappaIZYrkNz1nfsp9Mq3Dt7cpiw
6pGoCspKTyXB2XHpsg2gbR1vakpJBNIgwowoTrzvDz1CgpNTq/Ma4fHxXjE6
SUyPZhYThkNovmoSsTdIbCwaSNclm1DV48vqmyDxPvcgYtaEW5roGfc8CSIw
9GFoI36cfFeqxjYukDppPbIr923N2arG4ZgfbrGT9RDWX5a+oFAjPLG/ky08
ivgjLnvJB2rkXVlhqltmhk277OjqRjVsqeZy1mfGHqmCDu9SI9AXVt6A+ljh
gtmjxlsPbsfXLWkEU2za/Ma3apzhAmKHGuEoe/irbPwZXtyMh57R39pnnuEt
x3FIe7pfIqHg6Yp99Zr/OHQ3/zC71lFP+bJPoPTLloWRzdRTvlALnIMr01g5
hW1cYTx7LOjgjc2L8ilMzvf4Ga8FJzL1UXcLKazlDC7qrUjrSe80VFC4yY3n
Fyv+cn/N7N1PoSLSOMgk28C6V7hiGAr9nY+6F/+14UlOiPz8MQo7ucA8iha4
f26o+sRC4Z81VBNzsQVl3iTVO+0U7BzBlshWOGqHKqdPUUi6+NX+xcpWCJ77
m5fZTeF/aR2BxA==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#37"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbarFth8MNDoqoO5KdFsSFwkTjuOkUpIyxhMStf23l9hoAsB
vDwcG4zSh52MykPbQotjiwhxIhFj3MIG66QyVnVzk8CULIypsQ1zjxRXntLu
NuNLvnx/nZNzvnNic49k5vMoitrFbejOawv6yy2KpH2uEbpvLD9JpMzbQ9hE
UDGLldeHk5ByrzLqFTYFqpsbvCf6U3H1xhnJWmsGXrI0LVvz6psYf3G5PprN
xu7G2zkdbZkI8UXJaAzt2MtuKjkIc6F3Icyag27P9snUiSy0OhyOMEMejD2B
Z8YF2fh8SJoYxh7GffZ3x+xMNr58vDgiZAqwyP+4pcqlwGDMpVKhrAjinFUD
muK3MbklQfjURhYL0shWEU8JVhx+h28tQbkovbXEoMTMWw86+RFlOOU+4fVP
KRGyxzeUw6PXVxfIVViut+3nzx2FSnm7039RhfqW4kg+W4Holc0J0oAKURdT
7vG87+PQrGPQLVHjE04Aj6mERJ4fW/eRGpt/ndPyRquQY3fPVwyo0eUbTuPJ
qhEzWuvLnFEjQdgt4l3TYn3VgbG+OBrqRpef2qiD4Buf4DU5jQedpwcpqx6j
5J11O87R4Ox069IN+M7v+ZG+SSOUBhVhxOmjj75f8xcNTk6lbsiI0bo9f9Q9
zWBqOC2XMhxDz5Q8gtrGYBfzdapObMLZ5LydZyQMPuAeRM2ZUKqm2+2EARUa
9jg+HbQqnmtkkMwFUrO9Ftd77j7/sIPB8bVjt4KeWgTSMvYZv2Kw8uXLbUG6
Dk+K4vbaJxhk9m4y1aw3o3Tg78REHwPbfnNhcMSMMt1OzcIyglBfgtJ6bJ1w
/xsfS6B5+PMLNSsakF5xKKMvnuAsF1DQ1YAZ711hu5j8jxc1wdPeRF/IXsJb
TiJ+9f3eDhOB87MN8d/6TuLDDEVuWNMSX/opPLmheDa8dYkv3IKG3vZkfzdB
MlcY57sW+OyCrskvCDwL533aIQtMsqKpeifBNs5gQG9FWWH14elbBD9w45yw
4lqWROD6haA40nhVK7ZhtdlWJvuN4HLbP+cCsza80TAe0/UnwUEuMKe8GXf4
66KMjwmm49SN2ivNmD7wKGXLPIGdI3g9sgVZsT9FSykNdl9xvxc40oJ+ac+x
Ar4G/wGEFYyb
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#38"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9Qk3UcftuMYCQFIaFAR9EvtR/+uANmIk+3xYC97/tFR0j8itBuZgqv
CEJ0jW20gzkEZUMcAoU1Q8+WEevQ8xZH3OTMSj0EasZERCQvu0VAk9h6d/S5
+9znr+e55/k8z9NFJdveFVAUFc+v/z5Q7b5QZsxOds9HxNkkiuTonJ2vvc0l
oHvF4pUdrpcgG68Kf4WTQTnf2THpSEDfpc43IkxbEVL5+MBAxhb89myAZgW3
Ha7a1mRf0+vw84XT+bh5YLjRWSyBYc/UQpDpHdj1d5XSu1K0ms3mIO1OvJnb
H/r7qhR0OeQJQZwS1pbITm+kDN/OLA4FFuzG+K+bxbP3ZRiIPVsaSO9Fvjll
XZslFdPPrw9cFsNB0tu1PFeSBi5JNCI07cOnoW/1zV1Ow7xiwiIM3g9F2Psb
HktJh9+eUFuGi57B+NKv0xGgaZYIPeXI3L/uZ0WoHIdaisOEXAUM9EZZuVKO
cKtsXDBViZQLw3/DJkcbL0BQUIX+uEtpYwtyxDk9KsH1D/Fo9qAJm2mcdl9j
BPRHOFGf9fCGChrrA89EC75XwTV94qG8L2nkNfbPUjFqNNw7rGdcNCYsxwco
kwZP/Hv8Rm4iA97OGTXRQt/UsXJTIQN/GlRwDVSZ1tRdOga8nCq1owYvOKd7
V3cx+OsaU0RpP4a353biuUEG8QXn09RJOmzt+GFH+hSDD/gHUR4dtn+1+hvR
MhaUf7haHPPUP2dLZCHlA6leW4f714ev3spgURvxy0++O3X4PCZg5KKSRcjL
3e2+/IPYeEqfHdXEYlvvU7rqlQboriqLbRYWzRLDHt+QAaPnyk4W9LLw98Un
P4S17CZrrJNF4eSVZ6ofaYC4MvJW1j0Wn/EB+foboJvQKkYe/I+PPgxL/c2z
t58kS3jjETR09oggJ7B/surV79xHUFQ+MzyWRZb4SBNK6dOOkCKyxCcyoq1x
75y4gkDKF8a+ywixui4KGoI7C6fcKocRN6Ru/HGQYA1v0KsxIWpytJRtJ7jM
j91lwoSz1SY6SVAcVtOnSmpGRj63T2Ul6G7/8wvvP83IeW/UZ7YTZPKB2bOO
Qrw4HpvqIJh7Ma9R1XMUgrE1hed/JDjGE2wJa0HOcn3JzBCBuGfwgLekBVVM
8Oisk+A/NweNnA==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#39"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUnlIkwEc/dxKZ5bSNEnRDjPLTDuIrEx9lLrSzX3flhni7ECxzGOZmk3a
ZdPlWe5btg5tqeQiOqSi8kzFLrMDK6NEKksiOpalmej6Bv7gx++v93jv997C
PRmiJBZBEGuZtd5/8pSmLN2O0Cp1Vol/tTjUIy4xaKc0EPr192bb9/iD917m
EiDlocMvpbutfR3aHhnDXWkKZY4FuazOUPR726rmSGMx0qAs+6rYBCufC1+C
CGG5JLswDMWpQ+P29G40rp647e0TgdMGg8FenQhvzfVnPbk81HdFBdpLk5Em
PvbEULEFt4YnejkJKWg+nj7cpNyKzgXXMjn8NNgEuJ29wI/EF59VnGmeUlQ1
ivICJiIhDZ7xmk0fgKSE26etjMKo+GMd2+EgQlf0m4zz+bDaY6uz0O8T+7Dw
FB+2Kv1m9lg2CrZV59ROE6C0Mp3Llh7CLXXmj8EkAVyu8N6zhnLxNSTDta9Z
gLOMAFaCDGP1eeMds6Kx6O2YnPUyD7LGI203t0fjkvmFgMU/gtpwJ1WpIRqr
OJc9WB1yfJjlFm/3Ohrx5e1/CE8l3HNMSe1OQnysO9NJ0Crc0YzH2GYLwdi5
rBSq8edxyYbkC0JY0yAc8vHUVCdu7RaCkSNTduVjCTE4Pe63EL9eCPYQ6qM4
7wtj00wSaxPublUGayB2P5DnN4/EYeZBxJgG3yP0nroAEoR1pIWIpGVXa/kk
wphAFH5apPt+q82KI1Ho+qbH8lmLoMM1jkXJJBz9G85ZJEUYnBiOaVaQEN2e
p1G4FeNVStXz4SIS+s3FqZbeYuhGUymjnoS1L5aoUoxmz35SYCKx69MzL4Vd
GWjbwP1PG0jUMAFZ2stgwzujvNY4hfc4Dpu0h5aY7im87gTC46rf3f9CoqXa
fUWr+QT4vsaQzJ9TfMIKOG3RivpHpvhm6PBtgcSHzaYQxhSmZa8OL8NMczs5
FD6Pm8zyLh0uHVq8XORIYRljcFJFQ/vId2hgLoVuZloGaJgrBoIGPSmkc/Pb
5MF6LKIdnFu9KDSc+3Fx8q8eveXznYnlFLYxgbVsPwlDSGLvvpUURpbGl8tv
nESsWSW4vobCKYYghFuJu8dG7PrWUVh/40HOZEYlnDXcnIGNFP4DKoWCRw==

        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#40"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1MU3cUfbYLK7CZhQ9lCAPnJDpim2qmJYqcSVmFvvcjpSqkETZABByT
Z+dnjaWUQdlYodhCZfhFSFVmtwzHCDhTAQmbQhSwYtwCrGOTiMFap0zA0b1G
b3Jz/zon59xzlucUp+XxKIpaz63vzmn3XNlvzkhY/Whw4LF0e0KEatfGj9kN
cCzPDaiYFkLm0oQIWRnGRoV61wsJum40JS2xKDAkHj+g3peA0ff8SkPZdFS+
YQzreHMLfHwhdCa6up0/bxpKRFXR5Ly/JRt/qTqt361NwjcNDQ3++l1QKQpm
RslHuNAn3+DP5iOgOL8wXSJD+z//OQVZexBVxDeY5mXojf5BLaA/g9HltsY1
bcWDGLHgtUgWz8+ntphEyWDjA+7yLfsQ+QurFl1Mxr/KCRs/8HMMHVUsMi5N
gc8eX78f2dEeUdqhFPiV1iXyZw9AqDwtPT6QAqN1bxCfPQSN7KHLEyZHyPcy
F2/yMGySx7t7MuU4yQngZWng19FnCj0px4rfZ7W8O0cxcn3jzX6nHN96hhke
fQx2m3T8tICGWGCP4F3TYi6/cHi1hMbOmp5nVKQOfkrlMncujQlbYy9lKUWD
IebEcCsNzo5dl6oHNm1fdNZJw5cGFViGMf+kHYHPaHByNLq+MhzWdK9RBDN4
MszkUPovkK3Tqs6JGKzPupysiy9H2FtXouJSGBzhHkTNlmP8x5XCtbkMKN+w
Bkzb7/X/aWIg5QIpia3EOrX6yxEbA8OSeze99ytxhohnWjoZLF5z6ZQ38ysI
nxYu2zrGIK3jnfKSt6vQP/XpwTg3g7rEqiKvswqC7hdMhpeBry9euRHtyuCp
jEiCT/4efLfk9Wp4mgYbt8USNHMBeXuqsZtl3a0S8hIfYcKdnEBHp4K8xJtr
0fZ1puPhMQLHmXDRVU8tFh4VqB4YXvGlHkdrR/LtitpXfAFmPJkK+bC9mUDK
FcZRYMaWxc7LCjvB/fkWj7bPjObQn2LPthG8zxlcKLUgOnykJq+XYIAbx7gF
tz5ovDjRT7A3qKxLG1+HmOC88BW3CS6dcp9feF4Hca/orucPgm1cYI4d9TA6
WpoqJglmVu2s0bbVoz49++rkNMEJjmBzkBVS3jXD0qcEcW2/HlwotuK3qGph
2BzB/wBliY4=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#41"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfWuxUjDTIGIcKJMNo8M5a0wZQusZQlHBUPnq63sPVIaBYIGn
wkQWSkvtZDCK2JYPFVBJ/VgYTkdAyAZSTbdYoqTinJK5IBbcoiFlA6lGuteE
m9zcX+fknHvO2uyilIM8giDE3HrvG3X+z8VGcvvQznCVfSh7ewiVE72PjYTu
BFObXh2NhLGywE1sAnYFB6ccpmS4dfdCfJBpL84OPp3aHZmEPz8WaFewCmzb
4nRYY+Tw8gUmZUJmnHjR+WQvalSTb4WmA0jv6nt6LTQVZ5qbm4WVOTi0LF9s
CU/DFVtipJDNhVlITCe8S0P3v+9GfLPyoW99LHh2PR13PvzxiG9SASxV7n/I
xAz8vU7k67OaRWeUTph5PwOsxO8R33QYMa4Xu8NiFXidOm7h+x/Fw+GJvpFL
Cnjt8SuLsSHj/sBzjwICrXkH310C/0gpuS2ZRG1jYQCfPYapFqeKbCAR2Jkw
xpsshUwi+ankdxLnOAG8rDKsFJUbDMuU+GjUreY9/BqTY51rj8Qr8b3LsYeX
VI7Na0p9hkqUEPl2hPBuq9EkP3864qISTJ11hlitweh3LyuEdiXGLWfvECYt
4oOlz+4up8DZ6dAkV2JQ7e6Rb6XgTYPw1+EPfkhRawoFTk6ZxqZDKnkt9mUh
hWnHnmyi8gSsv3ZLD31LQZzVt0sj0WNslY2RXaRwnHsQ4dYjlU0vaO+lQHiH
PYkOojfm4HMKcVwgFRFVONqWO/veHIWTQY/veSaqoBFZauv9aLz/6Y0WT2Y1
nqiWlo9upJFyc42+YlUNCNnscG8MDfOOGpVnpAb2oE2lDxJpePviSazFQN4v
0qlcGvudw2EViw0Yfr2yWlhCo50LyGM1oImMt9VpF/Ahp7BPtbRtUfMC3liP
z8cLeoqtNPrbPvhswFWPRY5gwQP7Al/yaUR3C+hHIwt8fkbk7HedczppxHGF
6c8zYvPMYOHcKxoTb6+61DYjWg+8Cr09Q+MTzuC81gR7o/imwYfBEDf9f5mw
xJEnb/BnUBigu6WWmNH+RdTWLwMY3GiZujw/Z0b4zmiPIpRBGhdYf0YDVsT+
t1gfzmB2PVOn7mpAT37YJW0EgyaOQBrQCMWpb/zkIgZRXb99NV/UiN4fDHHT
Ygb/A63WhEQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#42"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWnVFVigVtQ50SCiqEQFozCV2mMKEgRDrIiiPNt7exnBcjsR
BKXQIvioINCWh0B8xSiIQBCNGFMfPFTi2FQYMCeGMUEkUikqgqHdbcKXfPl+
nZNzvnOWSZMkFIcgCB92bXdKlXA/WbdfZGlabS7woEQuB8itMYwvhGlk+PgL
ILA/3XkdE4ipI6m5Rd0heNh+KWCBfjd6fmm+mDEqwRv3Oer5zD5MrByvNjPh
sPE5h0ShKWxhi0kUAW3i0Hc7fRy2PKn5vP/sQZwvKyuz05Bw6r9d1J4Shett
wb52DA3lP4N1f8+PwZ3x6U5edAJGIwbov/xi0eJa/xsv5BDqNQEvHLpjMbzS
mzdrCYOm2vg4S1QcGKF9N1evRLMHUTGvKw4Tewauch0OozdyxUfTNils9ria
ZLRvWq2sqpRijtog5k4ewRant5oRsxR5JQoBl0lFSt4zNz5kcK4N7OcMHcX7
1jrlhlwZKlgBnOh0hO54HuHXJsPy15MqTtcxnHB17/hEkKgee7mLE5IB2bRO
P+5DwptX48JpVoFvNyL+I55E5LnHX4glWbic4v9xspjEwNXyFkKvRuZWpWPz
MAnWTk1WqAajXkJ6lhMFWxqEQzbq7grq+rwpsHLSs9qyIa7tOK2VUDC/3CUl
NCegC5VdECop+ETfC8oS5sAj+eblZfkU0tgHEZM52A6RZ0wVBcI2zEkovKpa
k15T8GcDyfQ8hSCRvURlpnByQW+HdfAU3Es3B0Tz5HBc21BpjToDdf2/wx+8
5JDcXZqTuUiLpYbT5UaxHAaxNtHaqcWjhU+8G/bKYeuLNTgP/O097RtT5Yh9
96db5g/5CJ7iK/py5bjCBmR9nI8u35iMN4YZvEsBlh+6fWV2wwxeV4jOdyVB
XwfkMF74ef2DsUL0LarQ7TTN8IUW4ZWxOnHT1AyfvQ7SXnL6P0ca/mxhjPE6
jHp+67n1E43B71VjqjYdHq2zlK91o7GGNWhR6zEXVv2GjTSes2N8q8eQLO94
qx8NhSD7oUpoQO+vN5oEATQaKk3XLN8MKPgxjT8cRiOMDcwYXgznA4rFRyNp
fF0VeU7VWAzDZxP1u4xGKUuwTVACRaPr8ZEEGpsbn6ZYkkowsXhfS6eSxv8R
8I98
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#43"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbQ+WjAuImOiBXmoGBdQZoSwgR5eso0yVkewQh/39xOmopQ6
QbTE2xbswBEFbGtHgZHBiIMwXIwrC0GqYMjCnBrFGEJA0U1iQsJgk4pVutuw
L/ny/XVOzvnOCaPF+woEDMPE8uu9r7nCvhKzfE+PqCT+g72H9khy8z9Sa+Ow
unwiNObTJKRP6gKiteloeS/ZJ08mxY3h79MCLTLMbVMNnHTLML5phfFd7X6w
9RvsvsPZ8PIFSJVQjR2d98zkoObYlFtsIUjrNn5e2iqHvaGhQVyRj7Nd0aFy
QS5+HMqIE2sPYePxf52Rm/Pg+OftiEhViO9GnA5TkAK3Qn/+SiQtgsCuuOx8
ocCLLTGiZcFa5MpE16XNSmgTfR8JLcdxe0dOZ0+8Cq4vnrUL/U5gctMPV3YO
quC1J6wogZxrsy8mqLHCaE0RLpRiqvjrlW0dapy3afyF2jJMpw6Gm5ezCOhO
nxRMncKHY/LDlhgWTbwAgUqH+jLxY+4Ai4ixBU7wsBzvqJNfjp9h0Tl7P1Mg
PYOtjpsHN7ewiBF1SQSDHKbfhAkd11koagdeMsEGRKw7zU2OsnjW3niLsRjh
lL1VBKwi4O10GbIqkOp65D4XTuBNg/GrxN22X9br4gh4OTrDUCVODU/5+GUQ
zN3PpEzFWfy+NipEpSSIVfV+Ykg0ITP5ibNOQ3CafxCzYEJGwkxPH0fAeEdb
haOG6YIDTQSpfCD696uR91PRl393EFQFjt7xPK/GRvX2V384CFZHXW32KL9B
4ZxJYr1DsO/XEJM+qAY7s08obKME1pSaY56RGuzQvx5f8yeBty+ejPPYXbdm
rdVFwP51L1y/8gLEkqSD3QxFGx+QZ+ACQkitkojpEl5ShwcFvZHdQXQJb67H
bEnnRHksRX/L+u3O2Xr0RTbd9STQJb6si2gMDixKS/mfz9cMf6loS0QWRSpf
mP7DZnT2RhXczKZ47u6Y5YbMiHDda43KpdjGG1w0WvBxI4nW5VPc5qf/sQW2
ZolEfYRC4195g0u0Quie+GyDhuJq88zlxVdWXHHt2hVWRpHNB9afcwlPl+0v
1ZRTzG9V1HLXLmGvT9I6u57iW55gt78ND+aXt7ZXUsRf++3kYrENtqFe/cUq
iv8AG4Z91A==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#44"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfbbCWkBIOoZBC04ghA2/UKIdEziZSGuoEkAcn6XvPUQlCE8E
FYyFtipChYK0QLcyJM6A2DpF0qEjHRbGdFn8QIgYvyWiDIaCEUUD9TXhJjc3
98c5ueees5zKi9/JIQhiPduO+VGR3VVQmxT5UOgxmBm0J1KYkvl9BrMBnbz9
r5+rfoD4WbHnKkYM/9ZKs9lvG7r/ad7spYsDN1nyXuOegEcBzsqvmB/hs9lD
9Xg6EQ4+T2k6mF4+UbQyCZqcl5/4OhKLV2QtEI0l4yeDwcBXZUIXMGByS0hF
a1/MBj6zCxVuj+2/HE6D5e3sAE+WjVH3nryognT0fn0xnyfdi1/j1xm6xDKM
BobwFvowOKI9oLwxKwMT7nKPq9uH8dVt5UHGDLxPGD7Ldd2PllBXr4Yv5XDI
46oK0LmHaF4aJ4ezUr+JO1MIc0275P8yOSrrcwVc5iCuLz6+2+uKHJ4XxM84
Lw+hp7A6KueFHEb2AI6sGFKrTWRcRML/wYyCM3gYr553nAldS6Jtsn8rR3oE
+d1Hy84nkAjhmYScHgWGY13K6XwSaVrbO8KnFE5x9d2/VZEYPvtzL6FT4pUs
V+F5jQQrx1Qaq4LAYhkz3iPhcINwVSPMO7HJOE6CPae4tE+Nb2xFVBhBYap/
K0WojqLgo9qtQUBhvezqltLwY+gSKqLv+lMoYh9EzLD7lsJg51AKhKOYMlwN
23baFEchijWkJPgELk40P4jOoFDmdf+mfeQEsKTtWmAOBfeV7Y329Ao4rX20
442aQnyn77ESbw3+s+aPTFVR0G/S5NgHNHAf1Yv2Gig48mKPqUTEuHRwwkRB
/uK2X8kXVchad2nI2ULhDGuQ3VYF25VV6LTO44XVONnwRLTg1jy+tgZc7a3s
v8YoWJuWrP5zsgbJT4cs0VPzfLGncHf7hLH8wzyfSy0k3L+7yIU0otjAWHfX
4s7pm8tm+TRGPp2bVPSx+2Xf4iwPGt+yAueUOgQHRISYvWn8y5b1iQ77UteE
aH1p5ArU3YpwPTiLzIUSfxrtja9b5j7oIe5vVUlW0NjOGmbdUYfGKdP9U2to
TAelaRUddcgwTNf9EUqjgSWIENQjySkmsldE47uO6wfm8urx+1AKLmyk8RlT
TYID
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#45"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbaoBZQgQpmK4CvifDDJxKpYOL33mkYpIopQjYAwiU6RFkWx
ZSu0iAUqj9KLFZQYRXwQhgSfIabWKqjEB7IqPiCICGROVCTOFWa724STfPn+
fOfkO9/5ZifLNqZwCIJYzpazj6h238wwSMMZe5hRGSUJ99u6IzRRLsDVkFlZ
3b/Ng7hH6R0kF6M/MTJJoV4Kc+vpNXwmGk9njNc+b1qGrnkT1D7yOLzdwusq
bBbAqecticf1RkX75CmroEsdGHVlkmCLeqzld4aisqKiwlWzA24HHkSfkQhx
oSVC4CrfiT0Fn8STssJwbfi7lZewGw0qkU9tZjjuzmrYx5PsRb14WPVhPvDX
/GCey0w54CN40q0B5EK3Di6TjqMaL3N9O/BtU28N130/yFr9m8ofRHDa42oy
EFTowUmMFWGCupzi2g6g8pc2aUyRCEXGNC+uPJOd9xjRmUTwrhf3cAYOIUO0
wfLmvQgn2QU4CUoo+fpAl6kk5r62qTjPsuC/aWGZVkCidqg9kiP5HS/o1LW9
UhLBvDo/zh0V7utN57MySWwrsXwlZuYA4/o8awwkemtO3CUYNXqI7hRTMwnW
Tl1OlAbptoGjAZ0knGkQ7rnoYAyl3z6TrO8eZU5LLtzjS0r3ulD40h6ZTGgO
w5tZfa6aT2F5QtPaHGEeFB2WuuuBFBTsgQhbHhpC/353R0CBcEKuRX6/+T//
zRRoNpDsRfn4KB2oZZIpaPkvHzv685GNxD83yCh4LGmscsQXotgYse/ZEQob
b/jnZU/TIXXd6UfX9BTKKV2qw6qDb1FQs+dJCs5/cUQUwVJlWRpzicL2vrY5
2ROLYQ1sjV1/g0I1G5DDUgypz69/vDWP8f1KsUIR93y4bYxv0KNRYvWLHqRg
OjX9p1tDevR1lSU0DY/pRZXh8tnqzj7bmJ6bATarzF46ngbNPoxplwFJRPRt
vjuN/tGLQ6oWA3SLC1z3eNJYyBq0qxmE7Hr/c8F0Gg9ZmLoZPIwVNMQF0Ejz
yjWrhOVIHwwY/D6XRmPVp/P2f8vRnPlg/cvFNGLYwEyxx+CWIhyZEkzjnwXb
SlRXjuGeLPnQjyE0jrMCYV5G7JyUtm72Shorr9w/aJcZMepb/WpkNY3/AT4u
gs4=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#46"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbaCBREZIgZsHT54ROOLbcXRsB4jShQIVrS82nt/GhQGHdRR
JqCWFsYKVIrYVtY5gkhEQUJ8v1IrwQoEHzGgMY34CgGy6JiwqDyEehv9ki/f
X+fknO+cpXtyd+zlUBQlZNd1J9VZVpUxWXyhXnLPofpZzE9NFzHKCHxwe78v
+OVGxLwu8lujjMG35VeydDFxaO9p2OxvkiC5ruujVS/B8xXu2oXKJHS92xnu
GEuEi88vTo5g++FpN+su6BXDUx6m3VAdGcleJUjCXxaLxaMkHUWzqrtWCpNx
tjM2wkOZgd7RtrYFi1Nw9f/pxzw6Czp+RWyoIwX2oPO/8uJ+QWWIX6W2MBX/
hKznzRYoEYT+QQsnDcooz6dc037Y0x4EhhWm4WPiwGnu3Dw0hPePXHiVBpc9
bokKVg+v7UMiGdy15k3ciXzYk32uOY7IUFWb48tVHkBVTeXGtU9k8GuLec0Z
LsBwC1f6g78cf7MCOHQRWmR93Mntcix/NqHmPDmIG80dnSl/yNEy2hvPiTsM
x6Axw/OaHOt5rXzOHTVE88VLGgfkkFV3vKcEGkiuhltPedEYOH3CTpm0SNCG
bsnbRYO106pJKEHkfm/ybz4NVxrU3FKIvbYMBptosHKKNJ2lkNdkUknnaYz1
xu+hSn5Ht6Eq/lIPDSF9c6smqgwYM3hmDNAoZB9ETZShoePkfMskDco1Sh10
p8anP61gEM0GUryqHMeuzFuWuYGBzt/x0DlUjhc+Gve72xh4r75Y55RX4hyk
584oGOy4vqSsOEAP8630cckhBuZNeoXzsR6KfW6NEXoGrr44Y6tQ2+QjfNvE
gAw+WlY8x4DoRd76vksMGtmAnB0G1D+4RYe2f8Xzj0JR3C2NfPoVb6zB7sT8
xrdOBrb6wLW3R2tQsLjplWE2+cKXcAzN3pH9kzzyhc/TiJCu1n7pNwTRbGFs
mUZk275PjF1IMDTVPKruNCIn4MRSfgDBStbgjNaE7K2iealBBPfZsb00oe5N
mKZnOUGOb2m7OsoM1fChKUEowcW6/87MjJshPGo05a0m2MkGZpMeB3mXKS5Y
R/AhTFatvnwczSMRPnu/I/iTJfjJtxYVb3IFIiHBj5e7f5vJrUUg6VNMbSD4
DGHogHo=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#47"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbYOiywwG0YybRdEwssHARarMMaxvb+glJeV8FBAhjDQMOgY
Za7M2xcMlBTFtnTgKyCEIvhiCvhINU5JJcwHQY2ZBqUTwoKyalYGZHS3CV/y
5fvrnJzznbM2v0xWyKEoajO77jvPHLhZYciMcx6iiKJyZ5xgd0HMXrkIe326
+ROZIYh/rfTdJI/Hk3kco8OjcHuolfgZdyLnp4AtIVYRXgZ6aD6VZyC8uy/P
5IiGm883MQf9XWlFramxqC+ZXPA0fg1/iqsrCIxDS3Nzs6e2AN1DMWMzUsAy
KBV5yosgtl9Tce1A34f/Rnm5B7BqWpiQlLcNd/0vlfMSv8VV8fHL4/e3YSoo
grdcKEd0r26BHyiGPHblM67xOwz/rWxYVi7G7C57B9fre0SmJWV+1CeG2x5X
W4E9kWbnG4cYHhqThDunwIB6KmR5sAR6cymfK/8BtlsDUkW6BL4X4l9zJg/i
6XRVpZ9GgpOsAE6uEk5n5ictnRKs+2OO4Typwprfxe2NQxKcc4wkcRIPQVjx
s0DxlwQRvB4B5zcG2fPToZYVNLKP3vmHEqohOrhmDxNAw95x4i5l1ED68f6n
62Q0WDs96hQtbHnelflFNNxpUF46HFFmJQdV0WDlKNWDOnxJMSdNehrvR5Ly
KW01/vScant8msbm3Os71LE1GLohKp+9QONH9kHUXA28Z2R6fysNyj3yWozH
hFKjz2nQbCCq9XXwaJJN6iZo1Po9f+CaqIPtnsWufU/De2PvKVfOEbRmMI52
HoFs4PMa1Wf1KCuMnB/jE5gk9SWu0XpEzSbktAgI3H1xSfUgPsXplzcR5L15
FKBa0YDg81veCkUEZ9mAXHcaMNKT5RMWt4QXHENEf/LNrclLeEMjDrc9HLYV
E1jPrA6/5WjEN6nbY2ylS3wpx/Fy34b9+oolvpUGnH/Wf1+hIqDZwliLDSis
ejV8uppgYqHLwQwaoK9+FN18mCCMNbioMeJDQdQLLwPBMDvWMSN8LF+U1JkJ
Svm620ysCdvfjQSNnSDoPTXTufivCV2p/KyAdoI0NjBrehOCIw1BfAuBMyT7
KHOlCca1Mw/Guwl+YQm+4pvRaPa3mi4SbL1iq1wsMyO8NiVhw68E/wOvAn0b

        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#48"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbmdpYioEDSTFaPVsZc4jRtsU+BEqfgAGxChtPci1Bc0iFek
OEtoaQFBS8GuRSi0I6w2gNONEGD46hCaxmyOKA/FLT4aMtjcFkFFBij1Nvol
X75f5+Sc75yVsiOJB0iCIMLZ9d4ZlfxqnlEcnab+dUlv/oFovmT/xr1MBLTC
jA8WOqMQ61YGrWViMe4R/jNr24buXxqFS00JqD04bOAO7ML91VzNEiYFbrNF
a2tIgJcvKI6GQ7Ah075tN3TZY7O+pgx83vfozjFjEurMZrOvdj+E5BcVsOxB
s2tnhC9zCBOG4XBSkYzOZ68GeWlyLNvRYun4KAXOFa25vLjDWJG6abq5JwV/
h67nvRPCgLno739TKAYTOf8ux3QUj98bmTzxkxhTu0fsHL9j6Dgvzp0KToXX
HkebB/LJb+ecuangaqq3cKYV2D6Y9e1Adyr0NTmBHOY4fFav6bzIlSDoh1g3
OfY1rETjj3qhBBZWAJmmRKFgXJ6rkmDVH9MqcqgAGUNnCte0SXB+oj+ejCvE
7F9j0ZluCdbzLvDJXhVmvl8u7lggBVXVM0mEFEERTOZXfCbFiL3eSZg0KGte
tE5WIAVr50KRSAvRve4ssl4KbxqEXzFUd9WX87qkYOUoi1zFGJppco8PSPG0
P15GaEsg2KTJafpPivC0y9uLIkvhl61/2DOPwgn2QcR0KQ6LvtNn8ikQ3mHK
YLVXtvYLKcSwgag/KUd6+eIdfWIKZUvv9XlGy/Hyd8feXjmFhWFtVg99GvtK
Ey891lFI7Fpeql6mwy7fCBHqKVRv0WV7BnUI6FhVfKeFgrcvnp16KKfSQ2ec
FNL/vCVQ+1QiOSAhquE2BRsbkKenEud8lKfb77/F889gH+fU0aTnb/FGAzpf
3gjczGd70xD86c8TBlyrC3DHvk+/4RN9A8UCS9WLMPoN33wj3r3eos+IohHD
FsaRaUSBf0RJ6FYao7MtEyqXETGCpC57PI2PWYNzGhPG9nB5bimNm+w4Hppw
Reey2WQ0cgKLu1WR1TAmJJeFZdFosz5pmvu/Gq4669NGBY0kNjBH8lnUnrya
Zyig8eJDqkrVfhYlkyFfJWpo1LIEUYE1aDXLZaMnaXzZfiN/7kgNHrwa/ldU
QeM1i8aJWg==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#49"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvemdlFeMaxiJAlUEn4xNSLQqlp77A1NMQRSJ4CadMIyVgVTq
eKmlPBo6W8HSW6AKmw8YaqrZiGFAXGcUgZDpGFLBKfEVQAdKEAQRpd5Gv+TL
99c5Oec7xz8lM24vj6Koddw671t12tVDpkTJ81CrbmhJlMT3m9Sw75QivH/C
vp7s9If0cb7XV0opTLmrpMvefYlrXWc2e7Pb8aB/OvJuQigGAl0Kv1AmwNLQ
eCtixVo4+byik6A4/StfJRNBnz4868Ymo1c+G8efXY+TFovFrSgVZ7/doj+T
sBHn22UiN+U+tB9ZqfPOCUPTxPteV3kaDD3y02sUm9C25Lcs1+gMJAVkCret
FeP58hDXz/yUqG8xnJgYFEMpdu+j2YMIWxS/uaEgHNM7ntbTHip8ntgRXOsi
gdMeXXQIL6LKkxeoJXApNEfQMz9C1Ne/RvdMguNVBwS0Mgd2gWwTHQh4XZY+
5g3nYntTepBXLFDDCeDJ81Hdzf9PmA0E3J9R8+yHcScNkksW4OJ4Twwv+ijC
f/j+z5BWIMTV6su7oUbN4rtTHv3A7vLrryk/DTTxD9SGCeBp/ak2ii1Evurn
N6WBDDg7Vk1sEWSdczmZGxk406A8ilHqmNbd28qAk5OvaS/Gpeax2yPJDF71
xKRQRSUIC53w71AxWCdv3aIRayFU+ETrShjkcQ+iZrSoWzhaF8UyoJyjLAXZ
UzHm9zuDSC6QgiAdYMzOSLQxKPW+d9sxpEN32i37QBeD+cGNtY6kYxgZpw3U
EwZxzUJtwUI9xuwpdNMoA3OEPt3Rq0f8Povn8BQDZ18csuOgfYYPPnIj2DPY
vbSAX4a86f89WwQE57iAHNfL4HFTOBTsQz7ifU/AuJ7PzgsiH/EmIzRdxJ8n
JbD9sujrv8aNKBNXJu2M+cQXW4F/yttGMnZ84nM3IUCVuHRSThDJFcamMCFP
+7JDkUowNHthXN1ugvxZYJt1P8FqzuBcIYuAP96xVhXB39zYHrI4Odo6kp5L
cEBQfE0tNkPk7ls37yhBY+1Yw9wbM/Tee1s6tATxXGC2nZXos1fpJ38imFq5
u1x9pRJH/jVepsoIqjmCcEEVjrnvqnlhJNhwpTN7LrMKXVklzVfNBB8ACVyE
Cw==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#50"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWuHAg0kAhqR4hMp88HAKOq0cKTQe2+oIwJRYwDBYXhE8YpV
J2ihhQrS8LIPYKAbm05Ah52CGoKdQyCoVRQxSpCioFajblajUKmttwlf8uX7
dU7O+c5ZsGNP3E4OQRBh7DrvZ1lWh1S9NSL1EC9FkRcfwd+Wtm47sxriD0H6
89KlIJ/m+gQzJA5KX18d7VqFazcbomdpNmHMGirw9liH4YBp8pnMFnield36
4UY4nHw+kiTEBq2pKO8FVLvMk26aVKzty64cHtqAX2pra90UaRDai1wElyPR
2BOz2o1JR/mVQcG7TBEuffgy4JqchfRgY43MLkLXfH2Oq2Q3PL7z9niWF4VX
gaGu3/ozSDQKOgPNUWCE7g+5mr2wPTrqsIiiMR4/dprL24e3D9z1XG00nPa4
CimaUgfNOY+jMU2uFXGt+5Eykt9i8hOjrDrbi8schMnk/aQsQQyfFvIpx/wz
dPUDGcpiMepZAZzkXCw8JvStaRNj0ZBVxnmQh7LzsfNzRsRotvRv5EiOoKG7
Wt7gQiLU9Ryfc12G7KHbmfVBJBIrOj8S/gWQd/RPdlMkxk7XdREaOWzzKv41
y0mwds4VxCpwfc3mmLQ6Es40CF4hPnrqQvgXSbBycgt6CtHecnR8/Q0S7/s3
7iAURVBGRIT/N0wiLLmdLhAqUdmLxjgLiUPsgwirEr8bdL+VcCkQzmGK4T1+
i7kXQCGKDSR/aQkaUlX+M1ZSKJ41eMfxogTdzaXGw5EUPJdfOOFIKoV5RWKb
bxKFuCtzlfm+Kqh+kmrSMyloRapdjgEVmuYdFvjtp+DsiyOmDHmN7adMpRRS
nt9dmD+9HCfJrW3faCn8wQbk6CxHETndoT85hedXom7xXy/v6afw6iqsNN33
Mt6lYPh1zvf/WKpwRpkV7PJoii/2OHJSbNSEaYrPXQ31poTbfm9YP2xhDBlq
tPxYExL/nsKLySaLrEcNn4CQ43ETFJawBu1yDZr7bB2tXBpGdgwjGoRZJZ18
NxrZXoXXZEItel6FiLd40rhw4v8z9gkt5mb8nSuZTSOBDcywWYdR65/LeP40
PgUlVshadXAfjdx5agGNGpYg3KsatqzLg76BNNa29h6w76lGXR9v8e4lNL4C
uHGHFg==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#51"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWtZaYEyLEiGwa0CQVSk0Qw7dchZwBDTYgFLS3tvUYyvER7X
odNhuNB2FDIsWNrKsKLZEEVC0BLCnA984VuMJUzj6iMNgjNbZHXRURh0t2En
+fL9Oiff+c5ZtLU8bzuHIIhUdgJ7iim+uMdakE6Od9+TaDXpsdptazfTUiRG
twaPyz9DlqcyKoXOQlm7O3Qj8yWu3P1xfbQtFyc61B+ZhFl4lsDTz6fVuCWJ
F+3fJUNAL0quwwd9LoXx9UY0lLyaFtiKEBPnrCsZy8GR1tZWgWEbLE73kCsm
D503ZVIBvRMfNqXmOz7dhP6/Z0b4hcWIHMSUg1BiUHz2a768FO4lHemiQSVe
J67gBy2kETdc0VtRng86LeQx17YbSWaS8fJU+GfTaAc3tAJyZX6Ry6xCwB7X
sAcmaeOLLp4aPL09g+vbi7BnKbnNFWqYW8pEXHof+AlnbkgfqRHVk+XhvNqP
yORMy4ykAEfZAziFlXCSymCBoQDxbh/D+fUAhMLjEYqhAnR5h7M58ipEuNZc
bxNpsILfHcu5zsBq+u12e54GVNO1d8TCGohLL8S/N2sw2uEYJGx6PJ1n/at0
UgPWTneNwoB080xzUZIWgTSIUCPEMuHijHwt3g5nbyUM3+GLMefkHye1WFV4
fkNNWi1Oi3N3JN/X4lv2IYSvFh5VZI1iQgsiALoO9n+nU/6UkMhkA6heVo+f
w6QtzmwSddFPHvjH6zGrrzrw9isS4ct72/y67zExYrmjPkYi79wntdUxDVgj
6Azp6Sdhz2go8Y80oDjBE/VyiESgH36ZGRciHFNrfSS2jD2Mqw5uRNWhY2+q
hRTa2UD81xphZ0pW/S6m5vixh5B0drWcXE/N8a0WbNFLBCEmCgPHF0guey1o
iwiad85GzekpmuHo9AQ9/+l/vRAr7vjOfN5ziUImW5CBXVaEq8KM2+9SGJ8+
7WVuWmG8vHe05xGFpazBWb0NzgVdtPANhfssBl7Y8PiX8NpkH4UykfEKk2bH
1Yn+g16uDr1tE6dmJ+3wqSp5zMc6KNmABlSHYYh8Is6O0+F9EtXE9B2GiKyv
dy3T4QdWYJ2oBSu5MlN4qg6r+25/M1veArc1Z2XwOh3+A0R9dBc=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#52"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUnlQjAEc/ewaWpmMppqJDkeMkWMihayeysRspW3vTzZH0Sj1yVJb2dou
sbaV3S3RMe7kzjKOrKbdMSg0ZKiUYtQ0jaMctWjXt8Ob+c3vr/fm937vzdya
GpPAIAhiGT32/Uuxs0GmFQfH7/fl9HgLgz3I+KA4KhBjTnJ3jw4/hPdmuiyi
wsFN63yf9HU1Gp+cXOum4+I7I1MwmhGGLp8JSldKhDsFJ8qHk9bBrucSsQnS
Tm+f0GoOVMn9v1m6LdBrXDcuCYnC8YqKClZePCYrirtGVkWj9iEnkEXtQMKN
pFjzIi5ufRtrc5DuBNtl+6OlNi7MM66lOUTsgtgka7lniMHAXD+H8Z4Upi+R
T1nD54FiT3rN1O1G6WhK68FeHkZ4H84yHffgnGkpXxXHh90eM0+G6OY6RU0r
HxOU+lCmZS9OOQ3crQsQQF2e4syk0qFz0kcFagVwuRLey+jPgHN34raD/QJU
0gcwpJnoFjQOX/YXYnanRcF4lQVlvppVlCVE3dCLSEbEfvy5oE943iCEn8Ml
D4ZJAUq+ztvXIkSspukH4ZmLU0HCd7P8RPhw9oSZ0CkRGet4/6peBNrOpdwN
eagsNTDGm0Swp0E45mPHitNb0j+JMPwiciuRV4COBc3JppViBEjvrs9lFyKQ
VzAyWSqGnH4IYSnEaLoyV5IjBmEHdQA/9g7KqhvECKMDyPEthqXL/KDrjRgH
3Nqf2fqK8TSY1XHlmxhOC+urbJsOYaDZfRs1R4KY216FOe4qIM7rkGaVBPpQ
VbKtTYXaPxfzq2MksPfDxlEjO23k9sssCTZ/bJ2VM7EEGYNPxtw1EpymA7E1
lWD51cOZR07+53scgTokNBvm/3xtKdLrLEVvxpEw1kxb/GCoFME3Hre3TSH/
6W04ij43f59oT/Kf3iQt2G8Xl3QHkAijC2JM1GJw4VrrWAiJvt8XhhQPtegJ
apl2M4rEfNqgVamDsKnTYI0n0ULD+E6H7RKj5ngqiRTn/EYFW49E/4HuHjmJ
+qov562jesx01BZlq0nw6YCMwjKc4ci82stI/JwXq1EYyqB25dV/riFxjBZY
7VyOYekeaWMtiRWGR/usqeUoWBY2lXudxF9FKIOP
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#53"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWkVKR0aCGBYQMEnKjpoImw47NFqaqWIPBRob+/tiITJAO8E
p6us9DGGWAFrWys+45huKFHsjCFgasXOGIYOfHQxjhkG2m1Fl4qKBaW7DZ7k
y/frnHznOye+aEdOMYcgiJXsBPa4uvRqlalAyNx55XQ9kwtjZNtW0Uwqujxh
V8MKUyAeVEWsYMQwlnmiq4UiOHpOr48yZ2NU9Tx7VCbBwIIgbSSTj3t2TfrI
vE0I6EVIFSjp2xtjercZhjL3BM/8GZQ2pmvYmIOjzc3NPN025N2uHHk7lIuf
bmak8pgSRMU5zj7hbMGV0Xf3g6lSDEt8SeW+LXDGte8MlpbjccYv8v2/bcU/
i5KDp8UyMOvP//WpIR9MesjvXPOX6FzbbZqbXICx3KEzXH4lUoztWT3OAgTs
cXVVqHxJVERKChGktYi4vl0Qr7k4V+IoRIO1IpzL7MbyF8JSYaIMERfEgxz3
HqxJevSyulGG4+wBHEqF9mcLykR/yzD/kU/NebAXSy7I80+lyXHOezeTI/0G
RwS273d+J0dycFsM54Ya7rNj16p75SCbul8RsRoUW3a9VYaSGDpzzEmYtZhV
8ufHD7QkWDttmiwdhjvIOeIrJAJpEHw9eGsXt5FuEi/uZhYRum/h7h442QoF
UqhOiSa9FoL6jV3F2xX4mn0I4avFdddFfX+TAkQATB06+Xmxu10KrGMDqFm2
D3vijnm5YwrURT2843+6D6GtmXZ3JIWZy20n/Ir96OAXTkvKopDTMae2JtqA
Zu9gyK/bKVhEhjL/fQNWtHn6l+opBPrhz2iAoF+w6YCNgvJJ37yaGY245PHk
/HyLQgsbiL+7EakzMqP/HXjPjzkI/j1ac306PcU3GTFOtS6sktKwn/rwo2te
I46aqOoakp7SyzqEtOhc3usv6Cm9EBMiE+QTonoa69iC2D83YVzlb1lipfF0
otWrvmnCQ4cg3voDjaWswUmtGR9sFifE22n0srA/NsNWJK3b0EOjIlzvUKdb
UL5SXRXqomE78d+Pk28sWOUKmq0boZHHBmTfehjPE8MS08ZovE4gm9SXD2P2
yQZpH6HEEVZgdbgVswRO1R/Tlfjk8q2vJndYcbulN/tGiBL/A8jGgLI=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#54"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntQTA0cvbNLu+0Ss8oMqlEar1LMqKVPdeil12bTe/fevfLII3UrKsnW
pmQs22Y3CTGhKI1pViN5rCg0no13qG8a34dmkGVkW6N1dzgzv/n9dc78zu8c
t7SsuPUcgiB82bFti3Lz1W265KAfNwbMDd2yIOfUdf8oGDGckmY3a1b7IXyw
0NGbCceMl1dLRqKC0Xm3PnSqXgpRap7kbFEE+j3sVE5MEjynCCrcZBLY9Byj
Saw4GJB7zEMKdcb7n/b6Nei7xXNd0BWHI7W1tfal69AbmfCg3TUeZ29Hie2Z
dEyYJA0MC0vAxW+/nvKpzRCftNQbQhLRPbM1hx+9FT2/grzHuSdhaPYi/jgX
BjFDFZ+j/ksCEyB4wdVno+PhE4mvNhk/Vr9t4Apz4ZbGZKfPS4HNHrd0G4TC
MqrHkAI7VXUwd3Q7BOKmTS3eqThQkyniMvm4Qw6vNB9PheP58EHO+wLsv+fH
8x8vwzH2AA5ViIx+s+ZKmgyzXo8qOc92ouPzltPaSzI0mx7HcKJ3YVCQW1XP
k2MRv8WZ06UEaPPaC6vkkFfe/E64lOBWbDOZqZfjbcPRbkKvwkhRrL+DAwnW
TktJbCkmRX6k3oSQsKVBCHfD8kor8Cog8fVxTBpRWoYsQlRX9YyEH3U5oiSg
HIm4ZlpIUNjBPoQYLUeTnJSkz6VA2MBUIExLLlPkUAhhAyj23ItQU8+3PD2F
iql9D63v9mJphFnypI2CwwJDnZXch8J5qn2vvlCIu+RaXjxNDXenGDfjBAWq
g9UZ1qdqFNR+2Jk8RwFbP6xRBzAwcE7LT1GA/r/XvZinQRdfOCuUUeAUG4j1
pgYReR6Ve/b85TtrYafutca3/uXrqrDk+ZcytUUB44npPtdNVWiMnOxjGE//
0Ys9CGN/R3vvRPqPnkCHzLWcjYtdaISwBTFu1GF5u4Kj8qDx7meTSXlbB6/8
+GaNJ435rMExlR7ljUPZo0to3Gdh/FcP365Wf3kQjUzR7k5lQDXO5CdsUYfS
MNQNnxkzV0P66VFRspRGPBuQMfEQxMN1RksijZG58kpl2yG4eDX65MhpHGYF
AkU1CKzpa+1cQ2NpW0/eWFYNlr/YyvuwgcZvLYx1VQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#55"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbaE0WLcQMRIqKJzhAiC6GbFCZ4FkPFwOFCK0Mf9IQ6HPK7g
YzJsaREhI1BdWxBpw5Agrc+tok7CqlZjlAzdDE6UgJgqj0RWgcwNO1pvoyf5
8v11Tr7znbM0pzhtJ4eiqM/Yce838vzuvZrMjVMTL5TF8yQbA7NyP5cxQqy5
eyViU6EQCc/K/MKZBBz/8v7YRGIcrve0xvtrv0bJJ6H+p/9KwuByT+UCRgRj
yOwZHbUFbj2/FAnC34yVlS9MQ23BqIOnJfgw9mn/wj/TcaKpqYmnyoWINM8Z
iN0G4+1kIY/JQ7x5cEm9IgOXp2f7vKT5CHtlTtKrRbgV9HOJV0ohAraa2srL
MzEeHOnlIWAQKTYPN6ZsBxPNf8TV7sHzbvv/Qx5Z+Dfd1s71LoVRb55eZcqC
2x5XtRemmpNBrRuy4anUxXJn9uG5dbvTeCMbdY1FvlzmAH45cmE2eb0YfucT
nnFGv0PdRVNPpFEMPXsAR1qG0uA5T67OleDjgRk55+H3EGuCQ/nfSnB68sFm
TsohpHatPBpgkSDS62wg56Yc8wW8vN/mSiFWW/+hBBU4F2/PP7VNClt78y1K
q0SvvGO8pV8K1s7ZilQVhtttw6b5MrjToLwrwZ9yCKeTZJh6sDmHUh1GGNEf
0F+QYa20K7Eiugp/i6IN6kEZDrIPoWaq4AwPurLPgwblBlMNmhbezAyjEccG
oAitQc9VJrA7hka1/+N7rpEa7Odbx1dtoTFvpdngkvyAmaGpMQ1DI+3XxVWK
RbXobTpR/5OChi62tsDVVwuXusPuqKPh7ocruQ6LJ0LO9Rpp0C/+WKb4oB62
pX3jmZdotLGBuKz1yOlo6RffeM8PPIrzu+Na7I/e8zXHoDJ2rfagCCwtARHX
Jo9BziscFPDIO73UH1EZ0Vxt8yHv9Pga6NeN5B5eRhDHFsSyS4OGHTGGvBUE
Iw7TpPy2BgNRpS89VxOsYA06lVp0eSt8qkHwOwvLUy12nDpCFSUQFPlWXpdH
62C1Zn8h+IrAbLB3OP/TYafz04mhLIKtbECWjAaIRRkfvaYJXoeI1fLOBvCi
0h1D3xAcZwVifBthGjV0NhcQRHXe2e8sboQo/d7y8BKCtzh0g3A=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#56"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbaKfRgfCPUFKM45qYrRyIhuhbOB1gql7b03VgitSlAWFHsR
UeTRlirBQBBcb8FazfA9iRo1RMniKgISgo8oQXQ+ooKADA0pCFjR1tuEk3z5
fp2T73znhKYYyO08giAiuPHtL8b0W3utm6O7tna0DV1RRwclpf6yhYlEVP1N
ac6wFPK3uQHhjBz/86pbolIiUd96ap2E1SCT3/I+5HMUXi3yKwxktJiQeifM
lPc7fHoB8Trw+C6Dti8Wpbt6x4TsNrh0P54w9K/HcbvdLrSkYkoev7jMsQF/
N8dFCpk0fGxVrn0u3ogbQ9/aBfp0fLs58tWkiEPTgqt7BPEZOJ1RULtOH4++
xSsFE4MZdEpN020aJRiZ6CmfzcTggFP0U1gCRqmuc3xxFpTGa7acvgT47PEt
e/H4FpEzr1IFv0JbDN+djZI6/7ujs9Uoq9rtz2f241EFPeH8FjUCrsjf8npz
YJNEdk6tVuMEdwBPnwtX3jO357kaP7xwG3lP8tAme2kJnaFBjatNyYsvgOhp
bK9fjAYrBZeCeI1G9ByzPwjL1CC5vGGYCDZDpdZOGXJo0HXO0USwhSBF+UPt
7zXg7FwyqyzoThRsMIlJ+NIgxAfRNFnQP7KUxGCbMoWwHEJSQfDOWWkkftb/
ozDLirCt61+dxELiAPcQwl0E4euLGRUOEoQPTDHKM76u2tNKIpYLwLT0MCSG
YO+0NySKJf899PYcxtlTrT22TySmLr9+0qsrQbZsX2fNXApkXUiRaU4pKtM8
p3XLKNhiSnd520sRsqNTDhkFXz+8cWXwKNIC7idT2Nr9aKFp8hHUiTtqy3ZS
OMMF4m04gsGgy+lXD4zzgyqwscnORrPjfOtRsO9kM9IbKTj/mrvitusoAi9o
R+c/HNdT/YlwQeDCrGfjeiIrBkKyX076QCGWK4jzDytWJxZ0JAxT6Bm76DI2
W8FoZ7rlHgpSzqCnkEXNvURF0jQa9zk4X7NwFWdV586isdv/YL1RZkND96f8
xPk0rp8cuOD5bINje0SjPpwGzQXk3FSJa5DWlUTQGFmSXG6srYRZ0awy/0rj
GCcQ5V+F0LHl/b/F0FhT27LPY6iCUJHf8lhB4zuPEHxd
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#57"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMk3cU/dIaKT5AK8NoykNh0+gAu/hcg54AApWW9vupsPlokZdPoKgb
YqEvwRaQal9AAWPQIGrQqTFDDamgWM0iogZiRIEgShX/MGxDLETq1+hJbu5f
5+See86i9DySxaIoahUz3j2h2td62PLbhllXP4b5nhVv4G3LFMgVa+AzWx01
J2ApEgaPBkQqEsArf98Z6F6Jtn8aNgZaaXTY75e39AnQFz5d+4MiFalNJomw
GfDqBYh2QnhiUpjoikHFAdekr3UX9rbUf1nUHodau93uq8vEgwd1mr+k8bjg
TFrjq9iNEvlTzo/nE/D3f1+6ObJ94HKM8aQzER2hVw9yRDlIMdpifLqEeP8T
nzMtSIHNakO++9omKKJnPGdb85E6P1G2XZmE8c1DjeyZhzArW98VGyWC1x5b
dxid7rP2sSciTNfaYtnuPzDSqLzMzRCjsjqXy1YUYKLwCLfdJUbAlYRBlusI
OC21oc60ZNQzB7BkR+EzxOut7UpG2Eu3itWjRJlnT4pylQSXRp+JWaJipJWb
bQctEvA5zTzWPRXy6980Z4xIsOPk3TEqSIPH4/1KQ5AUQ411HZRViyttWwrn
ZUvB2GnWSHQYjUr/teu4FN40qJnH8PLWyGploxT/PhOnU7oSvPYTaOV9UqyW
3RZqokvR36sJefdJikLmIZS7FOG9Dh7bnwblhUIPv55HezMFNOKYANTLDVhh
2rW1T0JDH/jisWfYgOFIY01yBg2/iOunPTvL8Yol+ZClp0FuBpeqF1RgLEyZ
F1FDwxZbccDTXYGOgeD6FRdoePvhSarEbP3CnCAnjbS3TxarfYxobXD4B3fT
OMcE4rlrRLu1yGwY/M7nncLltpicOxPf+RYTHBP9v5xYQuA4szDqzqgJRa4B
8y0++aYnMeP34z3FZQLyTW+GBdMOVcnDkwnimII49lgw5ty29nMKwfDkxVGV
04KB3ZG5GjnBMsbglNaKqfGSc615BI8YOAaseJGRlV1QQJDLPdamirYhoqgg
8H8VwfXTH5umPttwb/7P5vWVBFuYgBwpVTDo+HVzrQSflu44qbpRBf79au61
WoIaRmA9txqm2Ky1IQ0E6248/HMqrxrx+2uWy5oIvgIBpn2T
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#58"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWsp8kgkQ2QwCtGpiKhjgEDYKByFhmqLQB8XFClKWNY5KNcV
dbzaUkUaG0BoeakVgYCCSgy+zcIYIBbDHIpkD0RDkIeLiasiUBh0t8GTfPl+
nZPvfOesT88WfssgCCKEHtteUB7+OUefHKWcnQkxchKi2PszvkmjwsDaOVc7
NOiP2LE8ty+pWFCmlpGspjB0PWrguhsSYZZM4MqNKIxutC9aSyWhRbs5LJod
DZuemyAVmQeDyeEBLnSZU4uOhkNosVMr7qzm4WxdXZ2jJgMdAsdu48JuXO7j
hzlS34Gf3P44o5GP2++XnjlID+Pvc5XtvDVx6F13/UcHQRZCp8eC4pL24rVv
oIOdN4ULOxTB/sfiQXGc/mAajkA/Iyv48HUC5kTjzUxnBX5o+jO8/VoCbPaY
mhy4ioWl29cmwr6oKpppOYrK+WklS5GI0hq5K5M6jpKUnXK1KRFu7bFjjKmf
EP4qOeW6uxDn6QMY0jx4+ZnkeVIhNoxYlIzhfHz64GF//UUh2sxP4xiCQkQs
8MjeUSECHa6yGT1K2F+445njLsKB8u4PhLcaE2sg28wXYbz5XC9hKEKrdNtr
/zYRaDtX1fEa7OP1Y+OwCLY0COcT8FCcTDu+JMK7p3HphOYkIriDUZ/FihEq
vb9bzSnGpt8/KeyXiZFLP4SwFCPjt/eCRq0YhA1UCfb4+MpTesSIoQNQbdWC
fW+cW/BCjBL3vx5bJ7UgKnRt3HkxVm/vMFpTT8O7xik02E8C4V2fYpWnDpag
RZEmUoKqaF2m9ZkOvtkDWYMiCWz9sPJL4fUfa/lKvgQHJwa/UK0qQ/oEa0tS
mQRNdCDW7jLcP+vC5Fz8yGefgafbjltTv37k6ytQWK9Oe7IkQWf95wG/mCvg
G3Br8YgzuaIXX4lCQaul2oNc0XPSw2gaKigJJBFDF6RTpsfMQFeDlENicrHV
rOzTY7r/39wnPBL+tMHlIgO0842njVISAzQ6XxpgDp5tsspIyF1PdCk5VRg5
hEgXBYkO49tLy/NVaL7Les49RUJMB9RJVuMf1a4HinISs34HypU3q9HyJoKZ
WkuilhaIdK1BUMj3pXYNJMJvmo4tZ9dgSOX1VVYrif8B8Mp5tA==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#59"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1Q03Uc/rlxCBjR4dST2zgTBElcRyZGBjwk3ipQHArb7/cd+BKeutz4
EZaIthcGsVxAtDfmWy+GCS311MhDWwM88qU8Mj0uRAfnECzOIm7qIFi/XXzu
Pvf563nueT7P8/y20vztPIqiUrkN3gmN8tIeszyz/pSqf+L1rZlCpmT1ZnYV
xMNPr4o60yAZrBSIWQnubj4nmZe4Fu5rX6ydb5FifEjmbvnjLdyND9XPY2Vo
9daVH07KQ5BPkFuEDcLbc6+vlMK0e3gy3LIVO5YPrO7T5uOQw+EIrypB7IS9
wGHaiJPdOavC2R2IGj2WvHTXJrSNT90KK1Yii/Ttq40rwOVFZ94Ny1Uh3Spd
tL+zAA8TUsJCRCz4XQNLTuQUgk2P6OVbyqD2ZuxM6yrEk433m/lzyuFSL0l4
O1mGoD1+1R4YU/7UNH0kQ6jeuobvfw90j+bVn/plqLOro/nsXsStGMqvSJRD
cEoyyBuuwIGoi6oRpRxHOAG84koYFlwxLjwpR9wdv4Z3ez+mjof4PB45Wsdu
ruPlfgAf1RAyGk0jJcwp5HVpQCkXKH7NoqFo6PRRIh3c3TF1z6ho3G8+fJmy
6NEb4dkrbKfB2XHq8qqgeDlgcPTTCKZBzTEg2/vlQMe/NDg5lbpuA1oEB5/r
iWHwz81126iqauids8VPUhmkFre/qUuvwS+PRiNLpAz2cQ+i/DW4tFIrzlAy
oILD1kL78Ia/w84gmwtEu8yI7aLBrBNOBrXzf78ReGDEetvjWWo3g2eXnz0a
KDqIRBWbMO1lkH8htka70IRDB7bQoz4G1jWm3YFbJpQtXhYfEUoQ7Esgpw6i
cqMnMp5gy1DPYu3sejS8MiiJfIngOBdQoLMeImm/tjST/I8XfoLvR76jquUz
eHMjnBsUp3urCVyfxbz441gjbH7Z8L36Gb68T2G50y79sGmGL8IM3pkj71xr
JcjmCuPaaYbAvcLIniN4MNkypuk244ekzzuuXiR4gTM4rbfAKygPbb5O8DM3
Lo8FA21RyeLfCNTRBrcm3Ypxx8ffVvQRnD3619fTT61445s4W9EIwSYuMFeh
DTo6tmzqEcHjpYoGzXkbko7ds+3yETRxBBnRdvQ1XiBfTRKknb/y/nSpHa/l
tf19epYC/wG0Gomo
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#60"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtkntMUwcUxm9awkucWgvxQRURQVExDgYDV/gYNIiUV++98wF2IhAIYL0M
H9hCS0uBhkYQ24JFjKigCMgMiq9tYACrcYtBgjJCdGGdsrktBudgQGy9DTvJ
yfnr+3K+8zvrDh6WZHMIgghl2zHnlHnfHzHsieqrzDgRokuL8t6XteNrJgzi
pswKbXoI4ibk/CAmDj5h06riZuD+4wsiL2MqAoJj736+XIQXfs5qT2Y3kptK
4jOpnXD48cX7EZiTkF0wtAv6gsl5N2MG5qJKx60PxGg0m81umizkXMzoy01L
QpslIcyNyYHX2C1nQXsybv3zYcRVmofav+oIXUYKBn2uf+MqPoSl9XvC146l
4A//7a5OAgaWudbJTUgFI3Qf5RoLUSJs1L40p2KGtLZyFxVhR4SvseP3VDji
cTVH0PLut7+ZIAmc1aYY7uxRSN1fZl8ukOBkg4zHZY6jM0GpO9YiAb8rboIz
WYz3e11UT59L0MQuwJHKEfHmyw65E4n147NKzjMFQn+Mb+YFkWifGk7kiEvh
82lozRqKxHbXTm/OgBLrinrGFx8nkV7b/y8hKEOVqf1QZAMJa+vZQcKoxqWB
QH39EAk2TmdZsgbPwku//eINCQcNYlE5evy3vffjUGDXkZdZymHp+lmkWEHh
3XDiQUKjhSLXYz57K4VQ6b34MmEFOl5dve4cTeEEeyBitgKr+J02OUmBcBRT
BWPkzLLYoxRiWSCqzTpU+gt6BrUUqrzGnthf67AkxT2/0EDhk63d5+z7q+E5
PqGt7aIgubOmQrVSj8aupwGC7yiYYvQF9hE95M3zPyx5SMHxL/aEk5CtNZmS
XlA48GrIV+VSgye63aPXJilcYgHZ+2uwKyAi5szU/3rvU1ia67FhixO9oDfU
wddFc8/mR6P3/KptfVN14A0H+uZvoRf8kk+z3Pplp4LpBT93A1z4v670jKYR
yz5Mb64BN4KrFYo4Gq/nr04pLQYYnleOtCXSCGQD2tRG3O5Wvs3cS+Mntnp/
MSI/evXstJSGjFd+Xyk0IXFAWJeWRaP73Nsrtv9MKBw2fHZRRoNigfV+VY8g
7lCSrojG9Mb0WuXNemitM547i2mcYQ0ieQ3ge/wpspbQCL/56JjtcAPMoyJV
mprGR5kvevM=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#61"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbTICjVmqbUTAziBIUMUyRwq8jiEOp4VYcQ3qKiBQWnv/QHq
qrZQHj4QmPbyUqvRio8NNzUEHyMdA+2Im4Z0AjInDBowmwSDKKOiXG8TvuTL
99c5Oec7Z1GGOmWPgKKoEH4d9602uyXfsCkyWrJiMDcwL9Jjy+412+mVmJv5
lUX7twIxAxrpMjoG6qxPxOOhm9H64PxaGZuM2Tk/h/Xt3IFnvi5F8+iNGAoe
/WIqahccfNLENJxtGYqJL9uDcuXzKVd2J+g6z+6yrZk4VV9f76rfjTOCfs3v
fVm4YklY6Upn4tdU2fATn2w0j79/LErPRmyQvadqVQ7ufXqdiBJzsS/eucLu
p8S/fsEiZ08aXr5xs8smlKDD3XqELAObvHdLd2Mu/v/a1iAU5+GnEol/1DoV
HPaE+nwcMPmmBvap4FJUHS20F0DWnvwkfrsaFbUqiZDeh0Wz/Eo7/lRD+mPM
gOD5ftyqdG9r8qJxhhcgSNdg/Q+iW53raPg8tWsFXQdwf3xemFVD4/sxq0KQ
eAjz71z6MtREI1jU6CFo16Jz0La2oIPGtqq2N5RnIfycfM/3/0fD1nD6HsUW
YbHGaRXxZ8DbaSxM0mM8ufnifDkDRxqUuBgD17Teo2kMeDmaQksxCtqWihfu
ZfDKqsig9CUIeOMUZT3OICT9blxheCkMp//iPr/A4Fv+QZS9FPpT74/KmxlQ
jqEPw5T3myrgKQM5H4huyRFE1LiIfEYYHJb1PuKGj6CXKE2r3zGYs/SmkUs7
hs8uSkeECwhSbnuV6tzLETine27XYoLq6HIl97gcGcZYlltB4OgLl1CBgSBP
Y4WCYMdQp7fuo0qE3OgLmLWZwMQHxLVVYir/XMr0rhm8x3fQe581s/tn8IYT
WC6dbBUbCcznFgT9MnYCsu6R5UkNM3xJJ3Hn439G5Ndm+NwMGLVnPdzYQiDn
C2POMiDSqjh4sJ1geOrqmNZiwOSmzLqMBwQBvMHpIhYn3y0p0fUQ/MGPuZ/F
xAZG1PKMQCUpbtWGV+N46Dc5920EN40vL09PVkPqxqbEviRI5QMzb6jBoVGE
WV4TTPhvq9I21eDo4LIu97cEdTxBhKQWEQlBnJwjWN3UsXdaXYu7lS90cc55
+AATdoiT
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#62"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWkRClp+VKhRARk6ZvA1t0gnFDnhYWd4qBRK23tb167KIgjF
oa44S1uo4KpIaQtUIT6WZj7QKJIqAzqDghtsvqKAEVaNw/fmEB8wVrrbjC/5
8v06J+d853ygLMrazCAIIpZe3/1Hu7WjxCJOvBbatsMjUiaGSVXxm9Q8FMRk
KgJ48RA8LA1ZrhZgoPZT91jKWlzuPZbKtW4E9+/ZM75NScfwIn99qDoXT0WD
F+U5G+DjC0mXoTb7fB/bLwumgieTgVYFYiqOLZsnFuKQ3W4PNKgw6Eh9uiU/
Gyd60niB6jzUvMlp6c/MgXPMc4cl34pBQeDmEbYIVyPPbWelb4Nr/IbfiXMi
PIteyfILV4PNV74f5+dCnRA0wLQWY8g8EPTxxVy8Fz5yMGd+jUr+Z7b6KDF8
9piGEsR6wwvb9GL4623JzIkd2L/J8rq2X4wD9YUcpnoXVA+MrLYoCULOCh4y
nnyDOQuFDcV5EjTSAhjyUlTHn3ne7ZBg4f0JLePubvymH4qs+V2CU6O3Mxjp
e/ChooNv5EixktUcxriiBY94cYGfJAV1sOstEa5De3RXXGyhFI8ch68SVj3O
CJ355g4paDvNuvUGNPZW5R1xS+FLg5hZjt7BzuAMggQtp1TXU443wl2r+iNI
vL6doSQMFdDcWDynKJ5ErPzHdboEIzR7O/WpIhIa+kHEhBHv7Ev69EUkCN+o
K7HnF4vd2UQihQ6kbEkV/l1+9tXzFhKV3HvXvY+rsEozt9fTQyJ4WUuTV/Yd
7Av2TXJfksi6FGEsm2tCd8DIULKHhC3ZVOC9Y0KkJ2a4kU3B1xdv2gFIZyc3
s5dS+GLkZlRZQDXab+nyE+MofE8H5O2qBqdPUXJLQP2PD6vBR2u3t69RTOMt
ZpgvlJ5eWk3BdWTeip9GzZgMzdwoapjmW18Lm+amM+L4NF+QBbP2V1w72koh
hS6M6ysLrrjdAapOCo8nT45qeyxYUHw96V43hRja4JTeihnz81TP7lL4lR6X
24oQyXGDaZhCIaf8sjbBhqRPtoT+9QeFlqZXP0yN2/B5qvEQMUYhmw7MJaqD
9st2rnOCwrvF1EFtax26FDujeIQMDTTBGk49DsvT5u/1l2F16887p4rqoQz+
M84xS4b/ADCNg0c=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#63"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvWuZUMmIQR6yFYdIkCjOwYaPkMoxoCgtj+EydIEyEB9jtNze
++twGEspYJWmIrblJQ+dD1BRSIWlEQRXgTE1wAjMGGfQgDyCjiFhiM52t9Ev
+fL9dU7O+c5ZlZ6duJ9HUdRGbh33tSqznRj2ROTFXN/jOpkTIfw2IzyV3oQ/
u1f/HOeTiOinuR6f0dH456OW1s08KW7fPbfdy/gVRNLw3xWb9+FxwJJ8TzoJ
/f6KbT3JB+Dg85CkwLImpWL3vUPQZU28ERjTkJP24lhOWyaqKisrBZoMhO2d
EwUmZKGhR7xJQB/EBwNrk7RnZfhl7u2QizQTNl9lqL5dji6/ZsZFIoPKlu5X
0pSNqcAQFydfGlWS0JBp0KBFSx/wjQqk/lVD362msbB79CLflUVRXY2T9QUN
hz2+hqCP+cSvPkyBJfmmSP6iEsG3nmRMKxXQl8vd+XQOxo6tedXapIDH9ein
vInD2BV8NHV+VIFqTgBPmgvBzUll1nIGqx8tqnjDR9AU5Py6bSuDK7ODsTzJ
UYgjulu+P8AgxKVRyLujgveDZePPihkkl1jnKV81Or3DsksaGYxePNNFGfPR
HsObPjfJgLPTqI7X4ODUzGkdn4UjDcq1AJ7B01X1QhacnFx1TwEWZr0n/L9k
8XIwNp3SFOLXOYklIIbFRunNXWpREXY2W7X9UhY/cQ+iFosw0PZH2zaGBeUY
WovQYXZ+zMQiigskb91xNGsLv4i8xELr9bDPPn4cgltbnLtaWbitN9fYU4rR
kKYU0oMsEi0ri/J8dPCS99dZRliYInVZ9iEdEk7EnpU+Z+Hoi12sx3/Oj0tn
+ATfPRvwz3M+idLfnkT97UZwngvIbj2Jh27izxkf8g4vPAVZ7/PcoPXkHd5Q
ijArP+jDBIKOuo83dM6WwnJ1hWgq6T1f/Gl82hgn1qS+51tqgL5wXjEqI4ji
CtNxyIB4z6QxMyEYf3N5VtVjwCNT9LIdRwjWcgZt+UYUsteu3NES3OemY8SI
G1UvL9zQE8jdC26rRCaoO2sPMwYCc81Mve2VCWWyhcn9tQRfc4F1fFMGr+KR
3trzBP8GJZeoWsrwA9ng1tRAUMERbHUvhzk8TVdxjWBLS++Ptuxy+HfLF5LN
BP8DdcCOVw==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#64"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbaKBYxIRYwGmfIoPlACc9ip2BPAVCKkgjCMgUpv770KQr0K
vjBrC4iIFSu0lXVC0NT6aMg0SBRBCwHTLYvzgc9pyMBGkBBdWiOICPU24Uu+
fL/OyTnfOcvIfRk0jyCIeG6996u64G6JYYckcdLWNqdjjyRkJ7VhF7sOVv8v
cc3OREgHSoPWsFLIZ9l+cmtl6Pr74uZgYzra4wsT4pIy0RfhU7aAzcbhlJkT
vMvZ8PIFpeYiMLpr9OqWndAVDk34GhU4f3fNNxuVg9/NZrNvOYX8pX3zr4fK
cdWxdZ0vuxuf3E3HV+h34danyWcCeQGebOvprlTm4f7SGwcEqUUoPmjViIfz
MCyKFcxcwsJ5m4oLzVWATfB7yTfuR77kStTpbgXGtjutfP9iXD8bKwoIIeG1
xy8vgSU4PdCyl4RPmSmJP34QN0c6p161kKipVwn57GEU5Le+dblJBP0hHeAN
HcGfEQFNrmglGjgBPHkpGjoiB5oVSoS/GVfznh9Dl4okn9YqYXP1pvFSf0WN
IMM8dk+JWEFzCK9HjfUjJ+qMg0rk6Ls/E0u00F/KYoVzKDit5+8TxjLMl86Y
N1tGgbPTrJWVIy0o44B/EQVvGoR/BX7MtA4FVFPg5JRqHRW4ENHp2myh4O5N
I4ny45ixcoPzVQeFeHl7ijahEgtGkx597KVwlHsQMV4Jpp0vu/aeAuEdtgoi
8z2HZh6NZC4QzaqT+Hqj5ME/YTSqgv996Bk8CYft9fbItTTmrm5p9OSewgps
fLw+k0ZGW2ilZpEOjrmMeJGShilJV+h5psOycPmhxP00vH3xbK3BZ1L04rKO
Rt67x2Ga2WcQUxc1MlZPw8IF5Ok+gwlF7ninZRofchbx+tWSl3em8YZahDda
kj/007A3LY7pdNVC0t7T7xie5pPVYeTFwoZU9zSfnwE+t97vVvEYJHOFse8x
4ElMhU3ox2Bw4ppL7TCgf2GJujiQwUrO4FSZEUKxNevIDwwecGP/zwhLX2R1
mIiBSljRpU4wQZzecNsUzaCl8f8rU19MKGo7mjUgZpDJBWb/5Ryi8pgq+yYG
o8tz9OrWc4i5WCpRJTP4jSPYJKzHZHXvCXcKg59b/zo0ta8eG7PfSdNkDL4D
Mx+EVQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#65"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbYESzGOkM7gUhdhuhAImy4ZjxHGMbSCoaSpD6ybBdcIHQLl
3t/Pwobx0pYRjQy6rrcggrq6oWi0Tta9uq0ahzAXRggBCfOxoAMCZjMVGaCT
7jbsS758f52Tc75z4o1V20skDMOkihu+T/kDPx506bP12pRt3oc12cp39mcW
s2ko2pVdc+GeDrnjtYrX2FywW7rOWIoNuParR71G0GG2b1Yy023E3Q2RthfZ
3SgIpt/P7ypBmE+hMcBxOyXz1l8mNFZMPYsS3kNSmbPU5C/Diba2tij7fpSn
q0s3bSpHV29+WhRrgjVx7nJ7SQW+mX0+LCs6AKVmd8xCWSV61n9JZJpK5Om/
eqLIM2P61c2yiHUstJFMYf/KKrBZ8lGpwMERM6ae81ZhfseDTmk0RUfGABda
zyJsT2o/iAg/r0o2soi0uXOkixakFl2tL+xg0dRqjpWyNViluvuua5CFwps7
Lpn6ANX7Rm8EQiw6RAGSolqcMv058nESh1duL/KSkUPoaVH0OnUcLgSHCiSa
w0gYHfXlWThsll1USn7mcSi3KxDXwmGv4/ocs84K8vWdCb2Pw4PO9h5GsEHp
MDi3znAQ7Vy0au3weNVXyiQE4TSY6Hrc+WnE/jCOQJRTa+2tR2aHb+ZJCsHj
oQIjY/8I8ePPPzu/hYg+/NusWQ1Y3a77N3EnwYfig5jFBgy82Xm8uYSACQ97
BLsUC/byBgKVGEhd8lFcSn/UHy0QHFkzNhCaPIo4uYaZ8BCsTuk+GTIcwy2/
nPA/EGz/7uWGurWNMD+2xe/pI3DnNFaEhhtRnXZ/3jNEEO5LKL8Jx4zZb52d
Itg3MZhQt7IZizORNTRI8LkYUOh6M2ab+rxDT//HKz9Bcenhm8ZVdBnvckL+
vdZbmUwROP3S61eDThjm3SfoG3SZT/spxuZVltQMuswnd+GLDS7ziq0UKrEw
gfddOJc0tzFGQzH57HyQ73XhZo5HNq2jSBINLtkETJsGN0YYKPrFCfwh4PSl
SX2+kcIcW3+Nz3Lj279/v1xqoug++ejc0oIbOxjTCwkcxU4xsEBhCwRPzPQN
C8U/iXsdvK8FK37zN6lrKY6LBG/HtkJIGz51hqfI8P1SvVTVCs2VtZ337BT/
AbIAjOk=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#66"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbYGimZmwdJkWnQgMYrrGFt4hRTOfHVG3lsENx5SaWQI7W3v
/SkwbKGsg1hB9BY6QMVFydgkzOCbmEqAgQEhilRBMAax4tRlFiMThdbb6Jd8
+f46J+d85wQoNSkqAUVR4fx67ht93lWWS4uluYZtJ8+QWOn3OdFZdAS8Xw1z
9x4mQTFZLP6cVuBv4ax31KF0dPb/tkViSUaHJFfhOKjE/SCvMj86FVnrdz8z
DKrg4RPHZWA2MuJWZ1YuzPnTb30s2VhUkmoOY/PQUF9f72PMwdaNmSevb8hH
S+/2CB96D/ryfrSOHCvAxZcLI6LMPFR1rBd9fFeNnk/P6kRxBRjoVnw55tDg
n7WhosX+NG772YeGcmnQ8iV3hRYtSJF/atZNGv9/O9UsXMpgoaJpdPlnWnjs
CY0sSgJoy9gBLbzKajcJ5wjKk7dqIvu0qLKqfYX0fsizJRf2+uggblNMCqYL
ERXS9ILZosMxXoAgsxinV/u615TosGZ8Ti+w/4QZu20guE2HP53D8YK4AzjT
3dqyYkKHUFGrVNCth3Vw5XO1F4P0w12vKP9SKG2rvqmRMZhqbuyhLGVoiuky
cgwD3k5raaIR3IDm3GKOgScNamk5PkpLLFKdZcDLKS7tLUd10pOwJwMMZobj
lZTxZ5wIb/W74mAQntmxrVRuguqpcsG1wKCIfxA1Z4J2+OuECTELyjN0BWao
QPvtGBab+UAMGypRn/CUDUhhUSEZG3I/rkTB9FdB6hwWy2Ttx90ZB7EjKW0q
6RcWKZdXmQyfmHHikowV1bGo3WTOd4+YkWaBSdDMwtMX9/YqqBeti3N2stjl
uBlo8K6GyyHtmR9kcYoPyN1VDdl4pb7w3ge8tAbMyzvJj5wf8NwRXJkfr9u1
ksDWtCLkmvMIpou7fugLIu/5Eo9CPHH/ml1G3vMt4eDd8kw2H0OwmS+MLZcD
2XmjX6ogePz2D6e+l8PqL5ZFzyYQBPMGXWUWtGf3X5jMILjBj+2BBfGx0fI3
OQRq3/JOvbwWYTtVjaN7CdqP//e763UtQiJL/nIWEnzHB2bbUYf8f9NVoQaC
2XXph/Xn6/Bgj/w1TAS/8gQxvlbMBEsOBZoJos5f3+fSWNEmmAgarSF4B03r
ji8=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#67"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9Qk3UcftsQB1OoHexKpyhZFkbJ6YEKw2c3PCA23u/QlpAjIquJE14F
UUZuYwh6jY1kG7gRlRZXkBXHrVTSNYVbs+tMCc7juOx2NDivO/kl6ERZ7+74
3H3u89fz3PN8nmd9aUXBBxyKolLZDd/HurIrVda9O1/Tt85rp5Q7RUX7099l
0rBKvXv8Tv9mZPu1ca8z2aCLDQcOJqfD8/u5XUKbAsMufcvDRAn+3hBZF8+8
DcczPYndP0kR5ouTqVDkmRRldO2CSTOxEGV7D4JZtWRdSjacDocjyrgfTr9h
pl+Tg2+9eWlRzEeovfIdqWBy8fPs0yFecRlUb3XE/5n7JgbW9RzhyQ7BVdpX
dZiTh3svp/Ai1jDIcl5TpZ3LAyOOvsO1HUbUg6KrWzfJ8HD3WCeXXwlnT6Yw
82sZwva4xioU3l4+mRUrR2SdXcoNHsWBsfh79nI5zG3lAi5zDP4fnSe5A3LE
/ZDt50wcR5NULY54Lh+fsQI4xVrYzM8n+ZT5eHE0qOMM1+Kvp/W+nNZ8dE8P
yjmyE7gd47u451Y+UngXRJx+Hcr4B5vOLqOxr/n6HLXGgEveFU2dqTTGOtsH
KFsdpGLzl3NmGqydCwbaiC3zoegnLhrhNCh+Pewt05F7R2iwcrQGbz3uV/el
yBdozAzKSynjSUg4VolpJUFqcV+uQdyAkuFXBytFBDXsg6hgAyQJ70ccSyKg
wsOcgvBye8HqLIIsNhD9ptMoae599i5NcEo4cjM0fhqXk3NzQkUEMcm9HSHV
J4hpHP3YUkFQcGltg/4FE66lbREKagjsUpMmNGTCKHP1+wQjQbgvoTwznP/1
NQdbCEoCtxL1yy2wBtSqISfBV2xAoesW1CobC5Xnl/CiT+Er3Kj+sGcJbz0D
7/n0mIwbBO4vVr3x6/QZvGSorhq5ucRHt8DCtwQwtMQXbcWDysDnNXdZP2xh
3Goruvw7xGSMYHyha1rntWKDJtC+MEGQxBpcrLOhe6P+nZEpgj/Ycf9jw9RF
kSd2jqBcUO/Rie3gVZ6YSQwS9HZMfrP4yI5ftFsPjVMK7GEDcytb4dumueGI
UGD+lX3NOlcrSE1GwmaeAmdZgkxBG35TPHJ38xXY7vJVL1a0wTMx+290rAL/
AxF6gtk=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#68"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbQKpUY2CbrNINMxdWJax2LARyrHMaxAO3p/dWo6qAo1GGR4
RXyh9IXlYdMqtNgxeeiYGxg1DoFMR2onBh/A5hDDpmJVEEUSFC1vab1N+JIv
31/n5JzvnAXJu8h2DkVREex677g6rTHLsjlq4IhTEB61OSpYoVq9hYlE9QrX
zI1D4RA/yQ4SMmJk2v3urv9eBMft0zFzrDRml0fxfCu+RtfnvrrZzCYUcDaM
nNbGwMsXJElC3F5bnqtODGP68wl/6zb8ST9ULc2MxU+lpaX+ehUae8dPJt+P
Q3VzfKQ/k4qffYaL27kSNLyd7OAp0xAmfvnIMinB9fkXM3mSH7BloGk4ul2K
vkXhvGnzGEx3J+0sKvwWjIjfybXuhmabUC9ckoARefcZ7ow9uOHI27ezPgFe
e1x9FrpsWU/bPpbBV1cSzR3bi3U1tvUCmQwmW0Ygl9mPnIULJh/qZAi6IH7C
eX4AzK83xbUXZChjBXCU2RiZaGxQdMoQ+mBMzbl3CCFVoy7VOxnODrZLOZIc
9H2wVSkOoRHOOxfMaVJjcbXfiEpEI/HYtSFqnhb8g7MiZylodJ85eZ2y6tDR
eb5lkYkGa+ecNkGPxAn/euoXGt40qBm5SOlLuii9TIOVk61tzsXbZel3lrfR
eNMuTab0R6BZ2/rlf04aEcorsVqRAalrTl3+bpDGQfZB1JgBKW0Rjhs+BJR3
mHwYjClN3Z8SfMMGollagH5p9e06AUH+nP//9vQWYMClD7i1iiBAUFvuSTqK
8de68y5CQP4IMWg+MeJsWbBwoZKgJNqY7ukwIk1xxdSyg8DbF0+8CZ58If/U
YYKtz+58pvEzozIkJ9BpIKhiA/JcM8P8O+XTYJ7CBx/H1Us1j2Mqp/CWIsRV
mFYVNhLYK+cuuzpYhPk92ysWN03xJRSjbCCjKu/WFB/fgtDDonXWe6wftjD2
HRYIIteGxj4g6J2oGVQ3W/Bh/V9hLY8JwliDbp0V/bKucfQTtLJjd1ohnevY
v/I1QUZgrkMtKgHfZTfzhghqy1/95h4twbQiq/IrN8EGNjD7xhOo6sm5dJwj
x/AXicfUdSfwkSLV2eorx48swZpAG/61jaa/4Muxsu7mPvcuG0YDsv7pCZDj
PW9+i/c=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#69"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1MU3cUfWtdoWgcQiWZAdTNIHHZ1BjBworH0K0g5aN9v0yDtDjjxDCl
T6mW1tAvbFAqILSIHR9ilCAdzukMEsJaYIDGDUOYxE2iBFFBo5mF4GCFdq8J
N7m5f52Tc+456w+o5N9xKIqKYzdw/9Pnd6lte3emBm0bXDyZvTMy+2BiLhOP
WbV2RezFbZCM6wRfMBI0Pu+KDecC3fcvfxVhl+EvxcKUNEOMJxt4ptXMHmSU
tV8RFUoQ4BNIFZg5JKhc+zgV1iOTXr79W9xdxU3a6E7DDw6Hg28+iB/j9uGs
JB3XBtLi+Uwe4r2LnUZrBtpnFh8GK/OxXbQ9uqQuE33rfj4eLD2K9tU5e6t2
ZeFVzNbgZVEMrEM7mNzmLDCikEdc+zG0rBOqv17Iwr/0RDN3eSGED7YENaXI
ELDHNavRq4hd8eU5GXimmmTu/AkY4rPfWe7JUF5bEMZlNEjWmDSNPhkEP0nG
OZNFSBDmzR3dLEc9K4Cj1MGf9Lvx5j45Ph2d13NGTmGAJ9AsOy2H0zOczpEW
I7Te2T95TY6twW2RnN/0MI/IxHfvy5FT2TtLRRkxzsSMLr6SY6K5ro+ym7A7
pKDXsZ4Ga6fNmGmGQrzmujaBRiANankJfLq3qlYZDVaOzjhQgkdecS2dR2N6
OP0AZT6NqAa+pOEUjThlZ6pRZMFE2dhHLRU0tOyDqHkLXt+IbixvokEFhilF
dWluFd1DQ8wGYvjsDFTOtiLFEI3SiL8f+F+egVtjfeZ4SmPl57ca/IoyjPXt
uTM1R0PeEW0xfGxFAu01R3xIUJNsPeJ/aMXzzknP9VCCQF/8aeXYsN+QmBxD
sP/F0CeGoAosFPeY6C0EV9iA/L0V+MDF00wLl/CR5/HknDt8Pm0Jb6tCruK4
avh7AtelNZvdniooPe6zvMIlvsxqFN4Mc85ql/hCbGib7p4KLyUQs4VxHbbh
xoz3z9RygpfeVo9+wIYmZXd+io1gE2vQZ7KjSMrtdzYS/MGOa8yOw9l5LeFX
CQrCSrr1ohr8untIl9lKcKvhnxbfXA3exFi1Kb8QEDYw1zcXMDjaUc3vIHgf
m1Opv30BiXcGi5u7CC6yBElhtVg5opiK6iEQ3r530qeqhdFhOaTuJ/gf+2eI
Gw==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#70"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1MU3cUfbaktJSYyJAIKzjF6JSJkkwaReBMUEQqKBKUUmvb9yuyoviY
1A/YSmkBkU4B28pAiRpE0DBFhE2NKQS0MDOlgc6FmKloBtH4EWpQwdHuNeEm
N/evc3LOPWeR6kC6mkNRVDS73jut09wpNO+K7/7OES9bnxsvkpKYPYwYXYLk
ALlsA5JGiwIjmSS4EiUV7wpT0XP/wsYgy3ZIe7Julxl34J8lvNL5zE60Jjxa
bujKhJcvULIbjqBB51hkFkz7xj8LLEr0PagoHlmWjYb6+nqBgYC3gCoZ7pOh
1Z4iFjB7oWlI5u0KkeO39zNOvlyDb/Ymyxti9uDuV+0/8CX7QU+l1tQEK/By
aRTfJ5TBHF61uq1MASbW72+upQBRWTd8k54r8HHHi2au8CBW33lY2f+tEl57
XEMhmDRnnFCnBK/UmsCd0uJ9zPpNVd1KnKjLD+Ayh1G1KX6GmVYi8GrSKGf8
CE71UxEdq1Q4ywrgyIuw5Y/MiECFCuGPp3Scv4oxR3ited3PKlyZGNrKkfwE
e0bz0K+dKkTx20ScPh2+EGVRz0ZUkFX3TlKherT6fjkY9Z8KL5rP3KUspbhX
zNMWrKXB2mnTpxkQCWXO8wwa3jQooRGXmaWPf8ynwcop0tuNSFkRXZ1fQcM1
tFVFGcowb3WT/ulZGtHy28n62HJYhRmDrus0jrIPoqbK4ZD6aPvv0aC8wxzD
W3+fnIWvaCSygZREVGJRGLE7pmkcCxp56BmrRIjhSN55P4K5KzsaPburMJ7a
c/jJMoL0m2HlJcEmbItradesIbAmmPZ5nCa4KrLF2zcQePviSTkB7VV/o1RK
oPjXsbjE9ySaLg3k1aoJmtiAPL0nIdgoXpzCzOJFNaiqs2fnlM3izbXYTIsf
TbYQ2M6FrOqeqMXF698XcNpn+dJOIX089Hjv77N8fmZ0XbjRuN9OkMgWxpZr
xrlhTbDiAcHY58sTOrsZrWHBovlOghWsQXepBZ3H3fzhZwR/smN7akH4gKth
dIwgP8DYo4u1QrvlltD2mqCj8V2L+5MVqblLJl9+JMhgA7NlnoYk0WSPnSH4
8LWsWtd5Gglv36zM5ajxC0sQF1CHUPcML89XjbWdA4fcB+pgCafnbfZX43/R
Tn8E
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#71"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUnlIkwEc/drUZtIl0yxNLKtZ2qF/TErM1zlKTdQ0C935fSvE7MtNrUW7
VBKXR21zWYpYlJ3roExLli2zW+yQjJIOSYsos8Oa5tY38Ac/fn+9x3u/9+ZI
d6VQLIIg+My674g6u1VpzIj7c3m63UucGxe0jYwR0dEozV619J/fegjeq7hL
aAH2DQZyBD3JaHvYsM7flAw9dXu4VpmO3nleOj96C6LDu3j5D7bCzcdNyMK5
SrtNuykThpyBUW+TBGW3AprzBEIcramp8daTuMuvCivsFeF0R3y0N70dx95E
JBebxWj6OfaCI8yGvt8qHgmRoD3kUh4nYSfS5xuUKRYJPi+I5HjMprGqoPvf
hDEJ6NhJL9mm3WihnVEpaVL8Se07yfZRIK4vvKn1uBRue2y9ElzRil7egBRe
OvMatiMf332SwqbOk6HckuvLpgvR6rF5Wv02GbhWwXvWwB7sL2sw3TfIUMsI
YAlVuN5chKRmGUJfO9Ss7n2wqhzy5+9kODv0LJGVsB8bz0a0vPIkEck5H8S6
o8bKQNVoF49EZqX9NzFbi4rOFqG/gETfyWPthEmHxFSvRzfVJBg757VJetg0
IucRCwl3GoRPEUJPHc+wW0kwclTajiKIZVVzZe0kfjxLlBL6YojOWQMaekjw
hTc2aGNL4FNgF9R9IbGXeRDhKIH0ouK2cowE4R76AMiIgIyZwRTWMoFowksx
9FmqmL6YwgH/V52u/lIIuQZjTAyFKYuv1LmyypB6IeormUYhpTm4RDPTAP9r
9W0aCQXzGkOO64UBTfERSzx2UnD3xRVfjtf8slqFnoL4Y9dczcQK/C4JDt19
kMIJJiCXvQIjgz3FY+ZxfFAVqg6TtW8bx/HGQ/jx0D6Sd4+CrX7W0ltDhzDa
MXVDdec4X9JhbMzy/KTsHuebZMRk7RNPxQfGD1MY2w4jhp+akms+UegfPTOk
7jAix9FlLP1GYRFj0Kkz4WhrbOgTB4XHzNjemuA3v7Gc56KQ61vUpo41g3+q
aVmahxxX6gYbnX/NaFzNbYiaIsdmJjBbejUKFz7e2u8rx3BYZqX6ajXmyJfx
8mfIcYQhWOlrQeQv3bV3gXIsv3q/wLnLgq89xZZFIXL8BykViOo=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#72"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfbYIRcgSCEVAcMBU0IFakmEAK8fBpMpXwKJI2/feDE5DtVRk
c6vu0VIRtFPRthbELyQgCpnAdH4BIqsMGyKKMnEEF2GiQibCxiaw9e01epOb
++ucnHPPCdqcm76FRxBEJLeOO83kNOcbM2OlI3cFDWnZsf5Z2TGUegWmGfcf
umNWIeGZxmupOgHDvks8ojslaLNVfuZtSsPZB5+IzzOpGFjgrBOqN6JrQNbT
G5kOB59XkgIpDydGS/2kMGx/MeNq+hyzK4t9J8sycKK8vNy1MBuSkHkdvfc2
oLYjcYWreivcB8NZ1+6N+PHP/x4JyByM/r5HtLUmE9bAhjxB0g7oK95ceqvY
hFeLRAKnADV+7eMtTP53E9TiOY/5pp24KlonjdufhX/WD1Xz3XZhZHjq5Hds
Fhz2+IX5CLL19fOUMjjrzHH8qS8hkFXsG7TJcMii8uSrd0O73/p8IlAOr+8T
nvFefI3bRXkXz6nkOMkJ4JEapCy2K/2vyPFR/xTD690DH2umLWNSjovjPcm8
pG+R0X29zm+5AiJBvT/vJwaV3jnNwi8UkB9pnyQCtDB5GcZ+sSgwVF1hJUw6
ePy8zln/RgHOTr02tRAxPqWS5T4kHGkQbnqYdNPEUjEJTo5G26FHe0jBlVsU
iYme5M1E4T486JPIA7UkIskba7XiIqweUdXrT5P4hnsQMVWEa/a8iLk3SRCO
URejPyRvp3KMRDwXSMHHJTC/TmvJdaFQ7P3kHjtcAsZpvCRsPoUPwptOsYqD
CJZ1shESCunX5hcV+BpgCS2PrpVRMMcZtrOPDOgMpOrCVRQcfWETD6GmsenT
ulIK9PP7wQUuh7Gt6mlL21kKVVxAbPthNN+pUAY1vMf7l2JZcz4x0fUebzyK
tlmqlwMshdYzfstujR9F8F8e2Y2z6Xd8qccQ0N9ye6Ub/Y5vjhEPNVFhN4Q0
4rnCtG4z4qo0urrRj8bwzIVxpsOIsV22P/Z+SGMJZ9CuM8G8OqXXEkqji5vW
30xQ7J05MBpGQ+Wpb2PEZlgj7sbOE9FoOjV23v7WDKdXgxphFA0pF1jrhuOo
LXscPLSSxt+h8iPM5eMYcZcJjaBRxhGs8rRA+XTthUXxNKIud35lz7VgzcuI
oDMJNP4HPZOJBQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#73"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvd6yUkCX2NRGTdkUyXSoILpAt4EeaaG09941IOILqjIQI7Vc
JqjUWWixg1F52QLDQZBUFHkIQqP4SEVkyIgYH7A5lkWZA6LZVHxMmJN6G/2S
L9+vc3LOd87CpPTYFJIgiBBu3fc/w65LmdaNa4anHake7bFrJJuTv9zKhoIm
fN80nl8KxYheFMgqEPVqZWNhSwi6+usixbYYJF89My/0Whj+8Ocb57AboBY9
LZt5DHDziehENLnMazvWR8CiHX/tZdsOBe9u5uJWGY5WVVV5mZJR76ft7OmV
o6GXCvViU9E91rTlQkskzj5/MyjQ7MKk5OdV59Kj0LOg7RsBvRv62RXG5yIF
Hn4SLPDwZXFkZXF/kl0BNtz7V54tA6m7pWvTP47Gq3UP6nk+e1BXyZ+RcTga
bns8UybSfJal/P93NPjGchlvKgv9N4iXYpkSRZU6IY/dh4sH1vMTSpUQnVaM
kOP7kbJJeEL8ixLVnABSo0efz4bIuDkqLPp9ykAOHcCpqei0Z1+p0DhxmyHp
g9g0YBlvyFMhWNAsIa8aIPOUm2c7VEgo6X5J+Obiabz0cct9FR7U/9hD2IyQ
Hy/bG7CCAmenOVdtwmSE1nx+HQV3GoRPHrLjPKl7mRQ4Ofrc3jwcfESa7lop
PLvNJBGmQ/j0hS5wuI1CiOaCMjfcDIG+bkB4nUI29yBiyozOBbXqplEKhHvY
fLz4or+xQERDzgWSs7QAosAgqXcAjXzxbzdcYwUg+R5zd6ym8eHy9hpXYiG6
jhV685NpxHZ+ZM6ZZ0EJOqQZWTTKZRata9CCasfy/R98R8PdFxdVhDjFP/v+
Ok5j2+hNvxzPYtwx2r9XdtCwcwG5uotRQxYdnXnlPV5SCoPxdMPQ8Hu8tQxn
eWnZKQIGztr5QZcnyjBUo2/tEDLv+NRHEOzfFlErYd7xeVvxU9/A4NdBDORc
YZw7rZh1/7PDUVIGY69PTRh6rXBqS/yGwSCAMzhttCFMQ/y5KIbBdW6c92zQ
5i9LHNnIQCfM6zKEl2M0e88OzTYG7TVPTk5PliPMIz7GrmMQxwXmjK+AZ6z4
FpvF4N8lCSUGRwXUpdV+Xt8y+IEjWC2shDPBv1lnYvC5o2/vdHolJPGmVnsB
g7dZ0Xfl
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#74"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfbSOFUjqVhAmVgUGxKFINEvxq3CSooQVdCqW9r1XNpoSkTH7
EBHHsJQCQsYUWMtHB0pQUdygMEL4UCyogG4iH06GiohoAD8Sl86MWZzU1+hJ
bu6Pm3tyzj3XV6XZlcghCELElqPPa5O7Dhrk4VrLna6hEFW4kFRv/ooJRSA/
cSLkySZETmV6rGUi8aa9sbfVthU9f9Ru9TTuRPPK4IjScSkm/J1zljBxyJqd
V/V5fAkHn0e0Elv29T1L69yJopTZ1y7GBPgu88oI+mA3fjaZTC56NV6NGbZr
Po5Ffb801IXZixHqoXLyRSzaXr65zYtPRrOn+Pnl+j3o9Wk+wIv+Fp5hJU6L
ImV4GriOt2g5g8qmRknCkAyM2HWMa0wFn3IvWLotDv/tflzHdUvDvjDTBrU5
Dg57XP1BrAq879XlKodzTpmEa0tHzamAWIFSjmMV+wVcJgNE+LYZ61k5PMyR
U5zZwyhuE/5Y+VSOalYAJz4TWdOd13iBCnw6btNyRr/HaFT5Yi+lAr9Yb8Vw
oo8ga3htTVqxAut4DULOVS07F03+dkkBuvjKv8RyHdzzxvnbnyjwuK6qlzDm
YHrwYYfocxKsnQbdDj2mBdKLQTISjjQIt1yM9AyUD6eTYOVk6vpzkfTo1xSV
gcQ/t2JUhD4PIs2sTdBEQhR/IUonzgfPqfMC/3cS37EHImz5iMoeups1RYJw
gCnA1LKRPhGfQgQbSPbqQhxNv1Hb5UehwPPuoH2mECPrD8x9JqLAD245YVf+
gAcSK/kRSWFXx4r87KVFUIe23zQnUyiTFKXYbxeh+pHYSZdJwfEvdukxeK88
FfeygsLX08N+2R8eR6LJt9ZcR+E0G5D9ynHUpqdiqOX9vrAEbUfk1XtvvN83
lEJ/Zs//43MULDXeId3WUvR0jy00EfQ7vh0/4Z46YzLAlX7H52qAb3WGyU1I
I4J9GEuSAUZZwMU8fxozr89btf0G9LqfpFrW0AhiDS7kGOHT8Ils0xYaAyws
k0bMm+nGKgmN/YLcHq24DDKrprD7CxotJ/4+t/CqDGkhJcmknEYsG5hFVo6B
embwr3gac6voYm1rOaRJo4d8EmlUsgRhggr8aXI2b/yGxsbW64cWNBVoqCqs
8k+l8Rag1YYD
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#75"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUglMk2kU/NMqFDyDoCJlvQ0eeMRINQQ7q4VGKUEQxRDstghKafv/n0ir
oBZaaDy4bSugAssqKgRvRMSlVERivFCUxUWNGhXPqICgKFL/Jrzk5SUvmcmb
NzM1hgmP41AU5ce2Y/7QJfybZNogTEn81MCbnSjkR8X6/0UEOGcMMhmeB0P8
IsV9PhHjfeVIviU8ErabZYHjzWHoGKWbLHaT4ukMJ70HiUSen9JJZJbDwecu
2Yix85QHyvI2IVP15qcLu9caucIsnzgcKioqcjHEwjfq8jr+9s042RwscCFb
0PF2hTg5Zwtqen495EkTMG1Gxv0/d8ajacrZRJ5EjVM9IYX6IAXezVrEG+ZN
cHtCWe2zPgVIgGs717wVEbERtuj8BHxb+7KcO2IbOp1bxt31VMIhj2tIQpzo
1I6FJiWc9JaV3H4N6mUT657blcguoN24ZDuEY6WKa3IV3E+LX3De7MDwNTVr
5XUqHGEP4EhTEF3yVTjgqsb0x/06TttOfJFtWl0SoUZlV2sIR7IbAwOl9MxC
NRbxqvicazq0R/4IlfynRnRuYy/lnYbkeXG/zo6h8bL8cBNl1sOmkef6a2mw
cqrSQg0QvdXWLz1Gw+EGNSIdM59WCXxaaLDnpKQ1p+NVk2DDum80ultDYihD
Bi53zJ3A8WbgJ61blRZghPVvL008GCSzD6L6jZjl3FN+Rc6AchTZg26Zuu9R
CQMRa0jq3L1oa2+lP9cx2DP+/7v2zr24v/pJZVYbg9G+54vtG/cjUNA8ZTOX
ILz2D2OqZyaSYnke90YTWFZmquwPM6HIiJKc8SRw5MUenI1e/yfCHl8C2et7
01Kdc6CvONMYLyA4yhpkb8xB29JAkQZDeH4einOobeqwIbwpHzHGcyc0DIG1
dNKChq58qITDb6/QDvGFHsAur4+FLbuG+FxNeOQl+7RkH4GIDYw13oTFxxvq
PXIJOn9WdOmaTci61X3nqplgDitwUG9GrderYftK2dywZX1mhtPFjHcnjxHQ
buk2XYAFy7ZW55dUEJwv/nxi8LsFzh/93cddIIhgDbOuP4gP1/8xWy4R9PlE
5+qqD+JBv2J27xWCQpZguVsBuNmTYxbbCJZV39AOMgUo1zyuCWsi+A36tYj9

        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#76"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1QiwEcfm0uFedIX0sNDUeOLhdx1XqOSJqylYS+tva+67piGFGstnSV
VGZbM4QkVj6uS+J8rIzrfB1JNZ/nIxWnw/KZrHl3PHe/+/31PPd7fs8zTbRJ
QDIIglhAj33/lmdck6kTwozahDMskTDMe704OEUaBFOvsGndnhBEvMlxnSeN
ANtqHv2IGYnWu9XL3DV8pDxs2HDk4mq8nO6gcJOuBXtC7udQtzjY9Vx5SUiP
5aX3PI1HaWb/sJNGiJjCbn3X7HU4pNfrnZRiVES/6G+esgGGtqggJ6kEIW7c
4uoHiWj+au10TM7AQORxz5Phybg1tWGLIy8LjA+mY/x9KfgwM8BxtI8Uj2I4
d97Gp0Ia6mxmajajucb1k8Gcip+xPbXMsVuRxNznP7xSCLs9plKG3vh7mc8a
hXBQaJcyh7bBqjue1zdBhDLdRhemNBs5FuF0GSWC6/mIN4z+HVj8eHJgVZMI
R+gDGMk5iPPM6ub9EYHzfEjO6MpF0XjZ3RXcNNRbOlYxeLsxc3VY+aLcNAQ4
nvVm3JTj/vYsS/2FNCRWmL4TPvnovlSf7fU+DT21h28RGgUYnREXSpaLQds5
mx+jRHCNYThwsxj2NIixBdibm3JikV6MwY5VIkK5B9ECbm/QWzEWJl+JzA8t
RPsT2xc9k8RO+iHEUCEcSmonczgkCDukRVBe8VWFJZEIpwPIm1MMq0fB9Uk7
SBS5P31g6yuG7HmAUaUiMX5uY5UtaS+2tryuG2glIbjMLsxjlYJck3jqWzcJ
7dLSTFtnKXjsiT7WjyTs/bBFlUEw13OAP4lCam+7b96YcnhM7Px5dQaFGjoQ
m6kcTrvK/UVB1D++934E9Hy1qRKof3y1CtxBv0uVagrGY17+LRYVssMzMkZV
/9eLOQC94cRNy7n/es5qTHm4wrCrjUI4XRBjuhoK9lGTbweFvuE6i7xNDfn5
/kbyJQU/2uCIQgPO99jgrkEK92kYX2kgGCc86WylsNGloFUeqsWNVL7qk4ME
jVWfT4/80uLd7eiWdpYEcXRAxvhKLIk7Z+7yleDHrMQKeVMl5meZ/XRzJDhI
C3BddPBildR5BEqwuOn29pFNOvBPq1jrQyT4C/7fgT8=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#77"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtkntMU3cUx29uEQtk4EglKjgFjU6w21BXsijyJaB93vvbEEWRx0QcjiFe
JpvCXFtALFgLw7YgU3xEGx8UYoQBg6Uw0Ko4jTLBbgadD+j4YxJkqNVAdxt2
kpPz1/eb8z2fE5qxO2EHTVGUhG/PfKPO/iXfuDkm+8S1G8eVCTEhyZmr07ko
mFsXpB+zRUD6uFD0ASfF+c7Y7au8o9DVe3pdkOkzjDXqPn5WEo3Bxd5Fs7kk
9IQpmv4Sx8LjJ1KlIsirc2CZfxz0Oc63PqZtyBBbl0oM8fixtrbWpzgT2o82
pgxcXYfzdmWUD5cFIjqo//3GerSMT94TpmVjie+Ms5xFiisLL30tVO3Cl7f6
hrK2yTCyJFLoNZ9D+AuLc56XHFy0732BKQ+vEld1kCNyvNrw1CLw2wPnkH//
xQAFPPEExflwStb4URoFvIvMcQLXNxCJxvvLnyhgqMkNFHB78fyu+0nAGiVE
jdLHtHMfOgKijLRBieP8AnRaIehP//2nYkCJRQ9carr/Oww9CNvSMFeFi2N9
DK36Hn1ZhSeWJ6kQKbSG0D1qhAZvlLVXqpBS2T1BzddCJw/3H+lR4anl2BXK
VITWn+sO+YUy4ONYtaQYVpcsza5g4KFB+ZVg0v48pCWPAb9OodZeAk18b8zC
agYv+pgMqvgAxh/uLYttYyBJa5dro0sR35KYSBwMCvgDUa5S7NzV07TvJQPK
U5wO1RONK7rELOJ5IJqIMuQkzNmyWMpCF/THbfdwGUytDnlkOgt/8eU6d+oh
4FzwXaueRULbe6WauXrUOkTtslMszHH6HPc9Pb5K7rb+3cTC8y9upQH24dya
AgeLz4fuhGlmVmBp/cPl5SMszvCA3N0VmKCqUv50/a8P+QGpysC4vDlkWm+s
wuFRQbOeJbCdnPdh51gVRhsmhnuTybQfOYJk4dE28xdk2s/XiF/FsyXO/YTP
PT5p22nEs4Cb0gIdwfDbC2NquxFsaNL9hiqCcD7gVJEJ+8/KxO9aCH7jy/bI
BJ/MzQZZI0FuYEmXOtoMZhapX9lKcLlu9NzUazPPR5G/8jpBIg/MtqkaM07X
d7B3CF6+n1Kpbq7GO4MxdISD4ChvsDawBpk7DgbffETwSfP1b6d212Dwp62X
Ip0E/wEWyYK9
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#78"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbQGS/FVRDYdGhVBghkbguBjxaMFK9CCbe+tCgVRceJjUASU
FVcKtT6oj0FbGVDclsUACoQhm0TGY0LAKaIghDRMNoOCaIKrotAW6W4TvuTL
9+ucnPOds+pAqvgQgyCIYHod16o8+keGbs9W0/OKLFtQ7FbP2KQt++QheGL/
1c5pCAT/mcLdX85HSdTmCd+dQOv9n8M99CK8iQsneF1heLrGOXeJfDe4GkXk
Re+dcPC5C+IxPqev1HgnEtrjozYX/X6ETsSfHO0UoKS4uNglLwnp48b8uPRo
VHREhbjID6M+IEJm7Y/B7+8+9rESjiLaqivJVO1C+8raEyzBNxj7zHRwHSHC
mE8Aa85yOYQGs+JiighyLnuAqU/DNp2ldKRbhEnJ8HWmazqu+XO/bvISw2GP
mZeBcj2bYqaK4Zxr4DEtmfjbFqdAnRiXilLcmPJTeLnImF49LoZ7Df8ZYzQL
IxtNBTu8JTDSAhgJCtidpA0mqQRegxYloz8bKYlfFi46I8ENc6+QIfgOU2uT
A7OqJQhgVXky2pRojQz69+wTCWRX7r4nlqtQdTM7+6cPEgxfL20n9LnYW1nI
/GoDCdpOlSomD8M1SRvCRSQcaRCuakT299YfO0aClqNQdagxw9l+bUhN4m2v
8ACRdwZNhZ+s6CwhEZxwJ0LF1SBUOLQnopbEt/SDCIsGm9Refpp2EoRj5OcQ
O73Dr2iMRBgdSM668xibGKw1Wkmc8zB120fO45Wlid/IprDg87oye3w+JtOE
By/4UhA3rNDkLNViaXufcncwBQNPe9zep0UnT7btNI+Coy/2qEvwH+gJmIqj
kPji8eqcuZdR7MFnJB2m8AsdkP3uZUi7X0/FnJjFe34PdsWa0/fOzuJ1BeBs
GWBZb1Bo/nHZFy3mArxd7PrI79YsX0whlnH+1M5vnOVj6xA03fCb5S8KYXRh
mpN1MB+xPmD3UBixVZqVHTq4zx8KeTpAwY82OJOrh/jFp+W9zyl00dP8jx6l
0W5ptlcUUtzUrUquAXWyfB/zfxTqyt6Uz0wZsL9t2CyYpkDSgTVLr2L96spT
t52k+OAru6Ksv4pOb2X3pLMUP9AEoW5FCH7YM7hwnhSb6u+dnEktgq4lOdmJ
I8X/Y6eMJA==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#79"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbYDChpMWAFH8AVs+ECMe+CjFo8CIuMl6mDTwoS29N4bpHcM
hkBoaRmjtFNxbalM0BhTH13DlopTjN4xxiiobIOpRIwxBkVJYAiydYDS3WZ8
yZfv1zk55ztnZZ5yj5xHEEQMt547o6KvFxs/3pbc1B7IJjHbQvfLRJ8yG2Fb
72rbnboLiY/LhdFMItiHlp1lU3vRfvNMQpApA4ESQWWw7BM8jPDWBDJZcPjb
V7wpz4aHT5iSjaw414E20UEYCp7N+ppyUcsGRY0W5eLbxsZGX60Mhtsfrj6g
zMOFruSNvowCi29FPxFBih9fvr4jyKGxk0nyGh+XonPFD0WClEPQXs/IdNbI
MPLOBsEbSxn0Dza2BPrIwYj9Bvimz/BXp6Wzt1QO194hK3/h51ig/lk2PiiH
xx5fW4yOvtpfb72bD2+NOY4/XQKvwoqK9zX5OGIpDOAzpbD3RC1qcuZD2JL4
mPfsMO4NbOKv81GgiRPAyynHi90JzYNQIPzBtIp3twK2tDavQyUK2Cb6U3kp
lSgWlZTqrQpsENhDeb+oMNBKhrN9CkiOdfxNLK3Cqh3ThytnFBiynuwkTBrc
HG1gl8eR4OzYq9K1yLT4S85ISXjSIBZWY3CKrXuhIcHJKa/qqkZs6TVl/CkS
k/2peYT2S+gvibb0XiURk3MtqUpcA/rc2NrLfSTKuAcR0zUwhsSoV46QIDzD
1OL7c7ZdPkIK8Vwg6rU6CGdj3VciKdQG3f/NPayDzY/5SrKFgv86R7M7W48b
3z1J75dQ2HN1WY36LQPSrkR84CygYI4zFLjvGKAf3mp3VVDw9MWdfASS55N5
209QOPj0jzC1z1FE9kydLbJSOMsF5O44ihFdy43Fjnl8aD1+X1J3z9Ezjzce
h1S3rL7sJQX2dMj6nyaOw3m3e9HYq3m+9G9g4kXHenvT//P5GfFn2P2t4mAa
8VxhWNKI8Nd1o9LlNIZnL06ouozQ94a8vSOSxhrO4JzGhAVrdN3vxdC4zQ37
yISZj5Y8TRXTKAyobleJzbicNumKiqfhaB4/P/evGVTm1xEJGTT2cYGxmQ0I
rhzLrc6i8c8qyTFVawPKZ8xD9dk0TnAEsQEWXHLWP1BKaWxu7f5iTmnB9lfW
/WEUjf8Aj4OJfw==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#80"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbtlWmAP14EZChUfW5gdM7oFZpBxFlgaAg0BsTOOokIF2t4f
XB6iMmkphdWJPKTFAlKMxUbGCEEmxpCtkK5hhjlHOoiZuEF1o2DmoG6dVifd
bfRLvnx/nZNzvnM25pVkHaIpiorjNnAfq5XfVBj2Jr1UcDCrp7ksKXKfPGE/
Gw/dSvFrmq/SIHZVhb3LilG2/Fd58rAUYxPnP15rzMRxlyhUcCcHv25ZpQ1n
P8FwVPe9ySsHEOALS5ehPF/2hqciDw2M+0mw8SBWF0st7ul8dHZ0dATXyjFz
1XQn+h85esfT4oPZQqhj/BELc4dw5e+nU/xcJaqfpun5vQVwRA+W8dMJ3N93
3fs5sxCLb23nB0Wx2FV2ybz790KwiSE3ecZSrH+vICZIXoSHu+9aeaHlGB7r
W06fKkLAHq+2AiHHW1/9KV6BVdq2ZJ7vMNbpSgY7WxRoNBULeOwRTFzQhmXP
KRA2IHbR7qNYSvr6B0mMEl2cADq3CpnOEctZhRKbZ3xqevozOL7N+SLaqkSf
xymh06txMnvrUvuMEtv5/ZH0d2qkyKztlpdVyGm2e6moGrSOBHXbE1S4az3r
oIxadK+nTb5GFTg7/TUZtVi8f0PqGFIhkAYVqkNwj2eHYFoFTk5VzbgOsRfu
X9zoVeGBU5JH1daBrnsgfvt1BnG5I6k1ifVot9z27N3G4Bj3IMpXD9kjy+St
VAZUYFg9Hn4eu6WgikEKF4hGdAKbnG++M9DCQL/2lxv++RPYk5lvHrcyeCV2
yOyXncRH3anXHNcZZF0V1msiGlC6QXXb+RuDtuQGxj/VgMNCtpNeZhDoiz+t
EWMvOiVBawgO/DG5SbO6CTe7Xij1CAl6uID89iaMimbn42LJM3xkC/QKSbhX
TJ7hDacR0d/S9cERAtu5ddtGPacxWrl/elH7nC+jFfSgfu79U8/5QgyQ9I1U
D5wjSOEKYysyIFQbLXT3Esw/+dKjHjdg9tM/bT9eItjKGVzRGpHRP1k/bCe4
zo1t1ojKY0eTbBMExQLdmDqxDeGDj0V1ToIh89LFlUdtqBNLd2a7CLK5wGzS
M1jIF4rkCwT/xuQ0qy+fgcac6Nu1RNDOEXwoMGGf1r7B5SXYefla5UqJCQls
uDfrP4L/AQfOkV0=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#81"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9QkwUY/to8HHKRIpAoZIgNQ1BIG9u+78PnGIglhIIpFUNCwCIGKygb
nGM/hHHiIPy+iYg0UTDloDwEQqRBShxkGRHdrsA4jgOOjDzMZIsf69vpc/fe
e+8f73PP8z6vf1puQgaPIAgRV87+nzqrK59J2qWyutFtBnqX79vp5GFlOGar
xtyfm/dGzHiB5zZlDFa+EVg5kBaAnu/ror3Z/VDJIuSaLS/j3mYXrZfyECbr
Gf8NFSFw8nnGylES7XNRog9FWfb0giv7LpqvqEa+ngnDuerqalddOoqXO8fe
X7MDV/r2hrsqj+LNO8ZLha470f7P0rAgJQuPmWtiZnQnel+89pEgVoGf4xeT
006/ihlhmGCFnxIhNvfbNaEiKOlVVj77IX58lNpeflOE+cSJBr5bHqJmuvyN
onA47fF1+dAN/JEUWh8OF61Jxrd/jP2DzRdKXcQwVuV48JXH8LrM3B1xWAzP
L2PGedOfIqjRLmz6SozznABeSgFWT5yv/8smRsCIXc37tRBxNVtP3SclaJwb
iuPFHofgyL56hUqCMEGTL++2GrnCjV3rWiRIrrj1L+GnQavdYFBNSTDRUNNL
sFqY5Xt4wVFScHaaNPE6sGtfCo7IkcKZBuGmR/NkScgpkxScnAJNnx6zV9Mb
3uqU4uFQXBqhO4G6sZbfx0elEKV0vqahi3HfZ3EhaUkKFXcgws7NCZGBsxtI
EE4oDTC2e/W4HSARxQVStLUUZrbPb0RBwuD9213HVCl43kJtQgkJ95CWWof8
JCzZn6vM10kkdLxQXORTht0//f2orp+ESVaW7RguQ17ONuvlURLOf3HsNSLj
T2vi4jMUUicHNxWtLMegtTDrg7UULnEBOW6VQ9PRtmP9ZurJvu9nSM0INmTK
qCf7TCXy2izTwwUULOb127vnKkHE1uamG57yxZ9G//ZDA8eZp3yrGNy0KbyO
NlKI4h7G8h4D/Z4AbWQbhamFq3PqPgbzQrbX0k0hiDO4rGXxLfPsjaZfKPzA
wTLGYpPw4LrAexRyPPQ9atqEFXJVR+IUhZbaB18s20yw5dtEQ/MUDnCBWQ6e
gSLv2HdBBI3HW5Ir1K1nkDluXooU0DjLEUR4VOHuK+90+a2mIWnt/2Q5twob
M29c/+Z5Gv8DsR2DZQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#82"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMk3cU/WyHUkwIIYiIRZAKQl8/SEAyl8LZqrLxSCcIOCktIsTHUD6Z
r8EotNjYWqtgC8jEMMYIToUYpoYxRcBaqIqoYTNuM9OhdeASeYxpYW33NXqT
m/vXOTnnnrOyoCSjiEVR1BpmPXdOtevqPtPmpJ64lke538UkcbcUfqCkE5BX
I+3I+ZGD5KdlAWI6GbNRO0eVzUvQd6tlfaB5I4yZxupcx3I8XrVQvYTOwdKB
ft7KojB4+ALS8iC5KbE1fxwOQ/GLeY55K1wju+XOYR6+bmxs5GgK8eR5SusG
3wictaYmcOjteHh40WeK4EhcmXGOeit2oTY8SOPnioQl7GKpd9puTK+VDf7a
vxrjkbHe74XQmNxM6xcUR4GW+Dxkm/eiwu/c7cQF0XidOdbGXvwFSto6c+O0
0fDYY2v24fb8m4ruuWgsVNdJ2Y796LMf/MmnkA9jwx5/Nn0Qce06X8cAHwGd
yU9ZLw4hu+MH01yQAE2MAJaiDNxPBznS7QLwfnOoWD+Xo0b/KuV+pwDnph6k
s9IqoLZMx5ZNChDrfYHLuqHC/sCk8UmhEPITA7NUSBX+0cdvGi4UYqzttIUy
qxGf9V/++SEhGDsXqmQaRNDWLV/NCuFJg1pcjdn7z+Q5oSIwcsqqrNWYuFYa
ot0gwvSD9AJKcxgxQwdk6z8XYY2i55MqiRYhSpNzxCjCl8yDKIcW/CdeZ7M7
RaA8Qx/BIf3VdtaECOuYQCoFOvzNvfJsr5cYRwIf3XXbdcj1t4WWhorhK+o6
4847io7grJcnZWJkdK/QVi4zQEO16MeKxKiTGordowYMKsP+jCgXw9MXd6oR
vFYZ2/atGPnP74VXLjqOHsRvTbksRisTkHvgOEyWRKfL+g7PrUF8cNAvcX+9
w5tqcevo6xGKR9DbHEyuT9ViZ0v6Nxkx5C2f7CR0dpEtUkLe8vmYMBPAm6Sz
CNYxhendYQL9YX3UTD6Bff77KZXVhHuWxx/5FRPwGYMutRlex7oSiZrgDjO9
f5ghb/pdsdZAsMe/uk8lqcPctvqX02aCrjOv2l1v6pBHdJfL2wk2MYH1Ztdj
fJvTL/Miwb9R8hOqS/UYLmhaYe8mOMUQJPo3QFrKn0joJ3j/0tABV0kD0pXX
NqbaCP4HHFd/7w==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#83"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbYWC3YoBEmEKjiIYVs2ZZmYiYWjKMhLoNwHUyiPqQPlUQYq
Vr30IQHHCrLeUst4KWOoaaYYFN0ACRBAp5NgjTLckOAwPoigEUEi3W30S758
v87JOd85q9Jy5LsFBEEE8Gu/b9m9bfmGhGAXUfISsVURLN2xKzBZuR4+oa2N
k6cDEDaqcvtCGQZzSk3djT2b0Xnj1FZ3Lg5E5qGMWoThH18HzTIlgxLvgp0J
/RGw87lFJaF5rf+k+mA0SjMfzzlyqaiTpjdUG2JQZTabHbW70OnmZ2lqiMWZ
3sj1jsrvkDZzd6sHE4fLr95ZxYq9CN2c90o1EYce7wvfi6OyMPvsyxPyLDme
rPYXL1yhRMr5t8XMsBxKmdM9IZeLdtYyIAqMx5v4sUbh4jxIJOc9bGXxsNsT
avPhEtr1R/hQPBw0xhDh7H50Z0sdDnuS0JuyXYXKg7hZMnTUSpNw+y1sVPC4
APp2eW7CjySqeQEChQqiqiN999tI+AzPsoK7h+EjOW5d8ITEuanBaEHUUbzw
eb07zYWCv9giFXSzGK54NJgbQCGxvOs1sUKNpc8W1HAJFMYaf+4hOA1cvTW3
Eo0UeDsWdYwWqZvGjhy/QMGeBrFYh4x9KucH1ynwclTqXh3Inu2pulEKLwej
0wjtMSQ5BX5z5g2FAMXv4WpZET5prf4zW0LjEP8gYrYI9NmsTdNeNAj7KIvh
0LpN1xJCYwsfSOFnJQhPpAQeJI1i96G/bOMl2H5uWWvttzScP79YY0v6ATOV
xtgINQ35lZVFhctLMV8FWbmehjGkNNNmLcUileX+mioa9r7YIvXoG9lobm6m
kfLfwMeFi8oQ52t+/msbjQY+IFtXGVjPJUXefR/w0hPwlaWPXvv7A95QgaWr
H55Mf0ejo85jzbWpCnT9sm48SMS854v5CXMkN3ddwrznczIgor7glrMngy18
YTrSDYAodOb2Kgbjc2en2F4DuqdNVtKPwae8wXkNB4vjsTuXvmJwk5+OEQ6d
D5r0pg0Msl11nazMiJXJg2u3gcHFmhdN8zNGBE38y3pFMiD5wDroSnwUzeVF
xDKY9kssZ1sq0Z9T/zSKYnCSJwhyNcHL/eoVvx0Mvm7pPzCfY4J2Q3vliILB
//lygDE=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#84"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvd662kKGgtVFKEZRwGAUXRRcKONoC6W9F2nBgBoBxfpCgaui
MoylFCuEBgTbgqho0CgiakxF4rM+IPicTi0Sgx2rDbhNFBFQi9ruNuNLvny/
zsk53znTM3OT1pEEQUSw67kj6qzreYblMc+fpLqGREkxwpWqqAwmElWPbwvi
hsMgtRcI5jJS2PTW2oAxEbj1oD52slEJTbbZOvF1FGwzuUWTmFTMPbdmWPET
4OET0GlYaZd+EF1bDP2WN1/5xjWobH3FXcQV41BtbS1fq4JOMkbxxFeC0+1U
JJ/ZAFHM0LL69xK0DH638tKzULdN2zvUEIu2aRe28ehsOOf1dFyKjcM/IfN5
YwMZ7Mpdm3L09zgw0V6dHONWDB0UWPvEUnxOdpzkeG/HPp8AprNJCo89jjYP
KWZJa+e4eHCLTGKOcwfuto2M2FbEo7wmx4/D7EKf/8/z8k7EQ3Beaiff5OP+
9B8zOnvicYQVQKYXYMMpTiY/SIYZXU412bEbMuX6qX8ul+HMwLMEkt6DvrAW
5Q96GebzzgrJVjW6XeRn3ysyrNp/Z5gI1MB36f13hQ4ZHCcPtxHGItjsDdxJ
4XKwds5qErVICFCGOBRyeNIgvIvRTyk2rWPkYOUUaNqLcd0x3tJRLsfHZwmZ
hHYvUo4rm9c3yhGRflWmidZhScjgMUmrHL+xDyKcOiRfKSmp7pKD8AxTAuG1
mAwhj4KEDaRwdimqbfzQMiGFkskvH7t7S/F0uN70VzgFnznmOndaGQa/KVVH
kikkXZ6qK5yiR2oolwxVUTCJ9VvcVj2+ZFeKe7ZT8PTFTZVjJDsqeGEVhdU9
fwQVjqvAv2Wup91HKZxgA3LfqcAEJqv4Q9MoXlgJe2JHb1bbKN5QhXPei/sa
+ylYjvmH3xyoQlf+6odbnaN8iQew2bjvUxdJ/8/nZcDC5pf5TQIaErYwlo0G
LCD4Pv6BNHq/Ng6o2w0QkdLd0cE0wliDriIjXlxw880LaDxix9JtRMD4V9O8
RDRy/IpvqaNN0Lx1jw0W0zDX9Te4vpiwcUfOvfMKGsvYwCwp1Si9sdkVlErj
06xV+9XN1dijE7ao0mgcZAl+9avB3xeDI3eupfFL872drtwaPK+sOLViE43/
AKvKg1k=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#85"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbQbLbqYSNBspGwTxkQIbgyVGVY5CEtTKWM87OPey8tg3JoO
rlvZLG4t5TEaK8+2IEMkbnOCVFRU0jlSncW6qMHq3Ahbpoha0pF0KV1Fpra7
jX7Jl+/XOTnnO2fNjpqinRyCIDaxG77/aZXjapM8q2WIXvODlcwSkFWZ5UwG
umbGB1N4GyG6WxeznhFht99aWDmfjQtXDr+/2lyIS67sgFcpwl9vROpXMTJM
/jwfLxvKQ5gvRlKKseMb6OyoAhhVc4+jzJW4uv/LCen9D/FNb29vVEMVThe7
rufwizDozMuIYnahY7ZinzpYhDH/01v8MiW8w3+3z7iKMfH6yU/5kk8w5R7I
ufZ1CTxvpvFfiGNwWJPF+z5xOxjhsimueTfKpY6g4dR2LBbfO8Jd/hnGnt4Q
j6RKEbbHbVAjeeB49YGDUkTqLTncpVrkJ/ubxIQMrT3V0VzmC/Ccyv4KUoaY
EdFdztwe2MpM+retMhxkBXDK6nB2rlTteihDwp9LWs5ve2F/cZ0tKVOOY76b
+RzJV1DWRr70RCNHGt8q4Di02JPwgd97Wg66/WKAiKvHykWGavXIce9I3wRh
1kPXp4ntEyvA2rHWFzQgO+131xW1AuE0iOWNmBcM/5rSrwArp67e2Yhztxc5
HIcCCzfzdxANTVhv1QUMbgU2lZ0T1wub8V7vg3cCPBIa9kHEUjMk/3Zl1K4l
QYSHacFZ9+UthZUkctlAdCkGvPbt+YWFvSRaVk9PhtwGJExd9WywkFiROtof
Kt0HsSQxJWKCRJHt1WbdK0Z0V93m/ThNwpJjVIVuGZHOeGZUXhLhvoTyWtGk
jM9csYpCxQNXvI7XhlOH0i/HrqXwHRtQ6GIbnoz8ZKt8l3qGF3TAl7RZdV1O
PcObOjF7Kf6PbV0U7AOxb533dcK8M7OneOA5X0EXBONazezwc75lJtyJ8NdY
HRRy2cLYPzKhvCMg8k9ScD8e8mmdJgjj0mempikkswaDejOS2kpsrV4K19ix
3zFj//3B2V2PKFRHN17QCi1wRnhGfBE0Rvv/ORp8ZIF7a/rKhBgaJWxgdmk3
jFy54YaAxsMkul17phtbcyUqYSKNAyzBlugejPI6T3ycSmPzmV8+D9b0oG7O
8bJiI43/ATYEjbI=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#86"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbYIRRzZCj6mYFAXghLQZiKgFk7C0wlDK9ZS2nt/Msg2ZHCL
oEJHaakosUFGH3a4EaOmmSK+mMqmDLUzlenSyaMzxqFDgyibY5UMKUS624Qv
+fL9dU7O+c5ZXlAmKeJRFLWeW9+d0hR3VZhkyYvr3zYKpbuSw+SFGxk2HsZ3
l2bYhjcgY6g6NJbNQHCn1a+xLR03755IW2jehleJg5mjJBuDH/jrFrA7UeWc
IsFJ2+DjC81SQrNyBeNJ3g5Dych0oHkXdiSo5G2Pc3GspaUlsK4Qfhs/1EnX
SXHasSU+kP0Ut5YWqTslO3F1/O2AgC4Gf+TuuoR0GW5HXCwXZH2BgMxrPOei
PLyMFAn8wlnEOXa/XuzMAyue94BvViEis0y2pFSON9uf2fhBezBqG05rn5bD
Z49fV4GD/QHjvVX58NdZUvieSnx/6R3x2Gg+Gq2lQj67D+pw+S9jWxUIPZ8x
xBvZj3utIas/OafAt5wAHl2NO5N5lc1zlFj5yKPhudSICqgxHv5YiTZ3XzYv
qwaxqTl2kUUJkaA9jPezBhLXq5L035VQNNn/o8K1aHus/adYSOOZ7ZvblFmH
Av8bRVM1NDg77dqcOhTv/TEt5TwNXxpUkB6JInuv8hENTk611qGHsdXgts5l
8Lovu4CqO4Cnf5T9FRfDYD19bbNWXI/sjgnXHgmDKu5BlKce467+noOVDCjf
sIdQofzT/fQKg1QukNroBkg/l6vV/QwOLXzo9D5vgML/zVTDGIPgmI5Wr/Iw
8CJwVdd7BJIfltXXvm/AlXL5sCOcwJJiKPEOGJC/6UIIVhH4+uLd0oifzp6I
tCURkOH7K2oDjsAddKfpZCbBKS4gr/0IymX/nhJJZvFhX2HEGRcbUTiLNzXD
c10TNaQn6D6+ZM0NdzNOfhkzKTTM8uUY0Rf9N3+OcZZvngm/NdPiiOMEqVxh
uj8z4aM1E5TMRvB8+oxb4zBhdF9pfN5ZgtWcwRmdGfpe1mW/SvArN91PzIhe
HpKwtougVKi/qRFbwEsUBKluEXS0jn03M2nBolz31sp7BLlcYN3So3Dsn39s
032CiShFk+byUbgiL/o9GSD4miNIElqh6tkQRz8kSLzcs3emzIqiTlXn9UGC
/wG8YoSS
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#87"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9Qk3Ucfttibpg/oiVJIxWSzJxll5IT8omppAwxfoUDJnvfL0kcyisx
RYz9QkRcILpNJPS4Yp6QLn9RedYt0kGIlOnRWTPPFgfkHRMWSY0J693p5+5z
n7+e557n8zwL6OLUfB5FUSu4Dd4JbeG3peas1SmF8yek195fLVGSVVvYWKz7
fdyZUPo2Et3l4qVsIgxVk/2uRcno6Pl07RzLu0iqiNsj/iEVd14UGJ5l38OV
rj+6jSMZCPKJFbmIGHbEOfKzYCoa8ossashmL7/xq0qJTxobG0VGgi9rXnNf
fJiN1q6kWBG7Fds2uQ6LMnPx1dhkn1BVCMnLT3+0r1wF5/yzJULFNnSbsjUl
mi24F7NM+GQki5iyHW01L+WBjQ+9xbfsgLJTNnJ9Xx7+Tes/wZ/+IcLbQ57z
uPIQtMc3luKMR0O+WaiGwGCV830ahLmvNp8rUKO2YXsYn92FviWjA36bGuIv
Et28oTIs9Axk195W4xgngKcqxyYnFS6dQSP6tk/L+2UPGHFcm05G43PvzWSe
ogJ/2VMUMwmNZcLTEt4VLXbW2zIUB2jkHLz8gIrUI2P0qQ+a7DT6TzQ5KYsB
c21uu32YBmfntD7FiJDmf5wPhAyCaVDTK6Gk1+XmRDPg5JTruyrhmpU+NiuO
wd83k2nKuBdZCSWxK9MYrFBdWq+Pr4LrwpL7/gIGu7kHUb4q2DZGt+2qYEAF
h62G/esmr6CFwRouEN0r+7E07Z2P17czqJ7z20+Bwf3YfOrHUJuTwUzp+eOB
3AO4QK69Mfgng9SLL1Tp5prQW+PNHx5lYJWbigJ9JjwjkXsSpxgE+xJIqkWZ
zK+RhhPkDfwcpZtWh1iBel5vFEELF1Dgch2O3nqz9Z6UPMJL6iGWd5q/TyCP
8OZD2BAhv9qylcDRHPHqd95DuFHkHpssfsyXchjnwkNEorLHfKFmOEv1dxOq
CdZwhXEUmOGrUG/eXUcw6G/zarvMUD4cXsVaCRZzBqcMFjyvGLp/6jOCXm4c
dy3ody+2jLcSbA+r7NDGWzHBZKbPOENw/vjIyan/rNhg0N1pvUSQzgXmyDyC
5SfHol7vIBhflHNQ234EZ2UCY30nwVGO4K2wBvjmeQY6ewhWtnfvnCpuQE/M
E5F91wn+Bye3jH8=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#88"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWvVtTBBCI/NAasrU4MigRF00cLJUKpC5SEgj/b2VnksDO3F
4QPU21JEyxgvWygVwYEiagwqImETiiKCI8Y5EBAN0w6HU5MpDhmVSL1NOMmX
L9+P7+Sc73xLtitjUjkEQQSxZevvmIz2bF1CyEfnv/ozp04R4pGUslZOrwb/
n4aXAXFrITbnuqyixai962j5fr4Y1/vqNrjpo7HO66myY0CCUe8Fea70NkQ/
GftDoI6Gjc8lQgavxHuDeu1WFGU+m+HrFagfED4mV8bhuNFo5GtSUPatWSg4
Eo+zPeGr+XQ6XMxnlzxo3IbW/97f55EZKLWm9wtqE9AtuLSbF7ETfTFvkxft
TsTzpf68eZ40SjKLE0mfJNAiu2GuPgtxg5uzPe8k4f+tYw1c+x/wV/mVm4HJ
ybDZ42qyoS+07r/8MBkL8ipCuZY9OCUVB1ojpCg27HLm0vvQe6bzmmOLFC5N
YjPn2X787Edq9znJcIIVwCFzsWba2KhJk0H4yMJwBg8g6/ep4PUtMpyf6Jdw
Ig6hqrNsXf2MDP68Cx6cmwyiMtxDSREJaWnXW8JTjRcFR4o9ckmMNVR3E/o8
vElzmGwfJ8HauaCO1OCWaCBH5S6HLQ3CPh9Zw80+9hvkYOXkqnvywX+Hvial
HG/6JdsJzWFUMkvJiwY5gshfN6lFBeBnCU9v6pAjhz0QYSlAlKQt7MoTOQgb
6KMI58WZhxZRWM8Golqhxblbph29X1A46jZy1zrOztPK1Ne+FBx8m2ussh9h
TPQLWbaRQkybV4HqsyJ0TN1YGRlLoSK0KNN6vwh7r9KfP5VTsP2LNbwYwvao
7oN7KFB/3/tS9XEJHo44+B9TUTjFBmTtKsFo5IHANYVz+x5lYG4caoyuntvX
lWNGOxRCXqNgOrnYr3OiHK2HzYK6rjm+yGOwaNMNJ3+b47PToco1dnh0iPXD
PozpOx1+SZGIvUcpjM+cm2B6dHhp79Dw9RgFH9bgbJ4eUb71nm3/UrjDwvRY
j3ieIwImKexyzr/OiCrAWPrSVBYKzTWvGmenKxA6POldzVUglg3MFF8JJ7tP
T+zkKTC1XFrKtFQiaMvzR4sXKlDFEgQ7GzA/bOSn004KfNNye++s0oAXD9TB
n7gp8AFtD4dO
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#89"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntQTAscPu2m22o8bq0M8kiYVbNoUlnV9lFJ791zzlwRyzYlEp2IPMbW
blaxWtzdtrsqt9zpXtw8rlnGDdsDEUamKQZDEj1mvPKqtdl1dvSb+c3vr++b
3/fwTs0m0zkEQQSy67jfFJlXc3XJ4VP+F9f9KyLDvValhaxlgpHqs+z2XZ4Q
0V27+fOYaKj+e7Nu5btFaLhTHeWpl+L7/Is9p+XAs1kuygnMCrRX9Kp8siPg
4OPHr4H4crUxqysKmqxeK08vR9VgLE/3MhrHjEYjT5WGwT1xJ0zaGJxsjgvm
MRnofhVnpC2xuPTpe7urLBOh6gXzMhfE48aM81td4zdD25lSHyxOQP8cf1fn
qQy8Pa7acnwTwYSNfsTV58DJ/Xi6/VsiBqnuGq7bNnDp1ok7TUlwyOOqctF8
cP1NsVACF2VpBNeyHTu6dMPWPAlKyra4c5k8tCUu9qu+IgH/bHQXp3cnFC9D
BLMtElSwD3Bku5F4q8VG+Uvh89Si4HTsQZ15TNujNClOD7QlcOL3olIqqgpn
ffF3rfXiXFcgRxuQ59wgxerDTV+IqQUIDOlTlvRJ0V1TfoPQK/E2Y9+rJf4k
WDm1BUkqWLeKz1ilJBxpEG6FiMooDjjGkPjYlpBKqPZhv0A9K+YkiSBZXUxB
mBr6XAPvTCOJXawhhEWNDy6CyOOPSRCOYYqgmXvnYtUoCpFsAPl+xTikfsLr
mUShyPPxfXtPMUpc+q94CymMFV6otK85CN74jQ9bJBTIy9PU+ZM0uBmZxSTL
KZRGaLLs7RrMfRsomplDwdEPe1wJWkJfXCvXUlj3+sHM/F+0EPYHdKRWUPiL
DcTepIXs73Hj9adG8F5HMN3Pw7CyaQSvOwrzr631se8omP+cPL9+4Cjkc8qH
lw6N8CX9DoMo6MBzJ/on32gdjixzGufBpxHJFsS8QYcTwuH3Ji8aPdZTA4pm
HWIX9drcZtPwZQXalHqcUwlW9S2kcY8dc6cezo2XNuSG0tjiXtigCCvFLr+l
AdcjaFyofP+PbagUT8JrlpukNGg2IPNvBjxsDLqXkkzjq2D1YYXJgNah+sIH
Mhp/sARi9zK0d6TU8tNpiEy3d9iyy+DZ+Vnuu4nGD0M3esk=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#90"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9Qk3Ucft3W2uTiasz1a6NyJB34I6rT02742DAwQZOKmT8GrrH3/a6F
QyQCcWxMhGsCwjZoESdKnEUQiLg8q6k4dp5XWEhpEuBCBI4rxRICZfPd6efu
c5+/nuee5/M8L2h2pmZyKIpazm7ozpr0P+y2b179yJWJ4DdphtXSLdrX040r
cPzLpJJLJ9Yi0V8gXmpMRO3V3F5eVCrOXDi8VuLYhKG6hfJCtQoDUXzLAqMK
dcqhY90pWxHiEydvh6Hi1nFluho2w+hdoWMHyjSKwXx9Bj53uVzCYi28yim5
xbADX/nWrxAaacxeeHWgV6mB+9+5PoFaj6uy3EWrZjXwPt++S5D8EVZZ3+Cd
qvkA44viBDyZEa6WW9n5kVoYFfMvcx3ZqKoaSFc5tZh+Z7iJG5YD6tjj370V
0CJkj1u8Gz9Gv2k5sjUTfItTyZ3JhdA6bySuLRPltVkirjEP4u7quazZTIi/
TfRzRj9B4qV7E2XxOnzBCuCoC/CcJGw8r1AHef+MifPbHhxV8GOEJ3RonuxN
4STvhfxsf8/omA5xghYp55wJP4tJa+NTNLZVdt2hZGZEXm894E6gMdxU56Uc
Fqg+3NKWbafB2mkxbyxG+MXbJ0+7aYTSoMKs2DAWO9x5mQYrp8Dss4LRaRbb
pmjc7k3RUMX7sEtyR5UbwWC5+tQ6s6IESjeP37CUQT77IGqmBPLC/1yvJDGg
QmMshZ7LW/xkHoMENpCi2DLc1IiuNR5gUCr5oyd4owyxDdf7ww8zCF/SUR/c
/iky5r1G/+5jkHoysqToaRt6qtsfe/8KA6fSZgj22ZAmUzfzxxmE+hJcXw5/
90qvVECQMfLLwqJHK5BTLhMekhA0sgEFuyrQNC161hxFHuClB3F+QurfH08e
4O1V2KdpeNtpIPAcembZ6ckqJA2+l8TNe8i3sRpz3zdbwy0P+ebbEbPBNvKE
gyCBLYyHsaOS1rVF1BPcuPv1pMlnx3T5xQhfE0EMazBgcWBTjrc02U3wEzue
IQf+ih4djPYQZImsZ0wKJ/yKAn1XN0FH/c2jgf+d+LNTvGZNH8G7bGCetBp0
LBl4MbafYOqlbZWmzhpoRb/mD/kJPmMJ4kW1CLQuO5IxRrCy8/zHgZ21+Nv3
8rX2fwjuA/2kivc=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#91"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9MEwcYvfWYtBSnktYJA8IPU9GJW6NSxFaeA60I+AMVsLR3NyaI4uCY
yLRAoa0EMiYVewhVmXOGoQ0xDJSZiZ1RQsxkdrriwtBtyKqwaDbQDZFAd41+
yZfvr/fy3vdeeHZhWo6AIIgYfr33pWFvd7E1M37DV58PdpXR8cGaXatpVgFF
2LzGmAuxUA/pJctYNdoVKql9PBHXfjizbj63FaEL3s/QJCfjwcJZRimbgX57
9toc6RZ4+SQpOhSZ3bs1ZBpq9z2eEnEfoufJn3lx3DacsNlsItMuMPmi0bl/
bMe53mSFiN0Nl8ivKGliB7qeTbuE1F4QysE9Ze509IS1fyJM+RiR6wa6pJ0Z
GJXJhT4hLO7EM6OZuZlgVX6/kFwRbq6MKfX12YmJbcMtpHg//Muv5t227ITX
HmkqBvO0qeSovwazjA0J5OQB9K+44bCVaXCksSCAZD/Flb6typ4hDSQX1EOC
xwcRu94jP6bKwilegIDSY/JUiWVtfRYiBycNgv5SvD08kffrgyzYx+6mClLK
4YyWjaxaqIVc2BYsuGHA0tPdbUE5Wmgt1/8lQiohtHcnvXNGi+GWkz0EZwS5
ZIGp2l8H3k5b5WYTyOeBrX1KHbxpEGIznGHT5X/t0YGXo6/sNWNOccDZaE6H
8bup2YTpMDa+iEsduKJDDPVdUqWqCoPabzujhnQ4xD+ImKzCb4vGVm7xoUB4
h62G+N7BwvuJFBL5QCrercHikfF6SzaF6vkDtz2PavDlQLr7soHCW9EdzR7d
ZyBffq1/2EEh7XJoVUVgLYLyR59Ib1FoSKjd53HV4oOCq02yhxS8ffEkH0HL
+dyfo2fTYNw/RVT41kF8YHq5OpzGWT4gz/U62A65nOYV9Ct88FHkQx7bnEm/
wlvrMR2nSOCaaDhOB733/Vg9aiZ+VEpaX/NtPoZ7a75Y73/pNZ+fFR8VxmUZ
nTQS+cI48qygnIF14vs0Hk2dHzP0WlFukSuiRmgs4Q3OGDm0O1pOLvPQ6OPH
8TuHiG96ZfPeZFAQYL5mUDUg1G2NpfwYdDT/3TrzogEbXfYMvYTBdj4wR/px
hLg2KVMDGfwXpbUYLh5Hbic9eyqEQRNPsCagEYtL32CrIhisunizZKawEWrB
rX+eyhj8D4bofX0=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#92"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1MU3cUfbwSbIsZDKuJjDplcxoZqzCnMw44EQwoNJXSvvcL4cMR5wcC
fTIUQWxLkbSC1I+2YBUl6sgmY2YycBtzxalDo4izwcFU4ggT8ANMdSpQbH2N
nuTm5v5xT865587L0Si/oimKWsqXr09qc88VWUhckjcofcTIxoWlr1+RzS3D
ww0nwjX6aCQOlEo+4RLxk0f8pKMkDuevHl81y5qKQ+NjO0b3JKD/w4DymRyL
vukD4au/SIKPT5KSiakHc9bmRSSjOm/YLbJ+icnI2/LZZjkO2+12kWE99Emt
g6xJge86k5eJuI0wk6abufa1OPvsVY8wKxfFo+3FlYpUXJr7Y6EwJR9rnMyG
3sepePBRlNBfyuGzqH4i3a4EFyPuFVi3oiE/uMw1psTLtMFGQeDXONPjMErT
0+CzJzAUwa9/hs75axoCym3xgoltGOx7WXQjSIWauoIQAVeMlPvzZ+zKVEFy
OnGAHt6B0FjVbr9vVKjnBdBZpWj7c2+o4j8VPrgzoaVv7cQR+79xsvfVaHI5
5XTKLkyXNTrWqNWIEjaH0Re10Fw8HLrYqEbGvgvPKakeVk13GWlTY7DxyCXK
Wo4cyUglLWTA22nWKwww+Z22Lopk4EuDCqyAaOXm/iEFA15Oqb6zArFXfxAV
cgyeOuU5lGE3xDFXbF4zg6VZ7av1MZW4Y88eOPc9gxL+QNQEP0e7gp2dDCgf
OCNkc91d5nEGCXwguggTxEPRusIgFsZZ/3R7h0yYapCrFsxn8U5ky1FvZhXc
NT+3ZcpZKH+ZU6mbXY2I38vMAetY2OKr87w91ZhI0p68sZWF71+8yTWgq4S1
noMs1t3/K1w3zYxjHwcu0Z1gcZIPyHvBjCiZsld95u1+2H48korelV1/u285
AMbd4V/lYeFoCJV1uA4gNfjFsXYRecOnOAjpe3+UGCTkDZ/Ygi3Dl8PGFhIk
8A/j2GSBsWDUvz6aYMh9yqXttKBUHKt9voJgEW/QU25FS5/z1m9ygi4ejntW
dKc1Zi9mCApCKs5rY2zY03XtbnYWQcvRJ996xm2YNP2tm8onUPGBOZhaXP6c
2a/ZRvBiYcY+bWst4jff5U6VERziCWJD6vA//WlTcwXB8tYr2z2aOtTfzGjY
WUXwGjKihoQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#93"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvWuNgDijCEYMElQ0YMHZWUGHwDFFqxFEweIDLNDeHw6C9OID
EbUUCil6qYJtwaqIRBEUUMLDEWPquxkbmAVZnEFjSAcocSgadaXaehv5ki/f
X+fknO+cBXJlAuFRFBXGretOqLJuH9DviL6n/brtsSYj2m8XHZHKhIN8li32
L1gLyWCB9zJGgi0hq7by8uNw94+6dXMMWzFrf5v43LxEvAicWuTDbMezprxH
bjlJcPF5x+5G+PXekm7PnWCzR+wehnSIniREZwUl46zJZPIopvEq4N/DtqEU
NFo2hXswe9C4xHdckyzDzQ9f+91lWUh5rs0XmlLxMKB1n3vsXrwva8+TStPw
eonQfcp8BsnHvdZv6EkDEzntKd+QiyshlvJ2UTo+J1rr+Z770RcSetq3Mh0u
e/ziA5iY0dPNWNMxtcgo5tsOomZPy2tJqBy66hwvPnMIJmZ62kulHN7XJYO8
kXwsLt9xKaJZjvOcAJ6sAPUGvulnqxyLBmwq3t9H0PjnBfagjwLXxvvieLHH
0Bm1suWMWAGhe7Mf74EKZsHsJ3NzFEg5df8jNV+NFRl11lSjAtb6cw8pQxFG
Zt7pqh1QgLPTrI4vhjw7KCbYroArDcpTg2uWKGHtXBqcnAK1RQOp/YpUJKLx
vi9OThWXQLXGJ9pnM40w2a2N6shSCMwrAjMzaBzmHkTZSjGr4mhTwjEalGsY
LU4QfqisgUYMF0ihoAzx/0jG2m/R0M559tg5XIbVJLjTrZfGjNC2GufuE8hV
h/3waYxGQpd/aaEvC2m845c2Bw2jmM129rOYqdQntv5I4OqLc5MOIulbtj6Y
IG3or4WFbiex7MYA2x5GcIkLyHn/JCb8lZlCMfmO96tA4NJR1cVdk3h9JRrr
TAsCSgjMtfN+ujNeCWd36hqtbpIv/jSW7/3SY6ya5Jumx84xQ9DtBoIYrjDm
X/XQ5N/TPb9BMGy/Oq6y6HF5SNfU+RvBUs6go8iAjuE3ERctBD3cmF8aUFG+
cnlXL0GOl+auKtKIs638UWM/QVvN2wbH/0aMHnpX1jJIsI0LzJxUhfOZgtw3
IwSfglJOqTqq4D3ECuz/EZzhCKK8qlGVtO7FwAeC1R2/5zmU1Xg6JYutsBF8
AztciUA=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#94"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvevF0srQ2KDjrSgYBVERhU1Fj8Js1DYEmEKhj3urRtcJXJ5i
l5WWiqAdorYFCyuLEgZqfQQJPqEVGZKNGGAoWaYwQoQ4ogzdUGDS3SZ8yZfv
1zk55zsnSJmZeIhDEEQUu647rVE9yDWmbI+fl539ykZv9089uEXBRCOs4Ouc
CNUWCIfUXmsZIQbfB3l+9BbC8cvFL5eYEjARXJMw8EaMF8Fc3WImGf2NXMuz
swlw8XmJZNijGrv2ujoJhqOjM3wTDZ7YJ+7djn2oslgs/KKDOP2pW6bVuh8N
HXuj+cxheGkX3p5xJKP53cc+nlyFP3/6m2m6k4L2ZTezeaJ0/MMVSkbLJHi1
MoLnFsAgt6KnPEmYCiZmfj9pyoJsfW3jor9S8T5puI70yEFEdV6NpzoNLntk
US7eFCqplOk0cHXmWHIqD+N2kZ1Kl6KsMkNAMsewu2+Dr99TKbyuC4c4owV4
WUwLAiNl+IEVwJGrscv2s/52qQwr/pjScJ5+i7jHgz7/PZPhykSvmCP6Dvcf
P/f8LVCOCJ7Nn/NIg2+40QFOSg5pedu/RIAWfocH8kJq5Biuq24nTDp0X2rb
qPNQgLVj08YXwV1il1zYqoArDcJDj6DNCjpHpQArR63t0OPKoO0UbVbgba9Y
SRSdQLrb8biGFgWi5Pd2a2OKEe5Q3jgxrMBx9kHEVDGae70PVZAUCNcwJfiE
X7BGHEwhjg2kMKwUuat6tqZEUihZ8vsT50gpWtbtK6jaQWFBeKPVKTsN8uax
UEJKIfFOYHGhjwF3N+mHYo5QMMcajjr7DMifHKoezaHg6otzbxnmbZ4Mrj9F
gXrZvbzQ/Qx2JnY9emKkUMsG5Gw7g8/9pqNOWufw/mfREhuU5bgxhzeew7hA
K3LvptD6o+86+8Q5tL3uUSX3z/HFn4fQ7UCdcmCOb74RS1d3+d4dY/2whWk9
YkRtwy13j7cURmYuT2g6jLgVukEb8oFCKGtwVmdCZ0azr52k0cVO66AJGvIz
cSyfRoZA79DEmCGOD4msWkCj0TpeP/vBjPCSB993etP4ig2sdX8FDAPtI7UB
NCZXScs1TRV4mJXfIVlO4wJLsE1QiV/r1/SPraTxRVNn/mxmJSxqXE0Lo/E/
jluAFQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#95"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMk3cU/WilL5AsFTQQWHAyXAQkhImiFE4CpGGiKGPieLTf9wsEIaCf
iigIpeWhQC0IbcXyFJ0PNqbOEeKzEmSoHZIN6xB0Ic4MdIuTahwPZ7uv0ZPc
3Nw/7sk599zlZFdyNo+iqAiunH1BlXe9UL89pm4sIOj+YhLjm5a1QcmuRXeV
8ovh2CjIn5R4rmblOPrjKa+7s3L0W7rilxq2wp4/Hhy9Jgm/Bwg0XmwqikIX
qjczyXDyeSZmIrhHKG7Tp0CbP/1WbGAQHu9jak3fhhaTySSuyMJjyz2Xh9ZU
nBvauFbM5uD1hO6dt/Rr9L1+ZxUp8oArZYNd/mkY9L+4R5RYAGNWy7i7JB3P
A8NEi/xYJAhsZvWDdLAyyRjfsBt/3ZhsyK3JwOyXT0/z3fZifcFK3WxgJpz2
+BWFuGFp8CvszYRAY4zlz+/DohD+QGm4ArrmnVI+ux8//MaOB59RwPO8/Alv
+gCOSMZub/BQoo0TwFOUwOrq47OkQIkVj+ZVvAcHEevRIpy8pcS3ttFNvMQy
uN5fUXRPTCNM1OPLu6XC9s9v5ulW08hoGHhD+alh+bR0b+0WGk9Ptw5SBg26
U09SSh0Nzk6POqkCHSTEtfccDWcalFslvnPJzYkZoMHJKVEPVWJ9ycyJ4Aka
r0Y3EaqiCrcjp6xdMzQiFFcT1LJqyLbmt/a7MijmDkTNc/PPI91nvBlQTrCH
kdAnXRMazSCOC6Q8qAYp3lGr7JsZHF46PuKYqkHer3Pu/ygYeIRcandk1uGI
S3vTnlIGyZc/ri731kK7/1FkQB0DY6w232HV4lWZOSKsmYHzXxwbdZjONVfV
XmBA//nLJ+XCeri5+zY+u8rgFBeQY6AefbXSTstPH/Z9j+LCAeGJiIkP+/pG
NCpk+7LtDMydPqE3bY04JC/+yCQg7/mSmjAi1F0r9yDv+SR6vPD6pqnIjyCO
exjzDj2+f7EQVh9AMPW226Ya0uNxfLg1J4hgFWfQrjFAkD24o2AdwTAH86QB
NcVRjo5ogp3Syn6VzAgv23/P2uMILrW/PGufM2Lu5HP/xVsIUrjAzNuO4c0f
xXc0XxH8+1lGg6r3GB7OdB4cTiM4zhFES5uhHA1c9lJJENl7p8i+qxkimSTj
7yyC/wE0hIG2
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#96"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbbGtVYkYeDmLIqyDOeLUQlVsfbMdiEIHfKUlvbea4OOKOJ1
wuShpS0gsIYybSvCqsJMRcRXiPMxhZGCaHzhsMyooKLzLUFmlYeRehv9ki/f
r3NyznfOTO3GhDUcgiAi2PXeUd26c9mWVOmBQMe//ARSKlSlR1KMGPJaxdXR
V2JE9eX7L2Ci8M+XzmJ3phytl+p+mGKNR/3lO5PEp1ag9+sJhgBmFZozAlYO
WeLg5fOP1SA36/i2rWfiYcp88o5vXY2AP3pvJCgSUVNdXc03pqOztin4gj0J
BztixHzmJzC1gp6eU8k4+fq9i0euQ3CzYaa7IQXtQcd/5sVuQPR8xV5VwSo8
+yaMNz6QQXW/dpFclApGMvEm17oJf15ayF1/IxVDiQ8dXMFmSBb6rMzTKuG1
xzVmQyR48Sz+gRITDDYZdyQH0uhuZnmyChVVWX5cZgsS91d8F9Ksgv/RqD7O
k1z0P6WnlUxLg50VwCHz8Sq3ZsC+KQ3Bd0Z0nO4CVBztK89rTcOhwS4FJ3Yb
DJlvW0d5aoTxDgs5bToclH9/tjdGDXWl8w0RqEdE5Mu1beVqPHT83k5YDXht
CXUdGlaDtXNYH2fEjH7ZSPkcDbxpEIIidE7KWT1PqQErJ1/fUYS67prw+8Ua
/N+l0BLGYgh3pn/+/IgGEeRf0XpJCcqkPvrtLg3y2AcRIyUY/PY/3othDQjv
MKWQmJMrz0eSkLOBFM4tw1BQ5T2TikTplFvXPI/LQN0OCT+3hcTk+U17PJpf
cavhxxVdR0gknJ5eUjjVBJFp++6XHSRsMlOmx2XC+ey5x27fJeHtiyemAo3p
wzVGAQX60fVZhZ+ZYe+0SekgCvvZgDxOM6JSihuV4dRHvPA3uEVX3TeV1Ee8
ZQfcS83mODuFln1fhf49uAMCsTNM2/iJL24nPKFneU/PfOKbaIFIWOC7vpuC
nC1MS4YFlrE2V84DCo/fNQzqOiyQ0Ut8fQcozGENjhmsODnO6TBwaVxhp+We
FVnuuthwPo0sv6JWncQGW2qG4fRkGk17BurHhm1Y+kXIgmVTaSSxgbWk7ALX
Idknm07j7Wx1pe7ELsy4nmubFUxjN0uwzK8Kvkn17T0hNBafuPjL2MYq+JQu
v7B5Ho0PgSmG6Q==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#97"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9MEwcYPe8ErxC2gCDBweYEBamoDEWrQ94GWiot7d2mGJSCAv5AgRNx
G5K1pdqodCjaq1gRt8YQC9EFHRpCtCIYo8Qf2EmIimLDkBmnBEWwoHTXhJd8
+f56L9/73vt6cxGbRxIEsUQYzx7T5F8pMa1PtKhfZcq60xJDM3JXZHFL0WCL
ShF1REHq3Bu4gJNircTM/7FjCVo7rKtm8AzylqWU7ZF9i6cR3uVBXDpiHAMt
3d2ARy9QnonEEkPaIa8kGHcOjIv4TbCJc3J8HyTjpMViEelzkX6b/vsbdjVs
N1OXiritmHPpcc8FixSX3316SKvz4bxAR/J/peDGrMZiWl6AlA2hyjabDC/n
xtJTwzh8fohOH9WuAZfg003xu9DbOzNx08pUjP7QV0f57kbl8ES437+p8Nij
9CWYX/fkcaxODu9ycxLl2gP/Y81VuSIFKqsLAyjuZ3Bdt612gwKBf0qd5MAv
QK1U5hpR4JRwAKnei+HO9sV6dRrCn7g0ZFcZMmJmeRuvpqFhyKEg5b+ithDR
QUFKxNLnQsl2DWrK+j+N5Smx8UjbeyJMh17/RUMjjUr01dXcIPhy+GcVjd/9
QgXBzjmdUg8t/19L+HIVPGkQvvtQ33c+vmKdCm8dis2Efj++ooMrVlSoEK9u
kekSDGj8Z1TjsKpQKjyEcBkQpxx0Tm9WgfCAO4DV17fYKKcKyUIAWvFBZJ8+
0ep8p8KBGY/uuV8cBPdSlt/hxeCzmIu17swK7Mg1nCUjGbDNXxq0IUYUuJ5b
d8UzMCcZd7ofGlG9/7Q6ehUDTz/cqZWY3lq6tj6bQXZ/52zttMPo9IvwNxQw
OCME4m47jO9n6zq6Sif5oVXo4a5P+VA1yTcdxTMquIZuYWD/febCa0NHsVgf
4rWhfVJPeQyS95Jl6Xcm9XxMiGgSU1lPGSQLBbFvM2G7o+dRcT+DF+P1Q5qb
Jhjrrk397jWDaMHgRDkPa3HcaMhHBncE2Ht5+FnHSDHFojBgX6smwYyeV3HD
pA+Li7WDZyc+mNFw/w0ZEMziRyEg+7rjEO2WuxRhLEaiNh7RNB3HYE7Xbxnh
LE4IAisDqnE5auCBZB4LSdOtnyaKqhF5Xmx/vYDF/8gQeHw=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#98"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvd4qgzIlIfWFoKBIFKIOHyWgtUcK3Lb3p6hUZShM8Y0CV0XB
GgrlMcg6BWyhIgIhaKpCjAoZc5pCgKDRYqRqiE+CRHwMh+AUK4672+hJvnx/
nZPvfOf4Jaau30lTFLVMGOf+oku6kWaMlfszhfSvO6Pk3nE7lv/ChWDJ15qa
v8Nmg+nVShZyDEK1PQ9P2Rah5XZN5BTTOih/svdkzF2GZ/4u+sncJoz7Z1XK
4phQOPUkJB7nz05aq7i+Aob9r0bdTNvQXdEsthfJcbq8vNwtZwfoQG9y2QGc
72BD3LjdSN1atzuMX4U/Pvz3wDUhCfw2d+ZYbzjafS8fdCXJUGwqzJxjUeBN
QLDreB8OhlnaA2RDBDiZuFtkOgDJ4Ijp7WAERmL6zoncD2G0m5HO0EbCaU+U
k4YbGq+2uE+RcNGXKkSOw5Bo2b11u6Jw3JziKeLSMXDnw7QrtihILjG99KsM
/PjaPL9jPoMzwgF0ghZoVNrEWQzmPHHo6IfH0OTr3sp1Mrg4ZF9Nk0wUtJh/
bp+sRLBrvTfdpkOXhzypIVaJLUWtHymfbBRfO9ppL1Oi71xFO2XSo6X5/ayT
LioIduqzo3OwIbDEMi5UBWcalHsuAopeNEfuUWHYvjqRyslDXG1T7j6rCtKE
v1TZsnxMaJp++NZLFY4KD6Ec+Xg3YOkaFqtBOcEVwO/McmVitBoRQgBZQYUI
73T4fUxRo2DKo7t8fyHWSZ9OHP5djUkLrlby8b/BtuaRsapdjfV/zszPmm5A
dbq8Uv9cjVKFYT//wAAfL0ilI2o4+8Gzx5H3TqPePpfF1pf3Zmf9cAJ1u/L8
+TAWtUIgfOsJmO97WBqi2W9872IMyHzjq46w3/jGEgSXPK3ouM7CWu21qHmo
BJoe0Jl3vutFn4SsIZXUPv6uJzZieKIqLX6ERYRQEOseI+xt1RQ/nqB/9MKQ
rsOIff2P+4I8CQIFg2N6E24usMWsDCKwCbD2mOCgVpCFIQQpnrktOlkp/q3K
0FvDCa5WDlrGPpfimsw4tSuWQCMEZN1YhvqZTwybtxN8mrelSNdYhsD31cll
yQSnBIGVnmbc1NiX5qcThDbeOjKWakZ3X15AkJ7gf1d9eoQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#99"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1MU3cUfbYILaCRBsExQMaczBGmQJApQc+ESSYgqcpn2/d+IERxIG+A
qLiVfgzBNojYFgQVaARh0+CCsBIz3vysRvEbNA6dYTjMZBOROcEq9TV6kpub
+8c9Oeee+1FWwbocAUVRS/ly9FfKLb8WG9JWNknjbQHhmSt9M7KjGDYSFqoi
59/25YgbKvX8nI2DJvWo3Vy0Gqcvm7/yMkrR2McdCvNKxIMFzuq5bCranbRF
zXOkcPB5JihQs79wwUO39dDnPbaJjZmYVJ+ceNmyAQ319fViTTZ0T9Z4P3qR
jHZrfKSY3QSnkblXlsxJxS8Tb/pF9BYkBPo0B1FpOB/wc6EoIR+2c+Hqlmtp
+HthqMjJj0Xu/Y0D4Zp0sNGud4XGbxGtuqi7OD8DL9cPtwrdiuBXuHBnyLEM
OOwJNcW4HtLowgTJ4Kw2xQintmHFRNGHPbUyVNVtlQjZ7aie2X/TzyaDZ0fc
kODxDuSlW5J9UuQ4xAsQ0KWwsE1R4+1yfDw4pRQM7EJETLK54z85fhq/lShI
+B5fjs4zhC1XIFR03FdwTgkf8+veZaUKyKvPvqD8VIj/RByU3a3AcOvB85RR
jeC6pDuh82nwdo6rkjTI9fjnzIm1NBxpUG5acJ2XA9130eDllKqsWgxyad2G
FhrPbyVmUZofEOlN9ey5QmMpfeprVXQ51mQ0pS56RmMnfyBqqhwXBqX3j0oY
UA6wFejdbng6JmUQywdSFlwJi+g7k7iAQYXXvWv2kUpE/X6qtlHHYHZI52G7
QgeDe3FcRy+DdT3+5WUf6BGszbkkG2BgitHn2fv1aA7gxp6MMnD8iz2+CpKu
iHtvXAnIXzcCy1z2In+T86PrngRH+IDsZ/di8uS+byL8ybt9330we0iHBhaT
d/uGGuQv6Q5yTyLgmnwW/zZeg5ao9BL/lPd8SfsB7k7gU/l7PlcDrro9sN7O
JYjlH4bbzM+Fli+eFRCM2H4cV1oN0KlGXe5uI/iMNzitNmK1d3jubDVBHw/u
oRH5XObQxt0EWyXa08poE3Z0xuqq9ASdh8fapidN+LPEpSHHRLCBD4xLqcVt
eZ/Vu4Hg/0/l1cquWsSsHe5qbSQ4wBOskNRhVtuJGR5HCJZ1XSqZLqjDH6uy
wmRtBG8BeVWDxg==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#100"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMk3cU/WinPKezVkkdKgyDTofYBUWYtYdB6eMHdFBBQQTHwykC1vpm
WWkLBLKqKP0qrVodKj5Yp5NgN9lSEVllusxhfFWixCCgCU5BJxaE7mv0JDf3
r3Nyzz0nJHdTagGLoqjFzHj2iLrw962GVcIChWIk5pVIGJSZ/0WOMgrhZ9f2
CR+GQPyolLtQKUbLjWUZWfMj0HqtXjSdTsHYlcw8ycVIPJgzUTtNuRLrwoKn
rexcCo8eN3ENdh05N/rj3GXQF/WP+tJfwxH2Ik31bDkOms1mX10+Tqfs8BIe
A047SJSv8hvYFMmRRcdiYXs5dssnuxDyjbS/t+ZLtAf/rPJJLMaH/N+cltg4
PA3j+3wwUwmTd0RnxEAclAK/u2x6M7h5Ai9LeTyGFT0NbP8tSNNMPjrkJ4LH
Hlu3FWnJl5b8UCHCRK0xju3ahq8u8qstQyLsqSvhsJU7ULyifqQyPQHcs+JH
rP6dqO0ovmc9n4DDzAGs7FJc37ZQ9dkEMUK7XGrW7W8RMJVlHkwRo3HwZhIr
8Tu0dE8paTeJwfexBrGuqBEyWx0tvy9GVk3bf9RMDeaUNl4NDZSgp+FQO0Vr
wdM20zUVEjB2rBq5DtTzF3OHLkjgSYPyL0dDi4MX81iCoZtJuZSuAs5hfQC9
VIol2S1SjaASTnNnx6wcKXYxD6FclQi0T7HoyqWgPFBWoS2wJ6PCIUU8E0DZ
gmqQf7vWlfRKUTXd+be7rxr5Nt7raywZJoU3Wdxrvscr/bzGpGgZUn+dVVnG
0+PM1SPhJ1NlMMbpi9y39DAtit19p1AGTz/cZA8CI8c2BJhkWNv7zydl3nvx
eXXe7sifZDjOBOJu24uMRsGnpZff84P2YZgzNZfuf8837MfqzcEu6QIC+9EZ
EZcG96Pho+sh1hjyTk9eC4V/+iKtlLzT8zOA09Ylri8giGcKYl9vwIzzh2wu
FUHf6JlBtcMAYyt3oLuMYD5jcFxLQ2hLuLvRRPAXA3s3jV8ehF3++ARBCae8
VS0wgu8b9aT4HEGT5fmp8TdGGDPfTvD7g2AFE5A9/QDujXn1rr5B8HpeVo26
+QB4TZquHCeBiRFYzqmDVf44mddDEN3csX18Ux2ytH+q9AME/wOnKnav
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#101"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfWmxtLiYjYFmSp2CLgazNmQIEwYcVxAILbR978kkgMKYM43K
AxnD6h5tGZHYQcW2FJyMgDQM1y3MdMYxbREJES3IVMaHIVuDSpb4sa4RQR3d
a/QmN/fXOTnnnrOxtFz9GY8giARug/c5q7lUZf4kzdMzK5jrJdOiCsqS9zCJ
kDOkpiVJikyvNkLCZEL8ab5p0Z2EgeudGastKrC5Pz69adyB2U0CfSSTj5of
smfsI+kI8kXIi9Cp/3Xh7ZJMGA/MvxBZSkCL31K01mbjdFtbm8hQhp/3tVOs
LAffD+ckipjPUbCxYG//FTku+P+7IyzW4JzUuW2HKBdDG/oqhfKDYL7xeoSb
8/D3e3HCEDGDVt9CcvcqJZiUsEm+pQJNlZFPYo4p8Yycs/NXHoZtvrO8alaJ
oD2+oQpDfu8jQ7wKAr1Vxl/6Ah84GyemDSo02g6F85kvcW9St/viiAoRP2V6
efM1SLre0BwTpsYZTgCvWIuXz8fe9aerEXN3ieVNHEWqL8Qxo1XjnO+Wgif/
CqFdB9dUONSIEzqieFdZuBUPBQkzahSaBp8SYh0Sp7rjWkJIzNm/HSIsekyw
L0UnlSQ4Ow5dngGyxD3t7koSwTSIlXW43dG3pv8UCU6OVjdch8iKatbZR+Lf
W4pSwvA1TOUd+2c9JBKK+7N1KfW4dmnqn6J5Eke4BxFL9SAkSraAoEAEhzmO
dVm/WDIkFNK5QGq3NuCq/eMRjYzC8dXTY4EHDWhziuO1+RRWvX++PVB0At1e
b2jvMQrqi+vra98xooT6K+NhIwWrzHggcMeIw5KxyZLvKAT7EshpRKw4dWrt
ZQp7749H14Y2AQLJb9U3KJzlAgoMNqHs7sK6hOnX+KiT2OWs6Vvhf403NyOi
58obng00XB1rpW5fM9zjo2mSrfQrvrxTGM83X5Zuo1/xhZlRGD/4bFMWjXSu
MK79ZgzKT/CiVTQevOj1scNmHHWJQn7fTSOWM7ist6C19I+dlIaGhxvXnxbw
Cots0koah8LrBtgUKxzbo0NvHKFxvv1Jz/KiFZYK25u5DTQoLjDXrhYodj4W
J5toLGwpNLHOFnw0av/Qb6XRyhGkhtswPbl4oeYMje3Oa9XL5TasH2A8o100
/geSs4Th
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#102"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbYdlpLVUKuitgaYTwwiSkWGyFGgQNvLrUB4+ADF18ZQr6Lb
rNiWIo+sllpbQATFRww+KmIFNVUQUQkudUHUuKnECRH0h2Jd3QYE6m30JF++
X+fkO985ATk7kjezCIKQMOPZw+rcm7vNGdHqaZzezlFptGj1pshsOhwcX8O3
YSOBiH+lEi6g43F51RZHwY2FaPv9ZNxkyyrsG1BF2Ogl6JnpVTiJTkfvyA0j
jx8Jj55QsQ75QVq//hfLoc8bGPG2bID/A1NA6fgVOFpdXe2t24RDf/e8a9m4
Emc75OHe9FYMBp3yvmmMwdV/Rh9zs3LxsWhOw0tLLO76N+7iKrbBP0NUH62K
w9vZoVyOmMasgSxTcpwUdBTvKduyE/OW5jdmD0vxX0rfGbZPPpa5bjsdtfHw
2GPrdkPT5cdLC0mAV2FFDHtoD/LGuHPCmhJgqNouYNO/gMOvYUcGJ0LYEP+K
NfAr6gvK9e9rElHLHMDKUuHg+j8XmMfJ8N3zITXryT4UOfev+T5bhvPObpKl
2A8j/3qgo1mGUK5VxLqjxu0Zy9r5XnKsNbZ/IsRa+F4qrbQq5eg7U3OXsBSi
etKznMVP5WDsWLWUDm1nxU98hAp40iB8iiCzDH4zk1TgYzeZQ+gOQDWBvTin
WYElWfZEbVQxFqY5eqa8VmAv8xBiqBg6uzIyRECC8IAuRYrSJk/dTCKWCUAz
vwwlsuHMFj2J0sl//eHuL0O59kQAGknwg23H3Ot+w9Wlo5kiF4nk6zOKNVP1
8CUb6mwTk1ARo89zP9aDayTcL0KT4OmHW25AbZfUV5GbhPWvuwI148tx+mHw
I/uBJJxmAnG3l4M4kSERHP/KFx3CFVeTsuXBV77ZhPAQUbspkEJr3bSQW04T
plvD0COhvuhRh2G3iq/tTaC+6PHM6M20au7/RCGWKUjrD2YYskukhgIK/SPn
nOoOM+75SXh3DlIIYgyOFVqQvrW5u+4CBQeD1pcWTLxV9mOKncJ2QVGbOqoC
yWL5osOdFGzHBuvH/q+AUDpvV0cfhVQmoNa0SpRErL547wOFf+euNaqbKuG6
lN6wcZTCEUZguaAKNS5JajdHiYimzp/HdlTBNfQmoYOnxGd2aHQL
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#103"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWkdFDBTEVEEywQ3lU2gxsDQgMehIa4ljQUZsVig9zGm2F4F
pmDog8dgdCDYAgIaQGPARYkhyFhxpQHDmLDFAL5jDCioRNQOYZRXdxv9ki/f
r3NyznfORqVaRvMIggjj1nnnNEduZhoTd1u8qpKsDL3b7xC1K5kNx6R/cODT
R0DMSI5XMBsD+fTvdR43JLDebtznbToA8fswP2OXDE82uejXsN+BvBG+Nigw
AU4+L8lhbAnpqD03nAhD+ot5N1MqxlKH5i5+IkdtTU2NWx6F34TflK67n4Tm
XnG4G/s9+hQlaaeTFWifWhwWKI5AlJwutLYk49Zn108IJMcwdLyfik5Lwasv
RIJlG1jskPlX/zGeAjbS/T7fdBy2d/YDvgmp+C/u2WW+RwZK1FH9Ex2pcNrj
52Vis22fKXiVEi76ymi+PQvjqslZXYoSpdUqTz57EqGNiwHbmpXwaokZ4b04
hZomdeyeV0qc5wTwFDmIN0uDzm8iEfjYruHdPY11o5axmUMkfrUNxvIkuWi2
yjtf/0JCJLjqx+vRoCdO+CfRSSLpTPc0sUEH1wj/4otjJJ5drrtFmPSI8pku
c4gocHau6qR58CGProiPp+BMg/DIR5Ge152eSYGTk6PrzUfPvUut2rMU/h2M
VRJ5BfC/MyC72UIhTGHer4ssRED5qkzJXxSyuQcR9kJ8myhfe3CUAuEctggi
POiWrqSxlwtE+2Uxjj107Mn+nEaR98N/HOPFcMldWGmIoPHpttYLjsMl8Gwy
EmYFDVmHsFDrY0DdrDs5r6ZRGW1Idwwb8Hh6/wqVjoazLw5xKZ739LcL62mk
jN0J0LqWYbXEl8y6RuMSF5CjuwwD5PXF4M6PeL9y9C9VXLENf8QbKyCeMGpr
eQws9etDumwVaJ3ZPvh+OfOBT3oWoVMHpW+8mQ987kZQIVPRQ1sZ7OUKY0kz
QnBtcE3fdgbj81dsml4jFkaz7ql2MQjiDC7pTdjYlVY+ImYwwI3lqQnmBteG
tjgGKs98qyayEhlf7bwbI2fQeuFt09JsJQoo8U/mHxjEc4FZEqogs7/MrmcZ
zGxJOqNpqwI9o/1ZepLBOY4gyrMaobPty//OZRDR1vfjkroatzukX68vYPA/
0tOJzA==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#104"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmlMUwkYfLYeUNYjBNHtAuKFREStkbJqCqMcpX2PsBzKRgFBUVlE+vBG
pdBqwxUOaaFbagOKpkrENYaaBrUCGhWsxhgaRRHEe8l61EVsi1Jfg5N8+X7N
5JtvZu4WScI2FkEQIcy4tkOafXWv8s9wx/SsrQGtMeE+GzPXbKZDMQmhmVG9
8yEcPOS1lBZiNiltKV7IQ3v3yShvVTwsN4aW5DTx8WzBZNlMOhlpHG1g4fBq
uPS8qFRc8a7Ms0nCUJ7zdtRdlYFnui5ZoB6o12g07vJMPK7zDHr6ZC3O3iJD
3ekdCCp5nLv7+Tpc/v97j1taNla2vN9R0xGBm/4Xd7tRu8CRG4Y2KSLxbwDP
baIvjfU7t0fzeFGgBZxHbFUemn9rsvG7ovA18eUZtscerPRPEjf/EQ2XPbZ8
L1ZZgmf4dkdjsqw2gm3fB0FHmbkhVIgKda4nmz4A46jBPlAvhNcF4SDr7UFM
VWBF2BchTjAHsNIO4b98jb5fGIP5T+1SluUwaMukMoMyBs3Wh7EsqgCJDnNR
dW8MeG7nfVg3pPAjkx2+XBFSqjq/EL5FOHGvYvDzehFentHeJFQydEQOL8ro
EIGxc74oTo70943v7lhFcKVBeBwFa7jHgztHjM8PY7cQ8mNwtNx1qPLE4Ke1
iYoECtzOMMf/rhYjn3kIYVfgRY0xv61NDMIFuhivq3VZnG9iRDIBFAaVgPNu
0cYFXBLF3r33nW9KIBGM1F/mk5gWfEnnTC1DnIlrNOwkkWD0UxT+Wo6tlnWG
pGMkaiPKc5w95bDp+gYfaEm4+uEkK/AXP93UcptE+usH8wqnVGJe16zO5X0k
mphAnJ2VCOlpGrF8/Mn3qcY/tiMvmGKM85XHsa/RzyjYQMHUwF123Xoc9nvJ
Ap9t1LheXA20QVUheXuocT2OEr9MSBVqKylEMgUxZSnR7CEpLdBSeDN6ziq9
pYTm+bXTn/QUFjMGx2QqfPCftrDhOgUzA9OACoKQ/tJX3RRyPY+2SwW10C9u
tNy3ULik+6gfs9XCaC3uOzVEIYkJyLShDnRSXaJqmMJIYEqVtLUOCfHfV6we
o/A3IxDmqcZAe4BZPSUWq1rv7B+TqPGtuyD84oxY/AChhYVr
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#105"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbZSWtQNsaCYUsEnOoE1sZpGC2dS+ri3BhUUMDwGOqcE8Ypd
RRgXWkZEq7DSVkStShrxMYaGuWncBOaDka0SRAgaQlBQ2GaEMYfIsO1uw07y
5ft1Tr7znROWtX/rZxyCIKTsePe/TPZPOktyTFCyTBmvV8WIduxan0Gvg132
23cFw4uhel4gjKRVcJl9yzekfYyWX2vjgqxb4LwtFlxwSNG3lGcIpJPwZKRj
QuCUwasn1KZB+mANeT5cDlPO8JTAmglJn+xR+0gMTtfU1AiMu7CCmRO9L+wT
XG6l1gnozxGWaKJCFm3ED29cXfz0bIgyEgbqJzfifuj1PL52H7JzXG0jN2Px
x3IJf2YIDbW9sX92hgK03K+Haz2AAsOqP2e8UWAiYfAid9ZBCH9f/+MrfRy8
9rhGHfq3J/koXseBZ7DFcie/QGJ+HsNPVuJEdW4Alz6EeRt+aeu5pYSwQfWc
M5wPcVFoLW+uCmfZAzjpBXg9lVt7LVOFJb2TDKe7ELas2cuav1Hh6ljnJo62
CEmHFmW8H1VBwq8Xce4xEO8Mz/SPUiO18u44EVICqTbplGmvGoMXz9wnrAYc
7m1BdacarJ36kngjHla+F/01QwNvGsSsUsw/O8ZTRmrwd+emLML4FeqGQhwu
RoO16bc1JfIyRCb6mLsdGhxmH0JMliG1eZ66plUDwgv6CCI8N2sreCQUbADF
H5VjJz2o81tK4kjQ03bPUDm2FSVU+YLEBxGNdk/aMQxsnij85yCJrbfEZcXB
JkgyY1YGHidhizXleLpMSLng/DLYQcLbDw91Ar0R9asXtJP49GXH4mLfCoxW
kII1AyQcbCCeuxWIEHNe6Mf/54u+RoqrKroumJrmW8x4e1Q382UKhabzC6Oa
x8y4LrIuLNxDTevFV+HZoyjmmJ6a1vOzwN9n7RaJmYKCLUjTHgs+zFl9rttO
YWjqyhjTaoHu+zz+nKsUVrEG3QYrpJFP8smfKThZNPVb8ZR+p9zhpJAbUNrC
yG2QlYZ3+PdQaLSPXnK/s0F+Z36e8RWFRDagpu0n8TgrVRQ3TuFteGolc+Mk
3HWBDXfcFE6xAtEB1RDSDbtHfbWQ3WjTu/dXY7Dr2219/lr8BxH4cz0=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#106"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtkntMUwcUxm/brRZBbSqYSXip+IioKAYpYZXPvm7vhBGkgBBF0RoWgnBR
RKfjlhY7aisvWyzdxEcERdRhGnVqTEEkaFRwkJplAUUkVqpZNjRu6xC624yT
nJy/vi/nO7+zaFfJlj1cgiDi2fbPf5nCu2WWrcnJ3+czmhZpcliuJmkHnQCR
rkR92hEBcvRw8BqaxEh9RuQGTgy6Hp1TLLCmY7io7er64Dg8j+brQuhstA19
5TrdEw+/X3DKdhBnB95/0S+GuejNZIA1H/VRuebUnCT8YLfbA/QamA56xNf0
ErT1bk4IoAuQzbFJ7+Ul4+aHKZcgrxDCoMF5GQzQE3VtnyBlLxIftDx2r98E
z7J1gs/CacRnL1qqc20CLZn9K89aCs9AS2vDbin+zhhr5QXux8TnHR0DY1L4
4/H0Zch6GqcuzZaBr2uU8bwHkJ4rOJbQJUONrVjEow8isJ1/0x4pR/BP5Cj3
zSEkxlTF9ZXLcYpdgJt3GLqct6WuXjmWDHkZ7rMjeJ7uFR4TKtA+MZjKTakA
LZM0nVcrsE5wJYx7n0HOcLzpnkWBbXXdH4nwSlx6NbmisF+BsdYfewirDupV
reJIsRJsnCuVaXoEdJ6t8BQo4adBBFZhbWRTrdOqxPvB1F2E/igYSjLa4FZi
Q94dqlJiQGdIziNOEIlv2YMQXgO+rna/yI8lQfiLrka5InrIxnKTswC0MUa8
rJszfqOWRPWC3/p9biO0ZSMHMi+TmLva0ezbbsLHfGWN4SWJLbciDNqFZkwv
bxYqvSQaZeYin8uMVYIg+7hQBf9/+DbXwJM1bzBcosLO178s1s6qRebSxy0D
6SqcZ4H4umvxrHl8fvse1f/6sHqICjJDp0wzeksDSn4/HqrpU8F5JjS2c6IB
IVsLb1QMz/ilnUCP2s2f+27Gb7YFXvmnOR18CnL2QZzfWBBxdMzxZD4F9+Sl
CabXAlNcEudIFIWVbMBpnRXaL2cFnhFTeMKWc8QK4YdlFyLkFIpFVV2MpBEx
OuPP0jQKjuY/Lk7/0wjr7eN9Rg0FNQvImXUSzo1/fucopvDXim11zPWTmPqU
xqk/RKGJNdgosiF2+akL0XoKidcflk+X2HDO0G3cb6bwH8jDczY=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#107"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvd4qFrQzNgUVEXyLkuFYhoQgcBSQR4u0vT90UcqQ4CMgcoeP
IbJCqwxCQSxteahVjEFRVBwhBBQLFiHKFJUVySbGYKdMY4LofBQj19uwk3z5
/jon3/nOWZSapdxOUxQVyI9zj6vT2/cZfgyXDQ2ERbnLw722pIX8xAbBUWr9
11O6CtHDuRJ/Nhp/CP06vpsShM7eM1EeRgXMdGjfw4YwPFnqonFnN6O08Ybj
+Y71cOpJZCr8o7S0er+MhG73yGdX4zaY3SobNlDROF5TU+OqTUNT4ky1pDsG
9T3SIFd2Jwp/e9rvHxuHlndfbMLkdGQ90YiLaqS4tfBqtlCWibmtjQv7O2R4
uTxAOHUBi4CuXo+8rniwoW6DAuPPsMxOaY+7uBEfGXudYMZelISMX7mbkwCn
PYF2HxbXvqpi5snhojFFCBz70frsw987MuUoq9ojFrC/YKTP5jfQJofkSvQw
PZIDz6Fam5mT4yR/AJ2ci7nT6vWmcAWWPHao6YFD8DZlS7JyFbg41h9Py37F
5VF7+c2rCgQIL3nRXWpYVjy6L7IrkFRufU8tKMCwf2KwdbYS9roTtyijBmle
2do/tyvB27lUkKBFzizv33t1SjjToGYcxoH561SpjUq87Y9PpbRHkLEywxz7
Rok1yddiC0IL0cK1zXkvYnCQfwjlKESD+mH5+EoGlBNsEdIrNnZWqxhE8gHk
+xVjjtR+LGM/gyKPv/q4F8V4tTQ5XVTK4Jtvm8ycqgQivXWrewsDZat3Yf48
HU6lHPrvzB0Gpgjdbs6mwz33OpF0iIGzH5y0DPrqmPn+HIOU5w8W508/imCx
1qidRXCWD4SzHsWioumPfX3IJN/rGHpE204b15JJvkGP14Ft5BlLYDntubpj
TA/2bUdmdx6Z1EuowPqoikchxf/ruRkgvn5O4jATRPIFsewyYGZt7g9x9QQv
Pl8YU/cY4EjSxEY0EaziDU5ojLBpr6nCugnu8rA8NeIB7REY00ewR3y4Ux1q
gm/z7XbXQYIm8+j5iU8mLAn2EdwcISB8QJZNlchY4zPYPkrwwTepXN1ciYHv
K8ryPhJU8wJh4iq8Lj3ZRXMEwc23D0xkVSG/etkbhUsivgKAHn29
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#108"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvWsFKTDNENCZooDA7AwqGjQGK4fxiqOKbRnglAK394fGABZ8
FqXQCvJoAKEPQEVEQyYTH0GiiFrRIhg1Aw3E4GsQIuIjwWoUK6PdbfQkX76/
zsl3vnP86J0SwqEoKpQdx/6q2nF9ty45PMPpWPONank4/08mLFWxGn/0mM0D
oeGIHcnzXKqIhXI8zK+6/3d03WuK9taLIb0gGhw/KcbzAGe1lyIJxQfKfvB6
lwCHnqcoBRpS0SU+kgRt5qspnj4dMfdfSK51bsbR+vp6nobBnTfOE0VlW3Cm
J241T7ENOSPBOS0/peDyx+kBF9kOVCbOiVhOy9DtezHXRZQFBMdcCTycitdB
IS4zfBRQdkT0vv0tDQqh62OuPgfrXZ/98vBSGialo81ct12YMDZKhfPS4bDH
1exG7qLC+4G56XBWGyK51j2YPKOM5pvTUVGb7cFV7MPI/kFxhjsNz/OxI5xX
++GuDjTMiqdxnD2AI8sDBKOlFi2NRU+tKs7gAUSNJs/uNdP42/JoA0eUj7CF
yhuCSRohLq18jlkFb/e+fceD5NhadfsT5VMIYdamh5USOUabj3VTejUi6Cm7
vEkO1k5rYbwGcXPbLcPdcjjSoNwOoSaTnPcak+PDow00pSmCzXdQnOfPYJWs
c32hsBj9efnGGesYKNmHUNZi1K0dDppOYkA5oCjBp+dNc6+VMIhiAyhYUoov
j3njHQ0MSryH/rGPlUIjVZmNbQxmBbc12FPKwY3sOxczxEDSsaC44GctTjX0
9QrfMjBEajPtA1r4yU3K1P8YOPphj6tApu+crC18grSX/f4FMytxVuBh27iE
4DQbiP12Ja4K/Hkn15BvfP4RdL4rj9YkkG98XTUExh/zVxYRmBrnL7tpqUbP
toB2p6rvevE1eKm8INtV/13PVQerpGzZqnMEUWxBTNt1+BByb1p/mWBsqsWi
6tFh8dqAxlM3CX5lDdrUepSvTBM96Sd4wML0rx78g/pWtyGCbI9DXSqhAfy+
9zVfhwnaGib+sn0xQJpvXeHzniCBDciUaISgO9uYOEnwefHWKlW7EddlF58k
2wjqWIF1HrUIbUnJCnLKwJr2u3ttO2txYvP8ultuGfgfh3V/0A==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#109"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfWmnttQxRUSZoIAbmAFjuEysS+0hxSAflS8ziuFD+vXec668
KaBDKG2BKRKoSKGAI8oMooQwBCJEoXyMoCFkAcNwjZKBIIbhIkyHIkJ9TTjJ
zc39cU/Oued6ytNiVRyCIPaxZe/vtCc608tk4rE34/MWQZrY7Zjy2xQmCLdn
p2uvBIQidDLL+UsmFCaJ5F3sx3HoGaw95GKKwYHZkDR+sAzjn63Xb2XiQdAh
i50uibDzOUcmIb5Q06/gpaDo5PNlvikV32+beGxuOo7qqqoqvkGJDe33K7qu
peLmQEQQnyGRet8/yI+W486rlVFe8gkc3JGTMbxZgX6P5lO8yB/Qmj0T3lir
wKx3IO8jdwYLn4wbxtyVYEQOj7imH0Gtk27aflGJN3FTdVzBaUDgUxw9q4Td
HteQDt8X/5zrEKmwXl8u4S5loNWx0M+xUIVis8aJy5yBMrN7um1IBeem0EnO
87PwMMctDvLV+IUVwEnOQpwspVUYrMbux0tazp/n8CSm27v3tBoNCw+lnMgc
bGlYGSF+VSOQ1+jG+V0L9d2aMO2QGonGvv8Jdx0qBudCGl6pMVV3pZ8w6ZFP
JqxohSRYO426KAMyj2Q79chI2NMgBHlwrXdtn84gwcrJ0g3kQcTMP/UsJfHf
Q6mcMOTj3sgja10DiX3Jd8N0ogK8lv+1t6qPxE/sgYilAnyVLW3eZSVB2MGc
h7A+Z2Mqh0IIG0iu7wU0v+iyRW+lcN7F+odt5gJ+27j9c7EPBUf/lhpb0kU4
rtZ5KA9TiO3YWZDrWgTb3P5vuuIplEuKTtpGizDn9laToKZg/xdbRDGaSgvD
jHoKx58Ne+VuKMFUj+m9uITCdTYgW18JEsauHZBXr+27XcKDn3vFu26v7ZeV
os8hajjKSsFy9dOA7oVSRAT355JP1/iiLiPn2WXZnrk1Pocy1O9XSTqWWT/s
w1ioMvj96zVh5NKYWb61oB1g517FoKeAxheswVW9Cfd2HDEaXGkMsbD8bYJC
2m2N96Chccrr0YrKkamZPPbam0ZLzcv61bflqL7R0l78NY2jbGCW7yowP6DL
NwppLO5JNGrbKjDhdYeRi2lUsgQHncx47ztcyTtEQ9j2IHM1zYyr/rFLeeE0
PgA90oki
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#110"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbsl2lZiEJlBLIq6yZQhI0SZaOUIusqooBT7uDwsDWyKDC4q
IG1oeVVkXSvQlpfCFMImBpxRBoyMgo4AKjJC6nMOIajIWEQ0bgJCvY1+yZfv
1zk55ztntSIlIoEkCGIzs/Y7o078/ZhRGuga0ErGNUYF8qj4rQdofwylJsvF
9CYIRpQuG2kBzhXw0yjHIHTeOLdrmWkf3NgR45vkAvz9yYKcj2kJLrU9Ox+X
FAo7n4swBoWmQQ9hZRh0SWOzHFMclHJCsMu8F5UVFRWc3Hj4FatcU2v34Xx3
qD+H/hZkiWigSxuB5ldzVnZsIgKFDWWrvhKhy+PSEbbwOwgcWKPVEyKMr/Nl
O7jT+KYwvylfFQmaz73LMqUiszpj2/XpSPwvGq1jLTqK2gAnrvLQftjtsXKP
YeEJhyUzffuxIMcczJpOw9mHof3e68TQlyU7s+gM3Py0Jb4yXQyXi4IRcuw4
xL8WvFF1iHGGEUDGKhHl18y+85EEa/+aVpO3VbinKDVqtktwYWpwDynMgimm
cdvn6RL4sht45B9q/OTxi+BovQTRp669Jtyzcct/41vrPQlG6053EaYcBOzW
Txi8pWDsNGSH52LH8PGEUpEU9jSIRXn4pyaxZ0WGFIwcZXZ3Hpb6riyKLpfi
5eAeBZGbD7cOvxpDixSbY9tCsvlaBM+qDo5YpchkHkRMaxHW7tWjfiEFYR+6
AP3ch7fWr5VhJxOIxuskig2e7PQAGQqW3e+3PT2J4TuOpG6vDIu9L1fZYr4H
r6TCejhThojWlVrNch08l/+mkP8ggzlYl2Sz6tAnf12TUi2DvS+2UD0cD4SE
8TplkD8ZWKNZaMDj3RzJ7T9lqGUCsl0zoNEyVj489AHPK0LfBfdJ19kPeGMx
9MPcXidvCpYf3Xw6poqRVDg3oviSes8XXoLe5jMhXwdT7/m4RvTcDWqflFDY
yRTGctAI9Suf9a1xFJ7O1k+pu42YaJ+7suEwhQ2MwfkcE8oHzm5dlUWhjxnL
IxN8DENO9VoKyc55nWq+GTf4gVf/1VO4XDX58/wbMxK+iLp+sYpCJBOYRVyK
m88fePnVUfjvs+hT6qZSaGaunshqoFDOEGx3LoNvGocuukJhS1Nv+nxKGVqC
xsXJbRTeAfjfg+Q=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#111"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbslXaEGYgU2CLjhfIIbI3M1sgDHoYHxEHwVZDykQnt/BOUW
BByy0pZVUAIKfSAq4jM8RIIOZPNRHWqHxjA1MF9Rg8waHDAKw4pMutuEL/ny
/XVOzvnO8ZPmbMikKYoSc+u475RZl3fqEsNi4tM1dFFemE9Sxjdp7EokqYc+
uNcWjYiBIvcv2Ah8dbvNInGT4Nrt42s99ethFFw5NKb6Hk8X8tUebALeWeLP
/peWBgefe0wKVnxd9VqxIB0V2a+mnfXpSBmXTD9bLcWhuro6Z00G2qoVD1OX
bEOTOXqlMyuH7M/1wscvtuHCxPs+QWoWbuYYR14oM3Dj0/ZcQcx2RLpOiM10
JoYWBwmcfFnELfvj9668TLAhLg94egVCI2u1e/ozYds4eJonzMPj3HuKOQEy
OOzxNDsh9BvmFRbIwFcbwnlT+bD99iyq8FcZKmt3iHhsIRQJHnekkzK4t0UM
0K92oaMzuDgqQI4jnAA6tQh7T7X4CZPl+OzJlJLu341TzVPBW8rlaLHej6Vj
fsQiiVfPrXY5ggStPvR1JZrcyPOH/XIk7++epHxV8B7+5OyoTY7B04dvUHo1
/v62+KJ6BQPOTqsqTgPv5ZewL46BIw1KWIrRo26hHQwDTk6RylwKWe/S1kAV
g/H7sVJK8xOaakTxi40MxKkXv1OFaHGyjv/z5RYGP3APoqa0MO9+OSIyMaAc
w5ZhlT16JHuAwRoukJKAclBdVpdjVgZlno967ZZyKJa7lo1TBK6fn6+3p+xD
1kz8k2Bfgg2/zNeWeFWgsvjE+3X+BIbwimx7XwX4THjJVTGBoy/26EpYDHPT
BmMJtr68u6Dkwyo0L+TTZxIJTnIB2burYL4QdMsmncX7HIBxSUEgCmbxumo4
RR27svYgganBO/CqtRrTgavzJxtm+eJq8PFYw92kxlk+Fx0ia7rOSToJ1nCF
MTE6hHnNq//3EoFlutmqNOvgn61xSugm8OcMzqj18PwyT5bfS3CHG9NzPfa8
GR4V9xHsEJVeU4YYcPzt6496HhGcr/+nceatAVKfuVrpXwSbuMBMEiPGGs84
s0MEb5Ym71d2GNFJbe3cPEpwkCMIFdUipysj0WOCYFVHT8FMTi2ccoMa220E
/wNw2ouz
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#112"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbZMW8g0KS3WUpZhF7JokDBI2TDAGY9AY2tFHTiF0vu71TFF
uI7igGV9gJ04Ig9bpDjJpvKYgKZThotpKqlIRI1BBnEExChZHW6Z63QwMKO7
jX7Jl++vc3LOd040Kdu+l0dRlJLb4F0y7Xcb7bvSuu4dc1n7ytLkuw2bi9gk
GNZcrCyfz0L2o2rxJjYbpaHhsS7kYvDWmawIRy4aKmaWErQf4cE7K60SNh/f
NR1ThcTsQpBPrC6E4cAfiTFpu1Ff8uSl0EEjWtdlzpneg1NtbW3CGgPW+N+c
mFMU4vvhLUlC9hN82Dulkm7SYeD5f+MC3X5cyLsnPBtahKG3XZ8J1AfxV2Lv
e/lDRZiLiReERLHQSGK9pfF6sCmh9/mOQ7giO/Lx4wo9FnbMdvLDyhHty2Cd
P+gRtMevMUJwzj+p8Omx0tqSwV+sQPKKxHi3mMbx1lIRn/0cozx5Tl4qDfHF
7Ee8J5V4o/ig4keGxmlOAE9XjV+8zlWHbTQUU4sm3sQX6HHnxK3roNHjH9Pw
1F8i0/NpgmCQRrygT867bkJT8p6fT03SKGj0/kNFWXC5aptd5qcx2/nNEOWw
QnM5o2hURsDZ6bNoa2CUeFXFsQTBNKiwWjydOiPuTyXg5FRbhmsR6XblTWwl
+HtMQ6iaI5i/IcyaKyRQ6q6qLCk2KNcqDcISgiruQdSiDRbFkFRdRUAFhz2K
FZH9v9maCTK5QMwb6zDDPl5oP01wNGLybsBXhwM3o2SR3QSrYy+1Bwq/xkyy
5oLxKsH2n96ymdfVw5S7IXrfdYKWjPqSwHg9xs+/v+S7TRDsS2DLcTjnwuoG
pgj0v46uN69qwPRMR3r4LME5LqCAtwGuuz2tkU9f4+VNyM6X3MhceI23N0P0
4oq8ajUDz7eyuGv+Zuj3OisHwplXfNoTKI/rmh2UMq/4Qu0YNYsictYzyOQK
4ym2o0CU/mIkhoHv5Xm/adiO5507pYqNDDZwBpetDnQnPfiKSWBwhxvPQwfu
h+w4uzWJQamodtCU0gLj74290s0MLrU/617+twUPxzqmtekMdnKBefJOYmxb
xbNrWQzm3y1oNPWfhFLy54hYxcDJEaSKWhF3u6RHq2bwQf/Nw8tlrcgdSXQf
0jL4H5bzfWc=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#113"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9MU2cUfWkdlLIsGylEtHQi6pjMTTZTMknt2QprtCCKSFXa9z6JRjAM
3zpdXRmlP9XQILi2VgpC3CBqYxZhqItBQGDNYowwZCOEyApEmS7iKuscgnSv
0ZPc3L/uuefcc5OLD+Xv51EUJeUq0p8bD3Yedu6S2yXkyfJjZXLxnn2ZDJuB
XtsVnUqngHLCIHqfVcI2slMUp9iKnlvnshNc25FCTwTfdubj3qooczyrxniq
rLYzVIAInyhHi0DdeYnvSiEcZdPzMa69KL3g/Uf5+i546+vrYyz7UJcY+O7X
Zbtxwa/KiGEPoObG+uGx0G5cnX0xLKAPomxNdttd3x70r7isE+R8jkZxbsLY
p0V4uCZdsCSJxVTlkI3pLwIrE47wXV8gW2r/WbBBg2c7plr5sV+iefW5DSq3
BhF7fMthqKfvBvofaRBldiv4c0dw89nf3QapFjWe8jg+q8fk8puxPIMWoh+U
E7zpo9j2zuj9xqtaNHICeLQBA80y79bHWqSMzRl5v1Xgr/WxmY8kNHzBoVxe
TiXmKtapk3JopAsuiXl9RlT6l4T0R2hoantDVJIJPxYFz+gaaEy1NvRTLjNm
81rjB8ZpcHYumfIsaEt8b3ZwgUYkDSrWit7V8nvXljLg5BhMfiuiRy42X/+Q
wdOh3GLKYsNrxx7+LlAxkNLXN5tkdvAdb4lu72XwNXcgas4O9cydW6l6BlQE
7HFs/Cx5R1oTgywukKq0EyjdUt4RdZnB8YTRO+EHJ7BJ/6JluofBG+vaz4a1
1dxet1wQYJD/k8RelehA29iqcOkMA7fCURYedsC6cTwUv8Ag8i9hVQ1MgazH
3UICcn9wZVX0SXzDSOW+Nwm+5wIK955EQ5rXti2BvJwX16Gluv3o5Aryct55
Cu+WSPTWjwi6mpd90B08hQGW//xaxiu+vG8Rauqo6Mt8xSd0wjdhtpQoCLK4
h+kqcaK8T5gSpSR4MH8xaPQ74W3xUNYtBGs5g4tmF27MPF2bvJ3gNoeuP1xQ
JHkc2QUE5XHWHqPMjcI/23bmqQnazz45v/ifG7XpvE+WagkKuMC6Ck9DWLGy
c5Qh+DdVU2vsOI3B6m61vZjgDEewKc4D3cJmkXg/wccdv3y1eMiD+Wj/ZNMB
gv8BMBGGNQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#114"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbYG24oaWG0YKVOBbWwwUWOoQJATHiFoHUEdA1KKYHvvDQgW
BR9dLC2silYQ1pbCFDfExlfnA40s42EnDIEpIwjZ1KhBA4jWLbWWhyh3twlf
8uX7dU7O+c5Zlbt7q5JDEEQEu577TpPXVmxMjx12MemSoPxYcaYiOlslgSNp
jT7hSgKSRtTC1aokdJ9atuxkZCrsfY2JIlMq7ia2PrwemIbHwV665apvEd/L
D2wdyICHTyjNwoIXJWKXTQbDrvFZvikHNnt0e8GkHD/W19fzyxT4a8W/+xrz
duB892YJX0Xh8NP7nR+ty8FN14chnjwPELjb+h7moGvl1T08aQGC46YvyfNz
MfHZWt7CABWk4lq+9UUuVDGCv7mmIqhfk8dj0nZiattzK3fxXuQnV2e/vrkT
HnvcsmL47w+ZeOStgJfOHM+dKUF24/rMtgwFKi2FvlzVfkzfK+x8eVoB4eWk
Ec74ATgLHP9oHytwihXAkasxJWsRKEVKBD2a0XCGv0OTWmb7ZpMSF52DWzjS
Q7jjeJ/qPKjEWp5NzOnUoJLwD223KiE7cdtNBGjxMtU2+kW/Es+tJ7sIkw7h
FndouogEa8emTSlDfCLzpDmChCcNYnE5hEUjC0e3k2DlqLXd5agQHl0RXETi
zeCWXKLse7xdVcOcNpCIkP+WrI3Ro1zC7dGcJXGQfRAxo4fOGtU13kqC8Izq
CCZ/P5s+OEYigQ2kNLQCLnHfh6PvSBwRPehnxiogvrpnSLKEwtKvmhuYrGNo
bTc8+SOcwtZfP9GXfmxACyP2642lYI437GKGDPAKCvPip1Dw9IXZXInY5SHJ
xfkUdowOBJYuqoKFZ5a2HKDQxAbE3K6C+eeSJlI/jxdXo83+S1R4wzzeWANY
svrj7lDo+Mk//JazBsVn6qp6B+b5Un7AwDGJy/1gnk9gRI/fGt62VxQS2MJ0
0Eb4V8dVHXdRGJu94NR0G6F5Frb30CyFL1mDczoTNvXljRgFNO6y0/HUhAzv
1SK7D41C33K7JsaMMwFawTU/Gs0N/52bmzZjgeLPrx2f0tjOBtaRVgv35/du
RYfRmAyRndDcqMWFOp/IzHU06liCjb4WbIjycSRvoBF5o2ff3G4LhqeiJrw3
0vgfdyWKEg==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#115"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbYGS81QobK4UYNDFK1Oa4bEB+MweQTBIAUttPdWS1h0Berd
REGcfWGjgIDYC4jIKjisiA+iyIwhBYUQwIUhdjJHhDkV8IcoCoVKpN5GvuTL
9+ucnPOdsyz5gORHDkEQG9l13Q8aVVOGKTHklnfI+giVMsRHlrJlDx2EFqFM
1EhtRuSzbMG3dCRUlzapQvrD0dJVFe7NxGFN2/+1Qmc0ni530y+mpSjtvfPf
+qidcPEJYig0JHS00h4S5KcNT7szSrwen5yozozHufLycndDCvbZT/219bcE
XG6PDnKn92EivAZfm3ah8f1HG0+hAtM5LOpX7kabb/0vvJh0vKtNabB6SvFq
hZg3V0ijYsKR3l0nBR3M7+MyPyN1XebCAnEiJuOf13DnH0TiH/tFqZZEuOxx
DRl4ERwx7rUwCW76km1cxyFc4G+vqkpPQkGZ2pNLZ+LXrLy39+4lQXA98hln
OAtd9i5RzxcynGcFcBTZON4YO29EIoNfv0PD+fso1P6LTr0vluHKWO8OTswx
hI7U628/kEHMu+rDadVAEH8t4SEhB1l0f4IQ6jBgXb3yoViO5zUVbQSjh680
dOkPuXKwdq7qYg0gpfEX1fVyuNIg5ucgt6luzbRNDlZOtq49B47laYJVk3K8
692RTBiOQzmo1oq/JLFRcTdKF2xEdfKyyohAEkfYBxEOI17b6q4zcSQI19An
EDW1ak6GkUQYG4hWdBL0ULR3ZCWJE95Pup1DJ5F8N3Sw7xYJj7U3K51UHgzh
jypMT0lI7iw1apfkY8B3+4pXb0mUbMtPc9ryUc61+Em4FFx9cUYX4HG713dm
fwp7X/Z8o51XCGNPp/uFQAoX2YCc9wtxjYwJGA2jPuN9TqP7nH2RWTmLNxXj
H/+UUZKhYDV/ta55rBgvRAP+T8yzfLFnsGH6QcDIlVk+vglKiQfvcTOFMLYw
1v0mBAqbypo7KQxN145p2k24kWtLjXtEYTVrcEbPoNdclaV9SeFPdqyDDFD/
sdVvlILaM6dFE1yCoN/5Rp2dws3KN5aZqRIsUCb9S7spkMAGZt1dCknHVDXf
QwF7AFmkaShF57iX5KfFCpxlCb73LMPePZbCIh8FNjV0HJ45UIaeLkuf1k+B
T/rxij8=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#116"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbaMFTodkA4iL0FFBxsQxlaCPDxRDDO04932/gIMEcUwlOtW
ugnzUooNaEORPmAIndHFbAxnmGUOHavMIpKhi6JsyjZdx4C5JSMIPhBpdxv8
ki/fX+fknO+c8JLKnF08iqLE3LrvU7a8X2lUbDZbzz3VRBZuDialSe8yCQiw
RH+fVSJGuqNaFMOkY2O+1jf7whYM/Hhim78pG4sT/fPXI97G7+s9615h5PBQ
jgutSRK4+USSQiQfkq2RVmRCVzG96GXagcvJyr+Gl7JwrL293UtTCqHUO1rj
nYMvhjISvJgy6Frp4ql/cnBubumWoKgcG+3XZgK6cjEY1vO+QLIXrkgVSyR5
uL8hTuARwqBnbvLGC+N5YFK8f+Gb9sMr1UFCZfl4nDtxii/8ANLbaRl99ny4
7fE1SvgaRHcTI2TwrDNv5S9Uobzmm5uNH8vQ1LbPj898iKUVaUVRIzKIzqQ7
eNMfIfiK4RntJ0cnJ4BXVI2yquy1gblyrPt1geWN1SB2sb8Jejm+nB2V8iQH
4aT/1dUOyhEnOB3Ms7NY4dHoufeRHAXNlx5SIWroh288aFivwMSpjkHKVIc/
3vqze1qlAGfntDpTg7H3DLvvdCjgToMS1kNkjY+T2xTg5FSrh+ohT7xnsNxV
4MGotITSHELezwmHHc8UEBdd2K5O0eK8vrs7ezWNA9yDqAUtNnWxQQFv0qDc
wzTAWfzVydhdNNK4QGpfa0SMj+eqgRoaDf53fnJNNUJcsKYyvIXGquizFlfh
EUy/cbz36z4aOX2h2trVOiT0a8sEIzTMW3UVrls6zIlD49W/0XD3xZXRhPvC
M9aXl2gUT15fW/uiHhuaqgq2vETwGReQ65Ier/8QlnU1kCzjg48iLGY40kdM
lvHGFqwMEc9k7SawHQ+MvTjbgs6YHlXqfrLMl2mASDJiGax5zudtRIRg52RP
M0EaVxjbHiOOjR0ICm8nmFrsmmWHjEh2MtGpJwmiOIPOOhNOsEEHm60EV7mx
3TPBZyqIHvmOYJ9f/QCbYkbptSGF3U5w1jLzufOJGd9ejFLNjxLkcYHZZK04
kmRh4scJHr1a0Mz2tuLJ7fOZmxwEn3AEqX5tCJhXmoV/EyT2DquclW3wf8f3
067/CP4HegyAZw==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#117"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmlMUwkYfLREgSoRRFgRlMOshA26mChe2InoNoQShJb2vYoVXXQJC7R4
IIK2pVhhaQpoWysiHmtU1KIuaCtSSpejMRtWFFHxAgmKRzzAE9a19TXhS758
v2Yy882EbpKkbGYQBLGYXtf9T5Zl2a4l2Vcsqrcnp6ezg0QZyzdIY1Ay0lfH
I5aAM1joN1/KwSpL5bxl5jjY/jmxxl+XjPpVDfoXAfF4PHdS8QypEKbmLRqx
dyJcfH7c9ch/XeS7a8paqLOff/XUbQTrLq/5PJJxuLq62lOZgQBxv6VpWQrq
7AkxntLf0P6heY7RkwfTh2+9HuIsZDWWhdvNPHSEXNrqwc1BO+n96y9cPl7+
GO3hHiyFG2nMlHTxIY31usfU5SEs3EcZuSIVX3hDp5isbTAr2q9JjqbCZY+p
3A77k0cZ5Z9SMalYH8cc34GhNP0+TpwAGkOuL1O6E7qO4z7+fwjgd4EzyHhe
gABTxdXg6wIcoQUwxIVYnq3JTnITIvzhuIxxpwju3N8L8xYJcW60J5HB3YOa
FrY2YrMQ0R7GIEa7DKoG1glHlRBplW2fiGAF5FPL3TKbhBg6VdNB6IqRc/z2
QJ4bCdqOUZGkRKBdfuxiKAlXGgSrBPzaQFMrmwQtp1BhL0Ff26LuvnUk3vck
biKUezGlu/9cZD6JxeJr8YpYFUJerY0aqCCxi34QMa7CXEPYylmnSRCukZbi
Skv3m7qbJFbTgch/KsOr+Fxe9FMSpf73bziHy3B495jt4mcS3lENtc715Qj0
epww8AOFlKuzVfKZanzLu2ttjKCgj1NnO3vV6PcP2dAZQ8HVF2eCBm8WLrTf
4VFIf3YzTD65AilnH4hep1M4SQfkbKuAqW7a/5KcCXxQFfrrOyVDeyfw2v34
WWZcKrhAwXoscEHr6H7s0RR0mswTfEkH0HgDrS22CT4vLaIeaZN7blFYTRfG
mqkF3zbS9OI+heGvZ0dldi28emexzYMUImmDjmIdEpWzZ6pHKHTRYx3QwVJq
8TF8oZDrW2KTxepRlP9nQaaDQkPtuzOOMT3+vRRzdAtLBD4dmFVwEH//9WzH
IR8RPkekVcouH4RiWPWxOkCEQzTBSl8DyFs1nJxgEZZevp7vkBgwNlpf5Bcu
wnf3Z4t6
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#118"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvWknAkbmSOfEFEGYzXADhw9cdZWjVlEpIrT3x8QKChqZSrk8
RXQFWhvAijzaUhmoYcIAY5AR5kBYB6iNCBokNg6NMY4U9giDzimPxtbbhC/5
8v11Ts75zlmZlBZ7lENRVBi7rjunPN6dpfsmXNcXaBLvSg7nxx/ZnMhsxLf1
g4NNqk2IeJXHC2Ei0LDO65Zfpxg9D+p2LNXHYOs//swz9W68+NSt8GMmDpIg
uffAiAQuPp7kIAaC/r+SvTca2pPjdg/9YXBf9/0QdWkfvq+urvZQHYHfV5Mh
XnExaDJHbvRgjmF/455HPbYY3Hr97ol7wnEs0aQe7U6PxV3/1gx3SSoUPjk/
J76IxV+CUPcPfBnEBfyyPkgoBSPyfMrVp2O4KLHnQLEU09LRBu6iTFwra/8j
+aEULntcVRYE+yyZyzxlcCs0bOfOZsPAwxfWcBlKjQpvLnMKo9eDcsfTZOC1
RLzijOfCWdOWzamRoZYVwEnIQ8eqBX4TvTIEPp9VcixnkBQqPfe1VYbrtuEo
juQ7TFWG7T2xgEao+w0+544SGY4p8jKAhrys7w3lW4DpwxbrhIjGaEPNXUpf
iP5ceclkKg3Wzo2CaBW2icPfSdU0XGlQi9SYLAkWCo00WDl5BWY13nQlLzc3
0/hvOCqJUp2DtuheCr+LRljC7d0FIg2Su631+wdonGYfRM1qsDbEt9X4jAbl
GqYIa3fm9Cre0hCzgeR/XgxLZq0lmEtQtHTkkXOsGBPSxepNHxJ4Bbdddh48
j7mbjwVZqwhiO1Zo8n20sB/IiO9cQ2DYrj3pfKKF/PSxubNCAldfnJGl+Cm3
mFsfSXDIOhSQv/Ai3DrKqz6REVxjA3L2XURp6h2f1fJ5PL8cI4qHNvGJebyu
AtO+VVutGgLT1eVrfrNV4PeZC4I/tfN80ZXw/3VE1Voxz+epw+iWv/Ov1BKI
2cKYUnRglty299cRjNmbbUqzDtUd6TfNPxKsZg06CvU43/JYKmolGGTH9FKP
8hlBU1c7gcJb3aMUGVBpL+HwOgnaLk82OmYMUCxr/ii+l0DGBmYiVXCUfLky
8h7B28/kZcr2Kmy4OjbF7ye4xBJs8Tai7pDp36FBAmH7/RxHmhG6xpaMlCGC
95cAiwM=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#119"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1MU3cUfWsJFBSSAQNEUAfiNhgoTMUNiseAdoQW+n51CFMQUONELVXB
rSilLRbQgl1t+dIZJ0isDEiHTEGxINbKHDOooCHGD6xIzKYMGG6IUl+jN7m5
f52Tc+45H2flkC0siqKWM2u/r2TZHbm6lJXWUW+3ponklX7fbo7aKInE5Oom
7kH/cPCG8j3DJDyUDUQUn58Tja7rJ1d76WmsvZTY+uDhKtxf6Kj4SLIOGT5B
TheMcbDzefLT8MHlkKZTg2ug3jEy7azPhMVTKlqs+RpHa2pqnJWboUjrELqO
x8NgSYh0lmxFkKGp8LR3As5NvOnnpGfD8POgodqND/MC424Ofyc0n3mcDRvi
49micI6DvwSm/btnP6kUQMJ1ucvW74LDH2ILb1ki/hNZ69mz9mDfkpk2bVci
7PbYylzwXvv5OkQnwVFREcueysOwV4EutCEJ5VVid7bke1R/U1emdhTCs5k3
xBr5AdMLl0VEfCHET4wAVno+tsutLb+tFyLw3pSMNbAP9d7czlq5EA1jtwQs
fgG+OpYaIq4VIpzT6Me6IkNwadjv0stCbNB0T1L+cuTtVc/3eSCEtf6YmdIr
EKkSRc39kAZjp1GepERK/VL56Cc07GlQs4rwav3Z5hVcGoycfLmlCOuCW0r8
aRrjtwRZlPIAcv80WDs30ViefiFezlWhLDBnDzePhpR5EDWlwmhjZbpRRYOy
j6QE5r6AiL46GnFMIIUhpZAPe/xV9yuNEq/BG7anpRBfGeFdNNFwC205bks7
hMzbjk4v7tAgbfNUhXPUuOlq2RXwmEZFrHqHrV+N+JjnI71/07D3xZZQjscn
nMbPUAQZw30BhU6HUXztYNZzZ4I6JiBb92G8PrftWo87eYf3+xEB7fG/ZAaS
d3idFkEcs8t5EJhO+C7uHNPi/tCLR6m893xJRxD9+dXES4L3fC46aGt6T95O
JYhjCmP6TgfX4GRz2UaCp9NnxmQWHZpj3rA9thAEMwZnFHpMpYX6anMIepkx
PdTjn+srTpXnEojdi7pk3Ar068XtGVKCluOjp2f+r4C0FilHlARrmcBMyZUw
Puop+LeY4OWnGzSy1kp4TbhuX6omqGYIYtyrECjqbhBpCL5s7dk7k1MFAS/a
KNIRvAV7roJU
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#120"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMk3cU/WwZFggYO9RA0PBwxFBFiZHCStvzC7BuKUgKBBYVVIKCgvqp
qANHC60VZ1dQ21oQCWmEQYcvEI2gqVaQEJ8IGIMvJg8RNdFqgBWh9WvCTW7u
X+fknHtOUNae5G0siqIimXXdafnOmwW638W2cVaxdMEv4oAN2YLNNB8L7krt
M7sCIXlT5BtOS6DtM/0w8zUMt++Z4hfrZeBrFi43Bkfg1XL30kV0OpQPXiq0
fWvh4vNNyMDghVUXaofXQZM/9s1DvxXWqVhnnJqPM1VVVR7KbPh5F/oPPItC
Y5eU70HnIPeLyfb6UzSufZ3t52TuxMLP7ztkL35GZ+DlfZyEXTj0eGOKd50A
46ERHLelNAbWlIujZDGghZ7P2Pq9mO0zXQ5+F4OplOF6ttd+SAZTN/TnC+Gy
x1YWgLs3dGbHkBDupYZYtv0APFUJ5lSpCFrjbi6bPoRlxfsa1WYRfC9K3rDG
/sDFD7lHtQ4RzjICWJlF6K0/rmqRihHywi5nPT2MsfgDnvNOifGvrTeRlVCM
LHHlRHqvGBGc8wGsDjnKdFffX3cHNlXcmaCWlkDIb3WbDAKG66s7KX0pqnlL
MpXJAGPnfEmSEp+fR4wIcgFXGpSXCp2yV+HFfwKMnKKSLhV8Qnp4eRXAl97E
LEp5BKKcdv9QExCZ2f5biVAN3fqo+HvNQCHzIMquhuDGkIG2ApRr6DLcn+ct
83sNxDGBKHjHUMCfvoIPQNnigUfOt8fAVeoetk4BPqtaapwZx/FuS426zYcg
+foytcJPg4mhI9Nb/QgMsZp8Z78G7SuNP5WFELj64pRqkZMW3Z0XSbBltCdY
Mb8cqm15iQIxwTkmIOedcsQb6p40SObwASfQpi54QqfP4XUn4WMN3562n8BS
67/6lu0khj7OTtYXzvElnULM31jXppjj89TBbl5j5WsI4pjCWHJ1aPrH6Wg8
QfD2m9km79KhktfRP24gCGMMOkr1cKQ0c0ZqCR4wYxnUwyvwx/9MdQS7uarb
cqEBM8//+jXKTNBS86nB8b8BTfmHRZPNBKlMYJa008jo9hYEXSOYXLGpQt56
GhvPZTfx2gkqGQIR1wjlqPv8JRaC6Nbug449RoxSuDRiJfgOy7iHWA==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#121"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfbwaKRrdgmjCBmS6zrotQ2kilUHtgb73GkbRDR0Qh2USndC0
+oaMKXP9AgaxlJa1pXQDtwWZjjFqiBtGXcuQolNAhh9EcXMdEfRXRSIKDe1e
E25yc3+dk3PuOetLDucdIAmCSOU2che0qksVtkKpYeQj318570sT9uxPL2bF
aPAVPLCXCyH3V8Uls3Lk5Q2XWsdE6Lv2A73O/gHMV79/I94hxt+C5Ya1bAHu
r39JMxN6FxG+OMVe/PFmiJ9ulcCkng7G2Pfhwi51RrNVim9cLleMcT863Mej
WhzAmcEccQx7EHf4rpFhSSZ+m128xVeqsParxErBtUwMvHa2nK/QoH1W3h2V
mYXHG1P4yxJZFI9tcc3/mAVWsmKcZ/8UqwT9GWXhLDzfNdnBW3kEL0tadowr
ZIjY4xkrcK8tbkHUJMNyg0PGm/8MQ9mukcVhGczOQ7E89nMI3cbjpcsoxHXL
/eT0URQP+xY+2UqhlRNAKquw9dd/Ap59FF6fmNeSt7+Aa4d/c+wJCp0zY7mk
4kt8WD+nm+qmkMLvSiAva7H4SKP6eZRCkaX/GZGoR0tr7y+eAIXJjm8HCLsB
45Y1c1FCGpydLv1OIx4Ga1rdUhqRNIiV1VBOnGzrzKfByanSD1bDez07P0lN
4+lYbglhrIHuoKJxi55GqvJCtl5Si2fiVwtIG41j3IOI+Vo4bqT3nz1Fg4gM
W4eKissp0T4aFBeI7u16iM8f2HjvJo26dXdHwlP18Da6i/7101j9Tk9beO8J
CArcrC9II+98Uq0u3oSjfRk3vdEMHDKTOnzLhOLpp/8J1jCI9CWcY0ZNUcmp
wk0MPn44ukEX3YgnOtGVNBGDdi6gcH8jFMSL7s70JXyCFfUTpKowdwlva8Kg
arSyQc3A890rm70zTfBfSe51HVni2/k1bk8iUFK1xLfCBuGepvhtdQworjCe
UhuSNBuG3jMzmAr+NKMdtCHtz0ek0MbgLc5gyGCHudy0Wn6SwRA3ngd2NDhT
5yztDA7FVvdpJQ6UBzWWrjMMetoCp0MvHDitsFJlPQx2c4F58pvB+z1XtqqX
wdymIov2XDNEzjJPw0UGLRzB9lgnpPrdysdeBmnnrlaGDjsRmE3uEQww+B+c
24gl
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#122"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlUn1MU3cUfbSLK34uHZA4ighuyjAUvyLBpXCIAhrKqh0ydLb0/X4aFbQ8
UIatrtCyirMgYlsRHdlcJ3SOjFkQyTCFOMJc45w2bgxh0fqBjmVxFUWYSPca
bnJz/zon59xzYkiRcoeAYZjV/Abvf4aCy/uteanOlH5FwZyiVMnW7e/lc0kY
+Kn0zbHWdGT69GFSLhPOLZ89JpGb0OM5mx5h24R0rfz6+cTN+PPtGcZw7kNs
uLjEODQnD0G+MLkKMStKqtdIt8Ky59HLUBsL568bY8ZufoTTDQ0Noabt+Oq4
YnNZtArOvqykUG4nss0S7+9SNTpGX90SqQvwB3epZWxePnoXfl8iku9FRt6g
r+uXfPy1eLnotSgOqV0RjU+SNOBkM/uFtmKULWCLGYMGLz64f044ax+UpVfL
3u3SIGhPaNqP/vh31EK/BjOM9rXCiVKMzo5v8ixkUVOvFQu5MjiGTqUcyGIR
9l2mT/DoAJK/njjrLWbxOS9AoNajdeWiED3vY9HghEHw20EUmkLE/jYW5/3e
bIH8E4w+VlgcN1gsF7VIBD8aILvQOzkywmJb7ZXnTFQFIqt368VCgvvnzvQy
NiMSuvf1PE8g4O20VChM6I5acjo8jSCYBjOrErNVPtddJQEvR1/RV4mmQzWF
Okrw1JtNGNOnuNR88dtXJQSr1T9sqJCZMawYt1cZCXT8g5gJM2L/3h0prSVg
gsNVQeKpPRztJFjHB1K+9AgOhrevqm4jqIoYuB4YPoJVa+Y7t7gJ5ia4GgOq
o5ira1+x3kug7FxgLp9vweFDRQOGQQL7WsuewC0Lnu3UudIeEAT7EsiqwZnE
kfLqZwSahzdiy18/ho6HF27HThI4+IACV44hb31EPhHSabzkOL5c1rps9A06
jbfWYcDRpr0TR+H+4q3Ebn8dPEtvmjOkdJpPcQJ7OzrjdCvpNN9MK66JbtfJ
ZRTr+MK4d1mhEoTYnqZRDL/8xm/os6K1M9KhzaCI5w1OGW3w/Jys979PcY0f
9x0bGsa5xEklhVZc2WOQ2eFyzfM+yKVwNT5pnhq3oyXwguaqKXL4wNy5J8Hd
Dc25x1KMxW2rNbSfxFB0dJJyB8UpniBFXI/epn9zmndRJLdf/XiqqB7/XD7h
u1dI8T8tMImk
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#123"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbY8CjhZKmq1YFCIMoljzEhBVjj3/ly6WVgVdKi8xEHUzskF
BaWLhRZQZoEOWixM0Sgp6MRpiDrdWBGsHQPiE8emLI44H1V8UBRkKPU2+iVf
vr/OyTnfOXPWZydk8SiKiuDWdf9XK1u3GVbHsjcH1m1yLov1X5sZnc5KsMcu
8k3RBUE2oPL7kJXhu1B7w47CMJzvOvTpdOMKeNTW26I6F+GfYA/NNDYJz7t/
f2U/EQEXn19cKmRfBYrEA5HQbb4/7mXMQPcBkf6waQl+qKur89Jm4j+rQNM+
Go0jNrnEi90AlXi4/GeRFGeGX/cK0pS46nQf9feOgTXwZK4g7huYnx1v7P4z
BvZ54QK3ABZXH1piy3fFgpV69/GNOZib12ou9wVGE++Y+T5bkbKvbXJGAuCy
x9duQ6NNl6CsADw0NYQ/lofmqRmfONqBCtMWIZ/djs4ZL4+/fgb4/SQb4N3f
AXanV3uqmMZ+TgAvTQVVsJ7fStMIujWm5t34Fjl9blkNmTR+HLoWz4vbiZuX
06/vKqERLmj2511Q48n7ykW2QzRS9B0vqIAinH5Q/UFLK4075n1WyqgBlZ/F
Mw3S4Ow0Fym02D/HU/xqEgNXGpRPMR5tPau0T2PAyVEV2YpxsbppVUkIA8e1
+PWUtgQfhf6V+ziKQUTaL58XSUshyY6T08sYFHAPosZKEdlmHKldw4ByDbsb
HdYX/UfzGCzlAikMLUNXf1VYmZbB7ul/X3LeK0NPWHDI6UoGUxa21DtT9+CL
f3M2hJsZJJydXVo4UwdhV09B7QkGNUS32dmrg7vNFKA+x8DVF6e8Aj6WBSJ7
N4N1d6/MLfSsxOVkTaa6l0EDF5CzoxKbIg8mt/S/w/t/D/MfF319B9/hDVVo
Gn/et9CTwHJwVljbUBXmL5cEKt4jb/kU1ajS5yYvnkre8nkb4F4gLkmdTbCU
K4xlowGJv56Tm4MI7o0fHVLbDJg1z2H9LYRgAWdwQmOEIV2YpfyYoIcby20j
BpPjHTwJwRZh8Xm1tAYzb+S75UUTtNQ/bZp4WYOCW8WejwnBSi4wy5d7MRzx
ddKIjGAkJEWvPrUXjZ9deHJbTlDLEcQITRhMui49piCIOtWZP5FtgsLsOLAm
keANCSOC1w==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#124"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1MzA0c/7mz3JUdWhHqocRMlNSY7PSZjqv7vVC4Dqd0S4j0Q670zHV3
6dGe2wl313WU5iVhMWItb2llp85b8hJ5midNYeYKUXrqnt9tfbbvvn99P/u8
fANVmQlbeQRBLObGvX9r0u9kmRTRzT+cqn+F8mj/janLktklmJeilN09GgZp
Z65PKCtF29BYsleyFPWO0ysnm+Nhip7w9b0tGh3BHjpfNhHhhmmt8RNXwM3n
Q21GuEKknt4YA8OuniGhOQV85XBshu9KnLDZbEJ9KmzPiy0Lglfhgp1cImS3
IbR/fUvjGClqvg+/ECSlo7M92aG+JcX9mVf3CqgMRH5OVD6Qx+LTnHDB2AAW
6pZKz+Z/YsGKPdv45j14Zb3s7F0Th19ruyr4XvugFpXPsNbEwW2Pr89CeeuG
nbKJMnjoLDH8wf1I7YgQC7bIYLTu9uaz2QgKm/5SVSmDzxVpJ68nB36rFKLS
HhlKOQG8pFw0+KRrawNJzHo7qOG9/BPJJct2GOUkLvW10jzqIPrbK346/iIR
Lqjy5zVqYCz/Mcy/TkJZ1NBPBGghtBe9uf6WRFfFyfuEWcflExDsGUyBs1Ol
Xa1H8WzFnfUSCu42CK981LS/ztimosDJydXa88GLiQrL0VD41kqrCP0hJCDh
1M0SCouTbsVpxQUwbnLOTrxG4QAXEDFYgNTuiK/qJgqEG+xheNVW+9Z/oyDh
CskLKYRcnOkI9KBxePKbJ67uQqx96JeW7UdDtKC6zLX5b6SZdjatiaKRUPtH
Qd5UA/TPJGcH4mhYYgy7XC8McFwZL+pQ0HD/i4s0Ij50xdTjWTS2fGgJyht3
BNrzT7pydTTOcgW5Go7AnvP7dYtx9N7/KEwHrXc/nRu9Nx3Dl8iyc1WPadSV
Twu713cMOWnjbO9fjfKtPg5pRFPJvXejfJ4m2EtPBup7aUi4h6nbbsJMxRkt
O0Cje+hin8ZuwqPb+89PIRjM4wyO6MwYaJzUcErE4BGHundmMKKFmwp8Gez2
zq/XiC2o2NjttcifQXWZs3JkwILm+SG3P85lsI4rrE5ejOytY57+CmXwc66y
SHOjGEGFD0LaIhmUcATLva1I8T7xX2EUg6U3mtQjmVY4I/eRE8DgfxI3gBo=

        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#125"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfXlVLLi4DQqJFoygEtQgFDKNc+BRGC0RVkWiFbBi+96bKOqD
4QddKKWlwdkAYlu+/ChGEcT6jYwRqQSxQVyUNSCpH9FGB24yG1yGorP1NeEm
Nzf3xzm5554TrtiXQZMEQazg2jc/qHfdLDLK1jzoF+dZGgrWhGZRq7ezK7E1
40hVwIAEYpdKsJwVY89u4ev/mzehZ+D09yGmjRjqzBwW5snwdJFfWTC7BUGO
DMUjezZ8fIK0bfCW37iYIpHDkD/20d+0A7926W4uDs1FY0NDg7+WQqWoqbvV
lYtW+/qV/uyPSKFrBi5od6Dj309DfPku3Cf/GS/gK9C34EohP20POtx//JJV
rMBfkSL+jDAWzrfL34w7FWATAkZ4pgK0PVxXdTBaiXebXjTzZv8EYcsrV+EB
JXzyeNoiXJ7M8fR0KOFXZk7iTe3HwvBu+4hbicq6vYE89iBOLb5+/mkEBcEl
sYscO4QQW5C1ewOFE9wBpFyFkRrhxW9UFBY+nlKTwz/DSOhszy0U2iYc6WRa
CXpe0X2JvRREfGsoeVuNJ+nVS7pcFHKqe/8jwjQYltyLs3oovGg+3keYytA8
0NkeEkeDk2PVSLX4tDQv0y+Vhs8NYrYO5kdGvVxOgztHpbHrkKTRJUsKabx1
pCsIbTl++/r56rFyGivkXamaBD2CnZbGrFoaxdyDiCk9ZK1PervP0SB8xVZA
L56VeLWPRjJnSOmywyjYHzWe56BREeK87x09DJnz20HlMxpzoq+d9G47gsxo
UfzmdzQyOufrS+ca8MN3g6qdJANzkiHfO2RA04n2UfcXDHx58a6vxGTwVYF+
AYPcPwcjSmdVwdAUH3R2CYMznEHe3iqkzKlwZcVN40OP4oxadrpt3TTeWAOi
uG4Zu52BzTIv5tYEt5c3vnTT03zSYyiMLLLE5k/zBRjRMrPkJXmIQTIXGNtO
I8JiNTcaSxiMfjw/obYbcbc+IpzQMVjKCfSUmTAYI/oqsZLB71zZnpmQLa1N
FR5jsDdQ16NOMKNF2n/0QS2DayfdLZ73ZkjiHfPuWBhkcobZNtcipj77vf9Z
BpNROdXqdm5/+DosupVBPUeQGFgH0G8EsVYGq9r7D3j21eHLv9dKBVcYfAZa
GYqu
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#126"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMU2kUvGm1tHXdxAZJUFBWSUXJyoKWahQdF0yj5VHBgGhpez/qI6Bw
ASuisRdQVqQKYluwIjHGJ4QYJaQS5RVkwTVaBavGuK6SCgisURQUfFBvo5Oc
nF8zOXNmfiOZ8Vt5FEXJuPHsz8a0pt3mTasfyhwLHQr1ar/N+hVaRo5YxyyR
z3I5FL37vBczClR1DHbuSI1C252za30sG5DW2nX3rzVKPA8UFMxkkqAmx6+q
U1Xw6HlHp6DL3yxqvBQP086BLyILDaWhe8GroxtxymaziQr1yMvZkl4UlIjL
nUq5iNmO/4PnDUlLkmD/8M0p1KShYv992crmTegIuJotjN4FtyulS38nGYPS
UOEUfwaqfwRlqxo3g4kQP+FbsjB1WOr9wbQFnxJcF/jTcpDc9jT35Do1PPb4
hbvRnTtw3jCqhqDAGsmfMODGdUHYkrIUHKvMkPCZXMx4J5junq2B9xVFL29g
L3Ly+oYvntbgNHcAT7MPwaWykDqJFvOfTRh5j/bjvv5PYQKrRe1ITwwv+gDC
p/dKr7i0CBXW+fFuGbEr9N5gQoAO6rL2Mco/H15TPh89pNTBdaGqg7IUYCx8
202VTQfOTl1+XCHU60WBeU06eNKgph1Ecw+bnv1ch/c9MYQqPISYkXZHlS+N
cM2NdfkRRahMV/kEyGjkcQ+hJopg7y+eMzeOBuUBcxjb2IwmL5ZGFBcAG1yM
b7f6aqVWGod9njrc/cU4YE/sCa6l8evv9dXulBKIVix7u6ybRnzjnCLW14SX
5GG83kXDGmna6Xaa8MtSmbx5lIanH27lMczmX/tj8UwCXd+DeaxXKSYbDNc1
gQTnuEDc7aUYGu198SaM/OD7HUfT+O2a2Fjyg28uR86ChA0US9ByZlZI60g5
5mYFpUtKfurFncCnB86LrZafemIzBL5aFVVDEMUVpGWHGWFnrkVW1xP0f6kZ
MXaa8a/Ynv36JsEizuBkgQWG7db1tnsEdzm0vLAgN0ksFzwmyJAcbDNGWME4
k9+F/EdQX/320uS4FeWXQ8f/fkOwkQuoJbECmScEQ/Ixgo9B6jJjQwWOsP4f
s74SnOQEVkkqEWl/WbyHn4rlDbf3TGZWwubUDivEqfgOoct96g==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#127"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbbqeDiiXSWCVUEJwQcaZhCBdJ7Iy0qdiA9qH/feMYxanV4V
J5ZY+gDphoLYFmgFfBaHYyLMMLJBYY5UB0YZEZGgEkSQLcqsyiYgdLcZX/Ll
+3VOzvnOCUw9mLyLQxDEGnbdd0ytbEg3StY9jLY27R2g1wmkadEUEwFrkijI
OygKCX0q/komATOCG9YWfYhDc+vFOF/TFiwq4CvXHxXjSdBM7VwmBZLx8pqI
6iS4+fhiBUq+aXIaSpORt//FuKfpC/ADKyKnLdsGq8Vi8dSlIaorUOZ7aDu+
cyRGeDK7QfSkZIzodqDu7cQDD1KJV7VLL1/Yl4KWgBuHPcRf4e2PNVWNqyX4
MzjMY/oCBhXKnV9W90nACL26uKZDcFSqkKDaiX+39tu43kfQtWeMiZwmhdse
V5eO6rvkfeVxKWZqzTHc0aM4WTOnPHhAitPFB3hc5hh4+nlUbLwM/OsJfZwX
Gdi4cg4nplyGUlYAh1TB8DL/V/mwDEt6RtWczkzEVZmemSPkuObs2MQRn0Cv
y3r/tkqOMI8qAec3NT5YVhVW1sshL7g1QizQwF5Xn/LQKUe/7VwLYdLCL/EE
Z7ZEAdZOlWazDluVv7S/zlHAnQbhrccSR3RU6w0FWDkqjUOPtopdpsFHCrzp
2JRK6LKhii92nZxUYA35s0gjzEH4sUW/Pw8kcZx9EDGag5LhDQWfxpAg3MPk
QvK+3ybWkIhlA8laboDI78yptFISub7d91yDBsy6Gts5/ScSPqG1ZS7FtzCi
c+/nQySS6xfmZPnlQSzLfBriImGOydvvepAHfWHdtWE+BXdfXImn0eGXL8wV
UqAH2hdnfZQP64W/pJlJFC6zAblu5UPY8vRRWSr1P15wBh8bW2ddyp7CGwsR
b/tk6eNmCvbz/quanIWw9Hf7aO9N8W0+C8P8CZGtZ4rPy4ix222hue8oxLKF
se8xwit99w8hBI3B8Uqn2mHESMDhie4ZNJaxBie1JkRfEZR8P5vGXXbsvSbc
eRVQ3j6XxgGevlktNGNoiJK1+dOoLfv76uR7M+ZXvuwVBdHYxgZm31GEs/t8
xH+E0PgnRF6gvlmEdw2NjeGhNEpYgs94xeBlr2jJCKMRefPO15MHi+EvWN51
LpzGf8l4iJM=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#128"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbQOy2MskMJSg84xYeKL1CWYpQInUEuUMkSM5Vlo772RMIFu
gJO6lVKsWBkU6AsY+JhWeRgDCoQYrEQRlMGGDiMLI6QiRaMOYbCNEam30S/5
8v06J+d853wqzz9AswiCCGfWdf9X5fQWGpKjbuoT//LtIKMCUylBpmIXhsh1
0QJRFGLtSu4ORSwc85L+gKF96Bs6vyfAmAj7+N6PtbWJmNzkXuqvkGBxd+Ns
84ODcPFxxRmg59Q9wTkSVByZXfEwyuAj9nfodCloqK+v99BQ6FaGcbd9lYbm
gbhdHorDmMy4WcwZSUf332/GONIcHBdVm3n+UvRvbP+WI86FLXHyYgo/E89D
+Jw16xUwvRypc/PPgiLC8zHb+A3UzjR+uyYL/yZNW9leBUiOzj655WkWXPbY
mkIY3Av0UoEM7qWmGPZyEf7cbU1+rJOh0pLnx1Z8B0qotoyNysC9GmtnzR5D
zLjotzRfORoZASypEkVdSStCsRyfTSyrWI+Ow8Jf/VCokaN1/mE8S/wDWpTf
f/76uhx8zpVA1h0VGlpDgu7b5UjX314i1qvxY+HoE4E3iWnrT/2EsRTPjoZ8
Ikkmwdi5ok7Q4COed59JScKVBuFVhsKO4KQzDSQYOUr1QBnOraletPaQWHgY
Lyc0J9Ch35AwMUYiXHpjrzpCi5Rxrv7wHIli5kHEshY7pwRb8zkUCNcoytGy
aaE+L5yCkAmkZOspRD9rDWuKo1Ae8MevTscpZP7sp+nKpOCz/VqTM+M0yvdj
YvEEhQM9G7QlvAoU8c4NRJkpmGIqjjjHKjAYfbqt9xIFV1+ccZXwDG1MLbtL
IWtmNKhkbRVUPY8uzPxO4QITkPN2FTqGHcFt9vf4wGroitsjT668xxtqMLXE
8pGF0rCdXRd2a74GXY7OmcEv6Hd8CbUQDIomRyLod3yeBihfFRh+2U9DyBTG
lm3Akw+0F4dTaDhWWuZVAwbwbM26EjmNLYzB1VIjGjprd3oW0BhmxjZlRPXC
Vc5zJY08v7I+VYQJX4eet5draFxrmru8+p8JrXO5ub41NA4ygdkOmdG9TWJ2
q6Pxz+Z0varTDJHeu6v3DI06hiDSz4IXqQ827rHS+LLz3tHVfAuagzb7NLXR
eAuYb4l0
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#129"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtkmtMUwkQhS+3qAUiYkUTtRDR1SDuYvixgDGlR0ULglt5Q2nvFa2vLtiK
ShG0tGCDSFC0LaWgEgTCUwXi6mZXK6KAIa5xEUJ8gCkIuA+jVXwgtvU2Mslk
fp0vc+aM30557G6SIIhgpp3zi0p287AumU/6WaqCs2k+VyRdTytC0Nq0e8/j
0lAILDnegQoBOtKDNp7oDUdHb/XmRfoY/FjN69OwozD0w2zNQkUSBmWH5K8e
CuHkeUdLwDGWspf2xqA4fWLaTZ+G+48itBPb41BhMpnc8qUQ9oy+7tXFo6E7
KsRNsRdKz8lyz5oEXH9v62dTMgxWhKWsPpWIe8taM9nRGZBrQ//dF5OEf1YF
sV19FLjzOK/noz0JCp77IEt/EF5F/4eojMn4FDdax/I4BNtfykyTbwqc9lj5
hxFgMqctNaZgtsawiTV1BE3WyRsbWSKUGA9wWAollv+XNX9YKoL3FYGFnMhG
j3mC3HNLhPPMAiSVg7Gu5J+9PFOx4tmUihzIRcSV4eqhpFSG07eNjD6OPzMC
Y+oqUxHEbuGSd1Vw2GfpuU9TIT7T+YHwUWMsWkAPLRBjtK7yHqHX4OaIKC0k
VwzGTotamI/fEmpzaxrFcKZBeBSgMXJDkeuAGMw6OeruAlw+Vn691ibGu75t
O4n8E/jb2java4UEwdQfkWqeFvzy/ucXBRIcZQ5ETGmx0LewU7pfAsJZikJU
2hqad9VLEM4EkrfmJJQy38xXdyUoXPTkoWP8JFyt7LnvhiXw/Kn9gkNyCqyD
co7rfAqxv/tq8xYXY2AydITnT8GwqTjd0V8Mn8Y5k3QYBee/OKJK0PxLQmTD
Xgo7xh4tz5tzGpdGHD5vcyjUMAE5Ok+jis9v31Uyo+eW4pOLrYJsndHrzoJ3
9eXnxNcUzFVL1t62noWsazCKNz3DE54DP/zBvGo2/Z3nroNlGLVf/WiEMw9j
3qfDyp4vXJdAGuPTjVZVtw7Zhg3p59fRCGAM2jV6bBmX728R0njAlPmFHvUt
/c0BIhoHOAUdKp4BHk0107FSGu0X3tTbPxugifu1o01JI54JzJxYhraIeuMb
NY2P/uIzqmtlyLKEbh0volHOAMI4RoRlKF1M52isu3Y/yy434s7iozfcK2l8
Axwvi8Y=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#130"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbZGQbRbKvhaWQYSfE0GiaHorJysuqKApe29QggUxkQcQbgo
z1ZLSyUQOinSWypSJKjEB6jAQDclxSjDTdmUTuKAoIP62AxRwYBWkXqb8SVf
vl/n5JzvHL+ULHkqhyCIUHbd950mvTPHFBeezg1ujdgVGy6I3/11Ei1Eia6l
KfZtCCQjKu8gWoIO4yfZ+/y34Prthm1LGBk6LbbNm3PFGA6Yp/OhY6Gc4v1g
7/kWbj7vqETUGoWthqTtMGQ8e+/JfIczniuv2XMjcbympsazeDc6r7rW138Z
jbM9kUJPOg3bWpSXsmp34vLrD/c9lOnoy7OsOGWXovuLlv0eUfsQ4Npb9iEz
Bv8FhnjM9aWR2Oib/KkjBrRowQMuk43JMO4fvREyvFE4GrleB9CQsiHmp5My
uO1xi3OQ7hxirkzIME9nFnOduXi1PNUvdZMcRyyZfC6djzFVtp9TJYf3RckI
51kBbPfMozkdclhZARylCoRALWt6LsfKIaeG06/GI3W9c8dnCpwft0dzog5B
PyQsfyJRIMSjWcC5qcFxb2vlJK1AgvHGJOGrhehh9+hotQKOxtpugtHBrly1
rGlQAdZOs1ZajD1CkXGxUwF3GoSXHhVSSXyBDwlWjkrbo8flsSC+VzCJCXt0
ClF8GFJLSOCbCBKhyqvbtaIS3FGX/56STKKQfRDhLME/G9OuZOWRINxDl0I7
feDayAkSW9lAitaV4ZtN0wGFrSRKlwz86XpahuDwaNnSmyR469vqXInl0Lxq
SGhzkJD//HlJ0XID+OK6sbsTJMxiQ4brvgHD/Be80DkU3H1xRR7BxczWgUUC
CslP7vkXza9AVJ/0rHk1hVNsQK4bFdj5sqWqagP1P15QidL8vBhe5CzedBQT
p5MzBvdTsNWv+Kpr/CiMStv8h+pZPmkV9lT+W/Dj4Vm+BSZ0+lsXTjMUtrKF
se01YWiwVv2rlcLT9+fGNT0mrAmSp+04TWEta3BGx8BazSQybRR62bE9YvCg
v+5C0i8UMvn66xqRGX1hZbzXXRTa6l6emXlrRvP3f+Uf7KVAsoHZdlWjv2lK
kW+nMLU6wahpr4YzsP2F+G8Kx1iCLXwLDAFdcY+HKWxs/y1vJsuCwo5b+ngH
hY8NYY1/
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#131"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMk3cU/dZiaW1Eg+BjgqJDQnQM+YduNOipVSsDLLT9fsWJiAYn4oP6
QB6upbRWwAoMW2Adw0qkKBXJ4oqZIJUg4mOGzAZnCKBhZDoxZhbio9O1+xq5
yc3965ycc89ZvitftptFUVQ8s/77rybv+lFTxrpqq/CMfb5yXdg3OcIdKgFq
eWpeoTcOkvGSkC9UEkwu31G6MX8teu81b1xgTsdwwbm7WwfEGIvklIWqlMjN
tGunRBL4+UJStsNz4AFd/MnXMO5/9p5n3glbuLyoLyEFP1osFp4uB5IlvZLx
eVtwcSBZwFPtwZOeMfWlRimuTv83xM3Kg6P/sWCqIA39ET8f5qYcwIsbnXMf
cdLxPCqOGxCuwp+t1zgBhnSoEmc/YpsPISPmHhmfTsdb+YSNzT8Cdb2gdS6R
wW+PrTuKxpfzOWcvy8ApqxOzPQUIOl8ojf0gQ1XDwWC2qhA2YVt1iFiOkA7J
OOtZEXw1ojnZejl+YgSwskpw+mSxZLpHjs9GPBrWw+OIn7MvrXJaDrvblcpK
UeNON7E7IxWI47aHsW5q8JjibVooUyCzpu81Fa7FemlWFPs7BSZsjf2UuQzl
p1sWcW4rwNhp10p12CMwVl79WwF/GhRfjzeO5MVxXBqMnBLtgB5/WO2OSytp
TLlSd1G6E7CE7m2hRTTis7qStIkGbF4faczYRqOYeRDlMcDhDRQMH6FB+UdV
jirLyeeuczQ2MIGUrq4A11r4QddJo3zB8KDvaQW6j3cNLrtLIyjmSpNv+yms
aYtKOvSShuzXpYbSxUZgZK8ryUujTmzc7xsyoiSmW64MIvD3xZdcBe8LRcDm
zwmy//p9RWlgNXSeWyZxAsF5JiBfXzXeBk6G2yTkIz7se0h/6xT1Zs/gTbXQ
+2pff1lF4LR+GnvDXYuiNCs/tWGGT3oGzftG8ljNM3yzTRh1yyJ3/0KwgSmM
M9eEbTXCjiXXCZ6+b3NrBkxozqFeGfoJVjEGvWVmRIy29pwYIrjPjPOJGZtW
IDFilOBgsL5Xk1gHlzvhW/UEwZWmfy5439VhLC1hS4WbQMEE5iT1EB0ezBW+
I3gTnVmjcdRj3rXOyS4vwQ8MwdrgBoQ2RS3jzVLiK8edY978Bhzj8mOj+Ur8
D9wegOs=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#132"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWmxFpigFTRqUVQ0BkGGEYwxyElaqIRW6H0MtFJF6UTj4Ko8
FKUvJBqqCLZQGFOj4INB2MYQjRIkQsqCi5JafJFJ8IWQBaUGtArU24Qv+fL9
OifnfOcs35NNangEQURz67lftQfacsypsdf+j9How1JjxTsyNu9iNyLqQUlp
7471kA0WBKxjZVALBp19hVvQ0XM5boFFiVWCp+ZDpRL8FyIwBLIpCE4dTOi0
xcPDFyBPgyRl/o2PcQkwHRz65m1JR+v8QtUcaSJ+ra6u9jZm4DITH13zRo4b
tsSN3uw+7NOseREeuw2tn6YcQvUBxPN6AnwyktAV/OdhofwXnIjLU+yNSMbw
6kihVxCLSk2Pa7QmGWyMz1O+5RCOp4ylO74m4zP1+irf9wjKdJuu6LYp4bHH
N+agudmusFcpITBUSPiuXFxTdYm29itx1pol4rP5WJmbRc5dSCKgSTbIGzoK
sTotPVhB4jdOAE9dgIf5bDe0JFb2u7S8vuMwdO+fvbCBxO9jdgVPXojUwCXO
MAeJSGGjmNepxUj+o6gJF4md5+6PE0F61Hd71TnEFF5frekiLAaoRvxDRSoK
nJ1GfZIRU36P/SfyKHjSIHyLEPpH0JHJMgqcnAK9rQjb/yabqHoKTrtiD2E8
Cb/WxfKQDgrR6jsJ+phiHB7KGS7vo3CMexDhKsaKdNuHu8MUCM+wpyDvtKb9
5UdDygWiW3sa8+7dPNmwjMapBc8fut+dhrTOub0jgoZfePMFd1oJpjZXe+kU
NMjbS4t1i0w4rxkPkqloVEhMB90OE7ollOPnTBqevrgTz8L5g+/Sfj2N3W97
V+hml0IQmR0iPUOjlgvIfb8UobXzhsKtM3hxGUwPNhhrG2bw5nK4ml7aHz+i
0X5pccS9sXLUvejlzXo2w5d0HvrasL3vB2b4fMyo+/Iq88ko54crTHumGfFV
cY3vx2m8+1Y/prWZIRtZsr9tkkYoZ3DaYIGQKulr8WbwLzftAxZY19+WDvgz
yBIVdWhjKtCSK7j5JJBB84UP16e/VCBQmRMWvZwBzQXW/lMlWGrg4pXVDCbW
7DynbamEsqlt9M1aBlUcwRaRFSrmlnv6RwabWv7Jm862IunMZJUzisF3vy2D
yQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#133"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9MWwUYfPY1tY8mzgFbdMLiBqKZzIpkECRdjwCShU5GmQw22rV9r44g
lEqn1TpKW4b70dDStQXBoS5s2crAMEADYurCKFNEtuKmI7oQ2gwyFbXb2KwI
9TXhS758f93l7rvboqqVqjkEQWSwG73/Gqu+PuwsEwemvTkrj70pTtjPZB/U
ZuLaQI3uOW4OCuYM8S9pC+DZk0pJOyW4PHEmf6OrGLO1HZMnGqW4ncwzb9Du
wy7eXZ9y8A1E+eIlMtT5hILsHWWwVi8sUy4lbOSiQ5O1Hx3t7e2UhUHZHbVg
S+AALowXZlLaQ6jjiCIX82X48v7KDb68ChTnk797dXKMPdtXx5fUQDyst6n1
B3E3JY3PTdTi0GfnqZZUBbSimJ9J19swGX3FLXYFHpUEz5ECHXgn5T3PLCgQ
tUdaDmNK86EsbocSPLM7lwy/g+D14R8fGJRobtPEklo9GkrEefeGlYj/vGCO
s/Ae1O6Sfdz7SpxmBXDkBlDGxNhHKSok/RI2cm5+gMmF3mpdqQrdoendHEk9
Bp7sOsGzqJDG70ngXDEitFic+Xy3ChX20SUi0YS5LpHw1WsqBM99PEa4zCh6
eNZjWU+DtdNjKrLgbKvgUo6QRjQNQtCIoT/5E1QhDVaOwTTeiLqWq0KBmsa9
6d0qwnIUW/PtSdp6Ghnyr3aZRE2YQce0zEXjffZBRLgJ5YG+uCUPDSI62mMw
74xrdvhp5LGBNLx4HJP0lR+uBmkc2zgzFZk/jqdmqo7ELNF4Ynt/Z0R2Elm5
p/tX4hlIhzY3NTxtxX+Z4wlTSQzcudbqyA0rKLsj+fc0BtG+RAqb0Xur0pMt
YaC4c31rw+M29HDbfUfLGHSxAUVGbVg3EhfOZ9bwCS3Q/bS9RmpYwzsdyOgc
mTpwhoH3003Cb0IOVPwx9EV69xpf0SmQ9OvpQ/1rfDFOvFJOjtwaZZDHFsZb
6cTmZH/gyASD+WVPyDjuhH8g47fbfgbbWIOrZhe+f8v2IDjLYJId76wLy57S
TfZ5BprYxstGkRsp6eUacpFBf+df51f/caOe7/+1OMxgLxuYt7QV3+252fdy
hMHDFyrsxsFW6MfEqQGuGh+xBDtj2xB67eLeyhg1sga/fXe1tg1WvWK9b50a
/wPUroZi
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#134"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbSMtbgHMOa2BhyTjWD3CnugBDvPLNpttFCQR4X23lvG3MqA
XgUFu6wvxjQS+qCttRtECUF8zRhk4JipRLBTR3wwnNuIMkZWMVNMIcCArN1t
9Eu+fL/OyTnfOS+VafM/4RAEkc5u+C7pK87WOhQbnsnJ+N51T70hoaQ8k2LW
Ymrc8I5mVyYkE7r4NxgJeGPjdYqZzRi43L5ppTMP3Oe7D0msMtx6Ocr0LFMM
oVgj6szKQ5gvXqpCctesjX53C5oq7yzznWr4I0W3WwYL8I3H4+Gby3E4IPdM
8YtwxJe9ls98CpFcbc8QFKN39r9RHlmBpcK+mSlCgaGkUzt40io80A2l3vAp
cDcljReZyOC5hSmdecdWMKLom1zndthjhe//yivBwpbJTu6KGtw6cLXY1lyC
sD2uuRbRfPnmVm4pokwuMXdxJ5b5/L8+qCpFs7s6jsvUwfb1sTztcCniT0om
OHfq8UtPxrxltRKtrAAOqcMP06e9E4wSyWOLes6NL1CnjXn78zNKHAuMyDjS
L5EZO3yOu6REGu9EAmdQD45xUKZOV0FpPT9HJBrxZ2xoPLFahcnOb4cIpwlz
Al/VyesqsHZOGHPNWC8vjCkIqhBOg1jRgGzl5JWIVBKsHJ3R1wB/68aIiFwS
MyOyMsL8FWL65H/Ya0ikk/0fGkWNiKQvXLrnIrGbfRCx2IhTC30Hxb0kiPAw
e/Ddmhc7bAESWWwghlf3wrpOHHP9CQp7Vv5+JeTfC6m7QtCRQuGp17vbQqp9
CIzW92qKKOSfWdVoeKEJI2f/qbFUUnCJmypDo03QTPp/6jRRCPcllN2MV55O
2zd3hAL997XVhsctmPu5vyXnRwodbECh8xY8pmkfGBt+hE+wQSH8rfLC/Ud4
hx317c7+iHga3oOCN88F7Fj1ETHtEdAP+XJboO1IPj2bRD/ki3Yg9a48Z/E1
GllsYbyfOZB0qXb98bdo+JePBvQ+Bw4Njc4L19EQsgaDJifypxNvtm2kMcyO
d9wJWcrHbpeERnVcw4Be5MJVSk2VS2l0tz3oCv7rwvbd1m5LIY0CNjBv0X7E
RuVdvL+Vxnyq0qrv2Y8ng4aQkKRxgCV4L86NLt3tMUkZjYyei7uCWjeu7dx2
edM2Gv8DH/qGyA==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#135"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWsXLI9AgpVsDhw+5yS6kWCJAnoMYK2AjLb03os8OmQbEax3
5aGWrE95xBYQW8SOYscMCsTXTKeObMVUIEgQDQEZXRQVB+ofg4quVeluo1/y
5ft1Ts75zlleuF/8HYcgCAG7/utV7/2z3ExtTXSnlYTM5myNzClKKGDiwX1i
e8Hrj4PwgYq/gRHCtN4qC1Buw7Wh9tQISxaU339WeadhO+6uCtAtYUhcZn5v
FSt2ws/HT89DpSDMVHwgA8bS2TeBlm8Rot+9zv04Ez9brdZAfRESRG6Y5r9B
50BafCDzA5RZ9+9dGM7C5Rfvxnj5e9H75ZU62iBGX/RFJS99HzoDKs4VREvw
ZE0s7+MoBtrTY8dudkrAJAVNcC0/omdEYmeipXgtme7gBpfBE39aHXdECr89
rr4cPG+rV/5YigBdczLXU4Ey67ipLzEb9S2KcC5zABdsOZLRumzwzwsfcGYP
wiEfb7xyMxs2VgAnX4X2mqs5JSEyrPzHo+aMVyHCuFrUkypD99xoBif9J9wK
+Sg2UyVDLO9sJOe6GouzXRN/dMuQ2+iaJ6K0MAfFLS2fkGG6o7WPsOhg/kV0
svgLEqyds9pMPYZDH8WI0kj40yCCDUhxT1cMlZJg5ai0AwbUa2cH15hIPB/N
KCT0hxFklwuaukgI8ntE2qRqJB6c7xb0kzjEPojwVCPLHjW2ZYoE4R+mFsId
ziVEGIUUNhBNTB34ooTil6so1EZMjvhm6iDUxEy6NlEIXX+pzZd3BJ4ptyNV
TkF8dVm15lMjRl4V2KOVFJqTjaW+MSPC2q1rVxoo+PviS6tHjUDRP/krBfm/
t1doFjXgaMnXz8/8RuEUG5DP1YAdec740d4P+Mij6Nz89PYe9we8uQnXbbmP
SgNpOO1Lv+qda8L9kzu1fD79ni/zGCqqlteTy+j3fEFm2Fyaff2xNFLYwjiL
zXi4cUOwdzONmTddc+oBM6ouGp13k2msYw0u6Cxo3RZ+2CWlMcyOc8qC3aGO
t0O5NBThhmvqpGZY9YOFTUU0LrU9O7PwXzO8fx/aVVRGQ8oG5pQdx6Ibp2oq
VTRerc1tVDuOo4rp+kSso3GCJdgS3oKJvzrKPbU0NjkGKxf2t+BO2+czigYa
/wMEi4X6
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#136"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9MEwcYPXsCLaCJiAQZKMNtUVEIMwEZAV4EJAoVgQrt3bWgwVQZ0LqC
COrRFjpwDb/sFVo2XIwapxIUQ4wTLcj4sRDUBUQznRinQho3DFMsaGy9ZnzJ
l++v9/Le997n+1RZ+wUEQUTz677v2cKbpSZpoi40NnNqeV5iMFUQl6eOwSTE
KRvuxiD1WaV/hDoVbO91x/jLJPSNnE4J4DIRNG8YKT+zA0++8NStUufC0pc/
88+cGG4+/3Q5KtPODusv7oaxaPqDiNuLCmV+l3FpFtqsVqtIXwCNuK48KjQb
vwylxYjUSjh7JtbN+Epw7c3H+0JFITSDHnt0ExIMhF75TpheDHaTorNdtwf2
r6KES0PUeLgho+lVQA7U8d4PSe4Qutlm+pI1B47s5+dIHw2Gue29a5blwm2P
1JfCw3fXZ/c0ufDUmZPIhTIMD9IDt+7lor61xI9Ul6PnxIFJQ5gU/p2pzwTT
R5AnmjWXFkvxEy9AoKiEICRgsK1LinWPF1jBxFEovYLJR6+luDg7JhakH4eP
M1kzs16GKGFHsOA3FmMycdxhuQxMY/8cEaKFdIl1m6NehufnfhwgOB1+tRRJ
21/IwNvp0GbokX4l6NoRHwruNAifarAp/fO2SAq8nErtUDX+2txlv5xJ4b8x
8T5CX4Pdtx2K6kMUohU3dmjjDTDR9pLCRgoV/IOIBQOm3rLFTZcoEO5R12LL
1vCaiKcUkvlAqsLr0Pel8+vpdxRqA/6865qqQ+xYse/eZTSWb77a7pL/gINr
Ozsc0TSyrq8xVK02YttqEZOwk4Y5yVjkum+E94pMro2h4e6LK60elkhSNc7S
yH/5R1iVVwOEF8pUow00zvABufobEKI9TvqfWsQHNyE7+tvwnhuLeFMzChqO
Dav+pWH7OSiyd7YZG50VWa/mF/kyTmLybWzEe5L5n8/bhBoiLtAeyCCZL4zt
gAnfPJm7PR7GYOrDhVl2yIS/PWQeyk0MNvIGnToONRKvO5YEBqP82J5yiB8t
lSSmMijxq+5j481IlrfUnspgcLX99XnnvBkrvx9J4/IYSPjAbDkteCBe8IxS
Mni3nmlku1sQaPccOVnCwMITJPi1wiSfi7lZxiC2+/fDTlUrzANrRy8fY/AJ
cemBbQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#137"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvd461pYNk0KdEigORzVujjRDkCBwCNLGUCh93J+TIDCGqETk
Imhd2QoFmc7ysLaVl88xFR/ZnM8NZ2cYYb4yFbQEURBQfCUiGER8cHcb/ZIv
31/n5JzvnE+z8nUraIqiwvn13Ffm3L+K7F/HkoVj5561ktiA1OyoDDYCfo9F
H3VfVEDVb/L7klWh+cnYmZzgGJy/tC9hukOLZE6YrGiIx53PvCxSdikq47Sb
In1V8PD5qZdjnnRVovv6EljXPHgtcnwD4bI5F2Z6q9FQX18vKsuGV0+xz7H+
JDS3J0aI2JXIvucqXJCnwennb28I03MhslaFyTNS0Dbr2DqhOg/MAlO35VkK
HskVwqmBLJT+0j/n5GvBRou7BI4CfDDll9+/79ViXD+4X+BdiGU25YagOB08
9gRlRTghnkLL6nXwsjjjBRPrkVF3aa//Qx2qatdKBKwRcnJZnhOqh9+vqn76
wUb0ubluCavHTl4AnW5CyMBTHX1Ej9k9E2b6ZjHGalo7h+/qcXikI4lW/4Dw
lMAZGyUGKIRHA+h/zMiySjVBMCCtpnWMCiyF8ZbyLJNrwOD+xjbKYcH25hDb
wCkDeDtHSzVlGDz99lpHlwGeNCjvcvj0Wj7eOm4AL8dU2l6OjE98V8ZIGYx2
JGVRZZswHnWIBCkYhKe3LCmNrkDCQPsRksjgO/5B1EQF3LGadFE2A8oz7GaY
ovrMmTYGi/lASj7fgq96MmMWHWCweXr3f9zQFniJZ92lWxj4zD++i1u+FSFF
+R0/9zLQ/SGrKJlpRdir4Ii9wwyc8dY13A0rvo0LC7zOMfD0hUusgvFO3o9T
ZQSZ968Fl3xYDWp3S03QFwRNfEBcazWSihet3hNJ3uEDtqHx0bnHz3XkHd5u
Q53yVGdnCYFrj3/o3yM2pMpHnNxP7/k026GLDrt92f6eT2xHpXF8YeoBgsV8
YVyr7NjHybaF/EYw9PrQiLndjoIuwZumMwTzeIOTFgfUV5Tai/8SXOHH1eeA
a8WJKONVgrWS8vPmaCe8z8pUQ26C47uGD06+dKJwWkOB730CAx+Yi+zA1Tc3
X7ifELyYm1ZjPrkD4rQENmeUoI4niJHUoinUNb/tJUHkyQsbJvNr8dS3Mm10
kuB/FveBMg==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#138"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1MU3cUffQ5vvzIaKpEgosICkMcVAvEMeBsYJhQAqOKWPrxfojKjMIT
2HAQWkopdnTAsA+BiW6MMZmBZVZkoKYalUYMG8bBNmWEMQNlMZmyjSmr4+01
4SY3969zcs49JyivKOugiKKoGGHd91/dkWul1pzEiG2rfxh6PT8xUJkfp2Vj
oXUei+oeTEDKdLnkNTYFP0tDIwNqd+PG3Y5d67h3kCrK5YK0mZgM8TSsZfdB
4lmSavBTwM0nkasxJKE8psP2wnLU6fLhCLzYyajIsWx80tbW5lOdjzL9VGuI
NAfdjrRYH/Ywzu+yb9Ip9qP/r//GvDVHEFc7O/vwbSVub/ym2Ft+DJ0HCvyf
BOTi9y1S7xUbWPj+0aoau5cLNt73J5o7jlEua89EkQrPFI+66JUlOCRuHRS/
UMFtj64uxaHU4aSOE2p4GpqT6MX3ELZT4kHPqVHfUiim2TL4/bJjh0yugeTr
lGmR8wR66hRTo19q0C4IEGnK8fdLMn7zogbBE4s60XgFWF7xW1qyFhfm76eL
5JW4TBzFYR9qIfXuCRTd0sGyvcRUeUcLVePNBWpDFTav9zeUeTB41HXmNsUZ
MBBsvvhZNAPBTk9VRjXqt/QVUOkM3GlQK42QvzzuGs1jIMgpr3IY8Xzh1Jsx
ZQz+vJ+eR1XXIHlNxPa9dQxiNFd2V8Wb4Fcz/kVqO4MPhAdRiyZkdrU9jupl
QLmHPYnwVy9w4SMMkoVA9FvNGA4JDT74kMHJdQ++52fNmMl+apxyMlizzXaW
V9ch9PiA6TuKIGvgFZN+vQULjkyjchVBc5LlKD9mgUhty1P6E7j7wqfVQ/Pj
6pwHWwmYmXub9F4NeGsj3fRuNEGnEBB/swGNyvagxoRlfODHyG56TF3OWMZb
mzAZxzt9CgnsnwZEXp9vwovaiV5n6TJfxinI5vg3aiqW+XytOGAr6fcyEyQL
hbEXWHG114NeqCeYdX01r3NYEWGWzfVaCcIFg0sGDnTmoOujcwQjwtinOEiL
97m+7SQoFBtv6OKboU9UxA90E9jOPjm/9LwZ5qczDbAR7BECs2efxq/R7Vkj
/QT/hKkadX2ncUl1bUh2laBVIEgQt8AW+3llxXWCnX133l8qasGqwOFnHbcI
/gchLn7o
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#139"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMkwcU/dISKGDMLBWdFnkMFUUgaIIzjHHGYx0Cin18X60FAUUWwqNo
EcHYB4h2lofaDysqM0PBF0HEFxEtBJX5QHAEFcWlKgMUn0V8ILP1a8JNbu6v
c+499xzv1BxhGosgiBCm7fOLKuOy0iANHxtqdbVwZOF82frQtYqlSF6Re3uu
dQkETwt5gQoBusN385QtQNutv6Ld6VXgz84YFdLR+NfXUTtdQcGkkxtdfoqB
nY8Xl4iIOyHBfe5x0GcOTzjTKRip8h/bkLICB6qqqpyL1mPVP62Pl3sn4HhH
7FJnRTrmL+pZvWwkARfef+3lJGVA3fBraDmz55pX40ZOXBbe/SZLvDFPiBfz
gjkOHgp8t1fCPV0rhCLM5QGbzsWXi9HyRzwRPokGatmum6BNas51zRfBLo9d
pITvtsWf07tEcNRWRrLH8+B5v+VUDV+MMmM2l63IhzbA9HzGOjF4DYKnrOEt
SFNWz35WI8Yh5gBWUiFSGrh1zx+L8UP/uIp1byvamjYOj0yT4KSlJ54Vtw2b
G6/v0EVIEMyp57OuqtA9N6JdkCOBvKL9A+GhQdYcc+yB/RIM1B68RtBa9Hhu
Dct5JgEjp16zsggLz4p1pWwSdjcI12K8aty1IN+HBHNOoaajGPUOgavTwkmM
9sSnEkXbkXllS8UOGYmQpEsxmrASFFwo/cNBSaKAeRAxXoKZermXQykJwl6K
nQhyO+/j1EwiijFE7a/Dm4kmzS+dJHa6P+yyDelgiXoXnWkmMTWgqdqWuAvp
JX+H/seiIGyeU6L+Xo+DqYdnSNwoVEbqM229ethEfgusPhTsebHFlkHbIkYQ
KCQP3vVRO5Uj+75vVnc8hSOMQbb2coytu5XcJ5vE83cj0i0wYfmmSbxhD6Qn
3zeX/cnk6PCsoFbLHpj9H7Jlxyf5Vu4Fe9xUc/PMJJ+LAd4TofV1VylEMYEx
/W7Aj2qTl0cnhaGJExZVhwFn+IlTYnopLGQEWrU0GvxP+90doNDJlMlMg87T
Byx+SSGbW9ymCquE95P+NdQohabqt8esnytRe9TJ+NFGQcwYZiL3QSrwHMxz
lOKjn7xCdW4fCujhwfYpUuxnCH7mGvF/4L0+M1eKZedubLbmGFH32tDfNVOK
bzwNg3Q=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#140"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWuN3mrisAFctSwgZaCCyNjsNlI4S1kqArIBE2W0a+8jOgLl
bqADzFoKVp03gKUt2KlxzBDrY24gUYdYCTJWjRNWH43ZFuOsdY9ss5JNipPu
NuFLvny/zsk53zlJVF0pKyIIYp2w0Ttjqh5usG/Oc17v/H6BrTpPXsnkvM8p
sWrwXHfMsBqae82xazgNFNLJUNzKtzFytfeteMc7uJUcWJu4uxw/K+Zb4rgK
BGKsM6uHKhDliy3Sonjy9uZvMyrB1zx8KnEYcKmMP9GeUIXPXC6XpJXBa0mF
j2RfaeEeL1RKuK3gfN5Xp2Z0ODv17Capq4ZtqSQ+SOoxlvj1R2RRLVLKf287
Y9bjt5eyyHkJHJrKLhoVQT041UK/2PEhJIn5lVSeAU/K7veJF9XjF7N8wtdu
QNSeuLUBO7xyTckNA+ZbnGpxeDucbyT/t2EJhfYeo1TMfYwJ+Ssv/LmeQuxp
zT3Rw0Zwdl6VvJPCIUGASNeM7QeSAqfdFJJ/DJtEt3ZC7f8yNdNH4UTIVywq
+gTPqWvi0qYpZJGn5KLLJhhK2LXkchpVnaP/EAktcBacOZ6eQ+N+38ExwmGB
rDftcn0DDcHOqZaSVqzIrkuP7aARTYNY1Ab97v6U6T4agpzmlvE2LE71awuH
aTz2FVNE6y70eS5MZ/9AY51uqKBFZcWaii0f3AjQaBIeRIStMOYGFZonNIjo
cHtwJWfkQoyMQb4QiHn1XqT6N63vSmOwJ/7O9UhwL7JlXXlQMlicMXA4ot0H
sSp80lDKoPT8i1azjEfXlLUgpGPgVPM1kZs8PlUo5wWrGUT7Eilsx+dHuq0r
LQz0DyZXmBd0ID3zJHiewVEhoMhoB2r7e5WNzjm8fD/GjJXvLnHP4e02HLx2
1/2Xl4HnyLLMSyEbHgc2jmon5/hKuvCdzeSx+uf4Ftqx/KeJi88/EPwIhfFs
s2Mo983Rxj8YBJ8eD5nG7cj3p593hxisEgzOWhx41PRyeNszBteE8dx1oOA2
yc+KWBilbSMmlRNnjw0dZUkWA4f/PjY77UTOVEZWv5RFuRCYZ1M3NHLXgGsp
i3/TqjpNg934gtx15z05iwMCQa60B4c2fqMPJ7J4fdC7Y7auBz213l/rU1j8
D+vYgcI=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#141"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1Qy3Ec/tm8bC0hEzEvUeStrjvvXXpI0q03FWX28q0jdNGKJr2srdrV
NQpbUkPnuii36xzZycsk2YUUKe8hHXnv8tJU1vx21+fuc5+/nuee5/M8LrGJ
4TsZFEWtoNd2B+XxNw5oon15cTc++AUSX55gh7dEuhLj+6/HNZevRkBXGtdD
GoCWJr3rp4f+qL9/1t9Juxm3Q2IbDLIgdLqOVU6RRmFV1L0hZnMYbHzcIBGS
RnW67ekIhzqhZ4itjUFVwSROYmYkykpLS9nZO1D3ZL0nq3MLqkz8lWzpLkS8
4E4MHhMFwy9LO0scj92tHO9tjGg0zrmYzArai2SZp9DyOhqf53uxRs+U4odh
ae4D3TZIfeyeMbVJmHw4w/mOnwDmiO5KJmc/8rZsym94LoDNHjP7AG6GdmW0
i7ZjrLLYjzmQAkN6kW5nx3YcKdnnyJQehOCae1X8OiG4NQFdjJ5UbO2bNjej
QohTtACGOA117we1X/4JMe/VgJzRkY4vgdPvPgwR4UJfWzAjKBN8b8OSiWUi
eLH0PMYdOQQJT+8ffCuCsKjhDzVTAa/DpWb9bDG6K3WNlFYJ46DLVP1xMWg7
ekVoNjzaJHyRSQxbGhQnBy1XNNUX+8Wg5aQpTDnoV+25bp4nwc+24FgqOxeR
b75NSguRYIX4WqDCR4XCk+71MpkEh+gHUQMqLGNGaN1OSUDZRpqHytZ3WYIu
CTbQgWQtzgfbwTijjCLIc3rRYv2Yjwp1a0TtBAKHpZdOW0UF+ONq6a1ZTBB+
dZYqy1kNvnro3IVVBMV+6gRruxqe/j51dv4Etr5Y+UfQ5PH+iouQgHx4NDdr
XCF4U/PXfI0jqKADsjYUYmPleOXapBE87yjC7O1TynNH8JpjSE737TWfIzCW
T/e81XcML1W+CbdrRvhCj6O+xIm93jDCZ6dBShjLIbWRYANdGONuDTiZFsWy
BwQfh6r75CYNRp1xW254TLCINjis1ELXordw3xA002N8q8XGTd93mbsJ9jnm
1Mt9itFk32aq/kxw6XTv+eG/xahYGMvP+00QSQdm3HoCTz0uFxoGCPrdhUXy
2hNI6lkwzjhMcJImWOtYgpsdzqnlzBisrm2SDSeWIOOVrkDIisF/KKWJzQ==

        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#142"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvdxKLWDIJNUNwYmK0igIGISYSnsGbe+9AhKxwUcQHHEVGMIF
QQGlQDsesQHUFhBFxSjig5jGoHFTK2KDRMe00AWIr/GSaUwIVVREWm8TvuTL
9+ucnPOdszw1O+E3kiCIcG6d96s6426efod0/Z/SvpxuRuq7a684hY1AYLuk
J8jDH9RQkXAdS4GUhZ/Y8y4EHY/PyxcbtsLucqizw7YBL/35ZYvY7dDWxsuN
3Rvh5BPG7oancfmr0Z5N0GWOz7gZfkVnQejFSokUpxobG900e/FQlGazNgOX
u2Ii3Nh9OCJ5Xzhc8AtufZi1CpIzwLdFBt8KiYLZz5griN2PBT8oO1yfRuHt
6lDBvKUs7LNPP3bviAYb6d7PM+SAEVVXP7BE4/O2kRaexwEEqvrirZtkcNrj
afKQlGBxlzfJwC+ri+ZN50Mz7PD8b1KG6oYsLx57CE0v2vJ+lMohvE4NkeMF
aCG91/1ULkcTJ4BMLgI7sDl/0CzHyufTavLfwwgcLZKLHHJcneyNI2OLYU1h
SWOYAqGCNl/yoRpK8R2hi0qBpNrOKWJpKQwN+a71egVGWk6bCUMZAvpzU5eN
KcDZaSuN1wDFNel33Cg40yA8tBBstwkm1lLg5BSVdmkRy3/lNxVDwdYbl0po
/sAWIibOJYNCePJfTGlkOShe4jdUUCjkHkRMlyMsylf5opkC4Ry2EjuzE6uM
FgoyLpCStVW49qhv36r/KVQuHvzH8aYKm9M/vc+apeAZdOOMY/dRnMv80jPg
TyPh9s/lJd46hGabJX4RNOqidZkOqw4211ZCR9Nw9sURU43PxlPe/HQae8ae
rSiZX4Oz/QHTIQU0LnABOTproLoYpm2vmMP7HsPNCfPCifNzeP1xaJ8MrxD1
0jCdWxJ8f/I4BnvFhYtezvHFn4Dl99GZ0+NzfO568HwWqo7O0JBxhTGl6SG0
XGe+zWPwZubKpLpLj+JWTaqPJ4M1nEF7mQGP7wkv5Sxj8Dc3ptcGSCtrk40B
DLK8tB3qyDqY3t7MvRbM4MaZiVb7lzoo68X0iISBkgvMlFgPUbPq+SoFg0+i
pFp1ez18RFH5IXEMTnIEEq8GTPVU6F2VDDa2dx+0ZzcgUHyhpnUXg+93EH1B

        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#143"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfbZEiw41UBE7NDgZbsKqrbEEpeOkuMFGK7bvPYYClYryNSxP
JwOLlNLS8dEIgz5AxMbpNGPK2KbEyEI6lUJEySZGHVM6RwiQ+RFlihMIdK8J
N7m5v87JOfectXvzNft5BEHIuPXeaWNu12F7cgxzI29/liMpJnj3vm17mEgk
L6pWvPu5BHHDBqGYiUPBNjpnSibH1ZunPwpk1bBVFXYNuBVwhy4sW8F8hvHs
usKQwI/h5RMq01BUtcotbomHLW98xpfVIWOrz4bO05/iRHNzs695H2ZCpWNn
E5Ro7U2I9GWyID6QPdT5owqXX87eFWhz0W2/pBh074Ar5KdDAuUBLLddi84a
TsQ/YRKBz2oGnpr4/kzdTjDyxX/w2YOQntEZN7p24j9y5Bx/yRfoubQrvPht
Nbz2+ObDuN39Q7s4R42FZQ2x/KkCOI8sc/e1q3GsSe/PZwox4Hj1lemZGsL2
uGHeeBHq4/7KVIZpcJITwNMasN71QDa9S4N1D6eMvHvFSDW2ZWyu0uD8xB0V
T1kCqVWWbO3QQCJoC+Z1GxHliH4ra0iD1Nrrk8RqE25lxqvkC0iMnGtxEWwZ
+qRzEQGxJDg7baZEMyYrB2JOppPwpkEssUB4fJ1t01ESnByDqdeC0cdPZUQj
iX/vqPYS5nLMmpryt7STkGl/+cQkt0J9+YJy0kXiCPcgYsqKNeE+tekPSBDe
YSoQm+knPr+AwnYukNLwSthno3I6AyhUBP75m2esEkGSFfX3Qyks/eCiw5NW
jeqtV16Yt1PQXFljLV1lQ4quf1RCUmiIteV57tqwdqz+Z7GOgrcvnoRjKDjT
EqEoppA+evud0kU1OKpu1uorKHzLBeS5XoNy0bLWAPs8PvhrPBFsCnrSOo+3
1yHS/Y2F/Z2C85Ro468TdXh/SLAjaXCeL7EerD5B2/P3PN9iO/TsqemuF5wf
rjDObDsMPesbVW8ojM18P2HstSP3gt/ZFg+FDZzBuTIWKRmJKSV+NPq5cT5i
8bJYFLxSSEPvb7lqlDfgfsjSCoOIxkXH8+/m3jQgKarc0hpGg+ICcyY1YvdI
Wk9hBI3X76XWGjsacaJPGCSS0jjOEXzo3wTFNVlJXSSNqI4bX87lN2F5kXTw
UTSN/wF2qXwh
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#144"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtkntMUwcUxu9axAIKoakaDFSR4QMzBBQJ1tLv3otWRpUUFRt5zaqTYMEr
wzkqlLaIoIRnW2pldSE+xoRtjrgFFkYZQ0LcspimU3RDYkAMTjMKqANir7cJ
Jzk5OX+cX853vhOuPpV+nEcQxHYuvXVel99TbFLJWgN/rztqoGWhh49JcpkE
JIysOqNWiiF/qhVFM3JkdmUVOcyb0HevdddKsxIH+10Nr6wxGPnQ17CCOQRl
/aiju2wrvDyRIhthm7vjuu7Go0bzfMHPfAT63R8c19gTcMVms/kZj2GbOyRc
vS4RbYOpCX7MCbTuaai35+3ATzPvXIKcfPgagjSbdBIMrL1dJFAUoCRvjB9V
sBOT62MFPmEMlkRLVOFSKRip/0O++TR+GFV92zMjxdv9Yzf4AZ9BIT+ZmGlJ
glce31iM4QXJZF6kjONaaP7cGbiWu4T2mzLUWguFfOYsqgIeZ5qWA6Lv5E95
z7/AvqmULZ9SwJfcArwcLZxvr3YaioCIv+d0vL/Ooe3CeLv+KnDL7dzLU5Sh
PzHCOD4IxAo6Qnm/6SB6MixZ/RLIqu9/TYTpsUL07LAukMTYjZYBwmzA6dc+
HTwFCU5Ohz7NCLCz6tYTJLxuEAEV2K/cMF1oIMGto9UPcv2bkHtWG4lp5141
YTyPZU2Pn1C3SWzP+TlFL63EgR5K23SXRAl3IGKuEnGGi5PXH5EgvMFUIcW/
2qn1kEjmDCnfXA2joKL5ZBCFqpWP/mQnqpE2KyvTrqEQ+FGnnc2+hHf/zA3F
Symkd4kry0NqkJvxop39mIKFrtGwrhqwMlVQhIqC91/Y1FoMhEUeusZQ+OTZ
/XXlS+tQOjIFUSmFa5xBbH8dggd+felbtTgf2oCmpH8fNLQszpsaEV86a5ty
UOj9avUWh7sRceIyU/TQIi+tCcJ8z7z4/iLP3wS28oV5wyiFZO5hevNM+D7T
mSafoDCx8I1bN2hC1D5588ZXFKI4gR6DGelKefTOeQp/cNE7akbw1h/jigka
hcKKPp3UgpvivpgSXxqd9v++9vxvwXDplZaZYBoHOMN6M5rRMp2hKVhF483G
rHrdnWYsk0b6/BJK4zIHSBJa8fC6OHk8nEbinaHPPaescMTucI+vp/Ee6Dl8
EQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#145"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMkwcU/dY6aFEWLUiU1+ZwQGYUsQoyqZxIgU3BzoLt9xBEI8EoQpkg
BbWlZQSV8XBtLd0wShx0GPcQUKuR0ihBNxtkKFQzDAFFtmVG6gN5CPVr5CY3
99c5Oeees2x3njSLQxBEFLvuO6Xad71AR8a1CiKa7BYyLpDes2GnIho70xOz
EpqESBoq8V2lSMId/tmpiw7A9mdDgp9+G3h8pmZdQCIeLffQLFbIsd+jbSBN
uBluPt/kdEicWZJHxSmozBmd5ut3IfnMx/9M+XyNH0wmE1+7BwesQvVA5Db8
3LUlmq/IRl+B3/rOECkuv5y5z8vYB0dTVETwSyk6P/n9G17yAfR0mMl7Tan4
NzSSNy9IgeYaskggToNC5OXg6vNxYlwU3tudhjepjxu58w8iIVZpCNu8HW57
XG0BDhmX/KGxbIeHxhDPnSxETAXW3guQocqYK+AqihBk5lG/Fcrg+2vSEGdU
if+r1OmZt2SoZwVwMkqQe3x6ZnyRHCF/T6o4fYfRu/o/rUwmx3lnbwon+Sj8
xvodIoMckbwLgZybKtjGlMe33pVjR82N10RQKYpCZtYJPiTxuPHHTkKvgaox
YFFJFgnWzoVSiRbFZyMEA7Uk3GkQ88sQvslVl3+VBCunpLSrDKHe/j1HB0m8
6E3ZTWi/hfaLqfYNXApRGde+KhWVY+bgkaLB5RSK2QcRk+UYbuwOMoopEO5R
VKD/l6quIRUFMRuIesUx1JWt9r1molDh97Db9fQYik2tE5GtFD5a2XLalX4C
i/u/PJ89TEFqCS5XL61EbL1lRDpBwRBfmeO6X4nPcl6FxnjTcPfFtaUKm0aE
0ti1NDJHej5Ve1ajfqUlTplI4xwbkOtGNT6IyfvumZx+jw+shcxpH21TzuF1
J7F01ZMORwsN6xn/iA7nSTgWeox72ub4JN/jyqg5u90+x+elwzOJre+vJzTE
bGGse3XIbBA2xI7ReDrd7FR16fDAXkiJp2l8zhqc1eixoMLqvXEhAzs71kE9
utXxrvX+DHIFZTaVyIAwgu4bDmHQcvq5eXbCgAUTu8KlUQzS2MCsslOobrhU
GxzHYDx8R42q7RSuCr3azUkM6liCjQIjotdc+mlMwiCm7fah2Twj7uZ7+ryV
M3gH3QuD+w==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#146"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbaKgM4QghiX4gMUX1GDD5RV9BggnQKiFPu4t4JQhoupcCf1
AUhpKaykXUFoC1bAggSrRIgBQpBABcXGx5yk1sxHkFScuCULgqmID+pt9Eu+
fL/OyTnfOcszcpJ/YREEEcms935UHO2VG0S7bKo1J63j4l0cMpObRm+DuqNM
f0y3BTxXftAGmocSB9W6tXI3+u81xgUbD2DLEQPJms3D8Aof1UJaiKEdzgBZ
dDy8fEEJh2AfCJVl1e2DTjb2yc+YjrGLzwhN236cN5vNfsWZcC0b6Gh+dACX
7fHb/OgjCDNzh/j3k9H17ovTN/Uohs/5daZZ+Bhcdu24b8IxbLVSLrcgBf+G
R/jODqHhrlK45FMpoKP9/2Ybf8PcEXrcXXIQU/zRZva8XIQ4g5xWlgBee+xi
OSryB/+bnyuAj8oUw54+gWdRwtzwJwLoa7ID2fQp1Cqa5IbNQgS18VyssdM4
9fLjauvvQtQxAlip+RjmXdPmOYQIez6tYD0uQEfjkuvvFonQMuFIZCUUIuKP
lelPhSJE+F7lsG4pwK3vmXpYJYKk4qabCFEikewVZt4VYbS5dpAwqmDapMna
vk4Mxs5VZVIxOLfNi38SiuFNg5inRsOX2isZSjEYOflKuxp9Da+s7y+JMelI
zCCKS2Dp7UvadF+MyNSePcroUtS8CB3Y+78YecyDiOlSaM9K5+T8QILwDq0B
P0PdWvgziVgmkKJ1ZZC701rapCQ0wU//8rwug3SgwJ5XSGLB+vZ6zyEtCo53
ULxWEsndS0qLFuuQ3tQdcPoWCVOMTuZx6tCyQzBpeULC2xdPvB427YNZHILC
4X+GQovmluO5PaC7IpBCExOQ52Y5HujfeKJWUN/wnLMgR/a2S+Oob3hDJere
Zu+PUFKwWX7ceGOiEjMxsRc0+u98SVVA/2dt+vnvfP4GvOQvOtPTTiGWKYzt
VwOGHvmfibNReP3pyoTCbgBnsHOl7C6FtYzBGZUR8ZFSbsMLCn8yYxsxIiyt
tq/rDYXsQHW/ItoE1+jb0IJJCu3149aZDybo+iy3OXMkSGECswmqIbk87DNr
gQTvV0sqFJ3VaBtxcBuDJTjHEOwMrMHDplVZxFIJojrvnJzJqYG86zG5fJUE
XwGs2YzC
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#147"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvWkZFHDL0jDmA5SBOnzLBrpJas9Wlcj7Ue79BWhBxnQ0Dm4Z
boLh0oeNjIqobSmgpJusviBGixKzEEQg1TBnHAP3kI0gCmwEGFvcKEi72+iX
fPn+OifnfOe8lV+c/rGAoqht/HrvPKfqKDURKedxVq68nSUNySqIzWW3Q9LR
t2OrJRpxI+VBm9k4xK1pHk2QfoCuvq93B5vTcPxeoVQl24PfVvtq32AZbC22
TeLVeHj5ghIVEM/UB58VJsF4cHzB37wPqXmrZI8KUtDY0NDgrytAuGmYPdqa
iovOhO3+7AEclozs11ekof2fxQGRUoWr7dla5+Z09IZdLRElfoo8Wlz2yp10
/LE2SuQTysIaWv/VOwkZYCUBPwnNavz++qjY71YG/ssYtQsDP4N9Q9eYYo0c
XntCXSlufJS3W62Rw1drkQldhyBbfTnfp1+OGmuRWMh+gZQDbS7NikwEXYkb
EYwfxopwv6Ilykyc5QUIlOX4/u6bMdbGTEQ8cnGCwSOgY4M+nPghE5dn+5ME
iRWIqXadsfvQiBK1hgh6OOSG3xjPepdGTm33MypUA4W1rIRT0hi1n+mlzFos
//J4haWFBm+nVZOiw5hhbuf6+zS8aVCBeugv3NxUOk2Dl1OuceoxubGjp2UJ
g7/7k/Ip3VEsjc4+JFjHYJvy270aiQHtyfFdzTIGZfyDKJcBamohoD2HAeUd
9hjSap4vXqtmsIsPpHJDFZST6ukBG4Njwb/c94xVgeV6FENtDF7b5GjyKKox
l00VTv3MIP3mSkPlMiNKmrj3Qv5kYJEZD3oGjHgQPaQqn2fg7YsnoQYRMus3
i0sJ8p4+CK/0O4EngVHDsW8TNPMBebpP4PwdR+RQNHmBDzmJ+XPnoUomL/Cm
U3BXnXbYjxB02pZvuTV7CjGDcuaJ4SVfymmYwgoju2tf8gWYUPHrlLv4HMEu
vjCdn5ggndKV7m0hGFu4NMs5TVDn2nwH2wjW8wbdWjMe7/lLJO4luMdP57AZ
D8MeN/Z9R1Ak1ndxEgsK++Otsh8JHE0zF9xzFjhOKtt0IwRyPrBOug5l62JS
kycI/o3MqeWu12G2boI8nSao5wl2iq2IMNrWxj8jeP/63c/dxVZcG98xwy0Q
/A8Py4bg
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#148"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9QkwUYnt+MNsmu26EdOERJOU4l4rwghY3HBFdtBq4JyLbvE38c3AL2
pUg4zv10QU1B/TZoGi5BQYiss1HBeZ9E3OLIFkzMCzMjFYMja1YUcbC+Hb13
771/Pc89z/s8q/folfsJHo+Xym34/mvUXalgCjKfeq798Ji+KFNcuC+dotNg
ePhd9JR3M2RjhqhnaRl61q705+ZsQ+/guezlzh3YWWMaJa4ocHtNhGUZnY9j
NvcPnQO5CPNFKbT4QNl5PtShhKP0wazQWQTLR0EJk6TCabfbLbTuw7keeXa+
bicu+uRpQroYK2YUYy0H8vDpH3MjAlKH7tTAqFWZj/5VHx8QKMrAspOJp0QF
mEhIESyOpTG8ly1L6C4ALVlyk+98A18dvBSxSL4Lf7929wI/8iDc0v5439e7
ELbHt1Zg/Wlxq1xaiAiLayt/5hB+VN7L+PZ8IY43lov49JtIuB3MEi9SI+qS
bIx4UIWKpOenWlVqvMcJIEgDguaU3z3vq/HMrRkjcaMaJS893MwfV6MjGNhO
KI6g/JDrVvNaDVIEnWLiSyMm0xdTybs10NT3/cWLNePoE90Z0gYN7l44089z
WvDINKrzT2vA2ek051iBxs82rIjXIpwGL9KG62ze4FuvaMHJMZh9Ngx9wZYV
0Fo8Cmzfw7MexZBMUORntEgle142S+y4WTq8P65Li8Pcg3gzdpjr04aqR7Tg
hYeugcOzUT23lEQWF4hpfS1ebJ6y6RJJ1Cz/3h8ar0VcpT23YguJJ5MuN4W0
78DXMikZ0JNQfr7Sbop2YLY4InqLnYRrq6M0NOKA6n5mh9dNItyXkPw42gJd
outXSey+PxRverwOMW2fvN00TKKFCyjUV4dtDPFq88//48Un8OsvtqePEdQC
njmJwJHayMfSKbCemOSrwZMonWCu+WXUAl/OKbRPn62KU1ELfEsY9KqF1frX
KWRxhWFLGKzz2lsMlRTGZ9uDRh+D1htS/RoLhXWcwXmLE1Oe+L3FLgrXuGHv
OGFZdadK6KFQLrL1GiUubPozNkZzkcLlpt/a5v9xIbvL9tPqHgoqLjA2rwHJ
HxL3zvRRmE7U1Bu9DahbeuKFkUEK73IEUlEj5oYz/N8EKGzyDlTO6xuRsXGi
xDFK4T+WWoqq
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#149"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn1Q03Uc/rUBMrkr4BiXHlMTE43ASA+mbvLEyyEBcdDiZb+vU2SoEcEc
BI3G2HgRb4u39ps4TD0pBHy7Dswzo7mUVrjF6Y6yzBd2nE7qwjCnosH67fRz
97nPX89zz/N5nle2V+SWcCiKimfXd59oSoerjAWJjEQ0ydEUJUZI5Ru3KhKg
Dl0U6RFuQJqrNixWkQZVb+nf/uZUWC8dSQ1nclA8P1eXoM/AjRUBOr4iHwHW
pCH7dDZ8fGGZW6DkdTjm+nJgKHM/5TFF8G7wj1/qzUW32WzmNcjB3Iya+Icv
Qb8tI4Gn2Ino4077k/8kOPPv3HigrBTZ68a9n55/DyPLvlIGZn6IZf1TUf0l
eZhaGRfoJ1DgnFUnW+LJg0K88CqX2Y3ba7rlqcp8PHp3spcbVImtR2O/3jWR
D589bkMV3rkxcT0sqQABOlMyd/Yj+M2WHXjbXIDWrvJQrqIGNhtT1uMuQNip
NBfH/TGumvXWkthCfM4K4MhqcYnzo/BIeSEi/5jVcH75BFGijSFvDhTi2Iwz
i5NZh1t+myMv3yxEXOCJCM5FDeJzilX8YClI+wUPJdBCuUcuaBJLMdl7YIRi
dBCnv6FqaZOCtXNCm92A9oCXBI5BKXxpUEGNSPCvnDo0LgUrp1Zra4T9+yq+
+IEU951Z26mGJqzWT0dcD6ERLzuXrhU3o1glv3cshoaKfRA124zgmvt3nWk0
KN8oWoAUYedwDY0UNpD66L2Iq0g++W0rjZbw38e8d/ZCNjrgbO+h8WLM4EHv
Fj3qTDv7Q0Zp5J5d0ly/yIAh7tIX3NdomJINZd5xA0RCg8j1Fw1fX7wZrUj/
7VGHNohg2+3Ly+sXtOGkNnwHFhN8wQbkvdCG9zcPuaSryDN8RAccZ379YDSJ
PMMbO1Ed0xvUuJvAcnjxmvMznbgiXGvkq5/zZX+Go7XqxOQ9z/kWGjGxfOBi
s5kghS2MZZcRZ1/+runLHoI7TwdmNDYj/vzmQZbyOMFrrMF5HYOxnze9FT1M
4GDHcosBT/vDpGCEoDy00aoRm+AuUuvH7ASDB+/1zT824dVTwZLqawQSNjBL
3j4cVvetrXQRPFxF2jWn98GatG3/+rsE+1mCTaFdcA07PPZpgvWnf6qer+iC
RbSj+3UPwf9+nYkj
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#150"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbslUGCSWFqQjfpYVcApjOhAg9CDYghKQUFRENp7f8MXD3sZ
MjZ0hbaCbI04bAtWZQwWNjCEbEiMz44wrFvjFkbqK2wwZCAsboiGYVHobqNf
8uX765yc852zjKjT9tEURUXx676zmrzrR4x75E76eJW/mpUHZ+XGqLhoSNta
G3q1MUgcLhOHc4kYW1FLPShORLe9aUuAaQd2Cf8Nn2tNwR/LPbUSbjeag679
8qY0DW4+cXIOiJ+x0Jm+E4aCRy+8TSw8BydktmUZOGuxWLx1ubDsnV3/ftNu
tNq2RXtzB7Ayzj7Q9tceXHo25xAq8yBpup4f6cxE79LvPhQmF0JcXZexYzwL
EysjhR5SDm8klx1acWUvuFifewJTEYTTq+2BRdmYSR9pEfgWQ7809M8scQ7c
9gS6I4jvsSk2fpMDT615s8BZgrCIwG5lmBIn6w+LBFwpSuJP+400KiHuSBym
H32M1OBcrypfFc7zAmhlGdaH0h9cKlRBNuDU0HeOwt9nXXjLLRUuTPUr6ORP
sep5sTRsAYNIYXsw/aMGh+7O3tm6lkH2qZ5pSloBdcmNDmMGg5GWc72USYvR
JfRZu5kBb6e9IlUH1WD6ouhOBu40KF89Ji/eGrTfZsDLKauw6XHzscjQOcrg
ab+CULrj2Hg1P0kyxyBKeTWpIrYSn/3d0yzxZ/EJ/yDKWYmvqvND+kNYUO7h
TmC7c27XhIJFAh9I+bvVkDcrHEUqFicCHvzqGqvGQ3n8kIhj4bems8GV8znk
ld5dD2tYpF1eXFkeZMBQa2ZpRAML82ZDgcthAJmxvf3bBRbuvri2ncTBfd8P
o5cFM9r3TrlXDbYGydSyPhZf8wG5emrw3vn9j/UDr/HBX+DufHbX4JPXeGMt
8p6tOXolgMDa+FbED1O1EASmTqcsIa/4Uk9jMuGfKFMIecXnY0SjLs9DHk2Q
wBfGetCImrrClPY4grEXbVMamxEz8pfj97cQrOINzmtNsLT1OY6lE9zmxzpk
QkJMlsdsJsFhkb5bE2uGV2Zu0iaGoLNh8tv552aYfpYNxxYQ7OQDs2bU4Qbr
f226iOC/0OxTmq46mCUdVm0pwRmeIE5Uj4WOL38fOUawoeunj+bV9bjY3TEu
1RH8D5P3gwc=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#151"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbQgrRRNGGCGOGUzk42hw0mRyOOIkE4L09LHvVegOtd1TLFe
CipDLS2lEdcUHy3SCsImM6JBcQRfbKkMG1imI4742hbmpKJsioovWgjU24Qv
+fL9OifnfOfEbNqW+yWHIAghu/47rtv8c6mVSh9cn8G9LsxPj16vWrGBScKV
0+WtRlMiRPfKwxczInxRqgkgn6xE12/fZ0XaJFBO0FlzQkUYWDjDEMGQsNk7
C56718DPF55dgDxhe1HmvzkwFz2c4Ns+x8YgurM/Zh2OOBwOfqUKepM9ZXiu
BC094iQ+8xX460Ym1zyW4PyLyRs85Wbct5jz6hty4VpwVsvL3oqfHt1SXPpE
iv/eT+AFzmPQVzKqbTsvBZM68zbXVoyYsrCyrA9kGJO6j3NDSrC4uli9oUYG
vz1uZSluXajvShmWYYahdhXXux0jS4ZuNy+Xw1KnCeMyO5FHnIkiDHKEnxHd
4zwsw65lZZd2dsvRwArgKMtRI2FUE5NyvPe3V8e5uQsvB8wjkmUKnBrtz+Fk
78HstzwBMWoFEnit0ZwrOjxpU199YVUgf3/3K2KeHmMBdj6cCriP17sImwGJ
n8539fJJsHZa9WsrsfTHcVlzHAl/GkSIEeOFW16niEmwcsr1PUbc9LbYrxWS
eN6fs4morEKcvj7eWEVCqOxcrU81oedE7EVzI4lv2AcRXhOitjbGCS6QIPzD
7EV7prxqzE0ikw2kIq4agrSrT494SOyN/LPP96AaobYf0mIFFGbFtx/1FXyL
SEGCR/oxhdyL75gq3jajdxEvaM5KCrWrzEW+G2Z4q5vOhUoo+PviE1uQfNp1
+XcNhY1D19+tCK5B4hbp3bbdFJrZgHzdNYgYrCsZ2zeNjz6AZMv8xoFj03jr
QajiC+/830fB2RS15PLoQRw6Z1l0/84039pDaAgUuXWD03wzrfhjd+RQ60sK
mWxhnIVWaB8Pfb16ksKDiZOjuh4r9ImaYUcQjQ9Zg1MGGxyB2mB1BI1r7Djv
2tD0kevYcDQNTZixS5daC+E/vUnxC2m0H316YspTi1/++uxZ8FIaMjYwp+Iw
MtICtM3LabyOzd+v6ziMNmXH2ZB0GnaWIC2sDt+pBZ6MLBrJHb/umNpWB1XL
3GKxmMYb956EYA==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#152"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbYGWgQcBQ0QIFMJMIkYRgZaUnsSUSK0IxSmKNDHvVchRGw3
39RdaIGJVvDRWxhjDB9zY9hsxlRszFaUAT7mmEF8oBFEpKTLNq0PFJB2twlf
8uX7dU7O+c5ZQmoVW3kEQaRy67vTTNmvu8wF0unej3MTt22VRm2h01W6NLB+
RDKPATJHK8KSdJlw7oY6yZqNKzdPrVvM5qIz3iCQPMnF41g/wyLdJrxWLFml
/y8fPr4wWTGCHhYsGlZsgmn7xIyQ1aAkJvSQXLoZ3zQ3NwuNNDwLT888vbMF
7X3ZaUJdCZjvHrlT4orQ+Wp2UKAsgy1v5KlsXTF6Pjz/hUBWjp6Q+6Oz6Uq4
4pIF86N1CF4mC5WKVNBJAu7z2c+R8jY8JaRfhbd5Y2f5C3ZCFRX7t79YDZ89
vnEXbgjP2V3VavgZLGv5U7vx+peh8sg+Neqbdoj4ur2IfB+R55inQdjPmaO8
iX2QDTtPdKdp8C0ngKeswPm2slOuUg2WPZpieHf1uLftlXbQokGHe0DOk32J
3MCOAmGXBskCaxTvdwYD4pP01DMNio52vyGiq1BeOFA0X0Bi7GxLD8Ea8P27
0/If1pPg7Fircowo/LPE1UWS8KVBLKjGKkdS1uwBEpyciqq+anT4mVOPWEi8
HJCThLEGbM2LXtZKIlV5eUOVpBZ3bPp0cTeJ/dyDiKlalDr+udxyjwThG91B
dD4uSfHMkMjgAqlMrENv1tiZFUEUDi4e6vc661Bn2tm/J5pC8IoLrd7iw2hX
LA9oSaegsMfUVkaYsC84Q8ZuoGBZa9ruHTTBHqpf+GwjBV9fvNn1cEiuRl7U
UlCP315a6d+AoNZPH2TpKZzhAvJ2N6Duk8/E6q/m8FHH0C++NfxRyxzefBx3
T14STnZRcLRFruxyH8f+D8JvZF+f48s5geSE938pbs/xBZgRca3GWDtCIYMr
jKPUDKkqY8jupOCc+cnN9Jmxerz9ofVfCss5gx4Diyy77cDYNIVb3DhGWNSn
BroS59HYIaq+wkgsYJTjbfCncaH1+Y+edxa8iCOaHoho5HOBOTY2YnKiUK4O
pzGZUHSUsTVCTiXgt2gaX3MEa0RN0P4RWOBeSmO17foej7YJMQaBxhNP43/C
B4Vo
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#153"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlUn1Q03Uc/rEJbe7iardB6pBS8zrMfAUKQZ6ayHVsaQNxL7/vzAWHeRN+
FC9KMrbRkrYTHBsMBKzOiKUrUrnleThf8KZ4Rokv4SmnQAGddxJ0swa29dvx
ufvc56/nuef5PM8ruhJFIYeiqBR2I3fWsLe3zKHM9HYkv/nwxO5Mibpg0y4m
FV/VHtTGtqUhe6RK9AaTjWC6KKFgNgsXr3+dFed8H4VjLy7eLJZheEWMSczs
RJTGyit8bzsifCIZge73M8PfPq+ATT8xx3fuRndo2JRUmoujra2tfHMBFnhi
llgb8+D256TymSJkvSTqcpt3wPv3f7d52r1YMVD9RCLPx5WXf/yYJ9uH3E1P
PEtn8/HnynW8BQkMOtPliScbdoLJWPgb11kKYfzyxDShEv/kjnVyBZ+ADui1
6y1KROxxzWUIxElVKY+ViDE1SbnBclhDCrdyqwqHXcVCLlMJTvLaYrSoIPoh
e4QzsR8PjOvTpaMqtLMCONoqyM+fGqx8VY3l94MGzp1PIY7aOtWnU+PE9KCc
I6vGkanXj40fVWMdzyPh9BkQmFQJjANq0A2XA1SCET0j75jiQ2qMdbZdoZwm
mBrr1zxTaMDa8Ri3mVGkD3RRBzSIpEEJasH1hIcq2jVg5VQZ/bXo+8juOnZe
g5lBuY4yf4bo5kffdz/QIEV77l1jhgWCm5fE94MaHGAfRAUt4CeL53LENKjI
MIcQc8vnb8ymsYUNpGZVHRInzt51a2kcirs3EB6vg9xr7reU0YhdfbojTKyI
f3R1eKadhuLsUkvNIhtCaUPlnm4aTVKbPnzbhg3WBL3xEo1IX8I5h5G5Slbi
HaXxwR+/Lqt5rh43vEz5xhkax9mAwpfr4X6bsyQ6iszjJUfQO9l2t19C5vEO
OwRx/ZOjcgLfl4vXXJi2Q7pduiOsJPN82xqRWvbC41Mfknm+hQ7cW9al/quS
YAtbGN8eB9T8OtfnJoLxue+mDX4HqkXeO1etBEmswZDJifzoySK6neAGO76H
TqxMirX/9A1BsbD2oiGjCb+I9aU/ewhOd0x1hf5twsaKg7qUXoI8NjBffjN6
mzsqG/oInr5GNxh6mnF838m87usELSzBZqELfvszW8tNgrd6rlWESly4Bv4X
8iGC/wFeyIRp
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#154"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbbKKDLJCJANyzZwc+KyqSMrEIOcDYGpNMWCQhgt7b0/1JBa
rsIEKvYFpdWOl215aUeYI+J7cz6IW7rOITHLBMYgxKBRx7COzViYmyCj3W3Y
l3z5/jon53znxNKl0mIeRVEibgP3ubbk23Jbfur8RxmTiordqcICsrGITYRv
KvvT1YMfIPOBJuJdNhNFSfebK21iuH/sSo+yb0dYT/KysGdS3H0jyBDJ5sHR
u6PGFLkTAb6ILBmufr1SUKnPh1XlmRfYlTiubHJK1QXoaG9vFxgJMiQzzrol
hejp35YoYHcj5+r3dd5sGa78tTASLC9Bgy7MuEMlR9/rX+4PztqLtFtTbV55
EX5fvSF4aQyL0Nm7pPplBdiUkDG+fR8OPpJ6t5Qr8Cxnopu/vAx7fPLDyTcU
CNjjG8vxWfaYNeZFJYIMjjT+3CdY9V5nR7FYifpWdTifrUCZza9ONCsRcT7z
Ac9TidfM6Rb9N5xuTgBProGs8yse/w8lVo3PaXmjB5HuFrxUFEXj9PSwmJd1
CHRabGT0Jhobgs8KeT9oUbKihfcFTaOw8frfVIwe9XHRxo9raUx0H+uj7AY8
+jzv38NuGpyds3qJEZ6cqgOGcRqBNKjlNciv3ht95ikNTo5G31+DX8pYd0Io
g5lhMU0Za3EqL6jrwzgGIvm1LfoUE6rOD657LmJQxT2ImjOhtrtrsHIrAyow
rBmlMvu9BDWDzVwgurctECf1mJ1aBuao2wP+hxYcanqfjW9gsOKdi06/7AjG
G7WXp04zkPa+atK9YoXs8UBeSi8DR5pV5R+xwiIpiX/cxyDQF/+2epzLnb3T
dIeBYnIoTvdCAxZEJ01tHgYnuID81xtwLGZX3Jsz/+OFTbCMJoT+uYws4m3N
GJJ2x3vWELg6o9d9N90Mr2pk+/B6ssgnOYrRmzT2J5FFvhAbcp5Ot9zPINjM
Fca1x4YwXVnhFTHBw/lT09p+G24N/XpBkkuwljPoM9ghfMslvK0g+Ikb1z07
lmgW+gZ2EajDa9zaFAdO/BwSa1MRXHQ+OembdcCcelnUXEGQywXm2tmCjvEo
0WA1wT9rChu1l1rgLS7Q/GYgaOMINoW3YsIjHBuuI0i+dPOAr7QV1ybVS49b
Cf4DkI6Hyg==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#155"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbZECjqjWB0iEpiKgsrWMSGG1Z4MpPIofdyfIoroOggOoVwp
Todbn+M9KtiWWhVRjO8HikR8AQ4o08ZNx3RkMYSSqsRsiuiYYzq62+iXfPn+
OifnfOeEKQsVORyKomLY9d5/NXnXi83rRMo1VU/9JetFweuz4zYxseAFOMbP
7oyGeKiEH8WIIbjgsK/qE+GG8/Cq2RY5ghIcMbHLEjCwYLJ+FpOOIdFl2WCq
GF4+fupG/FXTVnO+OQnV+cOv/Syfw/2J2qmpS8E+u93uZ8hGbH5j4GfvS3Ci
NyXWj8lFdGZR/3sZabj08r97vKw8qBy1Kz/NlaIn9HwRL7UAxb5pEcfCZXgS
LuD5zGOQ4tve+WOlDIzQv59r2YaGC47VgS4ZXtHuo9wpamxqkzJPl8jhtcc1
FCMxOo7HL5Rjst4azx3fjgnxb/yxU3LU2FQBXGYHRJlbVM0uOfjnxEOc4Z1Y
KMsZjJihwAFWACerBGVpX3wcKlRg/oNxDef+LlQsOt69NEeBU6N9Ek7qt3jZ
rj50p1IBAe9MMKdbgyfT44fVpxXI3N01Rs3Tgem65VY7FXAf3d9DWfSoSytT
nZtEg7VzRic1IHlU2a0MouFNg5pixILKHteXAhqsnBJdrxHLd231e5ZI40Wf
REkZvoMr53kofwONmKyrSTphKWoN5do3BTS+Zh9EjZdixPpTY7eWBuUdphxm
x0NKdohGAhuIdkkF6pvCS0TNNMpn//6z53EFVhRJBpTtNKYta2nwbKwCSf6j
wNhPQ3E5pFQ7pxq5zNbb+900rPHV+Z571XBVVd4PGaHh7YsnpQbXmPlhJh+C
zY/ufqD1NeHV1JnN308jOMIG5OkyIePPKy1BgeQtPrgWdluyaVIkeYs318F2
y+dmUxJBR2PQh52jdRDInkc5Ze/4pHsgH5s+62z6Oz5/M+ZEOT9qzSZIYAvT
scWMGVMzFg3mETx+fXJU02tGiPJq5K8MQSRrcEJvQcQDnSrsG4Lb7HQMWpAV
/0uPTk+gCjDe0AiteHS6YMPFMoKWhpHjE/9YMTJX3bmvloCwgXWsrcfCN31q
2krw9+LM3ZrWeqwVmuKG7QR7WYKVATZIBxJ/SD9IsKL15lcThTYY2+j6Y00E
/wNKdn9h
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#156"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmlMUwkYfLZGoRqNtUui4oEYRCsaJQHJpjgEtMhZKG3feyhFou7CFvuq
YLXGUlqLhIoCbUHwQgnxosYluoeYQlABFTcsCxg0RpS1HhgFXFkLSn2NfsmX
79dMZr6ZgCx16g4OQRBh7HrvuD7nZp6V3PCAmz7Z1Ze5wZ/e/qOSCcd/IXfN
pnfrIX6mE6xmxNBVHlIKlTFouXd2o58tBeO8WE1c72Y8WTat8AdGgQe1N657
ehLh5RMkbMXUhyEmrUYCi+rlhK9tG4aFoyf661NQU11d7Wvcjm1vRU8kZ1Jx
oS0+3Jf5CfvHpnRuypXitw9fenwycsA0Ji8PnZ+G20uu7vZJyEXSprIujSMN
r4PW+kxdyEAq9e2VrZKBEfEecm0ajA/FdvxdI8P/0sF67ow9cIaKO55PyOC1
xzXmoXa5pbkvRY5phfZorjsfK66P/XPgtBylVbv4XEaLOiHCowblEFwRP+O8
3IfakWEyKUCBk6wAToYOrpm9J62UAoGP3XpO7wGk5/9b03dEgUsj3YmchIMo
kKhFTU0KrPVp8Ofc0iNJ/ebcPZcCW461fiQWGlCsdGTum0VisP7EbcJWiMeB
Av4KGQnWToMh2Yjdy35xteeR8KZBzDBhXKWVR1WQYOXoDG0mJMRpdfcdJEa7
E7MI4yGo1mSV2NtJhGXc2GwQmdEe9Pltx1MS+9kHEW4zXmklfiVjJAjvMIcR
GRHkWbeEQgwbSIGwGDPVmruSUAqH/fr/8riKcXnK73T2RgqzQhpPebaWQDCb
iny0k0LqH4vMBfMsyGxtypDtpWCPtqg8PRbENCSmzzFT8PbFE1+KgbBoh6GW
QuaLrqUF04+iWEHnxjso1LEBeVqPIt3dF1D053e8fxmkw8Hd6q7veGs58rNl
x4c+UXCemb+meaQcF+ME5+Zy6G98yRUI4Q18GeTR3/h4VpT6l9eVLaARwxbG
+bMVv57dU5EfSMM1cXFE32aFdGnaKoGQxkrW4GShDa1hURVHImh0suN8aoNx
6OqACjR28U0tepEdwRGXX80V02g89f785Cc7ImMPulukNNLYwJzyShT1jxKd
FI2x4C3H9Ncq0by45c55JY3jLEEkvwr8oo/Z8h00Iq517J1UV0Frj37fn0Pj
K7lph0o=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#157"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfXk10FJnXMXiBhg7FAkKiDOwZkNPRCysEB0o0Pa9h9Q6kPDR
CipiLLSIoAwFXwtWRoQgQUxVInVxy+yIEIJuMKPCJKCOdZSYZZllbnzF1tfI
TW7ur3Nyzj1Hoi5KPUQSBBHDrfcu6PN+LGEzdxSMyL64JKR2BCk1n2dpY9F8
p/tBXGwMZJNl/pFaGeYU644GeHai92Fbgtj0FWxzjV1FjkQ8X+9jWK3NgG47
bZ4uSYGXzz+ZRt6m9qjVdXtRmz+9KDBlw75cPxXol4rLFotFYNRgi8R4K1CW
hmsD8liBNgdWjePhbOo+fPfv26d8Jg+i+qvjX362H/3ruo/wkwuQTQZPjLr3
41VoNH9ZsBajgWJpnjUd2ji/33gmHeQLUZbihAzMpjk6eMJiOLOGgzRDGfDa
4xlL4ENtKJzZnQkfgzmeN38Ua0ijJcmWibqmQhFPexydB0OLwwMU8L8pmySn
S3Fl5etRnk6BbzkBJFMGt/xm3bI+BULG5/XkyEmEC3W2sBVKXHc9TiGTT0Et
DHgVn6ZENN8aRPbpMeGoCRSwSlAX7v9HBFegwd7SunJYCUdHcz9hMsARf+ab
F7EqcHasFXuMuOPjHDiWo4I3DUJYiYXSVUULrAqcnLKKgUqszfrd2nNPhZnH
KWrCeBoJi1uvOv5UIYb5IakirgrZhpwHfQIKJ7gHEfNVeNMfsXhmMwXCO9pq
PJ/YVvB1PoVdXCDlm2oQfsLg++tZCtXisWGPswbR0j9YWweFFRG3Wzz0OST2
iD/MHaOQendtVflHtYjUNZO5Lgrm+Np8z9NabHHJzybxaXj74pHXYSjXMvl2
K40DU48+Kfc9j2bFjaGZ3TTauYA898/DMPjyxQdK+j0+qB6zM2HOv04t4dkG
PGldFVZ1j4b9ysdRP7kaID3dPe36eYlvz0U8cYxIno0t8fmxeH38U03EGxq7
uMLYc1m0hwSouwgGzsUul36AxcXqDeN3lzMI5wy6DSaEDra1doYw+IUb+0sT
5jR/99ZHMigUVfbq48woFUeKJFIGt1v+6XTPmdHGSnpkKQz2cYHZ0xsRk7TR
MpXO4P8w6oLe1ghJ+16n9ACDSxzBdlETho2+47LDDKS2wWPuoiYc/l5dLTrC
4B37N4Ow
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#158"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWs7KJppREAlYFg1jki2pYuKL+TEgoVQxqtCaXvvBQbUqMOr
ImoZty+ZRAStbQXcEBt1KDBhPhDZKIhNNVqZQcyssCyiQpYpBIwKutHdRr/k
y/frnJzznfNp3o70Ah5BEKu49d237Nbfii2K2OTktuyuCTo2TJm/jmaiQbTv
HQoeXg3pY23QF4wU2VcWmrL849Fz2x4fYk2Dm9rwyj81CX8u9TMEM1lovD/S
IZqTCh9fkIzEno6ywpzJNFRuH30XYM2F+9qY17s/Ayfq6uoCjPloMA8Gb+yS
45wrKTqA0eDhsuCaevdmtL/8b0BIbYXfI435zKVMOCPadgll38Lzs8h0RZuF
v5eJhYJwBiUXFu8TRCrAxMz6g2/diW6TnJX0KPAm48lZ/uzdaBvbtGKeNBs+
e3xjMTpbXIWS7mz4GWwS/vQesHZxS2iUElU1RYF8Zi9+z+sfKjysRNAF6WPe
6D5kdOgV9qdK/MgJ4FFayM1fS4mVKiwZnGZ5D0oRMKl/cYBVoWmiP5knK4Nb
3Fzq16uCWNgSxrvBItdEpq8l1FAf6X1FhOthMH5c2LlGjSdnf3ASVgNWzw8Z
PnFKDc5Oiz7FiOYqi6CvTw1fGsRsExKCftJPTavBydHqXSbEPb+pyReRmOxP
ziOMByA92dCUnkBiFdWZqI8pxwLv2pJ/t5HYzz2ImC5HIqWVW6tIEL5hDuJG
aE/7+jsk4rhAdFEVqCtQ3K0dJXEwxNPnHalAcc7VtFIehTmfX6z3kocg+Mhj
l6ygkN6xuFy3qBIp49ealUkUbJLK7d6BSpyLMGxU5VLw9cWbVIUBpyc2/xCF
nGf3RDr/avzjvL6wup7CaS4gb281pkRKx9PWD/iwo7grE3TJ+j/gLWY8ipLd
i5lLw9EQ+mX3hBkFVs+mT8Lp93wpxzAUG/lMuZx+zzfLAk1t6leHJTTiuMI4
tliQGPGN9rsUGiPvzk+wLgt0V38RC1Q0lnMGZwxWLFClto4xNNzcOP6yYlv8
khllKY2iQFMPG2PD8Pm5gzvLaVysH2+cmbLBpdB91lpLQ84F5sg8juiEhvEh
O43Xkeoj7OXjmPd9EeFsolHLEWwIrEGXXqjTXKKx5vKtkpkdNaiwleXe/pXG
/2CRg8I=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#159"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvWsBW1hwwUqiozpkQ8VX1AYzK3BGb7n31iIPUacRRKVC1OGd
Y4LVtZSKIh2ltS1X2IxRgw80hCBDBFIVFZUojk7CiC4o8ggLG1RkgxnobhO+
5Mv365yc850TuudQskZAEEQkv977n25/c47t65hYzWnPvo6kmJAdGfJd7Dok
NB/Q9o4uBfVGK1nJUnBXWIzHJmW423ZBGWxPwrPi0cbgrPX443M/w1x2Gxqr
u67XbomGl0+iToWLrVuffgUwHRz8ILbvxvw5a0Wajq9QUV5eLi7IwOtPwkqk
92JxtXXjOjGbiSh5smvBSQXqx6ZeiNL2g74ktfRFkHjwWc1hkfobaJ53NDjr
SQyFrxb5SFlctsb+9vdKJdgo/y6h/VvYOj/uSeGU+Hfz20phwHcwc3vpV++U
8NoTFuRArK4fbFHEwc/gUAgnv0fvn7jw2BSHEi47SMjmIrlGvzjxaRwk1dQb
wWAeZlstvkf8KPzMCxCkaUGukYaHyimEvZzUCTqPIYIU9gUeoFDldsUL1D9g
Bec79bKMwmrRjRDBfR243JD4gDsUdpa2jBPSfHAd3SP+fRTeVv70gLAboA+v
utX7BQ3ezo38hAI895U82aSg4U2DCDBiyaOm3bfSaPBytPmtRvQPDl1PyKPx
zhW/hyg4gVe/DCtIC43ItEYmP6oQH/XkbGi+TOMo/yBishDLA/8a626iQXiH
PQVJW6XjeC8Nkg9Ev6wIylUPt8re0zgV3N3uGSiC0XAyY8KHQeCK2nOe1GLk
LMx+PxLGILlhQaF+ngkus+VTcg0Dh8J00PPChJTXmeqBGAbevng2lsBSTK6N
284gvf/XRfpZZshKk1zzNAwu8QF5WswIPpz+YyY7gw+xIDLavs1WOIO3WbH5
dkXseBUD5/n5q+64reiaWlSddXOGL+EMRo9GtBc3zfD525BinOocbmNA8oVx
Ztlg9e16InMxGPhwza1rteH38e1n5d0MIniD0wY72hKLJs4MMHjKj7PHjou7
jNzQMIPsIONdXZQDixPdsoAxBrXnRq5MTzgQ2l+lvT3NIIUPzLm1DO01ua0q
HxX+WbKzVFdXhryrPak1YhXO8gTRQRzOVzfKhwNV+LLu8ZHpQxzMcxo2EBIV
/gd1Log0
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#160"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbaGlwlzpDBFUBzL4mMidQnMkcpBpnWj8lTae3+AgDUoglwf
gCCWPoaQ3VRW24L4IgQfYAgbKEYEEQHROEQRdCpWwogQGzOGBGdBqbcJX/Ll
++ucnPOdszw1K3aXgKKoIH4dd1qV3nrIqAiNUt9RZq9MD/VhlCE72GDsXsMe
yTwYBulwviiAleLSeKNzyZNf0H6/apOXKQbTomWRLxTRsHzjpPFk5Qh7ZYnr
o2Ph4BPJEmFoz118uzcOXMbYjKspBdz6Vk9f6zacqqiocNUqIb7ZyTXd246a
7ohgVzYNey5m6MUF8bg2+WnAJSkdm7oCNn78Qo4uvz8PuMgyMdM/GtrDyfHm
W7HLfF8Wfq3FWc5TcrASt7+Fpv24uT3mtSFKgf/jRi4IFxxEtyz/VsQ5BRz2
hNpDeK5b2Jk8ooCTxhwutGWj77u1aQV+NPTl+zyEbC6WBkifvo2nIaqXDgvG
DkNRpviypZjGGV6AICkfdXmBky1XaPgP2lSCJ0dQH8KknxmkcXni8VaB7CiK
dP/usdppiF3qfASdKnRV1eqXLGeQUNoxRfmqkbSowftEKIORC6e7KJMGforz
Fn02A95OnTpKC++ZXSvMegaONKgFOtCGH/yt1Qx4Ofnqbh2OrX4Y0nydwbvH
W1Mp7a94Rq4IV/YwCEq68bNaUoRTlU3LyCsGefyDKFsRqvreumWOM6AcwxZj
eu8Sd7M7wU98IIWrSzAkOaB86kNQ7PW81z5agpyaaw8jVxG4r2k8a0/8DeJq
6QP/cILY60uLChdz8Gqe7D8dSWAO5zLsAxxag59JtDSBoy/2CD1Sxs/pOjMJ
kl8/+rrQ+TiaKEtVYC5BNR+QveM4YnI8hgLVc3if35FgZaxOhjm80YDvD2+M
/KOeoK3Se+2tCQO4goHC5KY5vqgTyNkSHfSoZY7PzYiGjts1tru8H74wbbuN
CKu986H5AcHoTO2EqtuItLyGeZv7CVbxBmc1JmijL9v/shD08NM2ZELWtHL4
/j8E+zx07SqJGWy0KLFyjKDx7Pil2Q9mxMq/kvX9R7CND6wtvgw7f+zVrJsi
eL8ioVR1tQwv81IGWRvBSZ5gg0c5Uj3Pv9N/Ilh/9V7ObFY5SocatnDzEvAZ
C1KN1Q==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#161"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUn9Qk3Ucftk8GNB1hROQhj+TPBEDO6eRsAfe7/fAABEkROOXJlaG+gqk
hLiNdyLkhIUbjk0mLEZS5w9UMM+jYeCtrnZiHl5wBmUcWnd2NA2VYax3F5+7
z33+ep57ns/zLN6xL7NIxDCMXFjvdSt395TpcxSxf5wwMws3KWTbdr5VwK1F
tLyUH5mMQNK9CukqLgm3WHuXLWM1rv9gpcGGDHDH4wtb7sox8qpv1TxuC17J
H54bGhILL580NQ+XPz0WksWvh7b4wbS/YTsWqXUly96Lh9lkMvnzO6GQrfj2
7TEFOhwpa/259zFk/eKf1nrgyuN/ByX5u9GbpAx/5+UE3FjUWSJJ3YPu5U9t
Q6oE/BkRI5kTzqFu8EKyZjQBXFzAz2LDfvxUlkc00Yl4unmsXRxYikrneFNs
eSK89sR8GZaZitIOfZ0I36pGVjz1MZ4VlmsvTCSizrg3SMwdxIbM3/0mF7OQ
nk+6J3pQDte2cyuj01k0CwJE+RXY7PZxzC9nsfTulFJ05xBY9YQr2cLiK9ft
NFHqYURXBB+M7WURIzkrE/UrMfBRK8keZZGr65tkwtWIMBtbHrtZjLWfusEY
qiD5+5vUgSgCwc5ZdTqPBYGdW3hC4E2DCdSAL4gfb9tKIMipUDs0CJWao3L3
EDy6nbaD4Y/geP9r8psqAnn+tQ3quGroQ76zhjYQfCI8iJmqRhu38t1sKwHj
Ha4Gh4etbr9eAiIEooqshT6jx9jmJKgJHr7puV+LsY01n/PDBC9GXbJ48o6h
7+pvYdRFkHl1QbVqvhbXzKWPEp4TNLLaYs+gFs/vnNvV7Uvh7YsnpQ5PSGFt
RBhF4fitJSq/evBzS9etWUoFHXEBnr56zDuypOeXSPo/XvYZLKsrLS+tn8Xr
G6DYzhWdyaGwt4S93utqQHJO5LSsYJYv/QT6rY6wrKJZvgA9nIorp6T7KYhQ
GPsHerhLAt+wHaC4P/2lS+nQY2Hzuh99KilWCAZnqgzoyW2PjDlK4RTG/qsB
D3f5nPbTUuwN0lxXxjXiw790xd06ikuWiTMzzxoxYjKNnG6iyBICs2efxJyL
a4JGmymeLM/VKbtOIqXjBed0K0WTQBAfZMRDm6hhykbxZtf3B2b2GcGt6hwY
6qD4D67Af2w=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#162"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMU3cYvbYOC5ihFdF12LkH4AN11awKG+XII8S0oIKoKK20vfeHQYZ3
U+aGWiiIEjvKo0WGDGSSoiKgIYDaQEHBxqDbiIMpMUQISpW5ONShQKC7DTvJ
l++v7+Q8vo81B2MZHkVRUm5ce1KX0nrYtDs040PRbbe/mVDfPfSX+9iNkNSc
7KuQbkbUUIb3WjYKMfr3KisRjY7uXyJ9zNvhdmDyRb0wDgOfuekXs7vw+TaB
der4Trj4vBVKpD0ZfDS+IQGGVMeUu1mNzhFbTH3yXpwtKytzz6aREvBSfiFY
iYt2+UZ3NhmrHxfW/tGpQsvr6V6BKgXGa+k3mtyT0LX86rcCxdeILByPLTub
hOf+EsHcZSzuLCrymlqqBhvi8YBv/gbJHW2GdXlqvI0btvA9D8GveO5096ga
Lnv87MMQaxlBb5gGbvqScP5EOo79WXfbUaRBfmmakM8egcfvFkVcvwbeDVFD
PMf3kIqG1viLtPiZE8BTZeBdlc88xGvx6aMJHa/vKCLG2yx7DFrUjt2P5imO
I8QR1LiwTQuJoM6X16lDT8tgwbNRLRILbv1LLcuCmJ8+GrOYxrClvIsy6xH/
UNwbrKbB2anL2poNr9aJywk5XC5cG5RnDrwWXq+SVdPg5GRk2XOAxIGmj27S
eHU/WkNln8ABS1h04AANqcq6JSskFzXbWwKNb2n8wAVETeSiNMgzImUBA8oF
9hSMbEPzAhmDCK6QzNV5iG2z08I4Bqd8+n9zjuQhbU5X3zRh8P6axgqn8jSC
w5XiJwYGsdfFuZkfGLDymXkpv4JBSbgh1dlrwDBPVrijnoHrX5zyfMj+GZTY
7zJIetrzSeY8I776sfbVTD+Daq4g5y0jnm97WlXu+P/etxB+1hfhAXPI7L2p
CF/4WQJS1xLYzonWtY8VofnEee2VTWSWb2sxqpf8dbQ4jMzyeZggFyorFfEE
EdzD2PabILw3+SZQRTAydWlMZzeh87K0p50QrOIMzujNCGXv7p9/hOAeB9tj
M45t8pf8qiNIE+Z06EJKML9AXhlzkqCx4uWFmXcl6AqOXHnOTLCDK8y28wzy
u6uaD5UTjK9ILNA1nYE1oaV70XmCnzgCmbAU/BpRq/4iQVDTne9mDpZiy/or
1vYGgv8AmOKGLA==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#163"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUntMk3cU/dJiLRLUNFBRUdE5JSIoGh5S2p5fAIkRggUjpCKgkekc4gfC
OjH0hQTlKX1QUBoCDUpR8RGCBg0iMuKYEgXUsaq8IgQ0bnXDggj1a8JNbu5f
5+Sce876I6diU1kURQUy67hf5SceZGkTxC7/q4w1MbvFntKjgmQ6CMHdFgNK
vRA5nOPmR0ciMyHZR+Phg/bu2gi+TgKu4ovs6g5/vN3IUbnT8XDmcXZzh3bC
wecWdQgPTZxa0ccAFKWNzzrrDiPbypd4FwbhUlVVlbP6KB6kdnwIHwhGQ9fe
IGf6GEbqJnRen3ah5b+5fm7SCeSv7RlrfhWCTq9bmdyok6jcIX/7ulqAiU3+
XKc1NCpTTSvMkaGghUtes3UZGPpxa3vGm1DY4kbr2S6nEVQs5e1MFsJhj63O
Aj+7w8mpTwiOSh/GnsmGlD6n3xciQokhncemZah7MmVcZBDBrSlymDX+G8Ka
YvtuTopQzQhgJeXgz0r+ek2gGD9YZuSsl2exPL3VteWsGI3W3mhWVC4Urb7/
2lrF8Ode92Q9liNr0NV7+ZQYiWUdU9QaJUI2SNyj3YHR+sudlE4FmeaCLxUB
MHauK2PUiJ0q3BwvBRxpUC55sD0/3CdIBxg5OcquPDSOWi73KoHPvdFHKPU5
zEm9ogQaIDCpdY9SmI/uyUe/l9cBZ5gHUTP5GF8XWPHpNkA5hi7Anoi/qpf1
AOFMIAqf85Ba4kKn/wYK+AM99rHz2LaFbdo+Diz1vWO0HyrEomuS6K45IPbe
2nzFyiK8G+jnCLgE+rCiNHt/EWT7X3X68QgcfbHvLUHG4NKRlo0EKe+fb1As
LsWAX4HLQV8CExOQvaMUDbPTX40BC3jPixBf8bjvEbGA15aj5LPMlplC0Faz
attDaznMf1zorftpgS9GgwJr5hlD2gLfEi2azbk2i4wgnClM23Etvh2wm/xz
CcZmzVZ5lxbPVvm9iFcTbGEMzqt0aPylgawrJnjKTNugDin6GxOdFwnSeXnt
cqEeniM/j4TpCe4Y/7k6P62HZDTR/aWRYD8TWNuBCgwn3G2arCX44p1YJm+u
wPYA+cGheoJKhkDEM8DuKi2+aybY1fzk1/lTBjwKXl2dcYPgO/+thE0=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#164"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUnlQzHEc/dk1tRvjaNKgY3KMq1FytONIT7u/75Z2RS12jCKFhPphc2Ta
qyJ2trC7tmLRVK4aR5qQnS1JjME4qlXuK8WIZUIard/O9Jn5zOev9+a9z3vj
1qXHrudQFBXKruv+VaZaFQZ5eNOsgofSHnm476rk+WsYAcQP5qTuKwyG+G2m
VxAjRtqr4YllZQLU3yuhvY3LsIkzwx6/fAFeTnTTjGJWYlFol3aEIhwuPi9J
PHQbvu551grotnzq4xsToTzisAoqF6G4qKiIr01GXv7lDF5sBM42RQv4zEaM
/rm5obA1AjU//zXzElIx+tljuzNCiMaAS9t5kq0IepWliLYI0TUphDfYj0GF
JSinoksIJszDzjVug8/sB2P8AkX4Hfe+nDtkB7i1izseJYngssfVKrDUrp25
2SSCm8Yk5PZmwFpmmT/9pgh6c5onl9kFx/L6+hGdInhdEL/lfNqN0uHj29s9
aBxnBXASMmF3J5OnTqMx4XmvktOyF0n6L4K9hMZ5xxMpR5IFH01o0ty1NEJ4
lb6cW0roo7Jaru+isbqgoYfyU8NMi1eJ9DTelx9rpIwaLC3pVK+5QoO1U6mO
0eKFijYvaaThSoMako07T//ccG+mwcrJVDdl452t1q3iHY0fT6TrKG0OPuAF
kX2nEZpQG6UOy0VOn6ja5x+NPeyDqN5cXJTOU3nzCSjXMPsxMvJURrc/gYgN
RBWYh7jJpPjzFIL93m0PnR15aCv9VSKfSTBsepXFGX8QQ30gvCokiL3mn6sa
o8MZciv9RjSBSajb4mzWYTHj6JbHEbj64ozWwygJRFYiwdqPj8ar3PNR17LT
Y2QKQSkbkLMhH9Jjl8PlaQN430OI743s9MocwBsOI2RGyzVrPoHt5NjgOsdh
RCF40HrDAF/MERR1+6e8Ng/weRhwojDgtuwU64ctjC3FAEnxuARZGUFH3zmH
sskA/XPP5OCzBNNYg/0aIxQb2iJVFwnus2N7bQSvvODE7yqCNM/semWYCfL2
7bLYGoIqy7cz/X9M8O4RWKqtBDI2MNuKo2it4Dfb6gh+TVldoKw+iisB+ppL
DQSFLMFCTzPexK1I1t0mmFt9d2d/uhkdpw98iblL8B+rHoLT
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#165"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtkntMUwcUxu9uF2yFzIUhTAME0DFWGUadIELHB+29nUrDEN2WARUJBGU8
iiIC09ICFbGlPPriISITIxPjNoqgYFGRlMWo0wJDQVREcYsPUplCNdLdJpzk
5Pz1/XK+8x3f5OytqSRBEMFMO+ZbafrFXM0PEbn0ZPmFipgIzx9TwnZIQnD/
0iFWyRt/CCcK3YIkQnxa3vwsqmotLl9rpty1sTh27kDpNnEIxlc6yZdKvscs
J360bWQjHDy36ETMZg2Lf8nnQZnx9B1HuxMGUaOwqSwC9XV1dZziFPDcXaZN
BqDVvCWEI0lDx5WmnCdUJDpn3g+xxekYkx7frBqJRL/P73vY0Zkwa14JuHFR
+Nd/DftDLwlqBsd2p5qiIOEtHmFpc7CDyiDblvExGzd5kuW8F+YCi70ynQ+H
PVZxLjYeSrm+pJ0PJ7mOz7LtY/iemZ1WPioMWa4syX54zHMPmLgCuJ0VTpBP
8/Ft2PojPmIBjjILkOJC1NxOu9imEmDFmE1KDv+Ms5nu+U5dApy2WkRk9EHE
jZZG94wLsIZ9xpO8KoX66p0p3gcUEir7XhNeMthIacO0L4XJkw39hFaOVJO/
n3cCBcbOGVlMMZLtz4xeeRQcaRDOJdBnf9G9XU2BWadQZi6By8BQ5kwLhVcW
UTJRXIrTacfDvbspBIu7N8l4CvBiA36bu0GhgDkQYVMg6aDqs+aHFAhHScow
wDaK+0kaAiaQolWHUfeiZ0mGK40y97s37VOHoRP5p4X70vjoy/ZGe+IR/LF8
8HltOI2t570VRcuU6LIX/Be5iYaOr8ywDynh8Q2nR7SdhuNf7Fsq8FceN+jC
TzSSntzyK1qkBnzyQwLzaJxgArL3qWH0cbYGyBb0nlUwOdsU4zULek01ljbI
bj420uhtWr76krUaLY80YQk9C7yYGuSMzA0q+xZ4izXAsWt+K24xfpiH6d2l
QVK8+nX13zSm3v1qlZo1WHXCtGHgHg0uY3BeroVevrm76h8a15nqfaDFV/Wt
sdyXNLJcSy5LeToMt6g+0c3QaG+cPjU/p8M61am3U+9pbGMC6/1OD8Xuz0Mt
pBBvAhIqpR16tAYGjeoXCVHLAL52NWBsnbYx2EWI0I4/8+azDbAcVQYYPxbi
f07AhrI=
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#166"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUmtMUwcYvbYKFxpdQtCoaQnMsiFatD4KSB/nCpMQCigYXwMUUodB0Aui
IM5SyhjErqi7twVUNJtoRRGVMTYdVkTWIBolFaILI4rIY5mCaBQKs91twpd8
+X6dk3O+cwLS9yfu5hEEIePWfae0mS15zDbVHc/1AXMkG1TCHZqInXQoChqa
t+ek+SO6v9A3hI6GQBKvz/kjGK2dP321gN2ErHveNwZGV6JP7FE8n94K00jv
w4xjq+Hm81WnIGTrqvTasrUwZA1Pe7Fp2D6R0vRmYShOVVdXe+k1GIo3utQp
Ybhkiw31ojPwJP5s4Ns94Wh+/6mbTM1ExpX8yLKYdWj3v55LqrMxWd765TUy
Av98ISVni2jczNM377gaAVrh/ZTP5qDzYH3XNbkcE0kDF/iCA2DtP5uYW3K4
7fH1eSitW7nLI1gBj2JTJN9xENnSEXuaUQFj5T4fPp2PKhfTUjKkgG9DdD9v
uABtVys1r2VKnOEE8FILMT8oMLm7SIklvQ4tr+cIFr/47bC8TYnL4/Y4nvoo
fg2YfdvhVEJK1gt597QInzoQbZWpkHy87QMh0uEH4bDMP1OFgQun2wm2GKLE
drXlTxU4O/W6BD0a/xY/MI+q4E6DEJRgS2aI305vgJNTqLOVYGFt3IhUCLyz
x6UT+u9QIbdrXi4HZKm3YnSKUowV1GYb5MBh7kGEoxQCUfzFqFiAcA9dBvL9
L31h3wBRXCBFy8rhGA4cNOcCZQv+euQaKkeALsYWqwXmSRprXCnH8IJlKt4w
QOLvfqVFiwz4+vtv+eM1gCnSkOXqNqA3aX1LgQVw98UVa0RXVUdQ6E1g12DX
50WeFfDb2Ot59C5wngvI1VaBidyO+t33Z/DCEzCPPu2TPZvBMycxnd+xQfMO
sJ5bvOLO+EmssGc9T5ic4Uv4EboTo7d5zhk+bwZTxqVsJ0khiiuMdQ+Ds5/R
4sG5FIam68a1NgYDSWlr7T4UgjmDzmIWNvIVKRFSeMiN9TmL4J5Ps875U9jn
U9KqVZhQywSN/Sum0FgzZnFOmpDXY7OIJBQ2c4FZt5jRWFjXMEdK4WNQ8nFt
kxkTlhbx4zUUqjgCpU8l1v23be+RMArhTR2HnPsrEanrfySQU/gfe5yEWQ==

        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#167"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtUm1MUwcUfWsRQYQodjgUlCEjVeecUSGGsJ5Y5GOUEWpn29f3kDHIWCP6
mOVDxNKWImpX0LUFO+2WBZvBBsgIEnTYIusIwWUZCn5vhDFE0vqBOhkyqa8J
J7m5uT/uyTn33LdzD4jzOQRBxLHl6y/Vyh6VSSYYWSqOjn6SL4gg8xL2MvFY
K0kwSbcKkDJWznuPSUFOTldQ8mgqege/2xVmzoInbPv8Qb9M/Bnjr32TkWJZ
D9Ux8lMWfHw8EQ3bj/Y0sWQ3DPsm5wLNn6Dzy2ZypVWCr61Wa6AuDyrNzyrV
2Y/R1J8eH8h8hvNGOYdm9qDr2avhgGwlVEVtTmeUFK6o9i8CRIUoeye39M4F
KaZitwT4RTJYLovdYNwuA5O45CbXXIQBYZAn5pwMM7vH7dygg6jdJSbv+Mnh
s8fVqdC61IB1pBz+WouQO1sMrWvQ/cAuh7FhfyiXKYWTF57cOiUHry1ljDNZ
hm5XbP+5WBJnWQGc7HJccLU/HqBJrLs7q+aMHIZ7KtQ1UUfih+lrGRzREbj1
Z9oaL5PYEtASwflFjbvK589qJ0lQdX3/EpEaTL1fIo0MUWDcfsZFmLUYG7Iv
bxQrwNpp0WTqQLcEj8YXKeBLgwiqQlSNpPS8UQFWTrmmvwrTa/PC0aTA02sZ
uYROD9HfqUT4FQXisi+laRKr0fVGQcWntxQ4xB6ImK3G+Kuy28JHChA+MDWw
rBTYdoZRSGIDqdx4DPwefV09n0JN2O3fvfePwe2597lnB4WQTR02L30CRcdD
1nvkFMTda6orww242NeT2V1AwSI07PMOs3PqMHW1hILvX7zpRmxcXTg5e5JC
zsQf0ZWLazG26Nesd20UGtmAvH21eP5PhvN608J+xEm0Kgc32R0L+6ZTuDH0
f2DMBAXHt6s2O6dP4XQK13Dj4QJf5leouLfCve3FAt8SEw4p45oX+9NIYh/G
UWDCpY8K8/XBNO7PNU+r+02o73VcvcyjsYE1OK81g1M8JFJF0/iNhWPUjA+T
4tpn+DT2h1b1qhMtmNFbZUmbaXTYHn8//58Fq7cFPxAm0JCwgTn21GPZxYpv
5kDjBZ+qU3fW47ruLcHRZBqnWYIPQhtQnBZycyKdxo7OgZL5Aw048hdfEpFF
4zV1GIVL
        "]]},
      Annotation[#, "Charting`Private`Tag$4636397#168"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[0.02], Opacity[0.5], LineBox[CompressedData["
1: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
WRye/weHkoCB
        "]]},
      Annotation[#, "Charting`Private`Tag$4636663#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[0.015], Opacity[0.2], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1:eJwV1Xk0FIzXB3BESRRSpEhkKYXs1PA1G2bG/uBJ2bIVWUYRraKkwqQwkaXH
2uPVhGyV5YlUEm2WQpayZCuyK/nN+8c993zO99xz7v3r7jgSaOvFx8PDk8Gt
/+8a5dWPSoV5jMO8jx++PTZnpBqmazHE/Gy87c6R0CsjrcbaCR7SecwJ46y7
tqVNrweMH8ks8UQzl41DZEwDIhJnjH95UGZCmCIg77hZFKPMj21rxib8mTLw
iz0qnOO0Ef+JeTIumW0HKV9/ziJUAprxAfbNLDksC+pJqrE2of328MOv3vKw
XhvMeVwpCVnOpyDRTUpgurV3yoxvxf2P1aPHmHvRkpxN2/p9B/44L22ZPawG
6rkXQf0+3LmvuuYRZurwovy8eL1PHktzHXZNLA3M1zQ1prYoIIPXpqTfWxPj
3eNdIhmKGNpMCly/SRefiU181iK7EGKiPOLDJEB8sORhPlEdRm+EozdNEZAj
JBzAk68OQeef8vVBRnAOon4jCGggNaz6sGyQMSyTtKeDfTTQ27HrqG8F0Lo+
TWhUaR/4N/zXJVdORPJyYMyeW5r41qZZMD9LxL0OA1vhWk00p+WGteiQcFGt
8mbCqCaSd1/fdLaMhAuzb97cgBZUqA5WHaVkbPeyvH/hmxYszo3XxT2k4mSn
ntiyig40ya4JntNU8FdoTt230sHmde9d92uZwsBX7+3GUB303a74/a3EFLdO
a07w1ukguDRSl1xihqK+/WnnHXSRPCZVsFREQ3mr24P8YD30HaQk+HAsQclL
bE45awBVS3nnVaOWUDTlX7ZKMUAocUUlU9EK2ZWRrzvKDCCs+ui/9jQrzFub
Crl8N8C285sXsijWcA2vHbF2NoSp1TVlcW0b/A5I2quqtR8ZU8zoSVE77Ntd
GkN7egDP/NyO16jZoVFJxWr24wGMDFraxjLsUHe78/C5yQPQ7lSVVYmxw/pr
feeUthPwqm6wzHXFDterXswOnCZg7tbBwZaJvxAlbi9os8cIFrom5PuvHPDg
hMrdojBjfBTYcmFw2AF7i9JpirHGONI2+UhGwBHlFk62EZnGCD15Vz3e2BFD
jXTSaIMxMktWpANLHVHoMBnTKAhMqdVMaWT8DXU+iT8atkCS8v7MUqYTQrLv
/EnsBuTmxTvH452grHDmSv8AUPB8VEKx0Akz7kuzChNAjVfqtaQhJxA8aM3X
loHh7MWQ0EOH8Euo0PmLjAkM5CoZ+pTD2PWM3+jlYRN8ltJZeiLlAof+5dy+
DybQeOKiG6Dvgp0RK+dyu0wQ6RwTLPe3C3Zf0m9x+2oCpayu0UtsF4gOysk8
+WmCINXILovNrpjcjb94xIjgzfTp+bHWDVeleTO66ETcKi6tvbjGHVrMHJbJ
EyKqIhs/O0m6Y/2qC04zT4kYsuv5paXsjt9v46IyXxKhP7dGf4jqDvF0g529
bUR0Gx4qokW7Q1iUV0BgkgilZ7z/bBQ4guoPl8Xm5EmobLeMzOXzgE1+oWNN
FAn7tWp6A8U84FvFStC4SkINay/BUM4Dr6YlPNLjSag3E15oIXhgxV1mwjuF
hJbHjf4LYR7QCD54+jGHhIEM8kH6Dw+EY0nD9yMJoj6GGlNdnrDiDWyXVSHD
Z16x50CZNwiFN4TNH5NhSTA6QG7wRloe/4fpGjK0oxxS6W3eEGuSlk+tJ4Nv
wxUHp1lvbNj5+MSn12RkKH1rOaXjg0zxhUSFXjJa7QtqS8p8UFF0efcYHwUo
VftHpfwo1IdVtYNMKZBi6nlKVPjivQOtLKSBgmL3Z+Nvn/vik0XA8LZGCmi2
NiFx7b4QtK8XfPqagrNaftGr53wxT/NQ4WmloH82496Cth/OtL+gOH2hoOD0
6onuEj+8ktuqd/EPBYRLbSG5nONolgwvLNGm4gj7xBXdvAD4F/T9cUyhwn7j
IauB0gBc1CMz5NOoMGMRJW/WB+BY4bnM0Qwq9l4Ry5/oC0D7sVbXkBwqFkIf
PM/ZGogk3q2RJx5QEecwJrAxIRCenkMbJRqo6L62r26eEIQ/BG3xme9UCNL+
RasKE3+3r7dMJJiib6bMdq/SCegdfuf46YMpxoQkrDm8IXBtp4zm0M1APLUm
rfVDKPJCT6nUFJtBWlRqObU5DP9nnXDhhrg5FCVOm1/NPY0srbe6skfMUUxe
LJDMPQvOQPBQCsccV5tEDtHvnIdufl/6sSlzvOoxOPNBLwICARrRp3bRIBpw
xu6dzkVMmJbbB7jR8KPEa8dX+Uhor2oo4GHRsCG+Z/GZQhQeeomZ81TTYC+R
Fb64/RLiXk/X6A/RoG29/ofJusuQabx+LXktHX/Jrw10EoqG1WpRzuweOkQK
CgeiF6KhvnK0MoJO5/6FVN7VX64gmkMzdvGhQzhPcpd9bwzEloaLI6PoaNhJ
oFY2XcXLk/l8fGl01BpM+Y81XUPwwNT6D6V09C7+OMB8cR2f7K1aU5rouB3I
5l1XEosgy28CrF46bp5pfnuyKA4HTxWzx6fpUCQUJv1Mj0fi0FG/dgEGev5t
462PZmGL0Xmvk5sZON5OrSo2uQHNrn2JUcoMlGue+nm94gZEHiaMJ+syINf5
fa+lXgLiZdmmm6kMOHYbeqZyEtBx713vezsGdmjv+c5SuAmdkfkd+W4MrOvw
POefdRMT5wezh/0ZqGtlrmmTuoWf8wVHi8MZSJF5nrwz5RY4S8ub+y8zsKqq
NlxGMhES6S3D5gkMGJbFOd6NTURujJls2B0GEhazDNcJJ2GlZspwbR4DZbdj
pXiiklAk99vm7APu/nFbaRnzSfi1JWnfkUoGSM1TETtDk9G2kzmW95SBYZ+0
Eu3xZDxlTdTPNnLv7y7uJX1PRt+UqKL0KwZabV4I200mQ1xIMMKI67r9P72Z
M8m4mHNK4QrXGRvMtnJ+JyPNKUZOqokBh4rpKGURNu53vJ7Rf81Aw2q6vbQa
G9bzHNHQFgaqzrhF7tJgQ3rO/EEK1yWTIQ/0Ndn4NTJiWs313c67ax112XAt
N/Lhf8PAWc5c9S0jNvaNebnc5FrbIUtJxIoNU79F9ftvGVBtqrDbZsNGky07
8C3X8miOULVjo1nI9t9prkV3L3SaO7JR9U5hneE7BsaXLVjRrmz8HnSPec71
12CPqiR3NmIvbEgZ4bpzOGwkx4ONp/mD2cLvGXj5LptU78PGj3Cxe7Zc11If
Bb0/xkaSiO8/IVyXP2lJ7/djg7hqKvE214UaA68m/bl5S37kE66zcxfnVwLZ
ePSF5dvD9f8A2kaEvA==
        "]]},
      Annotation[#, "Charting`Private`Tag$4636719#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[0.015], Opacity[0.2], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1:eJwV1Hk81IkbB3AsOrAIkZIrUZZ1J0w+OXLlHEbGNWPMV0uO0aJEISE5ksZI
5Yq2hCLC5ihEZdlNpJXQJpJcHa6K3/z+eF7P6/3P53mefx5Fv1AXJh8PD08+
t/7fte41NdQI85ieW7OaDxbZZKp+zMB+nPXaNO3G0IXUY3OmelkM2eusaVMD
g/kNk3QeNMit8CSxfphqmCqHX9AXwzeG5ZcIlghc1zojTrbIY9u6qelglhxo
koNiTTGaeCDufzDRWh5eK5KPn8hpQScjxK07UwHLYsIDfN+08CJ34u5bQgnx
VcqGa5U62F75b5iY1E4EVmVLrv7QR8XLpg+/sTRwc8uFmwn7TLDqvbLlq5cm
DslOeLutmsDprYFNnPWvuNgmnX24kYSVhQFyV6YWwgj1lsO6psjnda5+Q+gg
w3HXZIPgfoxvNg/9WcoA0VJ7tE3vmyNiv+pkAIsEY7XL4kIF1tj3t3CS1DwJ
VU6P1iRmrLHe+5NSW9g+DAoF5oaY2CDvWJPX9jBTbI+/U684YIORgV2HA+uA
mfRNao38duAXffBK4Z4Zxk+JjSab2eN9v07Z4lczJPCzrpYk26P7SumxHn1z
vFkVbdL5yx45u89JxdSaI7bt9spNsgPUDlAcB2os4GfA81zHyxH2sR9b0+8e
wFpk/dSZMifoWPhm+X8+gO8ZZlprj52wWajX11jXCsovHtJJE04Yza37/r7a
Ch2MLH0hZWeE1yQYWFRboz63on6V44ycKZmylTu2yBr/It8T5YJRD8usgEoH
eFaY2Y1vcoW6g5L3Tx8cIPMkNez0LldEmq2pFag4gl2xX/S7qSuE1RsevLji
iErbJpn4I67YdnLzUrGlExSP7G162+YKK8dU1U16zjBjb51zOeKG/HlW0pwY
GX8RlpljpRS0B9GONGuS0Xp89nxKPQWT7xxc0g6SEX62dK94FwV6g+rb1VLI
aEs7H/psloKnre9qfdfIKIze9lzC0B0L2R7veqZd8Z9LxNlnbe6wN9hvUfGU
gnp91o68J4fwUmDLqXcTFBh6BfJNvzwEv/65BjkBd0R9j7yt/v4QIn8v/DXD
1B3aEnlSwYIeKKhekw2tccdE6C4yv5kH5jWb57XyD2E7b797aa0H2KrGBTUs
KnbMfBgtyaRCYXHT4McMKjq/NCXVXaGirOODpEo5FSOcw2Z/3qSimZmXyh6n
wql1IeR8GxUT15YjIj09kfGypC5hgYq9CvUHDS29IFlgw8vx8MRrGf2V+zI+
yPjXJU5bygta930MQgx9QKtwCghR9EKCd0q4wiEfWMmI213R8MLO4lcfEjk+
SLncG9nFzQlTT3hlv9kXFv15LtERXuAtCBie3UCD5Le9b7V6vZBdVdMSv46O
noe9obfivdGY8OQ1VZqO6K+XSgzTvDFOHv6mq0pHNvv284YcbxgurDMcP0DH
ck9ueO4tbwwZed6xTaLj/pbN44/7vLGznbdIQsAPNQfz/lin4oP6Fw4JpXwM
FElOa8Y0+cBYt3kkVJwBwaB/g8Q6fNCcqUEyUmBArl1sx5UeH7RZCy/1kBjw
+GnGMG/EBz1/PgleOsZAnVCfkw6vL8byLTzsZhmwmhnvHjLzhViAkdb8K3+8
cj6/EvjAFwGLKsMmtQSuyd167EqmwYG0z8TiEYGlly1/87rToHeakmfXT+CH
sJ3LLSoNfKLJFOpXAhoeY68/02nI3/m+J0o/AEWFk5c8w2jocytrqa4NgG+F
0uuzaTSgRrNI7d5hDFj/mRjfSoMMa4+/ZF0g2Hdf27ap0FFFb//4T0cgHO4P
DF9To8PWxTki/UUgKLF31ieo0xGjG5QkuBAIe+a23Xu06XjzNf/Gkl4QOk05
i4kmdJRFC04PVQehf6TLtsqFDlJif0Rp5RHI3a60pcXS4cc5mmxwPQQOPklp
pX/R4Sbh6ThWE4JJuyKVlz10WGeaSV9oC4Hwz5u0NjyjQyNZ/I/p0RAI0DML
iH46liJvd5RsDQUp7fZm0WE60ilTAhJZoWi/+6hLepaOoVTt1kVSGLo8BcUl
xPyw3vYm+tRY2Gf1SziPgx9Gv9S6aOw8ir/XG/t7tvthaqOkUyVvBPgbRR/W
KjFgFrXuSt/zSJh0Jc7LH2VAVkzmR173MVwt71fya2FARTLa5mxpNLIbcjI3
rjJQZbFcJl0aA+mi7jErI3+c7RLxtLt8EidvyG+dCPHH0+G9J57viUN4Z4m3
yGV/iIWcID/Tj0eKb1O3e4c/ZquZim+VElA1qSwqOOUP0Yzh5Xbl0zjkndYK
USbcJIuPL8snYnZVTLL+Vyb0nH6e3S90Bm6fBQSy7ZhwVdoQSt2YBLLxEH9o
ABMiZeVjSUtJYHnms2JPMfFxKI9X8L9kSKQuzIeymRC+Lr3LbSQFdeytDnm3
mHi0g3SgvussOI3Ue++amWjZOx881ZUKZNJPsnqZGFmeNWF1noONKWuKPsZE
biiHV6g6DdTmdH7ZL0xcONH9z+930uFotOqyg5+ACqmc/elqBgLuBetjE4Hh
m/28bUmZWLrcXk+RJ3DkxYHGqv3nkSrcxez4hcA9nahP5+rOg9/EW/q6IQGF
wRkNhz1ZyNLZ9mrQgoD7kJF/XmUWPh9t4JQ7ElDU+2UmU/kCjk5aUjo9CAgN
+McGF19As7aK+x5/Aq19rHX9MtlQ+J2kHRdM4JJcR86OS9nIJRYct0QR+Kmx
5bic9EWY2zO6peIIGNWmuxemXYR8rE28bAqBrOViIyFhNhKFLGWDzxOozU2T
4TnNxiXd00eGOdz907fa5i+ykSClfWY0n4B593zcjsgc8DzYSNa4TmAi4Eq1
3scc9EZMRdWXc+8fqhoxn8nh/n15+X6u+5w7hclzOTC6GPVwnutW408E60sO
Ur+xF3dXEMgXtd5a+T0HTgpVu65yTan7fFpVhIPX5Uevx1USeCRo5yaryUHx
yVsbLe4QaDxBS9ilxcFl1RsyNK6r5yJuG+pw0DI7oxjDdeFg4QZ3Aw6SLvvu
rOE6pnKhKXsfB8KxMwvKVQT0KMU7RRw5SPn2pI6vmoB6Vx15mzMHqhsXordz
rYTuOHUyByS+U3uNuBbbvTRo485BFbn8Bovrjz/sM5N8OdB9f9FxlOu34YxG
Np07v+rx9DeuByeOTZYwODhe4pcsfZfA42fXzNsCOODL7y534LrlQENY728c
KM4VGgZyfe9+z9U3QRyI8420nOG6XGvs6VwwB4lLKWZFXF8rXV5cC+Xgn8WC
B41c/w+ga4E2
        "]]},
      Annotation[#, "Charting`Private`Tag$4636761#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1500}, {0., 345.05276952687825`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.799528052128289*^9, 3.8023855635600557`*^9, 
  3.807130033219185*^9, 3.8089380897319117`*^9, 3.812392059568233*^9, 
  3.8125561312885933`*^9, 3.81266292579781*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"396ff05b-ed48-4b97-a249-a98af5887a00"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Some code to facilitate automatic plotting and legending (evaluate cell \
below):\
\>", "Subsubsection",
 CellChangeTimes->{{3.743259275347341*^9, 3.743259282934416*^9}, {
  3.7432795299050817`*^9, 3.743279530202558*^9}, {3.752261513828857*^9, 
  3.75226151720041*^9}},ExpressionUUID->"021ac460-bd3c-4cb3-b5f6-\
288559f9cd8f"],

Cell["\<\
Just lists of colors, plotmarkers, and dashing types, so that each experiment \
gets its own plot marker, color, and dashing type:\
\>", "Text",
 CellChangeTimes->{{3.773587336521021*^9, 
  3.773587371334206*^9}},ExpressionUUID->"cb27762c-1c3a-40c1-999d-\
e8c1c7a8df1b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xticks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "50"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"500", ",", "500"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5000", ",", "5000"}], "}"}]}], "}"}], ",", "None"}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xticks2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.01", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"50", ",", "50"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"500", ",", "500"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5000", ",", "5000"}], "}"}]}], "}"}], ",", "None"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorMap", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"datasetsIn", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "\[Rule]", 
       RowBox[{"ColorData", "[", 
        RowBox[{"24", ",", 
         RowBox[{"n", "-", "1"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "datasetsIn", "]"}]}], "}"}]}], "]"}], "]"}]}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMarkerList", "=", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["\[FilledCircle]",
       FontSize->16], ",", 
      StyleBox["\[EmptyCircle]",
       FontSize->16], ",", 
      StyleBox["\[FilledDiamond]",
       FontSize->16], ",", 
      StyleBox["\[EmptyDiamond]",
       FontSize->16], ",", 
      StyleBox["\[FilledSquare]",
       FontSize->16], ",", 
      StyleBox["\[EmptySquare]",
       FontSize->16], 
      StyleBox[",",
       FontSize->16], "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dashingList", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "0.05", "]"}], ",", 
      RowBox[{"Dashing", "[", "0.015", "]"}], ",", 
      RowBox[{"Dashing", "[", "0.03", "]"}], ",", "Dotted", ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dashingListLeg", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", 
      RowBox[{"0.05", "*", "5"}], "]"}], ",", 
     RowBox[{"Dashing", "[", 
      RowBox[{"0.015", "*", "5"}], "]"}], ",", 
     RowBox[{"Dashing", "[", 
      RowBox[{"0.03", "*", "5"}], "]"}], ",", "Dotted", ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}]}], "}"}]}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.7425914545432377`*^9, 3.742591667139607*^9}, {
   3.742591876339127*^9, 3.742592057294034*^9}, {3.742592101940528*^9, 
   3.742592102922435*^9}, {3.74259470067033*^9, 3.742594947309708*^9}, {
   3.742594998293972*^9, 3.7425950517686167`*^9}, {3.742599282752235*^9, 
   3.742599327709853*^9}, {3.7425994743294077`*^9, 3.742599554945395*^9}, {
   3.7426001964233418`*^9, 3.742600288525528*^9}, {3.742600359778319*^9, 
   3.742600360088299*^9}, {3.7426004416542273`*^9, 3.7426004693006887`*^9}, {
   3.742602596488267*^9, 3.742602614040298*^9}, {3.74265186592841*^9, 
   3.742651903840404*^9}, {3.7426519441063547`*^9, 3.742651967937471*^9}, {
   3.7426520018420353`*^9, 3.742652059768309*^9}, {3.7426524153652277`*^9, 
   3.7426524333003817`*^9}, {3.742652829032681*^9, 3.742652877657336*^9}, {
   3.7426553135035067`*^9, 3.742655380386664*^9}, 3.7426582629857197`*^9, {
   3.742658408798522*^9, 3.742658446764881*^9}, {3.742658477877447*^9, 
   3.742658608605546*^9}, {3.742658649243924*^9, 3.742658738744657*^9}, {
   3.74265893052599*^9, 3.742658935890411*^9}, {3.74265907520435*^9, 
   3.742659086632587*^9}, {3.7426592151964703`*^9, 3.7426592294294*^9}, {
   3.742659731527198*^9, 3.742659748126038*^9}, {3.7426598549966793`*^9, 
   3.7426600265383863`*^9}, {3.7426612480898943`*^9, 3.742661248788625*^9}, {
   3.74266133696312*^9, 3.742661341315137*^9}, {3.742661398768717*^9, 
   3.742661432442101*^9}, {3.7426615282275877`*^9, 3.74266153894592*^9}, {
   3.742661590295052*^9, 3.742661767162238*^9}, {3.742661807429188*^9, 
   3.742661824384169*^9}, {3.7426619313624973`*^9, 3.7426619335146523`*^9}, {
   3.7426619856947193`*^9, 3.742662030279921*^9}, {3.742662141508288*^9, 
   3.742662149925617*^9}, {3.742662269619837*^9, 3.742662272236483*^9}, {
   3.742662604672098*^9, 3.742662610341342*^9}, {3.742662659586391*^9, 
   3.742662662633902*^9}, {3.742682430573305*^9, 3.742682445339734*^9}, {
   3.7426886620039167`*^9, 3.7426887579525843`*^9}, {3.7426889077060757`*^9, 
   3.742688907933646*^9}, {3.74269501427703*^9, 3.742695014898448*^9}, {
   3.743092208886606*^9, 3.743092230662743*^9}, {3.743092898872183*^9, 
   3.743092903220434*^9}, {3.7430930811506777`*^9, 3.743093084883699*^9}, {
   3.743093175511035*^9, 3.743093299258327*^9}, {3.743093350118885*^9, 
   3.743093389193975*^9}, {3.743093471130022*^9, 3.743093521623749*^9}, {
   3.743093557176855*^9, 3.743093562880155*^9}, {3.743093619954481*^9, 
   3.743093638234531*^9}, {3.7430997863836727`*^9, 3.743099786799056*^9}, {
   3.743099900073164*^9, 3.7430999798299313`*^9}, {3.743102123304451*^9, 
   3.7431022303427258`*^9}, {3.7431023293052483`*^9, 3.743102391565547*^9}, {
   3.743102450169862*^9, 3.7431025240745983`*^9}, {3.743102630305284*^9, 
   3.743102636496277*^9}, {3.743108301191202*^9, 3.743108301495161*^9}, {
   3.743108422890047*^9, 3.743108433810557*^9}, {3.74310920181621*^9, 
   3.7431093156023073`*^9}, {3.743109467120476*^9, 3.743109512141564*^9}, {
   3.743109657914481*^9, 3.743109680100985*^9}, {3.743112231839115*^9, 
   3.7431122779886227`*^9}, {3.7431151745539637`*^9, 3.743115175313718*^9}, {
   3.743115342728895*^9, 3.743115491892744*^9}, {3.743115527313694*^9, 
   3.743115609625761*^9}, {3.743115946673133*^9, 3.743116094817903*^9}, {
   3.7431162145209227`*^9, 3.743116251165805*^9}, {3.743116380334476*^9, 
   3.743116403724792*^9}, {3.7431167103158913`*^9, 3.7431167126662617`*^9}, {
   3.7431170334152527`*^9, 3.743117052011339*^9}, {3.743117189976375*^9, 
   3.743117193142095*^9}, {3.743117275782197*^9, 3.743117298031682*^9}, {
   3.7431174433930807`*^9, 3.74311746755096*^9}, {3.7431175789674873`*^9, 
   3.743117625413801*^9}, {3.7431178652294807`*^9, 3.74311786666206*^9}, {
   3.743118051296143*^9, 3.7431180726965237`*^9}, {3.7431181037778597`*^9, 
   3.743118143637642*^9}, {3.743118392616659*^9, 3.74311840505999*^9}, {
   3.743123051218145*^9, 3.74312314955544*^9}, {3.743123224684244*^9, 
   3.743123325307993*^9}, {3.7431234674819508`*^9, 3.743123468902905*^9}, {
   3.743123511461581*^9, 3.743123591838922*^9}, {3.7431236402884502`*^9, 
   3.743123642277693*^9}, {3.74312374641459*^9, 3.743123766187716*^9}, {
   3.7431299751239843`*^9, 3.7431299848895283`*^9}, {3.7431766122141323`*^9, 
   3.743176617037027*^9}, {3.743176650872867*^9, 3.743176659389782*^9}, {
   3.743176898400235*^9, 3.743176925707369*^9}, {3.7431771139278717`*^9, 
   3.7431771428665333`*^9}, {3.743177222373611*^9, 3.7431772290067472`*^9}, {
   3.743177308414366*^9, 3.743177322132492*^9}, {3.743181660263192*^9, 
   3.743181661132303*^9}, {3.743181758621511*^9, 3.7431817662689962`*^9}, 
   3.7431820350895452`*^9, {3.7431821040943317`*^9, 3.743182194870325*^9}, {
   3.7431823613391848`*^9, 3.743182366373357*^9}, 3.743182482493999*^9, {
   3.743182601118969*^9, 3.743182605445724*^9}, {3.743190020792959*^9, 
   3.7431900348742037`*^9}, {3.7432581820593224`*^9, 3.743258234007949*^9}, {
   3.743258284229611*^9, 3.7432582894141903`*^9}, {3.743258338292344*^9, 
   3.7432585204879303`*^9}, {3.7432592345976763`*^9, 3.743259235134859*^9}, 
   3.743259289584239*^9, {3.74328204539364*^9, 3.743282051228516*^9}, {
   3.743282111197918*^9, 3.743282134805197*^9}, {3.773498304829896*^9, 
   3.773498306773699*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"df7e5296-d58d-4718-b45e-05cda971797d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"190407_S3_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.8941176470588236, 0.7098039215686275, 0.7490196078431373], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5960784313725491, 0.473202614379085, 0.4993464052287582],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.8941176470588236`", ",", "0.7098039215686275`", ",", 
            "0.7490196078431373`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.8941176470588236, 0.7098039215686275, 0.7490196078431373]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.8941176470588236, 0.7098039215686275, 0.7490196078431373],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"181119_S2_d2_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6143790849673203, 0.3294117647058824, 0.28758169934640526`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.9215686274509803`", ",", "0.49411764705882355`", ",", 
            "0.43137254901960786`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`],
     
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"180614_S3_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 0.7215686274509804, 0.2196078431372549], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666667, 0.48104575163398694`, 0.14640522875816994`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"1.`", ",", "0.7215686274509804`", ",", 
            "0.2196078431372549`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1., 0.7215686274509804, 0.2196078431372549]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1., 0.7215686274509804, 0.2196078431372549],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"180614_S2_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.9490196078431372, 0.8627450980392157, 0.43529411764705883`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6326797385620915, 0.5751633986928105, 0.2901960784313726],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.9490196078431372`", ",", "0.8627450980392157`", ",", 
            "0.43529411764705883`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.9490196078431372, 0.8627450980392157, 0.43529411764705883`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.9490196078431372, 0.8627450980392157, 0.43529411764705883`],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"180225_S2_d2_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.6705882352941176, 0.8784313725490196, 0.9372549019607843], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.44705882352941173`, 0.5856209150326798, 0.6248366013071895],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.6705882352941176`", ",", "0.8784313725490196`", ",", 
            "0.9372549019607843`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.6705882352941176, 0.8784313725490196, 0.9372549019607843]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.6705882352941176, 0.8784313725490196, 0.9372549019607843],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"180302_S2_d3_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.3176470588235294, 0.6549019607843137, 0.7529411764705882], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.21176470588235294`, 0.4366013071895425, 0.5019607843137255],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.3176470588235294`", ",", "0.6549019607843137`", ",", 
            "0.7529411764705882`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.3176470588235294, 0.6549019607843137, 0.7529411764705882]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.3176470588235294, 0.6549019607843137, 0.7529411764705882],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"180402_S4_d3_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.12941176470588237`, 0.5176470588235295, 0.6313725490196078], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.08627450980392158, 0.3450980392156863, 0.42091503267973857`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.12941176470588237`", ",", "0.5176470588235295`", ",", 
            "0.6313725490196078`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.12941176470588237`, 0.5176470588235295, 0.6313725490196078]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.12941176470588237`, 0.5176470588235295, 0.6313725490196078],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"180522_S3_d2_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.09019607843137255, 0.33725490196078434`, 0.49411764705882355`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.06013071895424837, 0.22483660130718958`, 0.3294117647058824],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.09019607843137255`", ",", "0.33725490196078434`", ",", 
            "0.49411764705882355`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.09019607843137255, 0.33725490196078434`, 0.49411764705882355`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.09019607843137255, 0.33725490196078434`, 0.49411764705882355`],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"190205_S3_d1_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.7058823529411765, 0.49411764705882355`, 0.5450980392156862], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.4705882352941177, 0.3294117647058824, 0.3633986928104575],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.7058823529411765`", ",", "0.49411764705882355`", ",", 
            "0.5450980392156862`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.7058823529411765, 0.49411764705882355`, 0.5450980392156862]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.7058823529411765, 0.49411764705882355`, 0.5450980392156862],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"180528_S3_d1_cMUP_1_ValScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.5333333333333333, 0.23529411764705882`, 0.3058823529411765], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.35555555555555557`, 0.1568627450980392, 0.203921568627451],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.5333333333333333`", ",", "0.23529411764705882`", ",", 
            "0.3058823529411765`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.5333333333333333, 0.23529411764705882`, 0.3058823529411765]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.5333333333333333, 0.23529411764705882`, 0.3058823529411765],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"180531_S2_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.8941176470588236, 0.7098039215686275, 0.7490196078431373], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5960784313725491, 0.473202614379085, 0.4993464052287582],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.8941176470588236`", ",", "0.7098039215686275`", ",", 
            "0.7490196078431373`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.8941176470588236, 0.7098039215686275, 0.7490196078431373]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.8941176470588236, 0.7098039215686275, 0.7490196078431373],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"190506_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6143790849673203, 0.3294117647058824, 0.28758169934640526`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.9215686274509803`", ",", "0.49411764705882355`", ",", 
            "0.43137254901960786`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`],
     
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"190626_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 0.7215686274509804, 0.2196078431372549], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666667, 0.48104575163398694`, 0.14640522875816994`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"1.`", ",", "0.7215686274509804`", ",", 
            "0.2196078431372549`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1., 0.7215686274509804, 0.2196078431372549]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1., 0.7215686274509804, 0.2196078431372549],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"190630_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.9490196078431372, 0.8627450980392157, 0.43529411764705883`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6326797385620915, 0.5751633986928105, 0.2901960784313726],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.9490196078431372`", ",", "0.8627450980392157`", ",", 
            "0.43529411764705883`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.9490196078431372, 0.8627450980392157, 0.43529411764705883`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.9490196078431372, 0.8627450980392157, 0.43529411764705883`],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"190609_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.6705882352941176, 0.8784313725490196, 0.9372549019607843], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.44705882352941173`, 0.5856209150326798, 0.6248366013071895],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{
           "0.6705882352941176`", ",", "0.8784313725490196`", ",", 
            "0.9372549019607843`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.6705882352941176, 0.8784313725490196, 0.9372549019607843]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.6705882352941176, 0.8784313725490196, 0.9372549019607843],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"191128_S2_d3_cMUP_1_SlowestChip.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.3176470588235294, 0.6549019607843137, 0.7529411764705882], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.21176470588235294`, 0.4366013071895425, 0.5019607843137255],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.3176470588235294`", ",", "0.6549019607843137`", ",", 
            "0.7529411764705882`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.3176470588235294, 0.6549019607843137, 0.7529411764705882]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.3176470588235294, 0.6549019607843137, 0.7529411764705882],
     Editable->False,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.799528058039534*^9, 3.802385572012789*^9, 
  3.807130040239812*^9, 3.8089380944375963`*^9, 3.812392069266327*^9, 
  3.812556135266243*^9, 3.812662928846909*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"2e2e7728-0b23-41d6-9a76-0c53cbc15839"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expIndexAssociation", "=", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\"\<190407_S3_d1_cMUP_1_GlyScan.csv\>\"", "\[Rule]", "1"}], ",", 
    
    RowBox[{"\"\<181119_S2_d2_cMUP_1_GlyScan.csv\>\"", "\[Rule]", "2"}], ",", 
    
    RowBox[{"\"\<180614_S3_d1_cMUP_1_GlyScan.csv\>\"", "\[Rule]", "3"}], ",", 
    
    RowBox[{"\"\<180614_S2_d1_cMUP_1_GlyScan.csv\>\"", "\[Rule]", "4"}], ",", 
    
    RowBox[{"\"\<180225_S2_d2_cMUP_1_ValScan.csv\>\"", "\[Rule]", "5"}], ",", 
    
    RowBox[{"\"\<180302_S2_d3_cMUP_1_ValScan.csv\>\"", "\[Rule]", "6"}], ",", 
    
    RowBox[{"\"\<180402_S4_d3_cMUP_1_ValScan.csv\>\"", "\[Rule]", "7"}], ",", 
    
    RowBox[{"\"\<180522_S3_d2_cMUP_1_ValScan.csv\>\"", "\[Rule]", "8"}], ",", 
    
    RowBox[{"\"\<190205_S3_d1_cMUP_1_ValScan.csv\>\"", "\[Rule]", "9"}], ",", 
    
    RowBox[{"\"\<180528_S3_d1_cMUP_1_ValScan.csv\>\"", "\[Rule]", "10"}], ",", 
    RowBox[{"\"\<180531_S2_d1_cMUP_1_GlyScan.csv\>\"", "\[Rule]", "11"}], ",", 
    RowBox[{"\"\<190506_S2_d1_cMUP_1_SlowChip.csv\>\"", "\[Rule]", "12"}], 
    ",", 
    RowBox[{"\"\<190626_S2_d1_cMUP_1_SlowChip.csv\>\"", "\[Rule]", "13"}], 
    ",", 
    RowBox[{"\"\<190630_S2_d1_cMUP_1_SlowChip.csv\>\"", "\[Rule]", "14"}], 
    ",", 
    RowBox[{"\"\<190609_S2_d1_cMUP_1_SlowChip.csv\>\"", "\[Rule]", "15"}], 
    ",", 
    RowBox[{
    "\"\<191128_S2_d3_cMUP_1_SlowestChip.csv\>\"", "\[Rule]", "16"}]}], 
   "\[RightAssociation]"}]}]], "Input",
 CellChangeTimes->{{3.7813692127122393`*^9, 3.78136922038372*^9}, {
   3.784348571843069*^9, 3.784348573981441*^9}, 3.8125561364086123`*^9, {
   3.8126629606251793`*^9, 3.8126630195849237`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"4680a564-2fe1-4cb3-b851-4ab7bf0dd501"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"190407_S3_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"181119_S2_d2_cMUP_1_GlyScan.csv\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"180614_S3_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"180614_S2_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"180225_S2_d2_cMUP_1_ValScan.csv\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"180302_S2_d3_cMUP_1_ValScan.csv\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"180402_S4_d3_cMUP_1_ValScan.csv\"\>", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"180522_S3_d2_cMUP_1_ValScan.csv\"\>", "\[Rule]", "8"}], ",", 
   RowBox[{"\<\"190205_S3_d1_cMUP_1_ValScan.csv\"\>", "\[Rule]", "9"}], ",", 
   RowBox[{"\<\"180528_S3_d1_cMUP_1_ValScan.csv\"\>", "\[Rule]", "10"}], ",", 
   
   RowBox[{"\<\"180531_S2_d1_cMUP_1_GlyScan.csv\"\>", "\[Rule]", "11"}], ",", 
   
   RowBox[{"\<\"190506_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", "12"}], ",", 
   RowBox[{"\<\"190626_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"190630_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", "14"}], ",", 
   RowBox[{"\<\"190609_S2_d1_cMUP_1_SlowChip.csv\"\>", "\[Rule]", "15"}], ",", 
   RowBox[{"\<\"191128_S2_d3_cMUP_1_SlowestChip.csv\"\>", "\[Rule]", "16"}]}],
   "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.799528058166697*^9, 3.8023855736342382`*^9, 
  3.8071300416306143`*^9, 3.808938094514886*^9, 3.812392070982072*^9, 
  3.812556138374667*^9, 3.812662928912479*^9, 3.812663019779563*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"41a6a2be-2d6e-4736-a3c1-e5ea93bc5009"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Bootstrap functions (for ",
 StyleBox["p",
  FontSlant->"Italic"],
 "-value calculation and parameter error estimates) (evaluate hidden cell \
below):"
}], "Subsubsection",
 CellChangeTimes->{{3.747071301233356*^9, 3.747071304996008*^9}, {
  3.752261806906311*^9, 
  3.7522618541426287`*^9}},ExpressionUUID->"e981d834-d9fa-4ff6-9031-\
b5e8ce40e5f2"],

Cell["\<\
'bsMedian' returns p-values for the following parameters, in the same order: \
{kcat, KM, kcat/KM}\
\>", "Text",
 CellChangeTimes->{{3.747071318361149*^9, 3.7470713560258427`*^9}, {
  3.75304762036412*^9, 
  3.75304762239002*^9}},ExpressionUUID->"5c1159f1-8dc4-4695-b725-\
c310f1a2c051"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<HypothesisTesting`\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsMedianIteration", "[", 
    RowBox[{"mutantKIswithCIs_", ",", "wtIn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sample", ",", "tobs", ",", "bs1", ",", "bs2", ",", "tstar", ",", 
       "weightedMean", ",", "weightedWTMean", ",", "wtRS", ",", "mutRS"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"wtRS", "=", 
       RowBox[{"median2", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"wtIn", ",", "mutantKIswithCIs"}], "]"}], ",", 
          RowBox[{"Length", "[", "wtIn", "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mutRS", "=", 
       RowBox[{"median2", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"wtIn", ",", "mutantKIswithCIs"}], "]"}], ",", 
          RowBox[{"Length", "[", "mutantKIswithCIs", "]"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tstar", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"mutRS", "-", "wtRS"}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsMedian", "[", 
    RowBox[{"mutantKIswithCIs_", ",", "wtIn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sample", ",", "tobs", ",", "bs1", ",", "bs2", ",", "tstar", ",", 
       "weightedMean", ",", "weightedWTMean", ",", "wtRS", ",", "mutRS", ",", 
       "checkpoint1", ",", "checkpoint2", ",", "checkpoint3"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"weightedMean", "=", 
       RowBox[{"median2", "[", "mutantKIswithCIs", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "weightedMean", "]"}], "\[Equal]", "Median"}], 
        ",", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{
           "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
            "Indeterminate"}], "}"}], "]"}], ";", 
         RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"weightedWTMean", "=", 
       RowBox[{"median2", "[", "wtIn", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tobs", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"(", 
         RowBox[{"weightedMean", "-", "weightedWTMean"}], ")"}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tstar", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"bsMedianIteration", "[", 
          RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
         RowBox[{"{", "100", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"calculate", " ", "for", " ", "kcat"}], ",", " ", "Km", ",", 
        " ", 
        RowBox[{"and", " ", 
         RowBox[{"kcat", "/", "Km"}], " ", "simultaneously", " ", "for", " ", 
         "speed"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"checkpoint1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"tstar", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", ">", 
                RowBox[{"tobs", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], "/",
            "100"}], "*", "1.0"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ">", "0.1"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "checkpoint1", "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tstar", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"bsMedianIteration", "[", 
             RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
            RowBox[{"{", "1000", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"checkpoint2", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"tstar", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", ">", 
                   RowBox[{"tobs", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], 
              "/", "1000"}], "*", "1.0"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "4", "]"}], "]"}], ">", "0.01"}]}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "checkpoint2", "]"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tstar", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"bsMedianIteration", "[", 
                RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
               RowBox[{"{", "numStatsBootstraps", "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"checkpoint3", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"tstar", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", ">", 
                    RowBox[{"tobs", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], 
                 "/", "numStatsBootstraps"}], "*", "1.0"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "checkpoint3", "]"}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsMeanIteration", "[", 
    RowBox[{"mutantKIswithCIs_", ",", "wtIn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sample", ",", "tobs", ",", "bs1", ",", "bs2", ",", "tstar", ",", 
       "weightedMean", ",", "weightedWTMean", ",", "wtRS", ",", "mutRS"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"wtRS", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"wtIn", ",", "mutantKIswithCIs"}], "]"}], ",", 
          RowBox[{"Length", "[", "wtIn", "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mutRS", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"wtIn", ",", "mutantKIswithCIs"}], "]"}], ",", 
          RowBox[{"Length", "[", "mutantKIswithCIs", "]"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tstar", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"mutRS", "-", "wtRS"}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsMean", "[", 
    RowBox[{"mutantKIswithCIs_", ",", "wtIn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sample", ",", "tobs", ",", "bs1", ",", "bs2", ",", "tstar", ",", 
       "weightedMean", ",", "weightedWTMean", ",", "wtRS", ",", "mutRS", ",", 
       "checkpoint1", ",", "checkpoint2", ",", "checkpoint3"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"weightedMean", "=", 
       RowBox[{"Mean", "[", "mutantKIswithCIs", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"weightedWTMean", "=", 
       RowBox[{"Mean", "[", "wtIn", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tobs", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"(", 
         RowBox[{"weightedMean", "-", "weightedWTMean"}], ")"}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tstar", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"bsMeanIteration", "[", 
          RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
         RowBox[{"{", "100", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"calculate", " ", "for", " ", "kcat"}], ",", " ", "Km", ",", 
        " ", 
        RowBox[{"and", " ", 
         RowBox[{"kcat", "/", "Km"}], " ", "simultaneously", " ", "for", " ", 
         "speed"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"checkpoint1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"tstar", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", ">", 
                RowBox[{"tobs", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], "/",
            "100"}], "*", "1.0"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ">", "0.1"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "checkpoint1", "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tstar", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"bsMeanIteration", "[", 
             RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
            RowBox[{"{", "1000", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"checkpoint2", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"tstar", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", ">", 
                   RowBox[{"tobs", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], 
              "/", "1000"}], "*", "1.0"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "4", "]"}], "]"}], ">", "0.01"}]}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "checkpoint2", "]"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tstar", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"bsMeanIteration", "[", 
                RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
               RowBox[{"{", "numStatsBootstraps", "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"checkpoint3", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"tstar", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", ">", 
                    RowBox[{"tobs", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], 
                 "/", "numStatsBootstraps"}], "*", "1.0"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "checkpoint3", "]"}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"function", " ", "for", " ", "bootstrapping", " ", "residuals"}], 
    " ", "-", " ", 
    RowBox[{
    "to", " ", "get", " ", "parameter", " ", "estimate", " ", "errors"}]}], 
   " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsResidual", "[", 
    RowBox[{"fitModel_", ",", "numBootstraps_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "model", ",", "data", ",", "residuals", ",", "bootstraps", ",", 
       "concentrations", ",", "reshuffled", ",", "newData", ",", "newFit", 
       ",", "newParams"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "extract", " ", "input", " ", "experimental", " ", "data", " ", "from", 
       " ", "FittedModel"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"model", "=", "fitModel"}], ";", "\[IndentingNewLine]", 
      RowBox[{"data", "=", 
       RowBox[{"model", "[", "\"\<Data\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"extract", " ", "residuals"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"residuals", "=", 
       RowBox[{"model", "[", "\"\<FitResiduals\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "reshuffle", " ", "residuals", " ", "and", " ", "bootstrap", " ", 
        RowBox[{"(", "looped", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"bootstraps", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"concentrations", "=", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"reshuffled", "=", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{"residuals", ",", 
             RowBox[{"Length", "[", "residuals", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"newData", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"concentrations", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"model", "[", 
                 RowBox[{"concentrations", "[", 
                  RowBox[{"[", "n", "]"}], "]"}], "]"}], "+", 
                RowBox[{"reshuffled", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", "concentrations", "]"}]}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"newFit", "=", 
           RowBox[{"NonlinearModelFit", "[", 
            RowBox[{"newData", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Vmax", "*", 
                RowBox[{"substrate", "/", 
                 RowBox[{"(", 
                  RowBox[{"KM", "+", "substrate"}], ")"}]}]}], ",", 
               RowBox[{
                RowBox[{"KM", ">", "0"}], "&&", 
                RowBox[{"Vmax", ">", "0"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Vmax", ",", "KM"}], "}"}], ",", "substrate"}], "]"}]}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"newParams", "=", 
           RowBox[{"newFit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Vmax", "/.", "newParams"}], ",", 
            RowBox[{"KM", "/.", "newParams"}]}], "}"}]}], ",", 
         RowBox[{"{", "numBootstraps", "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsStdDevIteration", "[", 
    RowBox[{"mutantKIswithCIs_", ",", "wtIn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sample", ",", "tobs", ",", "bs1", ",", "bs2", ",", "tstar", ",", 
       "weightedMean", ",", "weightedWTMean", ",", "wtRS", ",", "mutRS"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"wtRS", "=", 
       RowBox[{"StandardDeviation", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"wtIn", ",", "mutantKIswithCIs"}], "]"}], ",", 
          RowBox[{"Length", "[", "wtIn", "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mutRS", "=", 
       RowBox[{"StandardDeviation", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"wtIn", ",", "mutantKIswithCIs"}], "]"}], ",", 
          RowBox[{"Length", "[", "mutantKIswithCIs", "]"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tstar", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"mutRS", "-", "wtRS"}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsStdDev", "[", 
    RowBox[{"mutantKIswithCIs_", ",", "wtIn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sample", ",", "tobs", ",", "bs1", ",", "bs2", ",", "tstar", ",", 
       "weightedMean", ",", "weightedWTMean", ",", "wtRS", ",", "mutRS", ",", 
       "checkpoint1", ",", "checkpoint2", ",", "checkpoint3"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"weightedMean", "=", 
       RowBox[{"StandardDeviation", "[", "mutantKIswithCIs", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "weightedMean", "]"}], "\[Equal]", 
         "StandardDeviation"}], ",", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{
           "Indeterminate", ",", "Indeterminate", ",", "Indeterminate"}], 
           "}"}], "]"}], ";", 
         RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"weightedWTMean", "=", 
       RowBox[{"StandardDeviation", "[", "wtIn", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tobs", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"(", 
         RowBox[{"weightedMean", "-", "weightedWTMean"}], ")"}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tstar", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"bsStdDevIteration", "[", 
          RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
         RowBox[{"{", "100", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"calculate", " ", "for", " ", "kcat"}], ",", " ", "Km", ",", 
        " ", 
        RowBox[{"and", " ", 
         RowBox[{"kcat", "/", "Km"}], " ", "simultaneously", " ", "for", " ", 
         "speed"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"checkpoint1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"tstar", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", ">", 
                RowBox[{"tobs", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], "/",
            "100"}], "*", "1.0"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ">", "0.1"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "checkpoint1", "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tstar", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"bsStdDevIteration", "[", 
             RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
            RowBox[{"{", "1000", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"checkpoint2", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"tstar", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", ">", 
                   RowBox[{"tobs", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], 
              "/", "1000"}], "*", "1.0"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ">", "0.01"}]}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "checkpoint2", "]"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tstar", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"bsStdDevIteration", "[", 
                RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
               RowBox[{"{", "numStatsBootstraps", "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"checkpoint3", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"tstar", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", ">", 
                    RowBox[{"tobs", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], 
                 "/", "numStatsBootstraps"}], "*", "1.0"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "checkpoint3", "]"}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorPVal", "[", 
   RowBox[{"pvalue_", ",", "cutoff_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"pvalue", "\[NotEqual]", "\"\<N/A\>\""}], ",", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"pvalue", "<", "cutoff"}], "&&", 
       RowBox[{"pvalue", "\[NotEqual]", "0."}]}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "pvalue", "]"}], ",", "Bold", ",", 
        RowBox[{"ColorData", "[", 
         RowBox[{"20", ",", "8"}], "]"}]}], "]"}], ",", 
      RowBox[{"pvalue", "\[Equal]", "0."}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<<\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"1.0", "/", "numStatsBootstraps"}], "]"}]}], ",", "Bold", 
        ",", 
        RowBox[{"ColorData", "[", 
         RowBox[{"20", ",", "8"}], "]"}]}], "]"}], ",", 
      RowBox[{"pvalue", "\[GreaterEqual]", "cutoff"}], ",", 
      RowBox[{"ToString", "[", "pvalue", "]"}]}], "]"}], ",", "\"\<N/A\>\""}],
    "]"}]}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.747071312931332*^9, 3.747071315688757*^9}, {
   3.747072094835073*^9, 3.747072121825633*^9}, {3.7470721613021317`*^9, 
   3.747072161473365*^9}, {3.747072452202002*^9, 3.747072477377877*^9}, {
   3.747075812139269*^9, 3.747075823354884*^9}, {3.747077267115733*^9, 
   3.747077267554206*^9}, {3.7476634825316*^9, 3.747663524953813*^9}, {
   3.7476651939446774`*^9, 3.7476652296610327`*^9}, 3.747665582999374*^9, {
   3.7476656190157137`*^9, 3.7476657008126087`*^9}, {3.7476691599789867`*^9, 
   3.747669161431737*^9}, {3.7522628113254137`*^9, 3.7522628231152687`*^9}, {
   3.752262862685484*^9, 3.752262885289198*^9}, {3.752263082209503*^9, 
   3.7522630834158497`*^9}, {3.752263219885839*^9, 3.752263245446314*^9}, {
   3.752285294140671*^9, 3.752285325337244*^9}, {3.752338751729974*^9, 
   3.7523387702503777`*^9}, {3.7523388275364733`*^9, 3.752338835717732*^9}, {
   3.75233887145965*^9, 3.7523388735063257`*^9}, {3.773448117875702*^9, 
   3.773448121391088*^9}, {3.7737859801785727`*^9, 3.773785986879698*^9}, {
   3.774126487741969*^9, 3.774126489369727*^9}, {3.774126600635477*^9, 
   3.774126603179907*^9}, {3.774191421376882*^9, 3.7741914308971786`*^9}, {
   3.774200738318223*^9, 3.774200802029101*^9}, {3.7742009056402893`*^9, 
   3.774200915480854*^9}, {3.774201239051526*^9, 3.774201240466277*^9}, {
   3.774201273047916*^9, 3.774201289123909*^9}, {3.77435605293355*^9, 
   3.774356060870812*^9}, {3.7743631966547813`*^9, 3.774363207735347*^9}, {
   3.774380063731043*^9, 3.774380085888908*^9}, {3.774916730392088*^9, 
   3.774916738805901*^9}, {3.7843196963701057`*^9, 3.784319726445236*^9}, {
   3.788022497744402*^9, 3.788022542231883*^9}, {3.788022835705707*^9, 
   3.788022851552636*^9}, {3.78813269732345*^9, 3.788132697893067*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"a7fdf72f-207a-473f-8eaf-4679990b057c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Function for statistical analysis, make aggregate plots, and output a \
dataset with aggregate plots, kinetic parameters, ",
 StyleBox["p",
  FontSlant->"Italic"],
 "-values etc. (evaluate hidden cell below):"
}], "Subsubsection",
 CellChangeTimes->{{3.747071301233356*^9, 3.747071304996008*^9}, {
  3.752261806906311*^9, 
  3.752261936370757*^9}},ExpressionUUID->"9e931598-c082-4f4b-985c-\
14f7e72c9cbf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "association", " ", "containing", " ", "expression", " ", "numbers"}], 
    ",", " ", 
    RowBox[{"applied", " ", "to", " ", "1000", 
     RowBox[{"uM", " ", "[", "cMUP", "]"}], " ", "only"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"allData", "=", 
     RowBox[{"Join", "@@", "datasets"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"highestSonly", "=", 
     RowBox[{"allData", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#ExpIndex", "\[Equal]", "1"}], "&"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allGroupedByMutantFast", "=", 
     RowBox[{
      RowBox[{"highestSonly", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowChip\>\""}], "&&", 
          RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowestChip\>\""}]}], 
         "&"}], "]"}], "]"}], "[", 
      RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allGroupedByMutantSlow", "=", 
     RowBox[{
      RowBox[{"highestSonly", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#ChipType", "\[Equal]", "\"\<SlowChip\>\""}], "&"}], "]"}], 
       "]"}], "[", 
      RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allGroupedByMutantSlowest", "=", 
     RowBox[{
      RowBox[{"highestSonly", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#ChipType", "\[Equal]", "\"\<SlowestChip\>\""}], "&"}], 
        "]"}], "]"}], "[", 
      RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"expressionDataFast", "=", 
     RowBox[{"Association", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"allGroupedByMutantFast", "[", 
          RowBox[{"mut", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"allGroupedByMutantFast", "[", "mut", "]"}], "]"}], ",", 
           RowBox[{"Length", "[", 
            RowBox[{
             RowBox[{"allGroupedByMutantFast", "[", "mut", "]"}], "[", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"#EnzymeConc", ">", "0.3"}], "&"}], "]"}], "]"}], 
            "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
               RowBox[{"allGroupedByMutantFast", "[", "mut", "]"}], "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"#EnzymeConc", ">", "0.3"}], "&"}], "]"}], "]"}], 
              "]"}], "/", 
             RowBox[{"Length", "[", 
              RowBox[{"allGroupedByMutantFast", "[", "mut", "]"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{"allGroupedByMutantFast", "[", "mut", "]"}], "[", 
             RowBox[{"All", ",", "\"\<EnzymeConc\>\""}], "]"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"mut", ",", "1", ",", 
          RowBox[{"Length", "[", "allGroupedByMutantFast", "]"}]}], "}"}]}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"expressionDataSlow", "=", 
     RowBox[{"Association", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"allGroupedByMutantSlow", "[", 
          RowBox[{"mut", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"allGroupedByMutantSlow", "[", "mut", "]"}], "]"}], ",", 
           RowBox[{"Length", "[", 
            RowBox[{
             RowBox[{"allGroupedByMutantSlow", "[", "mut", "]"}], "[", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"#EnzymeConc", ">", "0.3"}], "&"}], "]"}], "]"}], 
            "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
               RowBox[{"allGroupedByMutantSlow", "[", "mut", "]"}], "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"#EnzymeConc", ">", "0.3"}], "&"}], "]"}], "]"}], 
              "]"}], "/", 
             RowBox[{"Length", "[", 
              RowBox[{"allGroupedByMutantSlow", "[", "mut", "]"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{"allGroupedByMutantSlow", "[", "mut", "]"}], "[", 
             RowBox[{"All", ",", "\"\<EnzymeConc\>\""}], "]"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"mut", ",", "1", ",", 
          RowBox[{"Length", "[", "allGroupedByMutantSlow", "]"}]}], "}"}]}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"expressionDataSlowest", "=", 
     RowBox[{"Association", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"allGroupedByMutantSlowest", "[", 
          RowBox[{"mut", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"allGroupedByMutantSlowest", "[", "mut", "]"}], "]"}], 
           ",", 
           RowBox[{"Length", "[", 
            RowBox[{
             RowBox[{"allGroupedByMutantSlowest", "[", "mut", "]"}], "[", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"#EnzymeConc", ">", "0.3"}], "&"}], "]"}], "]"}], 
            "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
               RowBox[{"allGroupedByMutantSlowest", "[", "mut", "]"}], "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"#EnzymeConc", ">", "0.3"}], "&"}], "]"}], "]"}], 
              "]"}], "/", 
             RowBox[{"Length", "[", 
              RowBox[{"allGroupedByMutantSlowest", "[", "mut", "]"}], "]"}]}],
             "]"}], ",", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{"allGroupedByMutantSlowest", "[", "mut", "]"}], "[", 
             RowBox[{"All", ",", "\"\<EnzymeConc\>\""}], "]"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"mut", ",", "1", ",", 
          RowBox[{"Length", "[", "allGroupedByMutantSlowest", "]"}]}], 
         "}"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "WT", " ", "fast", " ", "and", " ", "slow", " ", "chip", " ", "data", " ",
      "separated"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sortedWTbyChipType", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"groupedbyMutant", "[", "\"\<WT\>\"", "]"}], "[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<UniqueExptID\>\"", ",", "\"\<ChipType\>\"", ",", "kcatKey", ",",
           "KmKey"}], "}"}]}], "]"}], "[", 
      RowBox[{"GroupBy", "[", "\"\<ChipType\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fastChipDataWT", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", 
          RowBox[{"normalizationData", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", 
            RowBox[{"normalizationData", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ")"}], "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ")"}]}]}], "}"}], "&"}], "/@", 
      RowBox[{"Values", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"sortedWTbyChipType", "[", 
           RowBox[{"\"\<GlyScan\>\"", ",", "All", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<UniqueExptID\>\"", ",", "kcatKey", ",", "KmKey"}], 
             "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"Normal", "[", 
          RowBox[{"sortedWTbyChipType", "[", 
           RowBox[{"\"\<ValScan\>\"", ",", "All", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<UniqueExptID\>\"", ",", "kcatKey", ",", "KmKey"}], 
             "}"}]}], "]"}], "]"}]}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slowChipDataWT", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", 
          RowBox[{"normalizationData", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", 
            RowBox[{"normalizationData", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ")"}], "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ")"}]}]}], "}"}], "&"}], "/@", 
      RowBox[{"Values", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{"sortedWTbyChipType", "[", 
         RowBox[{"\"\<SlowChip\>\"", ",", "All", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<UniqueExptID\>\"", ",", "kcatKey", ",", "KmKey"}], 
           "}"}]}], "]"}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"no", " ", "WT", " ", "on", " ", "Slowest", " ", "Chip"}], " ", 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"determine", " ", "the", " ", "per"}], "-", 
     RowBox[{
     "chip", " ", "replacement", " ", "value", " ", "for", " ", "negative", 
      " ", "kobs", " ", 
      RowBox[{"(", "limit", ")"}], " ", "values"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"ALSO", " ", "ADD", " ", "INDEX", " ", "of", " ", 
      RowBox[{"LOWEST", " ", "[", "S", "]"}], " ", "EXPT"}], " ", "-", " ", 
     RowBox[{"important", " ", "for", " ", "MeP"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"groupedByExptSlowOnly", "=", 
     RowBox[{"slow", "[", 
      RowBox[{"GroupBy", "[", "\"\<UniqueExptID\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kobsLimitReplacementValues", "=", 
     RowBox[{"Association", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"groupedByExptSlowOnly", "[", 
          RowBox[{"expt", ",", "1", ",", "\"\<UniqueExptID\>\""}], "]"}], "->", 
         RowBox[{"Median", "[", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{
                 RowBox[{"groupedByExptSlowOnly", "[", 
                  RowBox[{"expt", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"normalizationData", "[", 
                  RowBox[{"groupedByExptSlowOnly", "[", 
                   RowBox[{"expt", ",", "1", ",", "\"\<UniqueExptID\>\""}], 
                   "]"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"Normal", "[", 
                   RowBox[{
                    RowBox[{"groupedByExptSlowOnly", "[", 
                    RowBox[{
                    "expt", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], ")"}], 
                 "*", 
                 RowBox[{
                  RowBox[{"Normal", "[", 
                   RowBox[{"groupedByExptSlowOnly", "[", 
                    RowBox[{"expt", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}],
                     "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "*", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "9"}]}]}], ")"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"groupedByExptSlowOnly", "[", "expt", "]"}], "]"}]}],
                "}"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"expt", ",", "1", ",", 
          RowBox[{"Length", "[", "groupedByExptSlowOnly", "]"}]}], "}"}]}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"allkcatKMPerExpt", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"groupedByExpt", "[", 
                 RowBox[{"expt", ",", "n", ",", "kcatKey"}], "]"}], "]"}], 
               "/", 
               RowBox[{"normalizationData", "[", 
                RowBox[{"groupedByExpt", "[", 
                 RowBox[{"expt", ",", "1", ",", "\"\<UniqueExptID\>\""}], 
                 "]"}], "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"groupedByExpt", "[", 
                RowBox[{"expt", ",", "n", ",", "KmKey"}], "]"}], "*", 
               RowBox[{"10", "^", 
                RowBox[{"-", "6"}]}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"groupedByExpt", "[", "expt", "]"}], "]"}]}], "}"}]}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{"#1", "<", "#2"}], "&"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"expt", ",", "1", ",", 
          RowBox[{"Length", "[", "groupedByExpt", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"allkcatKmLengths", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], "&"}], "/@", 
       "allkcatKMPerExpt"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"kobsLimitReplacementValues", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"groupedByExpt", "[", 
           RowBox[{"expt", ",", "1", ",", "\"\<UniqueExptID\>\""}], "]"}], 
          "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Round", "[", 
              RowBox[{
               RowBox[{"allkcatKmLengths", "[", 
                RowBox[{"[", "expt", "]"}], "]"}], "*", "0.01"}], "]"}], "<", 
             "3"}], ",", 
            RowBox[{"Median", "[", 
             RowBox[{
              RowBox[{"allkcatKMPerExpt", "[", 
               RowBox[{"[", "expt", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"Median", "[", 
             RowBox[{
              RowBox[{"allkcatKMPerExpt", "[", 
               RowBox[{"[", "expt", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", 
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{"allkcatKmLengths", "[", 
                   RowBox[{"[", "expt", "]"}], "]"}], "*", "0.01"}], "]"}]}], 
               "]"}], "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"expt", ",", "1", ",", 
           RowBox[{"Length", "[", "groupedByExpt", "]"}]}], "}"}]}], "]"}], 
       "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"makeAggDataset", "[", "mutant_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "mutantID", ",", "enzymeConcs", ",", "expts", ",", "chipTypes", ",", 
        "exptsTrimmedNames", ",", "lbrs", ",", "r2s", ",", 
        "normalizationFactors", ",", "chambers", ",", "kobsRaw", ",", "kobs", 
        ",", "highLowSlimits", ",", "mutantkcatsRaw", ",", "mutantkcatsIn", 
        ",", "mutantkcats", ",", "mutantKmData", ",", "mutantKmsRaw", ",", 
        "mutantKmDataIn", ",", "mutantKmLimitTable", ",", "kcatOverKmData", 
        ",", "aggKmLimit", ",", "aggkcatKmLimit", ",", "kcatKmLimitTable", 
        ",", "data", ",", "merged", ",", "mutantNormDataAll", ",", 
        "pvaluesMean", ",", "pvaluesMedian", ",", "tooSlowFastChip", ",", 
        "tooSlowSlowChip", ",", "tooSlowSlowestChip", ",", "lbrsSlow", ",", 
        "lbrsSlowest", ",", "lbrsFast", ",", "lbrsFastlowR2", ",", 
        "lbrsSlowlowR2", ",", "lbrsSlowestlowR2", ",", "fractionCulledFast", 
        ",", "fractionCulledSlow", ",", "fractionCulledSlowest", ",", 
        "forCSV"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"mutantID", "=", 
        RowBox[{"Normal", "[", 
         RowBox[{"groupedbyMutant", "[", 
          RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"expts", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"exptsTrimmedNames", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{"Normal", "[", 
             RowBox[{"groupedbyMutant", "[", 
              RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], 
              "]"}], "]"}], ",", "11"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"chipTypes", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{"mutant", ",", "n", ",", "\"\<ChipType\>\""}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{"mutant", ",", "n", ",", "\"\<LocalBackgroundRatio\>\""}],
             "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"r2s", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{"mutant", ",", "n", ",", "\"\<FitR2\>\""}], "]"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "normalization", " ", "of", " ", "fitted", " ", "kcats", " ", 
         RowBox[{"(", 
          RowBox[{"lagoon", " ", "and", " ", "chip", " ", "corrected"}], 
          ")"}], " ", "to", " ", "internal", " ", "WT", " ", "kcat", " ", 
         "standard"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"normalizationFactors", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"normalizationData", "[", "#", "]"}], "&"}], "/@", 
         "expts"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"chambers", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"Normal", "[", 
            RowBox[{"groupedbyMutant", "[", 
             RowBox[{"mutant", ",", "n", ",", "\"\<Indices\>\""}], "]"}], 
            "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"enzymeConcs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Normal", "[", 
            RowBox[{"groupedbyMutant", "[", 
             RowBox[{"mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], 
             "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "kobs", " ", "fits", " ", "obtained", " ", "by", " ", "scaling", " ", 
         "exponential", " ", "fit", " ", "k", " ", "by", " ", 
         "normalizationFactor", " ", 
         RowBox[{"and", " ", "[", "E", "]"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"kobs", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ToExpression", "[", 
               RowBox[{"Normal", "[", 
                RowBox[{"groupedbyMutant", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<ExponentialFit\>\""}], 
                 "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"normalizationFactors", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "*", 
               RowBox[{"enzymeConcs", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "*", 
               RowBox[{"10", "^", 
                RowBox[{"-", "9"}]}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
             "}"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "kobs", " ", "determined", " ", "by", " ", "scaling", " ", "linear", 
         " ", "fit", " ", "at", " ", 
         RowBox[{"lowest", " ", "[", "S", "]"}], " ", 
         RowBox[{"by", " ", "[", "S", "]"}], " ", 
         RowBox[{"and", " ", "[", "E", "]"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"kobsRaw", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{"groupedbyMutant", "[", 
              RowBox[{"mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
              "]"}], "[", 
             RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"normalizationFactors", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"Normal", "[", 
               RowBox[{
                RowBox[{"groupedbyMutant", "[", 
                 RowBox[{
                 "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], ")"}], "*", 
             RowBox[{"enzymeConcs", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "9"}]}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"correct", " ", "negative", " ", "kobs"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"kobs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"kobsRaw", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "<", "0"}], ",", 
            RowBox[{"kobsLimitReplacementValues", "[", 
             RowBox[{"expts", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
            RowBox[{"kobsRaw", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"get", " ", "min", " ", "and", " ", 
         RowBox[{"max", " ", "[", "S", "]"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"highLowSlimits", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"#", "\[NotEqual]", "0"}], "&"}]}], "]"}], "]"}], ",", 
            RowBox[{"Max", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], "&"}],
          "/@", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{"mutant", ",", "All", ",", "\"\<DataPoints\>\""}], "]"}], 
           "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "apply", " ", "normalization", " ", "factors", " ", "directly", " ", 
          "to", " ", "kcats"}], ",", " ", 
         RowBox[{
         "to", " ", "simplify", " ", "downstream", " ", "calculations"}]}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"mutantkcatsRaw", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{"mutant", ",", "n", ",", "kcatKey"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mutantkcatsIn", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Normal", "[", 
            RowBox[{"groupedbyMutant", "[", 
             RowBox[{"mutant", ",", "n", ",", "kcatKey"}], "]"}], "]"}], "/", 
           
           RowBox[{"normalizationFactors", "[", 
            RowBox[{"[", "n", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mutantkcats", "=", 
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Replace", "[", 
            RowBox[{"#1", ",", "#2", ",", "Infinity"}], "]"}], "&"}], ",", 
          "mutantkcatsIn", ",", 
          RowBox[{"{", 
           RowBox[{"_Times", "\[Rule]", "Indeterminate"}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"mutantKmsRaw", "=", 
        RowBox[{"Normal", "[", 
         RowBox[{"groupedbyMutant", "[", 
          RowBox[{"mutant", ",", "All", ",", "KmKey"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "check", " ", "mutant", " ", "Km", " ", "data", " ", "for", " ", 
          "tight", " ", "and", " ", "weak", " ", "Km", " ", "limits", " ", 
          RowBox[{"(", 
           RowBox[{"Km", "<", "KmFlag"}], ")"}]}], ",", " ", 
         RowBox[{"and", " ", "if", " ", "so"}], ",", " ", 
         RowBox[{
          RowBox[{"replace", " ", "with", " ", "Km"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"lowest", " ", "[", "S", "]"}], "/", "2"}], " ", "and", 
           " ", "a", " ", "limit", " ", "flag"}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"modified", " ", 
         RowBox[{
          RowBox[{"20", "/", "02"}], "/", "25"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"mutantKmDataIn", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"#", "<", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"highLowSlimits", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "/", "2"}], ")"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"highLowSlimits", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "/", "2"}], ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"#", ">", 
             RowBox[{
              RowBox[{"highLowSlimits", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", "2"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"#", ",", "1"}], "}"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"highLowSlimits", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "/", "2"}], ")"}], 
             "\[LessEqual]", "#", "\[LessEqual]", " ", 
             RowBox[{
              RowBox[{"highLowSlimits", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", "2"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"#", ",", "0"}], "}"}]}], "]"}], "&"}], "/@", 
         RowBox[{"Normal", "[", 
          RowBox[{"groupedbyMutant", "[", 
           RowBox[{"mutant", ",", "All", ",", "KmKey"}], "]"}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"mutantKmData", "=", 
        RowBox[{"mutantKmDataIn", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"mutantKmLimitTable", "=", 
        RowBox[{"mutantKmDataIn", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"kcatOverKmRaw", "=", 
        RowBox[{"mutantkcatsRaw", "/", 
         RowBox[{"(", 
          RowBox[{"mutantKmData", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "6"}]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"kcatOverKmData", "=", 
        RowBox[{"mutantkcats", "/", 
         RowBox[{"(", 
          RowBox[{"mutantKmData", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "6"}]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "determine", " ", "if", " ", "enough", " ", "Kms", " ", "are", " ", 
         "limits", " ", "to", " ", "define", " ", "the", " ", "aggregate", 
         " ", "estimate", " ", "as", " ", "a", " ", "limit"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"aggKmLimit", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"Select", "[", 
              RowBox[{"mutantKmLimitTable", ",", 
               RowBox[{
                RowBox[{"#", "\[Equal]", "0"}], "&"}]}], "]"}], "]"}], "/", 
            RowBox[{"Length", "[", "mutantKmLimitTable", "]"}]}], ">", 
           "0.5"}], ",", "0", ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"mutantKmLimitTable", ",", 
             RowBox[{
              RowBox[{"#", "\[NotEqual]", "0"}], "&"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"kcat", "/", "Km"}], " ", "limits"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"kcatKmLimitTable", "=", 
        RowBox[{"-", 
         RowBox[{"Replace", "[", 
          RowBox[{"mutantKmLimitTable", ",", 
           RowBox[{"1", "\[Rule]", "0"}], ",", "1"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"aggkcatKmLimit", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"aggKmLimit", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"aggKmLimit", "\[NotEqual]", "1"}]}], ",", 
          RowBox[{"-", "aggKmLimit"}], ",", "0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Normal", "[", 
          RowBox[{"groupedbyMutant", "[", 
           RowBox[{"mutant", ",", "All", ",", "\"\<DataPoints\>\""}], "]"}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"merged", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"chipTypes", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"mutantkcats", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"mutantKmData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"kcatOverKmData", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "chipTypes", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"bootstrap", " ", "hypothesis", " ", "testing"}], " ", "-", 
         " ", "median"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "adding", " ", "4", "th", " ", "element", " ", "to", " ", "bootstrap",
          " ", "input", " ", "list", " ", "to", " ", "test", " ", "kobs"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"mutantNormDataAll", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"mutantkcats", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"mutantKmData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"kcatOverKmData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"kobs", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pvaluesMedian", "=", 
        RowBox[{"bsMedian", "[", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"mutantNormDataAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}], 
          ",", 
          RowBox[{"Replace", "[", 
           RowBox[{"wtDataNormAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}]}],
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"bootstrap", " ", "hypothesis", " ", "testing"}], " ", "-", 
         " ", "mean"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"pvaluesMean", "=", 
        RowBox[{"bsMean", "[", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"mutantNormDataAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}], 
          ",", 
          RowBox[{"Replace", "[", 
           RowBox[{"wtDataNormAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}]}],
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"tooSlowFastChip", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"tooSlow", "[", "mutant", "]"}], "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowChip\>\""}], "&&", 
              
              RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowestChip\>\""}]}], 
             "&"}], "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tooSlowSlowChip", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"tooSlow", "[", "mutant", "]"}], "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"#ChipType", "\[Equal]", "\"\<SlowChip\>\""}], "&"}], 
            "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tooSlowSlowestChip", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"tooSlow", "[", "mutant", "]"}], "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"#ChipType", "\[Equal]", "\"\<SlowestChip\>\""}], "&"}], 
            "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsFast", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"groupedbyMutant", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
              "\"\<SlowChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
              "\"\<SlowestChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", 
              "rSqaredCutoff"}]}], "&"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlow", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"groupedbyMutant", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              "\"\<SlowChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", 
              "rSqaredCutoff"}]}], "&"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlowest", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"groupedbyMutant", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              "\"\<SlowestChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", 
              "rSqaredCutoff"}]}], "&"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"lbrsFastlowR2", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"groupedbyMutant", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
              "\"\<SlowChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
              "\"\<SlowestChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "rSqaredCutoff"}]}], 
            "&"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlowlowR2", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"groupedbyMutant", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              "\"\<SlowChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "rSqaredCutoff"}]}], 
            "&"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlowestlowR2", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"groupedbyMutant", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              "\"\<SlowestChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "rSqaredCutoff"}]}], 
            "&"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"fractionCulledFast", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsFast", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsFastlowR2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsFast", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsFastlowR2", "]"}], "+", 
               RowBox[{"Length", "[", "tooSlowFastChip", "]"}]}], ")"}]}]}], 
           "]"}], ",", "0.01"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulledSlow", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlow", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowlowR2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlow", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowlowR2", "]"}], "+", 
               RowBox[{"Length", "[", "tooSlowSlowChip", "]"}]}], ")"}]}]}], 
           "]"}], ",", "0.01"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulledSlowest", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlowest", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowestlowR2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlowest", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowestlowR2", "]"}], "+", 
               RowBox[{"Length", "[", "tooSlowSlowestChip", "]"}]}], 
              ")"}]}]}], "]"}], ",", "0.01"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"forCSV", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Association", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<Version\>\"", "\[Rule]", "notebookVersion"}], ",", 
               RowBox[{"\"\<RunDate\>\"", "\[Rule]", 
                RowBox[{"DateString", "[", "\"\<ISODate\>\"", "]"}]}], ",", 
               RowBox[{"\"\<MutantID\>\"", "\[Rule]", "mutantID"}], ",", 
               RowBox[{"\"\<Experiment\>\"", "\[Rule]", 
                RowBox[{"expts", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<ChipType\>\"", "\[Rule]", 
                RowBox[{"chipTypes", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Column\>\"", "\[Rule]", 
                RowBox[{"chambers", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Row\>\"", "\[Rule]", 
                RowBox[{"chambers", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<EnzymeConc\>\"", "\[Rule]", 
                RowBox[{"enzymeConcs", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<AllSubstrateConcs\>\"", "->", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"groupedbyMutant", "[", 
                   RowBox[{
                   "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                   "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<AllInitialRates\>\"", "->", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"groupedbyMutant", "[", 
                   RowBox[{
                   "mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
                   "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat\>\"", "->", 
                RowBox[{"mutantkcatsRaw", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcatNormalized\>\"", "\[Rule]", 
                RowBox[{"mutantkcats", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcatLimit\>\"", "\[Rule]", "0"}], ",", 
               RowBox[{"\"\<KMFit\>\"", "\[Rule]", 
                RowBox[{"mutantKmsRaw", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMLimitValue\>\"", "->", 
                RowBox[{"mutantKmData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMLimit\>\"", "->", 
                RowBox[{"mutantKmLimitTable", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<FitRSquared\>\"", "\[Rule]", 
                RowBox[{"groupedbyMutant", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<FitR2\>\""}], "]"}]}], 
               ",", 
               RowBox[{"\"\<kcatFitError\>\"", "\[Rule]", 
                RowBox[{"groupedbyMutant", "[", 
                 RowBox[{
                 "mutant", ",", "n", ",", "\"\<fit_mm_kcat_param_error\>\""}],
                  "]"}]}], ",", 
               RowBox[{"\"\<KMFitError\>\"", "\[Rule]", 
                RowBox[{"groupedbyMutant", "[", 
                 RowBox[{
                 "mutant", ",", "n", ",", "\"\<fit_mm_KM_param_error\>\""}], 
                 "]"}]}], ",", 
               RowBox[{"\"\<kcatoverKMFitError\>\"", "\[Rule]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Around", "[", 
                    RowBox[{
                    RowBox[{"mutantKmData", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", 
                    RowBox[{"groupedbyMutant", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", 
                    "\"\<fit_mm_kcat_param_error\>\""}], "]"}]}], "]"}], "/", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Around", "[", 
                    RowBox[{
                    RowBox[{"mutantKmData", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", 
                    RowBox[{"groupedbyMutant", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", 
                    "\"\<fit_mm_KM_param_error\>\""}], "]"}]}], "]"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "6"}]}]}], ")"}]}], ")"}], "[", 
                 "\"\<Uncertainty\>\"", "]"}]}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"\"\<kcatNormMean\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"mutantkcats", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcatNormMedian\>\"", "\[Rule]", 
                RowBox[{"median2", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"mutantkcats", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMMean\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", "mutantKmData", "]"}]}], ",", 
               RowBox[{"\"\<KMMedian\>\"", "\[Rule]", 
                RowBox[{"median2", "[", "mutantKmData", "]"}]}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"\"\<kcat/KM\>\"", "\[Rule]", 
                RowBox[{"kcatOverKmRaw", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", "\[IndentingNewLine]",
                "\[IndentingNewLine]", 
               RowBox[{"\"\<kcat/KMNorm\>\"", "\[Rule]", 
                RowBox[{"kcatOverKmData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kobs\>\"", "\[Rule]", 
                RowBox[{"kobsRaw", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kobsNegCorrected\>\"", "\[Rule]", 
                RowBox[{"kobs", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMean\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMedian\>\"", "\[Rule]", 
                RowBox[{"median2", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{
               "\"\<kcatNormBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{
               "\"\<kcat/KMBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kobsBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]",
                "\[IndentingNewLine]", 
               RowBox[{"\"\<Log10StdDevkcat\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", 
               RowBox[{"\"\<Log10StdDevKM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", 
               RowBox[{"\"\<Log10StdDevkcat/KM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"\"\<Log10StdDevkcat/KMLimit\>\"", "->", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
               "\"\<kcatNormBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{
               "\"\<kcat/KMBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kobsBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<NumCulledReps\>\"", "\[Rule]", 
                RowBox[{"Length", "[", "mutantkcatsIn", "]"}]}], ",", 
               RowBox[{"\"\<LBR\>\"", "\[Rule]", 
                RowBox[{"lbrs", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<StdDevkcat\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], ",", 
               RowBox[{"\"\<StdDevKM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], ",", 
               RowBox[{"\"\<StdDevkcat/KM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMLimit\>\"", "\[Rule]", 
                RowBox[{"kcatKmLimitTable", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcatAggLimit\>\"", "\[Rule]", "0"}], ",", 
               RowBox[{"\"\<KMAggLimit\>\"", "->", "aggKmLimit"}], ",", 
               RowBox[{
               "\"\<kcat/KMAggLimit\>\"", "\[Rule]", "aggkcatKmLimit"}], ",", 
               
               RowBox[{"\"\<KMMedianLimit\>\"", "\[Rule]", 
                RowBox[{"median2", "[", "mutantKmData", "]"}]}], ",", 
               RowBox[{"\"\<KMMeanLimit\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", "mutantKmData", "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMedianLimit\>\"", "\[Rule]", 
                RowBox[{"median2", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMeanLimit\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Association", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<Version\>\"", "\[Rule]", "notebookVersion"}], ",", 
               RowBox[{"\"\<RunDate\>\"", "\[Rule]", 
                RowBox[{"DateString", "[", "\"\<ISODate\>\"", "]"}]}], ",", 
               RowBox[{"\"\<MutantID\>\"", "\[Rule]", "mutantID"}], ",", 
               RowBox[{"\"\<Experiment\>\"", "\[Rule]", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], 
                 "]"}]}], ",", 
               RowBox[{"\"\<ChipType\>\"", "\[Rule]", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<ChipType\>\""}], 
                 "]"}]}], ",", 
               RowBox[{"\"\<Column\>\"", "\[Rule]", 
                RowBox[{
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"tooSlow", "[", 
                   RowBox[{"mutant", ",", "n", ",", "\"\<Indices\>\""}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Row\>\"", "\[Rule]", 
                RowBox[{
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"tooSlow", "[", 
                   RowBox[{"mutant", ",", "n", ",", "\"\<Indices\>\""}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<EnzymeConc\>\"", "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Normal", "[", 
                   RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], 
                    "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
               RowBox[{"\"\<AllSubstrateConcs\>\"", "->", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"tooSlow", "[", 
                   RowBox[{
                   "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                   "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<AllInitialRates\>\"", "->", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"tooSlow", "[", 
                   RowBox[{
                   "mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
                   "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<kcatNormalized\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<kcatLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<KMFit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<KMLimitValue\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<KMLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<FitRSquared\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<kcatFitError\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<KMFitError\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<kcatoverKMFitError\>\"", "\[Rule]", "\"\<\>\""}], 
               ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"\"\<kcatNormMean\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"mutantkcats", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcatNormMedian\>\"", "\[Rule]", 
                RowBox[{"median2", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"mutantkcats", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMMean\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", "mutantKmData", "]"}]}], ",", 
               RowBox[{"\"\<KMMedian\>\"", "\[Rule]", 
                RowBox[{"median2", "[", "mutantKmData", "]"}]}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"\"\<kcat/KM\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"\"\<kcat/KMNorm\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<kobsRaw\>\"", "\[Rule]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ")"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "9"}]}], "*", 
                    RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}]}], ")"}], 
                 "/", 
                 RowBox[{"(", 
                  RowBox[{"normalizationData", "[", 
                   RowBox[{"Normal", "[", 
                    RowBox[{"tooSlow", "[", 
                    RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}],
                     "]"}], "]"}], "]"}], ")"}]}]}], ",", 
               RowBox[{"\"\<kobsNegCorrected\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ")"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "9"}]}], "*", 
                    RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}]}], ")"}], 
                    "/", 
                    RowBox[{"(", 
                    RowBox[{"normalizationData", "[", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"tooSlow", "[", 
                    RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}],
                     "]"}], "]"}], "]"}], ")"}]}], "<", "0"}], ",", 
                  RowBox[{"kobsLimitReplacementValues", "[", 
                   RowBox[{"tooSlow", "[", 
                    RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}],
                     "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ")"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "9"}]}], "*", 
                    RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}]}], ")"}], 
                   "/", 
                   RowBox[{"(", 
                    RowBox[{"normalizationData", "[", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"tooSlow", "[", 
                    RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}],
                     "]"}], "]"}], "]"}], ")"}]}]}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMean\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMedian\>\"", "\[Rule]", 
                RowBox[{"median2", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{
               "\"\<kcatNormBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{
               "\"\<kcat/KMBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kobsBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]",
                "\[IndentingNewLine]", 
               RowBox[{"\"\<Log10StdDevkcat\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", 
               RowBox[{"\"\<Log10StdDevKM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", 
               RowBox[{"\"\<Log10StdDevkcat/KM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", 
               RowBox[{"\"\<Log10StdDevkcat/KMLimit\>\"", "->", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
               "\"\<kcatNormBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{
               "\"\<kcat/KMBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kobsBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<NumCulledReps\>\"", "\[Rule]", 
                RowBox[{"Length", "[", "mutantkcatsIn", "]"}]}], ",", 
               RowBox[{"\"\<LBR\>\"", "\[Rule]", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{
                 "mutant", ",", "n", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}]}], ",", 
               RowBox[{"\"\<StdDevkcat\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], ",", 
               RowBox[{"\"\<StdDevKM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], ",", 
               RowBox[{"\"\<StdDevkcat/KM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMLimit\>\"", "\[Rule]", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{"\"\<kcatAggLimit\>\"", "\[Rule]", "0"}], ",", 
               RowBox[{"\"\<KMAggLimit\>\"", "->", "aggKmLimit"}], ",", 
               RowBox[{
               "\"\<kcat/KMAggLimit\>\"", "\[Rule]", "aggkcatKmLimit"}], ",", 
               
               RowBox[{"\"\<KMMedianLimit\>\"", "\[Rule]", 
                RowBox[{"median2", "[", "mutantKmData", "]"}]}], ",", 
               RowBox[{"\"\<KMMeanLimit\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", "mutantKmData", "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMedianLimit\>\"", "\[Rule]", 
                RowBox[{"median2", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMeanLimit\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MissingQ", "[", 
                 RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", "0", 
                ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "]"}]}], 
             "}"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "forCSV"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"makeAggDatasetSlow", "[", "mutant_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "fractionCulled", ",", "tooSlowFastChip", ",", "tooSlowSlowChip", ",", 
        "tooSlowSlowestChip", ",", "lbrsFast", ",", "lbrsSlow", ",", 
        "lbrsSlowest", ",", "lbrsFastlowR2", ",", "lbrsSlowlowR2", ",", 
        "lbrsSlowestlowR2", ",", "fractionCulledFast", ",", 
        "fractionCulledSlow", ",", "fractionCulledSlowest", ",", "kobsRaw", 
        ",", "kobs", ",", "mutantNormDataAll", ",", "pvaluesMean", ",", 
        "pvaluesMedian", ",", "forCSV"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fractionCulled", "=", "1.0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"tooSlowFastChip", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"tooSlow", "[", "mutant", "]"}], "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowChip\>\""}], "&&", 
              
              RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowestChip\>\""}]}], 
             "&"}], "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tooSlowSlowChip", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"tooSlow", "[", "mutant", "]"}], "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"#ChipType", "\[Equal]", "\"\<SlowChip\>\""}], "&"}], 
            "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tooSlowSlowestChip", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"tooSlow", "[", "mutant", "]"}], "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"#ChipType", "\[Equal]", "\"\<SlowestChip\>\""}], "&"}], 
            "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsFast", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Values", "[", 
                RowBox[{"Normal", "[", 
                 RowBox[{"tooSlow", "[", 
                  RowBox[{"mutant", ",", "n", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                    ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
                "\"\<SlowChip\>\""}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
                "\"\<SlowestChip\>\""}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", 
                "rSqaredCutoff"}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ">", "5.0"}]}], "&"}]}], 
            "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlow", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Values", "[", 
                RowBox[{"Normal", "[", 
                 RowBox[{"tooSlow", "[", 
                  RowBox[{"mutant", ",", "n", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                    ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
                "\"\<SlowChip\>\""}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", 
                "rSqaredCutoff"}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ">", "5.0"}]}], "&"}]}], 
            "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlowest", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"tooSlow", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              "\"\<SlowestChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", 
              "rSqaredCutoff"}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">", "5.0"}]}], "&"}]}], "]"}],
          "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"lbrsFastlowR2", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Values", "[", 
                RowBox[{"Normal", "[", 
                 RowBox[{"tooSlow", "[", 
                  RowBox[{"mutant", ",", "n", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                    ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
                "\"\<SlowChip\>\""}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
                "\"\<SlowestChip\>\""}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "<", "rSqaredCutoff"}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ">", "5.0"}]}], "&"}]}], 
            "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlowlowR2", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Values", "[", 
                RowBox[{"Normal", "[", 
                 RowBox[{"tooSlow", "[", 
                  RowBox[{"mutant", ",", "n", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                    ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
                "\"\<SlowChip\>\""}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "<", "rSqaredCutoff"}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ">", "5.0"}]}], "&"}]}], 
            "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlowestlowR2", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"tooSlow", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              "\"\<SlowestChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "rSqaredCutoff"}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">", "5.0"}]}], "&"}]}], "]"}],
          "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"fractionCulledFast", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsFast", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsFastlowR2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsFast", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsFastlowR2", "]"}], "+", 
               RowBox[{"Length", "[", "tooSlowFastChip", "]"}]}], ")"}]}]}], 
           "]"}], ",", "0.01"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulledSlow", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlow", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowlowR2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlow", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowlowR2", "]"}], "+", 
               RowBox[{"Length", "[", "tooSlowSlowChip", "]"}]}], ")"}]}]}], 
           "]"}], ",", "0.01"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulledSlowest", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlowest", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowestlowR2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlowest", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowestlowR2", "]"}], "+", 
               RowBox[{"Length", "[", "tooSlowSlowestChip", "]"}]}], 
              ")"}]}]}], "]"}], ",", "0.01"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"kobsRaw", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Normal", "[", 
               RowBox[{
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}],
                  "]"}], "[", 
                RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Normal", "[", 
                  RowBox[{"tooSlow", "[", 
                   RowBox[{
                   "mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], "]"}],
                   "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ")"}], "*", 
               RowBox[{"10", "^", 
                RowBox[{"-", "9"}]}], "*", 
               RowBox[{"Normal", "[", 
                RowBox[{
                 RowBox[{"tooSlow", "[", 
                  RowBox[{
                  "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}]}], ")"}]}],
             ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"normalizationData", "[", 
             RowBox[{"Normal", "[", 
              RowBox[{"tooSlow", "[", 
               RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], 
               "]"}], "]"}], "]"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"correct", " ", "negative", " ", "kobs"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"kobs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"kobsRaw", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "<", "0"}], ",", 
            RowBox[{"kobsLimitReplacementValues", "[", 
             RowBox[{"Normal", "[", 
              RowBox[{"tooSlow", "[", 
               RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], 
               "]"}], "]"}], "]"}], ",", 
            RowBox[{"kobsRaw", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"bootstrap", " ", "hypothesis", " ", "testing"}], " ", "-", 
         " ", "median"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "adding", " ", "4", "th", " ", "element", " ", "to", " ", 
            "bootstrap", " ", "input", " ", "list", " ", "to", " ", "test", 
            " ", "kobs"}], " ", "-", " ", 
           RowBox[{
           "adding", " ", "1", "s", " ", "because", " ", "function", " ", 
            "expects", " ", "a", " ", "list", " ", "of", " ", "length"}]}], 
          "=", "4"}], ",", " ", 
         RowBox[{
         "but", " ", "only", " ", "kobs", " ", "can", " ", "be", " ", 
          "measured", " ", "for", " ", "undetectably", " ", "slow", " ", 
          "mutants"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"mutantNormDataAll", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.0", ",", "1.0", ",", "1.0", ",", 
            RowBox[{"kobs", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pvaluesMedian", "=", 
        RowBox[{"bsMedian", "[", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"mutantNormDataAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}], 
          ",", 
          RowBox[{"Replace", "[", 
           RowBox[{"wtDataNormAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}]}],
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"bootstrap", " ", "hypothesis", " ", "testing"}], " ", "-", 
         " ", "mean"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"pvaluesMean", "=", 
        RowBox[{"bsMean", "[", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"mutantNormDataAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}], 
          ",", 
          RowBox[{"Replace", "[", 
           RowBox[{"wtDataNormAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}]}],
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"forCSV", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Association", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Version\>\"", "\[Rule]", "notebookVersion"}], ",", 
             RowBox[{"\"\<RunDate\>\"", "\[Rule]", 
              RowBox[{"DateString", "[", "\"\<ISODate\>\"", "]"}]}], ",", 
             RowBox[{"\"\<MutantID\>\"", "\[Rule]", "mutant"}], ",", 
             RowBox[{"\"\<Experiment\>\"", "\[Rule]", 
              RowBox[{"tooSlow", "[", 
               RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], 
               "]"}]}], ",", 
             RowBox[{"\"\<ChipType\>\"", "\[Rule]", 
              RowBox[{"tooSlow", "[", 
               RowBox[{"mutant", ",", "n", ",", "\"\<ChipType\>\""}], "]"}]}],
              ",", 
             RowBox[{"\"\<Column\>\"", "\[Rule]", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<Indices\>\""}], "]"}], 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<Row\>\"", "\[Rule]", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<Indices\>\""}], "]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<EnzymeConc\>\"", "\[Rule]", 
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], 
                 "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<AllSubstrateConcs\>\"", "->", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"Normal", "[", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{
                 "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                 "]"}], "]"}], "]"}]}], ",", 
             RowBox[{"\"\<AllInitialRates\>\"", "->", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"Normal", "[", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}],
                  "]"}], "]"}], "]"}]}], ",", 
             RowBox[{"\"\<kcat\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcatNormalized\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcatLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMFit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMLimitValue\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<FitRSquared\>\"", "\[Rule]", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<FitR2\>\""}], "]"}], 
                ",", "0.01"}], "]"}]}], ",", 
             RowBox[{"\"\<kcatFitError\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMFitError\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcatoverKMFitError\>\"", "\[Rule]", "\"\<\>\""}], 
             ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"\"\<kcatNormMean\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcatNormMedian\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMMean\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMMedian\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcat/KM\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"\"\<kcat/KMNorm\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kobsRaw\>\"", "\[Rule]", 
              RowBox[{"kobsRaw", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<kobsNegCorrected\>\"", "\[Rule]", 
              RowBox[{"kobs", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<kcat/KMNormMean\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             
             RowBox[{"\"\<kcat/KMNormMedian\>\"", "\[Rule]", "\"\<\>\""}], 
             ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
             "\"\<kcatNormBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
              "\"\<\>\""}], ",", 
             RowBox[{
             "\"\<KMBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
              "\"\<\>\""}], ",", 
             RowBox[{
             "\"\<kcat/KMBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
              "\"\<\>\""}], ",", 
             RowBox[{"\"\<kobsBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
              RowBox[{"pvaluesMedian", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Log10StdDevkcat\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             
             RowBox[{"\"\<Log10StdDevKM\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<Log10StdDevkcat/KM\>\"", "\[Rule]", "\"\<\>\""}], 
             ",", 
             RowBox[{"\"\<Log10StdDevkcat/KMLimit\>\"", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"Replace", "[", 
                   RowBox[{"kobs", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                RowBox[{"StandardDeviation", "[", 
                 RowBox[{"Log", "[", 
                  RowBox[{"10", ",", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"kobs", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
             ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
             "\"\<kcatNormBootstrapHypothesisTestMean\>\"", "\[Rule]", 
              "\"\<\>\""}], ",", 
             RowBox[{
             "\"\<KMBootstrapHypothesisTestMean\>\"", "\[Rule]", "\"\<\>\""}],
              ",", 
             RowBox[{
             "\"\<kcat/KMBootstrapHypothesisTestMean\>\"", "\[Rule]", 
              "\"\<\>\""}], ",", 
             RowBox[{"\"\<kobsBootstrapHypothesisTestMean\>\"", "\[Rule]", 
              RowBox[{"pvaluesMean", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<NumCulledReps\>\"", "\[Rule]", "0"}], ",", 
             RowBox[{"\"\<LBR\>\"", "\[Rule]", 
              RowBox[{"tooSlow", "[", 
               RowBox[{
               "mutant", ",", "n", ",", "\"\<LocalBackgroundRatio\>\""}], 
               "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"\"\<StdDevkcat\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<StdDevKM\>\"", "->", "\"\<\>\""}], ",", 
             RowBox[{"\"\<StdDevkcat/KM\>\"", "->", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcatLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcat/KMLimit\>\"", "\[Rule]", 
              RowBox[{"-", "1"}]}], ",", 
             RowBox[{"\"\<kcatAggLimit\>\"", "\[Rule]", "0"}], ",", 
             RowBox[{"\"\<KMAggLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcat/KMAggLimit\>\"", "\[Rule]", 
              RowBox[{"-", "1"}]}], ",", 
             RowBox[{"\"\<KMMedianLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMMeanLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcat/KMNormMedianLimit\>\"", "\[Rule]", 
              RowBox[{"median2", "[", "kobs", "]"}]}], ",", 
             RowBox[{"\"\<kcat/KMNormMeanLimit\>\"", "\[Rule]", 
              RowBox[{"Mean", "[", "kobs", "]"}]}]}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MissingQ", "[", 
               RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", "0", ",", 
              
              RowBox[{"Length", "[", 
               RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "forCSV"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.747067754613985*^9, 3.747067811925461*^9}, {
   3.7470680380050993`*^9, 3.747068038403015*^9}, {3.7470681190599747`*^9, 
   3.7470681269963903`*^9}, {3.747068174331408*^9, 3.747068182886363*^9}, {
   3.747068361578245*^9, 3.747068604404655*^9}, {3.747068646485807*^9, 
   3.747068648722151*^9}, {3.747068703560166*^9, 3.7470687922467527`*^9}, {
   3.747068839153412*^9, 3.747068889385664*^9}, {3.747069598595805*^9, 
   3.747069600970718*^9}, {3.747069753101821*^9, 3.747069753304667*^9}, {
   3.7470698984495287`*^9, 3.747069900828637*^9}, {3.747069938136796*^9, 
   3.7470699421919518`*^9}, {3.747069973481848*^9, 3.747069993704544*^9}, {
   3.747070033533175*^9, 3.7470701369560823`*^9}, {3.747070184097206*^9, 
   3.7470702048475933`*^9}, {3.747070432039337*^9, 3.747070440109912*^9}, {
   3.747070505653037*^9, 3.74707050957561*^9}, {3.7470706419151363`*^9, 
   3.747070700154666*^9}, {3.74707074475382*^9, 3.747070813808011*^9}, {
   3.747071166677784*^9, 3.74707118785301*^9}, {3.7470718728162527`*^9, 
   3.747071903662456*^9}, {3.7470719771319838`*^9, 3.747071998101192*^9}, {
   3.747072167359892*^9, 3.747072193459359*^9}, {3.747072262629809*^9, 
   3.747072316397326*^9}, {3.7470724267482033`*^9, 3.747072443427525*^9}, {
   3.747072488340426*^9, 3.747072492584972*^9}, {3.747072858513359*^9, 
   3.747072900094203*^9}, {3.747073142816628*^9, 3.747073316959484*^9}, {
   3.747073349624456*^9, 3.747073413708961*^9}, {3.747073457011438*^9, 
   3.747073482947873*^9}, {3.747074170988983*^9, 3.7470742521565027`*^9}, {
   3.747076221173622*^9, 3.747076228646811*^9}, {3.74707630840445*^9, 
   3.7470763085761547`*^9}, {3.747076343937747*^9, 3.747076344082209*^9}, {
   3.7470774379644003`*^9, 3.747077456589376*^9}, {3.747077552943758*^9, 
   3.7470775670774384`*^9}, {3.747077607775754*^9, 3.7470776536880827`*^9}, 
   3.747082877946821*^9, {3.747666548650743*^9, 3.747666581640584*^9}, {
   3.747666626140806*^9, 3.747666744543981*^9}, {3.747667953065434*^9, 
   3.747667955495146*^9}, {3.747667988976575*^9, 3.747667992293331*^9}, {
   3.7476680256038322`*^9, 3.747668084018404*^9}, {3.747668273973873*^9, 
   3.747668281867723*^9}, {3.747668923236554*^9, 3.7476689390624247`*^9}, {
   3.747669232183519*^9, 3.747669292525609*^9}, {3.747669690999913*^9, 
   3.747669731878264*^9}, {3.7476706211742907`*^9, 3.747670626104241*^9}, {
   3.747670787785573*^9, 3.747670792372733*^9}, {3.747670851584339*^9, 
   3.747670905520009*^9}, 3.7476709729427233`*^9, {3.747671011959038*^9, 
   3.747671020520237*^9}, {3.747671077112616*^9, 3.7476710848135557`*^9}, {
   3.747671126958084*^9, 3.747671152448769*^9}, {3.74767132364948*^9, 
   3.747671407188401*^9}, {3.747671443223633*^9, 3.7476714514938498`*^9}, {
   3.74767158946596*^9, 3.747671619907713*^9}, {3.7476716742523003`*^9, 
   3.7476716761154327`*^9}, {3.747671749518221*^9, 3.747671752255916*^9}, {
   3.747671860425227*^9, 3.747671862578939*^9}, {3.747671912932605*^9, 
   3.7476719205337057`*^9}, {3.7476720385318947`*^9, 3.747672038727265*^9}, {
   3.747692482937421*^9, 3.747692484490404*^9}, {3.750701853092002*^9, 
   3.750701877706271*^9}, {3.7507026393549213`*^9, 3.7507027169672318`*^9}, {
   3.7507027741455173`*^9, 3.7507028629483137`*^9}, 3.750703356980011*^9, {
   3.750703488845305*^9, 3.750703546700734*^9}, {3.750703576942937*^9, 
   3.750703628125442*^9}, {3.75070370540065*^9, 3.750703747960985*^9}, {
   3.7507037814583406`*^9, 3.750703785053453*^9}, {3.750703833424511*^9, 
   3.7507038895635138`*^9}, {3.751039604526244*^9, 3.7510396156902018`*^9}, 
   3.7510396745205517`*^9, {3.752261557200303*^9, 3.7522616069078283`*^9}, {
   3.752262721987405*^9, 3.75226272252638*^9}, {3.752263004846327*^9, 
   3.752263039432066*^9}, {3.752263111812489*^9, 3.752263121239008*^9}, {
   3.75226319374507*^9, 3.752263206238761*^9}, {3.7522632759910793`*^9, 
   3.7522632946640673`*^9}, 3.752263982648287*^9, 3.752264418372241*^9, 
   3.752264468371561*^9, {3.752284327811084*^9, 3.752284332314314*^9}, {
   3.7522844015036297`*^9, 3.752284420971858*^9}, {3.75228450811873*^9, 
   3.752284527287215*^9}, {3.752284658422394*^9, 3.75228469483171*^9}, {
   3.752285438779673*^9, 3.752285457069786*^9}, {3.752285518261519*^9, 
   3.7522855351723757`*^9}, {3.752285597045803*^9, 3.752285598025413*^9}, {
   3.752338880100966*^9, 3.752338884006879*^9}, {3.752338916941098*^9, 
   3.7523389405035048`*^9}, {3.7523390711450233`*^9, 3.752339073257514*^9}, {
   3.753047818012454*^9, 3.753047825147278*^9}, {3.753048067177478*^9, 
   3.7530480963956203`*^9}, {3.7729267795328827`*^9, 
   3.7729267895205097`*^9}, {3.772926831498526*^9, 3.772926835249332*^9}, {
   3.7729268672310762`*^9, 3.772926867975029*^9}, {3.772926919753875*^9, 
   3.7729269224174757`*^9}, {3.772926970180925*^9, 3.77292703390792*^9}, {
   3.772927712899725*^9, 3.772927731336864*^9}, {3.7734107452292957`*^9, 
   3.773410747743465*^9}, {3.7734107994543743`*^9, 3.773410802116394*^9}, {
   3.773410974304475*^9, 3.7734109772596893`*^9}, {3.7734264235754633`*^9, 
   3.7734264346820107`*^9}, {3.773426721725668*^9, 3.773426747537566*^9}, {
   3.773426874664173*^9, 3.773426875849717*^9}, {3.773429304245307*^9, 
   3.773429306921763*^9}, {3.773429381273458*^9, 3.77342941238336*^9}, {
   3.773429493237088*^9, 3.77342950827966*^9}, {3.773429874434908*^9, 
   3.773429878762101*^9}, {3.773429976742043*^9, 3.7734299792215137`*^9}, {
   3.773430010022204*^9, 3.773430010385947*^9}, {3.773430113285634*^9, 
   3.7734301137610903`*^9}, {3.7734304520308237`*^9, 3.773430509759945*^9}, {
   3.7734329339316196`*^9, 3.773432942509046*^9}, {3.773445577687229*^9, 
   3.773445593291212*^9}, {3.773445703272143*^9, 3.773445705994381*^9}, {
   3.773446494655649*^9, 3.7734465058528137`*^9}, {3.773446672212674*^9, 
   3.773446676740239*^9}, {3.7734981163787193`*^9, 3.773498119715828*^9}, {
   3.773498154816537*^9, 3.7734982108809032`*^9}, {3.773587764665236*^9, 
   3.773587779917344*^9}, {3.773588008825523*^9, 3.7735880253982563`*^9}, {
   3.773588545128314*^9, 3.773588590658305*^9}, {3.7735886307945127`*^9, 
   3.77358863207452*^9}, {3.77358954145583*^9, 3.773589546161459*^9}, {
   3.773589582929682*^9, 3.773589593733018*^9}, {3.773590463304533*^9, 
   3.7735904634739113`*^9}, {3.773595735271052*^9, 3.773595745137464*^9}, {
   3.773596126499175*^9, 3.773596130756967*^9}, {3.773596301899007*^9, 
   3.773596324047113*^9}, {3.773597861007235*^9, 3.773597977799374*^9}, {
   3.77361895885717*^9, 3.7736189607012444`*^9}, {3.773618996182212*^9, 
   3.773619021161125*^9}, {3.773619070595908*^9, 3.773619072091066*^9}, {
   3.774125038464374*^9, 3.774125074767164*^9}, {3.774125756137867*^9, 
   3.7741257826071787`*^9}, {3.774125827279807*^9, 3.774125919450686*^9}, {
   3.774125981871212*^9, 3.774125992127709*^9}, {3.7741264473538027`*^9, 
   3.774126461554945*^9}, {3.7741265773848877`*^9, 3.774126577667035*^9}, {
   3.774126712769109*^9, 3.774126721717861*^9}, {3.774126804732353*^9, 
   3.774126817392836*^9}, 3.774127303032473*^9, {3.77412750092057*^9, 
   3.774127521898427*^9}, {3.774127649894998*^9, 3.774127662112167*^9}, {
   3.774127919576722*^9, 3.774127923578343*^9}, {3.774129158047497*^9, 
   3.774129160390751*^9}, {3.774129407475257*^9, 3.774129411654025*^9}, {
   3.774129891443625*^9, 3.77412994904841*^9}, {3.774134253570993*^9, 
   3.774134460763418*^9}, {3.774134496426463*^9, 3.774134530325692*^9}, {
   3.77413595342813*^9, 3.7741360977626133`*^9}, 3.77413683842295*^9, {
   3.77419056267232*^9, 3.7741905639391003`*^9}, {3.774190622231287*^9, 
   3.774190627666915*^9}, {3.774191811730833*^9, 3.774191814963616*^9}, {
   3.7741920297145433`*^9, 3.774192053142373*^9}, {3.774193015768139*^9, 
   3.774193040612277*^9}, {3.774193240043605*^9, 3.7741932577656403`*^9}, {
   3.77419329347408*^9, 3.774193379909507*^9}, {3.774193432488493*^9, 
   3.774193525417131*^9}, {3.774193795807849*^9, 3.7741938523091793`*^9}, {
   3.77419421368998*^9, 3.7741942524864893`*^9}, {3.774194290240694*^9, 
   3.774194345447191*^9}, {3.7741943958978367`*^9, 3.774194408166787*^9}, {
   3.774194619405491*^9, 3.774194626578595*^9}, {3.774195404829773*^9, 
   3.7741954129450808`*^9}, {3.7741954956233187`*^9, 3.774195559257935*^9}, {
   3.774195658674385*^9, 3.7741956899182653`*^9}, {3.7741959706356773`*^9, 
   3.774196061415111*^9}, {3.774196128004733*^9, 3.774196139666897*^9}, 
   3.7741962072634563`*^9, {3.774196275055434*^9, 3.7741962980558863`*^9}, {
   3.774196355006118*^9, 3.774196372945332*^9}, {3.774196453712788*^9, 
   3.774196505302314*^9}, 3.774197045902749*^9, {3.774199831133946*^9, 
   3.774199896418159*^9}, {3.774199930806212*^9, 3.774199999178689*^9}, {
   3.774200498753151*^9, 3.774200527420957*^9}, {3.7742008220829477`*^9, 
   3.774200847676157*^9}, {3.774202742253796*^9, 3.774202745218801*^9}, {
   3.7742029121076393`*^9, 3.774203023196858*^9}, {3.7742030862726994`*^9, 
   3.7742030939157553`*^9}, {3.774203153284631*^9, 3.7742031535356407`*^9}, {
   3.774203277165395*^9, 3.774203277338196*^9}, 3.774203345104631*^9, {
   3.774203388481759*^9, 3.774203427908743*^9}, {3.774212677774679*^9, 
   3.7742126786076403`*^9}, {3.774213312312838*^9, 3.7742133183617373`*^9}, {
   3.774213413402659*^9, 3.774213417414815*^9}, {3.774213599610276*^9, 
   3.774213616870775*^9}, {3.774213653644184*^9, 3.774213653820445*^9}, {
   3.774217369050811*^9, 3.774217427531932*^9}, {3.774224683034082*^9, 
   3.774224731317877*^9}, {3.774224987604001*^9, 3.774225003201565*^9}, {
   3.774225056866312*^9, 3.774225076079948*^9}, {3.774357172362846*^9, 
   3.774357173028305*^9}, {3.774360320613474*^9, 3.77436047421903*^9}, {
   3.7743605875866203`*^9, 3.7743606427078733`*^9}, {3.774360735358486*^9, 
   3.774360824322959*^9}, {3.774363446436907*^9, 3.774363465695613*^9}, {
   3.7743643323156357`*^9, 3.774364389859241*^9}, {3.7743644279544773`*^9, 
   3.77436449060085*^9}, {3.7743645288907824`*^9, 3.774364531137577*^9}, 
   3.77436457218266*^9, {3.774364608606709*^9, 3.7743646101145773`*^9}, {
   3.774364745310357*^9, 3.7743647467205153`*^9}, 3.77437098353153*^9, {
   3.774372451741227*^9, 3.7743724564633493`*^9}, {3.774372490475089*^9, 
   3.774372495388307*^9}, {3.774373416775334*^9, 3.774373532688501*^9}, {
   3.7743775411892014`*^9, 3.774377566926187*^9}, {3.774378391453409*^9, 
   3.774378484072048*^9}, {3.774378641387855*^9, 3.7743786446609077`*^9}, {
   3.7743786752283583`*^9, 3.7743787522494793`*^9}, {3.7743789893974257`*^9, 
   3.774378993931265*^9}, {3.7743790439494543`*^9, 3.774379046311895*^9}, {
   3.774379763836186*^9, 3.774379863570098*^9}, {3.774379921971702*^9, 
   3.774379927058247*^9}, {3.774379965459968*^9, 3.774379971723411*^9}, {
   3.774380097435555*^9, 3.774380109726384*^9}, {3.7743894924102573`*^9, 
   3.774389494517465*^9}, {3.774532117541523*^9, 3.7745321584852552`*^9}, {
   3.7745322111399097`*^9, 3.7745322658848553`*^9}, {3.7745334545229053`*^9, 
   3.774533468555025*^9}, {3.774533509943967*^9, 3.774533512092572*^9}, {
   3.7745339162890663`*^9, 3.77453392435754*^9}, {3.774534363292841*^9, 
   3.774534374551546*^9}, {3.774534917508617*^9, 3.77453491774762*^9}, {
   3.7746198085049973`*^9, 3.774619902738553*^9}, {3.774620109893052*^9, 
   3.774620163986319*^9}, 3.774620322081851*^9, {3.774625227087247*^9, 
   3.774625273505422*^9}, {3.774625312107168*^9, 3.774625364214937*^9}, {
   3.7746268573608313`*^9, 3.774626953516035*^9}, {3.774627007439268*^9, 
   3.774627015494466*^9}, {3.774627050662875*^9, 3.7746270606040773`*^9}, {
   3.7746270995400953`*^9, 3.77462710034613*^9}, {3.774627208622931*^9, 
   3.774627238640821*^9}, {3.774627271008924*^9, 3.7746272862709713`*^9}, {
   3.774627414179368*^9, 3.774627442305615*^9}, {3.7746274752657223`*^9, 
   3.774627476177203*^9}, {3.7746275378096952`*^9, 3.774627577697288*^9}, {
   3.774627621642824*^9, 3.7746276258985987`*^9}, 3.77462832105758*^9, {
   3.77462884737672*^9, 3.7746288903347178`*^9}, {3.7746297216310873`*^9, 
   3.7746297363791924`*^9}, {3.774629766561267*^9, 3.774629768612607*^9}, {
   3.774631072898065*^9, 3.7746311550535583`*^9}, {3.774631185734908*^9, 
   3.774631198635809*^9}, {3.77463691955583*^9, 3.774636946448743*^9}, {
   3.774636986909234*^9, 3.7746369990096493`*^9}, {3.7746383521506557`*^9, 
   3.774638371166205*^9}, {3.7746413624099407`*^9, 3.774641367473652*^9}, {
   3.774655080143661*^9, 3.774655081381507*^9}, {3.774655351729128*^9, 
   3.7746553534452267`*^9}, {3.7746553851821117`*^9, 3.774655391425198*^9}, {
   3.7747300049514837`*^9, 3.774730005585928*^9}, {3.774960994067375*^9, 
   3.774961037924823*^9}, {3.7749837176979513`*^9, 3.774983725089834*^9}, {
   3.774983759444394*^9, 3.774983807624177*^9}, {3.774983863131978*^9, 
   3.77498402031229*^9}, 3.774984052634267*^9, {3.774984092541703*^9, 
   3.774984173915556*^9}, {3.7749843540511293`*^9, 3.7749843641433907`*^9}, 
   3.775066270952539*^9, {3.775067432675967*^9, 3.7750674489722567`*^9}, 
   3.775070738723229*^9, {3.775164916750616*^9, 3.775164937481785*^9}, {
   3.7779402533930902`*^9, 3.777940255647478*^9}, {3.777948839652609*^9, 
   3.7779488414669333`*^9}, {3.778185105791501*^9, 3.77818510665939*^9}, {
   3.778185183822072*^9, 3.778185191131853*^9}, 3.778185543792693*^9, {
   3.7781943040893297`*^9, 3.778194333053368*^9}, {3.778263354944819*^9, 
   3.778263359278173*^9}, {3.7782635235334997`*^9, 3.7782635255220423`*^9}, {
   3.778263559275909*^9, 3.7782635724215117`*^9}, 3.778265459724057*^9, {
   3.778265513918746*^9, 3.7782655284929457`*^9}, {3.778266170595997*^9, 
   3.7782662278421288`*^9}, {3.7782663783620243`*^9, 3.778266378730014*^9}, {
   3.779299109526073*^9, 3.7792992321223297`*^9}, {3.779299262756668*^9, 
   3.779299310028708*^9}, {3.779301616794731*^9, 3.779301621454356*^9}, 
   3.779302245291009*^9, {3.779302282733005*^9, 3.779302298291857*^9}, {
   3.779302337546762*^9, 3.779302338098793*^9}, {3.779302394418303*^9, 
   3.779302476403463*^9}, {3.779304158219887*^9, 3.7793042021109343`*^9}, {
   3.77931013279283*^9, 3.779310141100142*^9}, {3.779316826684443*^9, 
   3.779316827469964*^9}, {3.779316903745689*^9, 3.779316907579447*^9}, {
   3.779459662985982*^9, 3.779459673920691*^9}, {3.7794597380990343`*^9, 
   3.779459738430484*^9}, {3.779459793550468*^9, 3.779459841947901*^9}, {
   3.7798292851541452`*^9, 3.7798292906993313`*^9}, {3.781366928576489*^9, 
   3.781366942178136*^9}, {3.7813672070803747`*^9, 3.781367210306526*^9}, {
   3.781367308382773*^9, 3.781367397783065*^9}, {3.7813674359522448`*^9, 
   3.78136743614203*^9}, {3.781367471099197*^9, 3.781367490556182*^9}, {
   3.781367525756015*^9, 3.781367587365041*^9}, {3.781367629592236*^9, 
   3.781367730272603*^9}, {3.7813679116729383`*^9, 3.781367920705081*^9}, {
   3.7813689045399303`*^9, 3.7813689091069508`*^9}, {3.781369092171319*^9, 
   3.7813690979378433`*^9}, {3.78136915928232*^9, 3.7813691637193108`*^9}, {
   3.7813692342979183`*^9, 3.781369348308792*^9}, {3.781369381720235*^9, 
   3.7813693823249073`*^9}, {3.781369455414365*^9, 3.781369510457514*^9}, {
   3.781369647834371*^9, 3.7813696548846292`*^9}, {3.7813697719549837`*^9, 
   3.781369830905128*^9}, {3.781370154708507*^9, 3.781370190185391*^9}, {
   3.781370248660707*^9, 3.781370256732489*^9}, {3.781370362276045*^9, 
   3.7813703795217123`*^9}, {3.7813704491863413`*^9, 3.781370449415968*^9}, {
   3.781370598670138*^9, 3.781370656844431*^9}, {3.781370718979138*^9, 
   3.781370734266397*^9}, {3.781377662505136*^9, 3.781377682597782*^9}, {
   3.781378441882413*^9, 3.781378559998126*^9}, {3.7813931029826*^9, 
   3.7813931177155848`*^9}, {3.781393303299677*^9, 3.781393316371215*^9}, {
   3.781394761808234*^9, 3.781394769374127*^9}, 3.7813948398079777`*^9, {
   3.781396892550602*^9, 3.781396899040501*^9}, {3.781397113963971*^9, 
   3.781397129206937*^9}, {3.7813972012721357`*^9, 3.781397259880682*^9}, {
   3.7824037375659513`*^9, 3.782403753495489*^9}, {3.782404051788312*^9, 
   3.782404135878335*^9}, {3.782404918436921*^9, 3.7824049687987757`*^9}, {
   3.782413759504097*^9, 3.7824137843801193`*^9}, {3.782413819671974*^9, 
   3.782413820272964*^9}, {3.782413946721327*^9, 3.782413951607821*^9}, {
   3.782414240113329*^9, 3.782414243935927*^9}, {3.782414298785821*^9, 
   3.7824143078024178`*^9}, {3.782414561942727*^9, 3.782414709344677*^9}, {
   3.7824147878144217`*^9, 3.782414803114959*^9}, {3.782414986068342*^9, 
   3.7824149862813797`*^9}, {3.78241502849669*^9, 3.782415052513653*^9}, {
   3.782415152522455*^9, 3.782415180533958*^9}, {3.782415251704377*^9, 
   3.7824152594833097`*^9}, {3.782415355565584*^9, 3.782415393192349*^9}, {
   3.782415437789873*^9, 3.782415469384603*^9}, {3.782415591360708*^9, 
   3.78241563582654*^9}, {3.782415959524373*^9, 3.7824159641359043`*^9}, {
   3.782416037382265*^9, 3.7824160594943132`*^9}, {3.7824161789245367`*^9, 
   3.782416258592401*^9}, {3.782416324563312*^9, 3.78241633561754*^9}, {
   3.782416493053933*^9, 3.782416701967313*^9}, {3.782416776259534*^9, 
   3.782416777476593*^9}, {3.7824169271291943`*^9, 3.7824169939281607`*^9}, {
   3.7824170814794064`*^9, 3.7824171488044*^9}, {3.7824171877429132`*^9, 
   3.7824172095592213`*^9}, {3.782417342585174*^9, 3.782417428651422*^9}, {
   3.782417499262578*^9, 3.782417505490962*^9}, {3.782417705868536*^9, 
   3.78241772082159*^9}, {3.782417795788864*^9, 3.782417804160268*^9}, {
   3.7824178691487513`*^9, 3.782417916899622*^9}, {3.7824180387972317`*^9, 
   3.782418062400217*^9}, {3.782418105773514*^9, 3.782418108668351*^9}, {
   3.7824181549800587`*^9, 3.782418196137595*^9}, 3.782418654444276*^9, {
   3.782419853195723*^9, 3.782419855935508*^9}, {3.782419917865335*^9, 
   3.782419922949664*^9}, {3.782420008861915*^9, 3.7824200285350323`*^9}, {
   3.782420108453547*^9, 3.7824201526353073`*^9}, {3.782420200313347*^9, 
   3.782420243446433*^9}, {3.782420543190735*^9, 3.7824205692916613`*^9}, {
   3.782421222884289*^9, 3.782421290051198*^9}, {3.782421321578783*^9, 
   3.7824213300080347`*^9}, {3.782421379337824*^9, 3.782421390703059*^9}, {
   3.782421592978985*^9, 3.782421641040188*^9}, {3.782421791620818*^9, 
   3.782421800069236*^9}, {3.782421948490246*^9, 3.782421949898383*^9}, {
   3.7824231669135942`*^9, 3.782423210058854*^9}, {3.782423542723866*^9, 
   3.782423558094363*^9}, {3.782423591195148*^9, 3.782423652836376*^9}, {
   3.782423716776577*^9, 3.782423717042509*^9}, {3.7824246625557737`*^9, 
   3.7824247021369877`*^9}, {3.7824248065140877`*^9, 3.782424845692246*^9}, {
   3.782425007781856*^9, 3.7824250199229393`*^9}, {3.7824253766615133`*^9, 
   3.782425390639127*^9}, {3.782425446513225*^9, 3.78242550268329*^9}, {
   3.782425539087638*^9, 3.7824255453015738`*^9}, {3.784318938453122*^9, 
   3.7843189602355967`*^9}, {3.784318996220036*^9, 3.784319018421536*^9}, {
   3.784319048651957*^9, 3.784319079901005*^9}, {3.784348586809849*^9, 
   3.7843485978001347`*^9}, {3.78439858022274*^9, 3.784398588093199*^9}, {
   3.7843988237947598`*^9, 3.784398971766088*^9}, {3.784399028780594*^9, 
   3.784399120135153*^9}, {3.7843991551393414`*^9, 3.784399189358799*^9}, {
   3.784500489623784*^9, 3.784500534953164*^9}, {3.7845005692677727`*^9, 
   3.7845006194269953`*^9}, {3.784500650600515*^9, 3.7845006775514097`*^9}, {
   3.784500744858898*^9, 3.7845007739724216`*^9}, {3.784500810434121*^9, 
   3.784500874456831*^9}, 3.784505402674095*^9, {3.7845055114926443`*^9, 
   3.784505526338972*^9}, {3.784774525161364*^9, 3.784774529845031*^9}, {
   3.784774561665278*^9, 3.7847746418500967`*^9}, {3.7847749028017397`*^9, 
   3.7847749548628902`*^9}, {3.784775416516285*^9, 3.7847754170838633`*^9}, {
   3.784826409823677*^9, 3.78482648942176*^9}, {3.784826528156838*^9, 
   3.784826535662917*^9}, {3.784826610640966*^9, 3.784826647891843*^9}, {
   3.788024217064427*^9, 3.7880242398671913`*^9}, {3.788026596918154*^9, 
   3.788026627649378*^9}, {3.7880267770814247`*^9, 3.78802685133125*^9}, {
   3.788026920806765*^9, 3.7880269875352707`*^9}, {3.788027053829875*^9, 
   3.788027094130744*^9}, {3.788027353696342*^9, 3.788027417594112*^9}, {
   3.788027455613659*^9, 3.788027469603881*^9}, {3.78813271066079*^9, 
   3.788132711111462*^9}, {3.788135377093446*^9, 3.788135394233531*^9}, {
   3.788135437726799*^9, 3.788135498176464*^9}, {3.7881355378531523`*^9, 
   3.788135543959517*^9}, {3.78813557701702*^9, 3.7881355774216022`*^9}, {
   3.7881356454689627`*^9, 3.788135647756856*^9}, {3.791659500571887*^9, 
   3.791659547763225*^9}, {3.7916595809183826`*^9, 3.791659581247876*^9}, {
   3.791666690470174*^9, 3.791666878813155*^9}, {3.791667517974368*^9, 
   3.791667534847313*^9}, {3.791667834476389*^9, 3.791667887923843*^9}, {
   3.791667920881612*^9, 3.791668056650852*^9}, {3.791668488661751*^9, 
   3.791668512260118*^9}, {3.791668604814653*^9, 3.791668615745426*^9}, {
   3.7916686787206793`*^9, 3.791668735120905*^9}, {3.791668769549368*^9, 
   3.791668831741946*^9}, {3.79166888129377*^9, 3.791668916907569*^9}, {
   3.791668959290359*^9, 3.791669089184699*^9}, {3.791669454564129*^9, 
   3.7916694581603737`*^9}, {3.791669738076371*^9, 3.791669740270673*^9}, {
   3.791669782021756*^9, 3.791669823774729*^9}, {3.7916703383318233`*^9, 
   3.791670371388331*^9}, {3.7916704068199997`*^9, 3.791670453573621*^9}, {
   3.7916704869175587`*^9, 3.791670550577208*^9}, {3.7916761794420023`*^9, 
   3.791676191766408*^9}, {3.791676246746913*^9, 3.7916762993313713`*^9}, {
   3.791676523430264*^9, 3.7916766918038387`*^9}, {3.791676723923843*^9, 
   3.791676770415889*^9}, {3.791676815471365*^9, 3.791676826076556*^9}, 
   3.7916768567240257`*^9, {3.791679342554083*^9, 3.791679355626659*^9}, {
   3.791925991178474*^9, 3.791926062417948*^9}, {3.791926102786055*^9, 
   3.7919261830722303`*^9}, {3.7920775280534143`*^9, 3.792077615976206*^9}, {
   3.7920790151545973`*^9, 3.792079015569042*^9}, {3.79207906596388*^9, 
   3.792079066470398*^9}, {3.792103562097221*^9, 3.7921035866382732`*^9}, {
   3.792103631895322*^9, 3.7921036628948593`*^9}, {3.79210508376963*^9, 
   3.792105096816453*^9}, {3.7921077111714497`*^9, 3.792107742398118*^9}, {
   3.792110309284553*^9, 3.792110313980053*^9}, {3.792177357261671*^9, 
   3.792177361053092*^9}, {3.7921773967576323`*^9, 3.792177417759976*^9}, 
   3.7921775974932528`*^9, {3.7921791503347387`*^9, 3.792179157107998*^9}, {
   3.792179286371361*^9, 3.792179292671706*^9}, {3.7921793434188623`*^9, 
   3.79217936691816*^9}, {3.7921803014772997`*^9, 3.7921803424687567`*^9}, 
   3.792181223346918*^9, {3.792255562444318*^9, 3.792255629841289*^9}, {
   3.792255675533162*^9, 3.792255751936318*^9}, {3.792255845523679*^9, 
   3.79225592665889*^9}, {3.792255958712261*^9, 3.792256012368988*^9}, 
   3.792422077486389*^9, {3.792522837158257*^9, 3.792522905414432*^9}, {
   3.7925229394953337`*^9, 3.792522941951631*^9}, {3.792523100399198*^9, 
   3.7925231618786182`*^9}, {3.792523936033017*^9, 3.792523981558375*^9}, {
   3.7925243379966173`*^9, 3.792524361581257*^9}, {3.792524658186572*^9, 
   3.792524732568939*^9}, {3.792524858650695*^9, 3.792524877042532*^9}, {
   3.792524973427444*^9, 3.792524980022251*^9}, {3.792525348251349*^9, 
   3.792525373858437*^9}, {3.792525417962392*^9, 3.7925254478739862`*^9}, {
   3.792525479238636*^9, 3.7925255579851837`*^9}, {3.792532740159828*^9, 
   3.792532775075514*^9}, {3.792532806157857*^9, 3.792532862780652*^9}, {
   3.79253298856129*^9, 3.792532990915798*^9}, {3.7925408845494413`*^9, 
   3.7925409229201508`*^9}, {3.792540958287775*^9, 3.792540965156591*^9}, {
   3.7925410094096537`*^9, 3.7925410114713306`*^9}, {3.7925411436268063`*^9, 
   3.7925411931385727`*^9}, {3.7925413304969463`*^9, 3.792541369758354*^9}, {
   3.79262025528719*^9, 3.792620444362917*^9}, {3.792621811510762*^9, 
   3.792621855040127*^9}, {3.79262189536755*^9, 3.792621946788299*^9}, {
   3.792621988747208*^9, 3.792622061439899*^9}, {3.792622143872384*^9, 
   3.792622164376717*^9}, {3.7926224342746687`*^9, 3.7926224416608477`*^9}, {
   3.792622700160921*^9, 3.792622728702209*^9}, {3.7926227651345253`*^9, 
   3.792622772748288*^9}, {3.792625426185493*^9, 3.792625426773726*^9}, {
   3.792625668101511*^9, 3.7926256712190866`*^9}, {3.792631637557836*^9, 
   3.7926316588662653`*^9}, {3.792687625909514*^9, 3.792687629079266*^9}, 
   3.792697139788745*^9, {3.7926992209678288`*^9, 3.792699532728056*^9}, {
   3.792699586100198*^9, 3.792699586271154*^9}, {3.792781673505805*^9, 
   3.7927817009197063`*^9}, {3.792781899484359*^9, 3.7927819022427683`*^9}, {
   3.79286092390832*^9, 3.792860929580243*^9}, {3.793546686143126*^9, 
   3.793546689113064*^9}, {3.793546837717478*^9, 3.793546867178238*^9}, {
   3.793546955185236*^9, 3.793547008604719*^9}, {3.793547302738092*^9, 
   3.7935473459305363`*^9}, {3.7935474403496513`*^9, 3.793547476190846*^9}, {
   3.7935475301585007`*^9, 3.793547530911899*^9}, {3.793549303001189*^9, 
   3.793549349385573*^9}, {3.793549455877659*^9, 3.79354949213995*^9}, {
   3.7935507657291737`*^9, 3.793550822048216*^9}, 3.7935521245551453`*^9, {
   3.808937487995743*^9, 3.808937536740189*^9}, {3.8123894686576567`*^9, 
   3.812389503097918*^9}, {3.8123895613249483`*^9, 3.812389604285*^9}, {
   3.812389717838367*^9, 3.812389721732315*^9}, {3.812389755422276*^9, 
   3.8123897696038218`*^9}, {3.8123899210151997`*^9, 3.812389944824008*^9}, {
   3.812390045754795*^9, 3.81239006900264*^9}, {3.8123923174172993`*^9, 
   3.812392323309813*^9}, {3.812392443458377*^9, 3.812392466151319*^9}, 
   3.812392518206411*^9, {3.812392551169318*^9, 3.8123925562756767`*^9}, {
   3.812396299622168*^9, 3.812396313099742*^9}, {3.8123964059622793`*^9, 
   3.812396432035109*^9}, {3.81239652053715*^9, 3.8123965287821198`*^9}, {
   3.812650883856835*^9, 3.812650909335134*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"cb575ae6-250a-4b6a-b22c-1f871647f1e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "2020", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dynamic", "[", "mutantIterator", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"culledLength", "=", 
   RowBox[{"Length", "[", "mutantsWithData", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dropLength", "=", 
    RowBox[{"Length", "[", "unmeasured", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"culledLength", "=", "5"}], ";", "\[IndentingNewLine]", 
    RowBox[{"dropLength", "=", "1"}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"start1", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"total", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"makeAggDataset", "[", 
      RowBox[{"mutantsWithData", "[", 
       RowBox[{"[", "mutantIterator", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"mutantIterator", ",", "1", ",", "culledLength"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"totalSlow", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"makeAggDatasetSlow", "[", 
       RowBox[{"unmeasured", "[", 
        RowBox[{"[", "mutantIterator", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"mutantIterator", ",", "1", ",", "dropLength"}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"outForCSV", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Values", "[", 
         RowBox[{"total", "[", 
          RowBox[{"[", "mutantIterator", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"mutantIterator", ",", "1", ",", "culledLength"}], "}"}]}], 
       "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Values", "[", 
         RowBox[{"totalSlow", "[", 
          RowBox[{"[", "mutantIterator", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"mutantIterator", ",", "1", ",", "dropLength"}], "}"}]}], 
       "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTime", "[", "]"}], "-", "start1"}]}], "Input",
 CellChangeTimes->{{3.79166920542492*^9, 3.791669211377818*^9}, {
  3.791669835145688*^9, 3.791669837493372*^9}, {3.792078596894453*^9, 
  3.792078600186351*^9}, {3.792084712521851*^9, 3.792084716364587*^9}, {
  3.792107749952457*^9, 3.792107753329445*^9}, {3.7921104025972652`*^9, 
  3.7921104057243557`*^9}, {3.792700480344736*^9, 3.792700485617036*^9}, {
  3.792700933550927*^9, 3.79270093771215*^9}, {3.792781720791266*^9, 
  3.792781724778833*^9}, {3.7927819079139*^9, 3.792781908758013*^9}, {
  3.792781959579762*^9, 3.792781963019985*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"2bed5402-2c12-4fc5-b2ea-02778e5d3c51"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`mutantIterator, StandardForm],
  ImageSizeCache->{109., {1., 9.}}]], "Output",
 CellChangeTimes->{3.799528095334649*^9, 3.802385593898032*^9, 
  3.807130108836178*^9, 3.808938110887039*^9, 3.8123921020600853`*^9, 
  3.812392193107726*^9, 3.812396469864654*^9, 3.8123965493167667`*^9, 
  3.812556164124179*^9, 3.812663045681655*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"1b76f157-60b1-42c5-9ce0-af3baf8e35e4"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 224, 2, 24432410641055084859, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8123921021159163`*^9, 3.8123921931483707`*^9, 
  3.812396471077497*^9, 3.812396550517713*^9, 3.812556165376501*^9, 
  3.812663046858651*^9},
 CellLabel->
  "During evaluation of \
In[219]:=",ExpressionUUID->"13ca7247-272a-4e38-a830-0692c891a82c"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 224, 3, 24432410641055084859,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8123921021159163`*^9, 3.8123921931483707`*^9, 
  3.812396471077497*^9, 3.812396550517713*^9, 3.812556165376501*^9, 
  3.812663046864917*^9},
 CellLabel->
  "During evaluation of \
In[219]:=",ExpressionUUID->"b9910daa-3c24-4dcc-8615-baae7240782a"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 224, 4, 24432410641055084859, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8123921021159163`*^9, 3.8123921931483707`*^9, 
  3.812396471077497*^9, 3.812396550517713*^9, 3.812556165376501*^9, 
  3.812663046869142*^9},
 CellLabel->
  "During evaluation of \
In[219]:=",ExpressionUUID->"cbb1d487-f48e-4ad8-b1e2-0990ab6dfeda"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 224, 5, 24432410641055084859,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8123921021159163`*^9, 3.8123921931483707`*^9, 
  3.812396471077497*^9, 3.812396550517713*^9, 3.812556165376501*^9, 
  3.812663046873288*^9},
 CellLabel->
  "During evaluation of \
In[219]:=",ExpressionUUID->"0c9263a9-4cc6-4e4f-83ce-32483858436c"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 224, 6, 24432410641055084859, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8123921021159163`*^9, 3.8123921931483707`*^9, 
  3.812396471077497*^9, 3.812396550517713*^9, 3.812556165376501*^9, 
  3.812663047595771*^9},
 CellLabel->
  "During evaluation of \
In[219]:=",ExpressionUUID->"b0443def-1f3d-47ab-87a2-afc8c41ad8ac"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 224, 7, 24432410641055084859, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8123921021159163`*^9, 3.8123921931483707`*^9, 
  3.812396471077497*^9, 3.812396550517713*^9, 3.812556165376501*^9, 
  3.8126630476003027`*^9},
 CellLabel->
  "During evaluation of \
In[219]:=",ExpressionUUID->"d3d37368-8188-4d55-83a8-2d1558b7d2f7"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 224, 8, 24432410641055084859,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8123921021159163`*^9, 3.8123921931483707`*^9, 
  3.812396471077497*^9, 3.812396550517713*^9, 3.812556165376501*^9, 
  3.8126630476047907`*^9},
 CellLabel->
  "During evaluation of \
In[219]:=",ExpressionUUID->"cadc853e-3086-4259-b045-4e50fa0ee551"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 224, 9, 24432410641055084859, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8123921021159163`*^9, 3.8123921931483707`*^9, 
  3.812396471077497*^9, 3.812396550517713*^9, 3.812556165376501*^9, 
  3.8126630476091967`*^9},
 CellLabel->
  "During evaluation of \
In[219]:=",ExpressionUUID->"9ee52721-4aee-4492-a6d5-2f1ba1b8a0ee"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 225, 10, 24432410641055084859, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8123921021159163`*^9, 3.8123921931483707`*^9, 
  3.812396471077497*^9, 3.812396550517713*^9, 3.812556165376501*^9, 
  3.8126638312645206`*^9},
 CellLabel->
  "During evaluation of \
In[219]:=",ExpressionUUID->"61f4678e-2ab7-44e5-84d6-4456266da6bc"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 225, 11, 
   24432410641055084859, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8123921021159163`*^9, 3.8123921931483707`*^9, 
  3.812396471077497*^9, 3.812396550517713*^9, 3.812556165376501*^9, 
  3.812663831271509*^9},
 CellLabel->
  "During evaluation of \
In[219]:=",ExpressionUUID->"14c8dc7d-a6d5-4ad1-9be8-700933570157"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 225, 12, 24432410641055084859, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8123921021159163`*^9, 3.8123921931483707`*^9, 
  3.812396471077497*^9, 3.812396550517713*^9, 3.812556165376501*^9, 
  3.8126638500518627`*^9},
 CellLabel->
  "During evaluation of \
In[219]:=",ExpressionUUID->"ec011318-e0e0-42bc-8668-50e7861dfd9f"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 225, 13, 
   24432410641055084859, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8123921021159163`*^9, 3.8123921931483707`*^9, 
  3.812396471077497*^9, 3.812396550517713*^9, 3.812556165376501*^9, 
  3.812663850058757*^9},
 CellLabel->
  "During evaluation of \
In[219]:=",ExpressionUUID->"64c40ef2-41dd-489f-b782-2e17b1bbcc10"],

Cell[BoxData["843.069608`9.377408427103251"], "Output",
 CellChangeTimes->{3.799528095334649*^9, 3.802385593898032*^9, 
  3.807130108836178*^9, 3.808938110887039*^9, 3.8123921020600853`*^9, 
  3.812392193107726*^9, 3.812396469864654*^9, 3.8123965493167667`*^9, 
  3.812556164124179*^9, 3.812663888743896*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"6a9dbefb-f75c-428d-8636-837c1d5d5ed9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"maxExponent", "=", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", "$MaxMachineNumber"}], "]"}], "]"}], "+", "1"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testF2", "[", "in_", "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"NumberQ", "[", "in", "]"}], ",", 
    RowBox[{"ToString", "[", 
     RowBox[{"NumberForm", "[", 
      RowBox[{"in", ",", 
       RowBox[{"ScientificNotationThreshold", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "maxExponent"}], ",", "maxExponent"}], "}"}]}]}], 
      "]"}], "]"}], ",", 
    RowBox[{"ListQ", "[", "in", "]"}], ",", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NumberForm", "[", 
        RowBox[{"#", ",", 
         RowBox[{"ScientificNotationThreshold", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "maxExponent"}], ",", "maxExponent"}], "}"}]}]}], 
        "]"}], "&"}], "/@", "in"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"NumberQ", "[", "in", "]"}], "\[Equal]", "False"}], "&&", 
     RowBox[{
      RowBox[{"ListQ", "[", "in", "]"}], "\[Equal]", "False"}]}], ",", "in"}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.792177695383922*^9, 3.792177695841916*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"82e477d5-f17c-4af7-867a-f80ab6fbd483"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"keys", "=", 
   RowBox[{"Keys", "[", 
    RowBox[{"total", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"out2", "=", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"outForCSV", ",", "1"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"StringDrop", "[", 
            RowBox[{
             RowBox[{"StringDrop", "[", 
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}], "]"}], "<", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"StringDrop", "[", 
            RowBox[{
             RowBox[{"StringDrop", "[", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], 
         "&"}]}], "]"}], ",", "keys"}], "]"}]}], ";"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Desktop/test2.csv\>\"", ",", "out2"}], "]"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/Desktop/PafA_cMUP_aggData_WTR164ANorm_v.2.0_201025_Log10errors.csv\>\
\"", ",", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"testF2", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"outForCSV", ",", "1"}], "]"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", "keys"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7916787799929323`*^9, 3.7916787855102386`*^9}, {
  3.7920785923291492`*^9, 3.792078593062248*^9}, {3.792079362714617*^9, 
  3.7920793628653812`*^9}, {3.792086064484149*^9, 3.7920860742052603`*^9}, {
  3.792112939819146*^9, 3.792112940147016*^9}, {3.792697146380678*^9, 
  3.79269714690168*^9}, {3.792702126865966*^9, 3.79270212883237*^9}, {
  3.793550382486267*^9, 3.79355038320328*^9}, {3.799528100339525*^9, 
  3.799528103560109*^9}, {3.802385586532304*^9, 3.802385587144611*^9}, {
  3.807130136637285*^9, 3.807130140238625*^9}, {3.808937559055915*^9, 
  3.808937563592373*^9}, {3.8123896648548737`*^9, 3.812389667656886*^9}, {
  3.812556175261684*^9, 3.812556175501144*^9}, {3.812663116572878*^9, 
  3.812663116892249*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"e31448e2-c3ef-4a5c-8b7c-e97c3a93fdd7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Version\"\>", ",", "\<\"RunDate\"\>", ",", "\<\"MutantID\"\>", 
   ",", "\<\"Experiment\"\>", ",", "\<\"ChipType\"\>", ",", "\<\"Column\"\>", 
   ",", "\<\"Row\"\>", ",", "\<\"EnzymeConc\"\>", 
   ",", "\<\"AllSubstrateConcs\"\>", ",", "\<\"AllInitialRates\"\>", 
   ",", "\<\"kcat\"\>", ",", "\<\"kcatNormalized\"\>", 
   ",", "\<\"kcatLimit\"\>", ",", "\<\"KMFit\"\>", 
   ",", "\<\"KMLimitValue\"\>", ",", "\<\"KMLimit\"\>", 
   ",", "\<\"FitRSquared\"\>", ",", "\<\"kcatFitError\"\>", 
   ",", "\<\"KMFitError\"\>", ",", "\<\"kcatoverKMFitError\"\>", 
   ",", "\<\"kcatNormMean\"\>", ",", "\<\"kcatNormMedian\"\>", 
   ",", "\<\"KMMean\"\>", ",", "\<\"KMMedian\"\>", ",", "\<\"kcat/KM\"\>", 
   ",", "\<\"kcat/KMNorm\"\>", ",", "\<\"kobs\"\>", 
   ",", "\<\"kobsNegCorrected\"\>", ",", "\<\"kcat/KMNormMean\"\>", 
   ",", "\<\"kcat/KMNormMedian\"\>", 
   ",", "\<\"kcatNormBootstrapHypothesisTestMedian\"\>", 
   ",", "\<\"KMBootstrapHypothesisTestMedian\"\>", 
   ",", "\<\"kcat/KMBootstrapHypothesisTestMedian\"\>", 
   ",", "\<\"kobsBootstrapHypothesisTestMedian\"\>", 
   ",", "\<\"Log10StdDevkcat\"\>", ",", "\<\"Log10StdDevKM\"\>", 
   ",", "\<\"Log10StdDevkcat/KM\"\>", ",", "\<\"Log10StdDevkcat/KMLimit\"\>", 
   ",", "\<\"kcatNormBootstrapHypothesisTestMean\"\>", 
   ",", "\<\"KMBootstrapHypothesisTestMean\"\>", 
   ",", "\<\"kcat/KMBootstrapHypothesisTestMean\"\>", 
   ",", "\<\"kobsBootstrapHypothesisTestMean\"\>", 
   ",", "\<\"NumCulledReps\"\>", ",", "\<\"LBR\"\>", 
   ",", "\<\"StdDevkcat\"\>", ",", "\<\"StdDevKM\"\>", 
   ",", "\<\"StdDevkcat/KM\"\>", ",", "\<\"kcat/KMLimit\"\>", 
   ",", "\<\"kcatAggLimit\"\>", ",", "\<\"KMAggLimit\"\>", 
   ",", "\<\"kcat/KMAggLimit\"\>", ",", "\<\"KMMedianLimit\"\>", 
   ",", "\<\"KMMeanLimit\"\>", ",", "\<\"kcat/KMNormMedianLimit\"\>", 
   ",", "\<\"kcat/KMNormMeanLimit\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7995294203950644`*^9, 3.802386360756692*^9, 
  3.80713086266555*^9, 3.8089388394295197`*^9, 3.812398043430169*^9, 
  3.812398076430151*^9, 3.812557086689775*^9, 3.8126638888358088`*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"957b8c68-f889-4fc4-8fc2-4358c82a19b9"],

Cell[BoxData["\<\"~/Desktop/PafA_cMUP_aggData_WTR164ANorm_v.2.0_201025_\
Log10errors.csv\"\>"], "Output",
 CellChangeTimes->{3.7995294203950644`*^9, 3.802386360756692*^9, 
  3.80713086266555*^9, 3.8089388394295197`*^9, 3.812398043430169*^9, 
  3.812398076430151*^9, 3.812557086689775*^9, 3.8126638981445208`*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"f4b3b814-ca07-485e-8c70-bbb886287921"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1379, 938},
WindowMargins->{{-1882, Automatic}, {Automatic, -61}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9acd644a-62d7-4e42-8e0e-edba110b12c2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 194, 3, 98, "Title",ExpressionUUID->"155087c4-5bad-4495-aebc-8392b3d09245"],
Cell[777, 27, 25700, 574, 2572, "Input",ExpressionUUID->"fb32acb4-b359-47f1-868b-143b6153d6ea"],
Cell[CellGroupData[{
Cell[26502, 605, 209, 4, 45, "Subsubsection",ExpressionUUID->"2d5bc04a-693f-44b9-9b8d-57108e9cbb42"],
Cell[26714, 611, 672, 14, 150, "Text",ExpressionUUID->"02b0d59e-d607-4b3f-b749-3c6f6414bdd9"],
Cell[CellGroupData[{
Cell[27411, 629, 5461, 117, 514, "Input",ExpressionUUID->"55e6d27b-2411-4146-90f3-8c0b5e3eebad"],
Cell[32875, 748, 2238, 39, 350, "Output",ExpressionUUID->"6d2b361e-f994-412e-b1c0-19d35f049be2"],
Cell[35116, 789, 851, 13, 34, "Output",ExpressionUUID->"5696dd5c-849a-4442-8eb9-66c7d8f8a977"]
}, Open  ]],
Cell[35982, 805, 250, 6, 35, "Text",ExpressionUUID->"7777c015-8474-4334-a5d6-973e0e63af64"],
Cell[CellGroupData[{
Cell[36257, 815, 5029, 117, 325, "Input",ExpressionUUID->"994f18a8-2ebe-4c1d-b6d9-d09ec9d15804"],
Cell[41289, 934, 458, 7, 37, "Output",ExpressionUUID->"99e92850-3449-42a2-88cf-4a79655715b8"],
Cell[CellGroupData[{
Cell[41772, 945, 563, 18, 24, "Print",ExpressionUUID->"4627d7f0-3a1d-4516-b3a0-36cc0cae0b4c"],
Cell[42338, 965, 504, 16, 24, "Print",ExpressionUUID->"bf53df10-b3e3-4b18-8fb4-6bacba2559bd"],
Cell[42845, 983, 503, 16, 24, "Print",ExpressionUUID->"bd43777e-c288-4162-8682-d23f23e4ec4b"],
Cell[43351, 1001, 989, 32, 24, "Print",ExpressionUUID->"02d4505e-227a-4e09-a034-c17bea42058b"],
Cell[44343, 1035, 191, 5, 24, "Print",ExpressionUUID->"5264e095-653d-4071-b4ea-558e2fec348b"],
Cell[44537, 1042, 191, 5, 24, "Print",ExpressionUUID->"5043ac76-358a-4c63-a20b-903b037efda6"],
Cell[44731, 1049, 244, 7, 24, "Print",ExpressionUUID->"9b951395-9cb2-46e6-84a0-26be3510c454"],
Cell[44978, 1058, 381, 12, 24, "Print",ExpressionUUID->"b28b1cfd-ab08-4398-97b4-2ad8897731c7"],
Cell[45362, 1072, 2064, 68, 44, "Print",ExpressionUUID->"602b279a-f904-4b25-b527-57fc9894b78d"],
Cell[47429, 1142, 2874, 94, 63, "Print",ExpressionUUID->"fbd908ed-c3f2-451a-9ec1-dfd840dfc6ee"],
Cell[50306, 1238, 1111, 36, 24, "Print",ExpressionUUID->"751683f1-33f4-4a4d-ba5e-5350370da374"],
Cell[51420, 1276, 5353, 176, 101, "Print",ExpressionUUID->"168c75a4-19db-4ae0-9844-997dcc9ad4e5"],
Cell[56776, 1454, 5459, 180, 101, "Print",ExpressionUUID->"4f0e1cda-bd7e-493a-9478-7b910800d107"],
Cell[62238, 1636, 14659, 484, 253, "Print",ExpressionUUID->"df9412da-0a7c-4aa6-8d44-9e215753534f"],
Cell[76900, 2122, 3584, 118, 63, "Print",ExpressionUUID->"33e030c0-5465-4c94-b218-b96225bcb302"],
Cell[80487, 2242, 191, 5, 24, "Print",ExpressionUUID->"366d8249-76a7-499a-8814-20c760ac71e5"]
}, Open  ]]
}, Open  ]],
Cell[80705, 2251, 2908, 68, 157, "Input",ExpressionUUID->"8062855c-afcd-4132-8f95-6f9966e04c54"],
Cell[83616, 2321, 1314, 25, 30, "Input",ExpressionUUID->"e5494d46-1093-45ba-b54e-f4a8a78e3ec4"],
Cell[84933, 2348, 312, 7, 35, "Text",ExpressionUUID->"3b92b5f8-60bc-45f4-992a-69f6a3a46416"],
Cell[CellGroupData[{
Cell[85270, 2359, 5929, 158, 577, "Input",ExpressionUUID->"63e6970d-0968-4161-8c6b-807775a5313c"],
Cell[91202, 2519, 263448, 4814, 765, "Output",ExpressionUUID->"beca945d-0462-46b4-826e-06c4407d2c88"],
Cell[354653, 7335, 250844, 4574, 715, "Output",ExpressionUUID->"3db32594-1e5b-49ce-9fc0-820ea90bead1"]
}, Open  ]],
Cell[605512, 11912, 429, 10, 81, "Text",ExpressionUUID->"42404867-f43d-4a0a-aa16-c32c8407fced"],
Cell[CellGroupData[{
Cell[605966, 11926, 12880, 291, 1081, "Input",ExpressionUUID->"354975ad-a4af-4bf1-9881-9d4d708f94e6"],
Cell[618849, 12219, 426, 7, 34, "Output",ExpressionUUID->"a58121f1-373d-4e53-afd8-5b8523fb2ab6"],
Cell[619278, 12228, 3493, 82, 119, "Output",ExpressionUUID->"e8e575b7-65ac-467f-b7e5-43b90801c878"],
Cell[622774, 12312, 3689, 85, 140, "Output",ExpressionUUID->"56a6952e-b37d-4ed3-a07b-fdf2733d4128"],
Cell[626466, 12399, 355, 6, 34, "Output",ExpressionUUID->"3801c615-5e31-43e5-87b5-219a00ab4773"]
}, Open  ]],
Cell[CellGroupData[{
Cell[626858, 12410, 960, 18, 94, "Input",ExpressionUUID->"21d4ab7f-fc12-4e3f-824e-3bb7049ef234"],
Cell[627821, 12430, 660, 11, 34, "Output",ExpressionUUID->"4411f54e-188c-4abf-a26e-348e83d2f6d7"],
Cell[628484, 12443, 950, 15, 56, "Output",ExpressionUUID->"d5707bc7-4233-4e7f-9713-e60ffdaf9e05"],
Cell[629437, 12460, 962, 15, 56, "Output",ExpressionUUID->"8d480b88-c112-4460-9a5c-df94126e7e76"],
Cell[630402, 12477, 354, 6, 34, "Output",ExpressionUUID->"e2bea5ba-9b6b-4c07-ba52-945a545d41c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[630793, 12488, 5292, 137, 367, "Input",ExpressionUUID->"a21d4dd7-e6d4-4266-a4df-ef5770659194"],
Cell[636088, 12627, 104689, 1897, 225, "Output",ExpressionUUID->"2849d454-c2b2-4d61-9e83-575f1b40ddf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[740814, 14529, 1685, 47, 199, "Input",ExpressionUUID->"4dfa2de9-e44b-4e57-b096-45c3557b3850"],
Cell[742502, 14578, 1203, 22, 98, "Output",ExpressionUUID->"58c511c3-3914-4a72-b462-a2b12429be58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[743742, 14605, 4336, 118, 451, "Input",ExpressionUUID->"a6eea525-f153-4237-a049-764c66b17d6c"],
Cell[748081, 14725, 432, 8, 24, "Print",ExpressionUUID->"bb4b98b7-440b-4519-a9c6-8b1d8bdf2937"],
Cell[748516, 14735, 343, 5, 34, "Output",ExpressionUUID->"0fab67b6-1417-40d7-81bc-167358a7c3cd"],
Cell[748862, 14742, 437, 8, 24, "Print",ExpressionUUID->"282c1a19-d802-4347-ba14-6eee767d4ffc"],
Cell[749302, 14752, 342, 5, 34, "Output",ExpressionUUID->"9ebb8453-3e8c-4143-8aae-ed377802cbdf"],
Cell[749647, 14759, 426, 8, 24, "Print",ExpressionUUID->"9712a8f2-1105-4ed8-88a3-23c532eb6066"],
Cell[750076, 14769, 918, 15, 34, "Output",ExpressionUUID->"aba60e89-05d6-4c5c-a609-88e9d683b309"],
Cell[750997, 14786, 413, 7, 24, "Print",ExpressionUUID->"c323e4fc-cd4b-4ec1-96e9-56cee8da6be0"],
Cell[751413, 14795, 91358, 1627, 577, "Output",ExpressionUUID->"93b7c7b6-fb83-4a34-a75c-638035a9cf61"],
Cell[842774, 16424, 407, 7, 24, "Print",ExpressionUUID->"4d6ca724-89fe-4c6b-b13b-40f57907c679"],
Cell[843184, 16433, 356, 5, 34, "Output",ExpressionUUID->"2fc8b167-cb4c-4164-a612-482c64827f21"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[843589, 16444, 168, 3, 45, "Subsubsection",ExpressionUUID->"f0d1602f-0e43-4b68-97fb-13e06ef4c366"],
Cell[843760, 16449, 235, 6, 35, "Text",ExpressionUUID->"d313c4a8-07ee-4d79-ab0f-99b7cc8a99b7"],
Cell[843998, 16457, 2528, 52, 283, "Input",ExpressionUUID->"b43e4493-5f4f-4c03-a057-8a4549fb6151"]
}, Open  ]],
Cell[CellGroupData[{
Cell[846563, 16514, 184, 3, 45, "Subsubsection",ExpressionUUID->"e9b971c3-d761-4b36-a9d8-788c5a895065"],
Cell[CellGroupData[{
Cell[846772, 16521, 1988, 41, 178, "Input",ExpressionUUID->"2143b597-45a0-4550-ae79-49c980a20b77"],
Cell[848763, 16564, 2104, 36, 143, "Output",ExpressionUUID->"4b5b3ac1-7cac-40a1-8966-a2b4fd2b78e1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[850916, 16606, 244, 4, 45, "Subsubsection",ExpressionUUID->"833e0c3c-3e13-4ad9-95b0-db098ca7d807"],
Cell[851163, 16612, 1029, 17, 150, "Text",ExpressionUUID->"d76d8ebd-7714-455d-b365-06e0b04332a3"],
Cell[CellGroupData[{
Cell[852217, 16633, 30652, 786, 2068, "Input",ExpressionUUID->"788eac06-43ae-4789-8c10-694a2e526b7a"],
Cell[882872, 17421, 1525, 28, 98, "Output",ExpressionUUID->"5bae5ec8-1555-440d-bf9c-21d9d63a072d"],
Cell[884400, 17451, 746, 13, 24, "Print",ExpressionUUID->"1996c29c-0531-4595-b4f9-fba2891ace66"],
Cell[885149, 17466, 682, 11, 34, "Output",ExpressionUUID->"8251c1af-6e2c-4fd7-b193-e5900d962d06"],
Cell[885834, 17479, 879, 14, 24, "Print",ExpressionUUID->"fe3707ce-2915-496b-8d5c-7026d313cca5"],
Cell[886716, 17495, 1829, 35, 101, "Output",ExpressionUUID->"ae7848ca-4614-49a1-824d-54219c4e96b3"],
Cell[888548, 17532, 749, 13, 24, "Print",ExpressionUUID->"9cc55f25-d65f-4356-891f-3464fa724646"],
Cell[889300, 17547, 681, 11, 34, "Output",ExpressionUUID->"f07e2835-670d-4958-9ee7-da4e8173de67"],
Cell[889984, 17560, 770, 13, 24, "Print",ExpressionUUID->"6654d7da-b094-427e-a529-8bf461b7007d"],
Cell[890757, 17575, 1236, 23, 60, "Output",ExpressionUUID->"08c9f149-646c-46f8-86de-8beb139c6380"],
Cell[891996, 17600, 498142, 9251, 323, "Output",ExpressionUUID->"6f6f42a3-801d-4dd7-9c81-646dd9c3c699"],
Cell[1390141, 26853, 681, 11, 34, "Output",ExpressionUUID->"231de53a-0b68-4e3e-a1bd-f6482e0ff009"],
Cell[1390825, 26866, 681, 11, 34, "Output",ExpressionUUID->"23eb5341-9ee3-4fbb-b25a-5d0f939fcf9a"],
Cell[1391509, 26879, 1018, 18, 37, "Output",ExpressionUUID->"ba763d4b-448b-4a73-be2a-86cda5309364"],
Cell[1392530, 26899, 497949, 9256, 323, "Output",ExpressionUUID->"be7466d3-debe-4ca7-8005-71e3a5da2bec"],
Cell[1890482, 36157, 780, 15, 24, "Print",ExpressionUUID->"e69a6a49-25b9-4261-8050-ba55661750c0"],
Cell[1891265, 36174, 2345, 45, 143, "Output",ExpressionUUID->"cae05a91-0268-4067-adea-6ecc512264e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1893647, 36224, 223, 4, 30, "Input",ExpressionUUID->"2a3b2cc6-7b27-47c4-912b-c96bd7741d86"],
Cell[1893873, 36230, 225, 4, 34, "Output",ExpressionUUID->"1fb70812-391a-4482-bb81-92d62e232196"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1894147, 36240, 328, 6, 45, "Subsubsection",ExpressionUUID->"5094b616-35cf-4c74-b305-46d6cb89a1a7"],
Cell[1894478, 36248, 377, 8, 35, "Text",ExpressionUUID->"20269f84-03b6-417a-9af5-0720ef100c8b"],
Cell[CellGroupData[{
Cell[1894880, 36260, 11380, 271, 955, "Input",ExpressionUUID->"45826b42-1679-4f65-8a12-9479d91334d8"],
Cell[1906263, 36533, 335, 5, 34, "Output",ExpressionUUID->"238b144c-2c63-4a46-a04b-956d8b2e5af4"],
Cell[1906601, 36540, 334, 5, 34, "Output",ExpressionUUID->"90de6926-46af-43a7-8638-82321c27f2c9"],
Cell[1906938, 36547, 400, 7, 24, "Print",ExpressionUUID->"44173cc3-6c88-459a-be44-de0b37d8fd4f"],
Cell[1907341, 36556, 399, 8, 34, "Output",ExpressionUUID->"6648b59c-0872-4afe-9c9e-bc36873b59ff"],
Cell[1907743, 36566, 399, 8, 34, "Output",ExpressionUUID->"f4425d1c-1be3-44ee-96ff-22e51065a0bc"],
Cell[1908145, 36576, 388, 6, 24, "Print",ExpressionUUID->"522f4b82-d3aa-4464-a54f-01eaf38e7863"],
Cell[1908536, 36584, 3530, 69, 313, "Output",ExpressionUUID->"f7152f48-141b-48f9-932c-7e9c2a0b522a"],
Cell[1912069, 36655, 401, 8, 34, "Output",ExpressionUUID->"6730df44-16f1-481e-9f2d-8e47d19f7a03"],
Cell[1912473, 36665, 387, 6, 24, "Print",ExpressionUUID->"b410b4d2-f18c-45ba-8a46-aac13e653648"],
Cell[1912863, 36673, 3064, 62, 317, "Output",ExpressionUUID->"f67ae8d3-e18b-4040-bd70-5e1c9fb0b398"],
Cell[1915930, 36737, 407, 7, 24, "Print",ExpressionUUID->"bb9f30a6-cf93-4ae1-b324-58003473aed5"],
Cell[1916340, 36746, 5597, 103, 313, "Output",ExpressionUUID->"aa30f7ec-748c-4b58-bbc0-de3d059815cb"],
Cell[1921940, 36851, 5548, 88, 291, "Output",ExpressionUUID->"da49f610-eb71-456d-95ae-1896f3c0ef60"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1927537, 36945, 411, 10, 45, "Subsubsection",ExpressionUUID->"78ea248f-e80f-4a6c-92c4-e27cab06a79f"],
Cell[1927951, 36957, 501, 11, 58, "Text",ExpressionUUID->"8c19fd34-8780-4e56-94cb-af37054b6fa2"],
Cell[1928455, 36970, 2346, 61, 115, "Input",ExpressionUUID->"8f2c3714-142c-40a3-ab30-f458756220d3"],
Cell[CellGroupData[{
Cell[1930826, 37035, 5322, 130, 304, "Input",ExpressionUUID->"bc4ab314-861f-4e28-b67d-89752ee63129"],
Cell[1936151, 37167, 378, 8, 34, "Output",ExpressionUUID->"f7c219fe-cd3c-44ab-b544-f01859196cdf"],
Cell[1936532, 37177, 378, 8, 34, "Output",ExpressionUUID->"b6aba463-a38e-40a1-9c44-684e8961225b"],
Cell[1936913, 37187, 238356, 4399, 244, "Output",ExpressionUUID->"396ff05b-ed48-4b97-a249-a98af5887a00"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2175318, 41592, 336, 7, 45, "Subsubsection",ExpressionUUID->"021ac460-bd3c-4cb3-b5f6-288559f9cd8f"],
Cell[2175657, 41601, 280, 6, 35, "Text",ExpressionUUID->"cb27762c-1c3a-40c1-999d-e8c1c7a8df1b"],
Cell[CellGroupData[{
Cell[2175962, 41611, 29487, 495, 19, "Input",ExpressionUUID->"df7e5296-d58d-4718-b45e-05cda971797d",
 CellOpen->False],
Cell[2205452, 42108, 32674, 821, 101, "Output",ExpressionUUID->"2e2e7728-0b23-41d6-9a76-0c53cbc15839"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2238163, 42934, 1760, 39, 115, "Input",ExpressionUUID->"4680a564-2fe1-4cb3-b851-4ab7bf0dd501"],
Cell[2239926, 42975, 1651, 26, 101, "Output",ExpressionUUID->"41a6a2be-2d6e-4736-a3c1-e5ea93bc5009"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2241626, 43007, 367, 10, 45, "Subsubsection",ExpressionUUID->"e981d834-d9fa-4ff6-9031-b5e8ce40e5f2"],
Cell[2241996, 43019, 297, 7, 35, "Text",ExpressionUUID->"5c1159f1-8dc4-4695-b725-c310f1a2c051"],
Cell[2242296, 43028, 30747, 724, 19, "Input",ExpressionUUID->"a7fdf72f-207a-473f-8eaf-4679990b057c",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[2273080, 43757, 423, 10, 45, "Subsubsection",ExpressionUUID->"9e931598-c082-4f4b-985c-14f7e72c9cbf"],
Cell[2273506, 43769, 140875, 2951, 7549, "Input",ExpressionUUID->"cb575ae6-250a-4b6a-b22c-1f871647f1e0"],
Cell[CellGroupData[{
Cell[2414406, 46724, 3083, 80, 409, "Input",ExpressionUUID->"2bed5402-2c12-4fc5-b2ea-02778e5d3c51"],
Cell[2417492, 46806, 461, 8, 34, "Output",ExpressionUUID->"1b76f157-60b1-42c5-9ce0-af3baf8e35e4"],
Cell[2417956, 46816, 491, 11, 41, "Message",ExpressionUUID->"13ca7247-272a-4e38-a830-0692c891a82c"],
Cell[2418450, 46829, 526, 12, 24, "Message",ExpressionUUID->"b9910daa-3c24-4dcc-8615-baae7240782a"],
Cell[2418979, 46843, 491, 11, 41, "Message",ExpressionUUID->"cbb1d487-f48e-4ad8-b1e2-0990ab6dfeda"],
Cell[2419473, 46856, 526, 12, 24, "Message",ExpressionUUID->"0c9263a9-4cc6-4e4f-83ce-32483858436c"],
Cell[2420002, 46870, 491, 11, 41, "Message",ExpressionUUID->"b0443def-1f3d-47ab-87a2-afc8c41ad8ac"],
Cell[2420496, 46883, 573, 12, 24, "Message",ExpressionUUID->"d3d37368-8188-4d55-83a8-2d1558b7d2f7"],
Cell[2421072, 46897, 528, 12, 24, "Message",ExpressionUUID->"cadc853e-3086-4259-b045-4e50fa0ee551"],
Cell[2421603, 46911, 577, 12, 24, "Message",ExpressionUUID->"9ee52721-4aee-4492-a6d5-2f1ba1b8a0ee"],
Cell[2422183, 46925, 494, 11, 41, "Message",ExpressionUUID->"61f4678e-2ab7-44e5-84d6-4456266da6bc"],
Cell[2422680, 46938, 527, 12, 24, "Message",ExpressionUUID->"14c8dc7d-a6d5-4ad1-9be8-700933570157"],
Cell[2423210, 46952, 494, 11, 41, "Message",ExpressionUUID->"ec011318-e0e0-42bc-8668-50e7861dfd9f"],
Cell[2423707, 46965, 527, 12, 24, "Message",ExpressionUUID->"64c40ef2-41dd-489f-b782-2e17b1bbcc10"],
Cell[2424237, 46979, 391, 6, 34, "Output",ExpressionUUID->"6a9dbefb-f75c-428d-8636-837c1d5d5ed9"]
}, Open  ]],
Cell[2424643, 46988, 1460, 41, 94, "Input",ExpressionUUID->"82e477d5-f17c-4af7-867a-f80ab6fbd483"],
Cell[CellGroupData[{
Cell[2426128, 47033, 2638, 65, 157, "Input",ExpressionUUID->"e31448e2-c3ef-4a5c-8b7c-e97c3a93fdd7"],
Cell[2428769, 47100, 2198, 37, 140, "Output",ExpressionUUID->"957b8c68-f889-4fc4-8fc2-4358c82a19b9"],
Cell[2430970, 47139, 395, 6, 34, "Output",ExpressionUUID->"f4b3b814-ca07-485e-8c70-bbb886287921"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

