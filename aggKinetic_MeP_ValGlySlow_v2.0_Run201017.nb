(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1439602,      28135]
NotebookOptionsPosition[   1424439,      27924]
NotebookOutlinePosition[   1424911,      27943]
CellTagsIndexPosition[   1424868,      27940]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Aggregate all MeP data (ValScan, GlyScan, SlowChip, SlowMePChip)\
\>", "Title",
 CellChangeTimes->{{3.77358367011915*^9, 3.773583684382947*^9}, {
  3.81195149065443*^9, 
  3.811951498230863*^9}},ExpressionUUID->"782b1cc7-d04b-432e-b5ad-\
8b99260e1037"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"notebookVersion", "=", "2.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"keysUsed", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<MutantID\>\"", ",", "\"\<ExpIndex\>\"", ",", 
      "\"\<ManualGFPFlag\>\"", ",", "\"\<UniqueExptID\>\"", ",", 
      "\"\<ChipType\>\"", ",", "\"\<LocalBackgroundRatio\>\"", ",", 
      "\"\<Indices\>\"", ",", "\"\<EnzymeConc\>\"", ",", 
      "\"\<fit_mm_datapoints\>\"", ",", "\"\<DataPointsOptLinFit\>\"", ",", 
      "\"\<fit_mm_curved_r2\>\"", ",", "\"\<fit_mm_kcat\>\"", ",", 
      "\"\<fit_mm_KM\>\"", ",", "\"\<fit_mm_scale_factor\>\"", ",", 
      "\"\<FitR2\>\"", ",", "\"\<DataPoints\>\"", ",", "\"\<kcat\>\"", ",", 
      "\"\<Km\>\"", ",", "\"\<ScaleFactor\>\"", ",", "\"\<SubstrateConc\>\"", 
      ",", "\"\<OptLinFitSlope\>\"", ",", "\"\<kcat/Km\>\"", ",", 
      "\"\<AllLBRs\>\"", ",", "\"\<AllInitialRates\>\"", ",", 
      "\"\<AllSubstrateConcs\>\"", ",", "\"\<StdCurveR2\>\"", ",", 
      "\"\<NumPointsLinearFits\>\"", ",", "\"\<fit_mm_kcat_param_error\>\"", 
      ",", "\"\<fit_mm_KM_param_error\>\"", ",", "\"\<AllEnzymeConcs\>\""}], 
     "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "modified", " ", "median", " ", "function", " ", "to", " ", "return", " ",
      "value", " ", "if", " ", "length", " ", "of", " ", "list"}], " ", "=", 
    " ", "1"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"median2", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"Median", "[", 
      RowBox[{"{", "x", "}"}], "]"}], ",", 
     RowBox[{"Median", "[", "x", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"expIndexToCullOn", "=", "7"}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SconcToCullOn", "=", "50.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"twoPointCutoff", "=", "6"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rSqaredCutoff", "=", "0.97"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"calcRatio", "[", 
    RowBox[{"indices_", ",", "Sconc_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"repeatRate", ",", "initRate"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"initRate", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"allGrouped", "[", "indices", "]"}], "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#AssayType", "\[Equal]", "1"}], "&&", 
            RowBox[{"#SubstrateConc", "\[Equal]", "Sconc"}]}], "&"}], "]"}], 
         "]"}], "[", 
        RowBox[{"1", ",", "\"\<OptLinFitSlope\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"repeatRate", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"allGrouped", "[", "indices", "]"}], "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"#AssayType", "\[Equal]", "0"}], "&"}], "]"}], "]"}], "[", 
        
        RowBox[{"1", ",", "\"\<OptLinFitSlope\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"repeatRate", "/", "initRate"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateDatasetFromCSV", "[", 
    RowBox[{"in_", ",", "type_", ",", "id_", ",", 
     RowBox[{"keysToTake_", ":", "keysUsed"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dsIn", ",", "keys"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dsIn", "=", "in"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"keys", "=", 
       RowBox[{"dsIn", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"r2key", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"keysToTake", ",", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"#", ",", "\"\<curved_r2\>\""}], "]"}], "&"}]}], "]"}], 
        "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dataPointsKey", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"keysToTake", ",", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"#", ",", "\"\<datapoints\>\""}], "]"}], "&"}]}], "]"}], 
        "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"kcatKey", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"keysToTake", ",", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"#", ",", "\"\<_kcat\>\""}], "]"}], "&"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"KmKey", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"keysToTake", ",", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"#", ",", "\"\<_KM\>\""}], "]"}], "&"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"kcatUncorrected", "=", "kcatKey"}], ";", "\[IndentingNewLine]", 
      RowBox[{"scaleFactorKey", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"keysToTake", ",", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"#", ",", "\"\<scale_factor\>\""}], "]"}], "&"}]}], "]"}],
         "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"all", "=", 
       RowBox[{"Dataset", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Association", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"keys", "[", 
                  RowBox[{"[", "n", "]"}], "]"}], "\[Rule]", 
                 RowBox[{"dsIn", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "n"}], "]"}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", 
                 RowBox[{"Length", "[", "keys", "]"}]}], "}"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<ChipType\>\"", "\[Rule]", "type"}], ",", 
              RowBox[{"\"\<UniqueExptID\>\"", "\[Rule]", "id"}]}], "}"}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "dsIn", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"repeatSconc", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"allGrouped", "[", "1", "]"}], "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"#AssayType", "\[Equal]", "0"}], "&"}], "]"}], "]"}], "[", 
        
        RowBox[{"1", ",", "\"\<SubstrateConc\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"allGrouped", "=", 
       RowBox[{"all", "[", 
        RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"all2", "=", 
       RowBox[{"all", "[", 
        RowBox[{"All", ",", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<FitR2\>\"", "\[Rule]", 
               RowBox[{"#", "[", "r2key", "]"}]}], ",", 
              RowBox[{"\"\<DataPoints\>\"", "\[Rule]", 
               RowBox[{"#", "[", "dataPointsKey", "]"}]}], ",", 
              RowBox[{"\"\<kcat\>\"", "\[Rule]", 
               RowBox[{"#", "[", "kcatKey", "]"}]}], ",", 
              RowBox[{"\"\<Km\>\"", "\[Rule]", 
               RowBox[{"#", "[", "KmKey", "]"}]}], ",", 
              RowBox[{"\"\<kcat/Km\>\"", "->", 
               RowBox[{
                RowBox[{"#", "[", "kcatKey", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", "KmKey", "]"}], "*", 
                  RowBox[{"10", "^", 
                   RowBox[{"-", "6"}]}]}], ")"}]}]}], ",", 
              RowBox[{"\"\<ScaleFactor\>\"", "\[Rule]", 
               RowBox[{"#", "[", "scaleFactorKey", "]"}]}], ",", 
              RowBox[{"\"\<AllLBRs\>\"", "\[Rule]", 
               RowBox[{"Normal", "[", 
                RowBox[{
                 RowBox[{"allGrouped", "[", "#Indices", "]"}], "[", 
                 RowBox[{"All", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
                "]"}]}], ",", 
              RowBox[{"\"\<AllInitialRates\>\"", "\[Rule]", 
               RowBox[{"Normal", "[", 
                RowBox[{
                 RowBox[{"allGrouped", "[", "#Indices", "]"}], "[", 
                 RowBox[{"All", ",", "\"\<OptLinFitSlope\>\""}], "]"}], 
                "]"}]}], ",", 
              RowBox[{"\"\<AllSubstrateConcs\>\"", "\[Rule]", 
               RowBox[{"Normal", "[", 
                RowBox[{
                 RowBox[{"allGrouped", "[", "#Indices", "]"}], "[", 
                 RowBox[{"All", ",", "\"\<SubstrateConc\>\""}], "]"}], 
                "]"}]}], ",", 
              RowBox[{"\"\<AllEnzymeConcs\>\"", "\[Rule]", 
               RowBox[{"Normal", "[", 
                RowBox[{
                 RowBox[{"allGrouped", "[", "#Indices", "]"}], "[", 
                 RowBox[{"All", ",", "\"\<EnzymeConc\>\""}], "]"}], "]"}]}], 
              ",", 
              RowBox[{"\"\<StdCurveR2\>\"", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"LinearModelFit", "[", 
                  RowBox[{"Normal", "[", 
                   RowBox[{
                    RowBox[{"allGrouped", "[", "#Indices", "]"}], "[", 
                    RowBox[{"1", ",", "\"\<StdCurveData\>\""}], "]"}], "]"}], 
                  "]"}], "[", "\"\<RSquared\>\"", "]"}], ")"}]}], ",", 
              RowBox[{"\"\<NumPointsLinearFits\>\"", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", 
                   RowBox[{"ToExpression", "[", "#", "]"}], "]"}], "&"}], "/@", 
                 RowBox[{"Normal", "[", 
                  RowBox[{
                   RowBox[{"allGrouped", "[", "#Indices", "]"}], "[", 
                   RowBox[{"All", ",", "\"\<DataPointsOptLinFit\>\""}], "]"}],
                   "]"}]}], ")"}]}], ",", 
              RowBox[{"\"\<Num2ptFits\>\"", "\[Rule]", 
               RowBox[{"Count", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"ToExpression", "[", "#", "]"}], "]"}], "&"}], "/@", 
                   RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"allGrouped", "[", "#Indices", "]"}], "[", 
                    RowBox[{"All", ",", "\"\<DataPointsOptLinFit\>\""}], 
                    "]"}], "]"}]}], ")"}], ",", "2"}], "]"}]}]}], "}"}]}], 
           "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"all2", "[", 
       RowBox[{"All", ",", "keysToTake"}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "function", " ", "for", " ", "remapping", " ", "mutants", " ", "with", " ",
     "eGFP", " ", "mutations", " ", "and", " ", "biomek", " ", "errors"}], 
   " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"remapNames", "[", "dataset_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"replaced1", ",", "replaced2", ",", "newDs"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"remappingRules", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<P76G\>\"", "\[Rule]", "\"\<P92G\>\""}], ",", 
         RowBox[{"\"\<H172G\>\"", "\[Rule]", "\"\<I188G*\>\""}], ",", 
         RowBox[{"\"\<T268G\>\"", "\[Rule]", "\"\<D284G\>\""}], ",", 
         RowBox[{"\"\<A364G\>\"", "\[Rule]", "\"\<M380G\>\""}], ",", 
         RowBox[{"\"\<N460G\>\"", "\[Rule]", "\"\<L476G\>\""}], ",", 
         RowBox[{"\"\<T84V\>\"", "\[Rule]", "\"\<D101V\>\""}], ",", 
         RowBox[{"\"\<T189V\>\"", "\[Rule]", "\"\<N206V\>\""}], ",", 
         RowBox[{"\"\<G289V\>\"", "\[Rule]", "\"\<G308V\>\""}], ",", 
         RowBox[{"\"\<I393V\>\"", "\[Rule]", "\"\<D411V\>\""}], ",", 
         RowBox[{"\"\<P497V\>\"", "\[Rule]", "\"\<P513V\>\""}], ",", 
         RowBox[{"\"\<H486E\>\"", "\[Rule]", "\"\<H353E\>\""}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"addFlags", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<P448V\>\"", "\[Rule]", "\"\<P448V*\>\""}], ",", 
         RowBox[{"\"\<Q131V\>\"", "\[Rule]", "\"\<Q131V*\>\""}], ",", 
         RowBox[{"\"\<T425G\>\"", "\[Rule]", "\"\<T425G*\>\""}], ",", 
         RowBox[{"\"\<N205G\>\"", "\[Rule]", "\"\<N205G*\>\""}], ",", 
         RowBox[{"\"\<Y192G\>\"", "\[Rule]", "\"\<Y192G*\>\""}], ",", 
         RowBox[{"\"\<G289V\>\"", "\[Rule]", "\"\<G289V*\>\""}], ",", 
         RowBox[{"\"\<I188G\>\"", "\[Rule]", "\"\<I188G*\>\""}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dsToAssociation", "=", 
       RowBox[{"Normal", "[", "dataset", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"replaced1", "=", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"#1", ",", "#2", ",", "Infinity"}], "]"}], "&"}], ",", 
         "dsToAssociation", ",", "remappingRules"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"replaced2", "=", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"#1", ",", "#2", ",", "Infinity"}], "]"}], "&"}], ",", 
         "replaced1", ",", "addFlags"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"newDs", "=", 
       RowBox[{"Dataset", "[", "replaced2", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"newDs", "[", 
       RowBox[{"All", ",", 
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"#", ",", 
           RowBox[{"\"\<KnownBadMutant\>\"", "\[Rule]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"addFlags", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "#MutantID"}],
                "]"}], ",", "1", ",", "0"}], "]"}]}]}], "]"}], "&"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"removed", " ", "R2", " ", "flags"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cullBadChambers", "[", "dataset_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grouped", ",", "countFitPoints", ",", "twoPointFits"}], "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"grouped", "=", 
       RowBox[{"dataset", "[", 
        RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"countFitPoints", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"grouped", "[", 
             RowBox[{"n", ",", "1", ",", "\"\<Indices\>\""}], "]"}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"ToExpression", "[", "#", "]"}], "]"}], "&"}], "/@", 
            RowBox[{"Normal", "[", 
             RowBox[{"grouped", "[", 
              RowBox[{"n", ",", "All", ",", "\"\<DataPointsOptLinFit\>\""}], 
              "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", 
           RowBox[{"Length", "[", "grouped", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"twoPointFits", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"countFitPoints", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Count", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], 
            "\[GreaterEqual]", "twoPointCutoff"}], "&"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "twoPointFits", "]"}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"dataset", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#ExpIndex", "\[Equal]", "1"}], "&&", 
           RowBox[{"#EnzymeConc", ">", "0.3"}], "&&", 
           RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}], "&&", 
           RowBox[{"#LocalBackgroundRatio", ">", "10.0"}], "&&", 
           RowBox[{
            RowBox[{"#", "[", "\"\<FitR2\>\"", "]"}], ">", "0.98"}], "&&", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"twoPointFits", ",", 
              RowBox[{"ToExpression", "[", "#Indices", "]"}]}], "]"}], 
            "\[Equal]", "False"}]}], "&"}], "]"}], "]"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dataset", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#SubstrateConc", "\[Equal]", "SconcToCullOn"}], "||", 
            RowBox[{"#SubstrateConc", "\[Equal]", 
             RowBox[{"Round", "[", "SconcToCullOn", "]"}]}]}], ")"}], "&&", 
          RowBox[{"#EnzymeConc", ">", "0.3"}], "&&", 
          RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}], "&&", 
          RowBox[{"#LocalBackgroundRatio", ">", "5.0"}], "&&", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"twoPointFits", ",", 
             RowBox[{"ToExpression", "[", "#Indices", "]"}]}], "]"}], 
           "\[Equal]", "False"}], "&&", 
          RowBox[{
           RowBox[{"#", "[", "\"\<kcat/Km\>\"", "]"}], ">", "0"}], "&&", 
          RowBox[{
           RowBox[{"#", "[", "\"\<kcat\>\"", "]"}], ">", "0"}]}], "&"}], 
        "]"}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cullExpressors", "[", "dataset_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"grouped", ",", "countFitPoints", ",", "twoPointFits"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"grouped", "=", 
      RowBox[{"dataset", "[", 
       RowBox[{"GroupBy", "[", "\"\<Indices\>\"", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"countFitPoints", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"grouped", "[", 
            RowBox[{"n", ",", "1", ",", "\"\<Indices\>\""}], "]"}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"ToExpression", "[", "#", "]"}], "]"}], "&"}], "/@", 
           RowBox[{"Normal", "[", 
            RowBox[{"grouped", "[", 
             RowBox[{"n", ",", "All", ",", "\"\<DataPointsOptLinFit\>\""}], 
             "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "grouped", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"twoPointFits", "=", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"countFitPoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], 
           "\[GreaterEqual]", "2"}], "&"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"dataset", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#ExpIndex", "\[Equal]", "1"}], "&&", 
          RowBox[{"#EnzymeConc", ">", "0.3"}], "&&", 
          RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}], "&&", 
          RowBox[{"#LocalBackgroundRatio", ">", "10.0"}], "&&", 
          RowBox[{
           RowBox[{"#", "[", "\"\<FitR2\>\"", "]"}], ">", "0.98"}], "&&", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"twoPointFits", ",", 
             RowBox[{"ToExpression", "[", "#Indices", "]"}]}], "]"}], 
           "\[Equal]", "False"}]}], "&"}], "]"}], "]"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"dataset", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#SubstrateConc", "\[Equal]", "SconcToCullOn"}], "||", 
            RowBox[{"#SubstrateConc", "\[Equal]", 
             RowBox[{"Round", "[", "SconcToCullOn", "]"}]}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#LocalBackgroundRatio", "\[LessEqual]", "5.0"}], "||", 
            RowBox[{
             RowBox[{"#", "[", "\"\<FitR2\>\"", "]"}], "\[LessEqual]", 
             "0.97"}]}], ")"}], "&&", 
          RowBox[{"#EnzymeConc", ">", "0.3"}], "&&", 
          RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}]}], "&"}], "]"}], "]"}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"removed", " ", "fitR2", " ", "flag"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"dataset", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#SubstrateConc", "\[Equal]", "SconcToCullOn"}], "||", 
           RowBox[{"#SubstrateConc", "\[Equal]", 
            RowBox[{"Round", "[", "SconcToCullOn", "]"}]}]}], ")"}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#LocalBackgroundRatio", "\[LessEqual]", "5.0"}], "||", 
           RowBox[{
            RowBox[{"#", "[", "\"\<kcat/Km\>\"", "]"}], "\[LessEqual]", "0"}],
            "||", 
           RowBox[{
            RowBox[{"#", "[", "\"\<kcat\>\"", "]"}], "\[LessEqual]", "0"}]}], 
          ")"}], "&&", 
         RowBox[{"#EnzymeConc", ">", "0.3"}], "&&", 
         RowBox[{"#ManualGFPFlag", "\[Equal]", "0"}]}], "&"}], "]"}], 
      "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.773427846563615*^9, 3.7734278857245607`*^9}, {
   3.7734280906953077`*^9, 3.773428175080647*^9}, {3.773443624060534*^9, 
   3.773443682637973*^9}, {3.773444393526875*^9, 3.7734445388640623`*^9}, {
   3.773445114373475*^9, 3.773445117163431*^9}, {3.773445314146317*^9, 
   3.773445331644019*^9}, {3.773597659753278*^9, 3.773597660614262*^9}, 
   3.773765295379788*^9, {3.7737653327886343`*^9, 3.773765333329047*^9}, {
   3.773765755403886*^9, 3.773765777068726*^9}, {3.773765812587063*^9, 
   3.7737658289215193`*^9}, {3.773766315273123*^9, 3.7737663201219473`*^9}, {
   3.773766539867496*^9, 3.773766544102895*^9}, {3.773767370110982*^9, 
   3.77376739530917*^9}, {3.773767589416737*^9, 3.773767601842875*^9}, {
   3.773768188646111*^9, 3.773768192015359*^9}, {3.77376823936714*^9, 
   3.7737682689464903`*^9}, {3.7737683469835863`*^9, 3.773768374624955*^9}, {
   3.773768553538035*^9, 3.7737686514443903`*^9}, {3.773769207872506*^9, 
   3.773769240560237*^9}, {3.773769475208774*^9, 3.773769484179349*^9}, {
   3.773771373995906*^9, 3.773771484827272*^9}, {3.7737715157935457`*^9, 
   3.7737715703519297`*^9}, {3.773771639517796*^9, 3.773771658066209*^9}, {
   3.773773180812028*^9, 3.773773191446826*^9}, {3.773773660431623*^9, 
   3.773773669675569*^9}, {3.7737754346001*^9, 3.773775436906645*^9}, {
   3.77377547207874*^9, 3.773775475783712*^9}, {3.7741219477207613`*^9, 
   3.7741219639217653`*^9}, {3.774122364541196*^9, 3.774122372359164*^9}, {
   3.7746228393314657`*^9, 3.774622844015033*^9}, {3.774623958762896*^9, 
   3.774623962525784*^9}, {3.775058112256711*^9, 3.775058119868078*^9}, {
   3.775067470685849*^9, 3.775067473951025*^9}, {3.776605605350206*^9, 
   3.776605622588513*^9}, {3.776605780214279*^9, 3.776605785205317*^9}, {
   3.7766058441242647`*^9, 3.776605895056185*^9}, {3.777834563869533*^9, 
   3.7778345859842787`*^9}, {3.777834629303891*^9, 3.777834715411982*^9}, {
   3.777835438675538*^9, 3.7778354521942883`*^9}, 3.777853975263479*^9, {
   3.7781832776346073`*^9, 3.7781833043033953`*^9}, {3.7781847179620457`*^9, 
   3.778184723082796*^9}, 3.778184801394253*^9, 3.778184844178211*^9, {
   3.77818556179897*^9, 3.778185565567766*^9}, {3.778192218769655*^9, 
   3.778192244604402*^9}, {3.7782638745222073`*^9, 3.778263894663336*^9}, {
   3.7792998946103487`*^9, 3.779299911539023*^9}, {3.779496391266595*^9, 
   3.77949639582787*^9}, {3.781986011212522*^9, 3.781986036948587*^9}, {
   3.782404451788711*^9, 3.782404454320581*^9}, {3.784318731835685*^9, 
   3.784318738528295*^9}, {3.7843188361257753`*^9, 3.784318836285097*^9}, {
   3.784318870461576*^9, 3.784318870609829*^9}, {3.7843368887290382`*^9, 
   3.7843368894206448`*^9}, {3.7843369507751913`*^9, 3.784336958168405*^9}, {
   3.784344162181025*^9, 3.784344162383181*^9}, {3.784824884755394*^9, 
   3.784824910404746*^9}, {3.7848264987703857`*^9, 3.7848265037529593`*^9}, {
   3.78950030648197*^9, 3.7895003312431087`*^9}, {3.789501073644442*^9, 
   3.7895010756163273`*^9}, {3.789501114488958*^9, 3.789501115198524*^9}, {
   3.789503338729889*^9, 3.789503358489605*^9}, {3.789508291739897*^9, 
   3.789508326054735*^9}, {3.7895101065207653`*^9, 3.789510112973981*^9}, {
   3.789577044839828*^9, 3.789577120363883*^9}, {3.789578652284182*^9, 
   3.789578667939242*^9}, {3.7895809593225737`*^9, 3.789581019791396*^9}, {
   3.789581058538949*^9, 3.789581062501976*^9}, {3.792161789993313*^9, 
   3.792161790457337*^9}, {3.792161821924449*^9, 3.792161824540535*^9}, {
   3.792181110952797*^9, 3.792181111417152*^9}, {3.792339210885914*^9, 
   3.7923393206583443`*^9}, {3.792682346292285*^9, 3.792682350740994*^9}, {
   3.792683670912438*^9, 3.792683691592472*^9}, {3.792690936088482*^9, 
   3.7926909387469482`*^9}, {3.8119514781554327`*^9, 3.811951503085416*^9}, {
   3.8125494059244537`*^9, 3.812549441892044*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ef91ebdd-454e-4834-934b-a7047deae98a"],

Cell[CellGroupData[{

Cell["Import all Michaelis-Menten data (1 csv per experiment):", \
"Subsubsection",
 CellChangeTimes->{{3.773498342627685*^9, 
  3.773498366448601*^9}},ExpressionUUID->"ee7b5872-b4d2-4e36-913e-\
0186fbfddcc9"],

Cell["\<\
For each individual experiment, the CSV file is imported and then the \
following functions are applied sequentially:

1. 'generateDatasetFromCSV' - converts CSV \"Table\" format into Dataset \
format. I'm also appending the chip type (e.g. GlyScan) and the filename in \
order to ensure that each experiment contains a unique identifier string.

2. 'cullBadChambers' - this function groups the data by chamber and applies \
our standard QC criteria as selection criteria, removing those chambers that \
are bad/low-quality.\
\>", "Text",
 CellChangeTimes->{{3.77349837472719*^9, 
  3.77349851498953*^9}},ExpressionUUID->"3e811395-7530-4332-ad36-\
ea1669944b46"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"files", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190314_S3_d1_\
MeP_1_ValScan.csv.bz2\>\"", ",", "\"\<ValScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190318_S3_d1_\
MeP_1_ValScan.csv.bz2\>\"", ",", "\"\<ValScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190321_S2_d2_\
MeP_1_ValScan.csv.bz2\>\"", ",", "\"\<ValScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190117_S3_d1_\
MeP_1_GlyScan.csv.bz2\>\"", ",", "\"\<GlyScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190123_S3_d1_\
MeP_1_GlyScan.csv.bz2\>\"", ",", "\"\<GlyScan\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190522_S2_d1_\
MeP_1_SlowChip.csv.bz2\>\"", ",", "\"\<SlowChip\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190605_S2_d1_\
MeP_1_SlowChip.csv.bz2\>\"", ",", "\"\<SlowChip\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190913_S2_d1_\
MeP_1_SlowMeP.csv.bz2\>\"", ",", "\"\<SlowMePChip\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\</Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190913_S3_d1_\
MeP_1_SlowMeP.csv.bz2\>\"", ",", "\"\<SlowMePChip\>\""}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputFilePaths", "=", 
   RowBox[{"files", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"scanType", "=", 
  RowBox[{"files", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.774122560234984*^9, 3.774122626336917*^9}, {
   3.774122683320243*^9, 3.7741226865842533`*^9}, {3.7741229122136927`*^9, 
   3.774123079068323*^9}, {3.774123199387217*^9, 3.774123212745772*^9}, {
   3.775067566505419*^9, 3.7750675699671164`*^9}, 3.7750679022805777`*^9, {
   3.777834738178802*^9, 3.777834856871276*^9}, {3.7778349446758547`*^9, 
   3.7778349800134153`*^9}, {3.779496424177548*^9, 3.779496518003006*^9}, {
   3.78094519466297*^9, 3.780945238610433*^9}, {3.781015297230261*^9, 
   3.781015304328364*^9}, {3.781024555483447*^9, 3.781024563223123*^9}, {
   3.781095341539379*^9, 3.781095347513887*^9}, {3.7812730359252453`*^9, 
   3.781273055030932*^9}, {3.7812731470856457`*^9, 3.781273176895089*^9}, {
   3.7813931508185987`*^9, 3.781393158440353*^9}, {3.781834594497707*^9, 
   3.781834610758029*^9}, {3.781834653951416*^9, 3.781834660357704*^9}, {
   3.784336540609124*^9, 3.784336549359399*^9}, 3.784336580940428*^9, {
   3.784336777041142*^9, 3.7843367773654623`*^9}, {3.78434881254156*^9, 
   3.7843488136095448`*^9}, {3.7843806779398518`*^9, 
   3.7843806805128202`*^9}, {3.7895003493766603`*^9, 3.789500356155817*^9}, {
   3.789500389823091*^9, 3.78950042132021*^9}, {3.792162374617971*^9, 
   3.7921623882038507`*^9}, {3.792690963197762*^9, 3.792691088701828*^9}, {
   3.809977783693974*^9, 3.809977784393054*^9}, {3.811950178924006*^9, 
   3.811950299267867*^9}, 3.811950499889988*^9, {3.811971917465857*^9, 
   3.811971979953744*^9}, {3.812549491896805*^9, 3.812549526966848*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"c8a20d18-6231-4865-a82e-7ff4854f3562"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190314_S3_\
d1_MeP_1_ValScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190318_S3_\
d1_MeP_1_ValScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190321_S2_\
d2_MeP_1_ValScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190117_S3_\
d1_MeP_1_GlyScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190123_S3_\
d1_MeP_1_GlyScan.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190522_S2_\
d1_MeP_1_SlowChip.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190605_S2_\
d1_MeP_1_SlowChip.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190913_S2_\
d1_MeP_1_SlowMeP.csv.bz2\"\>", 
   ",", "\<\"/Users/craig/Dropbox/HTMEK_processing/final_data/MeP/190913_S3_\
d1_MeP_1_SlowMeP.csv.bz2\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.788021824248266*^9, 3.789500357836734*^9, 3.7895004221417007`*^9, 
   3.789501123250643*^9, 3.789503363649316*^9, 3.7895083301776648`*^9, 
   3.789577130561103*^9, 3.789578673785325*^9, 3.7921618386896753`*^9, 
   3.7921618689793043`*^9, 3.792162395283277*^9, 3.792339352328392*^9, 
   3.792682367371272*^9, 3.7926910974244413`*^9, 3.792784744419766*^9, 
   3.7928609982825108`*^9, 3.7935554420750713`*^9, 3.8098695071440783`*^9, 
   3.809912559368054*^9, 3.809977817865149*^9, 3.8102420649109793`*^9, 
   3.810242656635754*^9, 3.81194857009787*^9, 3.811950300592588*^9, 
   3.811950500367146*^9, 3.811951551411765*^9, 3.8119739880095577`*^9, 
   3.81197602844461*^9, {3.8125494896263113`*^9, 3.812549494240986*^9}, 
   3.812549528509951*^9, 3.812661879071685*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"bb4cb253-ea90-44b5-ae84-6091b5127eda"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ValScan\"\>", ",", "\<\"ValScan\"\>", ",", "\<\"ValScan\"\>", 
   ",", "\<\"GlyScan\"\>", ",", "\<\"GlyScan\"\>", ",", "\<\"SlowChip\"\>", 
   ",", "\<\"SlowChip\"\>", ",", "\<\"SlowMePChip\"\>", 
   ",", "\<\"SlowMePChip\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.788021824248266*^9, 3.789500357836734*^9, 3.7895004221417007`*^9, 
   3.789501123250643*^9, 3.789503363649316*^9, 3.7895083301776648`*^9, 
   3.789577130561103*^9, 3.789578673785325*^9, 3.7921618386896753`*^9, 
   3.7921618689793043`*^9, 3.792162395283277*^9, 3.792339352328392*^9, 
   3.792682367371272*^9, 3.7926910974244413`*^9, 3.792784744419766*^9, 
   3.7928609982825108`*^9, 3.7935554420750713`*^9, 3.8098695071440783`*^9, 
   3.809912559368054*^9, 3.809977817865149*^9, 3.8102420649109793`*^9, 
   3.810242656635754*^9, 3.81194857009787*^9, 3.811950300592588*^9, 
   3.811950500367146*^9, 3.811951551411765*^9, 3.8119739880095577`*^9, 
   3.81197602844461*^9, {3.8125494896263113`*^9, 3.812549494240986*^9}, 
   3.812549528509951*^9, 3.812661879073243*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"b38d3b53-f6ae-44c3-a56e-9462c2620661"]
}, Open  ]],

Cell["\<\
Note: Need the append below for a single SlowChip experiment for which I need \
to change some keys:\
\>", "Text",
 CellChangeTimes->{{3.774123090608007*^9, 
  3.774123107254936*^9}},ExpressionUUID->"37d66d06-a935-4b50-87d4-\
ef0e3f9ddbd0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ProgressIndicator", "[", 
   RowBox[{
    RowBox[{"Dynamic", "[", "itr", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "inputFilePaths", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pathLengthToDrop", "=", 
    RowBox[{"{", 
     RowBox[{
     "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", 
      ",", "53", ",", "53"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"datasets", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"remapNames", "[", 
        RowBox[{"generateDatasetFromCSV", "[", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{
            RowBox[{"inputFilePaths", "[", 
             RowBox[{"[", "itr", "]"}], "]"}], ",", "\"\<Data\>\""}], "]"}], 
          ",", 
          RowBox[{"scanType", "[", 
           RowBox[{"[", "itr", "]"}], "]"}], ",", 
          RowBox[{"StringDrop", "[", 
           RowBox[{
            RowBox[{"StringDrop", "[", 
             RowBox[{
              RowBox[{"inputFilePaths", "[", 
               RowBox[{"[", "itr", "]"}], "]"}], ",", 
              RowBox[{"-", "4"}]}], "]"}], ",", 
            RowBox[{"pathLengthToDrop", "[", 
             RowBox[{"[", "itr", "]"}], "]"}]}], "]"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"itr", ",", "1", ",", 
         RowBox[{"Length", "[", "inputFilePaths", "]"}]}], "}"}]}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"culledWithLigands", "=", 
    RowBox[{"Join", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"cullBadChambers", "[", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", "itr", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"itr", ",", "1", ",", 
         RowBox[{"Length", "[", "inputFilePaths", "]"}]}], "}"}]}], "]"}]}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"culledIn", "=", 
   RowBox[{"culledWithLigands", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#MutantID", ",", 
            RowBox[{"-", "1"}]}], "]"}], "==", "\"\<V\>\""}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", 
              RowBox[{"-", "1"}]}], "]"}], "==", "\"\<A\>\""}], "&&", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", "1"}], "]"}], "==", "\"\<V\>\""}]}], 
          ")"}]}], ")"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#MutantID", ",", 
            RowBox[{"-", "1"}]}], "]"}], "==", "\"\<G\>\""}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", 
              RowBox[{"-", "1"}]}], "]"}], "==", "\"\<A\>\""}], "&&", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", "1"}], "]"}], "==", "\"\<G\>\""}]}], 
          ")"}]}], ")"}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<WT\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<R164A\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<K162A\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<N100A/R164A\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<T79G\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<T79S\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<N100A\>\""}]}], "&"}], "]"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.774122399783924*^9, 3.774122546002706*^9}, 
   3.774122632944194*^9, {3.7741230870021067`*^9, 3.774123087968048*^9}, {
   3.774123122542938*^9, 3.774123135118417*^9}, {3.7741232456170692`*^9, 
   3.774123261443214*^9}, {3.774123327071352*^9, 3.7741233271961813`*^9}, {
   3.774123944486828*^9, 3.774123951287781*^9}, {3.774124357383595*^9, 
   3.774124361224667*^9}, {3.774211533567322*^9, 3.774211586572522*^9}, {
   3.77462309146887*^9, 3.774623095241364*^9}, {3.774623985357997*^9, 
   3.7746239891141777`*^9}, {3.774798968773896*^9, 3.774799003135635*^9}, {
   3.774830474372258*^9, 3.7748304908565807`*^9}, {3.775058128576497*^9, 
   3.775058128816437*^9}, {3.7750674863559523`*^9, 3.77506748666019*^9}, {
   3.77506756997799*^9, 3.7750676135102577`*^9}, 3.775067940807212*^9, {
   3.7778348762080927`*^9, 3.777834891695784*^9}, {3.777986007757271*^9, 
   3.7779860080500603`*^9}, {3.778263916427289*^9, 3.778263919324294*^9}, {
   3.779299455564131*^9, 3.779299486947023*^9}, {3.779299956077868*^9, 
   3.779299958216004*^9}, {3.7798151429624643`*^9, 3.77981514329494*^9}, {
   3.789500438755917*^9, 3.789500439877047*^9}, {3.7895011440277157`*^9, 
   3.789501145910941*^9}, {3.7895027793461313`*^9, 3.789502779501402*^9}, {
   3.789505716980177*^9, 3.789505724321273*^9}, {3.7895057956386003`*^9, 
   3.789505806002273*^9}, {3.792161860934494*^9, 3.792161864708104*^9}, {
   3.7921636115773487`*^9, 3.792163621472513*^9}, {3.792691099669883*^9, 
   3.792691159049305*^9}, {3.8099778255494757`*^9, 3.80997782566315*^9}, {
   3.811951554425529*^9, 3.811951583195772*^9}, {3.812549531638134*^9, 
   3.8125495465091543`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"5b68b4b5-40fa-45c9-b6bd-f3d3b5a90f32"],

Cell[BoxData[
 ProgressIndicatorBox[Dynamic[$CellContext`itr], {1, 9}]], "Output",
 CellChangeTimes->{
  3.788021827088354*^9, 3.789500454528604*^9, 3.789501148234611*^9, 
   3.789503365289888*^9, 3.7895058088199053`*^9, 3.7895083317358503`*^9, 
   3.78957713204195*^9, 3.789578675376501*^9, 3.789581074060492*^9, {
   3.792161842141861*^9, 3.792161870947361*^9}, 3.792162398850565*^9, 
   3.792163937570339*^9, 3.792339354912018*^9, 3.7926823714683447`*^9, 
   3.792683801440124*^9, 3.792691187996463*^9, 3.7927847444651937`*^9, 
   3.792860998342784*^9, 3.7935554454180193`*^9, 3.809869567046747*^9, 
   3.809912561811428*^9, 3.80997782601676*^9, 3.81024206693335*^9, 
   3.8102426586267548`*^9, 3.811948579032881*^9, 3.81195030276709*^9, 
   3.81195050205941*^9, 3.81195158365301*^9, 3.8119739904462748`*^9, 
   3.811976031165893*^9, 3.8125494996722527`*^9, 3.81254954741884*^9, 
   3.812661880444335*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"b77c21bd-081f-4449-a62d-61d5158d894e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", "}"}]], "Print",
 CellChangeTimes->{3.811951092390615*^9, 3.8119521940872517`*^9, 
  3.811974614701541*^9, 3.811976625637651*^9, 3.812549499998362*^9, 
  3.812550358582213*^9, 3.812662638514535*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"41c90120-d2db-4a56-a990-50eada3d7de1"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Print",
 CellChangeTimes->{3.811951092390615*^9, 3.8119521940872517`*^9, 
  3.811974614701541*^9, 3.811976625637651*^9, 3.812549499998362*^9, 
  3.812550358582213*^9, 3.812662640901133*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"135c9b35-b8bc-41eb-86b5-dd104d9f7420"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"28", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "51"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.811951092390615*^9, 3.8119521940872517`*^9, 
  3.811974614701541*^9, 3.811976625637651*^9, 3.812549499998362*^9, 
  3.812550358582213*^9, 3.812662643204218*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"2ddfec6e-999d-4760-943b-728f864bab07"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Print",
 CellChangeTimes->{3.811951092390615*^9, 3.8119521940872517`*^9, 
  3.811974614701541*^9, 3.811976625637651*^9, 3.812549499998362*^9, 
  3.812550358582213*^9, 3.812662645499209*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"59550fa3-eed1-45e4-9ff4-4028d6a116ce"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Print",
 CellChangeTimes->{3.811951092390615*^9, 3.8119521940872517`*^9, 
  3.811974614701541*^9, 3.811976625637651*^9, 3.812549499998362*^9, 
  3.812550358582213*^9, 3.812662647762443*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"98a90be9-f248-4003-b841-f41224effaf6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"15", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.811951092390615*^9, 3.8119521940872517`*^9, 
  3.811974614701541*^9, 3.811976625637651*^9, 3.812549499998362*^9, 
  3.812550358582213*^9, 3.812662650269535*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"df9b9949-89fd-474b-9804-da02bd45ab94"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"26", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "37"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "43"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "55"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "38"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.811951092390615*^9, 3.8119521940872517`*^9, 
  3.811974614701541*^9, 3.811976625637651*^9, 3.812549499998362*^9, 
  3.812550358582213*^9, 3.8126626532848043`*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"e21b2427-3cd0-4a3b-becb-9eb0f36b80dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"28", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "43"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "55"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "9"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.811951092390615*^9, 3.8119521940872517`*^9, 
  3.811974614701541*^9, 3.811976625637651*^9, 3.812549499998362*^9, 
  3.812550358582213*^9, 3.8126626559806004`*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"ca1469ce-a937-4f19-9ec8-c0aab1f46e0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"28", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "55"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "43"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.811951092390615*^9, 3.8119521940872517`*^9, 
  3.811974614701541*^9, 3.811976625637651*^9, 3.812549499998362*^9, 
  3.812550358582213*^9, 3.812662658362789*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"1b5c7d89-fc9d-4e2e-8f0b-d6dbfd0416e1"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"slowWithLigands", "=", 
    RowBox[{"Join", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"cullExpressors", "[", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", "itr", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"itr", ",", "1", ",", 
         RowBox[{"Length", "[", "inputFilePaths", "]"}]}], "}"}]}], "]"}]}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"slowIn", "=", 
   RowBox[{"slowWithLigands", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#MutantID", ",", 
            RowBox[{"-", "1"}]}], "]"}], "==", "\"\<V\>\""}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", 
              RowBox[{"-", "1"}]}], "]"}], "==", "\"\<A\>\""}], "&&", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", "1"}], "]"}], "==", "\"\<V\>\""}]}], 
          ")"}]}], ")"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#MutantID", ",", 
            RowBox[{"-", "1"}]}], "]"}], "==", "\"\<G\>\""}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", 
              RowBox[{"-", "1"}]}], "]"}], "==", "\"\<A\>\""}], "&&", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", "1"}], "]"}], "==", "\"\<G\>\""}]}], 
          ")"}]}], ")"}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<WT\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<R164A\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<K162A\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<N100A/R164A\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<T79G\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<T79S\>\""}], "||", 
       RowBox[{"#MutantID", "\[Equal]", "\"\<N100A\>\""}]}], "&"}], "]"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7741243664890013`*^9, 3.774124367349648*^9}, {
   3.7741251364713907`*^9, 3.774125151419034*^9}, {3.774128363821538*^9, 
   3.774128365103962*^9}, {3.774211591969721*^9, 3.7742116065478983`*^9}, {
   3.7746231279511747`*^9, 3.77462312861474*^9}, {3.774624014805472*^9, 
   3.774624016657402*^9}, {3.775058146949836*^9, 3.775058147879332*^9}, {
   3.7750674916858873`*^9, 3.775067491900179*^9}, 3.775067569994548*^9, 
   3.775067618172494*^9, 3.777834895815569*^9, {3.777985999928815*^9, 
   3.777986000093055*^9}, 3.779299494229809*^9, {3.78950116168394*^9, 
   3.78950116492223*^9}, {3.789501730901534*^9, 3.78950173117754*^9}, {
   3.792161878807526*^9, 3.792161881999045*^9}, {3.792163700969633*^9, 
   3.792163742769663*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"f7038fa3-e7d2-40c3-ab3b-4c6475dcc885"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unmeasuredIn", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"slowIn", "[", 
        RowBox[{"All", ",", "\"\<MutantID\>\""}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Normal", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"culledIn", "[", 
        RowBox[{"All", ",", "\"\<MutantID\>\""}], "]"}], "]"}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7734101905770903`*^9, 3.773410192271964*^9}, {
  3.7734458564179296`*^9, 3.773445911342699*^9}, {3.773446041316244*^9, 
  3.773446094695821*^9}, {3.7734461483885517`*^9, 3.7734461487594213`*^9}, {
  3.7734986361227083`*^9, 3.773498655545452*^9}, {3.773498697645569*^9, 
  3.773498733458871*^9}, {3.773597638144314*^9, 3.77359764724015*^9}, {
  3.774212114327752*^9, 3.774212143902062*^9}, {3.774290618710362*^9, 
  3.7742907290433407`*^9}, {3.774291247088675*^9, 3.774291302252035*^9}, {
  3.777986045942741*^9, 3.777986068257065*^9}, {3.7779890764854193`*^9, 
  3.777989078240446*^9}, {3.778192074256361*^9, 3.778192075522244*^9}, {
  3.7781921911461*^9, 3.778192193802058*^9}, {3.789508574500349*^9, 
  3.789508575470708*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"236f7ae3-a7a0-4536-94b1-6e03d2385e78"],

Cell["\<\
Group the aggregate dataset by mutant and print out a list of the \
experimental ID strings (for fast chips only):\
\>", "Text",
 CellChangeTimes->{{3.773498771687449*^9, 3.773498804505756*^9}, {
  3.78172643344129*^9, 3.781726437448236*^9}, {3.789502268058165*^9, 
  3.7895022698498993`*^9}},ExpressionUUID->"e766ea3e-071e-4526-80bd-\
f4bc7806b1a2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantInFastChips", "=", 
    RowBox[{
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowChip\>\""}], "&&", 
         RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowestChip\>\""}], "&&", 
         RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowMePChip\>\""}]}], "&"}],
        "]"}], "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantIn2FastChips", "=", 
    RowBox[{"KeySortBy", "[", 
     RowBox[{"groupedbyMutantInFastChips", ",", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tooSlowInFastChips", "=", 
    RowBox[{
     RowBox[{"slowIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowChip\>\""}], "&&", 
         RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowestChip\>\""}], "&&", 
         RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowMePChip\>\""}]}], "&"}],
        "]"}], "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tooSlowIn2FastChips", "=", 
    RowBox[{"KeySortBy", "[", 
     RowBox[{"tooSlowInFastChips", ",", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "SlowChip", " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantInSlowChip", "=", 
    RowBox[{
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#ChipType", "==", "\"\<SlowChip\>\""}], "&"}], "]"}], "]"}], 
     "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantIn2SlowChip", "=", 
    RowBox[{"KeySortBy", "[", 
     RowBox[{"groupedbyMutantInSlowChip", ",", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tooSlowInSlowChip", "=", 
    RowBox[{
     RowBox[{"slowIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#ChipType", "==", "\"\<SlowChip\>\""}], "&"}], "]"}], "]"}], 
     "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tooSlowIn2SlowChip", "=", 
   RowBox[{"KeySortBy", "[", 
    RowBox[{"tooSlowInSlowChip", ",", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringDrop", "[", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{"#", ",", "1"}], "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "SlowMePChip", " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantInSlowestChip", "=", 
    RowBox[{
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#ChipType", "==", "\"\<SlowMePChip\>\""}], "||", 
         RowBox[{"#ChipType", "==", "\"\<SlowestChip\>\""}]}], "&"}], "]"}], 
      "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantIn2SlowestChip", "=", 
    RowBox[{"KeySortBy", "[", 
     RowBox[{"groupedbyMutantInSlowestChip", ",", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tooSlowInSlowestChip", "=", 
    RowBox[{
     RowBox[{"slowIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#ChipType", "==", "\"\<SlowMePChip\>\""}], "||", 
         RowBox[{"#ChipType", "==", "\"\<SlowestChip\>\""}]}], "&"}], "]"}], 
      "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"tooSlowIn2SlowestChip", "=", 
  RowBox[{"KeySortBy", "[", 
   RowBox[{"tooSlowInSlowestChip", ",", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringDrop", "[", 
       RowBox[{
        RowBox[{"StringDrop", "[", 
         RowBox[{"#", ",", "1"}], "]"}], ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7734287854152527`*^9, 3.773498793238028*^9, {3.774125104503742*^9, 
   3.7741251310068483`*^9}, {3.777986119173411*^9, 3.77798613759132*^9}, {
   3.7781921359178677`*^9, 3.77819214449*^9}, {3.781726356394273*^9, 
   3.781726358805141*^9}, {3.7817264216109858`*^9, 3.781726453845146*^9}, {
   3.7817266193399277`*^9, 3.781726685684267*^9}, {3.781835435468452*^9, 
   3.781835445904533*^9}, 3.781985846008316*^9, {3.784341652002438*^9, 
   3.784341685367799*^9}, {3.7843481680767317`*^9, 3.784348229949911*^9}, {
   3.784380879455055*^9, 3.784380889324027*^9}, {3.789501767582488*^9, 
   3.789501790908059*^9}, {3.78950242154806*^9, 3.7895024317661657`*^9}, {
   3.792165926356385*^9, 3.792165939678628*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"6e4105fc-8044-4aea-a762-4ed2910f1673"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          8313918638486622431918966037575644810459994840064054987008], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           Association[{All, All, 
              TypeSystem`PackageScope`KeyDummy[0]} -> 
            1, {All, All, "MutantID"} -> 1, {All, All, "ExpIndex"} -> 
            1, {All, All, "ManualGFPFlag"} -> 1, {All, All, "UniqueExptID"} -> 
            1, {All, All, "ChipType"} -> 
            1, {All, All, "LocalBackgroundRatio"} -> 1, {All, All, "Indices"} -> 
            1, {All, All, "EnzymeConc"} -> 1, {All, All, "fit_mm_datapoints"} -> 
            1, {All, All, "DataPointsOptLinFit"} -> 
            1, {All, All, "fit_mm_curved_r2"} -> 1, {All, All, "fit_mm_kcat"} -> 
            1, {All, All, "fit_mm_KM"} -> 
            1, {All, All, "fit_mm_scale_factor"} -> 1, {All, All, "FitR2"} -> 
            1, {All, All, "DataPoints"} -> 1, {All, All, "kcat"} -> 
            1, {All, All, "Km"} -> 1, {All, All, "ScaleFactor"} -> 
            1, {All, All, "SubstrateConc"} -> 1, {All, All, "OptLinFitSlope"} -> 
            1, {All, All, "kcat/Km"} -> 1, {All, All, "AllLBRs"} -> 
            1, {All, All, "AllInitialRates"} -> 
            1, {All, All, "AllSubstrateConcs"} -> 1, {All, All, "StdCurveR2"} -> 
            1, {All, All, "NumPointsLinearFits"} -> 
            1, {All, All, "fit_mm_kcat_param_error"} -> 
            1, {All, All, "fit_mm_KM_param_error"} -> 
            1, {All, All, "AllEnzymeConcs"} -> 
            1, {All, All, "KnownBadMutant"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "MutantID" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ExpIndex" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ManualGFPFlag" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "UniqueExptID" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ChipType" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "LocalBackgroundRatio" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Indices" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "EnzymeConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_datapoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "DataPointsOptLinFit" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_curved_r2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_KM" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_scale_factor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "FitR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "DataPoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Km" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ScaleFactor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "SubstrateConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "OptLinFitSlope" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "kcat/Km" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "AllLBRs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllInitialRates" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllSubstrateConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "StdCurveR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "NumPointsLinearFits" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_kcat_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_KM_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllEnzymeConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "KnownBadMutant" -> 
                   TypeSystem`PackageScope`UnknownShape[False]]], 
                 DirectedInfinity[1], 10, {All, All}]], 2, 
               DirectedInfinity[1], {All}]]], 10, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MutantID", "ExpIndex", "ManualGFPFlag", "UniqueExptID", 
              "ChipType", "LocalBackgroundRatio", "Indices", "EnzymeConc", 
              "fit_mm_datapoints", "DataPointsOptLinFit", "fit_mm_curved_r2", 
              "fit_mm_kcat", "fit_mm_KM", "fit_mm_scale_factor", "FitR2", 
              "DataPoints", "kcat", "Km", "ScaleFactor", "SubstrateConc", 
              "OptLinFitSlope", "kcat/Km", "AllLBRs", "AllInitialRates", 
              "AllSubstrateConcs", "StdCurveR2", "NumPointsLinearFits", 
              "fit_mm_kcat_param_error", "fit_mm_KM_param_error", 
              "AllEnzymeConcs", "KnownBadMutant"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType}], TypeSystem`AnyLength], 138], "Meta" -> 
         Association["ID" -> 6011584334946892], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           Association[{All, All, 
              TypeSystem`PackageScope`KeyDummy[0]} -> 
            1, {All, All, "MutantID"} -> 1, {All, All, "ExpIndex"} -> 
            1, {All, All, "ManualGFPFlag"} -> 1, {All, All, "UniqueExptID"} -> 
            1, {All, All, "ChipType"} -> 
            1, {All, All, "LocalBackgroundRatio"} -> 1, {All, All, "Indices"} -> 
            1, {All, All, "EnzymeConc"} -> 1, {All, All, "fit_mm_datapoints"} -> 
            1, {All, All, "DataPointsOptLinFit"} -> 
            1, {All, All, "fit_mm_curved_r2"} -> 1, {All, All, "fit_mm_kcat"} -> 
            1, {All, All, "fit_mm_KM"} -> 
            1, {All, All, "fit_mm_scale_factor"} -> 1, {All, All, "FitR2"} -> 
            1, {All, All, "DataPoints"} -> 1, {All, All, "kcat"} -> 
            1, {All, All, "Km"} -> 1, {All, All, "ScaleFactor"} -> 
            1, {All, All, "SubstrateConc"} -> 1, {All, All, "OptLinFitSlope"} -> 
            1, {All, All, "kcat/Km"} -> 1, {All, All, "AllLBRs"} -> 
            1, {All, All, "AllInitialRates"} -> 
            1, {All, All, "AllSubstrateConcs"} -> 1, {All, All, "StdCurveR2"} -> 
            1, {All, All, "NumPointsLinearFits"} -> 
            1, {All, All, "fit_mm_kcat_param_error"} -> 
            1, {All, All, "fit_mm_KM_param_error"} -> 
            1, {All, All, "AllEnzymeConcs"} -> 
            1, {All, All, "KnownBadMutant"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "MutantID" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ExpIndex" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ManualGFPFlag" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "UniqueExptID" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ChipType" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "LocalBackgroundRatio" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Indices" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "EnzymeConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_datapoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "DataPointsOptLinFit" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_curved_r2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_KM" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_scale_factor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "FitR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "DataPoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Km" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ScaleFactor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "SubstrateConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "OptLinFitSlope" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "kcat/Km" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "AllLBRs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllInitialRates" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllSubstrateConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "StdCurveR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "NumPointsLinearFits" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_kcat_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_KM_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllEnzymeConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "KnownBadMutant" -> 
                   TypeSystem`PackageScope`UnknownShape[False]]], 
                 DirectedInfinity[1], 10, {All, All}]], 2, 
               DirectedInfinity[1], {All}]]], 10, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MutantID", "ExpIndex", "ManualGFPFlag", "UniqueExptID", 
              "ChipType", "LocalBackgroundRatio", "Indices", "EnzymeConc", 
              "fit_mm_datapoints", "DataPointsOptLinFit", "fit_mm_curved_r2", 
              "fit_mm_kcat", "fit_mm_KM", "fit_mm_scale_factor", "FitR2", 
              "DataPoints", "kcat", "Km", "ScaleFactor", "SubstrateConc", 
              "OptLinFitSlope", "kcat/Km", "AllLBRs", "AllInitialRates", 
              "AllSubstrateConcs", "StdCurveR2", "NumPointsLinearFits", 
              "fit_mm_kcat_param_error", "fit_mm_KM_param_error", 
              "AllEnzymeConcs", "KnownBadMutant"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType}], TypeSystem`AnyLength], 138], "Path" -> {},
          "BaseIndices" -> {}, "DisplayedRowCount" -> 10, 
         "DisplayedColumnCount" -> 10, "DataRowCount" -> 138, 
         "DataColumnCount" -> 31, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MutantID", 
                    Style[
                    "MutantID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "MutantID"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "MutantID"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ExpIndex", 
                    Style[
                    "ExpIndex", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "ExpIndex"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "ExpIndex"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ManualGFPFlag", 
                    Style[
                    "ManualGFPFlag", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "ManualGFPFlag"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "ManualGFPFlag"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["UniqueExptID", 
                    Style[
                    "UniqueExptID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "UniqueExptID"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "UniqueExptID"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ChipType", 
                    Style[
                    "ChipType", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "ChipType"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "ChipType"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["LocalBackgroundRatio", 
                    Style[
                    "LocalBackgroundRatio", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "LocalBackgroundRatio"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "LocalBackgroundRatio"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Indices", 
                    Style[
                    "Indices", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Indices"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Indices"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["EnzymeConc", 
                    Style[
                    "EnzymeConc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "EnzymeConc"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "EnzymeConc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["fit_mm_datapoints", 
                    Style[
                    "fit_mm_datapoints", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "fit_mm_datapoints"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "fit_mm_datapoints"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["DataPointsOptLinFit", 
                    Style[
                    "DataPointsOptLinFit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "DataPointsOptLinFit"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "DataPointsOptLinFit"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["L31G", 
                    Style[
                    "L31G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["L31G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["L31G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.271007"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{24, 22}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12.4405"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.205873569089819}, {5., 0.7031222491472553}, {10., \
1.}, {20., 0.737304974124045}, {35., 0.7224613846852462}, {50., \
0.650310619303277}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1353.6000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.3009999945521326}, {93, 0.31655007855893963}, {186, \
0.3066544848026443}, {279, 0.3123090730374021}, {371, 0.29817278614849074}, \
{465, 0.3193774462308842}, {557, 0.30806812267249967}, {650, \
0.30806812267249967}, {742, 0.30806812267249967}, {834, 0.3292734263674614}, \
{984, 0.3306871623746785}, {1284, 0.3660325620251669}, {1884, \
0.3943116580661303}, {2784, 0.45794869722673465}, {3984, \
0.5626238230690408}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3955.2000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["L31G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.649314"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{9, 23}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6.47452"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.38004902147725045}, {5., 0.7474083145500223}, \
{10., 0.9999999999999999}, {20., 0.7624435496214551}, {35., \
0.7608350476329402}, {50., 0.7451781323477681}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1545.6000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.8686740457671245}, {93, 0.8517368917004167}, {186, \
0.8424988853172547}, {279, 0.8655944852542248}, {371, 0.8471178496091404}, \
{465, 0.8655944852542248}, {557, 0.8809926347418118}, {650, \
0.8717536409579534}, {742, 0.888692035018345}, {834, 0.8655944852542248}, \
{984, 0.9025515033192052}, {1284, 0.9225719810602888}, {1884, \
0.9826422852055564}, {2784, 1.0226965871807936}, {3984, 1.1398128220751556}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3888.0000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["8 total \:203a ", ""], 
                    Style[
                    Superscript["8 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["L31G"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L31G"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["L35G", 
                    Style[
                    "L35G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["L35G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["L35G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0967581"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{22, 47}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12.991"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.08120485301172897}, {5., 0.5331587585758858}, \
{10., 0.7205981922005062}, {20., 0.942278411505687}, {35., \
0.8627576241274179}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1382.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.3715250140810087}, {93, 0.3576685539005378}, {186, \
0.37656388611560493}, {279, 0.39294080767649797}, {371, 0.4282172363399639}, \
{465, 0.43829698549349205}, {557, 0.4420769797925727}, {650, \
0.4534172522100123}, {742, 0.46223776464983307}, {834, 0.4773592559224587}, \
{984, 0.5151663798804458}, {1284, 0.6260954656004043}, {1884, \
0.7484188739475618}, {2784, 0.945255710973452}, {3984, 1.1952884489765356}}", 
                   
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3926.4000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["L35G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.14797"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{26, 15}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["9.83978"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.15750747855798963}, {5., 0.40331471555861753}, \
{10., 0.5008340073766363}, {20., 0.843058795049278}, {35., \
0.838385969229441}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1382.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.64590369831449}, {93, 0.7181604121031008}, {186, \
0.7904373135483556}, {279, 0.8189156184042781}, {371, 0.882455606973146}, \
{465, 0.9438196856528454}, {557, 1.033701300295365}, {650, \
1.090716225236767}, {742, 1.1214220230119845}, {834, 1.1982033450616008}, \
{984, 1.3145184396039336}, {1284, 1.5011798508883218}, {1884, \
1.9387773134072912}, {2784, 2.5868856081927216}, {3984, 3.449872629933026}}", 
                   
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3840.0000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["7 total \:203a ", ""], 
                    Style[
                    Superscript["7 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["L35G"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["L35G"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["D38G", 
                    Style[
                    "D38G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D38G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["D38G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.63672"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{9, 28}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10.6863"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.06281902329701204}, {5., 0.28383946728120957}, \
{10., 0.4169040120260051}, {20., 0.586759125426646}, {35., \
0.7535441288249627}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1392.0000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.0555023961628278}, {93, 1.0886012063528423}, {186, \
1.1287979413772882}, {279, 1.170183062854681}, {371, 1.2115744374550563}, \
{465, 1.2506063497531874}, {557, 1.297925296278869}, {650, \
1.3239542559587893}, {742, 1.3630024289575393}, {834, 1.3878542359411048}, \
{984, 1.473078086357036}, {1284, 1.6116258176909708}, {1884, \
1.8616740638219695}, {2784, 2.197441029791873}, {3984, 2.712097256173975}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3849.6000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["D38G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.85185"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{12, 52}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["5.74111"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.07564581569291157}, {5., 0.2547658924305206}, \
{10., 0.36091425836758495}, {20., 0.5516394580327348}, {35., \
0.7559824107009955}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1401.6000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.30097356859254276}, {93, 0.3331719965570949}, {186, \
0.41368230935499206}, {279, 0.49191197622765664}, {371, 0.5977832996586442}, \
{465, 0.63691882509132}, {557, 0.6921774764186461}, {650, \
0.7750842558932739}, {742, 0.8326718004311893}, {834, 0.8902704204496655}, \
{984, 1.003196176429746}, {1284, 1.2176449623527386}, {1884, \
1.6424113856813989}, {2784, 2.213676352482736}, {3984, 2.9812938688515236}}", 
                   
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3888.0000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["8 total \:203a ", ""], 
                    Style[
                    Superscript["8 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D38G"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38G"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["D38V", 
                    Style[
                    "D38V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D38V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["D38V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.23785"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{19, 27}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11.5263"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.046150145312529596}, {5., 0.39324967738749467}, \
{10., 0.4884150157608002}, {20., 0.8857381802868225}, {35., \
0.8213452628875665}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1411.2000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.2321214966961301}, {93, 0.26925645394777215}, {186, \
0.34463262723545357}, {279, 0.38068880086680984}, {371, 0.44625667225010773}, \
{465, 0.5096527746057183}, {557, 0.5708758097031971}, {650, \
0.6342989631546937}, {742, 0.6911729441544165}, {834, 0.746964156066473}, \
{984, 0.8749972152163518}, {1284, 1.0852300888031288}, {1884, \
1.4897308026030367}, {2784, 2.0718377661315617}, {3984, 2.7821732785333704}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3926.4000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["D38V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.730374"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{11, 33}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6.95733"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.43107133000537445}, {5., 0.6787340966555715}, \
{10., 1.}, {20., 0.9569414249967135}, {35., 0.9436697160358865}, {50., \
0.9897200460278863}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1392.0000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.8948807192164959}, {93, 0.883392898275334}, {186, \
0.8738200601597743}, {279, 0.9063689937672654}, {371, 0.9101985195408999}, \
{465, 0.9446665273598672}, {557, 0.9523266421226579}, {650, \
0.9331767357009182}, {742, 0.9465815370148425}, {834, 0.9523266421226579}, \
{984, 0.9619020713086782}, {1284, 1.0404326177468275}, {1884, \
1.0902436545579832}, {2784, 1.222477043698063}, {3984, 1.3892956287649185}}", 
                   
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3878.4000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["8 total \:203a ", ""], 
                    Style[
                    Superscript["8 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D38V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D38V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Q39V", 
                    Style[
                    "Q39V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Q39V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["Q39V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.872884"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{22, 44}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12.9147"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.01596679481812175}, {5., 0.27701719406225583}, \
{10., 0.4327000211105671}, {20., 0.7960966894769055}, {35., \
0.8068713947817083}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1401.6000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.27515088293662193}, {93, 0.34801367784088644}, \
{186, 0.3937406743614093}, {279, 0.4623445281415747}, {371, \
0.4909342283409485}, {465, 0.5509817782650204}, {557, 0.5910204268751288}, \
{650, 0.6940027080162336}, {742, 0.6997250405315107}, {834, \
0.7440770511414517}, {984, 0.8599976972169812}, {1284, 1.0704966666152742}, \
{1884, 1.4188271736740707}, {2784, 1.9156227622696174}, {3984, \
2.6137382699757397}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3916.8000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["Q39V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.26864"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{26, 12}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11.2075"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.06379775152015515}, {5., 0.2633222320258846}, \
{10., 0.39491040555028367}, {20., 0.7836260874772538}, {35., \
0.7906064390090622}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1401.6000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.8741761727736326}, {93, 0.991718651244578}, {186, \
1.132490230256313}, {279, 1.2448121077756933}, {371, 1.3875224978143932}, \
{465, 1.5088974349074378}, {557, 1.60354455910226}, {650, \
1.7321874874189187}, {742, 1.812628304716914}, {834, 1.9736014915876106}, \
{984, 2.1490250049375765}, {1284, 2.563128768634343}, {1884, \
3.2877400797918255}, {2784, 4.386793810149926}, {3984, 5.783301903357906}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3820.8000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["6 total \:203a ", ""], 
                    Style[
                    Superscript["6 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Q39V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Q39V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["M40V", 
                    Style[
                    "M40V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["M40V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["M40V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.44004"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{19, 10}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12.2134"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.024892714746030168}, {5., 0.27763654388927744}, \
{10., 0.37146455799911315}, {20., 0.7752556665486887}, {35., \
0.7873494266126113}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1420.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.5514997056954937}, {93, 0.6912464586311206}, {186, \
0.8710302069469251}, {279, 1.037257941547151}, {371, 1.2088611972268484}, \
{465, 1.3795302524639494}, {557, 1.532392149013768}, {650, \
1.718068117862651}, {742, 1.8817134330675218}, {834, 2.0243399419774732}, \
{984, 2.2813006905073805}, {1284, 2.7569184437635044}, {1884, \
3.806522566795715}, {2784, 5.373367305613535}, {3984, 7.390359512370471}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3840.0000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["M40V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190605_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4.40434"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{19, 10}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["13.6096"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.4412609355893089}, {5., 0.35358428819194315}, \
{10., 0.535420851997538}, {20., 0.7357122298823644}, {35., \
0.899938808011245}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1372.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 2.3707344431964223}, {91, 2.4083505672521395}, {183, \
2.446961932730228}, {274, 2.4964716477354068}, {365, 2.544009446278141}, \
{456, 2.577687105496246}, {548, 2.6173132748876813}, {639, \
2.651000126565863}, {730, 2.7104579050119746}, {821, 2.7392006146126353}, \
{971, 2.800661075402012}, {1271, 2.9692562054818468}, {1871, \
3.2551315646387673}, {2771, 3.673628348044802}, {3971, 4.136743829495859}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3830.4000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["4 total \:203a ", ""], 
                    Style[
                    Superscript["4 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["M40V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["M40V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["D43G", 
                    Style[
                    "D43G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D43G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["D43G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190605_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.06067"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{10, 33}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12.3516"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.22514672335958863}, {5., 0.5194235372943066}, \
{10., 0.41694772551188897}, {20., 0.7878263667723653}, {35., \
0.9407182202571703}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1401.6000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 4.437813212134018}, {91, 4.580127548286373}, {183, \
4.7327203589516005}, {274, 4.8701559785854345}, {365, 5.0195806034725186}, \
{456, 5.145325028077085}, {548, 5.311983329311552}, {639, \
5.4617664433315145}, {730, 5.565667435708169}, {821, 5.719076874689237}, \
{971, 5.944326487304518}, {1271, 6.452268648462529}, {1871, \
7.426706943507924}, {2771, 8.82776539151349}, {3971, 10.542682168956029}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3792.0000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["D43V", 
                    Style[
                    "D43V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["D43V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["D43V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4.35722"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{20, 2}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["9.14459"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.03131513150591701}, {5., 0.5386691233008849}, \
{10., 0.6370009493902523}, {20., 0.9550170035921784}, {35., \
0.8998006867727825}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1392.0000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.6976742385456443}, {93, 0.8896138838239602}, {186, \
1.0817082192333467}, {279, 1.3208769001925564}, {371, 1.5285962960714372}, \
{465, 1.7259355343785023}, {557, 1.931690989547994}, {650, \
2.143537463444246}, {742, 2.3131740076498803}, {834, 2.5384030090847127}, \
{984, 2.8726078187583}, {1284, 3.5594887060112734}, {1884, \
4.743436020012908}, {2784, 6.662707431791908}, {3984, 9.15992790824703}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["D43V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3811.2000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["G56V", 
                    Style[
                    "G56V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["G56V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["G56V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.09008"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{15, 15}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["9.89146"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.30915291168716835}, {5., 0.5924287711621107}, \
{10., 0.8418563878354777}, {20., 0.8902181277766956}, {35., \
0.8681231561471059}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1392.0000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.4441378618281418}, {93, 0.46636301163767857}, {186, \
0.4372996962565197}, {279, 0.42362384711003004}, {371, 0.44926659156357335}, \
{465, 0.48517023846020846}, {557, 0.5193683322134749}, {650, \
0.4937193820953463}, {742, 0.5347587985320286}, {834, 0.529628551592545}, \
{984, 0.586066315398459}, {1284, 0.6134340909025057}, {1884, \
0.7246428523181819}, {2784, 0.9078059505508047}, {3984, 1.13907475526349}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3897.6000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["G56V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.876099"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{18, 39}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["9.5988"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.23583526164606877}, {5., 0.6844775515601754}, \
{10., 1.}, {20., 0.827732874114986}, {35., 0.875305447437134}, {50., \
0.9099771714301128}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1372.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.5455279350559904}, {93, 0.5346616155175962}, {186, \
0.5262103219800861}, {279, 0.5467353296602019}, {371, 0.5576021132318221}, \
{465, 0.5551872363130896}, {557, 0.5757143489540956}, {650, \
0.5527723800427209}, {742, 0.5563946721909979}, {834, 0.5588095594363814}, \
{984, 0.5781294016500917}, {1284, 0.6179807662300546}, {1884, \
0.6481749660581537}, {2784, 0.7327361438874729}, {3984, 0.8620440909269883}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3897.6000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["10 total \:203a ", ""], 
                    Style[
                    Superscript["10 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["G56V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["G56V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["F57G", 
                    Style[
                    "F57G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["F57G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["F57G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.15032"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{15, 21}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11.9181"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.34402670366795435}, {5., 0.6841949400061235}, \
{10., 0.9426352106683732}, {20., 0.9123195207492496}, {35., \
0.9247185665217201}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1392.0000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.22977792768025554}, {93, 0.2680663506887328}, {186, \
0.2638118605046217}, {279, 0.25530304604019427}, {371, 0.275157290659639}, \
{465, 0.29643103435730866}, {557, 0.30210426704763643}, {650, \
0.3077775985600919}, {742, 0.3361457410106741}, {834, 0.34465666722658456}, \
{984, 0.3659349614940482}, {1284, 0.41842742012566486}, {1884, \
0.5120839694506313}, {2784, 0.6483611341076719}, {3984, 0.8528889034004081}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3945.6000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["F57G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190522_S2_d1_MeP_1_SlowChip.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.923053"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{18, 45}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11.2813"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.07810030144471061}, {5., 0.7341567962934954}, \
{10., 1.}, {20., 0.8173610971773404}, {35., 0.7873243405535101}, {50., \
0.7353628186375955}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1392.0000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 0.12962539990079172}, {93, 0.11979076983043109}, \
{186, 0.11241499980373272}, {279, 0.11118572166306841}, {371, \
0.12102008170580238}, {465, 0.1480661643639604}, {557, 0.1480661643639604}, \
{650, 0.15298388533599952}, {742, 0.13946033894180768}, {834, \
0.12839605425321282}, {984, 0.1689670138200926}, {1284, 0.19478764667862114}, \
{1884, 0.24028637104186099}, {2784, 0.3103921344241513}, {3984, \
0.40266104724354934}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{4003.2000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["7 total \:203a ", ""], 
                    Style[
                    Superscript["7 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["F57G"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F57G"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[True, 138, 1], {1, 138 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[False, 138, 1], {1, 138 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    138, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    138, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 138, 1], {1, 138 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 138, 1], {1, 138 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 31, 1], {1, 31 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 31, 1], {1, 31 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 31, 1], {1, 31 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 31, 1], {1, 31 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {5136., {355.134033203125, 360.865966796875}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {5136., {355.134033203125, 360.865966796875}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 8313918638486622431918966037575644810459994840064054987008,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.788022494593033*^9, 3.7895022710851717`*^9, {3.7895024349913073`*^9, 
   3.78950244738196*^9}, {3.789502797762703*^9, 3.789502811996072*^9}, 
   3.789504575314711*^9, 3.7895070296583643`*^9, 3.789509385792329*^9, 
   3.789578409527177*^9, 3.7895800149342957`*^9, 3.7895827327973013`*^9, 
   3.792164699247891*^9, 3.792165940983892*^9, 3.792340088904764*^9, 
   3.792683001508328*^9, 3.7926849393989897`*^9, 3.792692305038267*^9, 
   3.792785483642788*^9, 3.792861772267456*^9, 3.793556333020393*^9, 
   3.809870478025055*^9, 3.8099135009210243`*^9, 3.8099785831330853`*^9, 
   3.810243322590385*^9, 3.811949287404982*^9, 3.8119522975339127`*^9, 
   3.811976717795301*^9, 3.812550973499856*^9, 3.8126627167034607`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"70b5b5c0-6e45-4fd9-9fa5-aa6cdf39b737"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          8313918638486622431918966037575644810478441584137416521056], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           Association[{All, All, 
              TypeSystem`PackageScope`KeyDummy[1]} -> 
            1, {All, All, "MutantID"} -> 1, {All, All, "ExpIndex"} -> 
            1, {All, All, "ManualGFPFlag"} -> 1, {All, All, "UniqueExptID"} -> 
            1, {All, All, "ChipType"} -> 
            1, {All, All, "LocalBackgroundRatio"} -> 1, {All, All, "Indices"} -> 
            1, {All, All, "EnzymeConc"} -> 1, {All, All, "fit_mm_datapoints"} -> 
            1, {All, All, "DataPointsOptLinFit"} -> 
            1, {All, All, "fit_mm_curved_r2"} -> 1, {All, All, "fit_mm_kcat"} -> 
            1, {All, All, "fit_mm_KM"} -> 
            1, {All, All, "fit_mm_scale_factor"} -> 1, {All, All, "FitR2"} -> 
            1, {All, All, "DataPoints"} -> 1, {All, All, "kcat"} -> 
            1, {All, All, "Km"} -> 1, {All, All, "ScaleFactor"} -> 
            1, {All, All, "SubstrateConc"} -> 1, {All, All, "OptLinFitSlope"} -> 
            1, {All, All, "kcat/Km"} -> 1, {All, All, "AllLBRs"} -> 
            1, {All, All, "AllInitialRates"} -> 
            1, {All, All, "AllSubstrateConcs"} -> 1, {All, All, "StdCurveR2"} -> 
            1, {All, All, "NumPointsLinearFits"} -> 
            1, {All, All, "fit_mm_kcat_param_error"} -> 
            1, {All, All, "fit_mm_KM_param_error"} -> 
            1, {All, All, "AllEnzymeConcs"} -> 
            1, {All, All, "KnownBadMutant"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "MutantID" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ExpIndex" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ManualGFPFlag" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "UniqueExptID" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ChipType" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "LocalBackgroundRatio" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Indices" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "EnzymeConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_datapoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "DataPointsOptLinFit" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_curved_r2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_KM" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_scale_factor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "FitR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "DataPoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Km" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ScaleFactor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "SubstrateConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "OptLinFitSlope" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "kcat/Km" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "AllLBRs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllInitialRates" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllSubstrateConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "StdCurveR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "NumPointsLinearFits" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_kcat_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_KM_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllEnzymeConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "KnownBadMutant" -> 
                   TypeSystem`PackageScope`UnknownShape[False]]], 
                 DirectedInfinity[1], 10, {All, All}]], 2, 
               DirectedInfinity[1], {All}]]], 10, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MutantID", "ExpIndex", "ManualGFPFlag", "UniqueExptID", 
              "ChipType", "LocalBackgroundRatio", "Indices", "EnzymeConc", 
              "fit_mm_datapoints", "DataPointsOptLinFit", "fit_mm_curved_r2", 
              "fit_mm_kcat", "fit_mm_KM", "fit_mm_scale_factor", "FitR2", 
              "DataPoints", "kcat", "Km", "ScaleFactor", "SubstrateConc", 
              "OptLinFitSlope", "kcat/Km", "AllLBRs", "AllInitialRates", 
              "AllSubstrateConcs", "StdCurveR2", "NumPointsLinearFits", 
              "fit_mm_kcat_param_error", "fit_mm_KM_param_error", 
              "AllEnzymeConcs", "KnownBadMutant"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType}], TypeSystem`AnyLength], 38], "Meta" -> 
         Association["ID" -> 6011610104750669], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           Association[{All, All, 
              TypeSystem`PackageScope`KeyDummy[1]} -> 
            1, {All, All, "MutantID"} -> 1, {All, All, "ExpIndex"} -> 
            1, {All, All, "ManualGFPFlag"} -> 1, {All, All, "UniqueExptID"} -> 
            1, {All, All, "ChipType"} -> 
            1, {All, All, "LocalBackgroundRatio"} -> 1, {All, All, "Indices"} -> 
            1, {All, All, "EnzymeConc"} -> 1, {All, All, "fit_mm_datapoints"} -> 
            1, {All, All, "DataPointsOptLinFit"} -> 
            1, {All, All, "fit_mm_curved_r2"} -> 1, {All, All, "fit_mm_kcat"} -> 
            1, {All, All, "fit_mm_KM"} -> 
            1, {All, All, "fit_mm_scale_factor"} -> 1, {All, All, "FitR2"} -> 
            1, {All, All, "DataPoints"} -> 1, {All, All, "kcat"} -> 
            1, {All, All, "Km"} -> 1, {All, All, "ScaleFactor"} -> 
            1, {All, All, "SubstrateConc"} -> 1, {All, All, "OptLinFitSlope"} -> 
            1, {All, All, "kcat/Km"} -> 1, {All, All, "AllLBRs"} -> 
            1, {All, All, "AllInitialRates"} -> 
            1, {All, All, "AllSubstrateConcs"} -> 1, {All, All, "StdCurveR2"} -> 
            1, {All, All, "NumPointsLinearFits"} -> 
            1, {All, All, "fit_mm_kcat_param_error"} -> 
            1, {All, All, "fit_mm_KM_param_error"} -> 
            1, {All, All, "AllEnzymeConcs"} -> 
            1, {All, All, "KnownBadMutant"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "MutantID" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ExpIndex" -> TypeSystem`PackageScope`UnknownShape[False], 
                   "ManualGFPFlag" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "UniqueExptID" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ChipType" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "LocalBackgroundRatio" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Indices" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "EnzymeConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_datapoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "DataPointsOptLinFit" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_curved_r2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "fit_mm_KM" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_scale_factor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "FitR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "DataPoints" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "kcat" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "Km" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "ScaleFactor" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "SubstrateConc" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "OptLinFitSlope" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "kcat/Km" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "AllLBRs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllInitialRates" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllSubstrateConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], "StdCurveR2" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "NumPointsLinearFits" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_kcat_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "fit_mm_KM_param_error" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "AllEnzymeConcs" -> 
                   TypeSystem`PackageScope`UnknownShape[False], 
                   "KnownBadMutant" -> 
                   TypeSystem`PackageScope`UnknownShape[False]]], 
                 DirectedInfinity[1], 10, {All, All}]], 2, 
               DirectedInfinity[1], {All}]]], 10, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MutantID", "ExpIndex", "ManualGFPFlag", "UniqueExptID", 
              "ChipType", "LocalBackgroundRatio", "Indices", "EnzymeConc", 
              "fit_mm_datapoints", "DataPointsOptLinFit", "fit_mm_curved_r2", 
              "fit_mm_kcat", "fit_mm_KM", "fit_mm_scale_factor", "FitR2", 
              "DataPoints", "kcat", "Km", "ScaleFactor", "SubstrateConc", 
              "OptLinFitSlope", "kcat/Km", "AllLBRs", "AllInitialRates", 
              "AllSubstrateConcs", "StdCurveR2", "NumPointsLinearFits", 
              "fit_mm_kcat_param_error", "fit_mm_KM_param_error", 
              "AllEnzymeConcs", "KnownBadMutant"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType}], TypeSystem`AnyLength], 38], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 10, 
         "DisplayedColumnCount" -> 10, "DataRowCount" -> 38, 
         "DataColumnCount" -> 31, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MutantID", 
                    Style[
                    "MutantID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "MutantID"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "MutantID"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ExpIndex", 
                    Style[
                    "ExpIndex", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "ExpIndex"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "ExpIndex"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ManualGFPFlag", 
                    Style[
                    "ManualGFPFlag", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "ManualGFPFlag"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "ManualGFPFlag"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["UniqueExptID", 
                    Style[
                    "UniqueExptID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "UniqueExptID"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "UniqueExptID"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ChipType", 
                    Style[
                    "ChipType", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "ChipType"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "ChipType"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["LocalBackgroundRatio", 
                    Style[
                    "LocalBackgroundRatio", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "LocalBackgroundRatio"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "LocalBackgroundRatio"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Indices", 
                    Style[
                    "Indices", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Indices"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Indices"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["EnzymeConc", 
                    Style[
                    "EnzymeConc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "EnzymeConc"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "EnzymeConc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["fit_mm_datapoints", 
                    Style[
                    "fit_mm_datapoints", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "fit_mm_datapoints"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "fit_mm_datapoints"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["DataPointsOptLinFit", 
                    Style[
                    "DataPointsOptLinFit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "DataPointsOptLinFit"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "DataPointsOptLinFit"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["V26G", 
                    Style[
                    "V26G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["V26G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["V26G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.01133"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{28, 24}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["23.2394"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.002476622139101792}, {5., 0.13923835382150912}, \
{10., 0.2390687619160325}, {20., 0.45548533305250793}, {35., \
0.9455411786212035}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1420.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.451824948938494}, {91, 4.420927116994522}, {182, \
6.139234112625798}, {274, 8.58116705589581}, {365, 11.542991637678934}, {456, \
14.486689573028018}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1478.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["V26G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S3_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.6912"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{25, 35}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11.6874"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., -0.0005870659849093246}, {5., 0.37610301386159517}, \
{10., 0.21721906507500433}, {20., 0.5331709308715834}, {35., 1.}, {50., \
0.971683866119003}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1430.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 2.5124537203950124}, {75, 2.759397752321112}, {150, \
3.0496705559605672}, {225, 3.4513188935191965}, {300, 3.9429031002336443}, \
{375, 4.475113971997408}, {450, 5.246421493268829}, {525, 5.956703140275646}, \
{600, 6.9072967594411425}, {675, 7.85660422448053}, {825, 9.958551092405264}, \
{1125, 14.212985734605345}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V26G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3024.0000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["K51G", 
                    Style[
                    "K51G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["K51G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K51G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["K51G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K51G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K51G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K51G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S3_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K51G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K51G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.30706"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K51G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{27, 32}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K51G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14.1461"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K51G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., -0.00009959094685883507}, {5., 0.08726052932842585}, \
{10., 0.22842123056191344}, {20., 0.5583544382750981}, {35., \
0.9511627849585038}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K51G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1449.6000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.175772277710896}, {75, 6.573153426037303}, {150, \
11.917315192804729}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K51G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{729.6000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["R59V", 
                    Style[
                    "R59V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["R59V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["R59V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S3_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.99234"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{27, 14}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15.5832"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.0007745229462274881}, {5., 0.21059132057289023}, \
{10., 0.2558632824117348}, {20., 0.4487955478548564}, {35., \
0.9617274139793314}, {50., 0.9999999999999999}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1574.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.058992367176934}, {75, 3.2387934352906442}, {150, \
3.370923234321122}, {225, 3.5985426594842247}, {300, 3.7674734532183165}, \
{375, 4.020953932821623}, {450, 4.337030557408173}, {525, 4.667984276490276}, \
{600, 5.01016388955026}, {675, 5.4372535632602395}, {825, 6.465840190869845}, \
{1125, 9.0560540419684}, {1725, 14.505686499882913}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3254.4000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["R59V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S3_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.92462"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{3, 44}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["9.95964"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.016093850494753197}, {5., 0.04152199660631099}, \
{10., 0.12464599328058003}, {20., 0.41545610189759746}, {35., \
0.9149480411063045}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1430.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.5906209454952758}, {75, 3.682409250807734}, {150, \
3.8496289589111155}, {225, 3.9808125883795236}, {300, 4.138269262490723}, \
{375, 4.400786415992262}, {450, 4.669984611263846}, {525, 4.876890487128135}, \
{600, 5.152879341737519}, {675, 5.442153715721423}, {825, \
6.2483218862112695}, {1125, 8.221444416208904}, {1725, 12.962371849995046}}", 
                   
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["R59V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3283.2000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["V78A", 
                    Style[
                    "V78A", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["V78A"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["V78A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.101553"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{27, 28}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.28594"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.024814416400182157}, {5., 0.7564386176938981}, \
{10., 0.4663913865678395}, {20., 1.}, {35., 0.8824915206746025}, {50., \
0.8513073534639012}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1401.6000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.053691056280334}, {91, 3.0871899985653126}, {182, \
3.092479394613106}, {274, 3.090716259886286}, {365, 3.1259794700235717}, \
{456, 3.145374698935373}, {548, 3.143611482700298}, {638, \
3.1506643639794203}, {730, 3.1735865292696213}, {821, 3.200035754678492}, \
{971, 3.2282489400479832}, {1271, 3.309365762193623}, {1871, \
3.3851976352331987}, {2771, 3.476908154745422}, {3971, 3.658587906147252}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3811.2000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["V78A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.160457"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{22, 20}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.411119"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.06350494981446209}, {5., -1.909597364861243}, \
{10., 0.39447912044529476}, {20., 0.9999999999999999}, {35., \
0.7781168141485283}, {50., 0.6956653531579221}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1555.2000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.1606506122785403}, {91, 3.1754695933178674}, {182, \
3.186995467459567}, {274, 3.173823039869053}, {365, 3.168883379522611}, {456, \
3.186995467459567}, {548, 3.2067541088453364}, {638, 3.2248661967822927}, \
{730, 3.216633429538222}, {821, 3.231452410577549}, {971, 3.261090372656205}, \
{1271, 3.3022542088765605}, {1871, 3.3467111519945423}, {2771, \
3.419159503742366}, {3971, 3.511366496875959}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3811.2000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["5 total \:203a ", ""], 
                    Style[
                    Superscript["5 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["V78A"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V78A"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["T79G", 
                    Style[
                    "T79G", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T79G"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["T79G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{28, 27}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["23.268"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.0005457040536512661}, {5., 0.16244861559644397}, \
{10., 0.25126354138636225}, {20., 0.4655479433121307}, {35., \
0.9684898366180216}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1430.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.3743904617500813}, {91, 4.358821172717273}, {182, \
6.089489370809582}, {274, 8.617459187474907}, {365, 11.05641147502796}, {456, \
13.94938714354716}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1478.4000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["T79G", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{5, 11}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["17.2667"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., -0.30834435342109745}, {5., -0.9675646816258525}, \
{10., -2.5808333807715975}, {20., 1.}, {35., 0.5313671629728296}, {50., \
0.3632721390428177}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1420.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 4.1572068306976036}, {91, 4.16651056716244}, {182, \
4.169611843816946}, {274, 4.174263788030494}, {365, 4.168061203541233}, {456, \
4.174263788030494}, {548, 4.1851184610123155}, {638, 4.202176190662468}, \
{730, 4.189770522243596}, {821, 4.194422618608861}, {971, 4.200625468438308}, \
{1271, 4.2192343931446}, {1871, 4.26265741027085}, {2771, \
4.2828191426585995}, {3971, 4.29522669292122}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3734.4000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["450 total \:203a ", ""], 
                    Style[
                    Superscript["450 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T79G"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79G"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["T79S", 
                    Style[
                    "T79S", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T79S"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["T79S", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.03614"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{28, 26}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["22.8473"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.0004901293688661717}, {5., 0.11864666174010136}, \
{10., 0.2252387336253992}, {20., 0.4163448809060872}, {35., \
0.9740311299641345}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1420.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.6123098642378335}, {91, 6.000132684294415}, {182, \
10.215692639976043}, {274, 14.509039641733459}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{998.4000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["T79S", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.78369"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{25, 54}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.20761"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., -0.07598218764064629}, {5., 1.}, {10., \
0.21002113116153578}, {20., 0.43674095037828836}, {35., 0.3652471373614119}, \
{50., 0.3721568467387059}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1420.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 2.863444122615499}, {91, 2.8653274785954506}, {182, \
2.863444122615499}, {274, 2.8577940670619593}, {365, 2.8596774168490646}, \
{456, 2.8596774168490646}, {548, 2.880394400797656}, {638, \
2.893578066257077}, {730, 2.878511028289783}, {821, 2.927479386205472}, {971, \
2.9500806395917807}, {1271, 2.976449146947473}, {1871, 3.0856944656401546}, \
{2771, 3.204365496796713}, {3971, 3.4285449318386165}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3820.8000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["9 total \:203a ", ""], 
                    Style[
                    Superscript["9 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T79S"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["T79S"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["S85V", 
                    Style[
                    "S85V", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["S85V"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["S85V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0867962"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{27, 22}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.32996"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.023973192764401605}, {5., 0.4418683574392033}, \
{10., 0.5207665975229775}, {20., 1.}, {35., 0.94387402564464}, {50., \
0.9810058375666206}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1382.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.229268432416439}, {91, 3.2332585281862833}, {182, \
3.2532092625727915}, {274, 3.2611896756794954}, {365, 3.2532092625727915}, \
{456, 3.271165288067642}, {548, 3.283136163852686}, {638, \
3.2911168331831093}, {730, 3.305083169197044}, {821, 3.3270306926208253}, \
{971, 3.372922647009086}, {1271, 3.442762602113023}, {1871, \
3.556513321969657}, {2771, 3.744133296473356}, {3971, 3.9737217376780136}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3820.8000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["S85V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.902843"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{25, 38}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.538329"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., -0.027553208356615184}, {5., -0.4921162207358105}, \
{10., 0.3269656940817912}, {20., 1.}, {35., 0.6920774658452467}, {50., \
0.6631751008848108}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1420.8000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 2.8991937980918774}, {91, 2.904413131416228}, {182, \
2.909632480107181}, {274, 2.881796131242765}, {365, 2.904413131416228}, {456, \
2.911372266420074}, {548, 2.91833142875753}, {638, 2.911372266420074}, {730, \
2.9009335741596565}, {821, 2.932249835494153}, {971, 2.933989644034157}, \
{1271, 2.9931441542654103}, {1871, 3.02272215422725}, {2771, \
3.1044992207110504}, {3971, 3.1828000031719776}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3782.4000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["6 total \:203a ", ""], 
                    Style[
                    Superscript["6 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["S85V"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["S85V"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["N100A", 
                    Style[
                    "N100A", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["N100A"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["N100A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.5847"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{24, 13}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14.8669"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., -0.023062620255447967}, {5., 0.4520585763142461}, \
{10., 0.5216575882520239}, {20., 0.4944614982272663}, {35., \
0.7944802064164572}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1411.2000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.534937535720399}, {91, 3.5478050080334165}, {182, \
3.5900844807451917}, {274, 3.6470714025462154}, {365, 3.676484704070879}, \
{456, 3.691191533210123}, {548, 3.764727468403306}, {638, \
3.8033350324474138}, {730, 3.8437819403702886}, {821, 3.86032866541424}, \
{971, 3.933871517788926}, {1271, 4.106709210163015}, {1871, \
4.397262092439837}, {2771, 4.974837349394531}, {3971, 5.904172916430248}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3792.0000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["N100A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4.87351"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{18, 50}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14.0904"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., -0.016360668030354106}, {5., -0.7276806622202021}, \
{10., 0.2690532096911472}, {20., 0.652319160564673}, {35., \
0.8168811809940906}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1411.2000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.146048227462768}, {91, 3.167325198763492}, {182, \
3.197467901677576}, {274, 3.1832830525156885}, {365, 3.2081065943659186}, \
{456, 3.2435692494223267}, {548, 3.2435692494223267}, {638, \
3.255981304683006}, {730, 3.279032438105626}, {821, 3.2985374198955753}, \
{971, 3.3730124803894173}, {1271, 3.4208905598832464}, {1871, \
3.6035456610852314}, {2771, 3.894405308303643}, {3971, 4.330766018306171}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3830.4000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["42 total \:203a ", ""], 
                    Style[
                    Superscript["42 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["N100A"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["N100A"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["V159A", 
                    Style[
                    "V159A", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["V159A"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V159A"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["V159A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V159A"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V159A"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V159A"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V159A"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V159A"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.19572"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V159A"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{16, 8}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V159A"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.47471"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V159A"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., -0.07647151398562217}, {5., 1.}, {10., \
-0.3889892669061558}, {20., 0.7479781429087574}, {35., 0.7632056664807491}, \
{50., 0.6701500228712292}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V159A"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1411.2000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 4.02570270381099}, {91, 4.031406006895015}, {182, \
4.054219737694965}, {274, 4.029504900110127}, {365, 4.054219737694965}, {456, \
4.071330580850792}, {548, 4.099849692893567}, {638, 4.101751013316356}, {730, \
4.120764536188757}, {821, 4.154990339502551}, {971, 4.172103947460351}, \
{1271, 4.26148269050861}, {1871, 4.413646572901627}, {2771, \
4.651478916063893}, {3971, 5.0150701325911005}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["V159A"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3744.0000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["K162A", 
                    Style[
                    "K162A", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["K162A"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["K162A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{7, 10}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["17.0757"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], ImageSize -> {\
{60, Full}, Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., -0.5199393353580876}, {5., -2.4036687151264813}, \
{10., -1.109680623821245}, {20., 1.}, {35., 0.5697456298661069}, {50., \
0.46850206134933225}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1411.2000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 4.11374454492101}, {91, 4.099233435960473}, {182, \
4.084722666445694}, {274, 4.099233435960473}, {365, 4.101047306008938}, {456, \
4.121000226817907}, {548, 4.110116735836059}, {638, 4.108302839256734}, {730, \
4.121000226817907}, {821, 4.115558457428192}, {971, 4.140953790521809}, \
{1271, 4.177234647729638}, {1871, 4.202632517706758}, {2771, \
4.251617086321738}, {3971, 4.269760511706828}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3744.0000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["K162A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190913_S2_d1_MeP_1_SlowMeP.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["SlowMePChip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{2, 42}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16.5428"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], ImageSize -> {\
{60, Full}, Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., -0.3343168210911616}, {5., 0.2417651421467424}, \
{10., 0.3495644677274006}, {20., 0.9999999999999999}, {35., \
0.7172323828883852}, {50., 0.4714131593251818}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{1545.6000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.2220200889400354}, {91, 3.2409100623116265}, {182, \
3.2527165690937614}, {274, 3.271607417997384}, {365, 3.255077895711415}, \
{456, 3.273968812051767}, {548, 3.2668846551923565}, {638, \
3.2763302145428352}, {730, 3.2527165690937614}, {821, 3.2881373536036356}, \
{971, 3.2763302145428352}, {1271, 3.2975832168735466}, {1871, \
3.3400912766402673}, {2771, 3.349537884982008}, {3971, 3.4558216101487744}}", 
                   
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"], 2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{3859.2000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["63 total \:203a ", ""], 
                    Style[
                    Superscript["63 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["K162A"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["K162A"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[True, 38, 1], {1, 38 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[False, 38, 1], {1, 38 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    38, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    38, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 38, 1], {1, 38 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 38, 1], {1, 38 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 31, 1], {1, 31 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 31, 1], {1, 31 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 31, 1], {1, 31 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 31, 1], {1, 31 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {4987., {335.134033203125, 340.865966796875}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {4987., {335.134033203125, 340.865966796875}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 8313918638486622431918966037575644810478441584137416521056,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.788022494593033*^9, 3.7895022710851717`*^9, {3.7895024349913073`*^9, 
   3.78950244738196*^9}, {3.789502797762703*^9, 3.789502811996072*^9}, 
   3.789504575314711*^9, 3.7895070296583643`*^9, 3.789509385792329*^9, 
   3.789578409527177*^9, 3.7895800149342957`*^9, 3.7895827327973013`*^9, 
   3.792164699247891*^9, 3.792165940983892*^9, 3.792340088904764*^9, 
   3.792683001508328*^9, 3.7926849393989897`*^9, 3.792692305038267*^9, 
   3.792785483642788*^9, 3.792861772267456*^9, 3.793556333020393*^9, 
   3.809870478025055*^9, 3.8099135009210243`*^9, 3.8099785831330853`*^9, 
   3.810243322590385*^9, 3.811949287404982*^9, 3.8119522975339127`*^9, 
   3.811976717795301*^9, 3.812550973499856*^9, 3.8126627177239037`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"84fbeec5-9b65-4275-85b8-98c13a52a21f"]
}, Open  ]],

Cell["\<\
Perform additional culling step on mutants for which only 1-2 of many \
replicates passed culling.\
\>", "Text",
 CellChangeTimes->{{3.7779463220385637`*^9, 3.777946349619018*^9}, {
  3.78438162885358*^9, 3.784381654512724*^9}, {3.811951599499379*^9, 
  3.8119515999785852`*^9}},ExpressionUUID->"ea54a65e-72e9-4948-94bb-\
32b36da21aa3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dynamic", "[", "mutant", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cutoffThreshold", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"SlowMeP", " ", "devices"}], " ", "-", " ", 
    RowBox[{
    "not", " ", "skipping", " ", "chambers", " ", "so", " ", "using", " ", 
     "0.6", " ", "as", " ", "the", " ", "cutoff", " ", "threshold"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cutoffThresholdSlowest", "=", "0.6"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cullTableFast", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Clear", "[", 
        RowBox[{"lbrs", ",", "fractionCulled"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutantIn2FastChips", "[", 
            RowBox[{
             RowBox[{"groupedbyMutantIn2FastChips", "[", 
              RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], 
             ",", "n", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutantIn2FastChips", "[", "mutant", "]"}], 
             "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulled", "=", 
        RowBox[{"N", "[", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"Length", "[", "lbrs", "]"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "[", "lbrs", "]"}], "+", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MissingQ", "[", 
                RowBox[{"tooSlowIn2FastChips", "[", 
                 RowBox[{
                  RowBox[{"groupedbyMutantIn2FastChips", "[", 
                   RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], 
                   "]"}], ",", "1", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}], "]"}], ",", "0", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"tooSlowInFastChips", "[", 
                 RowBox[{
                  RowBox[{"groupedbyMutantIn2FastChips", "[", 
                   RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], 
                   "]"}], ",", "All", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}], "]"}]}], "]"}]}], ")"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"groupedbyMutantIn2FastChips", "[", 
          RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], ",", 
         "fractionCulled", ",", "\"\<FastChip\>\"", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "lbrs", "]"}], "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MissingQ", "[", 
              RowBox[{"tooSlowIn2FastChips", "[", 
               RowBox[{
                RowBox[{"groupedbyMutantIn2FastChips", "[", 
                 RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}],
                 ",", "1", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
              "]"}], ",", "0", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"tooSlowInFastChips", "[", 
               RowBox[{
                RowBox[{"groupedbyMutantIn2FastChips", "[", 
                 RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}],
                 ",", "All", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
              "]"}]}], "]"}]}], ")"}]}], "}"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"mutant", ",", "1", ",", 
        RowBox[{"Length", "[", "groupedbyMutantIn2FastChips", "]"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cullTableSlow", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Clear", "[", 
        RowBox[{"lbrs", ",", "fractionCulled"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutantIn2SlowChip", "[", 
            RowBox[{
             RowBox[{"groupedbyMutantIn2SlowChip", "[", 
              RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], 
             ",", "n", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutantIn2SlowChip", "[", "mutant", "]"}], 
             "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulled", "=", 
        RowBox[{"N", "[", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"Length", "[", "lbrs", "]"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "[", "lbrs", "]"}], "+", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MissingQ", "[", 
                RowBox[{"tooSlowIn2SlowChip", "[", 
                 RowBox[{
                  RowBox[{"groupedbyMutantIn2SlowChip", "[", 
                   RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], 
                   "]"}], ",", "1", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}], "]"}], ",", "0", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"tooSlowInSlowChip", "[", 
                 RowBox[{
                  RowBox[{"groupedbyMutantIn2SlowChip", "[", 
                   RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], 
                   "]"}], ",", "All", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}], "]"}]}], "]"}]}], ")"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"groupedbyMutantIn2SlowChip", "[", 
          RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], ",", 
         "fractionCulled", ",", "\"\<SlowChip\>\"", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "lbrs", "]"}], "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MissingQ", "[", 
              RowBox[{"tooSlowIn2SlowChip", "[", 
               RowBox[{
                RowBox[{"groupedbyMutantIn2SlowChip", "[", 
                 RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}],
                 ",", "1", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
              "]"}], ",", "0", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"tooSlowInSlowChip", "[", 
               RowBox[{
                RowBox[{"groupedbyMutantIn2SlowChip", "[", 
                 RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}],
                 ",", "All", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
              "]"}]}], "]"}]}], ")"}]}], "}"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"mutant", ",", "1", ",", 
        RowBox[{"Length", "[", "groupedbyMutantIn2SlowChip", "]"}]}], "}"}]}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cullTableSlowest", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Clear", "[", 
        RowBox[{"lbrs", ",", "fractionCulled"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
            RowBox[{
             RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
              RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], 
             ",", "n", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutantIn2SlowestChip", "[", "mutant", "]"}], 
             "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulled", "=", 
        RowBox[{"N", "[", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"Length", "[", "lbrs", "]"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "[", "lbrs", "]"}], "+", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MissingQ", "[", 
                RowBox[{"tooSlowIn2SlowestChip", "[", 
                 RowBox[{
                  RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
                   RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], 
                   "]"}], ",", "1", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}], "]"}], ",", "0", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"tooSlowInSlowestChip", "[", 
                 RowBox[{
                  RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
                   RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], 
                   "]"}], ",", "All", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}], "]"}]}], "]"}]}], ")"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
          RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], ",", 
         "fractionCulled", ",", "\"\<SlowMePChip\>\"", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "lbrs", "]"}], "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MissingQ", "[", 
              RowBox[{"tooSlowIn2SlowChip", "[", 
               RowBox[{
                RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
                 RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}],
                 ",", "1", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
              "]"}], ",", "0", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"tooSlowInSlowestChip", "[", 
               RowBox[{
                RowBox[{"groupedbyMutantIn2SlowestChip", "[", 
                 RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}],
                 ",", "All", ",", "\"\<LocalBackgroundRatio\>\""}], "]"}], 
              "]"}]}], "]"}]}], ")"}]}], "}"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"mutant", ",", "1", ",", 
        RowBox[{"Length", "[", "groupedbyMutantIn2SlowestChip", "]"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"passedCullingFast", "=", 
  RowBox[{"Select", "[", 
   RowBox[{"cullTableFast", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ">", "cutoffThreshold"}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"passedCullingSlow", "=", 
  RowBox[{"Select", "[", 
   RowBox[{"cullTableSlow", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ">", "cutoffThreshold"}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"passedCullingSlowest", "=", 
  RowBox[{"Select", "[", 
   RowBox[{"cullTableSlowest", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ">", "cutoffThresholdSlowest"}], 
     "&"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.777944158184766*^9, 3.7779442065068827`*^9}, {
   3.777946042355283*^9, 3.777946102310437*^9}, {3.777946141978031*^9, 
   3.777946145031281*^9}, {3.77794655322822*^9, 3.7779465535606422`*^9}, {
   3.777946647825327*^9, 3.777946648083419*^9}, {3.7779467930473137`*^9, 
   3.777946797977841*^9}, {3.777947028379219*^9, 3.7779470430308332`*^9}, {
   3.7779855760419207`*^9, 3.777985591356081*^9}, {3.777985895840721*^9, 
   3.77798589995373*^9}, {3.777986182619215*^9, 3.777986203750119*^9}, 
   3.781725898346588*^9, {3.781726701329586*^9, 3.781726706554641*^9}, {
   3.781726737081224*^9, 3.781726754800516*^9}, {3.781727678737359*^9, 
   3.781727739898925*^9}, 3.781727782529406*^9, {3.781842123343547*^9, 
   3.781842124938027*^9}, 3.781886254220748*^9, {3.781886335655604*^9, 
   3.7818863570812273`*^9}, {3.781964879970481*^9, 3.781964890589343*^9}, {
   3.7819656861006002`*^9, 3.781965733146035*^9}, {3.781985733908375*^9, 
   3.781985736645239*^9}, {3.782001543210436*^9, 3.782001554354735*^9}, 
   3.78200170095492*^9, {3.7843484211024733`*^9, 3.7843484219833937`*^9}, {
   3.78438091547715*^9, 3.784380959789953*^9}, {3.784381490533945*^9, 
   3.7843814951339207`*^9}, {3.784381528456584*^9, 3.784381547656989*^9}, {
   3.7843816259059887`*^9, 3.7843816277914343`*^9}, {3.784500272059367*^9, 
   3.784500272561872*^9}, {3.789502507742117*^9, 3.789502508667802*^9}, 
   3.789504728148964*^9, 3.792682389529196*^9, {3.809870488052952*^9, 
   3.80987052617614*^9}, {3.809913557109329*^9, 3.809913557221468*^9}, {
   3.8099135898343782`*^9, 3.809913592168702*^9}, {3.80997862456275*^9, 
   3.809978624939765*^9}, {3.810242049773521*^9, 3.810242050417515*^9}, 
   3.810242641888371*^9, {3.811949478246272*^9, 3.811949505605268*^9}, {
   3.812551019205838*^9, 3.8125510398330812`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"a84f9e35-926d-491a-89c1-d7caff7c26d7"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`mutant, StandardForm],
  ImageSizeCache->{47., {1., 8.}}]], "Output",
 CellChangeTimes->{
  3.7880224960261307`*^9, {3.789502518148191*^9, 3.7895025240736513`*^9}, 
   3.789502816222384*^9, 3.7895045814117937`*^9, 3.789504731763507*^9, 
   3.7895070332503967`*^9, 3.789509390946504*^9, 3.789578411825734*^9, 
   3.789580021235203*^9, 3.7895827345758877`*^9, 3.7921659504262447`*^9, 
   3.792340090401052*^9, 3.7926830015978107`*^9, 3.792684941072226*^9, 
   3.792692482254106*^9, 3.7927854854833937`*^9, 3.792861774248999*^9, 
   3.793556336377719*^9, {3.809870499005178*^9, 3.809870526352219*^9}, 
   3.809913503112606*^9, 3.8099135577003317`*^9, 3.809913592565106*^9, 
   3.8099786254608192`*^9, 3.810243327874508*^9, {3.811949467984503*^9, 
   3.811949505824849*^9}, 3.811952302677684*^9, 3.811976724414317*^9, {
   3.812551015395873*^9, 3.812551040309807*^9}, 3.812662721484324*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"0baeba16-a4ae-477a-94de-30b3cb0f98c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"V26G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", "4"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G34V\"\>", ",", "0.8888888888888888`", 
     ",", "\<\"FastChip\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Y48V\"\>", ",", "0.625`", ",", "\<\"FastChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S50G\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"K51G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", "4"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G53A\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", "4"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R59V\"\>", ",", "0.8333333333333334`", 
     ",", "\<\"FastChip\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"N69V\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D73V\"\>", ",", "0.9`", ",", "\<\"FastChip\"\>", ",", "10"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V75A\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", "4"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"T79S\"\>", ",", "0.6153846153846154`", 
     ",", "\<\"FastChip\"\>", ",", "91"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"A80V\"\>", ",", "0.8`", ",", "\<\"FastChip\"\>", ",", "5"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"H83G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", "4"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S85V\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V91A\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V91G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", "4"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G130V\"\>", ",", "0.8`", ",", "\<\"FastChip\"\>", ",", "5"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"H132V\"\>", ",", "0.8`", ",", "\<\"FastChip\"\>", ",", "5"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"W138G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V142G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V159A\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P174V\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G176A\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D203G\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"F204V\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"T228G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S230G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D233G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"W237V\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P250G\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"I265G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R266G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"L274G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"T304G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"F333G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V347G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"K366G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G370V\"\>", ",", "0.8`", ",", "\<\"FastChip\"\>", ",", "5"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"I394G\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"N399V\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Y400G\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"L427G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Y435V\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G458V\"\>", ",", "0.8181818181818182`", 
     ",", "\<\"FastChip\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S487G\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"W489V\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"L498G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"I505G\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"FastChip\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S510V\"\>", ",", "0.8333333333333334`", 
     ",", "\<\"FastChip\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"I519G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S525G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V536G\"\>", ",", "0.75`", ",", "\<\"FastChip\"\>", ",", 
     "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7880224960261307`*^9, {3.789502518148191*^9, 3.7895025240736513`*^9}, 
   3.789502816222384*^9, 3.7895045814117937`*^9, 3.789504731763507*^9, 
   3.7895070332503967`*^9, 3.789509390946504*^9, 3.789578411825734*^9, 
   3.789580021235203*^9, 3.7895827345758877`*^9, 3.7921659504262447`*^9, 
   3.792340090401052*^9, 3.7926830015978107`*^9, 3.792684941072226*^9, 
   3.792692482254106*^9, 3.7927854854833937`*^9, 3.792861774248999*^9, 
   3.793556336377719*^9, {3.809870499005178*^9, 3.809870526352219*^9}, 
   3.809913503112606*^9, 3.8099135577003317`*^9, 3.809913592565106*^9, 
   3.8099786254608192`*^9, 3.810243327874508*^9, {3.811949467984503*^9, 
   3.811949505824849*^9}, 3.811952302677684*^9, 3.811976724414317*^9, {
   3.812551015395873*^9, 3.812551040309807*^9}, 3.8126627269215918`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"ee0872b8-806b-463b-ac36-99127c726968"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Q39V\"\>", ",", "0.8571428571428571`", 
     ",", "\<\"SlowChip\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P92G\"\>", ",", "0.7142857142857143`", 
     ",", "\<\"SlowChip\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G99V\"\>", ",", "0.875`", ",", "\<\"SlowChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"N100V\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"SlowChip\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"T114G\"\>", ",", "0.625`", ",", "\<\"SlowChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D116V\"\>", ",", "0.8`", ",", "\<\"SlowChip\"\>", ",", "5"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S133V\"\>", ",", "0.8`", ",", "\<\"SlowChip\"\>", ",", "5"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", "0.8148148148148148`", 
     ",", "\<\"SlowChip\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"A165V\"\>", ",", "0.875`", ",", "\<\"SlowChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"W200G\"\>", ",", "0.8333333333333334`", 
     ",", "\<\"SlowChip\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"W237V\"\>", ",", "0.7142857142857143`", 
     ",", "\<\"SlowChip\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"H309V\"\>", ",", "0.875`", ",", "\<\"SlowChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Y322G\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"SlowChip\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D326V\"\>", ",", "0.8`", ",", "\<\"SlowChip\"\>", ",", "5"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"F333G\"\>", ",", "0.875`", ",", "\<\"SlowChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Y345G\"\>", ",", "0.75`", ",", "\<\"SlowChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G354V\"\>", ",", "0.9`", ",", "\<\"SlowChip\"\>", ",", 
     "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Y459G\"\>", ",", "0.75`", ",", "\<\"SlowChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S464V\"\>", ",", "0.8571428571428571`", 
     ",", "\<\"SlowChip\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"I496G\"\>", ",", "0.7142857142857143`", 
     ",", "\<\"SlowChip\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D518V\"\>", ",", "0.8`", ",", "\<\"SlowChip\"\>", ",", "5"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"S533V\"\>", ",", "0.625`", ",", "\<\"SlowChip\"\>", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G537V\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"SlowChip\"\>", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7880224960261307`*^9, {3.789502518148191*^9, 3.7895025240736513`*^9}, 
   3.789502816222384*^9, 3.7895045814117937`*^9, 3.789504731763507*^9, 
   3.7895070332503967`*^9, 3.789509390946504*^9, 3.789578411825734*^9, 
   3.789580021235203*^9, 3.7895827345758877`*^9, 3.7921659504262447`*^9, 
   3.792340090401052*^9, 3.7926830015978107`*^9, 3.792684941072226*^9, 
   3.792692482254106*^9, 3.7927854854833937`*^9, 3.792861774248999*^9, 
   3.793556336377719*^9, {3.809870499005178*^9, 3.809870526352219*^9}, 
   3.809913503112606*^9, 3.8099135577003317`*^9, 3.809913592565106*^9, 
   3.8099786254608192`*^9, 3.810243327874508*^9, {3.811949467984503*^9, 
   3.811949505824849*^9}, 3.811952302677684*^9, 3.811976724414317*^9, {
   3.812551015395873*^9, 3.812551040309807*^9}, 3.8126627269252462`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"88734e5a-b3a0-4a1a-ae56-2a609accd445"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"N100A\"\>", ",", "0.7368421052631579`", 
     ",", "\<\"SlowMePChip\"\>", ",", "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"R164A\"\>", ",", "0.9473684210526315`", 
     ",", "\<\"SlowMePChip\"\>", ",", "76"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"W179V\"\>", ",", "0.6666666666666666`", 
     ",", "\<\"SlowMePChip\"\>", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7880224960261307`*^9, {3.789502518148191*^9, 3.7895025240736513`*^9}, 
   3.789502816222384*^9, 3.7895045814117937`*^9, 3.789504731763507*^9, 
   3.7895070332503967`*^9, 3.789509390946504*^9, 3.789578411825734*^9, 
   3.789580021235203*^9, 3.7895827345758877`*^9, 3.7921659504262447`*^9, 
   3.792340090401052*^9, 3.7926830015978107`*^9, 3.792684941072226*^9, 
   3.792692482254106*^9, 3.7927854854833937`*^9, 3.792861774248999*^9, 
   3.793556336377719*^9, {3.809870499005178*^9, 3.809870526352219*^9}, 
   3.809913503112606*^9, 3.8099135577003317`*^9, 3.809913592565106*^9, 
   3.8099786254608192`*^9, 3.810243327874508*^9, {3.811949467984503*^9, 
   3.811949505824849*^9}, 3.811952302677684*^9, 3.811976724414317*^9, {
   3.812551015395873*^9, 3.812551040309807*^9}, 3.8126627269270067`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"e2694f26-21e6-4aaf-90e4-ca433f01ed8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"unmeasuredIn", "\[IndentingNewLine]", 
 RowBox[{"unmeasuredFast", "=", 
  RowBox[{"passedCullingFast", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"unmeasuredSlow", "=", 
  RowBox[{"passedCullingSlow", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"unmeasuredSlowest", "=", 
  RowBox[{"passedCullingSlowest", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7779461692644176`*^9, 3.777946290613867*^9}, {
  3.777986634353944*^9, 3.777986645275609*^9}, {3.777989096966075*^9, 
  3.777989100741467*^9}, {3.77819206248903*^9, 3.778192063288224*^9}, {
  3.7819229843982487`*^9, 3.781923003249569*^9}, {3.781965760543865*^9, 
  3.7819658018912897`*^9}, {3.7843816670487757`*^9, 3.784381670741918*^9}, {
  3.809978631793302*^9, 3.809978632887039*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"93b6fdc7-c6f1-4f78-8ac7-c669b71ede98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"D116G\"\>", ",", "\<\"D144V\"\>", ",", "\<\"D305G\"\>", 
   ",", "\<\"D305V\"\>", ",", "\<\"D326G\"\>", ",", "\<\"D352V\"\>", 
   ",", "\<\"D38G\"\>", ",", "\<\"D38V\"\>", ",", "\<\"F178G\"\>", 
   ",", "\<\"F332G\"\>", ",", "\<\"F500G\"\>", ",", "\<\"F57G\"\>", 
   ",", "\<\"G171V\"\>", ",", "\<\"G465V\"\>", ",", "\<\"G502V\"\>", 
   ",", "\<\"G56V\"\>", ",", "\<\"G64V\"\>", ",", "\<\"G82V\"\>", 
   ",", "\<\"G89V\"\>", ",", "\<\"G96V\"\>", ",", "\<\"H353G\"\>", 
   ",", "\<\"H486G\"\>", ",", "\<\"H486V\"\>", ",", "\<\"H495G\"\>", 
   ",", "\<\"I167G\"\>", ",", "\<\"I447G\"\>", ",", "\<\"I97G\"\>", 
   ",", "\<\"K162A\"\>", ",", "\<\"K162G\"\>", ",", "\<\"K162V\"\>", 
   ",", "\<\"L297G\"\>", ",", "\<\"L31G\"\>", ",", "\<\"L329G\"\>", 
   ",", "\<\"L336G\"\>", ",", "\<\"L35G\"\>", ",", "\<\"N100A/R164A\"\>", 
   ",", "\<\"P92V\"\>", ",", "\<\"S160V\"\>", ",", "\<\"S190V\"\>", 
   ",", "\<\"T79G\"\>", ",", "\<\"T79V\"\>", ",", "\<\"V523G\"\>", 
   ",", "\<\"W102G\"\>", ",", "\<\"W179G\"\>", ",", "\<\"Y192V\"\>", 
   ",", "\<\"Y193G\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.788022502628615*^9, 3.789502826406123*^9, 3.789504589445828*^9, 
   3.789507040434042*^9, 3.789509396664912*^9, 3.7895784179486513`*^9, 
   3.789580027480565*^9, 3.789582740740123*^9, 3.792165972527556*^9, 
   3.792340094980156*^9, 3.79268300173578*^9, 3.792686045452467*^9, 
   3.792692705513028*^9, 3.7927854904860764`*^9, 3.7928617790070057`*^9, 
   3.793556342456959*^9, {3.8098705064286747`*^9, 3.809870532784528*^9}, 
   3.809913509558229*^9, 3.809913567317792*^9, 3.809978633266271*^9, 
   3.810243333230773*^9, {3.811949489164385*^9, 3.811949514469384*^9}, 
   3.811952310599337*^9, 3.8119767318759747`*^9, 3.812551047058709*^9, 
   3.812662726965932*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"139bc1f3-d85e-46e7-ae93-12fdc5751340"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"V26G\"\>", ",", "\<\"G34V\"\>", ",", "\<\"Y48V\"\>", 
   ",", "\<\"S50G\"\>", ",", "\<\"K51G\"\>", ",", "\<\"G53A\"\>", 
   ",", "\<\"R59V\"\>", ",", "\<\"N69V\"\>", ",", "\<\"D73V\"\>", 
   ",", "\<\"V75A\"\>", ",", "\<\"T79S\"\>", ",", "\<\"A80V\"\>", 
   ",", "\<\"H83G\"\>", ",", "\<\"S85V\"\>", ",", "\<\"V91A\"\>", 
   ",", "\<\"V91G\"\>", ",", "\<\"G130V\"\>", ",", "\<\"H132V\"\>", 
   ",", "\<\"W138G\"\>", ",", "\<\"V142G\"\>", ",", "\<\"V159A\"\>", 
   ",", "\<\"P174V\"\>", ",", "\<\"G176A\"\>", ",", "\<\"D203G\"\>", 
   ",", "\<\"F204V\"\>", ",", "\<\"T228G\"\>", ",", "\<\"S230G\"\>", 
   ",", "\<\"D233G\"\>", ",", "\<\"W237V\"\>", ",", "\<\"P250G\"\>", 
   ",", "\<\"I265G\"\>", ",", "\<\"R266G\"\>", ",", "\<\"L274G\"\>", 
   ",", "\<\"T304G\"\>", ",", "\<\"F333G\"\>", ",", "\<\"V347G\"\>", 
   ",", "\<\"K366G\"\>", ",", "\<\"G370V\"\>", ",", "\<\"I394G\"\>", 
   ",", "\<\"N399V\"\>", ",", "\<\"Y400G\"\>", ",", "\<\"L427G\"\>", 
   ",", "\<\"Y435V\"\>", ",", "\<\"G458V\"\>", ",", "\<\"S487G\"\>", 
   ",", "\<\"W489V\"\>", ",", "\<\"L498G\"\>", ",", "\<\"I505G\"\>", 
   ",", "\<\"S510V\"\>", ",", "\<\"I519G\"\>", ",", "\<\"S525G\"\>", 
   ",", "\<\"V536G\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.788022502628615*^9, 3.789502826406123*^9, 3.789504589445828*^9, 
   3.789507040434042*^9, 3.789509396664912*^9, 3.7895784179486513`*^9, 
   3.789580027480565*^9, 3.789582740740123*^9, 3.792165972527556*^9, 
   3.792340094980156*^9, 3.79268300173578*^9, 3.792686045452467*^9, 
   3.792692705513028*^9, 3.7927854904860764`*^9, 3.7928617790070057`*^9, 
   3.793556342456959*^9, {3.8098705064286747`*^9, 3.809870532784528*^9}, 
   3.809913509558229*^9, 3.809913567317792*^9, 3.809978633266271*^9, 
   3.810243333230773*^9, {3.811949489164385*^9, 3.811949514469384*^9}, 
   3.811952310599337*^9, 3.8119767318759747`*^9, 3.812551047058709*^9, 
   3.8126627269676037`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"89ba0a3d-7c07-4333-8ce2-d29b85fefc63"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Q39V\"\>", ",", "\<\"P92G\"\>", ",", "\<\"G99V\"\>", 
   ",", "\<\"N100V\"\>", ",", "\<\"T114G\"\>", ",", "\<\"D116V\"\>", 
   ",", "\<\"S133V\"\>", ",", "\<\"R164A\"\>", ",", "\<\"A165V\"\>", 
   ",", "\<\"W200G\"\>", ",", "\<\"W237V\"\>", ",", "\<\"H309V\"\>", 
   ",", "\<\"Y322G\"\>", ",", "\<\"D326V\"\>", ",", "\<\"F333G\"\>", 
   ",", "\<\"Y345G\"\>", ",", "\<\"G354V\"\>", ",", "\<\"Y459G\"\>", 
   ",", "\<\"S464V\"\>", ",", "\<\"I496G\"\>", ",", "\<\"D518V\"\>", 
   ",", "\<\"S533V\"\>", ",", "\<\"G537V\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.788022502628615*^9, 3.789502826406123*^9, 3.789504589445828*^9, 
   3.789507040434042*^9, 3.789509396664912*^9, 3.7895784179486513`*^9, 
   3.789580027480565*^9, 3.789582740740123*^9, 3.792165972527556*^9, 
   3.792340094980156*^9, 3.79268300173578*^9, 3.792686045452467*^9, 
   3.792692705513028*^9, 3.7927854904860764`*^9, 3.7928617790070057`*^9, 
   3.793556342456959*^9, {3.8098705064286747`*^9, 3.809870532784528*^9}, 
   3.809913509558229*^9, 3.809913567317792*^9, 3.809978633266271*^9, 
   3.810243333230773*^9, {3.811949489164385*^9, 3.811949514469384*^9}, 
   3.811952310599337*^9, 3.8119767318759747`*^9, 3.812551047058709*^9, 
   3.812662726969075*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"250e6073-ded6-4440-b457-d72e460b1c7f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"N100A\"\>", ",", "\<\"R164A\"\>", ",", "\<\"W179V\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.788022502628615*^9, 3.789502826406123*^9, 3.789504589445828*^9, 
   3.789507040434042*^9, 3.789509396664912*^9, 3.7895784179486513`*^9, 
   3.789580027480565*^9, 3.789582740740123*^9, 3.792165972527556*^9, 
   3.792340094980156*^9, 3.79268300173578*^9, 3.792686045452467*^9, 
   3.792692705513028*^9, 3.7927854904860764`*^9, 3.7928617790070057`*^9, 
   3.793556342456959*^9, {3.8098705064286747`*^9, 3.809870532784528*^9}, 
   3.809913509558229*^9, 3.809913567317792*^9, 3.809978633266271*^9, 
   3.810243333230773*^9, {3.811949489164385*^9, 3.811949514469384*^9}, 
   3.811952310599337*^9, 3.8119767318759747`*^9, 3.812551047058709*^9, 
   3.8126627269703217`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"1abfe8aa-b413-425d-8ca2-0560b7ee0a5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "selecting", " ", "chambers", " ", "that", " ", "have", " ", "been", " ", 
     "identified", " ", "as", " ", "containing", " ", "too", " ", "many", " ",
      "culled", " ", "replicates"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "excepting", " ", "those", " ", "that", " ", "have", " ", "a", " ", 
       "second"}], "-", 
      RowBox[{"order", " ", "LBR"}]}], " ", ">", "5"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"slowPassedFastChip", "=", 
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"passedCullingFast", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "#MutantID"}], 
          "]"}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#ChipType", "==", "\"\<GlyScan\>\""}], "||", 
           RowBox[{"#ChipType", "==", "\"\<ValScan\>\""}]}], ")"}]}], "&"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slowPassedSlowChip", "=", 
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"passedCullingSlow", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "#MutantID"}], 
          "]"}], "&&", 
         RowBox[{"(", 
          RowBox[{"#ChipType", "==", "\"\<SlowChip\>\""}], ")"}]}], "&"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slowPassedSlowestChip", "=", 
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"passedCullingSlowest", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "#MutantID"}], 
          "]"}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#ChipType", "==", "\"\<SlowMePChip\>\""}], "||", 
           RowBox[{"#ChipType", "==", "\"\<SlowestChip\>\""}]}], ")"}]}], 
        "&"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"culledFast", "=", 
     RowBox[{"culledIn", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"slowPassedFastChip", ",", "#"}], "]"}], "\[Equal]", 
         "False"}], "&"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"take", " ", "Slow", " ", "data", " ", "that", " ", 
      RowBox[{"didn", "'"}], "t", " ", "meet", " ", "criterion", " ", 
      "above"}], " ", "-", " ", 
     RowBox[{
     "same", " ", "as", " ", "above", " ", "except", " ", "operating", " ", 
      "on", " ", "culledFast"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"culledSlow", "=", 
     RowBox[{"culledFast", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"slowPassedSlowChip", ",", "#"}], "]"}], "\[Equal]", 
         "False"}], "&"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"take", " ", "Slowest", " ", "data", " ", "that", " ", 
      RowBox[{"didn", "'"}], "t", " ", "meet", " ", "criterion", " ", 
      "above"}], " ", "-", " ", 
     RowBox[{
     "same", " ", "as", " ", "above", " ", "except", " ", "operating", " ", 
      "on", " ", "culledSlow"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"culledSlowest", "=", 
    RowBox[{"culledSlow", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"slowPassedSlowestChip", ",", "#"}], "]"}], "\[Equal]", 
        "False"}], "&"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slow", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
      "slowPassedFastChip", ",", "slowPassedSlowChip", ",", 
       "slowPassedSlowestChip", ",", "slowIn"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"culled", "=", "culledSlowest"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.777946470349329*^9, 3.7779465028695173`*^9}, {
   3.777947973226596*^9, 3.777948052778359*^9}, {3.777948107632164*^9, 
   3.777948118196752*^9}, {3.77798661159855*^9, 3.777986628410111*^9}, {
   3.777986888989442*^9, 3.7779868901613092`*^9}, {3.777989126671338*^9, 
   3.7779891269242163`*^9}, {3.781965432316311*^9, 3.781965469807459*^9}, {
   3.781965594687451*^9, 3.781965658785898*^9}, {3.7819658157965384`*^9, 
   3.781965885102635*^9}, {3.781966041049889*^9, 3.781966085321065*^9}, {
   3.7819668598768167`*^9, 3.781966869057061*^9}, {3.78196726805056*^9, 
   3.7819672782579117`*^9}, {3.781968363173724*^9, 3.781968430200056*^9}, {
   3.7819768736827507`*^9, 3.781976920463532*^9}, {3.784348441533551*^9, 
   3.784348448886039*^9}, {3.784381682383692*^9, 3.784381682971998*^9}, {
   3.784386199553417*^9, 3.7843862093382063`*^9}, {3.784388360634663*^9, 
   3.784388365772314*^9}, {3.784390856062834*^9, 3.784390892940363*^9}, {
   3.789502844997245*^9, 3.789502845397635*^9}, {3.792165982200719*^9, 
   3.792165992990445*^9}, 3.809913512902417*^9, {3.8099136345827513`*^9, 
   3.809913635016609*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"166a1636-e9a1-4a89-8e8d-fc2162cb545d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          8313918638486622431918966037575644810496888328210491322376], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "MutantID"} -> 1, {All, "ExpIndex"} -> 
            1, {All, "ManualGFPFlag"} -> 1, {All, "UniqueExptID"} -> 
            1, {All, "ChipType"} -> 1, {All, "LocalBackgroundRatio"} -> 
            1, {All, "Indices"} -> 1, {All, "EnzymeConc"} -> 
            1, {All, "fit_mm_datapoints"} -> 1, {All, "DataPointsOptLinFit"} -> 
            1, {All, "fit_mm_curved_r2"} -> 1, {All, "fit_mm_kcat"} -> 
            1, {All, "fit_mm_KM"} -> 1, {All, "fit_mm_scale_factor"} -> 
            1, {All, "FitR2"} -> 1, {All, "DataPoints"} -> 1, {All, "kcat"} -> 
            1, {All, "Km"} -> 1, {All, "ScaleFactor"} -> 
            1, {All, "SubstrateConc"} -> 1, {All, "OptLinFitSlope"} -> 
            1, {All, "kcat/Km"} -> 1, {All, "AllLBRs"} -> 
            1, {All, "AllInitialRates"} -> 1, {All, "AllSubstrateConcs"} -> 
            1, {All, "StdCurveR2"} -> 1, {All, "NumPointsLinearFits"} -> 
            1, {All, "fit_mm_kcat_param_error"} -> 
            1, {All, "fit_mm_KM_param_error"} -> 1, {All, "AllEnzymeConcs"} -> 
            1, {All, "KnownBadMutant"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "MutantID" -> 
                TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                "ExpIndex" -> TypeSystem`PackageScope`AtomShape[34], 
                "ManualGFPFlag" -> TypeSystem`PackageScope`AtomShape[34], 
                "UniqueExptID" -> TypeSystem`PackageScope`AtomShape[297.6], 
                "ChipType" -> TypeSystem`PackageScope`AtomShape[99.], 
                "LocalBackgroundRatio" -> 
                TypeSystem`PackageScope`AtomShape[60], "Indices" -> 
                TypeSystem`PackageScope`AtomShape[76.80000000000001], 
                "EnzymeConc" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_datapoints" -> 
                TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
                "DataPointsOptLinFit" -> 
                TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
                "fit_mm_curved_r2" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_kcat" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_KM" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_scale_factor" -> 
                TypeSystem`PackageScope`AtomShape[60], "FitR2" -> 
                TypeSystem`PackageScope`AtomShape[60], "DataPoints" -> 
                TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
                "kcat" -> TypeSystem`PackageScope`AtomShape[60], "Km" -> 
                TypeSystem`PackageScope`AtomShape[60], "ScaleFactor" -> 
                TypeSystem`PackageScope`AtomShape[60], "SubstrateConc" -> 
                TypeSystem`PackageScope`AtomShape[60], "OptLinFitSlope" -> 
                TypeSystem`PackageScope`AtomShape[60], "kcat/Km" -> 
                TypeSystem`PackageScope`AtomShape[60], "AllLBRs" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 8, 
                  DirectedInfinity[1], {All, "AllLBRs"}], "AllInitialRates" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 8, 
                  DirectedInfinity[1], {All, "AllInitialRates"}], 
                "AllSubstrateConcs" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 8, 
                  DirectedInfinity[1], {All, "AllSubstrateConcs"}], 
                "StdCurveR2" -> TypeSystem`PackageScope`UnknownShape[False], 
                "NumPointsLinearFits" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[34]], 8, 
                  DirectedInfinity[1], {All, "NumPointsLinearFits"}], 
                "fit_mm_kcat_param_error" -> 
                TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_KM_param_error" -> 
                TypeSystem`PackageScope`AtomShape[60], "AllEnzymeConcs" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 8, 
                  DirectedInfinity[1], {All, "AllEnzymeConcs"}], 
                "KnownBadMutant" -> TypeSystem`PackageScope`AtomShape[34]]], 
              DirectedInfinity[1], 10, {All}]], 2, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "MutantID", "ExpIndex", "ManualGFPFlag", "UniqueExptID", 
             "ChipType", "LocalBackgroundRatio", "Indices", "EnzymeConc", 
             "fit_mm_datapoints", "DataPointsOptLinFit", "fit_mm_curved_r2", 
             "fit_mm_kcat", "fit_mm_KM", "fit_mm_scale_factor", "FitR2", 
             "DataPoints", "kcat", "Km", "ScaleFactor", "SubstrateConc", 
             "OptLinFitSlope", "kcat/Km", "AllLBRs", "AllInitialRates", 
             "AllSubstrateConcs", "StdCurveR2", "NumPointsLinearFits", 
             "fit_mm_kcat_param_error", "fit_mm_KM_param_error", 
             "AllEnzymeConcs", "KnownBadMutant"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "GlyScan", "SlowChip", "SlowMePChip", "ValScan"]], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 8], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 8], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 8], TypeSystem`AnyType, 
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 8], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 8], 
             TypeSystem`Atom[Integer]}], 5456], "Meta" -> 
         Association["ID" -> 6019276621374041], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "MutantID"} -> 1, {All, "ExpIndex"} -> 
            1, {All, "ManualGFPFlag"} -> 1, {All, "UniqueExptID"} -> 
            1, {All, "ChipType"} -> 1, {All, "LocalBackgroundRatio"} -> 
            1, {All, "Indices"} -> 1, {All, "EnzymeConc"} -> 
            1, {All, "fit_mm_datapoints"} -> 1, {All, "DataPointsOptLinFit"} -> 
            1, {All, "fit_mm_curved_r2"} -> 1, {All, "fit_mm_kcat"} -> 
            1, {All, "fit_mm_KM"} -> 1, {All, "fit_mm_scale_factor"} -> 
            1, {All, "FitR2"} -> 1, {All, "DataPoints"} -> 1, {All, "kcat"} -> 
            1, {All, "Km"} -> 1, {All, "ScaleFactor"} -> 
            1, {All, "SubstrateConc"} -> 1, {All, "OptLinFitSlope"} -> 
            1, {All, "kcat/Km"} -> 1, {All, "AllLBRs"} -> 
            1, {All, "AllInitialRates"} -> 1, {All, "AllSubstrateConcs"} -> 
            1, {All, "StdCurveR2"} -> 1, {All, "NumPointsLinearFits"} -> 
            1, {All, "fit_mm_kcat_param_error"} -> 
            1, {All, "fit_mm_KM_param_error"} -> 1, {All, "AllEnzymeConcs"} -> 
            1, {All, "KnownBadMutant"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "MutantID" -> 
                TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                "ExpIndex" -> TypeSystem`PackageScope`AtomShape[34], 
                "ManualGFPFlag" -> TypeSystem`PackageScope`AtomShape[34], 
                "UniqueExptID" -> TypeSystem`PackageScope`AtomShape[297.6], 
                "ChipType" -> TypeSystem`PackageScope`AtomShape[99.], 
                "LocalBackgroundRatio" -> 
                TypeSystem`PackageScope`AtomShape[60], "Indices" -> 
                TypeSystem`PackageScope`AtomShape[76.80000000000001], 
                "EnzymeConc" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_datapoints" -> 
                TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
                "DataPointsOptLinFit" -> 
                TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
                "fit_mm_curved_r2" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_kcat" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_KM" -> TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_scale_factor" -> 
                TypeSystem`PackageScope`AtomShape[60], "FitR2" -> 
                TypeSystem`PackageScope`AtomShape[60], "DataPoints" -> 
                TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
                "kcat" -> TypeSystem`PackageScope`AtomShape[60], "Km" -> 
                TypeSystem`PackageScope`AtomShape[60], "ScaleFactor" -> 
                TypeSystem`PackageScope`AtomShape[60], "SubstrateConc" -> 
                TypeSystem`PackageScope`AtomShape[60], "OptLinFitSlope" -> 
                TypeSystem`PackageScope`AtomShape[60], "kcat/Km" -> 
                TypeSystem`PackageScope`AtomShape[60], "AllLBRs" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 8, 
                  DirectedInfinity[1], {All, "AllLBRs"}], "AllInitialRates" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 8, 
                  DirectedInfinity[1], {All, "AllInitialRates"}], 
                "AllSubstrateConcs" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 8, 
                  DirectedInfinity[1], {All, "AllSubstrateConcs"}], 
                "StdCurveR2" -> TypeSystem`PackageScope`UnknownShape[False], 
                "NumPointsLinearFits" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[34]], 8, 
                  DirectedInfinity[1], {All, "NumPointsLinearFits"}], 
                "fit_mm_kcat_param_error" -> 
                TypeSystem`PackageScope`AtomShape[60], 
                "fit_mm_KM_param_error" -> 
                TypeSystem`PackageScope`AtomShape[60], "AllEnzymeConcs" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[60]], 8, 
                  DirectedInfinity[1], {All, "AllEnzymeConcs"}], 
                "KnownBadMutant" -> TypeSystem`PackageScope`AtomShape[34]]], 
              DirectedInfinity[1], 10, {All}]], 2, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "MutantID", "ExpIndex", "ManualGFPFlag", "UniqueExptID", 
             "ChipType", "LocalBackgroundRatio", "Indices", "EnzymeConc", 
             "fit_mm_datapoints", "DataPointsOptLinFit", "fit_mm_curved_r2", 
             "fit_mm_kcat", "fit_mm_KM", "fit_mm_scale_factor", "FitR2", 
             "DataPoints", "kcat", "Km", "ScaleFactor", "SubstrateConc", 
             "OptLinFitSlope", "kcat/Km", "AllLBRs", "AllInitialRates", 
             "AllSubstrateConcs", "StdCurveR2", "NumPointsLinearFits", 
             "fit_mm_kcat_param_error", "fit_mm_KM_param_error", 
             "AllEnzymeConcs", "KnownBadMutant"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "GlyScan", "SlowChip", "SlowMePChip", "ValScan"]], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 8], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 8], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 8], TypeSystem`AnyType, 
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 8], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 8], 
             TypeSystem`Atom[Integer]}], 5456], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 2, 
         "DisplayedColumnCount" -> 10, "DataRowCount" -> 5456, 
         "DataColumnCount" -> 31, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MutantID", 
                    Style[
                    "MutantID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "MutantID"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "MutantID"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ExpIndex", 
                    Style[
                    "ExpIndex", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "ExpIndex"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "ExpIndex"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ManualGFPFlag", 
                    Style[
                    "ManualGFPFlag", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "ManualGFPFlag"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "ManualGFPFlag"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["UniqueExptID", 
                    Style[
                    "UniqueExptID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "UniqueExptID"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "UniqueExptID"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ChipType", 
                    Style[
                    "ChipType", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "ChipType"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "ChipType"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["LocalBackgroundRatio", 
                    Style[
                    "LocalBackgroundRatio", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "LocalBackgroundRatio"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "LocalBackgroundRatio"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Indices", 
                    Style[
                    "Indices", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Indices"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Indices"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["EnzymeConc", 
                    Style[
                    "EnzymeConc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "EnzymeConc"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "EnzymeConc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["fit_mm_datapoints", 
                    Style[
                    "fit_mm_datapoints", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "fit_mm_datapoints"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "fit_mm_datapoints"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["DataPointsOptLinFit", 
                    Style[
                    "DataPointsOptLinFit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "DataPointsOptLinFit"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "DataPointsOptLinFit"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation["S445V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190314_S3_d1_MeP_1_ValScan.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ValScan", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{99., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["17.1887"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{3, 56}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.09253"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.007853993321459038}, {5., 0.16096702066285024}, \
{10., 0.28531264472420254}, {20., 0.6250234087959162}, {35., \
0.8686806802694853}, {50., 0.9999999999999999}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 3.1853577784177665}, {75, 5.278918446059504}, {150, \
7.209825231635069}, {225, 8.915507825956045}, {300, 10.557394327137823}, \
{375, 12.155670841931807}, {450, 13.584631924490846}, {525, \
14.908143006190967}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["F87V", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["MutantID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["ExpIndex"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["ManualGFPFlag"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["190314_S3_d1_MeP_1_ValScan.csv", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["UniqueExptID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ValScan", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["ChipType"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{99., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["31.5098"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["LocalBackgroundRatio"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["{20, 38}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Indices"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.05211"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["EnzymeConc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0., 0.0165740435852044}, {5., 0.23408393873696645}, \
{10., 0.3919518698217941}, {20., 0.7363484322876038}, {35., \
0.9209421339205953}, {50., 1.}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["fit_mm_datapoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "{{0, 1.425734279622444}, {75, 2.374046559317393}, {150, \
3.2508366852288315}, {225, 4.114111600000554}, {300, 4.961849880481054}, \
{375, 5.779043158366333}, {450, 6.622162372408724}, {525, 7.404675978002807}, \
{600, 8.187525971219346}, {675, 8.944798475811151}, {825, \
10.365460507815872}, {1125, 13.045749003250707}}", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["DataPointsOptLinFit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-2) 
                    If[True, 5456, 1], {1, 5456 - -2 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-2) 
                    If[False, 5456, 1], {1, 5456 - -2 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 2, " of ", 
                    Style[
                    5456, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 2, " of ", 
                    Style[
                    5456, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    2 If[False, 5456, 1], {1, 5456 - 2 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    2 If[True, 5456, 1], {1, 5456 - 2 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 31, 1], {1, 31 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 31, 1], {1, 31 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 31, 1], {1, 31 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 31, 1], {1, 31 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {1975., {75.134033203125, 80.865966796875}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {1975., {75.134033203125, 80.865966796875}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 8313918638486622431918966037575644810496888328210491322376,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.788022506232565*^9, 3.789502850241521*^9, 
  3.789504593520883*^9, 3.7895047487037163`*^9, 3.789507043489254*^9, 
  3.78950939985365*^9, 3.7895784238785763`*^9, 3.78958003073638*^9, 
  3.789582743693959*^9, 3.792165996555995*^9, 3.792340097198666*^9, 
  3.79268300203309*^9, 3.792686049391165*^9, 3.792692711456065*^9, 
  3.7927854928894663`*^9, 3.7928617813962393`*^9, 3.793556345247675*^9, 
  3.809870536673312*^9, 3.809913515837681*^9, 3.8099135793688107`*^9, 
  3.8099136374661083`*^9, 3.809978637336503*^9, 3.810243335539955*^9, 
  3.811949793260655*^9, 3.8119523152230062`*^9, 3.811976735594466*^9, 
  3.812551051774425*^9, 3.812662729087288*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"04166acf-1e5e-4720-9182-586fdb7a6fd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutantIn", "=", 
    RowBox[{"culled", "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedbyMutant", "=", 
    RowBox[{"KeySortBy", "[", 
     RowBox[{"groupedbyMutantIn", ",", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tooSlowIn", "=", 
    RowBox[{"slow", "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tooSlow", "=", 
    RowBox[{"KeySortBy", "[", 
     RowBox[{"tooSlowIn", ",", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"datasetsIn", "=", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Values", "[", 
     RowBox[{"Normal", "[", 
      RowBox[{"groupedbyMutant", "[", 
       RowBox[{"All", ",", "All", ",", "\"\<UniqueExptID\>\""}], "]"}], "]"}],
      "]"}], "]"}], "]"}]}]}], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"a687ef75-622e-4429-acba-4d760a026b8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"190117_S3_d1_MeP_1_GlyScan.csv\"\>", 
   ",", "\<\"190123_S3_d1_MeP_1_GlyScan.csv\"\>", 
   ",", "\<\"190314_S3_d1_MeP_1_ValScan.csv\"\>", 
   ",", "\<\"190318_S3_d1_MeP_1_ValScan.csv\"\>", 
   ",", "\<\"190321_S2_d2_MeP_1_ValScan.csv\"\>", 
   ",", "\<\"190913_S2_d1_MeP_1_SlowMeP.csv\"\>", 
   ",", "\<\"190913_S3_d1_MeP_1_SlowMeP.csv\"\>", 
   ",", "\<\"190522_S2_d1_MeP_1_SlowChip.csv\"\>", 
   ",", "\<\"190605_S2_d1_MeP_1_SlowChip.csv\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.788022507004825*^9, 3.789502932497837*^9, 
  3.78950460084731*^9, 3.789504749909453*^9, 3.789507044192071*^9, 
  3.7895094006623793`*^9, 3.7895784251309843`*^9, 3.7895800338323936`*^9, 
  3.789582744785318*^9, 3.7921660485388536`*^9, 3.7923400979685593`*^9, 
  3.7926830021478357`*^9, 3.7926860503154*^9, 3.792692713270711*^9, 
  3.792785493707488*^9, 3.792861782212261*^9, 3.793556346269889*^9, 
  3.809870553527657*^9, 3.809913646493649*^9, 3.8099786394282837`*^9, 
  3.810243336177987*^9, 3.81194979554889*^9, 3.811953883115075*^9, 
  3.8119767394858637`*^9, 3.81255106221129*^9, 3.8126627321582947`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"e059d5ac-1860-4f40-926d-f5c896dcdca4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Length of aggregate data set (number of unique measurements)\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", "[", "culled", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mutantsWithData", "=", 
    RowBox[{"Sort", "[", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{"culled", "[", 
         RowBox[{"All", ",", "\"\<MutantID\>\""}], "]"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringDrop", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}], "]"}], "<", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringDrop", "[", 
            RowBox[{"#2", ",", 
             RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], "&"}]}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Number of total mutants with at least 1 Michaelis-Menten curve:\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", "[", "mutantsWithData", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Mutants too slow to have at least 1 culled measurement:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"unmeasured", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"slow", "[", 
        RowBox[{"All", ",", "\"\<MutantID\>\""}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Normal", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"culled", "[", 
        RowBox[{"All", ",", "\"\<MutantID\>\""}], "]"}], "]"}], "]"}]}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"countRepsCulled", "=", 
    RowBox[{
     RowBox[{"culled", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", 
              RowBox[{"-", "1"}]}], "]"}], "==", "\"\<V\>\""}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"#MutantID", ",", 
                RowBox[{"-", "1"}]}], "]"}], "==", "\"\<A\>\""}], "&&", 
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"#MutantID", ",", "1"}], "]"}], "==", "\"\<V\>\""}]}], 
            ")"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#MutantID", ",", 
              RowBox[{"-", "1"}]}], "]"}], "==", "\"\<G\>\""}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"#MutantID", ",", 
                RowBox[{"-", "1"}]}], "]"}], "==", "\"\<A\>\""}], "&&", 
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"#MutantID", ",", "1"}], "]"}], "==", "\"\<G\>\""}]}], 
            ")"}]}], ")"}]}], "&"}], "]"}], "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Table of number of replicates per mutant:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sort", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "#", "]"}], "&"}], "/@", "countRepsCulled"}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Mean number of replicates per mutant:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Mean", "[", 
   RowBox[{"Values", "[", 
    RowBox[{"Normal", "[", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], "&"}], "/@", "countRepsCulled"}], 
      ")"}], "]"}], "]"}], "]"}], "]"}]}], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"eb69a54d-027d-4d82-ad65-84f5aa47cfaa"],

Cell[BoxData["\<\"Length of aggregate data set (number of unique \
measurements)\"\>"], "Print",
 CellChangeTimes->{3.788022507041448*^9, 3.7895029350377617`*^9, 
  3.789504601948354*^9, 3.789504751104619*^9, 3.789507044310809*^9, 
  3.789509400727818*^9, 3.789578425393136*^9, 3.789580034181404*^9, 
  3.78958274505101*^9, 3.792166060560877*^9, 3.7923400980565453`*^9, 
  3.792683002294223*^9, 3.792686051885133*^9, 3.792692714613566*^9, 
  3.792785493733824*^9, 3.792861782237385*^9, 3.793556346390751*^9, 
  3.809870554827407*^9, 3.809913648237224*^9, 3.809978641325468*^9, 
  3.810243336994829*^9, 3.811949803891944*^9, 3.8119538841978893`*^9, 
  3.811976742585429*^9, 3.812551063685347*^9, 3.812662734039674*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"60b7882e-0e6b-4583-a4fb-71879e687708"],

Cell[BoxData["5456"], "Output",
 CellChangeTimes->{3.78802250709409*^9, 3.789502935040195*^9, 
  3.7895046019506187`*^9, 3.7895047511066923`*^9, 3.789507044313387*^9, 
  3.789509400729945*^9, 3.78957842539712*^9, 3.789580034185409*^9, 
  3.789582745055152*^9, 3.7921660605627832`*^9, 3.792340098058792*^9, 
  3.792683002296257*^9, 3.792686051887701*^9, 3.792692714616746*^9, 
  3.792785493736081*^9, 3.7928617822396317`*^9, 3.793556346393609*^9, 
  3.809870554828761*^9, 3.8099136482415857`*^9, 3.809978641329907*^9, 
  3.810243336996542*^9, 3.8119498038945503`*^9, 3.811953884204733*^9, 
  3.811976742590242*^9, 3.8125510636870937`*^9, 3.8126627340407257`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"31b04d21-e059-4fa9-9a89-d4850b0d184c"],

Cell[BoxData["\<\"Number of total mutants with at least 1 Michaelis-Menten \
curve:\"\>"], "Print",
 CellChangeTimes->{3.788022507041448*^9, 3.7895029350377617`*^9, 
  3.789504601948354*^9, 3.789504751104619*^9, 3.789507044310809*^9, 
  3.789509400727818*^9, 3.789578425393136*^9, 3.789580034181404*^9, 
  3.78958274505101*^9, 3.792166060560877*^9, 3.7923400980565453`*^9, 
  3.792683002294223*^9, 3.792686051885133*^9, 3.792692714613566*^9, 
  3.792785493733824*^9, 3.792861782237385*^9, 3.793556346390751*^9, 
  3.809870554827407*^9, 3.809913648237224*^9, 3.809978641325468*^9, 
  3.810243336994829*^9, 3.811949803891944*^9, 3.8119538841978893`*^9, 
  3.811976742585429*^9, 3.812551063685347*^9, 3.812662734096752*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"9da7ab7c-118c-40bd-b498-01873c211c10"],

Cell[BoxData["950"], "Output",
 CellChangeTimes->{3.78802250709409*^9, 3.789502935040195*^9, 
  3.7895046019506187`*^9, 3.7895047511066923`*^9, 3.789507044313387*^9, 
  3.789509400729945*^9, 3.78957842539712*^9, 3.789580034185409*^9, 
  3.789582745055152*^9, 3.7921660605627832`*^9, 3.792340098058792*^9, 
  3.792683002296257*^9, 3.792686051887701*^9, 3.792692714616746*^9, 
  3.792785493736081*^9, 3.7928617822396317`*^9, 3.793556346393609*^9, 
  3.809870554828761*^9, 3.8099136482415857`*^9, 3.809978641329907*^9, 
  3.810243336996542*^9, 3.8119498038945503`*^9, 3.811953884204733*^9, 
  3.811976742590242*^9, 3.8125510636870937`*^9, 3.812662734097788*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"0dacdc5e-5bd8-400b-ae69-e2c7d8bbd78c"],

Cell[BoxData["\<\"Mutants too slow to have at least 1 culled \
measurement:\"\>"], "Print",
 CellChangeTimes->{3.788022507041448*^9, 3.7895029350377617`*^9, 
  3.789504601948354*^9, 3.789504751104619*^9, 3.789507044310809*^9, 
  3.789509400727818*^9, 3.789578425393136*^9, 3.789580034181404*^9, 
  3.78958274505101*^9, 3.792166060560877*^9, 3.7923400980565453`*^9, 
  3.792683002294223*^9, 3.792686051885133*^9, 3.792692714613566*^9, 
  3.792785493733824*^9, 3.792861782237385*^9, 3.793556346390751*^9, 
  3.809870554827407*^9, 3.809913648237224*^9, 3.809978641325468*^9, 
  3.810243336994829*^9, 3.811949803891944*^9, 3.8119538841978893`*^9, 
  3.811976742585429*^9, 3.812551063685347*^9, 3.8126627340984364`*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"24a574e0-dcd9-430c-bf35-07709f77c8c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A165V\"\>", ",", "\<\"D116G\"\>", ",", "\<\"D116V\"\>", 
   ",", "\<\"D144V\"\>", ",", "\<\"D203G\"\>", ",", "\<\"D305G\"\>", 
   ",", "\<\"D305V\"\>", ",", "\<\"D326G\"\>", ",", "\<\"D326V\"\>", 
   ",", "\<\"D352V\"\>", ",", "\<\"D38G\"\>", ",", "\<\"D38V\"\>", 
   ",", "\<\"D518V\"\>", ",", "\<\"F178G\"\>", ",", "\<\"F204V\"\>", 
   ",", "\<\"F332G\"\>", ",", "\<\"F333G\"\>", ",", "\<\"F500G\"\>", 
   ",", "\<\"F57G\"\>", ",", "\<\"G171V\"\>", ",", "\<\"G176A\"\>", 
   ",", "\<\"G34V\"\>", ",", "\<\"G354V\"\>", ",", "\<\"G465V\"\>", 
   ",", "\<\"G502V\"\>", ",", "\<\"G537V\"\>", ",", "\<\"G53A\"\>", 
   ",", "\<\"G56V\"\>", ",", "\<\"G64V\"\>", ",", "\<\"G82V\"\>", 
   ",", "\<\"G89V\"\>", ",", "\<\"G96V\"\>", ",", "\<\"G99V\"\>", 
   ",", "\<\"H132V\"\>", ",", "\<\"H309V\"\>", ",", "\<\"H353G\"\>", 
   ",", "\<\"H486G\"\>", ",", "\<\"H486V\"\>", ",", "\<\"H495G\"\>", 
   ",", "\<\"I167G\"\>", ",", "\<\"I394G\"\>", ",", "\<\"I447G\"\>", 
   ",", "\<\"I496G\"\>", ",", "\<\"I97G\"\>", ",", "\<\"K162A\"\>", 
   ",", "\<\"K162G\"\>", ",", "\<\"K162V\"\>", ",", "\<\"K366G\"\>", 
   ",", "\<\"L297G\"\>", ",", "\<\"L31G\"\>", ",", "\<\"L329G\"\>", 
   ",", "\<\"L336G\"\>", ",", "\<\"L35G\"\>", ",", "\<\"L427G\"\>", 
   ",", "\<\"L498G\"\>", ",", "\<\"N100A/R164A\"\>", ",", "\<\"N100V\"\>", 
   ",", "\<\"N69V\"\>", ",", "\<\"P92V\"\>", ",", "\<\"Q39V\"\>", 
   ",", "\<\"R164A\"\>", ",", "\<\"R266G\"\>", ",", "\<\"S133V\"\>", 
   ",", "\<\"S160V\"\>", ",", "\<\"S190V\"\>", ",", "\<\"S230G\"\>", 
   ",", "\<\"S464V\"\>", ",", "\<\"S487G\"\>", ",", "\<\"S50G\"\>", 
   ",", "\<\"S525G\"\>", ",", "\<\"S533V\"\>", ",", "\<\"T114G\"\>", 
   ",", "\<\"T304G\"\>", ",", "\<\"T79G\"\>", ",", "\<\"T79V\"\>", 
   ",", "\<\"V347G\"\>", ",", "\<\"V523G\"\>", ",", "\<\"V536G\"\>", 
   ",", "\<\"V75A\"\>", ",", "\<\"V91A\"\>", ",", "\<\"W102G\"\>", 
   ",", "\<\"W179G\"\>", ",", "\<\"W179V\"\>", ",", "\<\"W200G\"\>", 
   ",", "\<\"W237V\"\>", ",", "\<\"Y192V\"\>", ",", "\<\"Y193G\"\>", 
   ",", "\<\"Y322G\"\>", ",", "\<\"Y400G\"\>", ",", "\<\"Y459G\"\>", 
   ",", "\<\"Y48V\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.78802250709409*^9, 3.789502935040195*^9, 
  3.7895046019506187`*^9, 3.7895047511066923`*^9, 3.789507044313387*^9, 
  3.789509400729945*^9, 3.78957842539712*^9, 3.789580034185409*^9, 
  3.789582745055152*^9, 3.7921660605627832`*^9, 3.792340098058792*^9, 
  3.792683002296257*^9, 3.792686051887701*^9, 3.792692714616746*^9, 
  3.792785493736081*^9, 3.7928617822396317`*^9, 3.793556346393609*^9, 
  3.809870554828761*^9, 3.8099136482415857`*^9, 3.809978641329907*^9, 
  3.810243336996542*^9, 3.8119498038945503`*^9, 3.811953884204733*^9, 
  3.811976742590242*^9, 3.8125510636870937`*^9, 3.8126627341165533`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"93d6afcb-0df8-4325-b8de-831ec0679051"],

Cell[BoxData["\<\"Table of number of replicates per mutant:\"\>"], "Print",
 CellChangeTimes->{3.788022507041448*^9, 3.7895029350377617`*^9, 
  3.789504601948354*^9, 3.789504751104619*^9, 3.789507044310809*^9, 
  3.789509400727818*^9, 3.789578425393136*^9, 3.789580034181404*^9, 
  3.78958274505101*^9, 3.792166060560877*^9, 3.7923400980565453`*^9, 
  3.792683002294223*^9, 3.792686051885133*^9, 3.792692714613566*^9, 
  3.792785493733824*^9, 3.792861782237385*^9, 3.793556346390751*^9, 
  3.809870554827407*^9, 3.809913648237224*^9, 3.809978641325468*^9, 
  3.810243336994829*^9, 3.811949803891944*^9, 3.8119538841978893`*^9, 
  3.811976742585429*^9, 3.812551063685347*^9, 3.8126627341475477`*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"b2ecc7a8-a17a-4b8e-9d96-1c42bd4b834c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "M501V" -> 1, "Q530G" -> 1, "S315V" -> 1, "S90V" -> 2, "S126V" -> 2, 
       "E229V" -> 2, "W503V" -> 2, "L67V" -> 2, "D257V" -> 2, "N460V" -> 2, 
       "N511V" -> 2, "P532V" -> 2, "L323V" -> 2, "F180V" -> 2, "V408A" -> 2, 
       "E238V" -> 2, "G354A" -> 2, "L346G" -> 2, "V235G" -> 2, "K244G" -> 2, 
       "T23G" -> 2, "N511G" -> 2, "L148G" -> 2, "V307G" -> 2, "R324G" -> 2, 
       "G263A" -> 2, "L221G" -> 2, "D291G" -> 2, "G504A" -> 2, "T84G" -> 2, 
       "Q226G" -> 2, "R406G" -> 2, "N68G" -> 2, "R47G" -> 2, "N300G" -> 2, 
       "G458A" -> 2, "K413G" -> 2, "E509G" -> 2, "H357G" -> 2, "G312V" -> 2, 
       "P76V" -> 2, "N300V" -> 2, "G458V" -> 2, "I540G" -> 2, "N68V" -> 2, 
       "F204G" -> 2, "S445V" -> 3, "V536A" -> 3, "D291V" -> 3, "L45V" -> 3, 
       "T141V" -> 3, "Q386V" -> 3, "E449V" -> 3, "T191V" -> 3, "G55V" -> 3, 
       "W42V" -> 3, "V32A" -> 3, "H495V" -> 3, "V523A" -> 3, "T439V" -> 3, 
       "H515V" -> 3, "D375V" -> 3, "G389V" -> 3, "I283V" -> 3, "L409V" -> 3, 
       "H83V" -> 3, "K58V" -> 3, "V340A" -> 3, "G474V" -> 3, "T294V" -> 3, 
       "E106V" -> 3, "V299A" -> 3, "A390V" -> 3, "P431V" -> 3, "D292V" -> 3, 
       "V235A" -> 3, "N286V" -> 3, "F57V" -> 3, "D440V" -> 3, "E379V" -> 3, 
       "D104V" -> 3, "L254V" -> 3, "I442V" -> 3, "G343A" -> 3, "Q386G" -> 3, 
       "V423G" -> 3, "A351G" -> 3, "I469G" -> 3, "V78G" -> 3, "D295G" -> 3, 
       "T485G" -> 3, "T191G" -> 3, "L137G" -> 3, "S315G" -> 3, "E319G" -> 3, 
       "Y227G" -> 3, "N225G" -> 3, "D405G" -> 3, "Y345G" -> 3, "A382G" -> 3, 
       "D257G" -> 3, "G534A" -> 3, "A149G" -> 3, "H309G" -> 3, "V32G" -> 3, 
       "T541G" -> 3, "S358G" -> 3, "I393G" -> 3, "T267G" -> 3, "V408G" -> 3, 
       "G312A" -> 3, "G239A" -> 3, "P121G" -> 3, "Y479G" -> 3, "A255G" -> 3, 
       "K428G" -> 3, "G55A" -> 3, "E542G" -> 3, "G130A" -> 3, "A98G" -> 3, 
       "A211G" -> 3, "E444G" -> 3, "K338G" -> 3, "L323G" -> 3, "T273G" -> 3, 
       "N206G" -> 3, "M60G" -> 3, "A302G" -> 3, "K429G" -> 3, "R420G" -> 3, 
       "K256G" -> 3, "F531G" -> 3, "F152G" -> 3, "G158A" -> 3, "V436G" -> 3, 
       "T294G" -> 3, "T246G" -> 3, "A282G" -> 3, "S445G" -> 3, "A302V" -> 3, 
       "G537A" -> 3, "V299G" -> 3, "S160G" -> 3, "S93V" -> 3, "I283G" -> 3, 
       "S350G" -> 3, "I451G" -> 3, "F187G" -> 3, "D233V" -> 4, "I469V" -> 4, 
       "S438V" -> 4, "A215V" -> 4, "T252V" -> 4, "V359A" -> 4, "K378V" -> 4, 
       "P198V" -> 4, "A25V" -> 4, "S471V" -> 4, "A520V" -> 4, "N334V" -> 4, 
       "Y49V" -> 4, "N151V" -> 4, "Y459V" -> 4, "Y403V" -> 4, "L148V" -> 4, 
       "K481V" -> 4, "N314V" -> 4, "M398V" -> 4, "G53V" -> 4, "R324V" -> 4, 
       "L276V" -> 4, "G483V" -> 4, "G123V" -> 4, "K429V" -> 4, "E236V" -> 4, 
       "S303V" -> 4, "K339V" -> 4, "N381V" -> 4, "V488A" -> 4, "T88V" -> 4, 
       "H353V" -> 4, "S128V" -> 4, "Y422V" -> 4, "E319V" -> 4, "T484V" -> 4, 
       "F187V" -> 4, "S154V" -> 4, "N24V" -> 4, "L221V" -> 4, "V433A" -> 4, 
       "S231V" -> 4, "K22V" -> 4, "V201A" -> 4, "V156A" -> 4, "L301V" -> 4, 
       "H71V" -> 4, "I470V" -> 4, "S50V" -> 4, "N272V" -> 4, "Y251V" -> 4, 
       "I188V" -> 4, "S480V" -> 4, "T77V" -> 4, "G176V" -> 4, "F296V" -> 4, 
       "D328V" -> 4, "A281V" -> 4, "A478V" -> 4, "N202V" -> 4, "T125V" -> 4, 
       "E232V" -> 4, "D182V" -> 4, "R28V" -> 4, "L264V" -> 4, "T153V" -> 4, 
       "D421V" -> 4, "L213V" -> 4, "D253V" -> 4, "V347A" -> 4, "T321V" -> 4, 
       "N208V" -> 4, "V122A" -> 4, "L346V" -> 4, "S453V" -> 4, "K109V" -> 4, 
       "W443V" -> 4, "S446V" -> 4, "V318A" -> 4, "F333V" -> 4, "I540V" -> 4, 
       "K506V" -> 4, "E542V" -> 4, "I72V" -> 4, "M60V" -> 4, "P539G" -> 4, 
       "T517G" -> 4, "G474A" -> 4, "I86G" -> 4, "V318G" -> 4, "G185A" -> 4, 
       "V33G" -> 4, "F404G" -> 4, "P269G" -> 4, "T150G" -> 4, "M398G" -> 4, 
       "D473G" -> 4, "D292G" -> 4, "V290G" -> 4, "L213G" -> 4, "K383G" -> 4, 
       "S90G" -> 4, "H95G" -> 4, "L499G" -> 4, "V75G" -> 4, "D411G" -> 4, 
       "R546G" -> 4, "N392G" -> 4, "A520G" -> 4, "L437G" -> 4, "S231G" -> 4, 
       "T298G" -> 4, "G96A" -> 4, "R28G" -> 4, "A80G" -> 4, "D328G" -> 4, 
       "Q363G" -> 4, "E449G" -> 4, "T184G" -> 4, "P198G" -> 4, "S432G" -> 4, 
       "F311G" -> 4, "E236G" -> 4, "T369G" -> 4, "V37G" -> 4, "H132G" -> 4, 
       "G108A" -> 4, "F87G" -> 4, "A279G" -> 4, "Y49G" -> 4, "T220G" -> 4, 
       "S491G" -> 4, "L264G" -> 4, "V373G" -> 4, "K199G" -> 4, "G502A" -> 4, 
       "L67G" -> 4, "T77G" -> 4, "Q507G" -> 4, "H71G" -> 4, "V159G" -> 4, 
       "A330G" -> 4, "T141G" -> 4, "Y44G" -> 4, "L384G" -> 4, "V543G" -> 4, 
       "P521G" -> 4, "T183G" -> 4, "V156G" -> 4, "S154G" -> 4, "A281G" -> 4, 
       "K155G" -> 4, "V419G" -> 4, "T248G" -> 4, "G545A" -> 4, "I224G" -> 4, 
       "H365G" -> 4, "T140G" -> 4, "P532G" -> 4, "G360A" -> 4, "M376G" -> 4, 
       "P431G" -> 4, "M424G" -> 4, "N314G" -> 4, "I316G" -> 4, "E374G" -> 4, 
       "S93G" -> 4, "T484G" -> 4, "E259G" -> 4, "D421G" -> 4, "K109G" -> 4, 
       "K472G" -> 4, "L416G" -> 4, "Q212G" -> 4, "A260G" -> 4, "Y258G" -> 4, 
       "D466G" -> 4, "V119G" -> 4, "S85G" -> 4, "S303G" -> 4, "D518G" -> 4, 
       "G271A" -> 4, "E117G" -> 4, "G147A" -> 4, "G89A" -> 4, "A215G" -> 4, 
       "K377G" -> 4, "S453G" -> 4, "V111G" -> 4, "P513G" -> 4, "L254G" -> 4, 
       "G242A" -> 4, "S480G" -> 4, "N490G" -> 4, "S139G" -> 4, "G285A" -> 4, 
       "E196G" -> 4, "T252G" -> 4, "N381G" -> 4, "T175G" -> 4, "R327G" -> 4, 
       "N202G" -> 4, "W503G" -> 4, "S510G" -> 4, "E54G" -> 4, "D104G" -> 4, 
       "K538G" -> 4, "Y403G" -> 4, "N399G" -> 4, "T63G" -> 4, "N344G" -> 4, 
       "D280G" -> 4, "G308A" -> 4, "L61G" -> 4, "N62G" -> 4, "V209G" -> 4, 
       "A170G" -> 4, "C113G" -> 4, "N136G" -> 4, "K58G" -> 4, "I544G" -> 4, 
       "Q277G" -> 4, "T88G" -> 4, "A396G" -> 4, "N24G" -> 4, "G56A" -> 4, 
       "N272G" -> 4, "K342G" -> 4, "Q21G" -> 4, "K339G" -> 4, "K262G" -> 4, 
       "D331G" -> 4, "I81G" -> 4, "N457G" -> 4, "S471G" -> 4, "D440G" -> 4, 
       "N219G" -> 4, "S494G" -> 4, "P497G" -> 4, "S446G" -> 4, "L45G" -> 4, 
       "K30G" -> 4, "D163G" -> 4, "T125G" -> 4, "D253G" -> 4, "R135G" -> 4, 
       "A390G" -> 4, "Y65G" -> 4, "M40G" -> 4, "A395G" -> 4, "Q287G" -> 4, 
       "M362G" -> 4, "S166G" -> 4, "G389A" -> 4, "K186G" -> 4, "P210G" -> 4, 
       "W42G" -> 4, "D101G" -> 4, "K105G" -> 4, "F388G" -> 4, "G341A" -> 4, 
       "K407G" -> 4, "N208G" -> 4, "S115G" -> 4, "S133G" -> 4, "T321G" -> 4, 
       "F372G" -> 4, "Q120G" -> 4, "L197G" -> 4, "Q145G" -> 4, "Q468G" -> 4, 
       "S438G" -> 4, "V129G" -> 4, "V359G" -> 4, "V214G" -> 4, "D375G" -> 4, 
       "V402G" -> 4, "K482G" -> 4, "K207G" -> 4, "T194G" -> 4, "Y46G" -> 4, 
       "D391G" -> 4, "N286G" -> 4, "V488G" -> 4, "L414G" -> 4, "P313G" -> 4, 
       "S243G" -> 4, "G370A" -> 4, "E426G" -> 4, "T124G" -> 4, "K22G" -> 4, 
       "Y422G" -> 4, "T153G" -> 4, "D417G" -> 4, "A355G" -> 4, "A165G" -> 4, 
       "S128G" -> 4, "K195G" -> 4, "Q131G" -> 4, "G34A" -> 4, "H515G" -> 4, 
       "K462G" -> 4, "N216G" -> 4, "I293G" -> 4, "S110G" -> 4, "K385G" -> 4, 
       "S524G" -> 4, "T143G" -> 4, "G99A" -> 4, "N335G" -> 4, "E441G" -> 4, 
       "K378G" -> 4, "N234G" -> 4, "M516G" -> 4, "E379G" -> 4, "K481G" -> 4, 
       "A535G" -> 4, "R41G" -> 4, "Q401G" -> 4, "K506G" -> 4, "D352G" -> 4, 
       "S533G" -> 4, "S126G" -> 4, "A410G" -> 4, "N310G" -> 4, "L240G" -> 4, 
       "A25G" -> 4, "K261G" -> 4, "A177G" -> 4, "L222G" -> 4, "T118G" -> 4, 
       "N334G" -> 4, "A478G" -> 4, "Y492G" -> 4, "W461G" -> 4, "F371G" -> 4, 
       "D73G" -> 4, "L107G" -> 4, "P247G" -> 4, "W443G" -> 4, "N127G" -> 4, 
       "N69G" -> 4, "G508A" -> 4, "E232G" -> 4, "S190G" -> 4, "S66G" -> 4, 
       "E106G" -> 4, "K387G" -> 4, "Q512G" -> 4, "S412G" -> 4, "A356G" -> 4, 
       "P450G" -> 4, "K245G" -> 4, "P223G" -> 4, "S464G" -> 4, "P27G" -> 4, 
       "G171A" -> 4, "A397G" -> 4, "G289A" -> 4, "G123A" -> 4, "D418G" -> 4, 
       "Y435G" -> 4, "R164V" -> 4, "G130V" -> 4, "P368G" -> 4, "L274G" -> 4, 
       "D163V" -> 4, "T522G" -> 4, "M40V" -> 4, "V70G" -> 4, "E317V" -> 4, 
       "I265G" -> 4, "T522V" -> 4, "F296G" -> 4, "N173G" -> 4, "E415G" -> 4, 
       "F87V" -> 5, "P169V" -> 5, "L384V" -> 5, "I167V" -> 5, "N219V" -> 5, 
       "R463V" -> 5, "P247V" -> 5, "W138V" -> 5, "F531V" -> 5, "M376V" -> 5, 
       "F152V" -> 5, "T485V" -> 5, "N335V" -> 5, "A260V" -> 5, "T298V" -> 5, 
       "F500V" -> 5, "T140V" -> 5, "G534V" -> 5, "K472V" -> 5, "I447V" -> 5, 
       "I316V" -> 5, "P29V" -> 5, "I81V" -> 5, "Q287V" -> 5, "G242V" -> 5, 
       "S358V" -> 5, "F404V" -> 5, "K462V" -> 5, "Q401V" -> 5, "Y475V" -> 5, 
       "V423A" -> 5, "A395V" -> 5, "E374V" -> 5, "T228V" -> 5, "H365V" -> 5, 
       "L349V" -> 5, "C113V" -> 5, "G217V" -> 5, "K482V" -> 5, "P210V" -> 5, 
       "V119A" -> 5, "G343V" -> 5, "I529V" -> 5, "L526V" -> 5, "K377V" -> 5, 
       "Y258V" -> 5, "G271V" -> 5, "Y227V" -> 5, "T118V" -> 5, "Y514V" -> 5, 
       "M380V" -> 5, "S139V" -> 5, "L325V" -> 5, "N136V" -> 5, "T183V" -> 5, 
       "S166V" -> 5, "H95V" -> 5, "K528V" -> 5, "R327V" -> 5, "D331V" -> 5, 
       "S525V" -> 5, "L168V" -> 5, "Q145V" -> 5, "A170V" -> 5, "D418V" -> 5, 
       "T184V" -> 5, "K538V" -> 5, "R47V" -> 5, "T425V" -> 5, "V36A" -> 5, 
       "P250V" -> 5, "V26A" -> 5, "L146V" -> 5, "I265V" -> 5, "G504V" -> 5, 
       "T248V" -> 5, "I519V" -> 5, "V129A" -> 5, "T369V" -> 5, "L499V" -> 5, 
       "G239V" -> 5, "N234V" -> 5, "K199V" -> 5, "I544V" -> 5, "P521V" -> 5, 
       "Q277V" -> 5, "E430V" -> 5, "K261V" -> 5, "F371V" -> 5, "P269V" -> 5, 
       "Q507V" -> 5, "V37A" -> 5, "S110V" -> 5, "Y322V" -> 5, "D203V" -> 5, 
       "A382V" -> 5, "V543A" -> 5, "S524V" -> 5, "E117V" -> 5, "E259V" -> 5, 
       "A396V" -> 5, "P27V" -> 5, "V70A" -> 5, "V209A" -> 5, "K51V" -> 5, 
       "G263V" -> 5, "P313V" -> 5, "V436A" -> 5, "T23V" -> 5, "I86V" -> 5, 
       "R41V" -> 5, "L241V" -> 5, "E415V" -> 5, "K105V" -> 5, "Y44V" -> 5, 
       "N62V" -> 5, "G158V" -> 5, "I442G" -> 5, "I470G" -> 5, "Y475G" -> 5, 
       "Y435V" -> 5, "I94G" -> 5, "N457V" -> 5, "G217A" -> 5, "D43G" -> 5, 
       "D43V" -> 5, "V36G" -> 5, "E430G" -> 5, "P29G" -> 5, "L276G" -> 5, 
       "R164G" -> 5, "N100G" -> 5, "L409G" -> 5, "F270G" -> 5, "T150V" -> 6, 
       "I394V" -> 6, "V373A" -> 6, "F311V" -> 6, "K244V" -> 6, "P539V" -> 6, 
       "V307A" -> 6, "T273V" -> 6, "A211V" -> 6, "N344V" -> 6, "N173V" -> 6, 
       "E444V" -> 6, "Q21V" -> 6, "L498V" -> 6, "D284V" -> 6, "M424V" -> 6, 
       "P223V" -> 6, "F249V" -> 6, "I505V" -> 6, "I467V" -> 6, "N310V" -> 6, 
       "L414V" -> 6, "F348V" -> 6, "V455A" -> 6, "D391V" -> 6, "I97V" -> 6, 
       "A355V" -> 6, "F270V" -> 6, "A149V" -> 6, "S477V" -> 6, "S115V" -> 6, 
       "M516V" -> 6, "Q212V" -> 6, "S487V" -> 6, "A279V" -> 6, "K413V" -> 6, 
       "L329V" -> 6, "I293V" -> 6, "V33A" -> 6, "M278V" -> 6, "Y103V" -> 6, 
       "G108V" -> 6, "Y345V" -> 6, "K407V" -> 6, "F178V" -> 6, "P134V" -> 6, 
       "A364V" -> 6, "K342V" -> 6, "K387V" -> 6, "L274V" -> 6, "A410V" -> 6, 
       "K195V" -> 6, "Y400V" -> 6, "K338V" -> 6, "K155V" -> 6, "G147V" -> 6, 
       "H172V" -> 6, "T267V" -> 6, "E196V" -> 6, "L476V" -> 6, "S491V" -> 6, 
       "F388V" -> 6, "V402A" -> 6, "K385V" -> 6, "Q363V" -> 6, "D417V" -> 6, 
       "M367V" -> 6, "V419A" -> 6, "S230V" -> 6, "T220V" -> 6, "A535V" -> 6, 
       "R546V" -> 6, "D493V" -> 6, "L427V" -> 6, "K245V" -> 6, "I496V" -> 6, 
       "G545V" -> 6, "T143V" -> 6, "A330V" -> 6, "L107V" -> 6, "I94V" -> 6, 
       "E509V" -> 6, "T124V" -> 6, "N127V" -> 6, "S412V" -> 6, "A98V" -> 6, 
       "R406V" -> 6, "Y46V" -> 6, "T246V" -> 6, "F372V" -> 6, "S243V" -> 6, 
       "Y65V" -> 6, "T275V" -> 6, "K186V" -> 6, "E426V" -> 6, "L137V" -> 6, 
       "K262V" -> 6, "T114V" -> 6, "L336V" -> 6, "V157A" -> 6, "Q512V" -> 6, 
       "K30V" -> 6, "P450V" -> 6, "H357V" -> 6, "E54V" -> 6, "Q468V" -> 6, 
       "S350V" -> 6, "P368V" -> 6, "L31V" -> 6, "R135V" -> 6, "R420V" -> 6, 
       "T63V" -> 6, "L297V" -> 6, "T541V" -> 6, "V111A" -> 6, "W218V" -> 6, 
       "P92G" -> 6, "D493G" -> 6, "D182G" -> 6, "R454G" -> 6, "W102V" -> 6, 
       "G82A" -> 6, "I519G" -> 6, "K528G" -> 6, "P174V" -> 6, "Y52G" -> 6, 
       "Y112V" -> 6, "P448G" -> 6, "A80V" -> 6, "Y48G" -> 6, "E229G" -> 6, 
       "K383V" -> 7, "A397V" -> 7, "N225V" -> 7, "I224V" -> 7, "A177V" -> 7, 
       "T439G" -> 7, "D320G" -> 7, "I72G" -> 7, "M278G" -> 7, "F249G" -> 7, 
       "H83G" -> 7, "D233G" -> 7, "V91G" -> 7, "G508V" -> 7, "D73V" -> 7, 
       "W138G" -> 7, "V142G" -> 7, "D295V" -> 7, "L161G" -> 7, "G285V" -> 8, 
       "Y492V" -> 8, "T194V" -> 8, "K207V" -> 8, "D284G" -> 8, "W489G" -> 8, 
       "Y251G" -> 8, "N151G" -> 8, "T275G" -> 8, "L349G" -> 8, "M380G" -> 8, 
       "Y103G" -> 8, "M367G" -> 8, "V340G" -> 8, "L476G" -> 8, "M288G" -> 8, 
       "I467G" -> 8, "L527G" -> 8, "R454V" -> 8, "I529G" -> 8, "Y112G" -> 8, 
       "I505G" -> 8, "L301G" -> 8, "L61V" -> 9, "Y479V" -> 9, "T304V" -> 9, 
       "S66V" -> 9, "L527V" -> 9, "G308V" -> 9, "Y52V" -> 9, "Y74V" -> 9, 
       "E441V" -> 9, "W237G" -> 9, "F361G" -> 9, "S477G" -> 9, "Q39G" -> 9, 
       "V433G" -> 9, "L325G" -> 9, "I451V" -> 10, "L240V" -> 10, "V214A" -> 
       10, "N490V" -> 10, "Q120V" -> 10, "L197V" -> 10, "W461V" -> 10, 
       "Q530V" -> 10, "V290A" -> 10, "L161V" -> 10, "D280V" -> 10, "D101V" -> 
       10, "S494V" -> 10, "L168G" -> 10, "E317G" -> 10, "F180G" -> 10, 
       "F348G" -> 10, "V201G" -> 10, "R59G" -> 10, "V455G" -> 10, "D337G" -> 
       10, "Y74G" -> 10, "L434G" -> 10, "T189G" -> 10, "P174G" -> 10, "Y514G" -> 
       10, "L526G" -> 10, "G483A" -> 10, "P134G" -> 10, "R463G" -> 10, 
       "W218G" -> 10, "K452G" -> 10, "E238G" -> 10, "D181G" -> 10, "T175V" -> 
       11, "L35V" -> 11, "K428V" -> 11, "A255V" -> 11, "T517V" -> 11, "S432V" -> 
       11, "V142A" -> 11, "Q226V" -> 11, "L437V" -> 11, "P121V" -> 11, 
       "L222V" -> 11, "G64A" -> 11, "L241G" -> 11, "D144G" -> 11, "I456G" -> 
       11, "P169G" -> 11, "V122G" -> 11, "Y306G" -> 11, "M501G" -> 11, 
       "L146G" -> 11, "G370V" -> 11, "I456V" -> 12, "T268V" -> 12, "N392V" -> 
       12, "G360V" -> 12, "A356V" -> 12, "A282V" -> 12, "V157G" -> 12, 
       "G465A" -> 12, "K256V" -> 12, "V159A" -> 13, "N206V" -> 14, "K366V" -> 
       15, "D411V" -> 16, "P513V" -> 16, "D473V" -> 16, "S85V" -> 16, "V78A" -> 
       17, "R266V" -> 17, "M362V" -> 18, "D320V" -> 18, "W200V" -> 18, 
       "N216V" -> 18, "D337V" -> 18, "Y193V" -> 19, "K51G" -> 19, "D466V" -> 
       20, "S510V" -> 20, "D405V" -> 21, "D181V" -> 22, "L434V" -> 23, 
       "G185V" -> 23, "N205V" -> 24, "N399V" -> 24, "F332V" -> 25, "W489V" -> 
       25, "T228G" -> 25, "L416V" -> 26, "P250G" -> 26, "F361V" -> 28, 
       "A351V" -> 29, "K452V" -> 29, "V26G" -> 30, "R59V" -> 30, "G341V" -> 
       30, "Y306V" -> 32], "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[48.00000000000001], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 947], "Meta" -> 
     Association["ID" -> 6019341045883486], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[48.00000000000001], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 947], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     947, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["M501V", 
                  Style[
                  "M501V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["M501V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["M501V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["M501V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Q530G", 
                  Style[
                  "Q530G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Q530G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Q530G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Q530G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["S315V", 
                  Style[
                  "S315V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["S315V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["S315V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["S315V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["S90V", 
                  Style[
                  "S90V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["S90V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["S90V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["S90V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["S126V", 
                  Style[
                  "S126V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["S126V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["S126V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["S126V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["E229V", 
                  Style[
                  "E229V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["E229V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["E229V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["E229V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["W503V", 
                  Style[
                  "W503V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["W503V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["W503V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["W503V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["L67V", 
                  Style[
                  "L67V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["L67V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["L67V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["L67V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["D257V", 
                  Style[
                  "D257V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["D257V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["D257V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["D257V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["N460V", 
                  Style[
                  "N460V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["N460V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["N460V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["N460V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["N511V", 
                  Style[
                  "N511V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["N511V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["N511V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["N511V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["P532V", 
                  Style[
                  "P532V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["P532V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P532V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P532V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["L323V", 
                  Style[
                  "L323V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["L323V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["L323V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["L323V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["F180V", 
                  Style[
                  "F180V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["F180V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["F180V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["F180V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["V408A", 
                  Style[
                  "V408A", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["V408A"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["V408A"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["V408A"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["E238V", 
                  Style[
                  "E238V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["E238V"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["E238V"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["E238V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["G354A", 
                  Style[
                  "G354A", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["G354A"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["G354A"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["G354A"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["L346G", 
                  Style[
                  "L346G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["L346G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["L346G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["L346G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["V235G", 
                  Style[
                  "V235G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["V235G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["V235G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["V235G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["K244G", 
                  Style[
                  "K244G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["K244G"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["K244G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["K244G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 947, 1], {1, 947 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 947, 1], {1, 947 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    947, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    947, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 947, 1], {1, 947 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 947, 1], {1, 947 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{201., {275.634033203125, 281.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{201., {275.634033203125, 281.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.78802250709409*^9, 3.789502935040195*^9, 
  3.7895046019506187`*^9, 3.7895047511066923`*^9, 3.789507044313387*^9, 
  3.789509400729945*^9, 3.78957842539712*^9, 3.789580034185409*^9, 
  3.789582745055152*^9, 3.7921660605627832`*^9, 3.792340098058792*^9, 
  3.792683002296257*^9, 3.792686051887701*^9, 3.792692714616746*^9, 
  3.792785493736081*^9, 3.7928617822396317`*^9, 3.793556346393609*^9, 
  3.809870554828761*^9, 3.8099136482415857`*^9, 3.809978641329907*^9, 
  3.810243336996542*^9, 3.8119498038945503`*^9, 3.811953884204733*^9, 
  3.811976742590242*^9, 3.8125510636870937`*^9, 3.812662734201769*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"af00c1f5-eb76-4ed9-a6a7-968f86969739"],

Cell[BoxData["\<\"Mean number of replicates per mutant:\"\>"], "Print",
 CellChangeTimes->{3.788022507041448*^9, 3.7895029350377617`*^9, 
  3.789504601948354*^9, 3.789504751104619*^9, 3.789507044310809*^9, 
  3.789509400727818*^9, 3.789578425393136*^9, 3.789580034181404*^9, 
  3.78958274505101*^9, 3.792166060560877*^9, 3.7923400980565453`*^9, 
  3.792683002294223*^9, 3.792686051885133*^9, 3.792692714613566*^9, 
  3.792785493733824*^9, 3.792861782237385*^9, 3.793556346390751*^9, 
  3.809870554827407*^9, 3.809913648237224*^9, 3.809978641325468*^9, 
  3.810243336994829*^9, 3.811949803891944*^9, 3.8119538841978893`*^9, 
  3.811976742585429*^9, 3.812551063685347*^9, 3.81266273439056*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"70f99d52-ca53-4a10-af94-476791f4bf83"],

Cell[BoxData["5.564941921858501`"], "Output",
 CellChangeTimes->{3.78802250709409*^9, 3.789502935040195*^9, 
  3.7895046019506187`*^9, 3.7895047511066923`*^9, 3.789507044313387*^9, 
  3.789509400729945*^9, 3.78957842539712*^9, 3.789580034185409*^9, 
  3.789582745055152*^9, 3.7921660605627832`*^9, 3.792340098058792*^9, 
  3.792683002296257*^9, 3.792686051887701*^9, 3.792692714616746*^9, 
  3.792785493736081*^9, 3.7928617822396317`*^9, 3.793556346393609*^9, 
  3.809870554828761*^9, 3.8099136482415857`*^9, 3.809978641329907*^9, 
  3.810243336996542*^9, 3.8119498038945503`*^9, 3.811953884204733*^9, 
  3.811976742590242*^9, 3.8125510636870937`*^9, 3.812662734391672*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"0efd8775-5237-421d-ab31-cb397c5304a7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Input parameters:", "Subsubsection",
 CellChangeTimes->{{3.743259241901544*^9, 
  3.743259245355948*^9}},ExpressionUUID->"8bb6935a-4c26-40e5-973b-\
08813908dea9"],

Cell["\<\
Parameters below define which \"keys\" we're interested in using and \
aggregating:\
\>", "Text",
 CellChangeTimes->{{3.7734988174210043`*^9, 
  3.773498830695343*^9}},ExpressionUUID->"ab11eaff-86e5-476b-80dc-\
96377aa06615"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"kcatKmKey", "=", "\"\<kcat/Km\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kcatKey", "=", "\"\<kcat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KmKey", "=", "\"\<Km\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kcatUncorrected", "=", "\"\<kcat\>\""}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"VmaxKey", "=", "\"\<VmaxMMfit optlin PerPointScaled\>\""}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"scaleFactorKey", "=", "\"\<ScaleFactor\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numStatsBootstraps", "=", "10000"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numBootstraps", "=", "5"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"KiFitCutoff", "=", "10000.0"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kcatFitCutoff", "=", "10000.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KmCutoff", "=", "10000.0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.743285352857889*^9, 3.743285357396597*^9}, {
   3.743295059403613*^9, 3.7432950633941593`*^9}, {3.743296421781231*^9, 
   3.7432964234087467`*^9}, {3.743353323083349*^9, 3.743353323411903*^9}, {
   3.743371281491371*^9, 3.743371286575852*^9}, {3.7433926289227333`*^9, 
   3.74339266015351*^9}, {3.743392793848579*^9, 3.743392813626515*^9}, {
   3.743392846264867*^9, 3.74339294099615*^9}, {3.7434297368683987`*^9, 
   3.7434297485675507`*^9}, {3.743431080301713*^9, 3.7434310836588182`*^9}, {
   3.746840446689534*^9, 3.746840465238015*^9}, {3.7470676204870443`*^9, 
   3.747067651076132*^9}, 3.7522620131065893`*^9, 3.7522620924061613`*^9, 
   3.7522838478705*^9, 3.753048262377254*^9, {3.753135422285384*^9, 
   3.753135422421919*^9}, {3.764285990511806*^9, 3.764285993730486*^9}, 
   3.764286145785037*^9, {3.773771424574082*^9, 3.773771425100422*^9}, {
   3.7737714893837137`*^9, 3.773771489968657*^9}, {3.7737722206866407`*^9, 
   3.773772263850772*^9}, {3.7741999055743523`*^9, 3.774199919424111*^9}, {
   3.774636223530949*^9, 3.7746362248778267`*^9}, {3.774799764369191*^9, 
   3.774799776939152*^9}, {3.774833685210968*^9, 3.774833687818438*^9}, {
   3.774916774230178*^9, 3.774916776046998*^9}, 3.775588375510785*^9, {
   3.779804320789837*^9, 3.7798043268632708`*^9}, {3.7809648677155247`*^9, 
   3.780964871829455*^9}, {3.7895032613924923`*^9, 3.789503262992187*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"841f0066-b8fd-44ff-b35c-e9d95fd220d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["On-chip expression folding times:", "Subsubsection",
 CellChangeTimes->{{3.774636227675187*^9, 
  3.774636243036778*^9}},ExpressionUUID->"dc717689-22d6-42c4-ace3-\
04f2e82310b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"foldingTimes", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
    "\"\<180710_S3d1_PafA_GlyScan_cMUP_081118_chipCorrected\>\"", "\[Rule]", 
     "173.8"}], ",", 
    RowBox[{"\"\<190407_S3d1PafA_GlyScan_cMUP\>\"", "\[Rule]", "111.8"}], ",", 
    RowBox[{
    "\"\<180614_S3d1_PafA_GlyScan_cMUP_withEconc\>\"", "\[Rule]", "140.4"}], 
    ",", 
    RowBox[{
    "\"\<180614_S2d1_PafA_GlyScan_cMUP_withEconc\>\"", "\[Rule]", "130.3"}], 
    ",", 
    RowBox[{"\"\<190305_S3d1_PafA_GlyScan_cMUP\>\"", "\[Rule]", "111.8"}], 
    ",", 
    RowBox[{"\"\<181119_S2d2_PafA_GlyScan_cMUP\>\"", "\[Rule]", "72.1"}], ",", 
    RowBox[{"\"\<190205_S3d1_PafA_ValScan_cMUP\>\"", "\[Rule]", "55.9"}], ",", 
    RowBox[{"\"\<190630_S2d1PafA_cMUP_SlowChip\>\"", "\[Rule]", "90.4"}], ",", 
    RowBox[{"\"\<190609_S2d1PafA_cMUP_SlowChip\>\"", "\[Rule]", "94.3"}], ",", 
    RowBox[{"\"\<190424_S2d1PafA_cMUP_SlowChip\>\"", "\[Rule]", "103.3"}], 
    ",", 
    RowBox[{"\"\<190626_S2d1PafA_cMUP_SlowChip\>\"", "\[Rule]", "89.9"}], ",", 
    RowBox[{"\"\<190605_S2d1PafA_cMUP_SlowChip\>\"", "\[Rule]", "88.1"}], ",", 
    RowBox[{
    "\"\<180522_S3d2_PafA_ValScan_cMUP_pH8_180924_chipCorrected\>\"", 
     "\[Rule]", "\"\<N/A\>\""}], ",", 
    RowBox[{
    "\"\<180402_S4d3_PafA_ValScan_cMUP_180924_chipCorrected\>\"", "\[Rule]", 
     "80.4"}], ",", 
    RowBox[{
    "\"\<180302_S2d3_PafA_ValScan_cMUP_180924_chipCorrected\>\"", "\[Rule]", 
     "94.8"}], ",", 
    RowBox[{"\"\<180528_S3d1_PafA_ValScan_cMUP\>\"", "\[Rule]", "84.4"}], ",", 
    RowBox[{"\"\<180531_S2d1PafA_GlyScan_cMUP\>\"", "\[Rule]", "132.4"}], ",", 
    RowBox[{
    "\"\<180225_S2d2_PafA_ValScan_cMUP_180924_chipCorrected\>\"", "\[Rule]", 
     "88.2"}], ",", 
    RowBox[{"\"\<191128_S2d3PafA_SlowestChip.csv\>\"", "\[Rule]", "90.0"}]}], 
   "|>"}]}]], "Input",
 CellChangeTimes->{{3.784390932015402*^9, 3.7843909385761538`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"04993163-8cae-4248-a08c-c8a5e0dd41f9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"180710_S3d1_PafA_GlyScan_cMUP_081118_chipCorrected\"\>", 
    "\[Rule]", "173.8`"}], ",", 
   RowBox[{"\<\"190407_S3d1PafA_GlyScan_cMUP\"\>", "\[Rule]", "111.8`"}], ",", 
   RowBox[{"\<\"180614_S3d1_PafA_GlyScan_cMUP_withEconc\"\>", "\[Rule]", 
    "140.4`"}], ",", 
   RowBox[{"\<\"180614_S2d1_PafA_GlyScan_cMUP_withEconc\"\>", "\[Rule]", 
    "130.3`"}], ",", 
   RowBox[{"\<\"190305_S3d1_PafA_GlyScan_cMUP\"\>", "\[Rule]", "111.8`"}], 
   ",", 
   RowBox[{"\<\"181119_S2d2_PafA_GlyScan_cMUP\"\>", "\[Rule]", "72.1`"}], ",", 
   RowBox[{"\<\"190205_S3d1_PafA_ValScan_cMUP\"\>", "\[Rule]", "55.9`"}], ",", 
   RowBox[{"\<\"190630_S2d1PafA_cMUP_SlowChip\"\>", "\[Rule]", "90.4`"}], ",", 
   RowBox[{"\<\"190609_S2d1PafA_cMUP_SlowChip\"\>", "\[Rule]", "94.3`"}], ",", 
   RowBox[{"\<\"190424_S2d1PafA_cMUP_SlowChip\"\>", "\[Rule]", "103.3`"}], 
   ",", 
   RowBox[{"\<\"190626_S2d1PafA_cMUP_SlowChip\"\>", "\[Rule]", "89.9`"}], ",", 
   RowBox[{"\<\"190605_S2d1PafA_cMUP_SlowChip\"\>", "\[Rule]", "88.1`"}], ",", 
   RowBox[{"\<\"180522_S3d2_PafA_ValScan_cMUP_pH8_180924_chipCorrected\"\>", 
    "\[Rule]", "\<\"N/A\"\>"}], ",", 
   RowBox[{"\<\"180402_S4d3_PafA_ValScan_cMUP_180924_chipCorrected\"\>", 
    "\[Rule]", "80.4`"}], ",", 
   RowBox[{"\<\"180302_S2d3_PafA_ValScan_cMUP_180924_chipCorrected\"\>", 
    "\[Rule]", "94.8`"}], ",", 
   RowBox[{"\<\"180528_S3d1_PafA_ValScan_cMUP\"\>", "\[Rule]", "84.4`"}], ",", 
   RowBox[{"\<\"180531_S2d1PafA_GlyScan_cMUP\"\>", "\[Rule]", "132.4`"}], ",", 
   RowBox[{"\<\"180225_S2d2_PafA_ValScan_cMUP_180924_chipCorrected\"\>", 
    "\[Rule]", "88.2`"}], ",", 
   RowBox[{"\<\"191128_S2d3PafA_SlowestChip.csv\"\>", "\[Rule]", "90.`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.788022507430451*^9, 3.792340098449789*^9, 
  3.792785494624917*^9, 3.792861782600177*^9, 3.809870559478539*^9, 
  3.80991365187321*^9, 3.809978659177413*^9, 3.8102433414233093`*^9, 
  3.811950102028989*^9, 3.811953889999262*^9, 3.811976747387354*^9, 
  3.812551069941126*^9, 3.812662737760833*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"b9bc7eff-19a1-4288-b077-dd173f35fa53"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Normalization to internal WT parameters (kcat/Km):", "Subsubsection",
 CellChangeTimes->{{3.7432657657977343`*^9, 3.7432657737257137`*^9}, {
  3.752261750189596*^9, 3.752261754923951*^9}, {3.792161977137615*^9, 
  3.792161980980185*^9}},ExpressionUUID->"9f372d5f-5300-4b08-b860-\
be7df5f2eaef"],

Cell["\<\
Chip-to-chip differences, for example the intrinsic variability of flow \
through the device, or the length of time the enzyme has been sitting on the \
button, influence the fractional activity of enzyme mutants across the \
device. In the first example, increased wait times before beginning an assay \
result in some fraction of activity loss due to enzyme \"death\", while flow \
issues can influence the effectiveness of the SDS wash. In both these cases, \
the fitted kcat values will vary modestly between chips.

Given these known issues, we can normalize the kcat values from each \
experimental dataset based on the subset of WT mutants on each chip. This \
removes any systematic, global (on the experimental level).\
\>", "Text",
 CellChangeTimes->{{3.773498841248405*^9, 3.7734989489054813`*^9}, {
  3.7734989926069727`*^9, 3.773499130407359*^9}, {3.7735844831633787`*^9, 
  3.7735846320095453`*^9}, {3.778184946075869*^9, 
  3.778184948893056*^9}},ExpressionUUID->"d08e8ff2-448b-4711-a00e-\
f793db62dda2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"datasetsIn", "=", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Values", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{"groupedbyMutant", "[", 
         RowBox[{"All", ",", "All", ",", "\"\<UniqueExptID\>\""}], "]"}], 
        "]"}], "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"separate", " ", "fast", " ", "and", " ", 
    RowBox[{"slow", "/", "slowest"}], " ", "chips"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fastChips", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"datasetsIn", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"StringContainsQ", "[", 
        RowBox[{"#", ",", "\"\<Slow\>\""}], "]"}], "\[Equal]", "False"}], 
      "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"slowChips", "=", 
    RowBox[{"Select", "[", 
     RowBox[{"datasetsIn", ",", 
      RowBox[{
       RowBox[{"StringContainsQ", "[", 
        RowBox[{"#", ",", "\"\<Slow\>\""}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"groupedByExperimentWT", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"groupedbyMutant", "[", "\"\<WT\>\"", "]"}], "[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<UniqueExptID\>\"", ",", "kcatKmKey"}], "}"}]}], "]"}], 
    "[", 
    RowBox[{"GroupBy", "[", "\"\<UniqueExptID\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fast", "=", 
    RowBox[{"groupedByExperimentWT", "[", "fastChips", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"groupedByExperimentR164A", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"groupedbyMutant", "[", "\"\<T79S\>\"", "]"}], "[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<UniqueExptID\>\"", ",", "kcatKmKey"}], "}"}]}], "]"}], 
    "[", 
    RowBox[{"GroupBy", "[", "\"\<UniqueExptID\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"slowNorm", "=", 
    RowBox[{"groupedByExperimentR164A", "[", "slowChips", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<Below is the WT median for the fast chips only:\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtMedian", "=", 
   RowBox[{"Median", "[", 
    RowBox[{"(", 
     RowBox[{"Join", "@@", 
      RowBox[{"Values", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{"fast", "[", 
         RowBox[{"All", ",", "All", ",", "kcatKmKey"}], "]"}], "]"}], "]"}]}],
      ")"}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Below are the per-chip normalization factors based on the WT \
\!\(\*StyleBox[\"median\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\":\",\
FontWeight->\"Bold\"]\)\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normalizationDataFast", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"fastChips", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "\[Rule]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Median", "[", 
             RowBox[{"Normal", "[", 
              RowBox[{"fast", "[", 
               RowBox[{
                RowBox[{"fastChips", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], ",", "All", ",", 
                "kcatKmKey"}], "]"}], "]"}], "]"}], "/", "wtMedian"}], ")"}], 
          "]"}], ",", 
         RowBox[{
          RowBox[{"Median", "[", 
           RowBox[{"Normal", "[", 
            RowBox[{"fast", "[", 
             RowBox[{
              RowBox[{"fastChips", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", "All", ",", "kcatKmKey"}],
              "]"}], "]"}], "]"}], "/", "wtMedian"}], ",", "1.0"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "fastChips", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<Below is the R164A median for the slow chips only:\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r164aMedian", "=", 
   RowBox[{"Median", "[", 
    RowBox[{"(", 
     RowBox[{"Join", "@@", 
      RowBox[{"Values", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{"slowNorm", "[", 
         RowBox[{"All", ",", "All", ",", "kcatKmKey"}], "]"}], "]"}], "]"}]}],
      ")"}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Below are the per-chip normalization factors based on the R164A \
median:\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normalizationDataSlow", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"slowChips", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "\[Rule]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Median", "[", 
             RowBox[{"Normal", "[", 
              RowBox[{"slowNorm", "[", 
               RowBox[{
                RowBox[{"slowChips", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], ",", "All", ",", 
                "kcatKmKey"}], "]"}], "]"}], "]"}], "/", "r164aMedian"}], 
           ")"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Median", "[", 
           RowBox[{"Normal", "[", 
            RowBox[{"slowNorm", "[", 
             RowBox[{
              RowBox[{"slowChips", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", "All", ",", "kcatKmKey"}],
              "]"}], "]"}], "]"}], "/", "r164aMedian"}], ",", "1.0"}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "slowChips", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normalizationDataTemp", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"normalizationDataFast", ",", "normalizationDataSlow"}], "]"}]}],
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "apply", " ", "corrections", " ", "to", " ", "both", " ", "fast", " ", 
    "and", " ", "slow", " ", "datasets"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normed1", "=", 
    RowBox[{"culled", "[", 
     RowBox[{"All", ",", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"#", ",", 
         RowBox[{"\"\<kcat/Km_Norm1\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"#", "[", "\"\<kcat/Km\>\"", "]"}], "/", 
           RowBox[{"normalizationDataTemp", "[", "#UniqueExptID", "]"}]}]}]}],
         "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedByExperimentNorm1", "=", 
    RowBox[{"normed1", "[", 
     RowBox[{"GroupBy", "[", "\"\<UniqueExptID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tempGroupNorm1", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"groupedByExperimentNorm1", "[", "n", "]"}], "[", 
       RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "groupedByExperimentNorm1", "]"}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"afterNorm1", "=", 
    RowBox[{"DistributionChart", "[", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Normal", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tempGroupNorm1", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<WT\>\"", "]"}], 
               "[", 
               RowBox[{"All", ",", "\"\<kcat/Km_Norm1\>\""}], "]"}], "]"}]}], 
            "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Normal", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tempGroupNorm1", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<R164A\>\"", "]"}], 
               "[", 
               RowBox[{"All", ",", "\"\<kcat/Km_Norm1\>\""}], "]"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Normal", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tempGroupNorm1", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<T79S\>\"", "]"}], 
               "[", 
               RowBox[{"All", ",", "\"\<kcat/Km_Norm1\>\""}], "]"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Normal", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tempGroupNorm1", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<N100A\>\"", "]"}], 
               "[", 
               RowBox[{"All", ",", "\"\<kcat/Km_Norm1\>\""}], "]"}], "]"}]}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", 
           RowBox[{"Length", "[", "tempGroupNorm1", "]"}]}], "}"}]}], "]"}]}],
       ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.4"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"16", ",", "Black", ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
      RowBox[{"BarSpacing", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0.2", ",", "5"}], "}"}]}], ",", 
      RowBox[{"ChartStyle", "\[Rule]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"groupedByExperimentNorm1", "[", 
             RowBox[{"n", ",", "1", ",", "\"\<ChipType\>\""}], "]"}], 
            "\[NotEqual]", "\"\<SlowChip\>\""}], ",", 
           RowBox[{"ColorData", "[", 
            RowBox[{"24", ",", 
             RowBox[{"n", "/", "2"}]}], "]"}], ",", 
           RowBox[{"GrayLevel", "[", 
            RowBox[{"n", "/", "18"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", 
           RowBox[{"Length", "[", "groupedByExperimentNorm1", "]"}]}], 
          "}"}]}], "]"}]}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<WT\>\"", ",", "\"\<R164A\>\"", ",", "\"\<T79S\>\"", ",", 
           "\"\<N100A\>\""}], "}"}], ",", "None"}], "}"}]}], ",", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"2", ",", 
           RowBox[{"{", 
            RowBox[{"373.2", ",", "5.3", ",", "0.955", ",", "0.8125"}], 
            "}"}]}], "]"}]}], "}"}]}], ",", 
      RowBox[{"GridLinesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Darker", "[", "Red", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "now", " ", "normalize", " ", "fast", " ", "and", " ", "slow", " ", 
    "using", " ", "R164A", " ", 
    RowBox[{"(", 
     RowBox[{"all", " ", "fast", " ", 
      RowBox[{"vs", ".", " ", "all"}], " ", "slow"}], " "}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"fastMedian", "=", 
  RowBox[{"Median", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"normed1", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowChip\>\""}], "&"}], 
        "]"}], "]"}], "[", 
      RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}], "[", 
     "\"\<T79S\>\"", "]"}], "[", 
    RowBox[{"All", ",", "\"\<kcat/Km_Norm1\>\""}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"slowMedian", "=", 
   RowBox[{"Median", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"normed1", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"#ChipType", "==", "\"\<SlowChip\>\""}], "&"}], "]"}], 
        "]"}], "[", 
       RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}], "[", 
      "\"\<T79S\>\"", "]"}], "[", 
     RowBox[{"All", ",", "\"\<kcat/Km_Norm1\>\""}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"secondCorr", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<SlowChip\>\"", "\[Rule]", 
      RowBox[{"slowMedian", "/", 
       RowBox[{"(", 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{"fastMedian", ",", "slowMedian"}], "}"}], "]"}], ")"}]}]}], 
     ",", 
     RowBox[{"\"\<SlowestChip\>\"", "\[Rule]", 
      RowBox[{"slowMedian", "/", 
       RowBox[{"(", 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{"fastMedian", ",", "slowMedian"}], "}"}], "]"}], ")"}]}]}], 
     ",", 
     RowBox[{"\"\<ValScan\>\"", "\[Rule]", 
      RowBox[{"fastMedian", "/", 
       RowBox[{"(", 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{"fastMedian", ",", "slowMedian"}], "}"}], "]"}], ")"}]}]}], 
     ",", 
     RowBox[{"\"\<GlyScan\>\"", "\[Rule]", 
      RowBox[{"fastMedian", "/", 
       RowBox[{"(", 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{"fastMedian", ",", "slowMedian"}], "}"}], "]"}], 
        ")"}]}]}]}], "|>"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"apply", " ", "second", " ", 
    RowBox[{"(", 
     RowBox[{"R164A", " ", 
      RowBox[{"fast", "/", "slow"}]}], ")"}], " ", "normalization", " ", "to",
     " ", "both", " ", "fast", " ", "and", " ", "slow", " ", "datasets"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normed2", "=", 
    RowBox[{"normed1", "[", 
     RowBox[{"All", ",", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"#", ",", 
         RowBox[{"\"\<kcat/Km_Norm2\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"#", "[", "\"\<kcat/Km_Norm1\>\"", "]"}], "/", 
           RowBox[{"secondCorr", "[", "#ChipType", "]"}]}]}]}], "]"}], 
       "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupedByExperimentNorm2", "=", 
    RowBox[{"normed2", "[", 
     RowBox[{"GroupBy", "[", "\"\<UniqueExptID\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tempGroupNorm2", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"groupedByExperimentNorm2", "[", "n", "]"}], "[", 
       RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "groupedByExperimentNorm2", "]"}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"afterNorm2", "=", 
   RowBox[{"DistributionChart", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tempGroupNorm2", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<WT\>\"", "]"}], "[", 
              RowBox[{"All", ",", "\"\<kcat/Km_Norm2\>\""}], "]"}], "]"}]}], 
           "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tempGroupNorm2", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<R164A\>\"", "]"}], 
              "[", 
              RowBox[{"All", ",", "\"\<kcat/Km_Norm2\>\""}], "]"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tempGroupNorm2", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<T79S\>\"", "]"}], 
              "[", 
              RowBox[{"All", ",", "\"\<kcat/Km_Norm2\>\""}], "]"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tempGroupNorm2", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<N100A\>\"", "]"}], 
              "[", 
              RowBox[{"All", ",", "\"\<kcat/Km_Norm2\>\""}], "]"}], "]"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "tempGroupNorm2", "]"}]}], "}"}]}], "]"}]}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.4"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"16", ",", "Black", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
     RowBox[{"BarSpacing", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "5"}], "}"}]}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"groupedByExperimentNorm2", "[", 
            RowBox[{"n", ",", "1", ",", "\"\<ChipType\>\""}], "]"}], 
           "\[NotEqual]", "\"\<SlowChip\>\""}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"24", ",", 
            RowBox[{"n", "/", "2"}]}], "]"}], ",", 
          RowBox[{"GrayLevel", "[", 
           RowBox[{"n", "/", "18"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "groupedByExperimentNorm2", "]"}]}], "}"}]}],
        "]"}]}], ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<WT\>\"", ",", "\"\<R164A\>\"", ",", "\"\<T79S\>\"", ",", 
          "\"\<N100A\>\""}], "}"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"{", 
           RowBox[{"373.2", ",", "5.3", ",", "0.955", ",", "0.8125"}], 
           "}"}]}], "]"}]}], "}"}]}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Darker", "[", "Red", "]"}], ",", 
        RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "None", ",", 
        "\"\<\!\(\*SubscriptBox[\(log\), \
\(2\)]\)(\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"], \
\"cat\"]\))\>\""}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<WT/R164A normalized\>\"", ",", "16"}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.85", ",", "0.92"}], "}"}], "]"}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "multiply", " ", "first", " ", "and", " ", "second", " ", "normalization",
      " ", "factors", " ", "to", " ", "get", " ", "final", " ", 
     "normalization", " ", "factors"}], ",", " ", 
    RowBox[{"for", " ", "analysis", " ", "below"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{"\"\<Final normalization factors:\>\"", ",", "Bold"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normalizationData", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"normalizationDataFast", "*", 
      RowBox[{"secondCorr", "[", "\"\<ValScan\>\"", "]"}]}], ",", 
     RowBox[{"normalizationDataSlow", "*", 
      RowBox[{"secondCorr", "[", "\"\<SlowChip\>\"", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "normalizing"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"normalizationData", "=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
      "\"\<190407_S3d1PafA_GlyScan_cMUP_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<181119_S2d2_PafA_GlyScan_cMUP_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180614_S3d1_PafA_GlyScan_cMUP_withEconc_190918chipCorrected.csv\>\"\
", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180614_S2d1_PafA_GlyScan_cMUP_withEconc_190918chipCorrected.csv\>\"\
", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180710_S3d1_PafA_GlyScan_cMUP_081118_chipCorrected_\
190918chipCorrected.csv\>\"", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180225_S2d2_PafA_ValScan_cMUP_180924_chipCorrected_\
190918chipCorrected.csv\>\"", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180302_S2d3_PafA_ValScan_cMUP_180924_chipCorrected_\
190918chipCorrected.csv\>\"", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180402_S4d3_PafA_ValScan_cMUP_180924_chipCorrected_\
190918chipCorrected.csv\>\"", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180522_S3d2_PafA_ValScan_cMUP_pH8_180924_chipCorrected_\
190918chipCorrected.csv\>\"", "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190205_S3d1_PafA_ValScan_cMUP_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180528_S3d1_PafA_ValScan_cMUP_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<180531_S2d1PafA_GlyScan_cMUP_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190305_S3d1_PafA_GlyScan_cMUP_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190605_S2d1PafA_cMUP_SlowChip_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190626_S2d1PafA_cMUP_SlowChip_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190630_S2d1PafA_cMUP_SlowChip_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190609_S2d1PafA_cMUP_SlowChip_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}], ",", 
      RowBox[{
      "\"\<190424_S2d1PafA_cMUP_SlowChip_190918chipCorrected.csv\>\"", 
       "\[Rule]", "1.0"}]}], "|>"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7895048383153543`*^9, 3.7895049134926443`*^9}, {
  3.789504946963519*^9, 3.789504964414364*^9}, {3.789505000663155*^9, 
  3.789505008573522*^9}, {3.789505117916294*^9, 3.78950512393898*^9}, {
  3.792682424506077*^9, 3.792682439639494*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"fb57d180-2fb3-49fa-bf1f-1cf5440a6ce7"],

Cell[BoxData["\<\"Below is the WT median for the fast chips only:\"\>"], \
"Print",
 CellChangeTimes->{3.789504978728408*^9, 3.7895050093978863`*^9, 
  3.7895051275382633`*^9, 3.7895070448530893`*^9, 3.789509401145599*^9, 
  3.789578426324443*^9, 3.7895800362913847`*^9, 3.7895827459675417`*^9, 
  3.79216606921446*^9, 3.7923400985231447`*^9, 3.792683002610166*^9, 
  3.792686058696641*^9, 3.792692720368526*^9, 3.792785494667989*^9, 
  3.7928617826948*^9, 3.793556346908814*^9, 3.809870561160533*^9, 
  3.8099136534366493`*^9, 3.8099786639942417`*^9, 3.810243343068201*^9, 
  3.811953894024679*^9, 3.811976749062989*^9, 3.812551071980328*^9, 
  3.812662739442307*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"d6562a8e-f346-47f2-a9b0-1141be1da1ac"],

Cell[BoxData["635159.8635150291`"], "Output",
 CellChangeTimes->{3.789504978730784*^9, 3.789505009400249*^9, 
  3.789505127540653*^9, 3.7895070448567944`*^9, 3.7895094011477947`*^9, 
  3.789578426328205*^9, 3.789580036331046*^9, 3.789582745971476*^9, 
  3.792166069216873*^9, 3.7923400985320168`*^9, 3.7926830026211767`*^9, 
  3.7926860586990213`*^9, 3.79269272037059*^9, 3.792785494669875*^9, 
  3.792861782697241*^9, 3.7935563469118443`*^9, 3.8098705611621933`*^9, 
  3.809913653440529*^9, 3.809978663997336*^9, 3.810243343069894*^9, 
  3.8119538940609913`*^9, 3.811976749068941*^9, 3.8125510719830027`*^9, 
  3.812662739444318*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"407b1275-bb7e-4928-9978-cabad6a82fbc"],

Cell[BoxData["\<\"Below are the per-chip normalization factors based on the \
WT \\!\\(\\*StyleBox[\\\"median\\\",FontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\
StyleBox[\\\":\\\",FontWeight->\\\"Bold\\\"]\\)\"\>"], "Print",
 CellChangeTimes->{3.789504978728408*^9, 3.7895050093978863`*^9, 
  3.7895051275382633`*^9, 3.7895070448530893`*^9, 3.789509401145599*^9, 
  3.789578426324443*^9, 3.7895800362913847`*^9, 3.7895827459675417`*^9, 
  3.79216606921446*^9, 3.7923400985231447`*^9, 3.792683002610166*^9, 
  3.792686058696641*^9, 3.792692720368526*^9, 3.792785494667989*^9, 
  3.7928617826948*^9, 3.793556346908814*^9, 3.809870561160533*^9, 
  3.8099136534366493`*^9, 3.8099786639942417`*^9, 3.810243343068201*^9, 
  3.811953894024679*^9, 3.811976749062989*^9, 3.812551071980328*^9, 
  3.812662739445344*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"f1c2d9b9-ec53-4f7d-845a-e6990ea86114"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"190117_S3_d1_MeP_1_GlyScan.csv\"\>", "\[Rule]", 
    "0.7483857433303759`"}], ",", 
   RowBox[{"\<\"190123_S3_d1_MeP_1_GlyScan.csv\"\>", "\[Rule]", 
    "0.5320200337335984`"}], ",", 
   RowBox[{"\<\"190314_S3_d1_MeP_1_ValScan.csv\"\>", "\[Rule]", 
    "2.3331518444896924`"}], ",", 
   RowBox[{"\<\"190318_S3_d1_MeP_1_ValScan.csv\"\>", "\[Rule]", 
    "1.190336647044143`"}], ",", 
   RowBox[{"\<\"190321_S2_d2_MeP_1_ValScan.csv\"\>", "\[Rule]", 
    "1.4095049948442047`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.789504978730784*^9, 3.789505009400249*^9, 
  3.789505127540653*^9, 3.7895070448567944`*^9, 3.7895094011477947`*^9, 
  3.789578426328205*^9, 3.789580036331046*^9, 3.789582745971476*^9, 
  3.792166069216873*^9, 3.7923400985320168`*^9, 3.7926830026211767`*^9, 
  3.7926860586990213`*^9, 3.79269272037059*^9, 3.792785494669875*^9, 
  3.792861782697241*^9, 3.7935563469118443`*^9, 3.8098705611621933`*^9, 
  3.809913653440529*^9, 3.809978663997336*^9, 3.810243343069894*^9, 
  3.8119538940609913`*^9, 3.811976749068941*^9, 3.8125510719830027`*^9, 
  3.812662739451972*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"2c488e3b-7517-4422-8651-05b592bba8d9"],

Cell[BoxData["\<\"Below is the R164A median for the slow chips only:\"\>"], \
"Print",
 CellChangeTimes->{3.789504978728408*^9, 3.7895050093978863`*^9, 
  3.7895051275382633`*^9, 3.7895070448530893`*^9, 3.789509401145599*^9, 
  3.789578426324443*^9, 3.7895800362913847`*^9, 3.7895827459675417`*^9, 
  3.79216606921446*^9, 3.7923400985231447`*^9, 3.792683002610166*^9, 
  3.792686058696641*^9, 3.792692720368526*^9, 3.792785494667989*^9, 
  3.7928617826948*^9, 3.793556346908814*^9, 3.809870561160533*^9, 
  3.8099136534366493`*^9, 3.8099786639942417`*^9, 3.810243343068201*^9, 
  3.811953894024679*^9, 3.811976749062989*^9, 3.812551071980328*^9, 
  3.8126627394531183`*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"bffc12ac-1330-4bdf-998c-8ba12c4907b3"],

Cell[BoxData["32255.14732622501`"], "Output",
 CellChangeTimes->{3.789504978730784*^9, 3.789505009400249*^9, 
  3.789505127540653*^9, 3.7895070448567944`*^9, 3.7895094011477947`*^9, 
  3.789578426328205*^9, 3.789580036331046*^9, 3.789582745971476*^9, 
  3.792166069216873*^9, 3.7923400985320168`*^9, 3.7926830026211767`*^9, 
  3.7926860586990213`*^9, 3.79269272037059*^9, 3.792785494669875*^9, 
  3.792861782697241*^9, 3.7935563469118443`*^9, 3.8098705611621933`*^9, 
  3.809913653440529*^9, 3.809978663997336*^9, 3.810243343069894*^9, 
  3.8119538940609913`*^9, 3.811976749068941*^9, 3.8125510719830027`*^9, 
  3.812662739454281*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"b6ed0856-3abf-4f5a-ae7a-e78260873a8f"],

Cell[BoxData["\<\"Below are the per-chip normalization factors based on the \
R164A median:\"\>"], "Print",
 CellChangeTimes->{3.789504978728408*^9, 3.7895050093978863`*^9, 
  3.7895051275382633`*^9, 3.7895070448530893`*^9, 3.789509401145599*^9, 
  3.789578426324443*^9, 3.7895800362913847`*^9, 3.7895827459675417`*^9, 
  3.79216606921446*^9, 3.7923400985231447`*^9, 3.792683002610166*^9, 
  3.792686058696641*^9, 3.792692720368526*^9, 3.792785494667989*^9, 
  3.7928617826948*^9, 3.793556346908814*^9, 3.809870561160533*^9, 
  3.8099136534366493`*^9, 3.8099786639942417`*^9, 3.810243343068201*^9, 
  3.811953894024679*^9, 3.811976749062989*^9, 3.812551071980328*^9, 
  3.812662739454981*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"fc644e11-fb6e-4dbf-a85c-5391434d3cdd"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"190913_S2_d1_MeP_1_SlowMeP.csv\"\>", "\[Rule]", 
    "0.785925993181745`"}], ",", 
   RowBox[{"\<\"190913_S3_d1_MeP_1_SlowMeP.csv\"\>", "\[Rule]", 
    "1.0077591235098924`"}], ",", 
   RowBox[{"\<\"190522_S2_d1_MeP_1_SlowChip.csv\"\>", "\[Rule]", 
    "3.3428344155379888`"}], ",", 
   RowBox[{"\<\"190605_S2_d1_MeP_1_SlowChip.csv\"\>", "\[Rule]", 
    "1.096336503811598`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.789504978730784*^9, 3.789505009400249*^9, 
  3.789505127540653*^9, 3.7895070448567944`*^9, 3.7895094011477947`*^9, 
  3.789578426328205*^9, 3.789580036331046*^9, 3.789582745971476*^9, 
  3.792166069216873*^9, 3.7923400985320168`*^9, 3.7926830026211767`*^9, 
  3.7926860586990213`*^9, 3.79269272037059*^9, 3.792785494669875*^9, 
  3.792861782697241*^9, 3.7935563469118443`*^9, 3.8098705611621933`*^9, 
  3.809913653440529*^9, 3.809978663997336*^9, 3.810243343069894*^9, 
  3.8119538940609913`*^9, 3.811976749068941*^9, 3.8125510719830027`*^9, 
  3.812662739480089*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"79541bb6-13ad-41a5-be22-ea40d6cf777d"],

Cell[BoxData["32255.14732622501`"], "Output",
 CellChangeTimes->{3.789504978730784*^9, 3.789505009400249*^9, 
  3.789505127540653*^9, 3.7895070448567944`*^9, 3.7895094011477947`*^9, 
  3.789578426328205*^9, 3.789580036331046*^9, 3.789582745971476*^9, 
  3.792166069216873*^9, 3.7923400985320168`*^9, 3.7926830026211767`*^9, 
  3.7926860586990213`*^9, 3.79269272037059*^9, 3.792785494669875*^9, 
  3.792861782697241*^9, 3.7935563469118443`*^9, 3.8098705611621933`*^9, 
  3.809913653440529*^9, 3.809978663997336*^9, 3.810243343069894*^9, 
  3.8119538940609913`*^9, 3.811976749068941*^9, 3.8125510719830027`*^9, 
  3.8126627399983263`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"0d87a543-4b68-4d9f-88ce-1d62826aad0e"],

Cell[BoxData["32255.14732622501`"], "Output",
 CellChangeTimes->{3.789504978730784*^9, 3.789505009400249*^9, 
  3.789505127540653*^9, 3.7895070448567944`*^9, 3.7895094011477947`*^9, 
  3.789578426328205*^9, 3.789580036331046*^9, 3.789582745971476*^9, 
  3.792166069216873*^9, 3.7923400985320168`*^9, 3.7926830026211767`*^9, 
  3.7926860586990213`*^9, 3.79269272037059*^9, 3.792785494669875*^9, 
  3.792861782697241*^9, 3.7935563469118443`*^9, 3.8098705611621933`*^9, 
  3.809913653440529*^9, 3.809978663997336*^9, 3.810243343069894*^9, 
  3.8119538940609913`*^9, 3.811976749068941*^9, 3.8125510719830027`*^9, 
  3.812662740019508*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"5cda0d1c-3cc9-44fc-a24c-fda2e7fa3a0b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SlowChip\"\>", "\[Rule]", "1.`"}], ",", 
   RowBox[{"\<\"SlowestChip\"\>", "\[Rule]", "1.`"}], ",", 
   RowBox[{"\<\"ValScan\"\>", "\[Rule]", "1.`"}], ",", 
   RowBox[{"\<\"GlyScan\"\>", "\[Rule]", "1.`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.789504978730784*^9, 3.789505009400249*^9, 
  3.789505127540653*^9, 3.7895070448567944`*^9, 3.7895094011477947`*^9, 
  3.789578426328205*^9, 3.789580036331046*^9, 3.789582745971476*^9, 
  3.792166069216873*^9, 3.7923400985320168`*^9, 3.7926830026211767`*^9, 
  3.7926860586990213`*^9, 3.79269272037059*^9, 3.792785494669875*^9, 
  3.792861782697241*^9, 3.7935563469118443`*^9, 3.8098705611621933`*^9, 
  3.809913653440529*^9, 3.809978663997336*^9, 3.810243343069894*^9, 
  3.8119538940609913`*^9, 3.811976749068941*^9, 3.8125510719830027`*^9, 
  3.812662740020564*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"0d6e7261-bc85-4ccf-9104-b98ad6d5a21a"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.7166666666666667, -1.0369235918251578`}, {52.21666666666667,
      21.775395428328313`}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[
    0.7]], {}, {{{}, {{}, {
        {RGBColor[0.8941176470588236, 0.7098039215686275, 0.7490196078431373],
          EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlUjl3UxjNGREhmImSW+35kii0yRJlliigyl8zzEMIbIlNIKkWGqGgg
2qdEFJGiVNI8D0/mJL77W2vvf77v/cO7nrW4p3PO3te+rl93W8dZK+praGi8
U/743//zf3OjxldHTZeEjb53J7fFR8CrxKlNz5mSKEp5s67dxmNQqOs99Ngs
SYSdr7+n4q4rDBqbOK9ytiRcJ4cU/m17Erau/bNj9lxJzK79k/tuzimIOt/P
M8JKEoGrNlw2DjsNjWPmR3WZL4k5+k9WrTY6A9MrXLKdF0iidm7hzODYs3Ch
fWj94oWS+GxxR71w83n4PD6vp6W1JC59CQyNGOsBho6tJoUslkR/I+/2Pfpf
AsdLsLqdjSQ61nd88EXlCeHP1rvuXiqJLXkjpx+z8QKN6suBOcskYR/RY6WB
lTdM7hz/ZqKdJDw71XOdeNIHTk36VX17uXI9/VllWWm+kLaxt24re0l0Kn/n
62nsB/pec4y3rpTE1MbbbAcF+MOql87zM1ZJ4lqQ+TaLQTcg+FvQzrFrJHFM
53PKxZcBUNPts6f/WklMRNtWd3beAtOp2qi1XhIB956YDBl3B45tHZXj6CCJ
VS0isp/p34Ukn9UN3jtKYkXe8RH7mwVBh9cXeo10ksRjcDOJaB0Mtr+eTbq6
URIheu7J03qHwC2Db6sbblbeT07Ye3Diffgyrcfx1VskcfGj7pdTmx7AyJ0z
7iZuVdZLe4LvncBQcPbf+1beLokld3fGtvoeBvFv73zx2CEJnzapOR/MI6DN
n3Tdvzsl4fD3VkCvOw9hkWHTYXa7JdEwMfNGp86RcG3WsAUv9kji9MqmF15f
fAxle1bsGrhPEkNzZ9hM7hUF8s0zV9z3S6L5D9XDU1EIu1Ki8ecBSXQJe7Uy
KURA7L+qHOuDksjSnfFt+IloaN6/a8OYQ5IY2OKE1maHGJhjZdHb0EUSX518
v260egqeB3ZOPn5EEpsmPmvffUIs5N8JWFN9VBL7DvwuXD7yGQxI+3Dc6j9J
nLkyyaa78XPY0qDRvUhXSVg7m1xRDY+DJ4PkJP0Tkgjd2qeDw9gX0Gjhsq+H
T0qi256bz65NewmWh93alrlJ4m5mJ9nXNh7OBT0ZNuO0JHZkPH1ktDsBPmWU
LQh1V9YjqdRB9/Ir6K3ZcXfHs5K459f1dRN8DQ7SZK995yQxuHPNneiiRAhb
vFXkn5fEXin83k6tt/D3qF+uuYckYraoB/e99hYmPnjX8N5FSVS8MJ8WPToJ
Tn7WMNS9rHyPiPfv26YnQarWYPMdnpJIuhp28Oe2d9DNePHarCuS0J+R2mdo
u2RYucz1xPirkljsqHpzOTwZ7h1/eC/AWxL13G7k/pifAj/Di5K0fSXRZ0i3
xTq1KQB5bb9tvCaJ5+l9fgRdeQ9HW5jppflJ4ku3O3O9x36AtyM2Dh99XRI7
Te+Z++d9gPYrvBf63pDEwsM//x52SYWlpxJ3a96URMnPGSZN+qZBQOQfr3W3
JOH2dJx3dXwaqAv7RSfdloRFSmW25rqPMKL1gjzjQOX+7d9rt2qeDgdGH2nk
eVcSmWsGJCffSoeXq0IN6wVJIqjPnqh2kzOg1dk8c/tgSTRyNzjkn5cBC7DV
uoQQSdR0zrxuvicTfErhpNEDSbx8O8rtle4nKG3rEHQuVBIPRpet+XPzE0im
nu9+hynPW6rSvmWSBTvXxX+ziVDqxbywJgGvsiDmwi+9Zw8l8bv6eGjCgs+g
9bT3iH6RkkjYku1UkfcZZlXOWeT2WBJ7gkvabxmaDZc7HNzz7Ykkes/TmTNj
WzbkmQVfXYCS6Jl+03N7eDb03/A5OkpIYlLf/f1yv2fDpsva+QYxktAK7+vg
LOVA5PNRjY89Verf1qTfM9bnQIMvq/tUxkqibe+vHpOu54BFF48ps59Lwqpw
ipXtpxw4O/n5uog4SeTZvXC/2joXMjd9O9nlpSR2BS/Q0piYCz2v9gh2jpdE
2iz7DJdtubAufkZyUYJS3zJTj424kQsPvu/9bvFaEl3L3f92e58LdfqB7UIS
lefXNz9oVi8PJlhkjGj3VhKH89wf3e+fBye2NbXenSSJ19cmnt09Jw/e+w7b
m/NO+d5lTccE7cqDLokrvCemSCKyj76OrU8erKg5E3P7vSSkac5bbzzLg7s9
Y/J1UiVxasisDxeK8+DHdHXjrWnK/fRiHS208mHMrq59Mz4qvy96m2T3yweX
6xZTx2Yo++3J0QTHKfmQmLRzvX+mst5TBrbvsDof9OoC3LSyJPHvdfDSWpd8
sOmTGuz4WTk/Z3f+MvbLhxuzG6WkZCvra3C7fYXIh6q98o8Rucp5/ep9Fz7l
w7Bby9pfzZPEZofIPjNr8mHfe7eRDQskYdgoztSsbQHEaURZry5U+o9Tj9Ym
QwpAZ0D53sQiSZyYY93X2rIA5s/r6COXSGL0975+sasLwNt58lOPUkk8GfBx
l4dLARQHbi2oK5PEqJp14te1AjD66KdpVyGJRT9r/2sUUwDbGyb3fVEpCXXC
95efsgsgenA9i4FqScTtaNbyqkYhNF002MG9WhJeru1sVnQvhJkui0/9/KLU
23k2DaeOL4SLwa4h1t8kUdDL2W6VfSHkZD5Mif4uCc2IFcnJ/xVC3ybFP3r/
VM7/tdXbfYIKYaOs1+H4L0lMGdjTIC+1EB4tMRtVXaPsn795UoBGEdT/b+Ni
q1pJbGjab3ddvyKYEuq9L/KPJMK9JsoVVkXgnp3oo/9XEvGlozL2HiqC9GZ1
Tw//U/pH9d/h4feLwGBY/8JSDVloVPSe6pFfBGttFzSZUV8WVadbTezerhju
nzjSL7SBLDrZ7Tg7bWox1EaEWnRsJIv4hhszOxwohvH5eQ77GstiyebQJjsj
isG1ZevT+Zqy2G/Z08quuhhSRo69b95UFk3LZ62I618Cne0d3t/VksXG+d+n
n1tZAstPe/5s01wW7S58i37oVwJ3Hsd32KEtiw2jqtt2yyuBb0W/RmW1kMUU
verNgT1KwaSN4ZLxOrKIcFH/mmJXCofHzN0f0EoW+uuavcvwK4XXqw/6areR
RfOVzW3GF5VC23PBsRt1ZTH5ea3Tsn5lsFh8LkxtK4uXFtq/dB3KwL9Mu+no
drJYNir+nklIGVTomfT3bS+LFjO73An9UQbG49ZYanaURYZ9XAfrUeWwd72H
47pOskjofGl9s/3l8Nzj+emkzrKwrL3l7hVbDi1iv9037iqLYJ3B7dVNKsCq
qseHy91kMd42ZEm6RQV4dZz5S6O7LP5zso0ddqoCiibs62jfQxaPXQzf5r6r
gMFOgSYJBrLQWWS5KEy3ErZ5Ziwx6iULudmBhyfmVgLGNT1wrrcsbmdWZZmd
qwTNr8Ou/TaUhef4+Ycikithelf7ZzZ9ZeFzI3/yc50q8DA/WxTbTxaFZwKT
LCyqIHtzTNN+A5R/bxxX2N+lCvp4q/u7DZTFwAmxJ8yiqmBDQtdp3wYp+2Gz
V/cd36og4ofFhgVGsvg5u+6+la4aNHrsco8aotzPNnem3UA1mFvefGAgyyLK
1P3d3AlqOL099cNRlSwuVa9a28NaDR+vNaqpGCqLccvW9IxyUkP3N3Kn2cNk
MS3eJrOrixpW/142OmK4LNoEPZ466qIagnudsukyUhb1Ns5r3Oy2Gn7PiDrg
PEp5fs0Gu10i1TBud/m1IhNZ3Klq/+t6vBr+u9HxucUYWQw/2cDbPk0N795N
Lg4G5XqT0zeIfDV0/LtVq52pLNYv724SVKUG277+A3aPk0Vne3FNqlHD7TnJ
03LGy+JyhWnbCfWq4eu+ek4TJ8ji+voNsQWa1TDq9uAztycq79vIzr+NdjUc
/LA4VGeyLC7c17ZP1KmGhHrHU7eYK/s5buVKvTbV0Gbgo5r0KbLY2XpUWLny
23p+caexFsr1owMbzFZ++x3UG+NvKYsDBh5XpraqhvK7Zku1pssi5H2Y/Ufl
+qr0jc6OM2SR9P1F4r8m1bC7kY9fykxZHKx/Mz6mfjXEGr15PmK28lvX4VXv
WjVoW9cVe82RxXtN30ijL2qYe6R/s4ZWssjR8agoKFLDlZAFA1fPk8Vv3cou
FplqKPh0ZHrifFkM/mq6cvUbNQxsGuYkL1TW53EPE7NoNWxR5Z/xWCSLsTfN
luYFqyHKpnVYnbUs1jrV5Vj6qKGx69g02yWymLlZW9fVTQ3Twhx+x9nIwr/R
wyO+u9VwPsez88BlstiiqdL0XKWGrOYJY9xtZVFUuPTUvtlq6D28ZulPO1mc
0MibPne0GhztDA9ar5DF9/UHPXv1VkP4ybn+0fay8JpU+OWXthr+PTwY13uV
LIprO+bdK6mCSQXBJa6rZdGwz9Rb50OrwE0nu1n1Gllc2zO4NHxfFaSOajHI
ap0sWm+I2N9rchXorzSZEbleFlNztbdUt6iCVe5rNuo7ygJO63wZmFIJQU88
zh7eIIshaUNNKy5Uwq/i52GlTrKos7/3zHRhJYzV/Z42fZOyv76++Tm6UyUc
BYPaB5uV+7tdWfotvQKS1szs0nGrsh49nc9tu1gBHc7vg33blHp4WUuVblUB
y6IDl+VvV87XSv9Pg9pUwM3yjIPmO5XvcXOmfDSxHKrbaV2/u0sWS+8bJf06
Wg4jxg9/0WaPLFpuLTc/M64cnB3sS7fvlcXuI4Xd19SWQfzFs82z9skicn3P
eLf7ZdD6Wcyg8Qdk8XTqmgZ6a8tgoVo9I8BZWa/NL51b9igD307dNmkfUuqL
Py5zSyuF0omW5zYelsXFrwWXrp8sBXnjrvBUF1k8KftVZG9WCruu3PxoclQW
xrmHXubUlMDTF6m1PseU6xtN3dfnXgk0+9aoq6arcv7emmlYLC+B2d1UY9cd
l4Vzv0lfrDuUwOUptrZJJ5Tz8nemz9rEYsjfcuqQsZss/Ca5/ThysBgG+ERd
v3xKFpNKWjpGDy+Gza/KX2i4y+JI2szWhpVF8Phnx7IVZ2TRc6DXqrhrRdDQ
wFw74awsVAOmOwUtKAKLadsGG52XxaHUlherWhbBuR3+M89dUOp7lmHQ6eeF
8MkvedNvD1k4lRdl++4phF5v6523uaT0L7Op1wcNLYT1tYMjYi8r/WZ8fgxU
FEBo7yXpfa8oz/O17/Bs/wKom3n8z0kv5X6NRo/pYFMAE/c86vrtqnK98yNN
vrYvgJMBxWMX+MjCsESK3pKcDx+S9eyifGXxIuzjnhsn86HrP7PDBn7KedJu
BCcV/WPfb9ONo/7KfrnW9sQgzXy4O9fnZcV1Wfy13N/teGwe/Nz/pmxWgCyi
l7rH33bOA7hTpx1xU+k/wzs7nTTNgyOp/Y263JbFwvo6y1SKvntTf+Es5zuy
mP73S6+r0bnQbtDRzUWBstjnqjsg0TkXbBaEnbe4J4tR15+p0CwXAg7lRwQH
yWKrw7JIR81cUN9rnaEXopzfW7cWZsbnwPCMsXW77ssiUa8iWcMtB/Y3duyW
80AWXX1s26XNzoEXQ66YTgyTRe3fD5bWHXJAZ3GC3e1wWdGvB/JcPmfD/KM1
h3UeyuLwkqZnZ1zPBp/7hgFbHsligNnNbcHrs6Eka258eqQsxtQtbuWj6O0h
WofK4YksUtsbPB7w5zPsGBrSwj9KFjuuWr1sefIzRC/NNtISSv13/XQiVV/R
78dbzHaMlkWMYbfrjg+yYFa4yZaUGOV7rcP+TydnwaXcNRdGxMqiVccf6Y8/
fYJc7YsPvZ7JwlrlN3zSpk/Qb0RcRoM4Zb+3KomwaPoJNi7/XrfqhSzsJvwo
CL+aCY/cDPQTXyrvuyDbZZNxJjSInDlOTpBFgxV9n695nQFTC/ct93il1INZ
MfOOLc+AM63uutS9lsWtVPCKrE2HDJPMANs3suhQr96bSvd0MFillRD3Vun3
no3btuqXDuvODK8Y8E4WI3xNQlpFf4QHUfYt3ZOV95tf0zVn3kf4U3J2yM8U
Rc8kbDd0qkwDs7ZPZ1t/UM5XRlfN0ENpcHxs9ZboVFlYVVge8OmYBilru3n0
/qjom2K/nwOCUqHzBctHrumK3sjYtWf6hFRYEbMrU50hi+NVu4rrp3+AwIqb
f+d+UvbLY1XWOIcP8L19mn5klqIv6l/Ial7/A4w2azxeP1sW20LGTV167j0c
dlStOJyj9KtdnmvH9HkPiZdsj5TmKv1lpv/6W49SQO/5qZvT82VRk3rW7qZF
Ciypjkp4UKDsj8LRY8ZlJcP1zhUVHYqU9WgYum6PYzJUTuqks69Yqbfx31/b
aSSD8SZzKb9EFnqHBxxufPod7PXaNse8TBYuGU1vbuj+DuJe+m+9Wy6LNy72
z4ODk6Dl92SPNpWyOJuUr/XRNAnm6deP3F4li7DgvfX+JL2Fq1ONPn1Sy8Jg
0djeg2zfQtHWJf/GfZHF6IneFxoXvAEj3+PdA77KYsXBS/E9Gr+B7a8fjdf+
LothVrOuZRkmgvhVvGLjD1n4pr7etHrKa2jSs93R1J+y2BwlMr+ufwUzpk+4
ZVKj6IkFAS733BPAY+emVz6/lfUo+PcxMSIesv19Khv/UfRfbpvwQ9kvoW/S
G511dbKYd75mYEOtl+D0p05K+qt8r10Dh+0f+gIeGg6Ya6yhEjv9563vbxcH
9WYv3Ha5nkqkbA56MezMczDfe/SiRgOVyJm70/rDs2fgfjMsckVDlXA61veK
qjYW0lPyP8U3Uom7e7cvOijHQg+NNhpGmipREI6jvjo8hTX9TXuca6ISlhtq
n9wOjIEQK0ez301VwlTtrfGhKhp+H7hib9NMJYyO/Kv0GBoN4wITjsY2V4nW
vT3bddgnwDWt5lbfFioROXxYi2oPhOQGfV6fbKkSCzc+mR44Kgo6Dbaq+qqj
Esuzkiy8Cx+D3cJDrRa0VokW3SG07mIk3D4cIke1UYnhfrtjSuY+gm9B2XMN
2qrEkaPtU692fAgmmS22H9VTCYshZ2+MKA6HQ5qjL1W0U4mnrfLdkqLC4JW0
9vGsDiqxKCPAe49XKOguuZgV3lEl6hvn/rA88gCsj8VpdOmsEkvkDm8sdtwH
vwffezh3UYkXm7d4790cAhWfDSYUdVWJtGbjIHd7MAxtNmulhb5KdPxo3djJ
JQj2GO8/FtxdJV7rNmoxZuQ9eLbs7m09A5UID4vdHbYjELRPZL7e1VMlvGKi
vLsl3AarCC11di/lfeKCf4wZdAu88oa3nmioEhOi+y945xsAhS1Wqm73UYn/
Zm0YH9znBgwaec5Kp59KjNCw/LgT/WHriqfbt/RXic63AivT7f0g6lT1pfQB
KpFs3P/n1q7XoPHjbk9gkEp0uaqbkV/gA9OLLD/7DVaJmJqihLjH3nCh9e56
WkNU4oBubL3/JlyFz6NvGThKKlEd5hqLg66A4eq0CSmysh/iLi+dproMjmcb
rxoxVCVKtOc9t5x7ESJQ9Z+XsUqMfKy7PenUBdAos73TYLhK7D95xLek4BxM
1juduGqEsv/8TPv5zT4Lp0xR/Xqkcv+YEYHaH90hbV1Fa9lEJTro2GyTtpwG
fY9OQz1Gq4R8Z8PqboanYNVT83l1Y1Tio2+Z77OMExBcuW2H7Vhlf9ncX9Xx
tCvUdLh+Oc5UJZaNuK6zfN0xMJ2Q8mTAeJXQHhSHb9cegWMb6mefNlMJ9p+T
LhvV/znh//+mv4/89+l6yNej+yHfj54H+XnoeZGfl94H+X3ofZHfl74H8veg
74X8veh7In9P+t7I35vWA3k9aL2Q14vWE3k9ab2R15v2A/J+oP2CvF9oPyHv
J9pvyPuN9iPyfqT9irxfaT8j72fa78j7nc4D8nmg84J8Xug8IZ8nOm/I543O
I/J5pPOKfF7pPCOfZzrvyOed6gFyPaB6gVwvqJ4g1xOqN8j1huoRcj2ieoVc
r6ieIdczqnfI9Y7qIXI9pHqJXC+pniLXU6q3yPWW6jFyPaZ6jVyvqZ4j13Oq
98j1nvoBcj+gfoHcL6ifIPcT6jfI/Yb6EXI/on6F3K+onyH3M+p3yP2O+iFy
P6R+idwvqZ8i91Pqt8j9lvoxcj+mfo3cr6mfI/dz6vfI/Z70ALIeIL2ArBdI
TyDrCdIbyHqD9AiyHiG9gqxXSM8g6xnSO8h6h/QQsh4ivYSsl0hPIesp0lvI
eov0GLIeI72GrNdIzyHrOdJ7yHqP9CCyHiS9iKwXSU8i60nSm8h6k/Qosh4l
vYqsV0nPIutZ0rvIepf0MLIeJr2MrJdJTyPradLbyHqb9DiyHie9jqzXSc8j
63nS+8h6n+YB5HmA5gXkeYHmCeR5guYN5HmD5hHkeYTmFeR5heYZ5HmG5h3k
eYfmIeR5iOYl5HmJ5inkeYrmLeR5i+Yx5HmM5jXkeY3mOeR5juY95HmP5kHk
eZDmReR5keZJ5HmS5k3keZPmUeR5lOZV5HmV5lnkeZbmXeR5l+Zh5HmY5mXk
eZnmaeR5muZt5Hmb5nHkeZzmdeR5neZ55Hme5n3keZ/8AGQ/gPwCZL+A/ARk
P4H8BmS/gfwIZD+C/Apkv4L8DGQ/g/wOZL+D/BBkP4T8EmS/hPwUZD+F/BZk
v4X8GGQ/hvwaZL+G/BxkP4f8HmS/h/wgZD+I/CJkv4j8JGQ/ifwmZL+J/Chk
P4r8KmS/ivwsZD+L/C5kv4v8MGQ/jPwyZL+M/DRkP438NmS/jfw4ZD+O/Dpk
v478PGQ/j/w+ZL+P/EBkP5D8QmS/kPxEZD+R/EZkv5H8SGQ/kvxKZL+S/Exk
P5P8TmS/k/xQZD+U/FJkv5T8VGQ/lfxWZL+V/FhkP5b8WmS/lvxcZD+X/F5k
v5f8YGQ/mPxiZL+Y/GRkP5n8ZmS/mfxoZD+a/Gpkv5r8bGQ/m/xuZL+b/HBk
P5z8cmS/nPx0ZD+d/HZkv538eGQ/nvx6ZL+e/HxkP5/8fmS/n/IA5DyA8gLk
vIDyBOQ8gfIG5LyB8gjkPILyCuS8gvIM5DyD8g7kvIPyEOQ8hPIS5LyE8hTk
PIXyFuS8hfIY5DyG8hrkvIbyHOQ8h/Ie5LyH8iDkPIjyIuS8iPIk5DyJ8ibk
vInyKOQ8ivIq5LyK8izkPIvyLuS8i/Iw5DyM8jLkvIzyNOQ8jfI25LyN8jjk
PI7yOuS8jvI85DyP8j7kvI/yQOQ8kPJC5LyQ8kTkPJHyRuS8kfJI5DyS8krk
vJLyTOQ8k/JO5LyT8lDkPJTyUuS8lPJU5DyV8lbkvJXyWOQ8lvJa5LyW8lzk
PJfyXuS8l/Jg5DyY8mLkvJjyZOQ8mfJm5LyZ8mjkPJryauS8mvJs5Dyb8m7k
vJvycOQ8nPJy5Lyc8nTkPJ3yduS8nfJ45Dye8nrkvJ7yfOQ8n/J+5LyfeABk
HoB4AWRegHgCZJ6AeANk3oB4BGQegXgFZF6BeAZknoF4B2TegXgIZB6CeAlk
XoJ4CmSegngLZN6CeAxkHoN4DWReg3gOZJ6DeA9k3oN4EGQehHgRZF6EeBJk
noR4E2TehHgUZB6FeBVkXoV4FmSehXgXZN6FeBhkHoZ4GWRehngaZJ6GeBtk
3oZ4HGQeh3gdZF6HeB5knod4H2Teh3ggZB6IeCFkXoh4ImSeiHgjZN6IeCRk
Hol4JWReiXgmZJ6JeCdk3ol4KGQeingpZF6KeCpknop4K2TeingsZB6LeC1k
Xot4LmSei3gvZN6LeDBkHox4MWRejHgyZJ6MeDNk3ox4NGQejXg1ZF6NeDZk
no14N2TejXg4ZB6OeDlkXo54OmSejng7ZN6OeDxkHo94PWRej3g+ZJ6PeD9k
3o94QGQekHhBZF6QeEJknpB4Q2TekHhEZB6ReEVkXpF4RmSekXhHZN6ReEhk
HpJ4SWReknhKZJ6SeEtk3pJ4TGQek3hNZF6TeE5knpN4T2Tek3hQZB6UeFFk
XpR4UmSelHhTZN6UeFRkHpV4VWRelXhWZJ6VeFdk3pV4WGQelnhZZF6WeFpk
npZ4W2TelnhcZB6XeF1kXpd4XmSel3hfZN6XeGBkHph4YWRemHhiZJ6YeGNk
3ph4ZGQemXhlZF6ZeGZknpl4Z2Te+f/y0P8DQIUdDQ==
                "]], {{{
                0.390369642915177, 0.}, {0., -1.}}, {1., 0.}}]},
             
             ImageSizeCache->{{94.00451014147096, 
              112.9373979189824}, {-80.96795762857214, -54.31684732985714}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "19.883267072648227`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "19.50643227373547`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "19.276760224232984`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "19.10645126706667`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "18.706989954193922`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 19.883267072648227`}, {
               Style["75%", Bold], 19.50643227373547}, {
               Style["median", Bold], 19.276760224232984`}, {
               Style["25%", Bold], 19.10645126706667}, {
               Style["min", Bold], 18.706989954193922`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndYjn/0x9NXsrOyV5TMeO77zubYvjbZycrIyB5lZ4aEqOyRqJCGkhGd
U1JRZERatB9CCF+b3/O7rnP++f2+f/heXddTz31/xjnv836/LByX2M0xNjIy
SjD887//l//Kjg5YdOyEjkz3WpsOs98EdtkWd/SndDQnSx8UaLoZwpv8bayd
0VGzlUsmnV67BWpMz17pdlZHuRUTY0aaboOlp6+npAToqJ8ydPubkO2Qmudr
2eC8jt58cK2xebk7dGy5cv2cizoKvXiwy9Sxu2Dv7DFp4Zd01N1k9T8Rdh7w
7pxN+z+hOvLfPU69vMwTRuirbBt6WUeTzc0ObA/fB8GtX2f5Ruqob4t1R4Iq
eUHVBQlqQZSOxk64Pqz+8AOw8KK/R8frOgpx23Av9vRBuPfWrWBdtI6GxNhV
LTT1gbY203ok3dLRytQPqbW3+MKuJT0O1iEd2Yxv4JRodhheh9V/MyNOR1lf
E7vNCz8C/5Z96XcpXkcf7enLAqdjEKg+Ofo9QUfGwT3n/tSdANNVYWUD7+rI
10TdtrzmKZgb5Tn0QLKO9g3v6VN+62lI+LrgzIv7Ogo49iPos7sfWHX790fb
hzoarU/b4nvoDGxba2Xn8lhHNwc8CC0N94fCaOMLt9N05B39Lunbs7PQ//fL
cjXSdfQwotnfgAoB4N/71mSHDB0NOP44NK9PIBi7HQ0PytLR4nGX/nHfHgSO
sS6VvuToKPsVGS9OOw+xxuNn9s3VkeWeVXEzOlyE5gOU6575OhpeGjK21v5g
cNtuVjOzUEc9hyz36vHrErxMeDuvlV5HVSt1v7F1WShAxXu0/LWOKv76Mum2
SxicHBJYH9/oaLXedkdJ93D4vXvb0iqlOjK6X7/uj3KXYWrKzKSJHwzvc7Wg
e2jKZbhZDZqfLdNRapFrSuzRCGg8qrHrh886sm9R07VwYSSs2/89tedXHX0I
nPAzHq5A5qNn1ru+62ho4OZ2detGQffakZue/tSRZhvS27k0Co6M80q3+GP4
/XLh1ouTrsJ3n8UdFxsp9PzDJYsb/tdgUvow9xvGCtV/qJtcsuk6XK3f5mUF
E4WCZrya6etwA+rZV+gy1lShtXvyaWy3aFh9rGDvqUoK/ZiU4RZlfhOeZVPx
myoKdX5dzmncx5tg2/Rk767VFfq0uqV3TPIt8J6+zndbDYWifT6s3X42Bj6f
nlT6sJbh+5r/Y9VnHcLYfNtBTcwVepO8d2+cNUFEy9on59dTaM741Hur9xPU
mvPhy5UGCn2riOYeXwmWBdwfYdxYoYV5sU9THWLhkf7CuZFNFZphq3tbj2Kh
U5udv482V+jgI+v63SziYP+COeP1LRSyzm/UrLpbHLy/2O+SamV4n7Cgycuy
42Dku2YmbtYKra9zu33/zrchxOa3Q0obhcY23zBlvudtqLY0M7J+e4U2RNz2
uJ93GxaFX606x0ah4sDKs6ep8ZBS5j07vJNCw2KPpZttiYf22vKbvxXD59Ou
OGfdjwePVaPqDLVVqOeF+dXi6t6Bkqj2zr5dFJrZIXlhosMdGPqtUnx+N4Xm
j/aZ/t+pO3C+m75Rx54KTWxcI29m7h2ouC5+xbreCvU4qi5u0TQB5t30S07s
o9C5N+b1Jk5OgMTfG1vW6a/Qxsa+7lYHEsAaHNbNGKiQrtu2CjeSEmCHW7cn
wYMN30d/5g/+nQDFsXXbfR+i0KYGD41MOyXCwH8+bxk4XKE2NS8s7TozEc4O
eJTpNVKhxPG6XRZeiVB+R4jyYrRC3tNfVqlOiTAr0WN327GG3y99Om9UaSLc
rjg/f/V4hfq1S1vas3EStBg6qPvtiYb3GXvgV6ehSbDZo+UBM3uFMjfl7PJ0
TYK8FKOSKQ4KdZia9yAqMAn6VH/RN2iaQqELLQaYP0+C06Oij3yeoZC7U9S5
OpXvwt/9hz/2maWQa+Bq55a978K0x6uGeM5R6O6CWLi88i7E1B7rl+Gk0NSa
V2aoIXehyfhO360WKGRfGmDW8M1d2OBbbcxyZ4VMwultRrt7kJ1eEhSzWKHt
zSLGFS+9Bz0aJBlVWaZQzi+XG+E37sEx+3OTJq5QaOQ4q7/BlZLhx7EtYf6r
FLr9X2bSoGnJYJ8zveIHF8P61thW5+21ZLjetNeMnmsVGheTfdGkYQrUn9Hw
2s71Cv0y7Vzvv80p4Or31ezpRoU+t9fyG31MgfT8NCeLzYb7Em7S6KHTfehi
eRkXbVVoScWYHKfi++A7Z1+9G9sVqrhhxMROix7AlwDnJRV2KjTlMHot+fUA
xr8akmi3WyHnCi5ls7xTIbKNdbNTewznr+OTXL+GD6HOwvIub/YqZGH3durJ
JQ9hRXDegy5eCq3o2iq9292H8PhdTKttBxU6dWG+2RbrR6B0PL7xoY9CEU1K
/m7a/Qi8lq551viwQk8SN1zrUvYIPoZPsJl/1FAvFrgPCpr2GEZ/UndcOa6Q
30m/M8mpjyFMq/mi3CmFtn3peM534BMwW11qO9JPoUDf0nLf8QksvprsedTf
sH5le4bm9E6DB9+CiorPGe5r03HfWselQYfuO3qpQQp5dru//uaQp7Bn3Syf
TRcUmu5dbfTKp0/h7c0+75KDFboS1z/Jas4zGPanycD6oQrdKjE18v/2DC7C
z+Ozww3r5xKben1fOlTe/PxzWIRCl7TmC9S2z2FB3JXhv68oFNnn06u0xOdw
95+DZ4dcU6jOb9w1fV4GtB649JfPDYUer571fn+VTNi5Y8S4/JsKfRw5dl7L
8EzQJ7YNtkHD5yOqdHswKQsGV6pYfl2sQnVn60oGGmdDwNCiKYm3Dee//esj
PS9lg8meuIjaCYbn3ZM3ynFyDsy5f6rKjCSFjma7j51T4QXEV98wK/ieYuhv
L7eWRbwAy9H20d9SDPfPflnYlZkvYatXl9oDUw0/t5v1Pdg0F/If11no9Uih
+Fmf/hk4LRf61SmLy3liqK8zz49zjcwFv/GpDds+U0iZ7Lq8ceU8KHcoePnq
5wottb7WzXR6Hsx4vuteXKZCvu3GVjCLyANs4NTCLMdwHzZdya5cIR+aTRmw
dspLhbxqD/J6PDEfNh63eByYp9CA2p1Lewflw4ucP20+Fxiep55Lepuv+dCr
WfbmPsUKPRx3yXnxgAI4PuN6xp5XCpmb3lv+el8B/PLz1WWUKNTKwfema0YB
TClYscvqnaH+9Ntt/7N5IURbjslb9l6hEeMyn9nNLYSGc226xXxUaHmX6m0d
zxfC2sAqXpU/K9TL/GuL6iWFkPHq1asJ/xnOr9E2l16ti6Br24Q+/t8USkn5
/Pj5rCI4vND/8PsfCiU1WZJ373gRfA12+9Djt6G+w59JRk+KYELp1H93/lVo
clFlo3kViiGqY4/TaeVUmmvpEF7WuRjMl9X/1ry8SrE5UVMPzi6GVZe/jFpU
QaWsoVoV2FcMaZ8eB16vqNKixQsfv40qBs027K9JFZWOP/DI8MkqhoOrPSfa
VVPJseLuEba/i6Hs6oLQk2YqWbi5TU5qpAe774NN39RU6fIlp8Yju+ghvLvV
9C51VPLtP/RE4ig91FhvfHVrXcP3RzeI6TJHD0tvvaz+sL5KFYIHd/B30UPq
n5tzGzdSyTtk8IQa7nro2OdozLwmKrUMaTzG/aAe9m52qXulmUomVWo/qnlC
D6Vx4xaXa6FSq2mJtaL99TCivJIwwlKl6+cO3d0XqIfggWZNj7ZS6dXio1VP
BumhqvvbVcWtVQq2su3/JUAPC5Pu3lfaGZ7Hcl7NgDN6SK4UaLWpg0ohroX9
447poe2wbRuSO6r04NCvaIcDeti1Z+bTeopKK/03Ttm1Qw+v7/fuMFtT6U7r
bR8cXPXwr1nj7WGdVQpP72PxzkkPQaO/Z//qqlLvUekTR4/Xg+mBZ9qQHird
/NE15EQfPcx9ErHHp5dKr+vWyXzbRg8JdbwK80ClahMf1Z9QUw9WExb3tOmn
0u0xfo3K/iuG7YeGea8doNKt3MOfMjKLofB567cJg1Ta8z3zd6tbxTCgYYUB
tYeoNLrHg9SyE8XgP6Xg2PRhKgVscGg5cUMxGJ+gTxdHqORcr8ftRVOKwfHF
iWHfRql0aHwPl9FdiyG22Tr/AXYqNQ7x/1C/TjE0nznp5/5xhv09djAqt7QI
3M7Yjs2ZoNL80FW1YpOK4GVBrYttJquUPm77r8d+RQBWH4xXTzG8T9SSih3X
FsHJufft46Ya3t+rgd27MUXwJ/DC5eozVHJ67bPAqk0RTH3tXnmKo0pudR0G
lv4thJtt5zgGzlap4eP7VtOeFUJj5343Ps017OfE5p67gwth3aVmtfrMN+xH
/K3WO7cUQmbpr/l7FqrU4q1t7IJJhdC9U2bs80UqzTmS3magTSEcWXa1gdVS
lfITquralC+E75e9ly1bbtjf9T5e1pkFMOnzsru3Vhr27+2twlFhBXDNdpRF
ZReVpjwP9gnbUQD1XNqvmbBGpXeT9U8nTC2A1dcqPTqzzrA+qa0OjtQK4Nn3
4tbvN6hkdPf44jNVCsC2R7xbDzeVjp7GK1MK8sFnvd9z9y0qhSV2rrglOh8+
39rYKW2bSut6rVnV2Dsfxv6dsrO5u+F9k0ca+l8+RPTpluu8S6W/3vk9Ywfl
Q60tdbte91DJPH2536Pm+bD89qd9JntVGrm8U4Djzzx4VP6Rfsx+lX5eL6m3
8lkedBoUAicPGNbjcNTq8pfzYL+7x6ESb5UOvvX8W2NvHrxPmve+8yGVRkx7
edVnQR6Mqjxo8NYjKlnXNV7nOTgPQoa1PJV6TKVV5usrlVnmQTVPo6+NTqq0
1tKk4U3jPFj0IGfkvNMqZZx6+TE/NxdSzKIDIs8Yzquj69RpmAvtxxz+Y3RO
pW4Oq8wsT+aCx4FVE0YEqpRwJ6t/mw25UPLELuTIecP7GnlHOjrkwlDzThWK
L6r0ZW9Xn/geuXB+QrVpSojhPGxzCe7XKBcqHS65sjHM8LwP8rNOf3kJ8zIS
qyVfVmk23G4dF/kSkhqem1PvikqjPkS5pK54CdYOW27NuqpS1PaUryHKS9hx
Yrp52HWVWj/cYTz44wsoftFz0a9olTqEjh25MfQFDGze8M6/MSqtcXRv1nPR
Czg782tjH1LpPK1xmdf2BZT3T1uZF6fShSinvm+Lc2BWYXhKhzuG8zcvdn34
mRy4bbXPcm2iYX96es/2n5oDLZyc1yfcVal8duLBkHo5sCVoSFqtFJWGF7+z
in2YDXmvW7Wf/kClPpaL0u7tzIY+7cpvu/hQpd/ls8xuQTacds7L+vpYpTN9
Zph7fMmCv5di1AFPVWpatYZR2wtZMO39MY/96So1e9Py2f6pWRDTaU1BdoZK
s9LrH7hmlgVNlk/o0SZbpf1GV6yPUyZsiFAPrnqhkmmE6fauSzMh+3ONN7G5
KtV6uXHfnqaZ0LNzab/qBSq5W3VpciQ5A465JB+1L1IptGlkyQyXDPhxLags
QG/oHxc6e76yyAD7H9uHfnqtksec0pmdk5/D9R6zzsBbw3m7P2St3Yrn0GBD
nx8epSp9qBWyfVDD5+Aa08Tu+QeVllkWXmtC6ZD+98d5y08q9cvyiCicnQ5d
+j4vt+yLSsq1V7POV0wH3y1XJt/6qtKQYofXay8+g/9uHwiv9EOlFd76VfNH
PIPxJksrTfilUlujnzY7Sp9C5KARM8/8MZzHrF/VCvY+hTo7214vNdLoT+NY
OmDzFFbcNa3Z4x+NDtOw3UH30+BJ5aJ57iYaVb1nYdnVOQ2U4XH0xFQjG3Q+
Pb5yGhzwPFW/eWWNJve1GWEe9AQ+Pli/1LmqRv26RR/2MOi90TXsk65VN/y8
LPRrSr5BD47p0tykpkbmnltT3m16DGYH67iOqa1RTetXo42bPIbFaR9TT5hr
dMmn3OamNx7BA/NU65J6GtU7eLjihImPoMPE4E2dG2o0LmW4cvPzQ/A8vCt9
S2ONxkxMfT7rwEN4mzG3Y2pTjSxHWNpP7/QQhjca4N7IQqMn+pO93E6kwkUH
i5dOLTUy/ho3uGPWA6h88k/nSCuNZhdM6P++wQNY8DJrr1FrjX5pfc+9mHwf
7ja/Xjy8rUbNKix0bHQsBVo7+vY+0l6jzA9D0m/nJMNO/xW+RTYaDd/0yfo/
i2TQF44u1ek0Gvbmcnay0z0Y3Mpm0EZVo3mv855OC70LAU5VTt6z1ShwY8sb
id+SoML5V1/qdjX8/eOxv5sMSII5JXdGzOpu+P1Ddm9cDPNVfDv/c6E9Ndpk
Oenz69wEsFzk9vtnb8N6GyW226kkwNaQqeP/7atR9KjfLebtuAMF77tf8u6v
UdtRSyoezY6Hfrr6JnkDNbqYk/nRxjYe/JZ/cejwr0YLhzpV6rL/NpSLfBy5
ZqhG5f9zPRT7Lg5mfAmtmjBcI7MaKVVyRsQBdfacXWuU4XwUhZscCouFZq4L
bk4bo5F92d7O38xjYeP1wXUujtUodfp7zXwjwYsfls5fx2tU5fKQmJJHCL16
Gsf3n6TRi22nTw28FAMnNrxstN9eo1aW13NG7r0Fv2Jursh20OiW7bnBdVbd
BAejo8mtp2tUWR9+I2xmNET3dWm5aqZGeq+sCTbjbkDDrePWxc7SaMvQW72P
Db8Oa+N1T6rN1WhA6CWL8sOuQYaJWTv7eRotX/7MduWoq9B18NstAQs0Kowf
pPsyOQoO77ybWeas0aEpDfrtW3AFvt4NUGCJRtNafzUZsjkSJlbZtttjmUYb
p/fdbH0yAqKGz8xPX6FRbe8OdW1iL0Pdvb27W642nJ8/R6tOLQmHVamNDix1
NTz/U++pkQ3CIa3G99c31xr2u6j8wi6jwkCze9a30gaN9mTZV4kxD4WDByOO
jN+kUdm/YSXDjlyCsrT9H/02axQWGbGkcptgsKu7eEjpVo3qd5z6Rx9/AcIn
DvPrvkOjkV4xjqnO56Hmkdbfd+zU6PmUM2mBzYNgaabJmCe7DferT8e/43ID
4GGjgqBmnhr9rnm56tWL56DjVDJy3qfRtTWnoy5sOQt7T56YdM1LowLQl32b
7Q+lL9eGlffWqFvDtg5H7M7ACItJFcf4ahSFzY+NGuYHwY62M04c1mhF1ZmO
r0eehqpna117fVSjTrU/7HO6cRIWFr0363xCo0+7zIeUvTkOya3uO205pVGN
TdYbjJVj0HbeBXzgp9ErLPexxZ4jsPu8e71GZzW6cCN62KPvh+B1yewlTgGG
91ntanFkrS/8275fYkSQRpddPc79U90HghY1a2Z0UaPjLe3rbY44CKahv1YP
v2RY3/xes3YvOABOHzIeHA7V6EbjqVa+ihck6K62KgrXaKDb9wYNquwHqxXe
G3WRGnVVshpW03vC9shlzzZEGc4ndvP1e+YBhV9G2ty7ptHge/3MnxTsggFd
2u+oG62RVVTsfedqO8HftdILx1sauddO7LXGbgcY3yi2DUWNfljkrckO3waO
P297/ozVSKt8bvbitlshtqdf0eB4w+8H+MfUj94MFhs39vJOMHz+y8LgJEc3
cMMpPrlJGok/nGvU7V375P//M38e5fP891D+Hn8fyvfx86A8Dz8vyvPy+6C8
D78vyvvyeqCsB68XynrxeqKsJ683ynrzfqDsB+8Xyn7xfqLsJ+83yn7zeUA5
D3xeUM4LnyeU88TnDeW88XlEOY98XlHOK59nlPPM5x3lvPN9QLkPfF9Q7gvf
J5T7xPcN5b7xfUS5j3xfUe4r32eU+8z3HeW+cz1AqQdcL1DqBdcTlHrC9Qal
3nA9QqlHXK9Q6hXXM5R6xvUOpd5xPUSph1wvUeol11OUesr1FqXecj1Gqcdc
r1HqNddzlHrO9R6l3nM/QOkH3C9Q+gX3E5R+wv0Gpd9wP0LpR9yvUPoV9zOU
fsb9DqXfcT9E6YfcL1H6JfdTlH7K/Ral33I/RunH3K9R+jX3c5R+zv0epd+z
HkDRA6wXUPQC6wkUPcF6A0VvsB5B0SOsV1D0CusZFD3DegdF77AeQtFDrJdQ
9BLrKRQ9xXoLRW+xHkPRY6zXUPQa6zkUPcd6D0XvsR5E0YOsF1H0IutJFD3J
ehNFb7IeRdGjrFdR9CrrWRQ9y3oXRe+yHkbRw6yXUfQy62kUPc16G0Vvsx5H
0eOs11H0Out5FD3Peh9F7/M8gDIP8LyAMi/wPIEyT/C8gTJv8DyCMo/wvIIy
r/A8gzLP8LyDMu/wPIQyD/G8hDIv8TyFMk/xvIUyb/E8hjKP8byGMq/xPIcy
z/G8hzLv8TyIMg/yvIgyL/I8iTJP8ryJMm/yPIoyj/K8ijKv8jyLMs/yvIsy
7/I8jDIP87yMMi/zPI0yT/O8jTJv8zyOMo/zvI4yr/M8jzLP87yPMu+zH4Di
B7BfgOIXsJ+A4iew34DiN7AfgeJHsF+B4lewn4HiZ7DfgeJ3sB+C4oewX4Li
l7CfguKnsN+C4rewH4Pix7Bfg+LXsJ+D4uew34Pi97AfhOIHsV+E4hexn4Ti
J7HfhOI3sR+F4kexX4XiV7GfheJnsd+F4nexH4bih7FfhuKXsZ+G4qex34bi
t7Efh+LHsV+H4texn4fi57Hfh+L3sR+I4geyX4jiF7KfiOInst+I4jeyH4ni
R7JfieJXsp+J4mey34nid7IfiuKHsl+K4peyn4rip7LfiuK3sh+L4seyX4vi
17Kfi+Lnst+L4veyH4ziB7NfjOIXs5+M4iez34ziN7MfjeJHs1+N4lezn43i
Z7PfjeJ3sx+O4oezX47il7OfjuKns9+O4rezH4/ix7Nfj+LXs5+P4uez34/i
93MegJIHcF6AkhdwnoCSJ3DegJI3cB6BkkdwXoGSV3CegZJncN6BkndwHoKS
h3BegpKXcJ6Ckqdw3oKSt3Aeg5LHcF6DktdwnoOS53Deg5L3cB6EkgdxXoSS
F3GehJIncd6EkjdxHoWSR3FehZJXcZ6Fkmdx3oWSd3EehpKHcV6GkpdxnoaS
p3HehpK3cR6HksdxXoeS13Geh5Lncd6HkvdxHoiSB3JeiJIXcp6Ikidy3oiS
N3IeiZJHcl6JkldynomSZ3LeiZJ3ch6KkodyXoqSl3KeipKnct6KkrdyHouS
x3Jei5LXcp6Lkudy3ouS93IejJIHc16MkhdznoySJ3PejJI3cx6NkkdzXo2S
V3OejZJnc96NkndzHo6Sh3NejpKXc56Okqdz3o6St3Mej5LHc16Pktdzno+S
53Pej5L3Mw+AwgMwL4DCCzBPgMITMG+Awhswj4DCIzCvgMIrMM+AwjMw74DC
OzAPgcJDMC+BwkswT4HCUzBvgcJbMI+BwmMwr4HCazDPgcJzMO+BwnswD4LC
gzAvgsKLME+CwpMwb4LCmzCPgsKjMK+Cwqswz4LCszDvgsK7MA+DwsMwL4PC
yzBPg8LTMG+Dwtswj4PC4zCvg8LrMM+DwvMw74PC+zAPhMIDMS+EwgsxT4TC
EzFvhMIbMY+EwiMxr4TCKzHPhMIzMe+EwjsxD4XCQzEvhcJLMU+FwlMxb4XC
WzGPhcJjMa+Fwmsxz4XCczHvhcJ7MQ+GwoMxL4bCizFPhsKTMW+Gwpsxj4bC
ozGvhsKrMc+GwrMx74bCuzEPh8LDMS+HwssxT4fC0zFvh8LbMY+HwuMxr4fC
6zHPh8LzMe+HwvsxD4jCAzIviMILMk+IwhMyb4jCGzKPiMIjMq+Iwisyz4jC
MzLviMI7Mg+JwkMyL4nCSzJPicJTMm+Jwlsyj4nCYzKvicJrMs+JwnMy74nC
ezIPisKDMi+KwosyT4rCkzJvisKbMo+KwqMyr4rCqzLPisKzMu+KwrsyD4vC
wzIvi8LLMk+LwtMyb4vC2zKPi8LjMq+Lwusyz4vC8zLvi8L7Mg+MwgMzL4zC
C/9fnvh/ABobmQA=
                "]], {{{0.5635709042330459, 0.}, {
                0., -0.9999999999999999}}, {2., 3.552713678800501*^-15}}]},
             
             ImageSizeCache->{{107.88616546638292`, 
              122.87627156132484`}, {-83.67638553025199, -50.03005097770162}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "20.21529831832794`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "19.775155847230973`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "19.276760224232984`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "18.950453827818595`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "18.220941048411763`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 20.21529831832794}, {
               Style["75%", Bold], 19.775155847230973`}, {
               Style["median", Bold], 19.276760224232984`}, {
               Style["25%", Bold], 18.950453827818595`}, {
               Style["min", Bold], 18.220941048411763`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[
         0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`], 
         EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlYTW3092UeM0+RKVOGZO8tIRZlCJkyyxNKmecoCZWSyBBSiIhEKUr0
iKw7Q4hSUkQqnXMaTIUQHvz273rXev94X3/kOtc51zl77/u+1/qu7/fT1WGN
rVPNGjVqZKp//vd//mfTre1/dRpJQugVDK2n84Q5nmcO3G4sCZ9kX6/HLt6w
uGBAj+36khgfcnBrZHcfWGdx8/qwZpIA3epTMd98Yesx68nVzSVRI8pmYKMP
fuBf/aw4oaUk4jabmtVquBuOzFrkuq61JKyH+kPFlAAIT/jQyKSt+v15XVpB
yj6IbeF+6m07SXS8GGpocfkA3Fhbd1CkgSQ83s6LM2h3EO5nHHzo2FESp5vm
zTx79BBk9+ts36WTJBbfKbftaRYERbujP+d3lkSzfnn1a1ccgfdlg/2OdpXE
8YD39W/cC4HqsXc7zDKShJtn/JrUG8egTsTUyy16SOJrerHL+aeh0LzW69FP
ekqiMOeOX3mjMDBctCxvT29JvFkVc2FPwinog19XWfeRhGPrhjlvvp4GM0Pv
mnX6SSLcft7FlAlnwHKLfnBKf0kcsB+39tuVszAl71jfbQMk8W7hvoCJ0jmw
G9xLDB0oiV87ovL3pEbCkqArM75LkriUe0zrue4CuHyB8iuKJKz2dfrzSY4G
z2mPt641k8TVqpfuZ/RjIODSnBb9zdXf3//jxsyal+BoE9258iGSSBpV1bnY
7zJErFg37NwwSZw96jX96fE4iHv4+4nDcEn0O1nzhW1yPNzqtXtxZ5DEvtZn
2iS+vwJpvm1+vBopCUv99z8m9bkKuZrwvSGW6vtjU50dN10DzagB3WaOloR/
xp95w7MSoSLsxrXmY9X1+GvwvPmw6/Dr97iJGeMkcd6+4kvHhCSoP/9Z4e7x
kjBbZv9xn8VNaJW00GXcREm0TZhkfuBZMnRp96F+7UmSkNvf7jrOA6H/ps0n
xGRJrLpg4lB0VMCQZ3WkrVMlkTs6qqnf1hQYIx1MHWIriY0TPhoZLLsNtgc6
2X2bLomqAc09g+ffAfuPURXxMyVxt/C/Nd9n34XlNoN91syWxIyeFWm97O6B
a9Sddv3mqtdz8vp/bZxTYUf9qTFl8ySxJ629HO12H/Y754+KmC8Jp6wBPncP
PoDQu0tzF9lLIrqXe4ZFwkM43+3r8k4LJfHQoGFYaX4aJHh6/X25SL2efbe3
Hm78GFIKmhwOdpREaWpN6wZW6ZBucaz3DCdJxHTruLKWZwbkHeuZ3GyJJEa6
jHtrcecJlFTHT0tfKolDpiajBu3MhM+zoMR/uSSCnKwiQ/tnwZ+ER+5jV0pC
cUhve/55FjRqOadprdWSuBg/obqXz1Nou057BtdIYs5B6+vlUjYYPVlr7rFO
Et3rhFQmarLBtP/vx+Yb1OfzMNF13pFnYLHHf9FXF0lknXHad2RCDliXt/4W
t0kSqytG6Q2okQszx4XvXu0miXll46u113JhUYRJ577ukigodCzdtPo5rKp1
40rpFkm8nvjubFjPF+C+aJz12a3qftnm06hD4QvYidn5C7dLImfC6/XhwXlw
0HDhOkMvSSw9+bzqw5SXELblfZ2X3pJIN6mOTqj3CqLz3I4d8ZHEkOwhVRdv
vYLEwXUGTN8piWmFn2MCXPLhblDgnaa7JLG7xMW7gfFryPxiOOexv1ovvjTs
k/fqNeRPi3q/a48kru36Fh8XUADll8y8xuyVRM+79R+OH1YIX5vcaV1zvySa
Rq//Pae0EPRWTom6dUASA9vK9Wysi0A/7dWILQfV+1+7y3HR8SIw6L00e/Bh
SZhcuSc/fF8EPXdWLakKUs+ntesbB4s3IGs9/7scLAmbdQ/C9He/AbBsErjq
qCTCZs+4H5PzBmxOHe3R57gk9HSdmht1LoY5f3oklYRKYtjr4Qm2zsWweH78
5DMnJfFngc6rW3QxrE0aoVlwShL7fS793fyhGLa2e+TaMVz9vfQf2y37a8B/
0+zGeWckEeVnZr5kuQaOPNOcCoqQxNjYljNzzmogXFo7yDZSEu2fz2/ska+B
2AP/PdS/IInefl4XbZprIenjLvtHUZJYExhzYaiVFu7btP7id1ES82c7nR+2
XgvZUaf9RsdK4mfHUN9xJ7VQVN+ko95lSazUg/lz7mvhvXPS5eQ4df/5y7uW
f9BC9d2xY9yvqJ///vicRzMd1DbKzjO7Kon4T3h4v6kOmnstWP3lmiRGfwlb
dm6SDgwL39W8/K9af7t9W5u6RAd9hrsFr0ySxKaLtbt+36YDs+O1+xnflMTa
jZOaWh7SgeWPA0KXLIlAvW/F8Wd1MGW24cxwlITX3h5jZl/Rgd3VC+X2Ker1
v/B4MgJ1sKSl2bYOdyRxx+1htfsDHbisu93ixV1JTPBrV6PzEx14PpkceThV
rS81JudCtg4C+r8aNu2BJHq5Lalb9UwHR/csyWySJokPRwNDp6uvI8q/LE57
JIlbC8wbu2XpIG6c54+d6ep6tx/a2uOxDm5FNN5n9UQSH1s6nd9yTwdptY52
q5EliTTNTMfDN3WQu6hH4s2nan2b9NRbE6cDDcZN3PxMPU8j5ft+ETqoMBxR
NChXrS8xD1ucDtbBry1pLp+fS2L97gY7pu7SQf2XsxpcypPEl862Y6+66qCV
uebEilfq+v81Uz456aDLkTVS79eSKK40y+gxXQf9q36lagskcdQhPtkFdDDE
dpfd6SK1n7m73P7bRwdjLreq/KdYEp8njQ8pa60DW/3TPgZaSVwYO/b11Bo6
sF/Zv/1znST+WZZdPfetFpanXY85VKqex3CvWj2eacG191jLqeWSSExMvPQ0
WQs7dj7NbfxOEqmGw+UdkVrYr7Vf8fC9+jxPRA6cFaiFUMt3f30/quf/bGzk
8i1aOH/K9bBlpVqf+jo9L3DSQsKfWsZ/P0liu/XcQZlTtZAy/0DyjS+SSDEO
nmVnoYX0pI62bl/V+pa4p/B4by3ktbtQonyXRCvl9oaLrbVQsmnQlk/VkjC1
dj13rpYWPj9LaRr7UxJXlv56F/5ZA3+kyWeX/yeJIqOCPf8Wa6BR4EvzXn/U
9Xnx6tDvbA20rXBO1/xV6982v0c7UzVgNOnLolN6sjDxiTq/JEkDptHbv82v
JYu9C2eOjr+kAYsGjfe0ryOLtBGhU13PacB6SUjn3LqyKGj5n37qSQ3MvNc9
4WB9WfgHOo27GKKBRUZx1lMayuJk6HswO6yBVV7DXzdqLAvrUR2vrg7UgHvh
w3UPmsjC3rfyqf0BDewcPquub1NZXCh3M9FX3z94vPjYqOay8C3qJbwPaSDs
x+oBf1rIIuzzswIRrIHo2b/uJLWSRUy827BHJzSQeNVvjmsbWYz6HvU6PEID
d1u2+iC3k8WsZh+6jFOvP3PdKa/K9rKIe5wWf1W9v/wn/drEdJDFQsOCwLf3
NVDe/3rUMkNZ5HxJaVKUq4Gve8ZAz86yOBCk92BfqQb03mZlF3eRxbcGLa59
+KEBfWv7pWHdZDHc1bH75yZaMDj39j+77rI4Zh6StN9ICz1ruwa26ymL9P4V
nv8O1YLsUKtnTi9ZZA79WDJ/uhZA7E8KNJbFH6O5j1as0sLETh2nTO4rCyzd
7vt0lxbmeJzXNOwvi5IVHys8IrSw+KXidt9EFjse+brMvKOFteYpjX1MZfH7
cR2DMcVa2Hpk0umRkiyqGzY6JNfUgX9V3qDfsixe9PaZXM9IB0G2zmnXB8mi
XsOT/hGjdRB++bP9psGyGODW3fGzsw5i9bd/kYbIQq6aVpnpr4OklY12VQyV
xfNTdacbxejgflpwx4sWsgiaZpeVlqmD7N7d45aOkEW3HO+PkVU6KNx5eUyP
kbL4Elzmc6xdCbzXWrx8M0q9fuH2xsuiBKotH64+aSWLG99/FlosLIHap2fW
shsji0Qj5/pRO0qg+d83wW3HyeJIZLOYyHMlYPjP6n7PrGUx//uJBq0eloDx
jZ/iwARZbNL6OaS/LQGz9n4zJ9nIIiS6c4/4RqVg6drybYPJsmhzraje6b6l
MDknbFvqFFlsMPrQZ/OEUrCT+7XcMU0WZ47sNjdYWgpLAv+NhOnq/l3n4rvY
pxRcKkZb/DdDFs/OPzcdElYKnpOyMv+dJYv3YY+s3P8thYDof5w2zpFFF7lD
ZsPMUghp8PbHwHmyiPppqv9EVwoRSzbt+2in7lfzn5sv/iiFuHs1jaL/kcVt
/8Mf/RuVwS2j/YlLFqjrtf24mNKhDNK8Oth0X6Tu5+j3uaW9yyC3MLKoyEFd
r3lJKcOVMigermw8sVhdL8f7T0YML4OK46LBPGf1fMae7/rSqgx+/bA52Wap
LAZWv0uqYV0G9efkSdnLZBFvVDcwYnwZtLrmdH//Clm4ZnwMTlbf79Lqs53N
KlkYTbR9DGPKoN/6bZX118ji46uxw3pAGQzJbOh7b60s6lRsrLfMrAzGmAS3
916vPq++sSvq9y0D2wCj2BEusnhp8zyppmEZ2L+9ZPlroyzmNRnzz9zGZbDc
2uJ5oqssSm8uf9RUvX/Xcw9WuGyWRS2Xr759NaWwo/bMGgO3yKJKnt0oIa0U
9ju8OfzBQ72+/Vlp8ZdKIVSsMo7apj6P+Bat5YOlcL7Tz2RnT1kkJ29paLm+
FBI8dtoaecsiYEFfv49TSiHlZYvSwh2yuOf0rvF4db3TzcO2hPrKYmKgUbRj
7VLIO9K32Vw/WaTO+K6d9qoESqoSz7b2V9dzaGJQ78sl8Nl29JCnu2XRdntW
9m/vEvhzOTN9X4AsdhateVo2vQQaNf3HYeI+9feLP6foGZVA21Xl3+odkMXU
7R6XFlXqwOjRxj13A2Wx63ayYze135ka1+zidUgWbppho+x36sDCb1/C8CD1
/BhadjOdogNrncH4n0dk4V161exKGx3MtIp8fS1EFh6NaxXXfK2FRafl9RuO
yeJu2oyjQ8O1sOov1jUNlcVyZertjc5acP/H5vj7E+r1vPM++MRYCztvvBhw
IUytP7cSKxzeq/WyvdNdp9Pqel1fOG1CrFovXT/N6XZGFn3bjT4Ttkatlzlb
PxSclcWgrCPGHqZqvZQbeh8/p9Y7cdG5urIY7gYeaTPnvCxODHas2S+uGDIr
ukW3ipKFw+IlV/qvK4b8SZcgK1o9z2s39Wk5sBjKo4c92xsji6WL4v5WVr6B
rw0eLJ1wSRatnhmEv7z8BvSWzvhdN069vwtTxxevfQP6qUWBd+LV+rBuf3m7
gW/AoPuqnp4JsjA/tLHLvk+qvvT+kWRxTRa9y7ofnhJfBHKR75QfibJ4t8Qv
a8WGIoARLbRXr8uiZeoD5w9KEUwMPem2/oYs3jbx/Pfmh0KY87NPkwHJ6vly
7rEkcH0hLJ6TePrdLVm8CpL2O1cXwNprVmbnhboeEUlnrLcXwNZWmWmLb6vn
Pb2N+ch6BeC/fv6CrnfV+pH9umr2gdcQlFn25fU9td7dreh7yOA1hJts3HXs
viw03aRBVRH5EBugZzj7odpfNuSe3iLlQ9LbvXEtH6mvTa3KjMUruG9tMDbz
sSxq/2yy9efkV5B97tzLgAxZHHrsvris4CUU1pbXjM9Ur0f/Vfm7NS/hvQPW
qvtUFus7B7b+q/cSqsXEkNvZ6mt1gmgXlAe1O7/otz1HFlvKO13vZ5wHzbcu
Thn2XN3v+zb2G3jrBRi+qpxZ/ULtN/l/rraf8QKMh2x9m/BSrU+rnF7kvX0O
ZsENtq/Ll0XjRg+uLPZ+DpZfg1qaFMjCOPS1aYzBc5g8vdv5t4Xq97fQ63vu
Si7YxcVaRL6RxcPm+SGWk3JhSdNhWY4aWTxdtuLKxtIc2LDqvlMXnSyeTDLs
IHvngOej6T/zS2RxamPGz9WGORBgXLTvaJn6PD+t7d3p+jMI8VtpNOutLIId
+luZzXwGEbrqxBbvZdHOJycj5lM2xFn52jz5IIs+Q3xtPPZlQ/Lp5m/2VMhi
5NeZU4/1zYa0vyc2Wn+SxZ4c/cN6D59C7j99Gtb5op7nFbfrxjg/heIb106m
VKn1MmNaXkjtp1DR3kre9k0Ww3489bsdngW/XJ/cH1qt9quTZZG9RmVB/Vy7
+d9/yGJCz/XH0wozoZVSVnnl1//qGfPBF7dlQpeDLr5rf8uic0nkiwzDTOhX
WcOg/19Z3M/9ZrLK/QkMmbw3tryGIt7dGHMq63oGjLnY3upcTUV4aidJL36k
g23Dc88daisi9tOclQeGpoP9Umll57qKyOwa0Lyxx2NYnnqrRn49Rfg38ftj
f+sRbOo+MSikgSI+WjWsCNV7BDu8nxvPbKSIH1XL84vGpMH+IsdbzZso4prv
kHKrPQ8hdESlbYa+IqzGmrkXZj2A86EepbubKaLg+uLNT9o/gISf9T3GtVDE
WAfLAlPH+yDmBDWr3UoR3W98du8amwrp17pGiNaKWHnqwQP8eQ/yWsUO2dpW
EandQxL6jL8HJeuHZgxpr4hze81XeB29C58zUx2+GSjCsN2xnpp3d+CPyfTv
8R0V4eWY8Wv1yDvQcG/hnjWdFOH2Y36UVfBtaPtuRZd+XRTRZ+PgVdsrU8Bo
fHVCWVdFbJ93LB1sUsA00md8hJEiynK6uJ2OEmBRp3nBoh6K+NW5b3NsJMDa
8cT6Tr0UcbXy/UDnwlswI8W43qveivCNXb9IiUmGRZ2vHQ/uo4iQgNx+Lb1u
wqqtlqYz+imipWNC7QF2N8D9VcbdZiaKGHnhcLO4YUmwc4jd3PQBijjuv7Qm
drsOB4NLP/gPVETA+rhK92b/wsmvG7zHyor42XDe4Fp1EiF6eo22tQYpwueG
+YL1Na5BYlxANJopYtqPno0La16Fu03bj/QwV8TUkQGf7BonQOaqiGfmQxXR
YKxp+veOVyD/0cBlX4cpop2L4dJkJR7KjG/9jhuurpfZ9BNXpsfBV78JB1eD
IpJ7/nV6vfky6JXk9uw7ShEms/JyNky+BPqjHW+UWiri1pTzg/wTY8AgvGLK
2dGK8Ottt/utyUXoWcNDu3CsInaJks9uCVEg29ffbGitiIzVf4d0tb4AcPNw
k5fjFbH82isppTwSJhp0DT8yURFXYjab9j56Dua4xZhNn6SI65q2j3vMioDF
uUMeNZ2iCGcTc9mny1lYq6QueDxVEdPDAnfWrw6HrQdtq3bZKqJDxOVhG/JP
g39lwa4xMxRxqmqHp2f6KQiavMKw5ixFvPEaPDIrKAzCL36PuzVbEcYXs56I
8ycgtqHP2C1zFXFg49n2cvZxSFra7NVgO0V0yqrVeWerY3A/NXRN1XxFhB6L
HNFyZQhkdzeuHWeviIQaN74NyDsChd5XQ1YtVPe/a9dwE7sgeF80qn8fB/W1
VRPTBZ8OQfWIjJQSR0UEl3fIaXr8INQ+MW/WGSdFbBs+5ure2YHQ/FfJ2wVL
FPG3Ts2dPXoeAMO5G7Z3XKaITUMnT7VuvA+ME/+2zFuuiPL0FutjP+wBs9YB
54NWKuLxg0PLmlT4g+WGdsNtVyvi8KDMAX/1d8HkrLNZ+msV8aXm6ONLbXaC
3YCBzo/WKeJmxtKrDyN8YMne5J9+GxTxx9r2Snb7HbDh3fj9ozeq368J9RkR
6QWe43ON9FwVUVVQqBdm4wkBkQ7/Jrspgv3mkDoVNu7u//9r+jzy5+n7kL+P
fg/59+h6kK+Hrhf5eul+kO+H7hf5ful5ID8Pel7Iz4ueJ/LzpOeN/LxpPZDX
g9YLeb1oPZHXk9Ybeb1pPyDvB9ovyPuF9hPyfqL9hrzfaD8i70far8j7lfYz
8n6m/Y683+k8IJ8HOi/I54XOE/J5ovOGfN7oPCKfRzqvyOeVzjPyeabzjnze
qR4g1wOqF8j1guoJcj2heoNcb6geIdcjqlfI9YrqGXI9o3qHXO+oHiLXQ6qX
yPWS6ilyPaV6i1xvqR4j12Oq18j1muo5cj2neo9c76kfIPcD6hfI/YL6CXI/
oX6D3G+oHyH3I+pXyP2K+hlyP6N+h9zvqB8i90Pql8j9kvopcj+lfovcb6kf
I/dj6tfI/Zr6OXI/p36P3O9JDyDrAdILyHqB9ASyniC9gaw3SI8g6xHSK8h6
hfQMsp4hvYOsd0gPIesh0kvIeon0FLKeIr2FrLdIjyHrMdJryHqN9ByyniO9
h6z3SA8i60HSi8h6kfQksp4kvYmsN0mPIutR0qvIepX0LLKeJb2LrHdJDyPr
YdLLyHqZ9DSynia9jay3SY8j63HS68h6nfQ8sp4nvY+s92keQJ4HaF5Anhdo
nkCeJ2jeQJ43aB5BnkdoXkGeV2ieQZ5naN5BnndoHkKeh2heQp6XaJ5Cnqdo
3kKet2geQ57HaF5DntdonkOe52jeQ573aB5EngdpXkSeF2meRJ4nad5Enjdp
HkWeR2leRZ5XaZ5Fnmdp3kWed2keRp6HaV5Gnpdpnkaep2neRp63aR5Hnsdp
Xkee12meR57nad5HnvfJD0D2A8gvQPYLyE9A9hPIb0D2G8iPQPYjyK9A9ivI
z0D2M8jvQPY7yA9B9kPIL0H2S8hPQfZTyG9B9lvIj0H2Y8ivQfZryM9B9nPI
70H2e8gPQvaDyC9C9ovIT0L2k8hvQvabyI9C9qPIr0L2q8jPQvazyO9C9rvI
D0P2w8gvQ/bLyE9D9tPIb0P228iPQ/bjyK9D9uvIz0P288jvQ/b7yA9E9gPJ
L0T2C8lPRPYTyW9E9hvJj0T2I8mvRPYryc9E9jPJ70T2O8kPRfZDyS9F9kvJ
T0X2U8lvRfZbyY9F9mPJr0X2a8nPRfZzye9F9nvJD0b2g8kvRvaLyU9G9pPJ
b0b2m8mPRvajya9G9qvJz0b2s8nvRva7yQ9H9sPJL0f2y8lPR/bTyW9H9tvJ
j0f248mvR/bryc9H9vPJ70f2+ykPQM4DKC9AzgsoT0DOEyhvQM4bKI9AziMo
r0DOKyjPQM4zKO9AzjsoD0HOQygvQc5LKE9BzlMob0HOWyiPQc5jKK9Bzmso
z0HOcyjvQc57KA9CzoMoL0LOiyhPQs6TKG9Czpsoj0LOoyivQs6rKM9CzrMo
70LOuygPQ87DKC9DzssoT0PO0yhvQ87bKI9DzuMor0PO6yjPQ87zKO9Dzvso
D0TOAykvRM4LKU9EzhMpb0TOGymPRM4jKa9Ezispz0TOMynvRM47KQ9FzkMp
L0XOSylPRc5TKW9Fzlspj0XOYymvRc5rKc9FznMp70XOeykPRs6DKS9Gzosp
T0bOkylvRs6bKY9GzqMpr0bOqynPRs6zKe9GzrspD0fOwykvR87LKU9HztMp
b0fO2ymPR87jKa9Hzuspz0fO8ynvR877iQdA5gGIF0DmBYgnQOYJiDdA5g2I
R0DmEYhXQOYViGdA5hmId0DmHYiHQOYhiJdA5iWIp0DmKYi3QOYtiMdA5jGI
10DmNYjnQOY5iPdA5j2IB0HmQYgXQeZFiCdB5kmIN0HmTYhHQeZRiFdB5lWI
Z0HmWYh3QeZdiIdB5mGIl0HmZYinQeZpiLdB5m2Ix0HmcYjXQeZ1iOdB5nmI
90HmfYgHQuaBiBdC5oWIJ0LmiYg3QuaNiEdC5pGIV0LmlYhnQuaZiHdC5p2I
h0LmoYiXQualiKdC5qmIt0LmrYjHQuaxiNdC5rWI50LmuYj3Qua9iAdD5sGI
F0PmxYgnQ+bJiDdD5s2IR0Pm0YhXQ+bViGdD5tmId0Pm3YiHQ+bhiJdD5uWI
p0Pm6Yi3Q+btiMdD5vGI10Pm9YjnQ+b5iPdD5v2IB0TmAYkXROYFiSdE5gmJ
N0TmDYlHROYRiVdE5hWJZ0TmGYl3xP/LO/4fHhKZhyReEpmXJJ4Smack3hKZ
tyQeE5nHJF4TmdcknhOZ5yTeE5n3JB4UmQclXhSZFyWeFJknJd4UmTclHhWZ
RyVeFZlXJZ4VmWcl3hWZdyUeFpmHJV4WmZclnhaZpyXeFpm3JR4XmcclXheZ
1yWeF5nnJd4XmfclHhiZByZeGJkXJp4YmScm3hiZNyYeGZlHJl4ZmVcmnhmZ
Z/5/eef/ATDBIg0=
                "]], {{{0.5489751145077729, 0.}, {
                0., -1.}}, {2.9999999999999996`, 0.}}]},
             
             ImageSizeCache->{{119.8200700696688, 
              134.76289592529338`}, {-80.81775456089304, -53.89759024369722}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "19.929264684523947`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "19.47725226980785`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "19.19907020746003`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "18.73689249115289`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "18.632926582126405`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 19.929264684523947`}, {
               Style["75%", Bold], 19.47725226980785}, {
               Style["median", Bold], 19.19907020746003}, {
               Style["25%", Bold], 18.73689249115289}, {
               Style["min", Bold], 18.632926582126405`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[1., 0.7215686274509804, 0.2196078431372549], EdgeForm[
         Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlm2lYTW/UxlPIECXzlGSeYu99MmtlnpNkJkkZQpSQDCUyRNEkQiJjFJWi
+rMeRRkrUaaQSpMhZFa8+72utb68ry+uw+mc/UzrWfd9/+pov8raUVtLS6u2
jpbW//7Nf/q8H4T120kifkLy2w+jvKH91Oh6spEktlxG2wW1t0OjRGPrOcaS
aPDo0Zimb32gpk3wYW8TSdz94WvqWrYTPnjqvo3qLInY+yW38/R94WWxh+mj
rpLQ/eVo6jtvLzwY/3H9n+6SyBir9xmz/OFazMIbnXpJ4kPaO53xCfshumlu
g0l9JDHrcvCkvy0C4aj7OBu3vpL4+GxB3gq/IPB7mXL0iCSJfo+dl3xsFQKb
R/QtvalIwr1L5MyMpAOw8syJfh/MJPF72Z1FnVcfhPl6LTyaD5SEQeAJ31ZD
w2Cyy+60YYMl4bF+5u+w9kdgWF613uKhksitNm3u0ywc+gxZPcPfXBKV7ydO
GGcQAe0jio4lWkjCb9HLsijj49CozszyVyMk8fyfU/suQ05AzbK7su5oSQTV
mrhlwYJI+JA5bFPfsZLY8WpIVeXek/BSib01c7wkDgzdMm522il4cLCzvtdE
SfjkNCxpoH0GrtWEzjo7WRIP1xVE2407C9H2DU9kT5HEUd8anciQc3A0Y8u7
n1MlUTvNTVu3PAr8en/RdLSRRHSS7YuY4Rdgc4DjlvEzJPFnZ2+nqPBoWPn9
aYbLLHV9uo789uNvDNjOndQkbI4kYhaY7E/tdwksBc5JnScJm5gVugcLL4F5
F+Vkha0kzDaHznUIjgVT39MfDBdKYmKGo7R7dBwYVbYeMGSRJPaV5Ubbf4uD
xjZ+Xosc1fF08lk4LjIe/l7VurtniSR+pY8Z6295GT62d2t6eZkkTN5oP/b5
fhleeZfOy18uiT1Pzzb3DEuAzNI5p2s7S0Iqxld3BiXC9UmZlb1XS8LctehP
4qNEiIkdPmi6qyTGDhy9+tCSKxDeIsF7s5skzn83Scz4egX8N3a/f2qdJLo/
+/PviMdV2FJwuHmmuyS8wget9/h5FZxH6y/47iGJpE9f3W6vTALbKO+zRpvV
79PfGPvjWRJY6n//PMZTEiuXjF7iPTQZzN2WDVm1VRILavdc/CE4GUyf5W8P
3SaJxFvRTe8UJoORuVUm+khiTbL/9LguKdA4Mq1l2U5J9B6fu2ja/BT4qztg
oYGvJPTG1Hg67E6BjyuiogbulcTVR033XTiXAq8etv9q5y+JLi9+B9e6ngKZ
/QOG7d4vCf9H8/XHp6fA9cO1d8YGSuJd51F93VNTIEbLPftZsDofcuCnoLgU
CHd811o7VBKXd0r6sQdSwP+u7aKeh9TPN631vMo5Bbb0zblgfVgSHUxbFu8b
kgLOwaO/exyVhHOvESEZ1clg++sqRB773/PQ7vC7uGSwtO29+95xSWgH2g6d
Y6uOP+1YTlWkJGyt1u/f8i8JTLs3bdfutHre01OOZh1IAiO/HY6jzkoi//pd
u6zOSdD4y6+YFVGSeCZ+Yv2oq/B3xsqfwRckcSf8/sqm3a7Cx5SC4ddi1Pm1
S76268gVeGVss+ftJfW1oaOzXsMrkOmT8bhRvCSMX1xfMWaNuv4Vg436J6jr
k7IwqDA3AWKmxCyxvSKJkzmuy/YpCRB+uWPsjiR1vs0ti6v3Xgb/1iG/Y1LU
+YK2fV8UxsOWLfVGPbmmvjax2PjMLB6cizb6/UN1Pepuyj+5Iw5sx1XmdUuV
ROeNilKaGwuW0fbGVjcl4XtnaLcxnWPB3DBvmXu6JPrmyGb2rpfAdP34+Ijb
koBdbQclbL0IRvn/Vd++K4ns/gfcNxjHQOPh/cZ8vi+JhUuDJvZIvQB/T0Xu
a50liR/h5g55S87DxwYtnw1/KImw4ok2aw2j4NUqXxOnR5JYapJm/Sb1LGQ+
rlkemCuJx1O+T67acAauD3JJSH6ifv9EDzengachJrz4b+EzSfR8Xnnwy9+T
EK4za1zDfLU+6i5u3zkzEvyX3gtQXqnnP2BZxa7TJ2DLA/MXcwsk0f5if6+g
XcfBWY7rvL1QEoU5ATcOuEWAbWgX5wvFkkgeUPdiZm44WFYfvPK4RH2enHsv
fJ8cAfOFerVqyiRRV3Fsm/IxDEzTPSd0eaeuz9id1R5tD0GHXlVBkz+o9epc
3bNf5oeC/v7FL9dWSuLSe8MvRokh8O/rs67hn9XzuebIv7JOwVA5e/Lq9CpJ
1DqcH979TCC8vi6SPn5T6/PVRfquEABZnTQ6LX9KYvv9mVo/n+4D3HVmEvyW
RGaPxfsT5vrBxQ9tDiyplkSBidmLHnX3wDFr/9f7/kpiREykndeTXbDvSq0e
V7VkcXOQ+5nhmTvAs91a1wJtWdTvZ7LVqXw7rNpallKvjiye/Oxqda/bNlhQ
MreOpCsLjzUBi/rs2gpTJmZZzq4viz2WhvGz63sBXBpxcGtDWWSUjvg6yGYz
9G2e+OZcI1mY3lg1KzTHAzp49OiVoy+L1HVDt+3Z4w76r4+4/W4ii7OKWfLX
Tevg30iD6ybNZFFvzO8DeSfdoPLsNt2JLWSxdsPEa3a11sDrRj+s1rSSRY2Z
2aRv+10gy9Up7HAbWUxyW9lqkPVqwCcvi9LayaKZq51Owi5nuDh0ap/3RrI4
7RDVLOjeCjh2/Oa6Zh1l4e0WWbN9xXLYV3egGNpJFnqji5f+cXICz+Xn6zt2
kUX8O+m6QcYyWJVtNM2vmyxCdk3zDNq6DBaYBR5J6CGLMVPy9048sgymhNUp
edlLFl4ZKVvutXYC+Ofet66pLAoGdX4/stoJ+jq8dzftJ4vX3QNOW4xbAR3u
LEidIctiaa35285rO4O+6aOGnhpZmJxr7RrTajX8Cxwz/Ux/WXxMvTw9cKUL
VP5ICs8aKIvJxyqcy3XU8c/rU/ZjsCyMVh2v7FDgBlk3IiTjYbK4ARNa99Rd
D9i12cZxoI530pCHO7dsgIt7dt5cPVwWutXpz8ZO2gTHPv1udGikOv9BfuEN
1nvCvunOM2+MlsX6HjMttLdtBc/kNxHlY2VxaVNRuqfXNljVYXpFkwmy+DQm
eLTpVR9YsP22MniSLAbvPB++23QXTCkfstneUhar768on1XmC2B5Md3XShbj
vSdfiK7wg77xJgbx1rJwiNo2y/fofujQ6sDsFzay6J9XHuG8KhD0N9eP1Jmp
zs+DjXp1nYPh35tN73vNlkXLpb0XrDxyACrHfDKzmSuLYbv0ThfVHITX5xd5
bpovizWRX5+HhByGLIMnt08uUNe75uSdf4vDAddOMHywUBaL1v58kZ0cARef
X5v7bZEs1tU4rt9pfwKOgXSq/WL1eX6YPnHrfRL2nTz5cfRSWWyvM2/mqjan
wbN+q4HOTup+Ptdxl4PpWVjtvGfrgRWyiD35oU0Tpyiwe/T37nVnWViERK+x
zLoAVgNdm5WulkXk42EeVQsugsXRt/P118giAfxvVDSOhX7as88MWCuLiStP
9J/oEwfGS+5/WrBeFnXrTX34rellMLgPg3dtkEW3QPfQhJQE0JLit13aqO4f
yFk6fvMV+BTS9cHTzbKYG3VDx352EhT8PtSilpcsav0K+37MKgWyFzSy6+Et
i7zqHXsDFl0DcdPr3NTtsvg3Jvl0fCDCpR5fv2zYIQufYkcHTaWACP8lQ0/s
koXl6Q+HNnZKhf1Vz33u+spi0LolAeMXp4HXLMusL3tl8VySIs5euQmrr91o
1XafLFpo3nYIbpkOdiZm9iMDZDFyQeHRHz4ZYLXz7PnlQer+d5hjFKN9Byze
t/0WFCKLH0tvr93qdxf6Td1n/l+oLHpZ7nDs1vU+GCdq7yo+pD5f8JvlE+4/
AIO26x7qHVHntzB82CbPLNDyKm9jFi6Ljtunrws/lg2fiuc5zI+Qxaojb/tv
9nkIBeOzo31OyKL10XSdei45kB0z8kf0SVlor9MeW7TwEYimVyzyTsvCKfGX
fdTMx3DJvafv37OyCM9q9rNyai5EvDz6qOt5dX8OvWNubpUH+0c0aT8lWq1v
k6rWtrR+Al5nti9ef1EWMUmTHb/PeAqr9X5ePBYri8V/DlRZ2j4DO5flvzLi
ZRG3MTnLf8lzsMp7NeJTgiwOJLTubeT6AiyGWO9tdVUWO5o99bXbnA/9Im7l
WiTLosxieU3CrpdgXGdQh2X/ySKxtaPh5qBXYOB0YWnAdVlM25Heu9HR16CV
1SEuScgi2Xf+DjvrAvikBP15k6ru9wHnD/96XAAFB+uObnBLFjZer5b+m/4G
sms2+MsZshjqPzfcOPcNCPsPT+bcUffThVfBjawL4VKGXcdt92QRUeb6xP1+
IUT0fux0/oEsmmab5bYcVQT7A8ZefpSl7s/h7bZGXi0Cr+/JNX8eyuJwsk11
Xo9iWD3XdGznx7KYUdXcdk1oMdiJ4/sn5an7fczoJ8NqvQWrLs2fuz2V1X/9
EK+15C1Y+O7qdPS5+nm3qq/tuf0W+lX+WXErXxbZ3W+GXO5SAsY2qxI/vJLF
rItj/83YUgIGSYX/mr+RhSbAu9P0nBLQMpox3rxIFnYWRTdDO5bCJ+87gYvf
qus1dcHixitKoaB0aL5/qSzaDItwuBhbCtmTLnW5Uq7W/4x3Wu5fSkHEdlr1
+p0sGhf5zV9hWgaXWoRe1f2o/nxO9PJQxzKI2NhAu98ntT56HLnb4GAZ7C/Y
PHHWF/W89ss8+OpWGXiN/hzs9VUWJa3z+kuVZbA6yuHV2e/qfnLIr+7arBzs
9J92e/hTFtUBPYvKNeVg5TbR5ddvdX4P7TY6N7UcLJ5dT+5YI4u2CyfFHnQq
h37mcu0J/2RxL6Hm8yfPcjCOPDXZtZYi/g5Iq/cxoBwM6rUODdNRhPX8cIes
iHKotXJvQWodRZzbd6fHkwvl8Pnhvx7vdBWx3HJr2PjEcnjTf82apg0UkVcZ
unHFtXJ4eLjkvyF6injQ2HzdjtRyuKE1p65DY0Xcuebi/upWOcQ6Ppiy10AR
HqZ7mqdklMPxuxaHLhsq4lewbdnC2+UQ0PdyYX4zRRSFL/3ZQn29Nbhb7zot
FdG4xK1TO/X9Lr/C1vZprQjTOZ39Lqmft9C2MU5vqwi9WxeaG9wsh6lpW+tt
aa+IbfPbPHNVv394929TT3dQROLncVf1bpSD5Lf0cGZHRfwXFf9eT5RDxy8v
ir93UsTSL8Znj2I5NJk5xbRDV0U432p6o0h9Xeu/1PVjuyui/sf7K/6q7/9s
3P/Gqp6K8Pby0dVNU8fvc67Bwd6KsMGl7wzS1fFXtLMRpor4uS9mRo+76vin
7D9a1k+dz/5NFs7MUsd/WafUQFHEGfdYrSO56vhbr+83yEwR4uc0oy/56vi3
VGxYOEARa18kXbV8q46/aH7a7kGK2C3FtDj+UR3/uId6cUMUsWLZIN1HP9Xx
R4+a8XyYIrbkjup7R6cCphpePaZtoc7PxpxFi/QrYPj6XuU9RyiiwOGO/ua2
FSDlh8vTRiniVAOzkx+6VUDH4YabNo5RRLM9V5rs1lRAk9M+tyLHKSInO2e8
8fAKqNXwV+P7ExSRlhWcvnVyBXxetWLW10mK2NilQ0uP2RXw5vHr4+2mKOLH
d9dVjx0q4OGgae9GTVVEuvJ60NxVFXAjPF2zcpoibl5ZdvapewXE6gzeEjJd
EQ0n7RnVcmsFHF8anXFtpiIslx3eWLizAgIeGDcpma0I3TLrrrp+FbBVDp7T
eJ4i2m3Mr2+zvwJcQnVP9rdVRO8Hf63CAipgYbXHB1s79eflutXR6v9PXfix
/057RWhy5DGL1Z8fnr7Q66KDIm4fC/p3VP18qVfunSeLFWHwbf5zxVMd//5x
TbWWKcItqTqqgZs6/m8p87ovV0TXWhZh9Rer45/T97TVSkUormPGt5uujv/6
iUr3VYqYn/KuRFbn502nFoOOuygi1TK5/4ie6vh37fa+s0YRH0IDdo80UMf/
ofre57WKyB/ucFZTpa6/9ermbdzV9W4YGdvykbr+V4psR3goYviclhVfLpZD
YLuZZ502KcJrSTvv7N3l4L317ufALer8fZtsdd2uHFxLhg1J8VLX26DU+4F6
3u0nxm4v8la/r23P8YZ1y8H6UufMhj7q+ONHrYt8XAYjmh9sqdmpiBTJrENY
RBnIHg0XztutiNUfRpk1cSoDk9dborbvUcSSoktGXaQyMBz1peqCnyKO3m8z
pepbKWifcxyWu08RTSxmvDl0tRS+NHq2oyZAfZ7sVpoBG0qh0HVSdpdgRQQN
qLWnfEAp5DzB1pYHFKFdYZWQ+bUEUocqi9YdVITO2pAUnUslEHf89IXwMEWE
t5wXcnJZCZyo2+Z7+hFFvDAoKr3XsQQCl/tBZbgizu8PyAx8+ha8s7V2tzyu
iBbaOdEG/m/B1cwtByLV8zoyxWDuiLdgH1badukpRRia3grw+VYM1v/mOO4/
o4hZjsGZx88UwwiHzJir5xSx/WDSYpxVDPKd4T8Lzitigr5hnff1isHENGF4
/Ri1fplPXKOo941hUPc90iVF2NcvTDy2uAi0fx5+PDtOEStzs/sPalYEX+bp
G3lfVsSFtX/L6t4ohMIb3kuiEtX1dFq0o/HKQsjp+v1SzlVFTL6ZdtOmVSGk
7ln2+3eyIqZ1vBv8MvUNxH3KH9npmiICBo9adGHFGzgx3cpvIipCbjFk3s3m
byAwOS1vzQ1F/NkcEdP9egF4dxhgfCRNETtcrLLyHQvAdXvUspu3FJH9om9y
sV4B2Je3j3+foY7vp7ed7+LXYG0ZUN3srro+x4YW6ca9ghHxtccMu69+fmJM
8ZTqlyC3ct/nmKmIp29vGa4Z/RJMNr976petiNql0ZKPXz4YFtqaJOao+6/l
6flHH78A7bE5y189VtfH22dkbpsX8OX86IS6TxQRdiCuaJLdcyg0SPpr+ky9
P0afa9/11DPIWdt73MwXivAx+nnQp/wppD4/FuD5UhFP0sqmhvR5CnHQ9MWZ
1+r5efll+TaXJ3Di5I7O2W8UUXwtdapnQh4E1v+98meRImqZ6Yf89ysXvJ1X
XjEuUevr70nhLua54PqoQGt8mSIGmted8WTbY7AfaDPBpUK9X3JzR3W/+wis
j2YEHXqviCP6LScfb/IIRmgPeXnjoyL6tKwq2DonB+QlMV0rPinCs1Sc0z31
EEzud1xtWKXup74rprt8zgZDKSRp8Df1+weOfFsD2aB9oJ7Ooh9qPR06yvt5
xyz48nvjpD2/1Hrewvnl99sPoHBBZUj8H0UcytzZ4fba+5Bz0/71ixpFrH+X
WyC634PUHnnda2tpROnf5WssC+9AnP94197aGtH5wOBTL0/chhNV/6XY1NaI
RRHBTx84ZUDgrH51NtfViJHR9l09BqeD97VIy1P1NGKNUxOd/oa3wNWk5cEH
DTRi48X7ehO+pIH9Tt833/Q0op2FztO/z1PB+n1NTyN9jTi33Mxhz/0bMGKq
i9uYJhqRs+HsauMMAXJi8TXnphph7jhw070QBJO2s3RDm2vEzR+Rp6ouXgND
r3tW2FIjMhzP1S/OTwGdt+Zhpa01Ym2opZTQLhmqxscV6bfTiMFnLEpWrroK
RTFd+gw00oh18wySdXIT4VHTQ+vsjDXiQnpW9NzJCZDmrid2mWjEm5nR3yc8
jYf4l571YztrRMLQ3y9C18ZB5Igq62ddNeLAq9ndf3eOhaAzi4/U6qERIZUR
inz/ImzTe/62Ry+NWFoc9m6YSzSscZnc17qPRnxqsLCTZuB5WJQn3D36akT4
5xPGvYzPwbQhmtQTkkbUmToSunc/AyMjzjS8p2jEVrspo0ymnAKlTtvpVWYa
sam8Z5RWcCR0cvIPbztQI3RCTXROfDsOTbNqlY0crBHZD5W0D64RoKNZK60Y
qhHf3k2rmdU8HKoOlnkEm2tEvzZzvsxZfxiKaube/M9CI6Jrblltqn8IHtln
NXo7QiPOjDlUPfPOAUjLGDGz0WiN2B/u0mXv5WCI750YYTZWIx7sW25z7XYg
RAb0qJg/XiNmBBXKh3QCIOj7EWXHRI3YGZbfJO6WP2yba7A5ZrJGuB98XLLz
9h5YI7al501Rx3dg/smFDXfDoi4/9P9N1Qjl+O3X+r47YJqv0+xuNhrR8H2T
e7sstsPIypcnpsxQx5d8xr2ipzcoNlPfr5+lEZwHdEq6aRYx5/+/pvcjv58+
D/nz6PuQv4+eB/l56HmRn5fGgzweGi/yeGk+kOeD5gt5vmg+keeT5ht5vmk9
kNeD1gt5vWg9kdeT1ht5vWk/IO8H2i/I+4X2E/J+ov2GvN9oPyLvR9qvyPuV
9jPyfqb9jrzf6Twgnwc6L8jnhc4T8nmi84Z83ug8Ip9HOq/I55XOM/J5pvOO
fN6pHiDXA6oXyPWC6glyPaF6g1xvqB4h1yOqV8j1iuoZcj2jeodc76geItdD
qpfI9ZLqKXI9pXqLXG+pHiPXY6rXyPWa6jlyPad6j1zv6T5Avg/ovkC+L+g+
Qb5P6L5Bvm/oPkK+j+i+Qr6v6D5Dvs/ovkO+7+g+RL4P6b5Evi/pPkW+T+m+
Rb5v6T5Gvo/pvka+r+k+R77P6b5Hvu+pH0DuB6hfQO4XqJ9A7ieo30DuN6gf
Qe5HqF9B7leon0HuZ6jfQe53qB9C7oeoX0Lul6ifQu6nqN9C7reoH0Pux6hf
Q+7XqJ9D7ueo30Pu96gfRO4HqV9E7hepn0TuJ6nfRO43qR9F7kepX0XuV6mf
Re5nqd9F7nepH0buh6lfRu6XqZ9G7qep30but6kfR+7HqV9H7tepn0fu56nf
R+73SQ8g6wHSC8h6gfQEsp4gvYGsN0iPIOsR0ivIeoX0DLKeIb2DrHdIDyHr
IdJLyHqJ9BSyniK9hay3SI8h6zHSa8h6jfQcsp4jvYes90gPIutB0ovIepH0
JLKeJL2JrDdJjyLrUdKryHqV9CyyniW9i6x3SQ8j62HSy8h6mfQ0sp4mvY2s
t0mPI+tx0uvIep30PLKeJ72PrPfJD0D2A8gvQPYLyE9A9hPIb0D2G8iPQPYj
yK9A9ivIz0D2M8jvQPY7yA9B9kPIL0H2S8hPQfZTyG9B9lvIj0H2Y8ivQfZr
yM9B9nPI70H2e8gPQvaDyC9C9ovIT0L2k8hvQvabyI9C9qPIr0L2q8jPQvaz
yO9C9rvID0P2w8gvQ/bLyE9D9tPIb0P228iPQ/bjyK9D9uvIz0P288jvQ/b7
yA9E9gPJL0T2C8lPRPYTyW9E9hvJj0T2I8mvRPYryc9E9jPJ70T2O8kPRfZD
yS9F9kvJT0X2U8lvRfZbyY9F9mPJr0X2a8nPRfZzye9F9nvJD0b2g8kvRvaL
yU9G9pPJb0b2m8mPRvajya9G9qvJz0b2s8nvRva7yQ9H9sPJL0f2y8lPR/bT
yW9H9tvJj0f248mvR/bryc9H9vPJ70f2+ykPQM4DKC9AzgsoT0DOEyhvQM4b
KI9AziMor0DOKyjPQM4zKO9AzjsoD0HOQygvQc5LKE9BzlMob0HOWyiPQc5j
KK9Bzmsoz0HOcyjvQc57KA9CzoMoL0LOiyhPQs6TKG9Czpsoj0LOoyivQs6r
KM9CzrMo70LOuygPQ87DKC9DzssoT0PO0yhvQ87bKI9DzuMor0PO6yjPQ87z
KO9DzvsoD0TOAykvRM4LKU9EzhMpb0TOGymPRM4jKa9Ezispz0TOMynvRM47
KQ9FzkMpL0XOSylPRc5TKW9Fzlspj0XOYymvRc5rKc9FznMp70XOeykPRs6D
KS9GzospT0bOkylvRs6bKY9GzqMpr0bOqynPRs6zKe9GzrspD0fOwykvR87L
KU9HztMpb0fO2ymPR87jKa9Hzuspz0fO8ynvR877iQdA5gGIF0DmBYgnQOYJ
iDdA5g2IR0DmEYhXQOYViGdA5hmId0DmHYiHQOYhiJdA5iWIp0DmKYi3QOYt
iMdA5jGI10DmNYjnQOY5iPdA5j2IB0HmQYgXQeZFiCdB5kmIN0HmTYhHQeZR
iFdB5lWIZ0HmWYh3QeZdiIdB5mGIl0HmZYinQeZpiLdB5m2Ix0HmcYjXQeZ1
iOdB5nmI90HmfYgHQuaBiBdC5oWIJ0LmiYg3QuaNiEdC5pGIV0LmlYhnQuaZ
iHdC5p2Ih0LmoYiXQualiKdC5qmIt0LmrYjHQuaxiNdC5rWI50LmuYj3Qua9
iAdD5sGIF0PmxYgnQ+bJiDdD5s2IR0Pm0YhXQ+bViGdD5tmId0Pm3YiHQ+bh
iJdD5uWIp0Pm6Yi3Q+btiMdD5vGI10Pm9YjnQ+b5iPdD5v2IB0TmAYkXROYF
iSdE5gmJN0TmDYlHROYRiVdE5hWJZ0TmGYl3ROYdiYdE5iGJl0TmJYmnROYp
ibdE5i2Jx0TmMYnXROY1iedE5jmJ90TmPYkHReZBiRdF5kWJJ0XmSYk3ReZN
iUdF5lGJV0XmVYlnReZZiXdF5l2Jh0XmYYmXReZliadF5mmJt0XmbYnHReZx
iddF5nWJ50XmeYn3ReZ9iQdG5oGJF0bmhYknRuaJiTdG5o2JR0bmkYlXRuaV
iWdG5pmJd0bmnYmHRuahiZdG5qWJp0bmqYm3RuaticdG5rGJ10bmtYnnRua5
ifdG5r2JB0fmwYkXR+bFiSdH5smJN0fmzYlHR+bRiVdH5tWJZ0fm2Yl3R+bd
iYdH5uGJl0fm5YmnR+bpibdH5u2Jx0fm8YnXR+b1iedH5vmJ90fm/en3AZB/
H+D//r7A/wBAMpSz
                "]], {{{0.5018424972039037, 0.}, {
                0., -1.}}, {3.999999999999999, 0.}}]},
             
             ImageSizeCache->{{131.80667305459414`, 
              146.59682190762237`}, {-79.62242722750898, -45.57814225256527}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "19.838389965479102`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "19.477637860281014`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "19.19726754867247`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "18.935538061243328`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "17.57457749528175`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 19.838389965479102`}, {
               Style["75%", Bold], 19.477637860281014`}, {
               Style["median", Bold], 19.19726754867247}, {
               Style["25%", Bold], 18.935538061243328`}, {
               Style["min", Bold], 17.57457749528175}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[1., 0.7215686274509804, 0.2196078431372549], EdgeForm[
         Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlUT3vUxg3XzDXlUub5mjnnkEzbTMgU13TNQxKSqQlJgwhJikohJaU0
l0r2t0mFipBmzWXIlPEi73nX2vuf9/UHq7Xy+53zHfZ+9vN8+m4yXrq1SaNG
jVLUv/73X/5zYo71r4z2kqj+0sR1QMBRePPcNCqjoyR+365bt6HLMVi4ffeu
jM6S+D6r3CnI0wbCvm0ZmNFFEk09ozaZTLYDjRNritO7SuJUq9zmfX/ag6nm
Utd0TUloadtK2vkOUBAwVy+9uyQUw5/Xx+eehMkToFl6T0lsvuNzPfzTKbhy
f2xCWm9J3J3rN3XhOCdoumb4gbS+kkg1H1y8JOssbHvdb0Raf0mMS95s5qZx
DtItNavuDZREVsXpL7m7XWBY2w5e9wZLYvQJH6NXxefhzKXmy+8NUT9/e2yv
uE1u8GH4r7b3hkni1i8tl3YNF2BZQn1K6gj1+15cDLwT6g4xeq8OpY6SxPhp
PreCLD1Bq6RUSR2jvu/vrKq49V5wePfzNymyJNpsurUhZe1lKG3I9E0ZK4m1
k2vil8ZfgelOKf+maEtCDiq5dunZVfDrHa+RoiOJ1nMeuQ5v8IGWoWEPkydK
Qjv8aPfdY33BaOoN2+TJknCqi1rxwNIPsh55T0oGSZydNiU56PF1GLPR9VPS
NElcdbZ4ZaZ9A85/cAxKmiGJ0q+Rw84HB8BX62NbkmZJQveow8ENyk1Y1cm8
R9IcSczPcG87+WEQ3PExfpqoKwn/JQUz7A/cgt7ytlOJ8yWxIWim37xuoXAs
+d+ZiXqSKBNnvrxoCIUqff2fYpEkvH72GBX0NgzmVupGiiWScN+65WhuTTjc
3D91p9CXxOFpA7VsX0XAn820B4jlkgjyCO2Y9yUS9riOKMIVkrAw0Z1X3zYa
ngwccB5XScJ5h8e6T8NjYFy01gJcI4keobLj139ug/vsjn/gWknELB7avJtj
LPzMbXHn7nr1Z+eVp4wz4mC9QcO+uxslMSx+YlbrTncg6eunYXc3S2L35YS/
Gm1NgIEOrysStkqisW5+6Lqku+DQrdwzwUASHzTAtEcXAa9u5OknGEqi0+e9
U+dkCdDTyW6TYCSJ981/10WeSoTQjNTkO7skkX575jWDxUnQefUdyzvGkhj7
n1vUes1kOPgqXL5jIolZxwpfetYkQ75FwOv4fZLo5TnIsHt8Ckxqc+Va/AFJ
FJWXrHvukgqXPd3WxJtKYn//1p0zTO5Bk+GnO8ebS+J5n/SEl8vSYMsdmwdx
lur5cWqbMWpyOqQtsLCJOyyJ/h9WPnEamgFDi/dMjLOSxK+kwb4/e9yH07sM
6mOt1fukl93bQOMBvP+19masjXr+x5ROuNvhIeifWbY51k49H5Nb1r3tmAnR
veZ3jz0uiY4f7ftXds0CzZBpT26fkESXd7Mi7PtlgyWMd7ztKAlj/X/8Sro9
gpLskTNun5ZE7xy/MdE+j2DahoE/YpzU9VonNONHPgbf990jYpwlYeZ8WRTf
eQwtrDsZxbhIIqy4al47vRzY0bFV/xhX9b7p+ViNfZEDmVd/F0RfkEReasjQ
WfuewGjpy7lod0k0+nd25oBWT+Fc0pt50Z6SWOlzcDReeQqfl1Y0ifaShE6v
grc/dZ7Byor8uKjLkrj+a9bY1KfPIH7fo71RVyVR4eVZ/GtPLvT6I21o1DVJ
2HZ7t9Pxz+dgfT6hPNJPvQ/OhZ2WBD+HygGRHpH+kpi0aUDgaL08mBMVuDQy
QP28wSMi2rzNg8BZV1tH3lTrxbl8XeGUD21zLyRFBKvnPSG88XCpAIy3nbGI
CFHv89w4jeHPCiDni60UEabWj4sRXzzNCmHscctX4RGSCJ3a8c3yHkVwsete
n/Ao9bwuc/tLFkXww3/76vAY9by3+WLTZksxrBu/vlN4rCS8f5pNiW5RAonp
y++HxUti9ZvA9a1ulsCAVQuOhSVI4rZn+4EFei/A/uX0CWGoft+GvOa/3r2A
l+Y6H0MTJdE1ZU6tz9xSWNB6dGBosiQWFj8tTr5YCiEegzaFpqr1ZcOn1Hm1
pdBpWE+t0DRJxI2Mz+2jXQYH4jvnhGRIIil4wdBRdmWQN7/1yZAH6nlXTLLX
5ZTBxKJG00My1fs7+lnBxV7l4LXz6/db2ep9zyg0u2dYDo1+1YXdeiwJg55v
fz+KKIfNpysNbz2RxIFTI5v6/CyHez0L+956JonzEw9u7T+zAobcepwf/Fy9
P5nWO+FkBZyaku4cnC+JZJMxT0uzKuBd1l3d4EJ1PzOx7GPHSli6PqpxcLEk
ej7PObhRvxIi392MDXohiewg3QGaLpXQ9aiPSVCZJFZdCpzU4nElWHRwHxJU
IYlmrzWqNdtVQfEVp7KbVZJIC/IYNnVOFUwdY+9+s0YSGXk17XZYVcG1xENL
br6UxMUPPVwcoqqg+dJ9rW6+Vs/L+5Rnp19WgWG5YWJgnSS+hGV32tW9Gh7u
3WAe+E4SUVsKqrXmV8PIpivGBH6QhGbe6qmnzarB2UXvZUC9JB508dWIu1YN
n/rPvBrwWa23mnGDPB5Ww4rICasCvqrfd8+r9eD6aoibOaZjwHdJTKlrE76m
aw30fDY448YP9f8/vmui6NTA0a29rG/8kkTIslnNQlbWQMVnDZ0bvyURYGTk
fP9ADcy2b/PBv7EsvKLG+B0/WwM3/moS4N9UFgff6uvU3qiBNv7fNvg3k4XT
m/W33t2tgd3a77r5t5BF34sbMnxyauBxWtWj661kMaO+b0iLyhpQVhY5XG8j
ix0PNUoG1tfAhdqcqdfbyeKRRsGg5o1q4T+zjG9+7WXh/qfVtfDWtbC2lQj1
6yiLxEv7g8d1rgV0j97u11kWsR8W5Hhr1kK/ocF9/LrI4nXg/LRvPWvBLu5a
nm9XWcRpPluj36cWaud5nPXVlIV9x/s77qo/zy88O9e3uyySO5Tcn9e7Fm4Z
HW/k21MWX5t9mdy6Ry10/Hn49rXesqhb4L2+fdda2H9q/55rfWVx9dH1c7s6
1EJuD6O/r/WXRcqtBhudlrWgE7yx1GegLPqNPt35eEMNXJq88qLPYFlsujnS
00h9v9+ZCxf7DJFF9dt/mv2qroFN62a19Bkmix8e33cuya+B1LcTxdURsnAd
HKZtdb8G/raSzK6OUr9//d+/L8XVgGP7IaOvjpHFtz4jLRIDauDt5d61V2T1
eb7abW16sQYWj/7rypWx6nrXOew0t6uBCNF25RVtWWi6BHacsLcG/lrStMMV
HVk0Vr66rVlXA+Zl39MuT5TFkDdXqut1a6DI5L3V5cnq+q0Kt+w2tgagSY32
ZZDFhmMN80p614DPueJ33tNkkWm6LWhV6xpo1v+pv/cMWZjrnJnp/akatkfc
X+89Sxa5/bu/u1tSDfdnJHb1nqO+n8aFgMz0ahjxNCbbS1cWw3ppWBWGV8PZ
LbeOe82XhfOo4P3fLlVD/Sdf8NKTxTj3Rqby8Wr4x87z66VFslh7KHGuh0k1
xHY5F3JpiSzS9A/v1fm3GnpcdzC4pC8Lz5Phco851WA1zqr3peWyWBG47MAC
qRrK7h147rlCFtH1+Qk5Path5oqdTp6rZJE+vm5QdKtq8K/ZNMdzjSzW2RYv
+/m5ClqbrfrtsVYWqdYVxgHlVbCr5eIYj/Xq+QpZ2ltkV8Gji7ONPTbK4vno
+/bTEqpAHjJ5sMdm9X3tDs4acbMK3GLlF+5bZbHn5l5Ta/cq+KY79IK7gSwC
fujHTnCogjUFfRa5G8qi87PaEctMq+Dujq4t3I1kMXHPSPu0bVXQ90c7vLhL
Fnstj7Q5/U8V2Dr+YXrRWBZWXT/c9JxdBTXdf4y8aCILx+DXLV+Oq4J5QR+q
L+yTRbOCR8cNB1dB8KRa7wsH1PVdk7ilQ7cq6JBZ8s8FU1lEXFmVlt2yCvau
ffbnBXNZlC7Uz7/4vRKe1T2452Ypi2tZdSVrXlXC+CNJR9wOy+Luq5+LWxZW
guefsePcrGTR7YTZt1MPKqHBO+Stq7X6fs+2tMmLr4SNo65fd7WRhf/t6nnP
b1ZCCl5a52onixzd5f3MPCth8GKXv1yPy+JMu7/S/E9WwsnSE1nnT6jrtbb9
Kn3zSniz56j9eUdZ5E2zaLrdoBIWNTadcv60er5XFPZ8sqwSwp13fXFxksXb
GS8XHJtWCV36bbnl4iwLwzWDrm0eUQlm4au3ubjIYmfHerG1WyUUTl/Sy8VV
3f+qknrTJpUw5cmc3HMXZLF/Q8Oyk68r4OrmKWfOucvixod21aefVMAfn5TZ
5zxlcX3isOD9cRWwzXZYg7OXLO7feJ815koFZGj0i3a+LIuF2YnXY20rYLhf
t93OV2Whv1KruPH2CnAa236Q8zW104ZGWjaeVwEfU5uVnPWThXbSxt+hQytg
+T8/Xc/6yyJjmrFB69YVcLv6o97ZAFnY3D8yvVVtOWiZvmx29qYsYgojbwem
lMPhFqUJTsHq/f81zKXucjmUXsg94BSift5lr6k55uUw4+/MEU5hsgiJ1X6+
emk5XL+dXHUmQhb9H3t2dhxSDq1047zORMmixLbV8u2/y2BnfujyMzGy+Lnv
jtv3J2WQbejf7kysLAZ8VMbN8S8D6T+v1NPxsmhe7ThmjXkZnD95/vDpBFkc
+N24btq8Mviq5Tj2NMpq/1lxr4VWGay+aV13KlGtp6Mv/RGv9veEiWZ+p5LV
51l8YrhRdCn0ebh77alUWWh9KK7926YUbP7d2uVUmlpP/areN1tUCtVv1mQ6
ZshiaItVdRpapaB7eKmd4wNZnH3pEZOT/gKC2ulOdsyURcOh3LKR/76AP73h
88lsWWz+MLve4G0JmIwcF3zysSyqYqea3rAqgad3h289+UQ9z4tXBnbvUALa
i/r3PPlMFk9/uerUXS4Gjxeaz048l4VxvkNj3VHF8Mu4w+kT+bIo3hmWufpu
EWxo1GLWiUJ1vQ/GdVuoVwTJZ3/9dCiWRZlbfaZeUSEM6vsp0uGFLG59PNzW
1qgQHMJe7XQoU+vtLLc3mj8K4PW0sgEOFbLQ27tpjrZjASzMeV50vEoWkrGP
dZMeBRC2Kev88Rr1eRy8Vl0JzgeN+pQFx1+qz3/pspM8NR9MbeL/OP5arb+T
qkcXPcmDgs7hd+zrZGHd2XtH/PY8mOR7Y7/9O/U+F7+Z96bhOVxWLg+3/6D+
/2aONQ5uz6FJqmulXb0sbCPP5N4Y9Ry2Lj91ye6zLBJ2tdLaeD8X0quOLbP7
KosXx4ZcTt6WC8MOmre1+67Ws+Hfe5b+kQtnmu9Jsf0hi0LH1Napvs/gg9u2
Q7a/ZDHzextXy9nPYNngtYrtb7VfhgYubfPqKUTH6L+xaayIK2NDR5k7PQXN
ufN8bZoqosD6P4u0cU/hUN7Uf22aKcKrvuvXzy+ewIvt2ho2LRQREaG8a+z4
BKZ/H/HwWCtFhBrkLarWfgJ+JwbYHmujiAHZY5I9q3OgpVb3ScfaKSLq3xuP
ul3IAaPAjp+s2yuiSVOD30t0cyBrQssg646KsF/o9EPn12MY/aBhs3VnRZy3
FwmJ4Y/BZc3n7tZdFKH7wTMyz/AxfHn9+snRrop4ZVH3bme/x7DqULnjUU1F
RFf30jMqegR32ubPONpdEXn6nr544RH09sr+YdVTETY5IR7Llj2CYyPuRVj1
VsRk/R6LNTo9gqqEO0ZWfRUxK/KQTs7VbJi7MKK/VX9F+FZ6TDHvmw2BJQGF
RwYqYtm0+m/1PlnQzviKy5HBirjw6d+69oOyYM9vt/lHhijijXmnTr6BmfDE
6XTTI8MU4VglPbMZnQnj+tjGHx6hCHj68ZRNzENwD7XYd3iUIlo/KEkzh4fw
c6rJsMNjFDHlaGjIlPQHsO6xQcUhWV0frfu6QUseQOLGdZ6Hxiqi79314d6F
92HAx2X6h7TVz3dptfTT1vtw/Nj8Nod0FPHXN9t2Z95nwKtO05MtJyrixSYz
40WWGaB3bbyl5WRFRHbXetireQaEyqNkS1DEEKvr66rOpkPnlIGvLaYpYmCx
9wan7ulwcFmPaxYzFDG8Wa5W2+tpkFfZaY3FLEXky2ve641Og4kHWnW2mKOu
v/b6zfPi7oF3s0YPzHUVUTl5gsZ/M+5BY7cvx8znK2KCf1LcysxU2DKoboK5
niLae4/U2vpPKqRFV3w0W6SIMb5J7/q8SIGhcwoCzZaonz/gQtFZgxQ4/fzR
JjN9RZxseW/enXfJ8N4gTctsuSLqdqxYGGyaDEu/JeSYrlCE68wbl3b/ToIo
h8iTpqsUcW7V0pj2x5Ogm+bN6aZrFOHp8HmW/59JYBlw9b+DaxVxX79s0Uy3
RCjRuRh+cL26v0lnP/7omQjT7p/ZcXCjIlY9Gvul0k+A72q7fgc3K2LR23TP
riMFtHhtWXBgqyKKnjV5unoXwg7LvecOGChi9bpJ9dZWd+FhG8N5BwwVMar8
rWH+uQQYdWl9kwNGivBpCL3q4X8Hzg3/J27/LkUsP5jr0vRuPHy+s2DvfmNF
jMw90aCbGwcr9WYM3W+iCKdSuyT/97EQX6xTvm+fut82Xn3028VCr92jPfYd
UERyidPmk8Nvw9GGQUv3mar7o2vQ235hDFSc6dl6n7kiPtV1irfYFw2ze2sk
7bVUhPkM4yNenlEQENLaYu9hRZgMbPmkb1oktJ3aWNprpYgvgd9/j/8SAcaP
vr40sVb3c1nw645DIiBnw9urJjaK0JkUUJG3PhzGfqhcZWKniO+lF3fEeITB
RevCjibH1fO0L6Dt0/xQ+K9jTsaeE4p43HL2hKU9Q2GtT7r1Hkf1Pm7cttT3
/i0QEursOa2InRr/mZZtDob+yVEfjJ0U0V9nyoszzYPAXj8owNhZEd42tt55
4YHwssJno7GLIl4rqYUV2wNgwX53TWNXRWhMWPAg6+8bEPLH2ce7L6j313ZO
bOjH69DJ1f7Ebnf1fdb69/S45wf7Bx6etttTESl9ImPP+/rC86h933d5KeLJ
9LC7105dgwmzd4Ttuqw+v1z0M/mID3jlbjDcdVW9j5/aab2xuAqNDFb03XVN
fb7gqdltra/A5q96+Tv9FFHrvWtlv36X4d7xmc47/dX176P96fZyLxjSbaLu
zgBF1FtGf7lwyRNO3RjTeOdNRTyIiZ3o9sUd3o7/O9YoWBG7DnoeXrj5IizJ
6GViFKIIB83lxwzK3SByVZchRmHq/ixdVrtznyt0fdWmbEeEIk65OBn2/us8
WFg0cd8Rpe5vUf37hoxzUNz6++IdMYrI6tCswfWMM0z1fNdyR6y6P3aFX3Zu
Pgs+w6qFYbwiet6yM+tw9gw0v1NkZpig1qtG7R5Gm56C7QuejDZERQTF3/b7
eOgkPCjKqN2eqJ7fvB2DEr0dYOQucWV7srp+ZZbN/iiyB+df0Su3pypiWqdp
A0NkO/h0OrjD9jRFBM4NuBXlawMrevmmG2QoYqbra802I49B3C2PowYP1O/r
ETzIN+so9ADn8QaZ6udnjbN/19oKrLKPv9+WrQj2g8vXH7mx7fH//5l+H/n3
6fOQP4++D/n76HmQn4eeF/l56X2Q34feF/l9aT2Q14PWC3m9aD2R15PWG3m9
aT+Q94P2C3m/aD+R95P2G3m/6Twgnwc6L8jnhc4T8nmi84Z83ug8Ip9HOq/I
55XOM/J5pvOOfN7pPiDfB7ovyPeF7hPyfaL7hnzf6D4i30e6r8j3le4z8n2m
+45836keINcDqhfI9YLqCXI9oXqDXG+oHiHXI6pXyPWK6hlyPaN6h1zvqB4i
10Oql8j1kuopcj2leotcb6keI9djqtfI9ZrqOXI9p3qPXO+pHyD3A+oXyP2C
+glyP6F+g9xvqB8h9yPqV8j9ivoZcj+jfofc76gfIvdD6pfI/ZL6KXI/pX6L
3G+pHyP3Y+rXyP2a+jlyP6d+j9zvSQ8g6wHSC8h6gfQEsp4gvYGsN0iPIOsR
0ivIeoX0DLKeIb2DrHdIDyHrIdJLyHqJ9BSyniK9hay3SI8h6zHSa8h6jfQc
sp4jvYes90gPIutB0ovIepH0JLKeJL2JrDdJjyLrUdKryHqV9CyyniW9i6x3
SQ8j62HSy8h6mfQ0sp4mvY2st0mPI+tx0uvIep30PLKeJ72PrPdpHkCeB2he
QJ4XaJ5Anido3kCeN2geQZ5HaF5BnldonkGeZ2jeQZ53aB5CnodoXkKel2ie
Qp6naN5CnrdoHkOex2heQ57XaJ5Dnudo3kOe92geRJ4HaV5EnhdpnkSeJ2ne
RJ43aR5FnkdpXkWeV2meRZ5nad5FnndpHkaeh2leRp6XaZ5Gnqdp3kaet2ke
R57HaV5Hntdpnkee52neR573yQ9A9gPIL0D2C8hPQPYTyG9A9hvIj0D2I8iv
QPYryM9A9jPI70D2O8gPQfZDyC9B9kvIT0H2U8hvQfZbyI9B9mPIr0H2a8jP
QfZzyO9B9nvID0L2g8gvQvaLyE9C9pPIb0L2m8iPQvajyK9C9qvIz0L2s8jv
Qva7yA9D9sPIL0P2y8hPQ/bTyG9D9tvIj0P248ivQ/bryM9D9vPI70P2+8gP
RPYDyS9E9gvJT0T2E8lvRPYbyY9E9iPJr0T2K8nPRPYzye9E9jvJD0X2Q8kv
RfZLyU9F9lPJb0X2W8mPRfZjya9F9mvJz0X2c8nvRfZ7yQ9G9oPJL0b2i8lP
RvaTyW9G9pvJj0b2o8mvRvaryc9G9rPJ70b2u8kPR/bDyS9H9svJT0f208lv
R/bbyY9H9uPJr0f268nPR/bzye9H9vspD0DOAygvQM4LKE9AzhMob0DOGyiP
QM4jKK9Azisoz0DOMyjvQM47KA9BzkMoL0HOSyhPQc5TKG9Bzlsoj0HOYyiv
Qc5rKM9BznMo70HOeygPQs6DKC9CzosoT0LOkyhvQs6bKI9CzqMor0LOqyjP
Qs6zKO9CzrsoD0POwygvQ87LKE9DztMob0PO2yiPQ87jKK9Dzusoz0PO8yjv
Q877KA9EzgMpL0TOCylPRM4TKW9Ezhspj0TOIymvRM4rKc9EzjMp70TOOykP
Rc5DKS9FzkspT0XOUylvRc5bKY9FzmMpr0XOaynPRc5zKe9FznspD0bOgykv
Rs6LKU9GzpMpb0bOmymPRs6jKa9Gzqspz0bOsynvRs67KQ9HzsMpL0fOyylP
R87TKW9Hztspj0fO4ymvR87rKc9HzvMp70fO+4kHQOYBiBdA5gWIJ0DmCYg3
QOYNiEdA5hGIV0DmFYhnQOYZiHdA5h2Ih0DmIYiXQOYliKdA5imIt0DmLYjH
QOYxiNdA5jWI50DmOYj3QOY9iAdB5kGIF0HmRYgnQeZJiDdB5k2IR0HmUYhX
QeZViGdB5lmId0HmXYiHQeZhiJdB5mWIp0HmaYi3QeZtiMdB5nGI10HmdYjn
QeZ5iPdB5n2IB0LmgYgXQuaFiCdC5omIN0LmjYhHQuaRiFdC5pWIZ0LmmYh3
QuadiIdC5qGIl0LmpYinQuapiLdC5q2Ix0LmsYjXQua1iOdC5rmI90LmvYgH
Q+bBiBdD5sWIJ0PmyYg3Q+bNiEdD5tGIV0Pm1YhnQ+bZiHdD5t2Ih0Pm4YiX
Q+bliKdD5umIt0Pm7YjHQ+bxiNdD5vWI50Pm+Yj3Q+b9iAdE5gGJF0TmBYkn
ROYJiTdE5g2JR0TmEYlXROYViWdE5hmJd0TmHYmHROYhiZdE5iWJp0TmKYm3
ROYticdE5jGJ10TmNYnnROY5ifdE5j2JB0XmQYkXReZFiSdF5kmJN0XmTYlH
ReZRiVdF5lWJZ0XmWYl3ReZdiYdF5mGJl0XmZYmnReZpibdF5m2Jx0XmcYnX
ReZ1iedF5nmJ90XmfYkHRuaB/y8v/D+09Tb9
                "]], {{{
                0.5526104747864548, 0.}, {0., -1.}}, {5., 0.}}]},
             
             ImageSizeCache->{{143.6347110134858, 
              158.58931291598526`}, {-83.87734179675064, -54.05912402657633}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "20.289172505776452`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "19.7227053090905`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "19.276760224232984`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "18.99334102327311`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "18.590476060389015`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 20.289172505776452`}, {
               Style["75%", Bold], 19.7227053090905}, {
               Style["median", Bold], 19.276760224232984`}, {
               Style["25%", Bold], 18.99334102327311}, {
               Style["min", Bold], 18.590476060389015`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[1, 3], 0.3333333333333333]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlczenbx7MMIcskjYyytm+nU2fpFLch29izTHZStghRWSORxKgoQqhE
tlJpoei6MEIUiixZ+pHdJGsZMY/nua/r+eN5/DHz6iWn0/fc93V9Pu/Pp5v3
Ak/fxnp6egk//vPf/+c/4qxf++f9zNG2MK1z751jRd+Q2mzDyeaYsOzlt1sm
fwgPt8BxvYPM8Y+3G11uZHqJAfVf6uZEmWNtVYPBBO8JYlBOyM64Q+Z4a2lA
Q4rdJDEkoInb2bPmmNY39GDtz1PEcMeI+2/umeP4gA4151pMEyPfGIR0/GiO
S7e+vDzRZLrwPBzTxaO1Bd7SPZi3SOstxsw0PrvAwgLTiwZMyps1Q/zRY7f3
bmGBZ0xLDZ6l+ogJVV2aXvSywM7h5qX5X3zFpD0pB94vssBV4TZZdZNniSkT
rAeabbLA+Ku6BTNuzRbTf0l/MTjFAvU3R/a6PG2u8LmpjAw8Y4GT04ccr9eb
J2bG5NkmVVhgb5/gsAu588Xs4e4lV99aoIumzeLmYQvE3FZn/ev1LXFgmWfD
0BMLxfxL/dv17G6JQ4rbtHDIXCQWri/OHOFmiY0q7L/vKAgQAX1HjF4xxhLL
3IKXfCtbLJb8W/7x4HxL7LoIxpXVLRFBp722l4VbonrbqtxNNkFi2bIHmu/7
LLH8mmrPPr9gsVLtfdf6lCWOyDxxb13BUhHy4dnysWWWCCrD61mdlos1GX6d
Q19boqpgqyZp4woRNr/2zLGmVjjZeODLi/qrxHqbwKl3TK1wT/L2hL3xISLi
+Re9phorrLk/ZnRp5zUiMiUk2XGkFe6d8XRC589rxObpTTwmzrHC0hYvPJbc
CRVRZhFPw9daYVZe2Zh2f60VWysNNmTttsKUMP1WNqfCRGx8jNXDbCtcvORl
w5e8dWL7WOPiFqVWqLcx6Wgerhfxhrv9VM+tcFD3K+N3loeL3de6tJ6uZ42F
3b4+Kq/dIPZuTknfbGKNrweMWLOr40aRONh65EmlNf4ZZXLKbEikSG6W/u7J
EGssib5gHB2xSRw4r9zW1tcaXd4Z/9T5xmaRuibPxS3EGtsNf7zv755bxJFe
7hUzd1jjpnczwuzXRYlj/2Dw1gxrbHhsV7omOFqk5/U3KbxsjZUfm6wsUsaI
zCXF+S8fW+OwGKviug8xIttpxKQODdbY/9fmHXsUbBW5NeXf+nSwwfzZL1qP
jdgmTh712jfPwQaN2yeuj58YK/JnP+gTP9AGR8/dt/izS5w4Y+79+Pw0G+zv
t/56oNF2gY+fhb1dZoOZezzCfv1nuzi3z8/81202eNC2fsirpzvEX5NqiwYc
s0FtRejxx7fjRZFJ4OyACzbodqBldePrO8Xlii8t9j60wQuD1xQOKN0lrm4L
OXq5zgZ9bayTUst2i9KRTYZ9ameLzWtm+3V+kCCut46o6Wpji0dMrs3d+fce
UV5sED20ny0+fBcxrF3TfaJiQ4zT0km2uOWgZSttu0Rxx8O4fH+gLZ6z/xjh
mZQo7jXaveTaFls8OsJm1lBVkrhf2MX4a6otFmU8bGFyNUk8WpGSZ3HWFnNr
EhYc8U0Wj7XW4z3v2WLYNnB812i/qP6U9s+qD7ZYU1C07H7ifvEsS5lw2MAO
J+vndpjQN0W8WJDX65a5Ha5NDPUd9yxFvLZzf6Qn7DDTKWbW6c0HRM1LXGPn
ZYeqqin5gaqDovZg/+5ei+wwu4cmaW7VQfF+RvH5sEg7rF1q2nLtn6niU9cR
vsf322F47p3YJPdDou5BebPK03b46bDV7rS/D4l/dnkdalZhh7/NN9dtTDws
Gv54MFj51g5LD16cZDz2iPjXyPv1ZH17TEjYcVHV6qhoVPZs88Zu9ojZq80v
njsqmkT5OeTo7HHSwTMdDq84JpoNrb1WNdoeUz3e6E6p0oR+i8BFBvPtMc/f
bMjN2jTRquiLoTbcHt+Oatyt4li6aB0Wkj1jnz2KksalO+ccF+36NBkXddIe
V2enVaxsnyEMv22oy7/x49//q396VkCGMMo32PnslT2+r31it/xGhvglOEZn
2NQBN4ZYhyUqMoWJi/H9XqYO+L1r8xdFUZmi87tdq+aoHfBZ1qypd2syhVl6
ly5xIxzQdEle+flhWaKrXwribAfMMH3eLeBYluhhZe39JtQBAxfvN7/e8oQw
f5rWpONuB/w2KPfC5dknhFWy8kC/bAdMD1uvN6TohLCZmjdgQYkDvu+bUi96
ZAv7zu4vdj1zwJNN5jaKW50tHO/ixqJ/HbDLsLCj6sps4bS9v+37jo64w23B
jZ/VOcJldPFVU6UjvjZ6sL99dI5QtxvhP3iIIy78eD/H+mWOcC0pbxvo44jr
t1bo9/0tV7hFemUmrnJES0fXjkPic0XvgQ88r253REXB7WrnmlzRp6n3x7rj
jpgeWv3v6755ou/ZZ3E9LjvihYur42ZszxP9Q/w0Ix474pWuJUGbXuSJgW61
d5Z/dUT3TWE9xrqeFOYrdb1Gt1RgWPmbsqyIk+LgvYbWL40VeMhp8ModFSeF
lSs8DOmhwA/7Nj/83P2UOLQj9LiRQoG+evM2XJh/Sth87rfmiLsCL5Zm3K3P
PSWOjmk2qs9gBe4qKzbc8P2UsDtxqVvFWAUG6sePmOWRL9J/3vTez1uBn4sn
RsdE5AuHhcPON1qgwFtdHxV8L84XGaVtY3esUODYb9lJh1oVCCf7Mh/7CAWG
Ou/9uvH3ApG1KVZ1PlaBk2638N+7oUC4vBrXbHySAq9cOb7h8bkCkT3I5HZN
mgKD+3vg6IYCoU6tTF2Xr0CHTh5Btc6nRd5Pe5d2uqjAF0X3XufNOS20PtMG
Z5T/+Pm21X2P7Dkt8s917zSgSoEmRq2XXrp2Wui6PX1V+UaB5dnGk430zojT
q1MLFn1R4AjvvlujHc6IXg/nbG7ezAn1r7wO6TPxjCh0t5u8x9AJm7UfP9gq
/Izos7vG3rmLE7ZxvFwy9PgZcfZLxvdLtk5YWXk59kTFGdHXa/G1KVonbBz6
6JJ3wxlxPleV+NHDCeM1kbbTuxYKjw71CyNHOeGvLbJb5PYtFEWL83/rOsUJ
Xw+Oc5wzo1AMLFtpmDvXCV9ldb6/dm2huKQQT4YEO6HPny9PtEosFL9HNcr+
T5gTTq1+dsLgdKEo/vv8uuBoJ9ys29EjqqJQDB0aPrb1HidsKOy6IeFtoSg5
Mshi/2EnHD3NJqZ3cxDDW7Sq0+Y6of/CXUarTUFcn1VysfScE1YVDfw8Swli
ZFFUvM81J3wWnG7WZACIsp6ec/6pdELzAaf8JniBGB1mpIt+4YQt32UkB88B
cfM/FS0tPjlhnK+3t88yEOP67KwsaKTEuwc2d7CJAFGxd+KxUW2UOPvDwac3
4kB4fTNd9byTEjv6tU33SQZxd2LVsFWWSrx3NfPtqzQQE/KTzdq7KNEoWXVh
3kkQ9zv6vj3UR4lFf5y7/e4siEnBlth7mBLXOM0aE1oM4uGtl9E3xysxSO3y
uFsZiKkux6bPnalEG992O+/eAVG11V+pt1iJhrFeX9IegvB+p2iyfbUSBywc
Vb3/CYjHIz6U225W4v7mQXHwHIRPek7K2XglOrsdTWj6GsRTg6WBfxxQYuSE
qXcD/wYx00834O/MH++vSUJQh7cgXlxuMA4rVGKKY9sX1T++nmMFzzteUWIm
ff0qPPRk+m0lutH3+z3tt9GjWonX6PXe9Gs24V6tEmPo5/knX7JZ+E2Jpvry
/bzV2/T1p5bOeIfe78Kpw67uNnZGoN/n/Zm2e5x6OOMH+n0DOpfNv+jojOM1
8nl8XB7be7K7M4Yo5fMKvDuu7YdBzvjQSz7PzxqTqoixzthvv3zeS7dXZph5
O6N5qfw86j/uCc32d8bl8+TntXz0NM/fVzhj9Uf5eX7N7N6jaoMzzk2Vn/fK
dk8/BMY6o5glz8N3/9S/WiU545X38ryElMyJS0pzxq8D5XnSs7Obqcl3xhvL
5HkLjaxRlxQ545NL8jw2fpnRfEa5M64NkOd13cDFd+ofOeMKb3memx5UHd7y
xhk1Z+V5D29av6znF2e87y7vQ/MZ+b/n/+SC+Ezel4izK38daeiCt6PkfWrZ
Vbx5auaC83PkfYsMaXRmha0Lhg6V99Hgwfk/f9a6ILSS9/VPt/ApqR4uOEwn
73ObXYMce41ywfNh8r5H17fUK5/sgocfynnw8x8l12fPdcEXTnJebM2JSvoe
5II1HeQ8aW/kGRAb5oJfS+S8iQ0w6mcT/eP1feU8Mr5R0R4TXPBunpxXOxx3
Vo897II2v8h51nHLxJzXOS74xkHOu11vTMNDz7mgfrGch52GVI375ZoLjjaV
8zLhcLJlWqULpgyS89RU37e+7wsXbCiV83bvTMvLdz66YMw9OY+7Xni507+R
Ck+p5bxO7HFsbtM2KozWy/mfed59rb/brk4qbN9Tzvv9VQoDhaUK1aVyH/QU
H+5fcFZhdiu5Lw7uyUmb2EeFD27JfWLREBzybqgKm5fJfXNogm7EhvEqPNBE
7iPrUw1dTGeqULFf7qsjv0BtVoAKn7jIfWYXFHp20GoV5lfIfXfsZr+tDzep
cNEWuQ8dnJvNWBKvwq895L48HnPJueUBFb4vlvtUURvZNDFThTfXyX2bNXzY
LVWhCj0L5T52Tmt78EqxCvso5b7OblUWNP22CnfGyX2umhs7sO6JClfUyX2f
e2lcxz9rVfjuF6kHtJYmL7t/U+HW3lIvnFpfeepkCzW2Hyn1hK56T+RwYzUm
N5N643TfaROru6uxvL/UI+5J3e2WO6pxfbjUK4X/Vje0dVfjlSFSz/Seklpy
YJAa1UFS7+DpOXvdxqpxdleph/r+arfgxnQ1Xg6Seuncshoxy1+NkTlST3nc
yWj3bbka43pIvfWXevF/tm5Qo1Go1GMD4lRZVrFqXPRB6rVLH+rWFiaq0bZx
i//Rc4M880ePSVPj01yp94ozVvZ8dUqN9TekHhzaVnxaXaTGLeOkXrw6v1FR
h3I19los9eTwq+e3H32kxnaDpd4stQmf9dsbNWYckXp05MZB2tv1P17vpNSr
Zc9btpj/kwYLE6We9RxQcrexoQZvHZF692ZK1JF4Mw0qFkk9PKaJ5woHWw1e
SpN6uWK60dC/NBrsly/1tBdWdJ7gocHYlVJv3zHb+ffbkRp0t5R6fMKqiYXr
J2vw4BOp1+9Vmkb9OleDBiqp5yfpqqZmBmnw/H6p9x/GJysGhmlwfSvpB6bU
+TR6EKXBr4XSL1SNtSwLSNDg8u3ST0zLfpmsf1iD8e/IbxgeW7w3R4MxJ6Qf
8Vnk7+FyToOTPaVfqb6m6FBcqsFpCulnZjp8eDq1UoOGh6XfebY5J/fTcw3i
Z+mHZr8O3rDp449/byb90qvBOq9ujbS48730U3MPNVjltdZisYP0W2+awZeh
nbSoN1z6sXm+ocWPLbQ46rD0azXn++1e6qxFq3vSzy3s3mxemz5aXOAo/V7t
mkvuKUO1ODFJ+sGAR5GtdeO1+Je/9Isfew17eM1Xi1nzpZ9cktD2uG/Aj9c3
ln7z8z83Vn8N0WKFn/SjQeNjR8Zs0mIfM+lX6/PGdbOM16JNrPSzy41N3p9O
0eKuOul3/1lSec4zU4v7n0o/vLJ8z7YXZ7QY9Vn65QanaT4hxVp87in9dEh0
d5XRbS3e/CT9tt7b6p+OPNGiJk768TXDUitErRZLt0m/3vjYnNRbDVr8/Lv0
82tb2i31a+GKO8yl3286p2ZQI2NXrDOXPCD8YobJju6uGLhZ8oJmFotf2Tm6
4oVgyRMi1qkKzrm54vVwyRv0n9Rt8hrkitn5kkdE/pY/qWaMKx4ykLzCIHGl
/brprjhtJvGM772/m/i74opHkne0mdzo2vHlrhieKnnIloLz+/pvcMXmv0pe
0q5T+MLKba54DCRP2bp00G+LEl3xm6vkLYa3Wxo2T3PF33Mkj4lVlTxOOOWK
yeWS1xjHRp1QFrnile2S52x/P2rdpTJX3LBE8p6Oo4zGTnnkiq2E5EHxxyvM
P752xYY7khd1arPz88Z6V+xcInlSwryJF7v8pMMPNyVv6nzFND7nZx26u0se
tde6avYQMx3+O1vyKrOIZNf/2OjwQZbkWYnPfFoGa3Q4NVryru79LSsNPHR4
4rrkYcn7Xx5NHqnDPpGSl/VsfGyldrIOj2yUPC1lmv+w0jk6VHeTvM0CFGY+
QTrMvix53CHTDzVf1urwTi/J66xW5kBUlA6VcZLnHbkXHG2eoMNPSyTvs3HV
TS84pMMZAyUPPLajwWlUjg49V0le6PC5sPHzszqsqJY8MX1MaPnKUh0u/yB5
o+JEvxTDSh3qrZI8MuPnZoGHnuvw3FnJK5ULL/Xv/fHH39Of7NJI45t6bv/v
a/p++N/vl68H/Hr084B/Hr0f4PdD7xf4/dLvA/z70O8L/PvS8wB+HvS8gJ8X
PU/g50nPG/h50+cB/HnQ5wX8edHnCfx50ucN/HnTeQA+D3RegM8LnSfg80Tn
Dfi80XkEPo90XoHPK51n4PNM5x34vNN9AL4PdF+A7wvdJ+D7RPcN+L7RfQS+
j3Rfge8r3Wfg+0z3Hfi+0zwAngc0L4DnBc0T4HlC8wZ43tA8Ap5HNK+A5xXN
M+B5RvMOeN7RPASehzQvgeclzVPgeUrzFnje0jwGnsc0r4HnNc1z4HlO8x54
3tM+AN4HtC+A9wXtE+B9QvsGeN/QPgLeR7SvgPcV7TPgfUb7Dnjf0T4E3oe0
L4H3Je1T4H1K+xZ439I+Bt7HtK+B9zXtc+B9TvseeN+THgDWA6QXgPUC6Qlg
PUF6A1hvkB4B1iOkV4D1CukZYD1DegdY75AeAtZDpJeA9RLpKWA9RXoLWG+R
HgPWY6TXgPUa6TlgPUd6D1jvkR4E1oOkF4H1IulJYD1JehNYb5IeBdajpFeB
9SrpWWA9S3oXWO+SHgbWw6SXgfUy6WlgPU16G1hvkx4H1uOk14H1Oul5YD1P
eh9Y75MfAPYD5BeA/QL5CWA/QX4D2G+QHwH2I+RXgP0K+RlgP0N+B9jvkB8C
9kPkl4D9EvkpYD9FfgvYb5EfA/Zj5NeA/Rr5OWA/R34P2O+RHwT2g+QXgf0i
+UlgP0l+E9hvkh8F9qPkV4H9KvlZYD9LfhfY75IfBvbD5JeB/TL5aWA/TX4b
2G+THwf24+TXgf06+XlgP09+H9jvEw8A5gHEC4B5AfEEYJ5AvAGYNxCPAOYR
xCuAeQXxDGCeQbwDmHcQDwHmIcRLgHkJ8RRgnkK8BZi3EI8B5jHEa4B5DfEc
YJ5DvAeY9xAPAuZBxIuAeRHxJGCeRLwJmDcRjwLmUcSrgHkV8SxgnkW8C5h3
EQ8D5mHEy4B5GfE0YJ5GvA2YtxGPA+ZxxOuAeR3xPGCeR7wPmPcRDwTmgcQL
gXkh8URgnki8EZg3Eo8E5pHEK4F5JfFMYJ5JvBOYdxIPBeahxEuBeSnxVGCe
SrwVmLcSjwXmscRrgXkt8Vxgnku8F5j3Eg8G5sHEi4F5MfFkYJ5MvBmYNxOP
BubRxKuBeTXxbGCeTbwbmHcTDwfm4cTLgXk58XRgnk68HZi3E48H5vHE64F5
PfF8YJ5PvB+Y91MeAJwHUF4AnBdQngCcJ1DeAJw3UB4BnEdQXgGcV1CeAZxn
UN4BnHdQHgKch1BeApyXUJ4CnKdQ3gKct1AeA5zHUF4DnNdQngOc51DeA5z3
UB4EnAdRXgScF1GeBJwnUd4EnDdRHgWcR1FeBZxXUZ4FnGdR3gWcd1EeBpyH
UV4GnJdRngacp1HeBpy3UR4HnMdRXgec11GeB5znUd4HnPdRHgicB1JeCJwX
Up4InCdS3gicN1IeCZxHUl4JnFdSngmcZ1LeCZx3Uh4KnIdSXgqcl1KeCpyn
Ut4KnLdSHgucx1JeC5zXUp4LnOdS3guc91IeDJwHU14MnBdTngycJ1PeDJw3
Ux4NnEdTXg2cV1OeDZxnU94NnHdTHg6ch1NeDpyXU54OnKdT3g6ct1MeD5zH
U14PnNdTng+c51PeD5z3Ux8AuA9AfQHgvgD1CYD7BNQ3AO4bUB8BuI9AfQXg
vgL1GYD7DNR3AO47UB8CuA9BfQngvgT1KYD7FNS3AO5bUB8DuI9BfQ3gvgb1
OYD7HNT3AO57UB8EuA9CfRHgvgj1SYD7JNQ3Ae6bUB8FuI9CfRXgvgr1WYD7
LNR3Ae67UB8GuA9DfRngvgz1aYD7NNS3Ae7bUB8HuI9DfR3gvg71eYD7PNT3
Ae77UB8IuA9EfSHgvhD1iYD7RNQ3Au4bUR8JuI9EfSXgvhL1mYD7TNR3Au47
UR8KuA9FfSngvhT1qYD7VNS3Au5bUR8LuI9FfS3gvhb1uYD7XNT3Au57UR8M
uA9GfTHgvhj1yYD7ZNQ3A+6bUR8NuI9GfTXgvhr12YD7bNR3A+67UR8OuA9H
fTngvhz16YD7dNS3A+7bUR8PuI9HfT3gvh71+YD7fNT3A+77UR8QuA9IfUHg
viD1CYH7hNQ3BO4bUh8RuI9IfUXgviL1GYH7jNR3BO47Uh8SuA9JfUngviT1
KYH7lNS3BO5bUh8TuI/5f/ua/wXzODnp
                "]], {{{3.3398997238013997`, 
                0.}, {0., -1.}}, {6., 0.}}]},
             
             ImageSizeCache->{{151.03053314008383`, 
              175.01401975664157`}, {-144.0191331067675, 
              17.268729285920095`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "20.738471836503155`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "20.738471836503155`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "16.897386714324067`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "16.897386714324067`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "16.897386714324067`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 20.738471836503155`}, {
               Style["75%", Bold], 20.738471836503155`}, {
               Style["median", Bold], 16.897386714324067`}, {
               Style["25%", Bold], 16.897386714324067`}, {
               Style["min", Bold], 16.897386714324067`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[7, 18], 0.3888888888888889]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndcjn/0/4tPlGTPSohkFF1XRqiOzGwyi6ystIzIli3JHiHZIyVUVqXz
JrOlvUskTQ0hI/ldv8f3nO8fv58/ePTodt/39R7nvM7r9ey+xM1mWSMVFZV0
5a//+y//UR/0TyuvxERsfvuuWvP4fogc4GaxusxEZM+6ubT5FS9Y3fe9c+MK
E7G1do3e0Gxv6GEw1e/0FxNhuESvUMviMGR0xdg+VSZCP0bf6ejyo+CtPeBP
ZLWJONQnwOLYq2MA7S/2nfbVRPQKvR1fCSfga8uWdoW1JkJvcPQ+ndSTcKPZ
Dq8N302Ehd7we6f3nAY7tarHGnUm4mnDP5MKG1/QUllY4vfTRLydpjEybMQ5
ePY7oaPJbxMx/YBlixNT/WD9d8tx0X9MxL8BDZZmO/2hT3Xwhtl/TYT52KHD
7jpdgtwyvRulDSYiPMJjZlHAZThadDhtq4okoubOQIP6KzC6oOG/Vo0kEfzT
a/h8h2vwM9t14NXGkig2i/PaWHAdAtPyHQarSaKHjVOVi/tNWJg45cTbJpK4
q25xV+4WAG1jo57PV5fE0aPnNuCn2/DqZf+vVRqSODLBLapFdBBsFv7dd2tK
wnW+fTfdyGDoH9FiegctSQT0UU9cs/IefHyw3TOghSTGH3d3N9l5H07dq7xr
3koSvd27j3h9KwTGBy54/661JKosbTaEvA+Fv9cTWji0lcTMpT1LnXs9gHuX
LC1/tJPE7CtRu9y2PYSl54NdvDpI4uPph29Nih5Bp9N6F3Q7SWK+duPFPRc8
gbijh+PudpaENCVvd3hJOOzwbvgzUkcSax7/3bZwbySY7nPtl64riZAWwd22
DIyCYs98O0c9SYx0Mx20+gfCuS1TDtZ3lUTTN0d+xBcJmLIh6smR7pIwKzt6
q2/2M2i0pn+pfg9JHDi6bc6GzOfw0Mm/08Oekrg94dLutIJocFzewnp8L0l8
qkt8urL2BXRZvN0j11ASc7XNFk5q9QqS5lXecOsjiSytdiN9h7yGvbMXpDfq
J4nQvE9bFjq+AbPpCWqnjSRh8WlZ53vX30LFRMtBffpLonRIVO7xihi4NDZ4
aeQASVwwsGloZhkHM6z0Tk6VJPHk4KXq9ufioan54eiPsiTyn502DFR5BxGD
G76uH6isv+fHmjyzRHCTXPU1Bkvi78Mvnmd/JIK+Uf50vyGS0P66asXmJ0mQ
3mvKzgFDJVF7xm+1285kONg96t7zYZK4ZV/wx2FKCljo9i+YZS6Jw2vLK6Fb
KtR08G9ZaiEJt+UdAot/pML11i1gK0jie9sCNfPkNLBtvt21pZUkNsyPHa0d
kg7Nm1ZeuDJSEstvP9KdfzoDhOqC+EGjJdFRJTEsY3smuNfH178ZI4mwNMM7
C52ywLDOwmj+OEkMH9qpT/S8bMipuTOvyloSKT6r8uKn5sCRii7euyZI4uDX
ufrW43JhVLFPePtJkrgfv1yjzioPfnz4W3prsnK+rVp4+EE+3M516Ww+VRKz
3IaOqIP3sCAjz/rdNEncsIq8vrh7AbRJnrxxiY0kmoVVZedeLYCXcU9vfp8h
CfNmj7dZG36ATa+NMw7MUs6j4cZj2wM/gPHzC01050hiQdXOH3NMPkJBpNbg
u3MlccpowO6gBx/h5KNty0baSeLtfy56M4YXgnXIl5Np85T90PLP6f6sEOqD
7F+stFeeZ2NYx8qxn+DuzfjaPwsk0c7N4cyhuE/gcMWix5FFkki0H30jaXoR
dLxwx0Z/iSQ6qMcOPpZeBDFnuux64CCJxSM/NLpo9xm2H/e5b71Mud/3Ve8k
5H0G2edvQc5ySQzwufmhdmExfN7v0sptpSQmWJds/FhQDGd35UGjVcp9majp
67qoBCZvm+x2ykkSkVNrk53zS0B141P/3i6S+JxoNDnErhTC1honRLgq56XV
+ux2aaWw0uXC3ymrJbHiko+e0+Qy0F2pZfxxjSRse0hBh6LLIHHJtvnr10li
UlWDvs2Qctht/8Vbfb0kfoUMnHTqVjkMmWsfcX6DJDqlthgsdayAcpv4sv4b
JSHMb09utLsC/CdbaD/fJIklB0d7fC6vABvrO+NnbZHE6A7hPZ9O/wJNRnXZ
VLJVqU/te65aEfYFwi18bm3ZLon+bba2etO2ElzM/ma08JREoJnxjWi3Suhu
6tL0yk7l+zjs8BnxphLSjPMGD9otiatLYtUNu1SBV+/Jy9/skYQzOo1e7FoF
5j2enpq3Tzl/mosX5ERUQXUX45eV+yXxzEJvX3SjarjW6cK3nV6SeFnp3O+m
QTXMaavVs723ch9UTp4/PrYaNFtsm3HrkCT8VHK7ey6rBlT/smv4YUmMy7CL
XLWrGtY1tg9JOCKJ9MPNF0+5UA29GuI+LD4miadhcb8MH1ZD9k/z1t+PS8Kx
dPLC73HVcLg2aMSBk5Iw9NWd8eBDNYys1F2tc1oSGe4RG1d8q4bvJYcuBp9R
/v+n0snN1WogoLA+weqsJNQKDPSvt60B+3znhtRzynp22ao1sFsNtMrKNV7p
p9xvj/DPEX1r4EXKJPs/FyQxZW3noSNMa2BjQuShwxclYXlo7dCXQ2vA6K1R
ZPfLknh/p3PEVMsaeB/tVx52RRJerqt7Fo2ogRNRzXWsr0nimvEEB2+rGhj3
ZOuEnOuSiNU0+2Ct/P53aMUm15uSsLmX4tHTogaCg+cHqAYor/fouszArAaW
BMRlnrwtiWTDNiNmSDXQ4Zq5eu8gSRw77/DlQe8aeOsfNCTijiRe/wo+OUuv
Brad1V0x5a4kLmo2nBrWpgakk4dOf7inPH/7xB0u/9XAp8P1L91DJKE/7o5a
nbI+vl7O35uGSWKV3ey694XVMGlPbs/zDyQxY62/mZRUDSo7Js3s/0h5f68/
T2ojqyF0U+TuZ48lYaSeucbkZjWscDcKnRmu9JMBwbOrj1SDjpvfx+IISVzu
/83W3KMaEhybt9nyVBL+wXkOXeyrYdfSrVYtUBL1Id+n+llVw+CFFasvC0l8
CDxW9qxnNZTZzr808Lkkzp3XrTrdpBouzIx79zpaEtU7XFtYJ1TB9Knm/+xe
SmL1sWmnCg9VgdqEoP6VryTRxq+fZ+vxVfB4tO6CnW8kcby6IfJjoypwhkM+
7WKU31vl660MV0r0sPrIm7GS6GV9yyFEOf+pA50rhsVLos7l57Bk/UrYPyBX
JyFBOc/Og6dkpnyB4X0nTVycKIkft66NT9v1Bap6Rm7+liSJ7rUTP2cN+AJX
uxrd3p8iCY+oy99+ZFfAbG2/LO00SVR6vlhhsacCmrVvrhGcrtTD2t6Lo/pV
QFTLrWZWmcr6jTxu7p1UDmuaVaxIzZLEna/9/R6sLwcDtflnVuQo92tSmPvU
TuWQ9S/21e9c5f032HR2elIGPr+H//DJl8TegfPH6diWwYjvgQbdCxR9YbRd
WldXCt+qdGaFfZDEKxWHg/tOlsKtMu894wolYdf56mFHk1KYX/QnNPuTJDYX
FWhJsSXQssCp0OWzJAau/rb269ISiM7OaaNaIgnNnZqx0X+LwSNt4siTpcr3
U70RG3GqGPomRqwxLJdEeGvbjBqjYsiP6Xc5vEISu1XGqm6P/gzHX55PnFwp
iYrJg1pusv0MY4WmyocqSZx8Z725vrIIfoVvGeBeo9R/3eGu+nuK4M6D8gVN
a5V+4mLwWq1zESy+N+/wuW+S2K/9Ruv5nU/QLjD2qfEP5T59mbl23chP8Ob6
8C+iThJ5Y5++HJxRCFsvBerO/KXU238H1vRxLgST8zqTin9LouiQhaujaiEU
nvLesrle2e+dC83an/kIZ47+ua3VIIlGedovJhp/hIneTtmX/klCq+iSm9GL
D9CwN0djoKos/vWd9C193gcI8Zw49HUjWfhPuzDb6VsBLN8SsdLuP1l0u94z
TeNwAWhv6Of7RU0W/Xq6pif3LoD41edfezaVRddOWkHxXu9hp5NmXVsNWUSt
XnI57kU+DFq+pdfNZrKYb5+wsLBRPpQsKp81rLksJgevdrQZnQd+8+btjdeS
xf5l017YeuXCtNmxYYtayqKgFSSYJefAf9OHf6ptJYuguk6t+nfNgUcTA9vu
byOLPhdPtvJYnQ1OY3VGabeTxZVNKb2mvcqCrlbea++0l0VL/0+TvnXLguTh
fy6P6CiL4oGOX/08M2HfYKeklE6yyMg/8G5nUQYMk3JUVmjL4vjbJY8zp2ZA
Zb+JJr91ZFG5pteaNEyHy70iFvp0kUXMmL+7Agalw6zu/Y506yqLLpsrWu+5
nwYauuejQrvJomRXaugx0zR42kGzcqy+LF6E3reuj0iF1a23dMnuIYsTwZBa
NiEVejYvn+RiIIu7a7ra7ixIgcwm87aqGMpiXTv/BwVbU8BbNTbwRG9ZaJw2
29WrWwpA/bCcXn1l4X20rsY5Jhlqf9xuFt5PFnX9I8NitiTDzRrtYZONZWHs
djrHZmAy2FUcdCzoL4uUXcOx3bckaFH823ediSwMNENKdCKS4PmHVW+ayLJo
9dW63s0rCTbkZtedNZWF34uKG+0WJkGfjAmGxoNkYRFU6aNhngR5SeGzxWBZ
tF071WpCtyQ4Ftd33wwz5fUzLpkkaCbB6NfnHnweqqx/+sErBxoS4eezZkWb
hivrbdrq7sqfiRAUubmdloUsfs0+am77KxEWPSobdclSFrfe3fw3QjUJ2obY
rTMdoTz/gtptjVolweugmCuvrGQR+udV260GSbDl5rBk21HKeZleVL/fKgn6
X7mt+mW0LC4dH7Wo3iEJPvppS55jZaG54tOCwENJcPrMwUVtrWXhNjDFwEF5
3gnHfx+5MV4W7zaNa1xZlQR/D63CoRNlkd72x/Y2fZPh/v7syrhJstgunVx/
wjEZlu2aoLdoiixsV/kMMQlOhk7bwifXTpVFi9Ty29fqkiHOo++2fdNlcVrX
dXXAmBTwXHsuqPMMWficfqH57UwKDHRplhs0UxaN48taDKlMgeIVmzVHzJbF
+ItHrPWtU+H8krJhKXNkEddx8/cl11Nhqr3dquW2sggwSft2VS0NGs2NOfvL
ThbVB63/+axMg4c2w94emi+L5jFY8Do+DVZNvv2z6wJl/VKfhv0YmA561tq9
QxfKYu/jdgZRF9IhaeTBOWMXy2L0ovTbomkG7LX4vS9riSxGRk1Ourg2A4aa
rXrovFQWG47Ebq7Py4AKObvo3zJZfFijZegxPhMuGU9of2KFLCpeqw6/F5YJ
M3uHj+7lKIvUxBvjrbtmgXqPvu5PVsnitxfaFxzIgogu565OcpZFj6XtR2vX
ZIFbp2Yp712U+nHld5rvnGzo0XZzo3Vusli0MmqUSmQ2ZGiVSU3WyOJey2cL
fnTJgYPqdovPrlX2c1PaR/1tOWDZOOaokbss7hw9FzUgKwe+/h0qcL0sdkz3
sHsr5cL1nwFVNh6yCJ9emOe/Lxdsazt3/bxRFu3qrq9dkpELWpVeUzZtloWd
w6O9b3vkwbOSX9uab5XFJC83NR+nPHAvdLxzcZssNpfe93MMzoPe+Vm58g5Z
rOn2uqxrRR7kZo5v/spTFo9CfR+598yHoylPhtvukoVT3dPGJnPyYVRCH6eK
3bJ4P9Pogs6efKh7c/bcjr2y+OkfU9I+MB8CozVi2uyXxe21nvGVsfmwIGrT
r+sHlPWdZ7R41+d8aPOktPfQg7LYuDVX3P+dD69CbefGecsizL6VgYP6e9gc
/Hb/Qh9Z1Lg+rN7Z8j0YBwx99PWw8jznE8IblJ8/XA34vPeocr/aX7V5p/Ee
Tvl37tD5uCzMFxyNqqzPB+uzXmOCTsjCaqf9IPvSfKg/8csdTslC5YZxm27v
8uHeYcdryadl0V9VN9oqOB+WemWlLPOVRbnl+ZCkffnQcc/4xr/OymLbqCf9
Ps3Nh9jtT+RD55X6FeU29LiyHjs29VnS9YJSjxyknb9K80B2P3ssxF9Zn/Nl
ncwD8uCzq8azMZdkoWoQOtdzSR6cc9xUnXlZ2a9x7req2+fBlKWlXZ2vKs9b
HTc+IjoXVBfaTv13TRZjLHfptXHOhQe2b7cfvyGL4WfeOfVtmQuOM4cGG9yS
BTh/OWd+Jwd0pwbkPQ6Qxc2ufep2j82BxPGdtSYFysL3S2iHYTnZsGe0l/n7
IOU+t89xue6UDWbwy2ltsHJ+V9mma/zMgvKhjufV7slinP3zzzc9s+DiwKwY
3/uyEAZdrF6qZcGMAeN/9wtV6vnP0XhrfyY06fukD4bJIuLBtr7nmmRCeM8+
tjYPZfHX8FTth10Z4Nr17IGiR7JQKywvf1OfDvraGo83PpHFgGNP/51xT4e0
dpuKNSOUflRQX3OmLA28WpZ2uBip3J/6NtqtF6aBRTPbsXKU8nml8T0mJqdC
9X9v179EWXzPjU46NDoVrv0zuz73mSx0HJ2f6zxMgbm/b6WWP1f6g2NfM3PD
FGj+vdN/O14o9eDClk8mvsmAVQdM27xSfh+y9eEwjWRYV/ZzyfXXshhbUxrk
uzkJDItWHjd7qzz/pqjA/RWJkPM+81lsjCym9faZNXJhIhzOtq5ZECeLwMqp
Sao33sHItMfdvsYr57lk3IivRxLgx7ve0/a+k0XknN1S5NZ4uB3ju6NTktLP
enusE85xYP9S/W5gsiySVCpG2i2KhdZiY75lqqIv/JsbvZ8TAy/DS7SS02Rx
oWXjWv8Zb2Hjg7kWyzJkMeHk792FM96A0b03zj8zlf22sSmrnvsaCm6b+Xln
K+f5dfQUNYdXcPL6rVi9XOU8PhhSP3ftSxh3qdOf+3myaPOgfpXe/hfw59yB
vmPeK/WtRNNm1+VouHvqp21mgSzm7WwUFfjsOSw5utLL6aNSr56vMY4sfgYd
vDMfNxTKYlarHiHv2j6DmL3WJceKlH60rKzD3zECtns+7mhQrNyfJpZtg+qj
QNrSe9zjEkU/OF4+lrDpKRSt990wsUzRL1GzQp0aR8LZ1eo38stl0eHA9DM7
zobDJKeNaWu+yGJrH/8/puZPQGV5yX9qVUr96K8e7FD+CMIWzR3oWy2LwuFT
NP/eeAgr571x6PdVqfeuJ/SLXR+AzmyzE1G1smi9ybV/o1Fh8G7arefTvyv3
a4pWy949QmH3xE5fP/1Q+tn1yBdGLUNg8NgD3Tf+lIX1035l+U3uQ9mIn9M0
fyt6akiCsXqze+A/fKWn/x+lfvgdPZFjEgw2gzPvSn9lYWnwuPayQxCoSdbv
XzTIolH70Lz8wNvwpN/jFnNVTMUgM4vtTTUCwKVXb8tyVVPxacD2m96bb0K3
7r4u2xubija9aq6m/7sOqTrqF1qrmYqv+iNVp/legwMdNsZda2IqnB1P2cwf
dRXMW5f8GaJuKtSNo0vtVa5AlebcfrEapmLMLMP9DxIuwdUmb+wWaJqKNVPX
/ds77yLMUTU7WNPcVJjruITEDr0AzepvPtnTwlRMG7Di8Z/B5yHqR8fSjq1M
xZOLnc0ypp+FtTX7OwW2NhUjPaeXdvc6A70q6sZZtjUVlkFW9VdyTkHW5xUe
Se1MxVm/1AoD65Pg8yHjxtIOpuLPUpuRW+KPg1XuuPS6jqbCQufV8E2rjsH3
9Edq3p1NhXv0Vcf6LkfhVpLhID0dUxE+Zt+qxHgfmB93Zul9XVOx2DfgzpQD
3tDqddOTo/VMhcH6ZuvnOnrBi2ce0RldTUU/bd3Aj677wSOy+Ouq7qaC/el+
j+boN+j//z/T65FfT++H/H70ecifR98H+fvQ90X+vvQ8yM9Dz4v8vLQeyOtB
64W8XrSeyOtJ64283rQfyPtB+4W8X7SfyPtJ+42833QekM8DnRfk80LnCfk8
0XlDPm90HpHPI51X5PNK5xn5PNN5Rz7vdB+Q7wPdF+T7QvcJ+T7RfUO+b3Qf
ke8j3Vfk+0r3Gfk+031Hvu9UD5DrAdUL5HpB9QS5nlC9Qa43VI+Q6xHVK+R6
RfUMuZ5RvUOud1QPkesh1Uvkekn1FLmeUr1FrrdUj5HrMdVr5HpN9Ry5nlO9
R6731A+Q+wH1C+R+Qf0EuZ9Qv0HuN9SPkPsR9SvkfkX9DLmfUb9D7nfUD5H7
IfVL5H5J/RS5n1K/xf/tt//Tj5H7MfVr5H5N/Ry5n1O/R+73pAeQ9QDpBWS9
QHoCWU+Q3kDWG6RHkPUI6RVkvUJ6BlnPkN5B1jukh5D1EOklZL1EegpZT5He
QtZbpMeQ9RjpNWS9RnoOWc+R3kPWe6QHkfUg6UVkvUh6EllPkt5E1pukR5H1
KOlVZL1KehZZz5LeRda7pIeR9TDpZWS9THoaWU+T3kbW26THkfU46XVkvU56
HlnPk95H1vs0DyDPAzQvIM8LNE8gzxM0byDPGzSPIM8jNK8gzys0zyDPMzTv
IM87NA8hz0M0LyHPSzRPIc9TNG8hz1s0jyHPYzSvIc9rNM8hz3M07yHPezQP
Is+DNC8iz4s0TyLPkzRvIs+bNI8iz6M0ryLPqzTPIs+zNO8iz7s0DyPPwzQv
I8/LNE8jz9M0byPP2zSPI8/jNK8jz+s0zyPP8zTvI8/75Acg+wHkFyD7BeQn
IPsJ5Dcg+w3kRyD7EeRXIPsV5Gcg+xnkdyD7HeSHIPsh5Jcg+yXkpyD7KeS3
IPst5Mcg+zHk1yD7NeTnIPs55Pcg+z3kByH7QeQXIftF5Cch+0nkNyH7TeRH
IftR5Fch+1XkZyH7WeR3Iftd5Ich+2HklyH7ZeSnIftp5Lch+23kxyH7ceTX
Ift15Och+3nk9yH7feQHIvuB5Bci+4XkJyL7ieQ3IvuN5Eci+5HkVyL7leRn
IvuZ5Hci+53khyL7oeSXIvul5Kci+6nktyL7reTHIvux5Nci+7Xk5yL7ueT3
Ivu95Acj+8HkFyP7xeQnI/vJ5Dcj+83kRyP70eRXI/vV5Gcj+9nkdyP73eSH
I/vh5Jcj++XkpyP76eS3I/vt5Mcj+/Hk1yP79eTnI/v55Pcj+/2UByDnAZQX
IOcFlCcg5wmUNyDnDZRHIOcRlFcg5xWUZyDnGZR3IOcdlIcg5yGUlyDnJZSn
IOcplLcg5y2UxyDnMZTXIOc1lOcg5zmU9yDnPZQHIedBlBch50WUJyHnSZQ3
IedNlEch51GUVyHnVZRnIedZlHch512UhyHnYZSXIedllKch52mUt+H/5m3/
k8ch53GU1yHndZTnIed5lPch532UByLngZQXIueFlCci54mUNyLnjZRHIueR
lFci55WUZyLnmZR3IuedlIci56GUlyLnpZSnIueplLci562UxyLnsZTXIue1
lOci57mU9yLnvZQHI+fBlBcj58WUJyPnyZQ3I+fNlEcj59GUVyPn1ZRnI+fZ
lHcj592UhyPn4ZSXI+fllKcj5+mUtyPn7ZTHI+fxlNcj5/WU5yPn+ZT3I+f9
xAMg8wDECyDzAsQTIPMExBsg8wbEIyDzCMQrIPMKxDMg8wzEOyDzDsRDIPMQ
xEsg8xLEUyDzFMRbIPMWxGMg8xjEayDzGsRzIPMcxHsg8x7EgyDzIMSLIPMi
xJMg8yTEmyDzJsSjIPMoxKsg8yrEsyDzLMS7IPMuxMMg8zDEyyDzMsTTIPM0
xNsg8zbE4yDzOMTrIPM6xPMg8zzE+yDzPsQDIfNAxAsh80LEEyHzRMQbIfNG
xCMh80jEKyHzSsQzIfNMxDsh807EQyHzUMRLIfNSxFMh81TEWyHzVsRjIfNY
xGsh81rEcyHzXMR7IfNexIMh82DEiyHzYsSTIfNkxJsh82bEoyHzaMSrIfNq
xLMh82zEuyHzbsTDIfNwxMsh83LE0yHzdMTbIfN2xOMh83jE6yHzesTzIfN8
xPsh837EAyLzgMQLIvOCxBMi84TEGyLzhsQjIvOIxCsi84rEMyLzjMQ7IvOO
xEMi85DESyLzksRTIvOUxFsi85bEYyLzmMRrIvOaxHMi85zEeyLznsSDIvOg
xIsi86LEkyLzpMSbIvOmxKMi86jEqyLzqsSzIvOsxLsi867EwyLzsMTLIvOy
xNMi87TE2yLztsTjIvO4xOsi87rE8yLzvMT7IvO+xAMj88DECyPzwsQTI/PE
xBsj88bEIyPzyMQrI/PKxDMj88zEOyPzzsRDI/PQxEsj89L/L0/9fwBMT0Fd

                "]], {{{0.3863383091961232, 0.}, {0., -1.}}, {7., 0.}}]},
             
             ImageSizeCache->{{165.47915576952394`, 
              184.38592609445584`}, {-70.73276331492798, -41.72201870129237}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "18.565482082861042`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "17.892719414090802`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "17.64427129598969`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "17.48698334268756`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "17.48698334268756`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 18.565482082861042`}, {
               Style["75%", Bold], 17.892719414090802`}, {
               Style["median", Bold], 17.64427129598969}, {
               Style["25%", Bold], 17.48698334268756}, {
               Style["min", Bold], 17.48698334268756}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], 
           "Tooltip"]& ]}, {}, {}}}, {}, {}}, {{}, {{}, {{}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {}, {}}, {{}, {{}, {{}, {}, {}, {}, {}, 
        {GrayLevel[
          NCache[
           Rational[1, 3], 0.3333333333333333]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndYjn/0xzMSGZGVvckzb3sUx4yQvclI9i4RsrKyNYTIzqiUUYh0TlKi
0K6np1AyvzbZ4/f8ruucf34/f3A915We+/7cn/t83uPVzGXxyJllzczMyPTX
//4rf8aVCVm/r6QtPfafvyGR3KDpQ1unY6/b0rTF3uVKpi6DV4fD64V9aEtm
TVyWqRovh0vzlOfRX9uS873d6V5/VsDqrlGX6Hdb8s6445rxbyX0rdB1XUpZ
FVUebBnZqY0XVMm6MTinooqO9PTrcdtjLWQfB5uiaipKnxDWIXf5ejiyOKHk
v1oqKqkY73koeQPM7jHg4tf6KvI9fW3IhHYbQamcsqZMMxXtaD0nvu+lTfAj
b+igKm1U1DXZvl/gkC1w63RGnbpaFY2tOrdLQBkf2LFs7NNmHVT0bOQpl4iM
bTC6T36kppuK7F5ePvePdkDD6lO8uoCKFibT5Wf3d8GzwqKBffqrKPnX2fkp
P/dARNjM2k6DVfT+gF/ptpa+sGLlq6JxI1QU996tV01nP+g1YGGEyzgVdRo8
5NWVM/5QqfbHVQud//ez23K1+T7IKF42wHOGio7mRjW1XR4Ihy58r7lxropq
71/m6PprP7iu9Xqya7Hp+xe9fxG47yBohpidP+ChIuN/39569D8EpfU2rTy5
WkXbak06FV05GOJeWDhEbFBRQRvHfxavjsDW6B3WMVtVdOOOf2nVxcdg+Ear
xwm7VJRdp7njA4/jUG+Ef9gDfxXNhp9ONttOQHHjup6Gg6b7j3h0yf7cSQh7
E9Sv5KiKbjsebLAt5xQsu964xvsQFT3KOnNtQI3TYO9zovBHmIoidlYrjJtw
BszHtg4tf0lFz8cm+CkXzsKDFqHLra6paGo3jS6/Vijs/6jtWz9ORQfTOhR9
3hoG0/CiVavbKnL+umbohUrnoe2uTgX6eyq6csWpkX1QBHyaGHO2e5qKgr9N
uPOo4QW4YdvDo3+OigyxIyxVXy7Apq/Ue3iB6fl1TiqtnHkRnG73qzap2LSf
nvkad8Zcgjp+yfkzX5q+/+G6GhfPXIZHU4ecWfLOtN6JeQmewVFwRpvmvvqL
il7/3XTvcVA0LPk1qteWnypqblF3Q+HRK9Dtbm4VXzM1rX+5o+Ks8KtQdv8k
w6EKaqpZ48/XuXQNUlwfh5yuYvocV1jpnjEGAtrPcLtorabTx8oVL/p7HZzN
XvSMtVFT66MTDnSxjYXWD+ZVvtNYTe7nSVN2wk14d+hdbnpLNSXuvlf31N44
uDrX7VSBSk2dO/nlFT9AWN/l65IXippuXD1TlLSNwNF8VY9PndWU5dT1UCd9
PFhn/qn0x970/3t8vBGcGw/GYxtyLPqqaeow++IC71twapH5SWtHNQUp5zo8
UBJgof22xY2Gqcl8ybn5g4oSoLNlVXvbMWryfDD+bZuA2/A3d2/FDpPUlFdu
eF53x0S4E1Iru8d0NU3Tr246xiwJ9rofOD5wtpp26F+edYhJggm9Gy4atVBN
mTW8phe634HmVse6T3FXU9HVlbOf6ZPhv4IWFnNXqqnBrTjbtm+TISr0TKb7
OjXFpQVuWxp2F9Z4qo+t3awmtwFmVbfMuwcODpELtu1Q076/Xf9pVClQrVaH
bgG+apoX63pC/ToFcouumB/dryb1j/rODqGpcCyye8a5YDUdmhLyute8+zB3
TdyRqJOm9Y2M2vmo7QNoP7jPfDynplbjh/YsfvkAftkkdbkXqaaLjy++qHbm
Idx+7lg+O1pNL2avvFuzfRrsirqf9viGmgbHrU/7ticNxnqPCH4dr6Y6kQvX
1X6bBk2GZ88tvaOmOXZO2mGO6fCy0YTOZg/UdLh/1fCtp9Lhwn8FZStnqemg
i4fLib/psDJm2sPa+WpymXh85sZxGdBna8mhpk/UZNPf4GsVmQGVx8yZo35u
Wr/XJ09ozDMhq/mbjp3fqMnL8qNj/IRMCP6wuEzvT2qKWtjdITo8E2bFfb4/
+LuaFnXwWvHxTybod64IGvtXTUPWPv801SkLvk/4NWt6eQ0tuKyp/SYoC6jN
ug4LLDV0O2K8v/fzLNhWWtZsRXUNNUXL7TWUbBiZsCV1Qx0N3cirscNnRTY0
8LU8uLOhhvb5DRpoiM2Gkim7Z+5vrqF67X/0/vovG85rrNufsNWQ/4stQzN6
5cDyn/v+hus0lLrJo5HruhyA5HopVztqqPaNhHonb+RAxcDg/be6a8jXbfcw
n9IcSJvRzPV+Lw097J++oJo2F4LahSh5DhpK6DOQ2rnkgss/2z/FQzT0etmq
zh8CckF9P/zu25Eaalf4bbRjYi58CVICv4/XEG3K69Dzcy7cnBPlUm6qhrJ7
7vJIb5wHWzp31VebqaFNi2v3sBiYB8PKx/6ymW+6/vjI5s8W5YFNBiS3WGpa
n5qN27j558GTowkBuhUasq2/P+RKdB6ELhwwvdsaDa2r7N0vNjsP3OxStP02
aqhwQf1nuz7ngV2lYT+HbtNQZbcGfl2sDFA+NyNpwh4NffH2X5hka4D7p8b6
u+7T0N8RZY4M7GWAQLf8qYsPachrRUH3+2MMMLXXFM2q4xr6dzusq+tcA9hW
K/6+6YyGAj1SRjdebYAPxpmJe85rKKWCeZmqOwxw/dwr36DLGrpTXG9Yn4MG
8F6xcEpIjIaSbaYXpIUYYHD/j6oLqKGq7fbfTLlggFo1Pb5dT9TQiKt/5jlc
N0Dhk+8JiSkaqjPnefjoWwY4HeG1Ny1dQ3PMb/tY3jXAYi8zZ2OuhvJj83Re
DwzQddCmts8LNWRH+1/ezDBAGZuKXz881dCsvvctSrINcO/Zjlu/Xmlo0Ibg
nLJ5BvC7bLWnwgcNFdMcH53BAJM2+E+q8VVDbwKPqlebPrccVte24W8N+Rn2
HP5t+vm3DQ99aV1WS/s+6Fcm5RrgyuvG8e0qainb9b/ab0y/f921E7vsq2nJ
NXuJ+/pMAwzc0nrigFpaKv9gbafANAPUGB3aemR9LX2ZExoE9w2Q30z3eXJT
LS3saOOx23Q/J95fxNmtteS+tVHLgEQDLLjZaaebRku1Rsbtnh5vgI47Ysav
aa+lLpt/NLa4aYA/43u08umqpUkeWTcDrhkgqXX8R7+eWtrWsFZavSgD7PnS
Ly64n5bgkW+HkEgDjL+VvP3sIC21W2LTo3+YAZrtHTLu8nAtJaZGXbE4Y4DX
zmkt4sZqKeLQrEc/Thjgknr0h+TJWlru2GCm7VEDeP3Ijc100ZKPzeOFRw8Z
oN+dSdsezdFStfv6XfMOGKDqvsdjXi3SklHnnBywzwA5LjOaf1mmpRkrSgJs
/Q1wVHnx7u8q0/oZo3L1vgaY83fejUobtDQ4ekjJ5T0GaJf6bmutrVr6MPHY
6pu7DfDzoNvoJrtM67Xk5r3Rps8Js782Vfmbfn5ek7kbTJ93dlr1tuNBLe38
EzZ2kOn/jy73NwaOaunh5uE/ovcaoFH6hi2DQrQ00M+u/j0/Azw/Yj5qTJjp
ehwuFO8wXZ9pWjeZdtG0vgfc8/6Zrt+ze9U3865q6fvrbEPbYAP0ruh7zeOm
af1KnetVNa2HZU6tzesTtHS9d8N64ab1yjx5YMSOu1oK/nohpGKEAQ4vbdg4
8KGWipKs0ltEG8AVjr0+lq2lWOvqb//EGkBXteXVMKOWznc2bA40Pd+v+Wc2
XinS0p5c+8lvTPsXz6qHx7/Q0t0D1tP+mPabz/LIhqlvtZRnHRqa9NQAI/p1
eJXzWUtRVeeu7PfeAPWtr0YX/dBS/KdwW7dfBnj6uLv3m3+m+61joR9UMR/C
z8cN/Wauo2lF/9kk1c6HZav7NChbRUddKrzd9KhFPvR0THpRxVpHAfGBTXe0
z4cKdQdF1bXRUc+bFqdv9c6HhyX31zdvrCOvRRPzV43IhwOXRjhpW+poYmrp
zrPT82H6+ux6XVU6mvnFsB/c8kE1dMLzPoqOClN+PWm/MR8+Nyi85NRZR6ee
0uRlAfkQ+2rauvH2Oop7ElqjNCQfNl0tGTyjj44Cl0CjkKv5MHTzHJtFA3V0
3KXLdfe7+VBn1JsSz6E6mv/y94Bhxnx43HTJxY2jdZTRY+2oVm/z4ey7z2t2
T9TRj0bjjhf/zYelsSsGHZymoxD34d3cqxuh+/ZfdU7N0lFsRHv3W82MUG78
uqcRC3T0tF5J+RvtjZDaqtyFGDcdDV9zt8aAvkbY93mL121PHVUbPdlu+Cgj
TIm3dHy4VkcWRc8voYsRWu/ZXTt/k2m99o4asnapEd5Pti4u2a6jpcN/+i5b
Z4RrqsCI93t1tOvNKMP2nUbY8L3e6p+BOvK0Wjn+3AEjDEoKHmAerKO+g4bb
XztphJoBzWpVP6mjJluG4NHzRiiYHvKk/jkdrV53qNfAK0YI0bc93ypSR48X
nJgUdNMIi/6Er1SidWS4GfJvbYIROqcoDnY3dNS6dMXWx3eMYHYwytohXkeW
FSqnh9wzQvKsro+H39HRm5E4OjbFCL4dY8Mm3Tddv9tg+2qmzxPL9vKclakj
azublVuTjdAiLaHfUoOOatu/NdS6bYQ3wQNqeD3W0c3795qcMn1/9PyUwi3P
dOTWLK1Gy2gjrO02LNT3P9N6jqm6d1OoERwsMpcf/qijMvNahFwJNkL17LF9
z3zT0RqLwMDw3UbIO5FvdemPjnBF9OcJa4xwfMmUgthyeip/ttLJy3ONMK9n
8dk7lfSkLmn7LtK0/h2qzPLIsNLTnYL3OxzsjPDb8Kp3YW09TQ3+dnZJUyMk
nllY7WUDPc3vO/2dbTkj7Pb4mP+pmZ4ebU7dMv9pPozr63HmTxs9jZizrVnn
+HxoWuOHe0WdnpYl/P689XA+vHzk1atmRz1Z7+8eM90jHy6Gm1Vt3F1PvcYb
IxMH58OqVZsMtr30NO5ArcCrTfKh78CKpzs46MlmadNT9h8NUKXOTreeQ/Tk
Uq3s5klkgOynVuA4Uk8N3K45NdxlgCMX/SuPHq+nAS0+u/mMM8DsdXXzpkzR
k7Nhys3QJgZQnA6dmuuqp8GTTtjveZYH3+s3Wbpsnp7CLrbq1vdcHtx6eaLH
uiV68nHHltnz8mD7ldaW25fryXvszO2jVXkwalNoToCXnvIG/v2d/iIXGo7U
nTzqracZeg/zqSdz4VmTS4tDffR0+Z26ejXnXIh428k+ereeIkLfTfhUKxdW
3IipSAF6Cmm1taBJSg702tYj+16Q3qQvrezCTHqo4rj449nH9PSkSuuIc+1z
IKNl/0VPTutp83mbD0pJNgR9Su7+X7jp+qq2bzsuIBtm0BCLr5dMz+NCl4L2
fbNBszst0yxGTxt62GXmf8iC0kmjj1VG03pNza4yKzgL4trmLaiTqCc3Kjr3
38As2PptUrdmKXoyTk83en/OhOGJj8016aaf33A6s09wJtj4z8jonKun+s3D
LvZxyITiaS+O9C7UU48GHz0OvsuAUN38+UOe6iln9NmPzoEZ4P77XZdxr/TU
L2hMzOkeGWB/z628y3s9/VR/qru9JB3MD3xNW1Cqpy9lf5ZtvCMdHsxcFbzi
l57Sdy2w8myXDqn1/nWMN1PIEBg/+3xuGlww630oqZxCW8wybmWsSYOAF95l
UisodNIpyvNXizRY+eD27PRKCn38PMxuZcBDcI6u8CCnikJ2S5f/HVn0APoc
HtixwEqhP8XJPc/qHkDrjduDiqwVetpgbN1gr/tgOS/V7EVthXzfJCwbnZIK
74dXm/3GRqFuTwdbfaifClldht//2EChnEtPL++anwLXGvt1+NZYoScNRvUd
efMeHDbPOvi7mUIVLNxLx1e/Bxve1DYr20qhZqX7Zsa53oWZmeNmWdgqpJ9c
veGR68kw6PrB1Cpqha526z3D2joZdMeN7a11pvurvt2x4/w7YO3T6GDddgod
Pmx2qkFSEnxbNPVfw44K/WsSX+Nx8yQoGHN8ZvMuCm1sefef/4ZEIPunKW26
K+R/ve/5ocW34VSLVu21PRRqeaCd0rz/bdhmOftA+14KDfo9flXTUJOf+3j2
b5e+Cnn45PWcWCMBRua9du3hoNDDL2PjC1bdgs6oSenjqFCNqNWjYp/HQ4PT
i9oNHKJQcarFzHJj4uHfzgv7nYYp5Ja6ZWNcIkGJ+6c/I0cqVGJZseuPrgTJ
Ezu6jh+jkM4uy8bLGSG89/J7zuMVKtPappl2aBz42l5TZkxSSCmkuDr9boKH
1c/AOVMUav0qbsBAiIWJX+3+LJyu0JSzkXYP4Qb0LFwzw91VoT1g73S1/3Vo
cRvves5WaOKGbvMtR8SARVgZZe08hRpN3303bfo1eOPbN3DjQoXWLH75qrrn
VUjz3PzbZ4lCC9cPOPXQ/wpETb3jsttdoWOv5+mrR0fDQYdKd/2XK1QvS902
yxgFa7SD9QdXmr7/atqRBhWjwKXWrn1HvBRKvTKr9rNul8Hh14NfJ9cptGql
1k+79BKoi6u7nPNW6Lyq+ckP5y+C1d2RyRGbFWqQEz3b9sMF+BIZoIvyUehM
3PWD97tcgLzAnICYHQrF/GqtjawUCbFrbH7F7VZovtukdM+I83DcdeL0274K
zW154kSRczhsGXz4zt0AhWaN9A9JqxsG89o/0j7cr1ATx5ceqoJzMLRe04Cs
IIWWO0+dnB56FjqYufw0BCs0NmTpzJCNZ6Dui5PTHh8zfa5R6Llp1mn4ff9Z
UslJhfa1zq3aZ1QIPIlqo319WiFVpKvZHcdTcPvQXP/35xS65VvB6qXjSTjn
HfbjS7jp/nsvq+856gTsnvt26s9IhcLnjcoZPOs4uA3XJ/27pNCErNWLOnsf
g7FdlmrMr5j25z7nATWHHgW7xpf9LGMU8rkSkK4+FwxNzEu/W8UqlHAr0WxM
7cNQ/k3nqbXRdH9O4zqp/YLgZYZnYv1bpv1epH4xsMlBSI25rm6aqND9RfWK
HWL3w8Vjv31bJZv20x1X79g5gRC4ted3VYpC3z5YfoSW+2DVovVTlAcKvXM7
PnXWO3+YMubW7U7pCrX/PjYmLskP+tqXV9tlKdRhYZFvbrgvtGnh4NsrV6FE
yzN/XI7thSqWPt/65ys0pM336fG998CHD3edBxcqNMMYVJo8aRdk5Va+PfyJ
Qq9VhRbmu3dATJyTauxThcxatzE/mrsNjoTs2TvpuUL5U0/lxnfxAe+d6V+n
vVJoTo3KDkHnt8As95rOs94oNH7uM6dxXTfD4IljEua/Nz3PRs1XqnI3gr73
/rZLPynUp0eMbuA2b6hla9izvFShzjO7/33htAG+V2vwdfV30/4Lava8X8v1
UFA6efKGXwqtfHihrV3dtRBfcOTWlr8KXXp6fODcCl5wOuGJ7c4y7ejivunH
jtdaBdtDm+/xLd+OZg6xdlrVyxMW+bqWBlq0o7SufWf5+SyHUZ6nJx22bEcT
ihMG+f23DLpMfRl/vGo7KppQUKSe4w4NHVS2Z6q3o4VnG2XU/7MUzLQLdofX
bEeS9z6rGfHlYp3//5l/HuXn+feh/D7+PpTv4+tBuR6+XpTr5ftBuR++X5T7
5fVAWQ9eL5T14vVEWU9eb5T15ueB8jz4eaE8L36eKM+TnzfK8+b9gLIfeL+g
7BfeTyj7ifcbyn7j/YiyH3m/ouxX3s8o+5n3O8p+5/cB5X3g9wXlfeH3CeV9
4vcN5X3j9xHlfeT3FeV95fcZ5X3m9x3lfed5gDIPeF6gzAueJyjzhOcNyrzh
eYQyj3heocwrnmco84znHcq843mIMg95XqLMS56nKPOU5y3KvOV5jDKPeV6j
zGue5yjznOc9yrzn8wDlPODzAuW84PME5Tzh8wblvOHzCOU84vMK5bzi8wzl
POPzDuW84/MQ5Tzk8xLlvOTzFOU85fMW5bzl8xjlPObzGuW85vMc5Tzn8x7l
vGc9gKIHWC+g6AXWEyh6gvUGit5gPYKiR1ivoOgV1jMoeob1DoreYT2EoodY
L6HoJdZTKHqK9RaK3mI9hqLHWK+h6DXWcyh6jvUeit5jPYiiB1kvouhF1pMo
epL1JoreZD2KokdZr6LoVdazKHqW9S6K3mU9jKKHWS+j6GXW0yh6mvU2it5m
PY6ix1mvo+h11vMoep71PoreZz+A4gfYL6D4BfYTKH6C/QaK32A/guJH2K+g
+BX2Myh+hv0Oit9hP4Tih9gvofgl9lMofor9ForfYj+G4sfYr6H4NfZzKH6O
/R6K32M/iOIH2S+i+EX2kyh+kv0mit9kP4riR9mvovhV9rMofpb9LorfZT+M
4ofZL6P4ZfbTKH6a/TaK32Y/juLH2a+j+HX28yh+nv0+it/nPAAlD+C8ACUv
4DwBJU/gvAElb+A8AiWP4LwCJa/gPAMlz+C8AyXv4DwEJQ/hvAQlL+E8BSVP
4bwFJW/hPAYlj+G8BiWv4TwHJc/hvAcl7+E8CCUP4rwIJS/iPAklT+K8CSVv
4jwKJY/ivAolr+I8CyXP4rwLJe/iPAwlD+O8DCUv4zwNJU/jvA0lb+M8DiWP
47wOJa/jPA8lz+O8DyXv4zwQJQ/kvBAlL+Q8ESVP5LwRJW/kPBIlj+S8EiWv
5DwTJc/kvBMl7+Q8FCUP5bwUJS/lPBUlT+W8FSVv5TwWJY/lvBYlr+U8FyXP
5bwXJe/lPBglD+a8GCUv5jwZJU/mvBklb+Y8GiWP5rwaJa/mPBslz+a8GyXv
5jwcJQ/nvBwlL+c8HSVP57wdJW/nPB4lj+e8HiWv5zwfJc/nvB8l7+c+AKUP
4L4ApS/gPgGlT+C+AaVv4D4CpY/gvgKlr+A+A6XP4L4Dpe/gPgSlD+G+BKUv
4T4FpU/hvgWlb+E+BqWP4b4Gpa/hPgelz+G+B6Xv4T4IpQ/ivgilL+I+CaVP
4r4JpW/iPgqlj+K+CqWv4j4Lpc/ivgul7+I+DKUP474MpS/jPg2lT+O+DaVv
4z4OpY/jvg6lr+M+D6XP474Ppe/jPhClD+S+EKUv5D4RpU/kvhGlb+Q+EqWP
5L4Spa/kPhOlz+S+E6Xv5D4UpQ/lvhSlL+U+FaVP5b4VpW/lPhalj+W+FqWv
5T4Xpc/lvhel7+U+GKUP5r4YpS/mPhmlT+a+GaVv5j4apY/mvhqlr+Y+G6XP
5r4bpe/mPhylD+e+HKUv5z4dpU/nvh2lb+c+HqWP574epa/nPh+lz+e+H6Xv
Zx4AhQdgXgCFF2CeAIUnYN4AhTdgHgGFR2BeAYVXYJ4BhWdg3gGFd2AeAoWH
YF4ChZdgngKFp2DeAoW3YB4DhcdgXgOF12CeA4XnYN4DhfdgHgSFB2FeBIUX
YZ4EhSdh3gSFN2EeBYVHYV4FhVdhngWFZ2HeBYV3YR4GhYdhXgaFl2GeBoWn
Yd4GhbdhHgeFx2FeB4XXYZ4Hhedh3geF92EeCIUHYl4IhRdingiFJ2LeCIU3
Yh4JhUdiXgmFV2KeCYVnYt4JhXdiHgqFh2JeCoWXYp4Khadi3gqFt2IeC4XH
Yl4LhddinguF52LeC4X3Yh4MhQdjXgyFF2OeDIUnY94MhTdjHg2FR2NeDYVX
Y54NhWdj3g2Fd2MeDoWHY14OhZdjng6Fp2PeDoW3Yx4PhcdjXg+F12OeD4Xn
Y94PhfdjHhCFB2ReEIUXZJ4QhSdk3hCFN2QeEYVHZF4RhVdknhGFZ2TeEYV3
ZB4ShYdkXhKFl2SeEoWnZN4ShbdkHhOFx2ReE4XXZJ4Thedk3hOF92QeFIUH
ZV4UhRdlnhSFJ2XeFIU3ZR4VhUdlXhWFV2WeFYVnZd4VhXdlHhaFh2VeFoWX
ZZ4Whadl3haFt2UeF4XHZV4XhddlnheF5/2/vO//ACnBdA4=
                "]], {{{
                0.9593760905468088, 0.}, {0., -1.}}, {33.66666666666667, 
                0.}}]},
             
             ImageSizeCache->{{484.40347358706714`, 
              500.67571407036377`}, {-50.99641402956277, -7.39639870893048}}],
            
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "16.06930980409883`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "15.570927194603891`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "14.831762814047352`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "14.279470253392873`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "14.036603033099142`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 16.06930980409883}, {
               Style["75%", Bold], 15.570927194603891`}, {
               Style["median", Bold], 14.831762814047352`}, {
               Style["25%", Bold], 14.279470253392873`}, {
               Style["min", Bold], 14.036603033099142`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[7, 18], 0.3888888888888889]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmnlczG3097NTdhEiZG/mOzN2unFQZM9tK2v2nWyRLIWQXUSFUEI3oRKR
co4IoU2bKE2lxn6X9Zbtmef1O+f3x/P4g9e80HyX67rOZ3m3meU6dm5lExOT
KONv//dP+ZVQa+YlhwAVRS5Z/cutvxc0dXjSzPm48fNU25FvD26GZd522xac
UpFu25uZl/9sgcTb0WXuoSo6uOvaP8p2b7D8037qzjAVxY1ys9Z33A4r+vrf
DwxX0dxLRcscS3fA/XU1u52PUJHZturPGt7ZCVYx607ERquo4kn+6DTcDas/
v6n16LqK/D1nDOr7Yi887DLV7XmcitIHe96vXf8AtHFN1r8lFcXfcz513M4X
1ob3H/nzrop62c3sFL/rICS/vhxTO0lFCzy7h80pPQTtOrZp2zJZRd0dYkwO
OB0GjzkH9ynpKiqrVG3ZoIIjkBZcpaJfloq0rv4Dtm0KgI4Fq+eOzlVRp6Mj
98zveRQ2tihNm56vogOBXx7/qnEcMiY59XUtVNHptq29Zn4OAhv/B+c8S1T0
e0LWlYifJ8Ers0+jA69VND28ZmL1BsGQ3eDCplPvVdQoZ8bTlK4hoHZs8Sai
XEUZuxoY7Oechq179k64/UVFncsjl/8+Ewq5Sb8p/buK5g20X3zwvzOgrbFc
XfRLRaM9HHaHTz0H2+0L/T9WUlNk14q9N5+EQd7msVWqVFdTeGlbWDjlPHTF
O8samarpv0znwyO+XYCdP7s/a1tXTc+dq0/7dvYiFPQ5O7h7QzXN2/aI/iy6
DD3WWkTaN1FToseI0orgCNgT7dNiQnM19TQp+tItMBKKyr/vmGulJpeF/SKX
H4uC3trFn9ys1VSiG1P4OewK7FuSN317BzWZTpmoqZwQDSX/jHp4xEZNnZNn
Z+eUXoW/DLd6nNMYf/6p4bOiLGLAt50uOKarmqy+NJz0aPx1eDUzuPaDnmra
PWfQR+cTN6D/yYbuT23VNCulx/29n2PBL29r8av+anrkk7k1wCkO3jb7Mvr7
IDWtGPrqyOn78TDQaV5sLQc1hdReWJRpj+Dvl9O++Qg1qRrVvHZ2PsGH9KG+
No5qUtbY7/Drdhvs68X+tB2nJv/ljxtD9QQ4OlK1YISTmvaVJ1++VJAAZTuP
Z0yZoqbCuEnHXuEdcLhfB5a4qCleV+3jh7N3Iaiq5/kNs9X0cdf9jeSXCJ8G
ljXeO19NtULs/Z133oPhnjM3By02vo+pMdUue9+HU3FP3l10NT4/+0v6mO0P
4Ot3O+dbq4zX7/J41ez9STCq19U7KWvV9GroGPfgEw/h9OoO2oL1arrccNCO
idGP4Huk/9F/PdUUdDfUZ27aYxjzb83qJt5qulVj3fWIj8lwVu2xor6P8X29
uWdhbpkKPxe+zWu9R02NbQuuXGmXBmPPTR3a5YCaRh9bUh9vpcE/L5OvDPRT
04yX0dcOTUmHP22g1dgANVUa96KRxY90mOASsWvWcTXZuHxZqg56AuHH23xd
ecr493/Hl0YPzIDKzw7O3Bpq/P6E1V77X2WAs0XV5ENhxvd7NaBdoG8mXB7v
1js03Pg+H18KD++bBdUOlp6OjlCTW82W70NeZ8GUVKd6idFqqtGqUcLYgGyI
qp3kkXVdTR2b7LDyHZoDNYfblpbEqemwi33LLhU5MH3Hhb+/knG9WZuaV734
FKLvtoivnqgmn81R33Nn5IJZ5X2dLJLUdPPWg6QtjZ/BTPhzqGOymmKt30be
e/gMYjYs/9Mr3Xj/nS+YrfJ6DnVjCxcNzVITZC+J/btnHsz5NjbbOVdNP5Yk
uKve5UFs97sDF+arqevmu//dD86HBit7XFxXqKYy80rVP0x8AfMvn226q0RN
Wa0MYbPNCiD+nYX30dfG/bjed8SHWwVgbrPz3/Pv1bT22yvXf3rrYdH8isk3
y9X0dpVSReWrBwpdfO/RF+P/77vS8sUrPTQpyuuS911NMWGHPodCISxtNTro
3S81ZYyzK5h5uBDuTMWavyoplOrceuK314XQ7KhudZ3qCn0u/NVwaL8iWJ4T
XNDSVKHGQYPa9dpfBPfMG43Q1FVofucRlcMKiqDFWO9r/Rsq9AFuhG7SFMOq
/V/aODZRaLVVoP/J9cWQ9HjeXpfmCm0JGVK/7F4xtDJ9+p+rlUJntv+oNLH+
S1jjMGyOl7VCE53Lulx3egmPvWNTD3Qw/r1JxfDfx1+CdYLqr2AbhTa33FdW
X/8S3P8cPxupUajJu6bpua1LILVv3YYJXRUy63ggxs6lBNp7eG580lOhxT80
x22PlcD6mLJXRbbG+zEfGn0hswSefJ45/lN/hQ7FWW7eZlYKnbpmYBU7hX43
Dc6PgVLY5GqvMndQqHtaV7PuK0ohK/zqkXYjFHqzr378u5OloHrToXIPR4XK
nMKssx+VwuaOAUsHj1Nox/tjZSWfS+HpnFq5E5wUsujsvqCRpQE0IR7286Yo
ZH6usYtTfwN4F7y9vMZFoQGPjg0Mn26AZy2mWe6YrVCHh62b1d1ggC6TU7b7
zzfeX+PiPR5HDLDDHz6eW6zQH9vmxWUXDZCfGTHtuqtC/Wq6mKxMMED3htZJ
D1Yp9HVu+FyTTAPscjzUPXetQvbKT/WpIgPo91Q99Xq9Qr6p3lWdPhig10M3
swpPhUomneik/maAvTUMa0y9FbpePnFqp18GKLZ3Lmruo1D8atJPMHkFtluS
Rqn2KJQ9vfJiMn4+gLY3/jqg0PDNfZu5/TZA6c8L7Ub6KfR0/tB5W74boK9t
ywNTAxSy8l7Q4r9yAxxau+/HkuPG+530ZYjBYIDX0X/mbTylULM3zdrOem4A
+Lj8yd5Qhab6R9bb8NgAR7RF/U6EKfR64eQNw24a4N2Scf9cCldot1tqTsE5
Aww6f9ccIxT66Hty44SDBgg09PBKjVZoULMJp297GODfdufeFlxXqOaltoP7
zjTA4FlNncriFBrXt0vDF4MNcPzkzgST2wplbdjvTJ0M8DGvQmmQqFC17j/K
ftYywNDmSwLbJClUpd8am0uvS+GEU37VrskKJXRIv/rhfil88Ru9fFC6QkcT
e/vmhpbCiCf4fGyWQklHn3/a6VUKwfW6OMzOVejepNg+llNK4b+RIVGr8hXK
a30tNax7KYze1cjKu1ChA10/tBpdpxRC73vv9CtRaG7rTZs6lJTAj6pfP4e+
Nq6nBeFNRsWVwN+D5s+4+l6h2z4BT/MOlsA5z6ePEssV+r5+zfyyBSXwO25Y
r+wvCq3YNKdmSP8SGF8RG1L6XSGTjFJfM/MSON9LXffbL4XqNjefOuT1SzBx
C1pXo7KGqget77L41ktwiqpbYlFdQzmUPODgoZdw8V/PMZ1MNdQueFS9jAUv
oapSfrN3XQ3ZnWuwxL7/S5i8aFbHYQ01lJFoMedno5cQcS7j4KQmGmqYr+tV
/00xVC+x/72wuYbKLyeO8qNimGZ9baGHlYb64hrtcf9iuOLSMWuXtYYaT/L3
sHUthlpBAQOOddBQjG5rnpdDMcx4Viv8go2GTpY+NvVqXQzXLNZbxGk0NK22
XbxDRRHUnvBuy+OuGgqc/SCsNLMIZh2c9iGvp4YGTv3hsSiiCG6kpkx6b6uh
8UpYdsGeIqhXZ0Dir/4amjfS5O+xi4pg3vBIXV07DYG3r+vjoUUQt8P6uJWD
hn67fz3r1KkIGiYeqqEdoaH0WraTf9YsggWVq60CRw3NuFL67PabQkBY88Jx
nIbUebELLyUXQuONhmEznDSU/bCi1/3IQlgc63x1+RQNnf3gvLC+fyEkfEtq
vdlFQyOaL22yd2MhNO3x1x7f2RpydL7iCHMLYdnK8G/B8zUU0disTafRhXD3
csvZUYs1tGfz5cMOvQvB8v2+lARXDY3ThMQdb1sIK2xMbDNWaaiG7eaL7esX
woP5K84Ur9VQVe+EvQW/9GB1pqj+5/UaCqVRR+6908PqonEbqnpp6Ngu12bZ
eXp42CrRYO6toTulrXbWTNFDm2k9x7X30VCdGv4bnUgPa4+eu9Vjj4Z6rFbF
3byih+ScpjZDDmhobGu3/kqYHto13nV4op+GbkBkn9NBevAY+8NkfoCGfFrO
7mDup4e0/UuWrD2uIc+1mgduu/XQITk/Z8cpDe3v96pH/FY9bDR1tAsI1dD1
/GeFLzboIcOBLoWFaWjSrr9CUtbowWZbl+Y3wjXUpmPKDc8VevBKCNmWFKGh
YXhV/3KJHrL/NCrPjdbQLz/XUWUL9KDut23qm+saevPra/yhuXrY6vH1fkWc
8f1Oqb+ZZukhN2Z+N7PbGtq4+4bn/Bl60H55esIyUUNNbW8NWTddD9u7DjdV
J2lowpJl9Uun6iHP9aZb32QN+R9zSwmaooeuF9WFI9M1lHIorduByXrweRM0
clqWhuZ21t8Kn6SHgo71ri/N1dCP8CN3ipz10GOuV9tN+RqySI53a2P8vCek
fN++Qg0Nchr7yclJD0UFsypOlGjoXZVPo90m6qF3y8y5l19rqNjG5eiCCXrY
N3lwOr437qe3lcpbj9dDif+1vmnlGgr5tm3L3rF6+CurY5j+i4Yi9UuDgsbo
wbdhYKPy7xrqPTr8xoDRenjlaOpZ6beGRtn12jpvhB76713/pkFlLc228n35
20EPfg/fTbCurqUv5wc2qLDTw5sa0293NdXSNts+B4aCHgYOTlXb1dXSCxeL
Ic/76MF/y4CAcQ211NN3tOfpbnr4gJFV5jTRkvpMy4qDaj3Y/7J2Xd1cSwOy
nMqOtdPDUVu/Z95WWhpx+VPrSEs9lK2tNuSwtZZ2d5yUm9hADw5X10Se6aCl
l6nzfidX10PQR0OLazZaslRG2mz4UgCftJN87mm0VOnKyCNNnhfA8KUPP2V3
1dKf9u9/TjTqn1Pn/3Ix9NRS0pNFu2xOFsBXQ/jDb7Zauvhn+mvPjQUwsr1V
z5qgpa/1a45xmFQAp2ftD25qpyU3v/17VnYtgO8nTep0dtDSUMv+9b/ULIAx
+Svc+4zQ0riF+77fyXsBZ5sXFw9z1NLmQQ1bZl98AT+dxjtOHme83x+Wddpt
eAFjDyfGLnLS0t13rVuHObyAf5707LB+ipY0NR66Ta//Av7UC/Pd7aIl87dh
FfbZ+TBhVLNfx2Zr6Zj9zkVTAvMhfNeuBeHztdR/q9PfpyflQ+UHPzLiFmvp
uLe/aWuLfHCuthSSXbV0csJ8zE7Pg0uDXpzPX2V8Ho/MZqfszINqXo5NPqzV
0qvp1S/VgzyYEk+bf6/XErhftThT/hyiKrq8r+ulpSiTLSlHg59Dzd6nnVt5
a+n8xxOXfo9+DtPdzO9qfbTUdczMXvrvzyA6apt2wB4tnbje23NMyDMwK/t6
dMwBLZ3yG9th1lCj3lUWVJ/pp6VbPp8cOr/LheuLclesCDDe716/RTf35kLd
sOH5m49rKSTsyTKtkgtzSm4OPXhKS8+fDdwY9PApxFor0SGhWprSt8cnq3lP
of6ME62uhGkp+eb+0Sl/cmB+UL3dd8K1tLRzVNP7/jkQ/8zra0aEcT0uOZ7W
XpMD5k0/znwZraWER86ZNe5kw6IJs5M/X9fSopZJw3ZPzAY6mNm7WryWWm78
UD31VRY0SRsc2vi28fse3l33cV0WLK0TU69DopaGRz3a39g0C+4M77S+Z5KW
XGY4BTkHZkJzn8DSIclaymp7xz6vYyYsTzQd65SupfRZp6bdvpoB9ypviJ+f
paVqFj+fd7LLgBYD3ndyz9VS4OPMmG5pT2Dlxul+Pvla2pHS8azJtCeQFJv6
J6DQ+PyKm1L063Ro9d+Axf+UGJ9vYNyeZWvSYU2PqOwbr7X0e6hZ9qgq6fB4
ZdtBD99rqe3nsUNWHkgD6wi/i8/KteS9LKvSj5Zp4P6+WrO3X7Q0Sb2iXR3n
VEi1Wev947uWCqJizsx1S4H2C179a/ZbS78shsX18UuGW0/ClbqVdLTNOuTb
7ejHsHDF3NlNquiobkhC6x45j8C8vlWgVTUdVQ0YZPngx0PAS9kpHWroyKf8
9oOL1g9h0aj9VbW1dHTzeuKHJiOToMk7B9teZjq62rlhq67uD+D2LpPlUEdH
NwL3hqjO3YclnW+ccainozsnoucpuffA4sGK544NdOS6OPT99Lr3IGGeTQPn
RjqKcN59tGhIIiytVjxkRmMdnTB1nvhiy11oGnpswwILHf0oDi5elXAH7g4a
H7W8mY7+XR/Q4Fa1O+BaWPuVu6WOMpo9uZYzMgGaeyW23NxSR8Wfe5vn+t+G
RKtN43a20tGEl5eyc0oJlsf33OnbRke7vSqaG/oQWE7991ZgWx0N6eaZoLFG
uFdx7nNwex0t12ubvHwaDysDZ9ic76gj98Uh+mYBcdCyd7MZUZ2N1187c3KO
y014kJ1+OFalox2OR1U2ulhY5bbrUYKioy3ZK6ZZ1roBVuZ2lR5pddRyQKrX
5TcxkBT1o2dGFx11WDwgvTTzGqz+O3rJ8246st5uOS3+/lVoXbYkpLiHjo6u
dteq7kTDo33tn77tpSPTw7oN7e5fgTXKizqf++joU+Gp5MCMKGjz+Ijdz7+M
93+rw/sVryLh8SLHdVX76yjYNG3tqWqR4F6r5uXaA3TktNp9TW1VBLQNo5fm
g3QUlTajnyryEqQMWde8pb2O2od+bmTb4iKsK+kypv0Q4+d4t+DK/hegnfeb
bcpQHXWiRR792pyHVOvTN3sM11HAx9M/T8SGgcftKeX9Rhq/b0D5lZxZ56DD
DPOOQ0br6H15ULxfs7OQ/vvx1NFjdJTWY7yN14tQ2BC07eDEsTr61arB9IGR
p6Fj3/4Ppo/XUcK4p0s3+obAk2dff82baFwPC/I9cjYFw8Z1l7u5Ouso6FuB
abn7KejUdMHCtZN1dGHRz9jM3ycg81rrk55Tjdej992Q2DYIPCfkZu6Ybrz+
2Vlny12Ogc1nX9MDM3Q0qJ1b+uGoQMg6OHxAwCwd9TPrvuxD8wDw6lJlzak5
OopPqj6md8ARUKXdvBA2T0drQhfZRHY+DDnLVhdGLNDR80nPagakHIItdRSL
G4t09Krv37eU7QdBCS8ZeXuJjrwickZedfSFp8NPbElapqNGMVaDV9scgK2v
J15PX66jt3ar+85T7QONT70PuSuN69Oundn6NnvgWYcHbYtWG/fLq8mjE3vs
gm2JXpPerNHRF4+KvDfzfEA3p8/+j+46Splx1TPwynZ4Xvnj3QoPHd02fzZh
R/NtsD34fEXljToaV2+BetXRrdBlwGydmaeODGmnzb922QJ5LyznNdqso/9s
Pse103uBz8bMY5ZbdfRYcb2b6uAJ3VrsTW+7TUeSv76IHVxDveP//8z/HuXf
889D+Xn8fSjfx9eDcj18vSjXy/eDcj98vyj3y88D5Xnw80J5Xvw8UZ4nP2+U
583vA+V98PtCeV/8PlHeJ79vlPfN6wFlPfB6QVkvvJ5Q1hOvN5T1xusRZT3y
ekVZr7yeUdYzr3eU9c77AWU/8H5B2S+8n1D2E+83lP3G+xFlP/J+RdmvvJ9R
9jPvd5T9zucBynnA5wXKecHnCcp5wucNynnD5xHKecTnFcp5xecZynnG5x3K
ecfnIcp5yOclynnJ5ynKecrnLcp5y+cxynnM5zXKec3nOcp5zuc9ynnP8wBl
HvC8QJkXPE9Q5gnPG5R5w/MIZR7xvEKZVzzPUOYZzzuUecfzEGUe8rxEmZc8
T1HmKc9blHnL8xhlHvO8RpnXPM9R5jnPe5R5z3oARQ+wXkDRC6wnUPQE6w0U
vcF6BEWPsF5B0SusZ1D0DOsdFL3DeghFD7FeQtFLrKdQ9BTrLRS9xXoMRY+x
XkPRa6znUPQc6z0Uvcd6EEUPsl5E0YusJ1H0JOtNFL3JehRFj7JeRdGrrGdR
9CzrXRS9y3oYRQ+zXkbRy6ynUfQ0620Uvc16HEWPs15H0eus51H0POt9FL3P
fgDFD7BfQPEL7CdQ/AT7DRS/wX4ExY+wX0HxK+xnUPwM+x0Uv8N+CMUPsV9C
8Uvsp1D8FPstFL/FfgzFj7FfQ/Fr7OdQ/Bz7PRS/x34QxQ+yX0Txi+wnUfwk
+00Uv8l+FMWPsl9F8avsZ1H8LPtdFL/LfhjFD7NfRvHL7KdR/DT7bRS/zX4c
xY+zX0fx6+znUfw8+30Uv895AEoewHkBSl7AeQJKnsB5A0rewHkESh7BeQVK
XsF5BkqewXkHSt7BeQhKHsJ5CUpewnkKSp7CeQtK3sJ5DEoew3kNSl7DeQ5K
nsN5D0rew3kQSh7EeRFKXsR5EkqexHkTSt7EeRRKHsV5FUpexXkWSp7FeRdK
3sV5GEoexnkZSl7GeRpKnsZ5G0rexnkcSh7HeR1KXsd5Hkqex3kfSt7HeSBK
Hsh5IUpeyHkiSp7IeSNK3sh5JEoeyXklSl7JeSZKnsl5J0reyXkoSh7KeSlK
Xsp5KkqeynkrSt7KeSxKHst5LUpey3kuSp7LeS9K3st5MEoezHkxSl7MeTJK
nsx5M0rezHk0Sh7NeTVKXs15NkqezXk3St7NeThKHs55OUpeznk6Sp7OeTtK
3s55PEoez3k9Sl7PeT5Kns95P0rez30ASh/AfQFKX8B9AkqfwH0DSt/AfQRK
H8F9BUpfwX0GSp/BfQdK38F9CEofwn0JSl/CfQpKn8J9C0rfwn0MSh/DfQ1K
X8N9Dkqfw30PSt/DfRBKH8R9EUpfxH0SSp/EfRNK38R9FEofxX0VSl/FfRZK
n8V9F0rfxX0YSh/GfRlKX8Z9Gkqfxn0bSt/GfRxKH8d9HUpfx30eSp/HfR9K
38d9IEofyH0hSl/IfSJKn8h9I0rfyH0kSh/JfSVKX8l9JkqfyX0nSt/JfShK
H8p9KUpfyn0qSp/KfStK38p9LEofy30tSl/LfS5Kn8t9L0rfy30wSh/MfTFK
X8x9MkqfzH0zSt/MfTRKH819NUpfzX02/m+f/T99N0rfzX04Sh/OfTlKX859
Okqfzn07St/OfTxKH899PUpfz30+Sp/PfT9K3888AAoPwLwACi/APAEKT8C8
AQpvwDwCCo/AvAIKr8A8AwrPwLwDCu/APAQKD8G8BAovwTwFCk/BvAUKb8E8
BgqPwbwGCq/BPAcKz8G8BwrvwTwICg/CvAgKL8I8CQpPwrwJCm/CPAoKj8K8
CgqvwjwLCs/CvAv+L+/yPzwMCg/DvAwKL8M8DQpPw7wNCm/DPA4Kj8O8Dgqv
wzwPCs/DvA8K78M8EAoPxLwQCi/EPBEKT8S8EQpvxDwSCo/EvBIKr8Q8EwrP
xLwTCu/EPBQKD8W8FAovxTwVCk/FvBUKb8U8FgqPxbwWCq/FPBcKz8W8Fwrv
xTwYCg/GvBgKL8Y8GQpPxrwZCm/GPBoKj8a8GgqvxjwbCs/GvBsK78Y8HAoP
x7wcCi/HPB0KT8e8HQpvxzweCo/HvB4Kr8c8HwrPx7wfCu/HPCAKD8i8IAov
yDwhCk/IvCEKb8g8IgqPyLwiCq/IPCMKz8i8IwrvyDwkCg/JvCQKL8k8JQpP
ybwlCm/JPCYKj8m8JgqvyTwnCs/JvCcK78k8KAoPyrwoCi/KPCkKT8q8KQpv
yjwqCo/KvCoKr8o8KwrPyrwrCu/6//Kw/wfshwok
                "]], {{{
                0.5554875993841152, 0.}, {0., -1.}}, {34.66666666666667, 
                0.}}]},
             
             ImageSizeCache->{{496.96789741661286`, 
              511.9318192080723}, {-45.30014649821268, -15.703770661863729`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "15.796853827137873`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "15.400633611055998`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "14.840138267661962`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "14.68217279923398`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "14.536521399305014`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 15.796853827137873`}, {
               Style["75%", Bold], 15.400633611055998`}, {
               Style["median", Bold], 14.840138267661962`}, {
               Style["25%", Bold], 14.68217279923398}, {
               Style["min", Bold], 14.536521399305014`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], 
           "Tooltip"]& ]}, {}, {}}}, {}, {}}, {{}, {{}, {{}, {}, {}, {}, {}, 
        {GrayLevel[
          NCache[
           Rational[1, 3], 0.3333333333333333]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndczX/49xMZRb4RssLZyPraoUvZm6JhZu/42pE9sjNCKCVkJJLIqusq
QmicSguVNrJly33ux++6fn/ctz94eJw653M+n/f7er/Gs9W0RY4zjY2MjFIN
f/3ff+WP1+IUVWxPBU3ZbWLz0W8D7DkwZuIQOwWZjAy6ZG61CU5Eph7UOyjo
TaTvrvqRmyE8w+mx2yAFjdi0vYu/x1aI/Z5uXDBMQa6jp7iOHOINqU2cbeeN
VlDHVvXiMgfsgMLemf99Gqug2kPb1X87cxdUTHY9v9pNQRcPtXcbHLoHqm/M
zjeerKB6NwJi0sz2QaNT4612TVNQyt2KgTOd90Pr+Gej6s9WUM8dCTnDrx8A
29KJ3sfnK2jsO68+o2x8YVit3BjlYgUpx92zGXLzEExqO+Vr6DIFXf2c7tB8
8hHwGJHfroungqa6nwk92fQorF80deadtQqa/lVb8+ynY7Bvf4F//02G9wuf
1vhboT8EX52e/mSbgqzLHk5y+nACrj4tMhu3S0Fmfzrqe+4OgnvfZvZ74aOg
va2x/6ZLJyGjcenqmb4KMh7kWc0pLxhKe82JeOunoJFo/PGL9Wn4PunVq+UB
CgpNuWF6fuEZMN0wr1XlSQX9LDQJPfs4BJoGv3HdFmL4/+nZMS16ngObewv2
mYcqaPHcAKNu18+DXcnbB4cvKygt3Lt3tX6hMKrmor/WkQpycGvqcjrvIri3
+dDt7A0Fdal75YLJ7kvw3/D/PDpEK6jX0Zc3/1GFw2aPT2eiYhW0sUnKxQ+1
roDvvqUv4L7h/S6Pa+7z7Qqcifhi+fCR4fnOOGSlL4+AqPTlw0cnG15Xtjf3
fXUVHn79ujkrTUFXYucFhL2NhGyrVbfdsxRUub5s/pvv1+C17Y9PZc8VlHps
TfX6ZlHwe+LqNv+9NDyvrDqJL5U3oM76X1N/FCvonJH6de1+N8H6pNfRja8V
dDb2krP9nFvQ8e6flFrvFbT7vv9r5cHbYF+8ruaBzwqaU3R/9Zi7d8CxhlHf
Jt8NP992SbUp36NhRuuNK4N/K2jh1biS7E4Iy4cZX25TRUmJvq0anO5OsG3h
5pIIEyX9nTd4vmUWgZ9PNetepkp6nzVoxB/PWDh/Zeu4u+ZKck1IiarXPA5u
pVXfM6y+koxdRvjVjo2DxxXe99IaKckK9moCZ96FF41q/Z7QTEl+A9S5a0zv
wbueOzsXtVRSXftjQx0v34O/E8zmL1Ar6UH8sSkpTvFgsW538JfWSvJSDskI
/hYPiqA6OV7tlTSlvcZn+bH70Dlur4VJZyUlO1f9/rnXA+hfVHfInu5Kcjg4
aXnCswfgXH3/hga9lbQzdnnSSc+HMFtn2Bl9lRS2d/Hx1g0SYNXQg+/VA5T0
ODkm0vxSAuxcYKm9NERJ20/XOGXU/xEc33tocreRSnr77IH5lYxHcDG84eEY
RyWdN85onz7zMcSkHkkc6KKkZ50CDis+PobkL1YmyROU5DOv0QXnVU8gv+Gx
3i7uSvphZx3X9tcT+NSj6bK8GUrC9XNmzfJMhKoT/ENnz1XS4pd2kYmfEsFy
bfPC9wuVtNGn3YV2s5NAHXiiyaolStpd1XWVS0YSdI9t4Wi0UkkHFTsSWvVN
hsGFQTu2r1FSmUVm9/mnk8HNRBH7zwYlDfs7OmlHlRSYrz313W+Lkg53GTOq
SvsU8Bqi6thqh5LO9XfQ+bqkwJ75Z2af36OkzKomFb3XpcCJPZrATgeUFGDW
2+fHyRQIv3w24+ZhJeW1w3qP41IgVq8zdziupHdmZ/5cz0+B1M/nBzwKVFLj
RX6+d3+lQFGDtmsdTytp2dWCQb/q66Gi+8XInHNKWlNe6+SC1nqoPr5d+bQw
JT1/FHhM11sPVl6XlG+uKGldVLyi33A9tD7RYcLS60o6O9fuY5qbHmwp/MCv
W0pKqT797OcZehhe0OnRZjRc31Ujz+iFephU7WqV2veUVLna5eDoZXrw0HTp
6ftQSRfLHI4mrtLD+sHXFjdLVBL1rOziskYP++d1O3daryQnnxPFFl56CN4d
lWeToaQ69lMeKQ2vX73Uo9G1HMN6XNtmQaTh9+NTbo7sk6ekqORHW8sN75/x
yXZbfKGS3mzp/LhikR5KLe9EjyhT0r4GI8N/ztXD9259Kp6WK6l5jdH9tNP1
YOoWYzP5o5JmGXnHhUzQQ9M1MKOkQkk913QLC3bSg00AHff4qaShf2f4Dxym
Bzu0T/taqST7hq3rxzjoYdTLONP1VVVUfmzV0s62enCv2t+hRk0VBZs8mJHS
SQ9L1PGePrVVFOY760y04f5uHjTwSiMLFb36fjNXodCD79wHZYENVDR63jIv
TVM9hOwa3FLXREXGwc2931rqISoswSXcWkW+u6pvOl5XDw+Th/r0UKoo5Hzq
cEczPeR8fHyftCqK7nel5r819fCm/ojKwTYqGnrEtYpbdT387prUVd9RRbX2
PDlaaKKHOq6jFrp1VdGcio+9yw2vt1idcvplTxWtblU6ZlctPXT0H/N8rp2K
covrdcmsowf7mNT6nxxUNPleWvsiw3pxzHcatnqQiuw7RnjdM1zvDOOnm4yH
G64/7NOQ7Wo9LFc539o5WkWlFZNv9TF8/20DMz/WG6cim7lWnz7Y6cFvjmvr
424q+hZv3+riSD2c35ntrpysopahQw+sdNfDrYvj/UKnqUjvdfqWm+F5Pkl6
ltx5torcVSEjXHbq4cWHiTXuzFdRaPC0MUuD9fCuXq5d/8UqWnawa9fLd/Rg
1HXKiifLVJS1+eEr02w9WLjkh431VNEWp7E/t3zTg8JzavHztSoquFoQ0sQq
FbocL2g2c5Ph99uN+/vANhUGRE8f+3abiqamfa/0npIKznlFu5bvUtG/rxad
G7stFWZXmXX3j4+KirTRrbSXU8FTWfpzq6+KnlfYpXzLToWdA+b8a35URZNu
zV8WUz0Njs9+NfdwgIoS5yoHLOmaBhd3zDtpHayi1h4LTU1npUFM6JuskBAV
RTVe293LLw2SExf80yHUsH7Ss6vikzTIf/92UNRlFbnFX4x4aJwOnywWrYdI
FU3TPQzcZ5sOVbt8uP7ghorajs75U2tZOlg6//duVLTh+iqazrK5nA6aVZ/U
WbEqqjfSqde7N+nQ/djSSe73VdTIJkg5sM1TGHzni2/ZIxUl9b9r1XbeUxif
u/zJ4mTD97FKXeEb+hTmG32r+iNNRccjh9Ra/e4peClW9dqYpaJ5L5c2TP83
A/b2/7Gk1gsV7bhQf+7xVRkQOGv1hf0vVTTdbpRrAmZA+PZfLxuXGO6/fVKi
S81MiL3g1Tj4tYoWna421N4xE9Ke/Bnd5r3h8yqDSzYEZELRu3XbIz6raNVM
jUu915lQ8Y8R2X5X0f1zm0o/ds+C6p03fov7rSLr7wWrmnlngdU44w7Dqqip
Va11Xj6ZWdB65eZZaSZqutfWq3xw62ywPVrtxARTNTmo3jsM8sqG4be3Pi00
V1OfAS88dqRkw6QX1essqG94vcn0B+aaHPD4693/SyM1/Tb++DvDKwc2tKrl
5dVMTdfnXaxZkJ4D+/vtvFqtlZqe6Ssbd2z/DIJnmr3ZrVaTa8iUTbHbn0Gk
925FgzZqSnk9J/Bw0TOIP19nfEB7NTV7NeTuZfvnkPF47351ZzUt97/UtE7Q
cyh7WzchrLua3jfvduTS3+fwo+5+o2691RTQ6nDCQfcXYPpvvR4xfdX0Zeme
pNtxL6DZ2IOLBg5Q0ye3x23Vmlxot8LybNIQNfW8UnElcWcu2PkdynUeqabQ
k78mRnzIhVG3GjbMc1TThoMlnZNd8sD9+ZERs13U1C13sq4F5cGSSqut7yeo
afcx81+JlvmwueWxOyvdDdd7yKFKi6H54OvQ9MvfGWpaWX+sdeX6fAiZ4d92
+1w1uS35UTnzej5EbWs+/R8PNf3KLlo++m0+PDx34pjfEjVZPbVZeF31EnIe
tUhtuVJNpnWWZvlMfAlvyoNqnV9j+P49355N830Jv80V9p02qGnw9GV3Via+
BPNOp1bd3KKmy+Njni+uXgAtnFTh9jvUND20KDQCCqDj8jOlCXvU1HDRhJMd
PAvA4YimheMBNZk19jTOjigAp5tnnXMOq+nC9UsvTpQXwIxnur3TjqtJrdtb
Y7GmEFb8OR//OlBNmRtvNrZ1LwTvFm3/LDmtptbW6UtfHS0EP/uLXX6dU5Pf
6512c9MK4fz0dgs2h6kN5+v9xadqF8GtrZdOmUWoydKjfuaGAUXw5GyHZwev
q2mbvWPzV2uL4EVCeL1mtw33786FnLhrRfDuTaehp1FNRc+SAz+XF4GR+dWN
NvfUdOvZrhruymKw6NjlZuRDNZ266pPwxrUYFI7XPvROVFO/cauTPfcUQ5dl
3XTxesP7za8xvJyKYcDhqCkjMtTU/NDodNXnYnC+0ePI0xw1LXOtsaaaqgTm
5NxMmpSnJt+BO97OdyoBz9+21UsK1dR0eOiBXhtLYKf1nT4eZWrKv2QZ6hRW
Av59+yz/Wq6mIPPKJb6ZJRA2Lebiuo9qKnioGpD7twRitkBR9a9qGuqJMRaa
UkgJoaY+P9U0oLJ3Ud2hpfDyob1To79qOrnKd+Ct+aXw6XXczsCqGjrZ+bXu
885SqFqnf5y2poZyhg0LCThbCpYd4n9crq2homF9MwNiS0EzZmCnHhYasnha
8TUrqxS6L30whxpoaGbSTe+ub0th8KHBQYObGH5+3a4VxytLYXxUQmaKtYY+
eqzt86V2GczPHlrXTamhMe/PVWtrVQZevx4PfKnV0Kary2JtWpbB3uYj1s21
0VBSzU9OZaoyCISkax87aiggs2HwSE0ZhE8d9dazq4ay7weEOxpej9ucojK2
1VBtUzeTV9ZlkHZmzMSddhqiKaUHTBuWQdGD1IP1+mlo9MxzPcJrlcHXV06P
jw3SUIsNI6dm/CiFGrWfGiuHa2j6x4kTvEpKwaq9s23oaA0d2KF5HJxcCm1G
Z/7XeZyGatbxmjDiWin0WuJ6/rabhtrY1Ouy6UgpDPfNzu83WUNd3u7+OmRF
KUy6Pt7qyTQNfVjW5MblMaWwKOvZqLGzNWSdHvyNWpfChp8TvZ/P11Beo6P7
9lSWwP5muTEzFmtoz6wNF7QpJRBsN+Vr+TINhUy1O3PqRAlEuue3W+6poZ2D
xxtbzSuB+E1TZ/5Za7i/7iOHBfxbAhmnC/y3btJQjVcNK0Z8L4ay+9PT63hr
KM2+g/3A28Xwo6zI7PAuDQVV6dzs9JpiMDWb1c96n4bWd5v0c1vPYmjWrnR1
iK+GtnRVRdStKIJ2o+ZEtD+qoV2lnce5XyoCu/9evboeYPi8bWY1/WcWweiD
81pBsIZ+tNuWVdKkCKZee+P6IERDs2cfOTgzqRCWZC7YNypUQ8+stx3rs6EQ
tvx4+yDzsob6vvgQ5duxEA41XfR3SqSGnFuWfNmXVwAhfT50K7th+Lzc8R6u
ewogasp/HoujNRRdPKithW0BJGz8dOZ7rIb+xkZ+zi82zKdTS19suK8hM7sv
urf7DPMp/otlrccaOu3uFDi+l2E+lS4fvj/ZsD4tVnmOKM4Hc9NvmxunayjG
8ZzJq7350MJm1e2TWRpKcG0fMKpHPnQc+eNT6xeG593JovaAu3ngsHh1m4iX
GqrWosWlqg3zwOnAr6m2JRqyHDkv2mpuLsyI9Doa91pDTm7frPDOC1iR8Sdl
6HsNLdSuutXe4gV4f19XM+2zhuxLjvr6z3oOfk2M+k74rqE+fm1W2kY/gwu9
N64s/K0h88MtfnRr8AxuTza+PL+Klg4nes6J9siBJxs2l3w20ZJnx+9YkZAN
ucHVrL1MtWSV5BVcTZsN7+9tHVetrpaKj/+ZYLYtC4xKq+/ZXV9Lf82TS7Wl
mWBRa/s9SystXV1T+/eyoZmgbFvrt38zLdV9nNXYNDwDuozY2VndSksTfFoH
/2qUAQMWmc0PU2upR8O/j9w2PQXn/buDu7bRUp+nt2p3fZ8Oc67WyYlur6Xk
f8ID/Cang+fTvRYDO2upzu+elbtT0mDnt7pDkrprKbzJnTCrAWng33j/Bufe
WppqXz8N7qRCWK96N3L7Gr6f48VZ1bqlQsykg+9nDdBS5YRfk2ZF6CFlvaX2
/RAt+f0qyZxu0J8vTx6avHKkluLLo4f8iEiBT3cbHv7rqCWzfaMutuqeAtVK
jiR6u2jpWPftY8LWJEODmo1N/pmopZpXQne02psEmjbHevu5a2ntdlUznzOJ
0GN402UtZxrev1+Qd2HsExji4R96bq6WFq9o9te08DGM39e8sKOHlibff3P9
Q83HsCDiRJObS7RUmuvdbn3nR7A2vYWj/UotRTyKXxQ0LQH2fg3akbBGSz33
1XO1O/wQAq0UsWM2aOlMgMdDh6QHEG576nv2Fi3tH/w+94jpA4ibqOo4bYeW
ovqcUOmG3Ye0dWdmv96jpSEmgddzfeKhKEgTuOSAlkJ8Dsw9m3UPvsadzfh5
WEsO5VDqob4HNYp15puPa8k/8sh9xYq7YFXjwgCzIC3Z9+h64sqjOGjTuu3a
g6e11PLrbgszZRz0GnYxsul5LRWNrZrdYn0sDF/YrvxUmJamx3aMf5lLMNnn
ktImQksPllmesncgWHSlw4TI61p6NESRt9ARYUNa+IHet7W0ujU9WKCNgQMV
nR7dQy1drxl0aG7VaDjV6GqVEfe0tHWGVQvHktsQ2bNLz6cPtWS0/Fx5g5Rb
cH/CtcWTEg33yzOxbgjdhMy13c4V67XULdXm65eoG1AWGJW3MENLA6Nf9vx6
LQp+xPZo9DXHsL5Mbi46ces6mBbdHLkuT0tBbtZfCuKvQbPqvbZVL9JS4YUV
UTczI6Gd7k703jItTap11LTxh6tgN7RPRcO3WsqqWnvBN/OrMHpBjE3gR8Pv
W550HtYlAqbuhRnar1rabPHTwsz9CiwJp+OXf2pJM3TFVpsD4bAl1T6t+18t
hZ7Zqut76DIc+hJnSlV1tOqxz+0H9S5BSMP+DoNr6ujQcNNOev+LcKNHvGdK
bR1dGpMwFjqHQsL4gVdcLXS0zvFCasXT85Dj9aAsv4GONrYvr5ax5RyUnxjc
cm4THc2uvSIxBs7CH0pw+WitozGdtq/cXT0EzAuH+ngqdXRhzJOTVtmnoaXJ
k/tVdDpqVeVUR9uoU9BJO6Jyh42Ooj8vHxwfFAwOQ5K61uuko5jiuFG7Dp0E
p/mjFh7rqqNqQzd+H38oCGbsSTmtsNWRif51kFHfQFhxeczzC3Y6Go7ll3fM
CwBvfWr9zv10VGHdr0/e+ePg99lp2O1BOirzznm0889RuNDg6aZ+w3W0uNxs
l8VMP7jd3fnW49E6Gml76/qXvMPwxC3zo9M4HZ07/+Om/8JDkLvGtfVzNx3V
On4qO6yOL7wPyHafMVlHqRcGv9iLB8CIxvuVT9ORS5ObO8I37Yd6Bc+Sl83W
UTOrnrptzvtAWW1SjT/zdfTZxfud8fK90EWTa7d1sY7ux5V20UzcDQMHT1lR
Z7mOgmo41XeeuhNc5uWHHfLUUei/f3//t3k7zNk9tbj5Oh1drFwd4xa7DVZf
KmgWsklHEecqh79rvBV2pUwf295bR513Je6pt3sz+H8q2nV9l45KNy2zvNhw
E4RZzrprt89wP5o9yzh1YwNgt9Kf9311JPlziuucf0cd/f//zz+P8vP8fijv
x5+H8nl8PSjXw9eLcr38fVC+D39flO/L9wPlfvD9QrlffD9R7iffb5T7zc8D
5Xnw80J5Xvw8UZ4nP2+U583rAWU98HpBWS+8nlDWE683lPXG6xFlPfJ6RVmv
vJ5R1jOvd5T1zvsBZT/wfkHZL7yfUPYT7zeU/cb7EWU/8n5F2a+8n1H2M+93
lP3O8wBlHvC8QJkXPE9Q5gnPG5R5w/MIZR7xvEKZVzzPUOYZzzuUecfzEGUe
8rxEmZc8T1HmKc9blHnL8xhlHvO8RpnXPM9R5jnPe5R5z+cBynnA5wXKecHn
Ccp5wucNynnD5xHKecTnFcp5xecZynnG5x3KecfnIcp5yOclynnJ5ynKecrn
Lcp5y+cxynnM5zXKec3nOcp5zuc9ynnPegBFD7BeQNELrCdQ9ATrDRS9wXoE
RY+wXkHRK6xnUPQM6x0UvcN6CEUPsV5C0Uusp1D0FOstFL3FegxFj7FeQ9Fr
rOdQ9BzrPRS9x3oQRQ+yXkTRi6wnUfQk600Uvcl6FEWPsl5F0ausZ1H0LOtd
FL3LehhFD7NeRtHLrKdR9DTrbRS9zXocRY+zXkfR66znUfQ8630Uvc9+AMUP
sF9A8QvsJ1D8BPsNFL/BfgTFj7BfQfEr7GdQ/Az7HRS/w34IxQ+xX0LxS+yn
UPwU+y0Uv8V+DMWPsV9D8Wvs51D8HPs9FL/HfhDFD7JfRPGL7CdR/CT7TRS/
yX4UxY+yX0Xxq+xnUfws+10Uv8t+GMUPs19G8cvsp1H8NPttFL/NfhzFj7Nf
R/Hr7OdR/Dz7fRS/z3kASh7AeQFKXsB5AkqewHkDSt7AeQRKHsF5BUpewXkG
Sp7BeQdK3sF5CEoewnkJSl7CeQpKnsJ5C0rewnkMSh7DeQ1KXsN5Dkqew3kP
St7DeRBKHsR5EUpexHkSSp7EeRNK3sR5FEoexXkVSl7FeRZKnsV5F0rexXkY
Sh7GeRlKXsZ5GkqexnkbSt7GeRxKHsd5HUpex3keSp7HeR9K3sd5IEoeyHkh
Sl7IeSJKnsh5I0reyHkkSh7JeSVKXsl5JkqeyXknSt7JeShKHsp5KUpeynkq
Sp7KeStK3sp5LEoey3ktSl7LeS5Knst5L0rey3kwSh7MeTFKXsx5MkqezHkz
St7MeTRKHs15NUpezXk2Sp7NeTdK3s15OEoeznk5Sl7OeTpKns55O0reznk8
Sh7PeT1KXs95Pkqez3k/St7PfQBKH8B9AUpfwH0CSp/AfQNK38B9BEofwX0F
Sl/BfQZKn8F9B/5v3/E/fQhKH8J9CUpfwn0KSp/CfQtK38J9DEofw30NSl/D
fQ5Kn8N9D0rfw30QSh/EfRFKX8R9EkqfxH0TSt/EfRRKH8V9FUpfxX0WSp/F
fRdK38V9GEofxn0ZSl/GfRpKn8Z9G0rfxn0cSh/HfR1KX8d9Hkqfx30fSt/H
fSBKH8h9IUpfyH0iSp/IfSNK38h9JEofyX0lSl/JfSZKn8l9J0rfyX0oSh/K
fSlKX8p9Kkqfyn0rSt/KfSxKH8t9LUpfy30uSp/LfS9K38t9MEofzH0xSl/M
fTJKn8x9M0rfzH00Sh/NfTVKX819NkqfzX03St/NfThKH859OUpfzn06Sp/O
fTtK3859PEofz309Sl/PfT5Kn899P0rfzzwACg/AvAAKL8A8AQpPwLwBCm/A
PAIKj8C8AgqvwDwDCs/AvAMK78A8BAoPwbwECi/BPAUKT8G8BQpvwTwGCo/B
vAYKr8E8BwrPwbwHCu/BPAgKD8K8CAovwjwJCk/CvAkKb8I8CgqPwrwKCq/C
PAsKz8K8CwrvwjwMCg/DvAwKL8M8DQpPw7wNCm/DPA4Kj8O8DgqvwzwPCs/D
vA8K78M8EAoPxLwQCi/EPBEKT8S8EQpvxDwSCo/EvBIKr8Q8EwrPxLwTCu/E
PBQKD8W8FAovxTwVCk/FvBUKb8U8FgqPxbwWCq/FPBcKz8W8FwrvxTwYCg/G
vBgKL8Y8GQpPxrwZCm/GPBoKj8a8GgqvxjwbCs/GvBsK78Y8HAoPx7wcCi/H
PB0KT8e8HQpvxzweCo/HvB4Kr8c8HwrPx7wfCu/HPCAKD8i8IAovyDwhCk/I
vCEKb8g8IgqPyLwiCq/IPCMKz8i8I/4v7/g/PCQKD8m8JAovyTwlCk/JvCUK
b8k8JgqPybwmCq/JPCcKz8m8JwrvyTwoCg/KvCgKL8o8KQpPyrwpCm/KPCoK
j8q8KgqvyjwrCs/KvCsK78o8LAoPy7wsCi/LPC0KT8u8LQpvyzwuCo/LvC4K
r8s8LwrPy7wvCu/LPDAKD8y8MAovzDwxCk/MvDEKb8w8MgqPzLwyCq/MPDMK
z8y8Mwrv/P/y0P8HSn7hyg==
                "]], {{{0.5521131908463409, 0.}, {
                0., -1.}}, {47.5, 0.}}]},
             
             ImageSizeCache->{{649.8217569952391, 
              664.7747480425442}, {-7.264793840743948, 26.422033104529774`}}],
            
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "11.678927788257363`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "11.188399974259`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "11.003767843799537`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "10.53197248348278`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "9.795268519187331`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 11.678927788257363`}, {
               Style["75%", Bold], 11.188399974259}, {
               Style["median", Bold], 11.003767843799537`}, {
               Style["25%", Bold], 10.53197248348278}, {
               Style["min", Bold], 9.795268519187331}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {GrayLevel[
          NCache[
           Rational[7, 18], 0.3888888888888889]], EdgeForm[Opacity[0.7]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndcznv4/0mdjOyRTbq3kb257IysEBGSEcmoQxkZZWSEpKMkUUYOIRmR
6rpkhFKpaNdtdsrMOB1Ev/v3+F3X74/v9/xxzqOHzu1zfz7vz3W9xtPCaZXt
YqMaNWokGf71f/8r/4SfXpuW/sSSAt4senH/iQc4P0616pBjScmenQL3J6+D
Lt8sD64stKSw62bNUl5sgIq2Gz8nPLekGN38naTcBLGjMqfVL7Wkgrzzto8C
toCXq/aawztLmuG6aE/XFt4wPHBri6gKS6rzffzAzRt8wDQ+x/Pnv5b0vsLV
LbJyG6S+7JY3vsqSAucmhhof2AEH6+0cGFJTQQGjYttXDfeFmb2Kjpb9oaBe
bhNqVDfeDW3n9P7V30xBo9zbHdxVYy8899k7b1djBYUu6fZvu4b7IPLcC8xp
oaBuebPOTIQD4Jo5wELdVkHXy78vm/nQH3r88PfxsFBQ2vidC1abBEClxT8v
76kUdLNXocm96YcgfhyMbt5FQcfr1XvV+UYgeLsdPrOoh4IG/Hhmt7n7YbA+
8t70al8FHUqqqh2cGARmt0ctqzVYQa9bVrnaLTwCT/45+sh2uIIsrFx0wR2O
QlCjL50jxigIJxRvHfw1FBz6j99XMUFB9+PqflK8CAMLx/APw6YqKPbEihzL
tSeg1Pe/yf52Ctr3Ufkjcmc4RF2afLlkjoKsuzgtaXkmAtxyzjSxWqCgLdt6
/dRnnYR+1b/+3LxEQVW3Bkcub3QaqlQznj5erqDTM8q/d3A4A7cnRfVt56ag
tz2aXXaKjQRfj1rBrh4K8jm+bORfnf4Gm7DZ329tVNCv902WNg87B43vX55d
z1tBnx7/OjpYFwU572vHz96poEFh007PT74Aoc0d253ba/h+4yKap629BAuG
xG7+7q+gu9GnXv8TEg3qxQ30Yw8raFye04CcbZfhnd/i4cFHFTT27NDtGWtj
4PLV+IjSEwpSXsi/8HH1FfAsbGrc74yCOrpFP5yw9ioMNl6+eOd5BRmXJ+ZX
+lyDml2S7j+NVpDf1sJgo5DrkDytlUZ53XA9J1493hgXC34bV+9ec0tBcesb
nnF8dQOmnkwuv0MK2myH2THmcWCe0t6m6X0FDfa4uHvV9FtQ+HntBacUBf1u
mfrBLyQewls/bhCToaD6DfLifpYlgPMIxeqazxSkU581ixyB0MVl45MpBQpa
Zu+pHGhLUHEws+cJvYIc53ptDze9DbE3tYEfXyvIpeXYdR63b4PX863fhr5V
0Hu36NyILUkwvE6u3f5Phue5s8HG+iPugGkPqxtF3xS0+n66VUjtu5A6a2er
rj8V1Cqp4x1t1l04uLVog1cNJY1b96BGSPg9mHm2d2GKiZLOnhlz696f96Ft
xt4hbeopqbT2yGfbxyXD88oXYS6NlDTqmN30qE4PILLDwBpxzZVk87Pn0gbV
D8DV+uCCOm2U9MxftXtD8UPoseqfpFkdlXR+SOWeBHoElYdBcVappIzJpjfD
T6dAfOLhHZU6JfnOvfL1g18qeL95/2ZMdyUt+vTkmYvHY7BuMHrs4T5K+uje
Pzt3QRqY9Q39+/VAJb1ZaLn4x6R0eDL3S90+w5RUOOxCUHL7DAjaMd51+2gl
2Q11P3LucAY4XAh/nDVeSe+d/byMGz4Bi6f/dbOcoiTjgncvYnyfQGnVZH/3
GUrqnV3W+FCNTIhSRFbcnq0kn6YerbetzwQ3m9+2jR2VVNYgfYLD50zot2bG
VcfFSjK/4zeyyiULqo5GNY92UdLrmS3+gJdZcPtOLc/qVUpaN+FWcI052eD7
dnbupLVKWrF9cvt2mdlg0zRmQNgGJRVMvv9l9din0HhQnaPvtyjp5MrTqbkJ
TyHHybFq8A4lmU3Upvfo+QxC98TO9dtjuP7bXy7Zn34GTjENsOCAkrpCh8fd
zHNAnb+4Y+e/DNfT++BYf98ceFczwXtDiJK2eDtbzPs3B2K0zV4+PG54Xtbz
bNYvzAXPqctHtTqtpJW/zVLupOXC4PVJp5eeM/y8dqneon8eGIW3Mr1xSUkX
bQPCPI7nQfKD1UtNrympbry2T6RxPvh9Sn5oF6ck7V+Nph91zgfblh06n0El
feuT7TLoQT6YD/Pw+3ZXSXtmGS10UxVAofPj96MeKWl28eoojU8BRBxQTA5M
V5JJYJT1pIICcI7dGP0yW0mGc5mW0aMQupRkNu6Vr6T+Tjc3nNhRCJ//0P3p
U6KkdxfP6i49K4TYbt7ZT14pKaVpn0WfFEXgZZfbx6JcSaOPRc+wX10EIzZb
Ba3+qKRbQyqz9TeKwPTMzv/wq+E8lMY6bPldBKmPi+wb/lCSa78qU6vhxRDw
rfetedWG+x9Xvfft1mKY2c6v7UVjFSXtcOkek1AMbUe/3PSrjoqGOJnc964s
hheuA0tsGqpoVssaobO7lUBk4MFhoc1UFLPq1Z9DnUrANf6f8LetVPTSxnZN
90Ml0PMV1BrUQUW3CyNa97ldApX1ghbtUajoj5oBnW3flUB8rw/38rQqOt3c
d6p1XT34zBmt1lqp6MjtyKnf2+rBelvornW9VTQl9fzlkd30YHb+S1nyABUN
2rxpf+ehesjMHD/BHFT039fxm67b6CHoR3jUklEqamM/xqfcXg8Onb7Xvz5O
Rdc+zDFNW6yHTuOnrDKZrKK7699nOq/WQ6lbZMb06Sq6mh7+O3G9HqKO/O5x
yl5FZZftPuR768H99oxDX+apSNdnhPWdXXroVxb1dcQiFa2rM6V0y349VDUy
tgtYpqIxn+4Vtjykh6T+c2Kfr1TR3KAB8w4f1oOvY0zLHmtUFFeqT6pxRA82
u+ps2LpeRQ6nR210DNFDk2jHgvTNhus1cqibaPg5Jyd2cIftKrqyo0W1heHn
0OoGYSt3qyh3+awPgcF6cFIvqU7Yb/g+9q4rOhg+Xz05wbF+oIrqNH5n9ihA
D+88miU5HFHR98CO048Zri8mbLllVJiKgs3y4sN368HzftL2nydVtPuv65dK
tulh8IdWb8b/rSJbq/Kt8zfpwaiFm3XIRRW1rXBcofXQQ/KQB2fLrqjoVa59
8OiVevBb3KHugJuG64+dXyfecD9t93ks35WoIpVp+LlABz2YX3ucmnPHcL0v
wqxzbPVQWKjopn6ook0pnf32jtVDhLHXAY80FZntial1c4genLtkfbqXpaKe
2oSWzj310GW6zrZ5nuH6Mq80O6bSw+eN3lcWFRvO3/CUDk6t9RB7MrfZ1Zcq
Grep9fCE+nrwSrHyqFWmomfn0uddq6GHEV925th+UBFlVnpFvCkB0zbF/SO+
qGi+aVFdq5QSSB3RJ6TiPxW1btHdvd2lEghw8fs57LeKCu4Xbt4QUAIzA146
+NdS0+9thxNt15ZA27iBiSW11WQ9dbN3zMwSePH8YAerBmrKrzqTf3qA4fzX
Kdu6uamaKv5YeaJ/G8P57zHsxeOWaiqoHe7qUVUMPe2DRrZrr6beN5eGuhQV
Q+XWD6dcLdVkb/J1csfEYog/O/qPeI2aejQtWRYRVgw+GaHO9bqp6dGMaft/
bi4G6/++PJjdS02mViUWfecXg1nHCbpz/dVUUmg81gGKIdM6Yu/3IWpacdr7
uWeHYgha9f3d2JFqqpw1eU9AdRE4BE2ZFDxWTX0nLQy6VlIEnTDyUulENXl/
7dasHIug9M3vRv2mqenx1zfY/0QRRDWwc985S01BoYfrnttaBO59L2Q9naum
hK8mTcYsKIJ+84z7KBeqKW3V+rBmI4qgasecw2uWGq5/l22HdpZFkHQhpvLO
CjW5/BscucS4CHyf1rFv+qeaLs5ZU175uhBsfjnGOa1TU6MZYf1ykguhifJG
m5hNampWnu1Z91wh5Ng03FRzm9qg52Zog/wKIXTNkuIpu9R09s5iB59VheAU
mgAn9qlpz/7/LmXYFoL6brPwjwFq+nzHZdLOvoXw7u1yIwhWU2busvIzrQsh
pumdhfuPqUkTWCu+T3UBeA5qfa8owvD7H99s6vOqAAYbpnTXs2pa8C3f5ezD
AjDa+8DX64KaevZZPcj/UgEkx3QoS4lRE378ZPnhrwLwy/cY3+aGmob9eSgz
yasAbI3SzrskqMkpqmJFg0UFYK5T1o9LUlNjxweHMiYY5v9Ur5V1Hqhpwx81
ZtXubZj/67PSZz1W09eHNUZdbWuY/+G6HmczDd+HbO0yTQqgy0PvgMocNU0z
32vk+DEfPn/K/TKmSE0DDu3sMTsvH2Jbdp9x+IWa/tleMTzhTj54DfO9/rpU
Tfebtauz42I+jFhabN7nvZoSwy2yo47kg6l/n/XbP6vJL33iMqsd+ZAa65ef
VammlpnP65i65UNAyctBlr/UNHpzizVd5+bDTNNBx9yNNFQSver10XH50NYq
4PdtUw1tj7JvN6FvPrywK5vfuL6GTmobO/ayzIfIzcNuOzbR0OkvT9fbNMoH
1zNBnaLNNeTQdGnSvl950DPtw7bqthoKvpTe8UN5HlR+G/16UicNHfi2quGi
3DyIb3dsTJhaQ6bbFp94fS8PfEZ/jXzfRUNuFd19ll7JA+sVE+oM6Wn4vGEX
jV+cyAOzvyJc/PppqF2lfXvr/XmQGf89pWCwhpxevXLz25gHQa+mdO08QkPb
nM2nn1maBw5mZ/dvsNbQE7VJ5q4ZedCpd/XHhzYa2l87IFY9Ig9K59hNbWWr
IWPjcYc9uuVB1LYLMUtnaujlwh2pS1vngft542Y3HDTkuOuDX4VJHvTLmrPW
1ElDX1qNeVOrIheqfsQ8s3M2fF7rXSkBBbmQ1Klu/zOuGmqUPaftwXu54Dt+
wZFvbhqKbJV9oeJiLti43/gxylND7nFe0yKDcqFJSEOHQC8N9Z0X88+pLbmQ
c3tJwktvw+dNHT67aEkuhJYltO/lq6GtdayjR07MBafGzbf6+Gno1dypLVN6
5oJ6gOvzJwc19P3ctY9LzHPhneOdERZBGlrWt1Va3Z8G/bOr9anVoRoa42Dp
f64oBzyj3UwoXEMmPac6DcQcGJz7YEnDSA3dWPc85eLxHDCq0fHBvCgN+f+T
drNqcw4kqz21Fy9raH6rtN2t5uaA3+S0Pb+uayjxwMjmPwfkgK2n8p1NvOH+
PlDGBzXPAfPjXhNDb2tornfiqjcfn0Hh/ayLb+9r6Gj5kITiB88g4oOu0aBU
Dd2t2yR33Yln4NzCx23PEw3Z6L6evODxDLoMzcvMe6Yho3fHEj0mPIPPi7v3
1hZqaM1O891p7Z9B7D7fv9Y919DUvf7doz89Ba9rxf8mv9HQ5fir181vP4UR
RX1mmb/TUIdTK7/X9H8Kpib7bi6p0NC5ijpxrnOfQmqXV62v/6uh9LZnT9pp
n0LA9EFeJlUacpn2Ywp+yYaZXgFF02tq6fza3lMj47Oh7amyoaf+0FLSxa5d
Gm3Phhcpw058qaeli5pTi6vGZUPkl6CaIxtrKWZhyJZVDbLBtc1Hp4AWWjIv
ufdzxZMs6DlyzN3nbbQ09pepw6+ALKh0OabsYaGlJo5vLRTTsiA+4OvOrSot
Ocy3eFzWOAt84ib8k95ZSxtiqnLt0jPB+kXEuA49tDSntPTGmr2ZYFb3x7mV
fbXUISMna+KYTMjsMdUscZCWbkbc2vy++gkE2Z9dUX+4lkzaf/g2/8YTcPCu
TnMYo6XoY1EzYlY9gU5/23WPmqClvCMhBz8rDfo/48LBn1O0dCTEfrlVQQZE
/Wf8Zbydln5oYOm6Axng3tFhesgcLRXf7HW/aEQG9Bt75VqZo5Ympdf3LSlP
h6pVdc0HLNFSm9IF97Ya/EhS0IJ1u5ZraWvD5eb3o9PAF2/k5azW0vIP40PS
G6eBTWnDQWoPLXnC/fkP3R5Dk4bOoR4bteQXUZqek5EKOX0Tf93barifP350
72SVCqHzms9vvlNLN/YMvpvhlwJOO11p0V4tDd8dN9Cs/BGoL96xuOqvJe9d
J0J+jnkE75623lbrsJYqL7eofnTyIcT8cntle1RLi7rNVZ+q8RA8lQ9HR5zQ
Uq/jcXhx7gMYPLFjZMVpLTXarr7b9FYyGK31rD38vJY29o4q/tkyGZJD05b5
R2tpy8yxYw943ge/u8qUkmtaMuoUeO7bs3tg+86ri9UtLZXPByO7fvfAvFn2
vs2kpa5H/H2eBd+FwkGdPz6+Z3heN403hP68AxELfaa0S9FSpk/X/qnz74Dz
3rzLrhlayn5a/nXXvSTocqV70/inWjpt1/Lm1y5J8Dnfd029Ai2123x/bPfD
Bv9rVPJ0tt7w54ubNpxT0+B/dX37nXutpTcvrtY7tJJghO2+4O/lWnq9aMf2
slsIphtefR/7SUthiiN2fY8nQmr4oDnB37TU7/CeSeCbAAEPA+JLfxg+b/fB
N73WxMPMirJ2/WroyOHJVhi25Ba0bTV8y04THXn7pjbeNzcOXgwL1j+tq6Pg
IeMiYPZNiFz6cbiykY6Ke4bErXe4Aa7+Y06uaa6jc/5w2n5RLPS8ccz4bmsd
BWZ07/rD7TpUlnxd3LSjjuxzyk+477gG8aY2yU5KHU2s9TT3WdhV8LE6qYnR
6SjIrXBYv8QrYD3zx+6a3XWU1tri9YmXMWC2ZerbKX101KjtPu92DWMg88xZ
mxMDdWQS3DnwyrDLEJRWfeEj6OhSgybuS9ZFg8O/dg1htI723rNPcHW9BJ3a
X1y9f7yOdLXWXej39QKUjjbJLJqso4onDwJ77YqCqBUOvbrO0NFbh3lDbTTn
wf2vK4Fes3VU2yYh0Tn7b+iXUPfflPk6Kjp+dcByv7NQ9WrBzDaLDf//5hvN
+k2JhCSzmzdcXHR0a1bhoMgOZ8C3d6PWcat0pHVuuGL/j1Ng4+C8sc5aHU2/
HfUlSX8SmmxPLJy1QUd+x6ac7JgZATnnmw89u0VHB9odL3dJC4fQLNfjldt1
tDNpx8HlT0+A0887Naz36GhL8/SuWY+Pg9qyjdPhAzoKe7S3wtYkDN6Nd7/z
OlBHNf+r+jd/SijEuD9U9AnRkfv8cyVvL4WAZ0jHnduP66jhsfofjTodgcFJ
nqVZpwz3J87GP+RMEBiVp421PGe43n0tc3VDDkNyY9U590s6ehM81kj3OhD8
Bmyql3RVR1lz88rNwg6B7YJs18ZxOlpi+cvb2jkAzHd3TnNEw+/P/zFw4rCD
UBjtYxV9V0eKjGNrD2r8ISI3z7/6oY5mv7e42xD2g3ONHp8npRueh40+Ydw4
P+ii2TUtLFtHFuvrnry1cg98nlxy9X2ejsYrp98ec3EXxHr2bTGkREeZ3Vft
e/yHL3gd3+fp98pw/ftsEv08d8CI5Fe5BWU6WhgXnDqpehuYfhw0sPNHHTUf
Myqk8TEfSG1x6OiGrzr6MtpiSO5kbwgYWl718LvhPO+6Ofd8i60wc8nwea2q
dbSsVrcWvZ5vgrb7g3GpcWfa7nnSdNXNjfDi2seON+p0pot3t5QNu7oeIovG
+Jg27EzfOtrPeZfuCa4mYS/tmnWm+d9rHkmq6wE9u34bdaZVZ5L8t3K6zZlv
7f/3z/z7KL/Pn4fyefz3ofx9fD0o18PXi3K9/H1Qvg9/X5Tvy/cD5X7w/UK5
X3w/Ue4n32+U+83PA+V58PNCeV78PFGeJz9vlOfN5wHlPPB5QTkvfJ5QzhOf
N5TzxucR5TzyeUU5r3yeUc4zn3eU887vA8r7wO8LyvvC7xPK+8TvG8r7xu8j
yvvI7yvK+8rvM8r7zO87yvvO8wBlHvC8QJkXPE9Q5gnPG5R5w/MIZR7xvEKZ
VzzPUOYZzzuUecfzEGUe8rxEmZc8T1HmKc9blHnL8xhlHvO8RpnXPM9R5jnP
e5R5z/sAZR/wvkDZF7xPUPYJ7xuUfcP7CGUf8b5C2Ve8z1D2Ge87lH3H+xBl
H/K+RNmXvE9R9invW5R9y/sY//8+/n/7GmVf8z5H2ee871H2PesBFD3AegFF
L7CeQNETrDdQ9AbrERQ9wnoFRa+wnkHRM6x3UPQO6yEUPcR6CUUvsZ5C0VOs
t1D0FusxFD3Geg1Fr7GeQ9FzrPdQ9B7rQRQ9yHoRRS+ynkTRk6w3UfQm61EU
Pcp6FUWvsp5F0bOsd1H0LuthFD3MehlFL7OeRtHTrLdR9DbrcRQ9znodRa+z
nkfR86z3UfQ++wEUP8B+AcUvsJ9A8RPsN1D8BvsRFD/CfgXFr7CfQfEz7HdQ
/A77IRQ/xH4JxS+xn0LxU+y3UPwW+zEUP8Z+DcWvsZ9D8XPs91D8HvtBFD/I
fhHFL7KfRPGT7DdR/Cb7URQ/yn4Vxa+yn0Xxs+x3Ufwu+2EUP8x+GcUvs59G
8dPst1H8NvtxFD/Ofh3Fr7OfR/Hz7PdR/D7nASh5AOcFKHkB5wkoeQLnDSh5
A+cRKHkE5xUoeQXnGSh5BucdKHkH5yEoeQjnJSh5CecpKHkK5y0oeQvnMSh5
DOc1KHkN5zkoeQ7nPSh5D+dBKHkQ50UoeRHnSSh5EudNKHkT51EoeRTnVSh5
FedZKHkW510oeRfnYSh5GOdlKHkZ52koeRrnbSh5G+dxKHkc53UoeR3neSh5
Hud9KHkf54EoeSDnhSh5IeeJKHki540oeSPnkSh5JOeVKHkl55koeSbnnSh5
J+ehKHko56UoeSnnqSh5KuetKHkr57EoeSzntSh5Lee5KHku570oeS/nwSh5
MOfFKHkx58koeTLnzSh5M+fRKHk059UoeTXn2Sh5NufdKHk35+EoeTjn5Sh5
OefpKHk65+0oeTvn8Sh5POf1KHk95/koeT7n/Sh5P/cBKH0A9wUofQH3CSh9
AvcNKH0D9xEofQT3FSh9BfcZKH0G9x0ofQf3ISh9CPclKH0J9ykofQr3LSh9
C/cxKH0M9zUofQ33OSh9Dvc9KH0P90EofRD3RSh9EfdJKH0S900ofRP3USh9
FPdVKH0V91kofRb3XSh9F/dhKH0Y92UofRn3aSh9GvdtKH0b93EofRz3dSh9
Hfd5KH0e930ofR/3gSh9IPeFKH0h94kofSL3jSh9I/eRKH0k95UofSX3mSh9
JvedKH0n96EofSj3pSh9KfepKH0q960ofSv3sSh9LPe1KH0t97kofS73vSh9
L/fBKH0w98UofTH3ySh9MvfNKH0z99EofTT31Sh9NffZKH02990ofTf34Sh9
OPflKH059+kofTr37Sh9O/fxKH089/UofT33+Sh9Pvf9KH0/8wAoPADzAii8
APMEKDwB8wYovAHzCCg8AvMKKLwC8wwoPAPzDii8A/MQKDwE8xIovATzFCg8
BfMWKLwF8xgoPAbzGii8BvMcKDwH8x4ovAfzICg8CPMiKLwI8yQoPAnzJii8
CfMoKDwK8yoovArzLCg8C/MuKLwL8zAoPAzzMii8DPM0KDwN8zYovA3zOCg8
DvM6KLwO8zwoPA/zPii8D/NAKDwQ80IovBDzRCg8EfNGKLwR80goPBLzSii8
EvNMKDwT804ovBPzUCg8FPNSKLwU81QoPBXzVii8FfNYKDwW81oovBbzXCg8
F/NeKLwX82AoPBjzYii8GPNkKDwZ82YovBnzaCg8GvNqKLwa82woPBvzbii8
G/NwKDwc83IovBzzdCg8HfN2KLwd83goPB7zeii8HvN8KDwf834ovB/zgCg8
IPOCKLwg84QoPCHzhii8IfOIKDwi84oovCLzjCg8I/OOKLwj85AoPCTzkii8
JPOUKDwl85YovCXzmCg8JvOaKLwm85woPCfznii8J/OgKDwo86IovCjzpCg8
KfOmKLwp86goPCrzqii8KvOsKDwr864ovCvzsCg8LPOyKLws87QoPC3ztii8
LfO4KDwu87oovC7zvCg8L/O+KLzv/+SB/w/uA4Ay
                "]], {{{
                0.8029969957809925, 0.}, {0., -1.}}, {48.5, 0.}}]},
             
             ImageSizeCache->{{661.3256766848734, 
              677.0913573201643}, {-19.012298933922445`, 
              19.660653119111892`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], 
                "12.63130722926616`"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                "12.15271538635618`"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], 
                "11.440798521693658`"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                "11.002890902454885`"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], 
                "10.911547978084222`"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 12.63130722926616}, {
               Style["75%", Bold], 12.15271538635618}, {
               Style["median", Bold], 11.440798521693658`}, {
               Style["25%", Bold], 11.002890902454885`}, {
               Style["min", Bold], 10.911547978084222`}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], 
           "Tooltip"]& ]}, {}, {}}}, {}, {}}}, {}, {}}, {{{{{{{{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, \
{}}, {{{}, {}}, {}}, {}, {}}, {}}, {}}, {}}, {{{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}}, {}}, {}}, {}}, {{{{{}, {}, {}, {}, {}, {{{}, {}}, {}}, {{{}, {}}, \
{}}, {}, {}}, {}}, {}}, {}}, {{{{{}, {}, {}, {}, {}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {}, {}}, {}}, {}}, {}}}, {}}, {}},
  AspectRatio->0.4,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.5833333333333334, 0},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    BoxData[
     FormBox[
      StyleBox["\"WT/R164A normalized\"", 16, StripOnInput -> False], 
      TraditionalForm]], 
    Scaled[{0.85, 0.92}]],
  Frame->True,
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(log\\), \
\\(2\\)]\\)(\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"Italic\\\"\
], \\\"cat\\\"]\\))\"", TraditionalForm], None}, {None, None}},
  FrameStyle->Directive[16, 
    GrayLevel[0], FontFamily -> "Arial"],
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      2.9999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      3.999999999999999, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.5833333333333334, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      9.416666666666666, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {5., 
       FormBox["\"WT\"", TraditionalForm], {0, 0}}, {14.833333333333332`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      15.833333333333332`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      16.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      17.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      18.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      19.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      20.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      21.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      22.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      14.416666666666666`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {23.25, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      18.833333333333332`, 
       FormBox["\"R164A\"", TraditionalForm], {0, 0}}, {28.666666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      29.666666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      30.666666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      31.666666666666668`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      32.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      33.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      34.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      35.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      36.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {28.25, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      37.083333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      32.66666666666667, 
       FormBox["\"T79S\"", TraditionalForm], {0, 0}}, {42.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {43.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {44.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {45.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {46.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {47.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {48.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {49.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {50.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      42.083333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      50.91666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {46.5, 
       FormBox["\"N100A\"", TraditionalForm], {0, 0}}, {0.5833333333333334, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      50.91666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      2.9999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      3.999999999999999, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.5833333333333334, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      9.416666666666666, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      14.833333333333332`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      15.833333333333332`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      16.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      17.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      18.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      19.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      20.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      21.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      22.833333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      14.416666666666666`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {23.25, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      28.666666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      29.666666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      30.666666666666664`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      31.666666666666668`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      32.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      33.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      34.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      35.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      36.66666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {28.25, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      37.083333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {42.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {43.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {44.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {45.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {46.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {47.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {48.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {49.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {50.5, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      42.083333333333336`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      50.91666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      0.5833333333333334, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      50.91666666666667, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLines->{
   None, {8.543805175964398, 
    2.4059923596758366`, -0.06642736173897607, -0.2995602818589078}},
  GridLinesStyle->Directive[
    RGBColor[
     Rational[2, 3], 0, 0], 
    Opacity[0.2]],
  ImageSize->750,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     2.9999999999999996`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     3.999999999999999, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.5833333333333334, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     9.416666666666666, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {5., 
      FormBox["\"WT\"", TraditionalForm], {0, 0}}, {14.833333333333332`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     15.833333333333332`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     16.833333333333336`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     17.833333333333336`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     18.833333333333336`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     19.833333333333336`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     20.833333333333336`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     21.833333333333336`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     22.833333333333336`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     14.416666666666666`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {23.25, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     18.833333333333332`, 
      FormBox["\"R164A\"", TraditionalForm], {0, 0}}, {28.666666666666664`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     29.666666666666664`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     30.666666666666664`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     31.666666666666668`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     32.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     33.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     34.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     35.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     36.66666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {28.25, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     37.083333333333336`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     32.66666666666667, 
      FormBox["\"T79S\"", TraditionalForm], {0, 0}}, {42.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {43.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {44.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {45.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {46.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {47.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {48.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {49.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {50.5, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     42.083333333333336`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     50.91666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {46.5, 
      FormBox["\"N100A\"", TraditionalForm], {0, 0}}, {0.5833333333333334, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     50.91666666666667, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{3.789504978730784*^9, 3.789505009400249*^9, 
  3.789505127540653*^9, 3.7895070448567944`*^9, 3.7895094011477947`*^9, 
  3.789578426328205*^9, 3.789580036331046*^9, 3.789582745971476*^9, 
  3.792166069216873*^9, 3.7923400985320168`*^9, 3.7926830026211767`*^9, 
  3.7926860586990213`*^9, 3.79269272037059*^9, 3.792785494669875*^9, 
  3.792861782697241*^9, 3.7935563469118443`*^9, 3.8098705611621933`*^9, 
  3.809913653440529*^9, 3.809978663997336*^9, 3.810243343069894*^9, 
  3.8119538940609913`*^9, 3.811976749068941*^9, 3.8125510719830027`*^9, 
  3.812662740383065*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"e2c96b04-c91b-45cd-b2b8-33577e67258f"],

Cell[BoxData[
 StyleBox["\<\"Final normalization factors:\"\>",
  StripOnInput->False,
  FontWeight->Bold]], "Print",
 CellChangeTimes->{3.789504978728408*^9, 3.7895050093978863`*^9, 
  3.7895051275382633`*^9, 3.7895070448530893`*^9, 3.789509401145599*^9, 
  3.789578426324443*^9, 3.7895800362913847`*^9, 3.7895827459675417`*^9, 
  3.79216606921446*^9, 3.7923400985231447`*^9, 3.792683002610166*^9, 
  3.792686058696641*^9, 3.792692720368526*^9, 3.792785494667989*^9, 
  3.7928617826948*^9, 3.793556346908814*^9, 3.809870561160533*^9, 
  3.8099136534366493`*^9, 3.8099786639942417`*^9, 3.810243343068201*^9, 
  3.811953894024679*^9, 3.811976749062989*^9, 3.812551071980328*^9, 
  3.812662740439888*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"8fde5eb5-1a88-4b1e-9984-6efc99f0d721"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"190117_S3_d1_MeP_1_GlyScan.csv\"\>", "\[Rule]", 
    "0.7483857433303759`"}], ",", 
   RowBox[{"\<\"190123_S3_d1_MeP_1_GlyScan.csv\"\>", "\[Rule]", 
    "0.5320200337335984`"}], ",", 
   RowBox[{"\<\"190314_S3_d1_MeP_1_ValScan.csv\"\>", "\[Rule]", 
    "2.3331518444896924`"}], ",", 
   RowBox[{"\<\"190318_S3_d1_MeP_1_ValScan.csv\"\>", "\[Rule]", 
    "1.190336647044143`"}], ",", 
   RowBox[{"\<\"190321_S2_d2_MeP_1_ValScan.csv\"\>", "\[Rule]", 
    "1.4095049948442047`"}], ",", 
   RowBox[{"\<\"190913_S2_d1_MeP_1_SlowMeP.csv\"\>", "\[Rule]", 
    "0.785925993181745`"}], ",", 
   RowBox[{"\<\"190913_S3_d1_MeP_1_SlowMeP.csv\"\>", "\[Rule]", 
    "1.0077591235098924`"}], ",", 
   RowBox[{"\<\"190522_S2_d1_MeP_1_SlowChip.csv\"\>", "\[Rule]", 
    "3.3428344155379888`"}], ",", 
   RowBox[{"\<\"190605_S2_d1_MeP_1_SlowChip.csv\"\>", "\[Rule]", 
    "1.096336503811598`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.789504978730784*^9, 3.789505009400249*^9, 
  3.789505127540653*^9, 3.7895070448567944`*^9, 3.7895094011477947`*^9, 
  3.789578426328205*^9, 3.789580036331046*^9, 3.789582745971476*^9, 
  3.792166069216873*^9, 3.7923400985320168`*^9, 3.7926830026211767`*^9, 
  3.7926860586990213`*^9, 3.79269272037059*^9, 3.792785494669875*^9, 
  3.792861782697241*^9, 3.7935563469118443`*^9, 3.8098705611621933`*^9, 
  3.809913653440529*^9, 3.809978663997336*^9, 3.810243343069894*^9, 
  3.8119538940609913`*^9, 3.811976749068941*^9, 3.8125510719830027`*^9, 
  3.812662740440897*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"a2e790c9-3638-4fb4-92f8-fad8309a8e18"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Aggregating WT data across experiments, applying normalization factors:\
\>", "Subsubsection",
 CellChangeTimes->{{3.7432657657977343`*^9, 3.7432657737257137`*^9}, {
  3.752261734813532*^9, 
  3.752261784148533*^9}},ExpressionUUID->"2f08aa52-682b-4b59-bc27-\
593eb87d1d86"],

Cell["\<\
Apply the calculated WT normalization factors to each dataset (on kcat) and \
plot histograms of the WT kcat values before and after this correction, to \
assess improvement:\
\>", "Text",
 CellChangeTimes->{{3.773585362189486*^9, 3.773585414184277*^9}, {
  3.7735855816504393`*^9, 
  3.7735855821165457`*^9}},ExpressionUUID->"4a7bf699-b3b8-42a7-835a-\
18348b7513a0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"normalizingMutant", "=", "\"\<WT\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allWTkcatKmValues", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"groupedbyMutant", "[", "normalizingMutant", "]"}], "[", 
     RowBox[{"All", ",", "kcatKmKey"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allWTkcatValues", "=", 
    RowBox[{"Normal", "[", 
     RowBox[{
      RowBox[{"groupedbyMutant", "[", "normalizingMutant", "]"}], "[", 
      RowBox[{"All", ",", "kcatKey"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allWTKmValues", "=", 
    RowBox[{"Normal", "[", 
     RowBox[{
      RowBox[{"groupedbyMutant", "[", "normalizingMutant", "]"}], "[", 
      RowBox[{"All", ",", "KmKey"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtMedian", "=", 
   RowBox[{"Median", "[", "allWTkcatKmValues", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KmMedian", "=", 
   RowBox[{"Median", "[", "allWTKmValues", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "calculate", " ", "95", "%", " ", "confidence", " ", "bounds", " ", "on", 
    " ", "both", " ", "WT", " ", "parameters"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<95% confidence bounds on fitted WT kcat and KM parameters:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"wtkcatCIs", "=", 
  RowBox[{"Quantile", "[", 
   RowBox[{"allWTkcatKmValues", ",", 
    RowBox[{"{", 
     RowBox[{"0.025", ",", "0.975"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtKmCIs", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"allWTKmValues", ",", 
     RowBox[{"{", 
      RowBox[{"0.025", ",", "0.975"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "distribution", " ", "of", " ", "WT", " ", "Ki", " ", 
    "values"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Aggregated WT kcat values, before correction:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"histPreCorrection", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{"allWTkcatKmValues", ",", 
     RowBox[{"{", "25000", "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", 
      RowBox[{"ColorData", "[", 
       RowBox[{"16", ",", "6"}], "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"], \
\"cat\"]\)/\!\(\*SubscriptBox[StyleBox[\"K\",FontSlant->\"Italic\"], \"M\"]\) \
(/M /s)\>\"", ",", "\"\<Counts\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normalizedWTkcatKmvalues", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"groupedbyMutant", "[", "normalizingMutant", "]"}], "[", 
         RowBox[{"n", ",", "kcatKmKey"}], "]"}], "]"}], "/", 
       RowBox[{"normalizationData", "[", 
        RowBox[{"Normal", "[", 
         RowBox[{"groupedbyMutant", "[", 
          RowBox[{
          "normalizingMutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], "]"}],
          "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "allWTkcatValues", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normalizedWTkcatvalues", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"groupedbyMutant", "[", "normalizingMutant", "]"}], "[", 
         RowBox[{"n", ",", "kcatKey"}], "]"}], "]"}], "/", 
       RowBox[{"normalizationData", "[", 
        RowBox[{"Normal", "[", 
         RowBox[{"groupedbyMutant", "[", 
          RowBox[{
          "normalizingMutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], "]"}],
          "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "allWTkcatValues", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtNormalizedkcatCIs", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"normalizedWTkcatKmvalues", ",", 
     RowBox[{"{", 
      RowBox[{"0.025", ",", "0.975"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Aggregated kcat values, after correction:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"histPostCorrection", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{"normalizedWTkcatKmvalues", ",", 
     RowBox[{"{", "25000", "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", 
      RowBox[{"ColorData", "[", 
       RowBox[{"16", ",", "5"}], "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[StyleBox[\"k\",FontSlant->\"Italic\"], \
\"cat\"]\)/\!\(\*SubscriptBox[StyleBox[\"K\",FontSlant->\"Italic\"], \"M\"]\) \
(/M /s)\>\"", ",", "\"\<Counts\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Aggregated kcat values, before and after correction overlaid:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"histPreCorrection", ",", "histPostCorrection"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kobsExptIndex", "=", "2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kobsWT", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"groupedbyMutant", "[", "normalizingMutant", "]"}], "[", 
          RowBox[{"n", ",", "\"\<AllInitialRates\>\""}], "]"}], "[", 
         RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"normalizationData", "[", 
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{
            "normalizingMutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], 
            "]"}], "]"}], "]"}], "*", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{
            "normalizingMutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], 
            "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "9"}]}], "*", 
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{
            "normalizingMutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}],
             "]"}], "[", 
           RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}]}], ")"}]}], ",", 
      
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "allWTkcatKmValues", "]"}]}], "}"}]}], "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtDataNormAll", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"normalizedWTkcatvalues", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"allWTKmValues", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"normalizedWTkcatKmvalues", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"kobsWT", "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "allWTkcatValues", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.742652362839676*^9, 3.742652380661831*^9}, {
   3.742662923126995*^9, 3.742662949849794*^9}, 3.742663025530064*^9, {
   3.743106739043399*^9, 3.743106739400647*^9}, {3.743181602222378*^9, 
   3.7431816032162733`*^9}, {3.743181701393721*^9, 3.7431817449048853`*^9}, {
   3.7432592501453867`*^9, 3.743259262505809*^9}, {3.743281608553597*^9, 
   3.743281677030294*^9}, {3.743281715323691*^9, 3.743281740427846*^9}, {
   3.743281790038743*^9, 3.7432817980751553`*^9}, {3.7433930422742567`*^9, 
   3.743393148459118*^9}, {3.743393183690099*^9, 3.743393202874153*^9}, {
   3.7468444206250143`*^9, 3.7468444655986547`*^9}, {3.7468450346065483`*^9, 
   3.746845049061058*^9}, {3.747066826297124*^9, 3.747066826667961*^9}, {
   3.74707220021774*^9, 3.747072255396533*^9}, {3.751039541523519*^9, 
   3.751039542329698*^9}, {3.7599755559883738`*^9, 3.759975558292756*^9}, {
   3.773429234616478*^9, 3.77342923677919*^9}, {3.77358541853152*^9, 
   3.7735855613008547`*^9}, {3.773585591639422*^9, 3.773585613226948*^9}, {
   3.773585646317428*^9, 3.773585774329821*^9}, {3.7742045987038603`*^9, 
   3.7742046013668833`*^9}, {3.774204664567692*^9, 3.7742047860572357`*^9}, {
   3.774204845165806*^9, 3.774204920375288*^9}, {3.774204971608788*^9, 
   3.7742049718090353`*^9}, {3.774205101842469*^9, 3.774205171643632*^9}, {
   3.774205300955345*^9, 3.774205363558544*^9}, {3.774205426548074*^9, 
   3.774205438518694*^9}, {3.774206047575396*^9, 3.774206050659711*^9}, {
   3.774206318008513*^9, 3.774206334469187*^9}, {3.774206376578258*^9, 
   3.7742063767217083`*^9}, {3.774206410131431*^9, 3.774206410293715*^9}, {
   3.774206577976108*^9, 3.774206623778853*^9}, {3.774206658728702*^9, 
   3.7742066797934647`*^9}, {3.774206735535329*^9, 3.774206748785411*^9}, {
   3.774206785615361*^9, 3.7742067995274363`*^9}, {3.7746286969117203`*^9, 
   3.774628816195325*^9}, {3.7747998132969017`*^9, 3.7747998143265553`*^9}, {
   3.775069941070692*^9, 3.775069941873201*^9}, {3.777997985843741*^9, 
   3.777998033885041*^9}, 3.777998122905759*^9, {3.777998182279489*^9, 
   3.777998182608243*^9}, {3.779459958808988*^9, 3.779460064614203*^9}, {
   3.779460159660983*^9, 3.779460163580591*^9}, 3.779829211055059*^9, {
   3.7856076036808853`*^9, 3.7856076813321466`*^9}, {3.785608402179882*^9, 
   3.785608444979422*^9}, {3.785608761484311*^9, 3.785608761729653*^9}, {
   3.785608825556628*^9, 3.785608826250382*^9}, {3.785610795205896*^9, 
   3.785610961836729*^9}, {3.785611133270018*^9, 3.7856111389030657`*^9}, {
   3.785611236093113*^9, 3.785611252439022*^9}, {3.785611531088333*^9, 
   3.78561153129632*^9}, {3.7856117274605837`*^9, 3.785611727961656*^9}, {
   3.7895052321690607`*^9, 3.78950526896297*^9}, {3.7895104952267437`*^9, 
   3.7895104970975323`*^9}, {3.78951068954182*^9, 3.7895107562851458`*^9}, {
   3.78951083074436*^9, 3.789510903443602*^9}, {3.789511531293047*^9, 
   3.7895115805508003`*^9}, {3.812651360457861*^9, 3.812651366918726*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"9105699b-dbc7-4026-ba09-b16bc8b67ec8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.3392465133691318`*^6", ",", "1.102134658016771`*^6", ",", 
   "2.0025033197086123`*^6", ",", "998408.1303483095`", ",", 
   "1.4819244071059115`*^6", ",", "1.3169156119473926`*^6", ",", 
   "1.5601518436595139`*^6", ",", "1.117395296769011`*^6", ",", 
   "1.7376576910685208`*^6", ",", "1.5947774955909469`*^6", ",", 
   "2.256330971704932`*^6", ",", "1.4238933126262086`*^6", ",", 
   "1.786392853607233`*^6", ",", "1.0745072440610914`*^6", ",", 
   "1.4490419868552906`*^6", ",", "655103.4828775352`", ",", 
   "797082.4395185747`", ",", "1.0680335207001918`*^6", ",", 
   "573369.8936107241`", ",", "847325.9519595329`", ",", 
   "1.0816455537614676`*^6", ",", "756054.0622734952`", ",", 
   "393690.56352497166`", ",", "635663.5982664864`", ",", 
   "890997.1044255837`", ",", "635159.8635150291`", ",", "603010.449577657`", 
   ",", "1.2227738296177827`*^6", ",", "756739.8560575423`", ",", 
   "704518.285872939`", ",", "559413.7583397898`", ",", "363680.15985946567`",
    ",", "848325.7319951475`", ",", "942196.2683028461`", ",", 
   "966585.8760780942`", ",", "719376.9392744367`", ",", 
   "1.0896739526099144`*^6", ",", "615790.9253239929`", ",", 
   "685969.5793721967`", ",", "1.3830611758661352`*^6", ",", 
   "1.0236388218212682`*^6", ",", "602677.3337512831`", ",", 
   "776815.7975202857`", ",", "572975.9949827516`", ",", "580622.7809078336`",
    ",", "1.4072559085618705`*^6", ",", "1.0287356389187167`*^6", ",", 
   "1.1664675653575638`*^6", ",", "592166.1052861139`", ",", 
   "987544.5813452583`", ",", "546359.8111830006`", ",", "574433.3605353681`",
    ",", "398664.3621501533`", ",", "701577.9820923028`", ",", 
   "511711.1468977402`", ",", "535326.9125913742`", ",", "500827.6259783027`",
    ",", "667809.9777516902`", ",", "375223.85939891316`", ",", 
   "432275.04577921814`", ",", "345031.14806559257`", ",", 
   "386594.7642023432`", ",", "665507.018360256`", ",", "449861.54720232764`",
    ",", "366502.04401027487`", ",", "533826.4891760328`", ",", 
   "351666.1607807774`", ",", "146083.2737278335`", ",", "681675.2056359486`",
    ",", "277647.2346392113`", ",", "400002.2676876679`", ",", 
   "275275.8579450396`", ",", "593768.2517687591`", ",", 
   "209999.81601292032`", ",", "346742.40946305916`", ",", 
   "337917.7720134936`", ",", "278312.77991016215`", ",", 
   "322301.14656852215`", ",", "409464.9446569821`", ",", 
   "321531.2671363723`", ",", "460313.6781327425`", ",", "248297.7944965437`",
    ",", "239334.41476139298`", ",", "423633.1348009217`", ",", 
   "466221.52014461305`", ",", "490331.2165082275`", ",", 
   "282122.7223577663`", ",", "408070.4191214903`", ",", 
   "5.84812910594791`*^6", ",", "201395.79312888774`", ",", 
   "224594.32914412185`", ",", "266802.0255081641`", ",", 
   "425315.1624946226`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.788022509130034*^9, 3.789505191355071*^9, {3.789505255645858*^9, 
   3.789505269577298*^9}, 3.789507045603972*^9, 3.7895094017326508`*^9, {
   3.789510883909233*^9, 3.789510904301724*^9}, {3.7895115812653093`*^9, 
   3.789511597381978*^9}, 3.789578427178134*^9, 3.789580038381752*^9, 
   3.7895827468123627`*^9, 3.792166137354746*^9, 3.792340099405489*^9, 
   3.79268607103972*^9, 3.792692723573601*^9, 3.792785495812529*^9, 
   3.792861783858692*^9, 3.793556348472362*^9, 3.809870564546105*^9, 
   3.809913656745328*^9, 3.809978667264503*^9, 3.810243346363387*^9, 
   3.811976756091756*^9, 3.812551090560317*^9, 3.8126627458222427`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"40c1cee1-ceae-49b0-bc00-8e76fcfeebfa"],

Cell[BoxData["603010.449577657`"], "Output",
 CellChangeTimes->{
  3.788022509130034*^9, 3.789505191355071*^9, {3.789505255645858*^9, 
   3.789505269577298*^9}, 3.789507045603972*^9, 3.7895094017326508`*^9, {
   3.789510883909233*^9, 3.789510904301724*^9}, {3.7895115812653093`*^9, 
   3.789511597381978*^9}, 3.789578427178134*^9, 3.789580038381752*^9, 
   3.7895827468123627`*^9, 3.792166137354746*^9, 3.792340099405489*^9, 
   3.79268607103972*^9, 3.792692723573601*^9, 3.792785495812529*^9, 
   3.792861783858692*^9, 3.793556348472362*^9, 3.809870564546105*^9, 
   3.809913656745328*^9, 3.809978667264503*^9, 3.810243346363387*^9, 
   3.811976756091756*^9, 3.812551090560317*^9, 3.812662745824265*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"fe1c71f9-adc4-46c7-8ec5-16fc277a1ed6"],

Cell[BoxData["48.89679440476976`"], "Output",
 CellChangeTimes->{
  3.788022509130034*^9, 3.789505191355071*^9, {3.789505255645858*^9, 
   3.789505269577298*^9}, 3.789507045603972*^9, 3.7895094017326508`*^9, {
   3.789510883909233*^9, 3.789510904301724*^9}, {3.7895115812653093`*^9, 
   3.789511597381978*^9}, 3.789578427178134*^9, 3.789580038381752*^9, 
   3.7895827468123627`*^9, 3.792166137354746*^9, 3.792340099405489*^9, 
   3.79268607103972*^9, 3.792692723573601*^9, 3.792785495812529*^9, 
   3.792861783858692*^9, 3.793556348472362*^9, 3.809870564546105*^9, 
   3.809913656745328*^9, 3.809978667264503*^9, 3.810243346363387*^9, 
   3.811976756091756*^9, 3.812551090560317*^9, 3.812662745825286*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"d71bf7ad-296b-4253-a8eb-855f1cef748b"],

Cell[BoxData["\<\"95% confidence bounds on fitted WT kcat and KM \
parameters:\"\>"], "Print",
 CellChangeTimes->{
  3.7880225091847343`*^9, 3.789505191363338*^9, {3.789505255651869*^9, 
   3.789505269584846*^9}, 3.789507045614588*^9, 3.789509401739429*^9, {
   3.789510883915783*^9, 3.789510904309883*^9}, {3.789511581272168*^9, 
   3.789511597388974*^9}, 3.789578427188809*^9, 3.789580038437772*^9, 
   3.7895827468238707`*^9, 3.792166137360909*^9, 3.792340099411528*^9, 
   3.79268607104688*^9, 3.792692723580152*^9, 3.7927854958191147`*^9, 
   3.792861783865364*^9, 3.7935563484818068`*^9, 3.809870564551167*^9, 
   3.809913656762855*^9, 3.809978667275405*^9, 3.81024334636876*^9, 
   3.811976756103402*^9, 3.8125510905678263`*^9, 3.812662745826261*^9},
 CellLabel->
  "During evaluation of \
In[112]:=",ExpressionUUID->"9de6c2cb-3ed1-45d8-acb2-945774a8ce12"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"209999.81601292032`", ",", "2.0025033197086123`*^6"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.788022509130034*^9, 3.789505191355071*^9, {3.789505255645858*^9, 
   3.789505269577298*^9}, 3.789507045603972*^9, 3.7895094017326508`*^9, {
   3.789510883909233*^9, 3.789510904301724*^9}, {3.7895115812653093`*^9, 
   3.789511597381978*^9}, 3.789578427178134*^9, 3.789580038381752*^9, 
   3.7895827468123627`*^9, 3.792166137354746*^9, 3.792340099405489*^9, 
   3.79268607103972*^9, 3.792692723573601*^9, 3.792785495812529*^9, 
   3.792861783858692*^9, 3.793556348472362*^9, 3.809870564546105*^9, 
   3.809913656745328*^9, 3.809978667264503*^9, 3.810243346363387*^9, 
   3.811976756091756*^9, 3.812551090560317*^9, 3.812662745827352*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"23c2b986-3154-4a58-93d9-f2a0dd3eeca8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12.60648044236603`", ",", "397.9661676205682`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.788022509130034*^9, 3.789505191355071*^9, {3.789505255645858*^9, 
   3.789505269577298*^9}, 3.789507045603972*^9, 3.7895094017326508`*^9, {
   3.789510883909233*^9, 3.789510904301724*^9}, {3.7895115812653093`*^9, 
   3.789511597381978*^9}, 3.789578427178134*^9, 3.789580038381752*^9, 
   3.7895827468123627`*^9, 3.792166137354746*^9, 3.792340099405489*^9, 
   3.79268607103972*^9, 3.792692723573601*^9, 3.792785495812529*^9, 
   3.792861783858692*^9, 3.793556348472362*^9, 3.809870564546105*^9, 
   3.809913656745328*^9, 3.809978667264503*^9, 3.810243346363387*^9, 
   3.811976756091756*^9, 3.812551090560317*^9, 3.812662745828084*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"c9ef4fdb-af13-4568-9447-3ebbca947ee9"],

Cell[BoxData["\<\"Aggregated WT kcat values, before correction:\"\>"], "Print",
 CellChangeTimes->{
  3.7880225091847343`*^9, 3.789505191363338*^9, {3.789505255651869*^9, 
   3.789505269584846*^9}, 3.789507045614588*^9, 3.789509401739429*^9, {
   3.789510883915783*^9, 3.789510904309883*^9}, {3.789511581272168*^9, 
   3.789511597388974*^9}, 3.789578427188809*^9, 3.789580038437772*^9, 
   3.7895827468238707`*^9, 3.792166137360909*^9, 3.792340099411528*^9, 
   3.79268607104688*^9, 3.792692723580152*^9, 3.7927854958191147`*^9, 
   3.792861783865364*^9, 3.7935563484818068`*^9, 3.809870564551167*^9, 
   3.809913656762855*^9, 3.809978667275405*^9, 3.81024334636876*^9, 
   3.811976756103402*^9, 3.8125510905678263`*^9, 3.81266274582909*^9},
 CellLabel->
  "During evaluation of \
In[112]:=",ExpressionUUID->"7d3ef1ef-ba54-4623-b005-6c206fabb395"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
    EdgeForm[Opacity[0.]], {}, 
    {RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
     EdgeForm[Opacity[0.]], RectangleBox[{125000., 0}, {150000., 1.},
      RoundingRadius->0], RectangleBox[{200000., 0}, {225000., 3.},
      RoundingRadius->0], RectangleBox[{225000., 0}, {250000., 2.},
      RoundingRadius->0], RectangleBox[{250000., 0}, {275000., 1.},
      RoundingRadius->0], RectangleBox[{275000., 0}, {300000., 4.},
      RoundingRadius->0], RectangleBox[{300000., 0}, {325000., 2.},
      RoundingRadius->0], RectangleBox[{325000., 0}, {350000., 3.},
      RoundingRadius->0], RectangleBox[{350000., 0}, {375000., 3.},
      RoundingRadius->0], RectangleBox[{375000., 0}, {400000., 4.},
      RoundingRadius->0], RectangleBox[{400000., 0}, {425000., 4.},
      RoundingRadius->0], RectangleBox[{425000., 0}, {450000., 3.},
      RoundingRadius->0], RectangleBox[{450000., 0}, {475000., 2.},
      RoundingRadius->0], RectangleBox[{475000., 0}, {500000., 1.},
      RoundingRadius->0], RectangleBox[{500000., 0}, {525000., 2.},
      RoundingRadius->0], RectangleBox[{525000., 0}, {550000., 3.},
      RoundingRadius->0], RectangleBox[{550000., 0}, {575000., 4.},
      RoundingRadius->0], RectangleBox[{575000., 0}, {600000., 3.},
      RoundingRadius->0], RectangleBox[{600000., 0}, {625000., 3.},
      RoundingRadius->0], RectangleBox[{625000., 0}, {650000., 2.},
      RoundingRadius->0], RectangleBox[{650000., 0}, {675000., 3.},
      RoundingRadius->0], RectangleBox[{675000., 0}, {700000., 2.},
      RoundingRadius->0], RectangleBox[{700000., 0}, {725000., 3.},
      RoundingRadius->0], RectangleBox[{750000., 0}, {775000., 2.},
      RoundingRadius->0], RectangleBox[{775000., 0}, {800000., 2.},
      RoundingRadius->0], RectangleBox[{825000., 0}, {850000., 2.},
      RoundingRadius->0], RectangleBox[{875000., 0}, {900000., 1.},
      RoundingRadius->0], RectangleBox[{925000., 0}, {950000., 1.},
      RoundingRadius->0], RectangleBox[{950000., 0}, {975000., 1.},
      RoundingRadius->0], RectangleBox[{975000., 0}, {1.*^6, 2.},
      RoundingRadius->0], RectangleBox[{1.*^6, 0}, {1.025*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.025*^6, 0}, {1.05*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.05*^6, 0}, {1.075*^6, 2.},
      RoundingRadius->0], RectangleBox[{1.075*^6, 0}, {1.1*^6, 2.},
      RoundingRadius->0], RectangleBox[{1.1*^6, 0}, {1.125*^6, 2.},
      RoundingRadius->0], RectangleBox[{1.15*^6, 0}, {1.175*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.2*^6, 0}, {1.225*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.3*^6, 0}, {1.325*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.325*^6, 0}, {1.35*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.375*^6, 0}, {1.4*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.4*^6, 0}, {1.425*^6, 2.},
      RoundingRadius->0], RectangleBox[{1.425*^6, 0}, {1.45*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.475*^6, 0}, {1.5*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.55*^6, 0}, {1.575*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.575*^6, 0}, {1.6*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.725*^6, 0}, {1.75*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.775*^6, 0}, {1.8*^6, 1.},
      RoundingRadius->0], RectangleBox[{2.*^6, 0}, {2.025*^6, 1.},
      RoundingRadius->0], RectangleBox[{2.25*^6, 0}, {2.275*^6, 1.},
      RoundingRadius->0], RectangleBox[{5.825*^6, 0}, {5.85*^6, 1.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{10500., 0},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Counts\"", TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"Italic\\\"], \
\\\"cat\\\"]\\)/\\!\\(\\*SubscriptBox[StyleBox[\\\"K\\\",FontSlant->\\\"\
Italic\\\"], \\\"M\\\"]\\) (/M /s)\"", TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 18],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->450,
  PlotRange->{{125000., 5.85*^6}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.788022509130034*^9, 3.789505191355071*^9, {3.789505255645858*^9, 
   3.789505269577298*^9}, 3.789507045603972*^9, 3.7895094017326508`*^9, {
   3.789510883909233*^9, 3.789510904301724*^9}, {3.7895115812653093`*^9, 
   3.789511597381978*^9}, 3.789578427178134*^9, 3.789580038381752*^9, 
   3.7895827468123627`*^9, 3.792166137354746*^9, 3.792340099405489*^9, 
   3.79268607103972*^9, 3.792692723573601*^9, 3.792785495812529*^9, 
   3.792861783858692*^9, 3.793556348472362*^9, 3.809870564546105*^9, 
   3.809913656745328*^9, 3.809978667264503*^9, 3.810243346363387*^9, 
   3.811976756091756*^9, 3.812551090560317*^9, 3.8126627459093723`*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"93c78776-542c-4d13-ba4b-22e93b3bf00a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"195197.83083754554`", ",", "1.2173379610327613`*^6"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.788022509130034*^9, 3.789505191355071*^9, {3.789505255645858*^9, 
   3.789505269577298*^9}, 3.789507045603972*^9, 3.7895094017326508`*^9, {
   3.789510883909233*^9, 3.789510904301724*^9}, {3.7895115812653093`*^9, 
   3.789511597381978*^9}, 3.789578427178134*^9, 3.789580038381752*^9, 
   3.7895827468123627`*^9, 3.792166137354746*^9, 3.792340099405489*^9, 
   3.79268607103972*^9, 3.792692723573601*^9, 3.792785495812529*^9, 
   3.792861783858692*^9, 3.793556348472362*^9, 3.809870564546105*^9, 
   3.809913656745328*^9, 3.809978667264503*^9, 3.810243346363387*^9, 
   3.811976756091756*^9, 3.812551090560317*^9, 3.8126627461030607`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"905ecf97-a42e-475e-8910-2c0f80a25cdd"],

Cell[BoxData["\<\"Aggregated kcat values, after correction:\"\>"], "Print",
 CellChangeTimes->{
  3.7880225091847343`*^9, 3.789505191363338*^9, {3.789505255651869*^9, 
   3.789505269584846*^9}, 3.789507045614588*^9, 3.789509401739429*^9, {
   3.789510883915783*^9, 3.789510904309883*^9}, {3.789511581272168*^9, 
   3.789511597388974*^9}, 3.789578427188809*^9, 3.789580038437772*^9, 
   3.7895827468238707`*^9, 3.792166137360909*^9, 3.792340099411528*^9, 
   3.79268607104688*^9, 3.792692723580152*^9, 3.7927854958191147`*^9, 
   3.792861783865364*^9, 3.7935563484818068`*^9, 3.809870564551167*^9, 
   3.809913656762855*^9, 3.809978667275405*^9, 3.81024334636876*^9, 
   3.811976756103402*^9, 3.8125510905678263`*^9, 3.812662746104072*^9},
 CellLabel->
  "During evaluation of \
In[112]:=",ExpressionUUID->"161f9661-e1c9-4264-8db2-6f65a918b957"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.8549019607843137, 0.9607843137254902, 1.], EdgeForm[{Opacity[
    0.238], Thickness[Small]}], {}, 
    {RGBColor[0.8549019607843137, 0.9607843137254902, 1.], EdgeForm[{Opacity[
     0.238], Thickness[Small]}], RectangleBox[{100000., 0}, {125000., 1.},
      RoundingRadius->0], RectangleBox[{175000., 0}, {200000., 2.},
      RoundingRadius->0], RectangleBox[{200000., 0}, {225000., 1.},
      RoundingRadius->0], RectangleBox[{225000., 0}, {250000., 1.},
      RoundingRadius->0], RectangleBox[{300000., 0}, {325000., 1.},
      RoundingRadius->0], RectangleBox[{325000., 0}, {350000., 1.},
      RoundingRadius->0], RectangleBox[{375000., 0}, {400000., 2.},
      RoundingRadius->0], RectangleBox[{400000., 0}, {425000., 3.},
      RoundingRadius->0], RectangleBox[{425000., 0}, {450000., 4.},
      RoundingRadius->0], RectangleBox[{450000., 0}, {475000., 5.},
      RoundingRadius->0], RectangleBox[{475000., 0}, {500000., 4.},
      RoundingRadius->0], RectangleBox[{500000., 0}, {525000., 7.},
      RoundingRadius->0], RectangleBox[{525000., 0}, {550000., 4.},
      RoundingRadius->0], RectangleBox[{550000., 0}, {575000., 4.},
      RoundingRadius->0], RectangleBox[{575000., 0}, {600000., 2.},
      RoundingRadius->0], RectangleBox[{600000., 0}, {625000., 5.},
      RoundingRadius->0], RectangleBox[{625000., 0}, {650000., 4.},
      RoundingRadius->0], RectangleBox[{650000., 0}, {675000., 5.},
      RoundingRadius->0], RectangleBox[{675000., 0}, {700000., 3.},
      RoundingRadius->0], RectangleBox[{700000., 0}, {725000., 4.},
      RoundingRadius->0], RectangleBox[{725000., 0}, {750000., 5.},
      RoundingRadius->0], RectangleBox[{750000., 0}, {775000., 5.},
      RoundingRadius->0], RectangleBox[{775000., 0}, {800000., 1.},
      RoundingRadius->0], RectangleBox[{825000., 0}, {850000., 1.},
      RoundingRadius->0], RectangleBox[{850000., 0}, {875000., 2.},
      RoundingRadius->0], RectangleBox[{875000., 0}, {900000., 4.},
      RoundingRadius->0], RectangleBox[{900000., 0}, {925000., 3.},
      RoundingRadius->0], RectangleBox[{925000., 0}, {950000., 1.},
      RoundingRadius->0], RectangleBox[{950000., 0}, {975000., 1.},
      RoundingRadius->0], RectangleBox[{975000., 0}, {1.*^6, 2.},
      RoundingRadius->0], RectangleBox[{1.025*^6, 0}, {1.05*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.1*^6, 0}, {1.125*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.2*^6, 0}, {1.225*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.275*^6, 0}, {1.3*^6, 1.},
      RoundingRadius->0], RectangleBox[{1.725*^6, 0}, {1.75*^6, 1.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{67000., 0},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Counts\"", TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"Italic\\\"], \
\\\"cat\\\"]\\)/\\!\\(\\*SubscriptBox[StyleBox[\\\"K\\\",FontSlant->\\\"\
Italic\\\"], \\\"M\\\"]\\) (/M /s)\"", TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 18],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->450,
  PlotRange->{{100000., 1.75*^6}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.788022509130034*^9, 3.789505191355071*^9, {3.789505255645858*^9, 
   3.789505269577298*^9}, 3.789507045603972*^9, 3.7895094017326508`*^9, {
   3.789510883909233*^9, 3.789510904301724*^9}, {3.7895115812653093`*^9, 
   3.789511597381978*^9}, 3.789578427178134*^9, 3.789580038381752*^9, 
   3.7895827468123627`*^9, 3.792166137354746*^9, 3.792340099405489*^9, 
   3.79268607103972*^9, 3.792692723573601*^9, 3.792785495812529*^9, 
   3.792861783858692*^9, 3.793556348472362*^9, 3.809870564546105*^9, 
   3.809913656745328*^9, 3.809978667264503*^9, 3.810243346363387*^9, 
   3.811976756091756*^9, 3.812551090560317*^9, 3.812662746157596*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"6129f99a-5f82-4b2b-b635-106553d83603"],

Cell[BoxData["\<\"Aggregated kcat values, before and after correction \
overlaid:\"\>"], "Print",
 CellChangeTimes->{
  3.7880225091847343`*^9, 3.789505191363338*^9, {3.789505255651869*^9, 
   3.789505269584846*^9}, 3.789507045614588*^9, 3.789509401739429*^9, {
   3.789510883915783*^9, 3.789510904309883*^9}, {3.789511581272168*^9, 
   3.789511597388974*^9}, 3.789578427188809*^9, 3.789580038437772*^9, 
   3.7895827468238707`*^9, 3.792166137360909*^9, 3.792340099411528*^9, 
   3.79268607104688*^9, 3.792692723580152*^9, 3.7927854958191147`*^9, 
   3.792861783865364*^9, 3.7935563484818068`*^9, 3.809870564551167*^9, 
   3.809913656762855*^9, 3.809978667275405*^9, 3.81024334636876*^9, 
   3.811976756103402*^9, 3.8125510905678263`*^9, 3.812662746161995*^9},
 CellLabel->
  "During evaluation of \
In[112]:=",ExpressionUUID->"21dabb1a-348a-4a64-8d5a-291a492636d1"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
     EdgeForm[Opacity[0.]], {}, 
     {RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
      EdgeForm[Opacity[0.]], RectangleBox[{125000., 0}, {150000., 1.},
       RoundingRadius->0], RectangleBox[{200000., 0}, {225000., 3.},
       RoundingRadius->0], RectangleBox[{225000., 0}, {250000., 2.},
       RoundingRadius->0], RectangleBox[{250000., 0}, {275000., 1.},
       RoundingRadius->0], RectangleBox[{275000., 0}, {300000., 4.},
       RoundingRadius->0], RectangleBox[{300000., 0}, {325000., 2.},
       RoundingRadius->0], RectangleBox[{325000., 0}, {350000., 3.},
       RoundingRadius->0], RectangleBox[{350000., 0}, {375000., 3.},
       RoundingRadius->0], RectangleBox[{375000., 0}, {400000., 4.},
       RoundingRadius->0], RectangleBox[{400000., 0}, {425000., 4.},
       RoundingRadius->0], RectangleBox[{425000., 0}, {450000., 3.},
       RoundingRadius->0], RectangleBox[{450000., 0}, {475000., 2.},
       RoundingRadius->0], RectangleBox[{475000., 0}, {500000., 1.},
       RoundingRadius->0], RectangleBox[{500000., 0}, {525000., 2.},
       RoundingRadius->0], RectangleBox[{525000., 0}, {550000., 3.},
       RoundingRadius->0], RectangleBox[{550000., 0}, {575000., 4.},
       RoundingRadius->0], RectangleBox[{575000., 0}, {600000., 3.},
       RoundingRadius->0], RectangleBox[{600000., 0}, {625000., 3.},
       RoundingRadius->0], RectangleBox[{625000., 0}, {650000., 2.},
       RoundingRadius->0], RectangleBox[{650000., 0}, {675000., 3.},
       RoundingRadius->0], RectangleBox[{675000., 0}, {700000., 2.},
       RoundingRadius->0], RectangleBox[{700000., 0}, {725000., 3.},
       RoundingRadius->0], RectangleBox[{750000., 0}, {775000., 2.},
       RoundingRadius->0], RectangleBox[{775000., 0}, {800000., 2.},
       RoundingRadius->0], RectangleBox[{825000., 0}, {850000., 2.},
       RoundingRadius->0], RectangleBox[{875000., 0}, {900000., 1.},
       RoundingRadius->0], RectangleBox[{925000., 0}, {950000., 1.},
       RoundingRadius->0], RectangleBox[{950000., 0}, {975000., 1.},
       RoundingRadius->0], RectangleBox[{975000., 0}, {1.*^6, 2.},
       RoundingRadius->0], RectangleBox[{1.*^6, 0}, {1.025*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.025*^6, 0}, {1.05*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.05*^6, 0}, {1.075*^6, 2.},
       RoundingRadius->0], RectangleBox[{1.075*^6, 0}, {1.1*^6, 2.},
       RoundingRadius->0], RectangleBox[{1.1*^6, 0}, {1.125*^6, 2.},
       RoundingRadius->0], RectangleBox[{1.15*^6, 0}, {1.175*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.2*^6, 0}, {1.225*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.3*^6, 0}, {1.325*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.325*^6, 0}, {1.35*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.375*^6, 0}, {1.4*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.4*^6, 0}, {1.425*^6, 2.},
       RoundingRadius->0], RectangleBox[{1.425*^6, 0}, {1.45*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.475*^6, 0}, {1.5*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.55*^6, 0}, {1.575*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.575*^6, 0}, {1.6*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.725*^6, 0}, {1.75*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.775*^6, 0}, {1.8*^6, 1.},
       RoundingRadius->0], RectangleBox[{2.*^6, 0}, {2.025*^6, 1.},
       RoundingRadius->0], RectangleBox[{2.25*^6, 0}, {2.275*^6, 1.},
       RoundingRadius->0], RectangleBox[{5.825*^6, 0}, {5.85*^6, 1.},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {
    {RGBColor[0.8549019607843137, 0.9607843137254902, 1.], EdgeForm[{Opacity[
     0.238], Thickness[Small]}], {}, 
     {RGBColor[0.8549019607843137, 0.9607843137254902, 1.], EdgeForm[{Opacity[
      0.238], Thickness[Small]}], RectangleBox[{100000., 0}, {125000., 1.},
       RoundingRadius->0], RectangleBox[{175000., 0}, {200000., 2.},
       RoundingRadius->0], RectangleBox[{200000., 0}, {225000., 1.},
       RoundingRadius->0], RectangleBox[{225000., 0}, {250000., 1.},
       RoundingRadius->0], RectangleBox[{300000., 0}, {325000., 1.},
       RoundingRadius->0], RectangleBox[{325000., 0}, {350000., 1.},
       RoundingRadius->0], RectangleBox[{375000., 0}, {400000., 2.},
       RoundingRadius->0], RectangleBox[{400000., 0}, {425000., 3.},
       RoundingRadius->0], RectangleBox[{425000., 0}, {450000., 4.},
       RoundingRadius->0], RectangleBox[{450000., 0}, {475000., 5.},
       RoundingRadius->0], RectangleBox[{475000., 0}, {500000., 4.},
       RoundingRadius->0], RectangleBox[{500000., 0}, {525000., 7.},
       RoundingRadius->0], RectangleBox[{525000., 0}, {550000., 4.},
       RoundingRadius->0], RectangleBox[{550000., 0}, {575000., 4.},
       RoundingRadius->0], RectangleBox[{575000., 0}, {600000., 2.},
       RoundingRadius->0], RectangleBox[{600000., 0}, {625000., 5.},
       RoundingRadius->0], RectangleBox[{625000., 0}, {650000., 4.},
       RoundingRadius->0], RectangleBox[{650000., 0}, {675000., 5.},
       RoundingRadius->0], RectangleBox[{675000., 0}, {700000., 3.},
       RoundingRadius->0], RectangleBox[{700000., 0}, {725000., 4.},
       RoundingRadius->0], RectangleBox[{725000., 0}, {750000., 5.},
       RoundingRadius->0], RectangleBox[{750000., 0}, {775000., 5.},
       RoundingRadius->0], RectangleBox[{775000., 0}, {800000., 1.},
       RoundingRadius->0], RectangleBox[{825000., 0}, {850000., 1.},
       RoundingRadius->0], RectangleBox[{850000., 0}, {875000., 2.},
       RoundingRadius->0], RectangleBox[{875000., 0}, {900000., 4.},
       RoundingRadius->0], RectangleBox[{900000., 0}, {925000., 3.},
       RoundingRadius->0], RectangleBox[{925000., 0}, {950000., 1.},
       RoundingRadius->0], RectangleBox[{950000., 0}, {975000., 1.},
       RoundingRadius->0], RectangleBox[{975000., 0}, {1.*^6, 2.},
       RoundingRadius->0], RectangleBox[{1.025*^6, 0}, {1.05*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.1*^6, 0}, {1.125*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.2*^6, 0}, {1.225*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.275*^6, 0}, {1.3*^6, 1.},
       RoundingRadius->0], RectangleBox[{1.725*^6, 0}, {1.75*^6, 1.},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{10500., 0},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Counts\"", TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\",FontSlant->\\\"Italic\\\"], \
\\\"cat\\\"]\\)/\\!\\(\\*SubscriptBox[StyleBox[\\\"K\\\",FontSlant->\\\"\
Italic\\\"], \\\"M\\\"]\\) (/M /s)\"", TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 18],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->450,
  PlotRange->{{125000., 5.85*^6}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.788022509130034*^9, 3.789505191355071*^9, {3.789505255645858*^9, 
   3.789505269577298*^9}, 3.789507045603972*^9, 3.7895094017326508`*^9, {
   3.789510883909233*^9, 3.789510904301724*^9}, {3.7895115812653093`*^9, 
   3.789511597381978*^9}, 3.789578427178134*^9, 3.789580038381752*^9, 
   3.7895827468123627`*^9, 3.792166137354746*^9, 3.792340099405489*^9, 
   3.79268607103972*^9, 3.792692723573601*^9, 3.792785495812529*^9, 
   3.792861783858692*^9, 3.793556348472362*^9, 3.809870564546105*^9, 
   3.809913656745328*^9, 3.809978667264503*^9, 3.810243346363387*^9, 
   3.811976756091756*^9, 3.812551090560317*^9, 3.8126627461828547`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"6292a62e-07a4-4570-ba32-6dfb6907f943"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Generate an overlaid plot of the wild-type Michaelis-Menten fits for \
coplotting with mutant Michaelis-Menten fits, to aid interpretation of ",
 StyleBox["p",
  FontSlant->"Italic"],
 "-values:"
}], "Subsubsection",
 CellChangeTimes->{{3.747071481427661*^9, 3.747071533174438*^9}, {
  3.7735858760138273`*^9, 
  3.773585878708321*^9}},ExpressionUUID->"13ea18d9-566c-43be-b78b-\
d1ec65111118"],

Cell[TextData[{
 "Now want to look at the fitted WT Michaelis-Menten curves overlaid. \
Plotting all the individual curves in light gray, with the ",
 StyleBox["median",
  FontWeight->"Bold"],
 " curve overlaid in dark gray, and curves corresponding to the 99% \
confidence bounds shown as intermediate gray curves:"
}], "Text",
 CellChangeTimes->{{3.773585809332531*^9, 3.77358583644274*^9}, {
  3.77358724515436*^9, 
  3.773587330840275*^9}},ExpressionUUID->"da7fbc95-43d8-4428-9c05-\
0b9a7a27a936"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"curves", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RandomChoice", "[", "normalizedWTkcatvalues", "]"}], "*", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"1.0", ",", "0.01"}], "]"}], "]"}], "*", 
        RowBox[{"sub", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"RandomChoice", "[", "allWTKmValues", "]"}], "*", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"1.0", ",", "0.01"}], "]"}], "]"}]}], "+", "sub"}], 
          ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "200"}], "}"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"curves", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"normalizedWTkcatvalues", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "*", 
        RowBox[{"sub", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"allWTKmValues", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "+", "sub"}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "normalizedWTkcatvalues", "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"curvesKm", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"1.0", "*", 
        RowBox[{"sub", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"allWTKmValues", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "+", "sub"}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "normalizedWTkcatvalues", "]"}]}], "}"}]}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.746998486362586*^9, 3.746998487993392*^9}, {
  3.7469985227357683`*^9, 3.746998541030939*^9}, {3.747071110024844*^9, 
  3.74707111041481*^9}, {3.7470715503457117`*^9, 3.747071589634535*^9}, {
  3.747071629555717*^9, 3.747071739080809*^9}, {3.747071783969421*^9, 
  3.7470718170376787`*^9}, {3.747671802083928*^9, 3.747671812548944*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"12c8b33b-021f-473e-8f60-75f400ffa05b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"densityFilling1", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{"curves", ",", 
      RowBox[{"{", 
       RowBox[{"sub", ",", "0", ",", "150"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Gray", ",", 
         RowBox[{"Thickness", "[", "0.015", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.05", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotPoints", "\[Rule]", "2"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kcatResampled", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Median", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{"normalizedWTkcatvalues", ",", "5"}], "]"}], "]"}], ",", 
       RowBox[{"{", "526", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.99"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KmResampled", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Median", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{"allWTKmValues", ",", "5"}], "]"}], "]"}], ",", 
       RowBox[{"{", "526", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.99"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"densityFilling", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"densityFilling1", ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Median", "[", "normalizedWTkcatvalues", "]"}], "*", 
        RowBox[{"sub", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Median", "[", "allWTKmValues", "]"}], "+", "sub"}], 
          ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"sub", ",", "0", ",", "150"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
          RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"kcatResampled", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"sub", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Median", "[", "allWTKmValues", "]"}], "+", "sub"}], 
          ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"sub", ",", "0", ",", "150"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Dashed", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"kcatResampled", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"sub", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Median", "[", "allWTKmValues", "]"}], "+", "sub"}], 
          ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"sub", ",", "0", ",", "150"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Dashed", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}]}]}], "]"}]}], "]"}]}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"densityFillingKm", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"curvesKm", ",", 
     RowBox[{"{", 
      RowBox[{"sub", ",", "0", ",", "150"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Gray", ",", 
        RowBox[{"Thickness", "[", "0.015", "]"}], ",", 
        RowBox[{"Opacity", "[", "0.02", "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "2"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.746998449748304*^9, 3.746998459800695*^9}, {
  3.746998490183465*^9, 3.746998512000492*^9}, {3.746998615335558*^9, 
  3.746998620635936*^9}, {3.746998669868988*^9, 3.746998671460804*^9}, {
  3.747070991563325*^9, 3.747070995258498*^9}, {3.747071131536311*^9, 
  3.747071137044113*^9}, {3.747071828878646*^9, 3.74707186211793*^9}, {
  3.747671774993894*^9, 3.747671782645012*^9}, {3.747671818988652*^9, 
  3.747671819902158*^9}, {3.747671963798854*^9, 3.747671972234253*^9}, {
  3.753135443737899*^9, 3.753135455245417*^9}, {3.753135505009099*^9, 
  3.753135642942466*^9}, {3.753135675295429*^9, 3.753135675531107*^9}, {
  3.753136047628459*^9, 3.75313611727547*^9}, {3.753136161213852*^9, 
  3.7531361804770327`*^9}, {3.753136217688282*^9, 3.75313624211241*^9}, {
  3.7895053057947893`*^9, 3.789505316022637*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"5492d03f-5809-4030-bceb-579dc9582f08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.51808688431733`", ",", "147.26327468918822`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.7880226949165697`*^9, {3.7895052823666077`*^9, 3.7895053177144613`*^9}, 
   3.789507047692379*^9, 3.789509403400429*^9, 3.7895784294193153`*^9, 
   3.789580041427582*^9, 3.789582749090768*^9, 3.792166155830947*^9, 
   3.7923401011074677`*^9, 3.792686077525319*^9, 3.792692728487245*^9, 
   3.792785497477397*^9, 3.7928617855794353`*^9, 3.79355635133386*^9, 
   3.8098705701392097`*^9, 3.8099136614258347`*^9, 3.809978673482871*^9, 
   3.81024335172889*^9, 3.8119767627245283`*^9, 3.812551104066073*^9, 
   3.812662751632489*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"a7b63ad8-3c98-4889-8f7c-9bcc61d85f19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17.641976988988375`", ",", "282.7549574565253`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.7880226949165697`*^9, {3.7895052823666077`*^9, 3.7895053177144613`*^9}, 
   3.789507047692379*^9, 3.789509403400429*^9, 3.7895784294193153`*^9, 
   3.789580041427582*^9, 3.789582749090768*^9, 3.792166155830947*^9, 
   3.7923401011074677`*^9, 3.792686077525319*^9, 3.792692728487245*^9, 
   3.792785497477397*^9, 3.7928617855794353`*^9, 3.79355635133386*^9, 
   3.8098705701392097`*^9, 3.8099136614258347`*^9, 3.809978673482871*^9, 
   3.81024335172889*^9, 3.8119767627245283`*^9, 3.812551104066073*^9, 
   3.812662751638775*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"0cc6a35b-e8fe-4414-8ece-1b5ed868db6d"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlkHtQywEAx39benilMYpWraat1tZ+Rlqhfams1gNlFEPbkQ3ZPMsreZNw
FxdS3bxCebUjf3g0hYaGSwwRxx8uKxJ5tPP7yfnefe/73+c+9w3UGtIWMQmC
GNPXf6uRqkjhOZ58yuPARwHFI+TKDdskyRYmck5YXSOivstNoyRvRluGovEL
V1nEcsGx3LITPC4H7+In3nnrORBJn/qNY1mC8Kvs9pkZfixYj1wv8TIKcLeq
0OdmJhtTFSt/D+GKcImIaRcmeuP9evZFdx0J1nXntdc9I8FtNixwt0hhLJaV
qnQcLAh96OXuE4Fko1149Yw/Kgr49W7GSFC97YcpNRev7VtWuVmjEOThUcdL
C4Rvn54bdyJUhnOeeRFBmLNT9tw1LwbDjHMVrR48NH2+38DUAftiXwk6bDwM
nBq8hmmZgsLq7JpCaTCqvjanMDtiYVrB6sluCYayvIDP9IlHbbXtQ+kyPnZ/
b7UzjAo8DXvBSNkmQIhpz2VGWQI+HtKfHOsSgsakyD0MayK2/vTqTNgYAreT
xdEMbjIW6X0MLHUoKlMxjJGcgsOD/LrON4QivrfTQeSlokrgeKLkC1F/9lQq
oZuOH3/inJ1vhCjOd0YT1HQsWS85fmBsGDQz0wTEoRlwd5zmLN8RBuJfLGmo
991sa/EX4cmzWR20Kh3jDyZ5P8gWwVR94QXtSO/7qUxrrxZBPntuDe2twuhr
YxI+isXwFJvL6Qsq7M35oZAtFaON2b+Qjp2Fbtlwc0ylGPkXa7W0YTY2qLv2
fRoejtTtg6fRrhlYZp9pva8Mh9+chRPoYxn4PC9K27wpHDdch7Lpxkw0JXaV
3GoLh1Odc5cKUKMgPWO/Yr8ED6R3aqirarSYw6QNtRKUevhWUEnzkJ4bv5HZ
JkH0FetaKnc+Gm/I/beyyf+8xVn41m1zyjJJnDJOGkCbs9D7kJ8fqSdR1Koj
6D9Z+M3pKb+XR0JdU9dBHdSg4kOr7mwJiTiO4z3VpkGTUZPpcpqEaNeIl1So
FsGDX62jzSTY3ZMfU6u1eK4/rjdZyP++dVpUanKOtttI/AU7flON
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#1"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljntMzAEAx+9udUf0ukJ68OtxXY/rHnnkEn3ppafUrudR3cTPsM6rMq+S
pJZENCvS0qgsupNjim6lupJpiSSPsTHrJbktnfX7yXy27z7/ffdxVGTEpLMY
DIZwfv+c5i0Te9Q7+8/oNfUryrj+YcfyRBFaFtI6Dfl7vk35V9uKPrhouahN
vaec4jNQmXWtxpmwR6yGbUSu5SB81Gi1pdYJYzOPDV1qU+iutpRbKPlwKyhd
vGjIEsEhB2fNCQEyVJM6stIaxEBGCkfrjekXE1mrS5cjxf25BcdmDQJdRLzy
XjtU5bi2s5U+GPzSmfv2kwPeD+UeYuukMNGutTr5aiXs5nPYhB88ap52Rw4S
SDq77o1x9kao8225+iZH9E32dLBIQN47mvk1xwmLgnlHWNrNCHvZHt1POaPh
50AkazwApH5xS/ldF4Rdz3Fl2QQhocFVGSrj4Zx+ZIipDMHpElUiUeQKt+rC
Jua1LeiTtg4fWM5Hd7hPIVMXinfpKq5ZDR/sm5d8mUQEmEEbd/6qdsOtKFgx
IyIxc+/y7YU27ggyTIwxsqNg2eznyClyR3tdbRSDjEaCzJczm+IBxj+0MdhW
ZygRjHii/3XcOC2LxY90DpsvEaD6TuNbeiwWc/Z+bnN5AvjHJ6voZTIoG3UX
vxFeMPNSX6cbZYjXdBWH7PXCR9bCIjogDkmiJlvivhdO3tUo6Ix4JI/fN3+0
XoioM6ZbaeME9OTVxKmPC+GQtHM9XZkAQetwYEWLEK3GXGu6OxFVYU/IK6tE
+CPf30mtlGOJ1dfMCI4Yvd7PVNQDOQ5saJRrCDEqFthVUeHbMXPxRDgpFcO3
WZdJZe1Akb6yqp0U///bnYqtvOP7zLVi1Co3mNDqVDw89Vl6bFCM4hGSQc+l
4veuC1LFdzHkqrZxqiwN/PqY8w/MJAi0H/tCfUxDi0cFz9NRAkHB0mHKXYEb
nzg5wlUSWE9vekkdViDX82hzR6Dkf2+bAmW5sfWTMgn+AmySO14=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#2"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljn1QiwEAxreXlXQxCTHOaCnJRaZW1va8+qDahrJKptoKO45WF+vsuBDh
6k655NTS0XXVLmedwim9LWUjX5OEq3we+qTzlc774jx3z/3+e37PIk16zHaC
xWIt/9t/VPsrV/jUeEjF8XNNvf18aZThqJ+MItAcV5NHjNLSinl+vQLKFYYL
VQd62l1Qqi+76MGfj5pnlu6mY7MQPTBZOINaDEOD9YVzPQ/WczfPcnVeqIrS
Jg3c4CNiXeb4dL4vcibvzmjd5QG+PT3ZkfKHJvJ117DcG8lL73Ed3VfD+1bh
0448H5TnLLE46AJRXRteQFX4gvdX78AXY1UJ7+fukBVIPC7q5mRLQAgLXm3g
r0TniK2N0AILR14063+shHOE5z6CWosqpWe90/FVqP1ilxNDoZjIOmwblwgR
ZcxZQriHQ1BdYpeMCnHi68tnbN06OL8f6+aJAuBdcfIKu2w95IJF0ubHAbgT
HXiSbY2EIc8usaUFwuFSUTCbL8P1hg+nqWwRqhSYyZbJkVHi1rLjlwjhv4YH
WdkKvG+Z9HZkfxAs1ZUKlnYj7ge75z5UB4P1L1QM6oobj3RxxHj0NG6IUcZi
0uWkZTe3i1FhquthBmORajMNqyxiSOO3mpk5SlT2f47QZ4Zg2vJ6I1OnhMe5
scE1HSHoI5xOMaFxmOq1Sbh5jgSHLjdqmPR4PHj32USbJVDkumxgOAnwPsXJ
vTchwYLEtDVMaQLejm8rVYdK0cRxdWPubIHPidZCWacUE6o97fRCFWLaM9a3
pQJ3/W+b6QYVdLXcT1MOA+en8Mrp6G3YG6N7cswIBF+17qf1SWBdM4yGdeH/
3s4UmL6lqsqDSFTqQqYy9Sk4KKop27mJRP5LLYv5nQKr6/l8o5aEytwyRJ9R
o7pHoUorJhE2f/AN3acGt/AIl6kl4Zs3+zm9VIMiSZZgHkXCbYx8SGdpsEDh
9f1GF/n/b4sGTaN+5jcfSfwBYFZAig==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#3"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljmtMUgEARoEJmk0ja6aihWAQItxEy7QHXw9NU7Fk+EBSoZxuPSTzNbXS
MrVy1co5y8coXZnNCqb1Q7cY6qSybLoiM522VSsMVyu3LO8t19m+nX/fjr8u
NzGLQaPRpP+2aK1MtT7wDl+e4Z9X0DDKlu8pPUPEmRmYz9bP9RsccoMPMRFg
9sCxCz6H6mIW5I1FTTf5XF+Ersn/XrKUidgvTqHLzTx0z3Sy1A5XWBt66tl6
IQwykz1FykbU7rxfy7hBUHe4/7QYPcAdyc1wNsvgNhAjey1bhQzRM7az1wbs
n/Jpzg/3Rku5wMLSh+GTLlxTtJqDd7aK4yxrOLrroipcPviC8y+Hxd0CfXBY
5eyl1VBXbXrNLN6GN+7Bn4fZXAw5nvQxcoALkcuO8l5wsTRqbQHDvAO3g9P7
50Q8dHwbiWfM7MQHP1qM91Me9jSXCxhekSibTvIitXzU/Bi30fW7cXFwgl9S
GoB1hnMP6E3RmP3YJeCRARiMDTtHt8Zgn2dxgbFkLVitVyLo3DgEq/sOCw8I
cEuBFfS4eLzssrhbhwWInP9qpxUr8Lzn7dRAmBCW9jYFLWcv9lWF1P6ZF4K2
iDkRDvJimbdKhJevkmYolRKXiej8hlYRDHc731B2JfgO78mIWRHkyWlGapUK
iVKhofJkINwlpmaqU4Ufj2rq8yyBmGQsOU/tTELI5or7y53EOHnvoY7KTcaN
oQ6rrVwMRaVbAsVMgUtjmjK0Vww/9cHNVGMKrmiVus6fYvQyPVZSg6mItjWd
UhwIwm/NkQFyjQY51BSnUCzBU1m/kezWoK3w9CZ7qgTXXTgtZOx+nP59rYNd
LUFEl7WQLEpH0FiKrXVC8v8vOxNe0wXMqBNStOm3ulKmTJg4CRUtN6WoHc+h
UQuZqOKbqp0GpdAYH8+QV7WIU4oJPzcCu3zt78lJLdqzy7umpASCqj3HSJEO
oUnHro8mEFj5ffswma+Duuxs8kIu8b/3sQ61vRtdsi4R+AtG9zmD
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#4"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljn0slAEAxu/OobRD3HJDOU6hTl3nXud8PojiuOquQzpfNy2t5NQVlZkt
FWqtVZPlI8lIynyGVK5ULl+1lMKoUVvFacmEW/dW69me/f57fo+jMk26l0ah
UNz/9h+T+HLe+hpOgG8kaX1vkRUQfvLUpggNDWKj9JHqkfmActtNY84aK1A/
FrXnzBujOKOkgsO2RxltxDu+xQLib3TBSo0T2pVtmTMJTGiLOgotVS44PXat
99AVFkK3Hl60YHOhS31UGptjD/brtARTDR+DSxsIfZ8jEtx6LU1ZBJYvpnGq
9nNQlrPuiYlKCIeofW19OmfY/dWbsH1BCN7c6Wt2QewZryHjTH/E1al/EXpX
9M286KKlAAtj7mbhvPVYEbr2KE0ThCPN1Uv1B7i4/eN1JG06GIFy//wdaneE
l+aso7FCcFBvvdFXtRF5c6PvqKqtCKorabvvxINreX49tWQbnu/fOetykYdu
sTCfqg3DhzXOfj0LPJjcvORNZUdgWNc0NfFgM6oksKZGRGLCXzs5yeIjZEk3
RcmUoH5uRMFL5+PJrUoJJWUHUs2H2Hk2HqD8i0aK8f4K9R4I8Opt1DQpl6Hf
w9aInitAee3d9+SUDJ1GRwdlzwQIiN7TQNrIEfjOjaEMJGDu3lhK3pVj+siJ
z9FZBMZpywvI4CgUFIt5yS0EsuvuKcm0aHCzGMn2Tp6Q5DK2k8Yx8DGlf5iV
e2J1bLIPWRwDyUo3VyLPEw+MrZhk924cH+4f3PLFE3pF6jODgwL+zPhdkiIh
evhPGwwtCvys4mSEPRbi2jK7MoM4DmEaaZfLVyG8m7XHDBnxMD94jt5BeP3f
25cIP7bsRkyXFypVfmZkYyJqvqt9LnzywvnRFAr5OxG9NZPXf9JFUDR0Thsu
J6HdRFt5IFiELfZTE4bxJEyMM6Tnk0Tgnl01bHBTIv1qr24hWwTmbOBLg1oJ
ae3DptZi0f+/nUo8H3hVONAqwh9Dojog
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#5"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljnss1AEAx3/382YKCculizt5HNedu1yo++b9OJdwnldx8zg1d3qyoa4k
RZthWfPKqrXSk9BWbW5FnR5TJiWlafS6o1jrRfeL+W7fff77fr5r5ar4bJIg
CJ+FLjKTJ13vddlNlDe7ndJyHUTRxWUcsYYEIdbuXh30Q9S6ivOOqbFD7ONQ
/bZMIzQWNp1zY9Bx65B9S/mEFWK+GvNtNa7o3EBmW723hfbM3XqbgnXISFPa
VKlXIjxi75/lDDbaor5f/TLmBMagaqeZhoezy+lvsqZcsNPziY2ZkwD5DyuZ
yiEGWtTu900L/NE9enfSke4K5wW9KSMIKs/qZ7Z7mEg7Lhw2KdqM3y9qHHqO
sPB0uv8BqQBYrexpZpk7rMJZB0hNMBQ+LlW/ZB5omxmMJfUhcJkUlhz190R0
s9qddArD6X10laWZF078GH1FK4jAbImiO+iENzxaT96kNUXC8tNPQWwgG49i
/E/StFEYKXfK9f7Ihun52gAaQ4z5qZzpQpYvLkqwgiaORXpVRczbO74I+zul
I4okyH9xdnw+ioP7ly5ICEUc1rXpiGLv9SAWo4lH0bfC2uxVXDx/maSnpAlg
WqtT2+K4aL1y7TWlS4BLX7Jw/hgXouT0dspRis8WpBHnMxfLfDqaqWtSRM5a
54gceRgjLSqpkCTMxHGc74XycOh6t5xSJYMT/p2IauRBcsx6K2WSgurgxvjS
Xh5Wp2UFUo0pGK/p35Wj5+GeiZ099SgV9cpeVZ3QD3Oy/D7DGhmGy8e7Bh74
4TGvt93QJYPdGnaZx4QfGsydWwwx26FmlUgajPgI6NQeNBTuQKK1Q+m0iL+0
l5sBn9sHlWE3+LhQsMmS6siAuVSYl9TPx6lRBUH9y0Bi1lZ9zwc+ZO09ekNd
JkL2zjG7VggQStd9MIxlYplOpxB7C8CucBgxeMrRvpFMTwgWwH52y4Bhvxy0
lhnHgRTB0t8eOYyHkg73KgX4D8uYLFs=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#6"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljn1QiwEAxrdd376WlaXC1EqlWta+3vnYUyS2GhdvkVGbqIusRgl3qeOQ
2/n+imqd4kqoUP2hu6baWYa6SIgc7lxntbvkzhm9L85z99zvv+f3LNTpU3aw
GAxG1N/+o1ZIxkQ0BCviO94SMpW/QnnoiCDJzEJWwktrNf1DUeMveM83z8ZU
Sd2CaSx3XNtfeT2YFwim2WEpO8eG6quLyNscBOJU7bv5cb6wXnl4iZ2/CBNk
t63z8lysTjT8nMWLRODA+EiHaR54A/oMd7MQFUkfNYcLgpARbmO7+4nRyJV5
NfnyUV0a2uWWL4Vy5336uSkEAX/1brxlsJtOX2Dqw5B+TPbKtXgFVtwQKen2
cDx19HazcoCgi4pHg44ITFsdUsgyx8PE1Hh3Lo7CrYmBZNbYSlBD0Vy1KBrK
qtJQll8C+Lmive0CAU58Hx5i5ifiKXm7IrcsBmE15c3MyjVo6HZG+Dli8Fgl
LWda14ITkRPyjlwCt9pzciYvCR+/iOvHuULcVIPDTEpG8/Yi32cGIRKc43ZG
sRry5xz+aK8QXfV1akbOegTYyKL2vFgw/sWcgiNOSjv3rAj9g6ljNLkBxfLd
3PQXItQ03nlN2zcgd09Gq4IjhiJtSwvNJcFTetsLjWLMjLpXRd8h4Uhoy6It
YoywPE/SK1ORfdD22TQlRsndNh2tT4PRt0lyNFsC9dEZ62jXTbiw2GqYrJBg
XnrWUvraJiR6qsz9TyTocJ3tQz/eDDJSvm1+mBS/NHkWaoEGPmH343oHpHgi
7GmhWjWYThryCp1SXPUIqKZUW3GIn1LgsVAG+QNrEbV/G4ajzxjYu2T/97Iz
YRnyHrdMylCXv9yLvpeJjuWX42wcAsbhHAY9lYm+jROJLrEENC2dY9R5LQ6+
X0oI9ARWBdo/USNaCNjGUIGRQOTxOW+ocB1KvFIGS+oJ+HyL66P26RCr1B7g
9xD//3bqYJga/R3ygcAfTAcxjw==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#7"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljnss1AEAx393HNZjhLybk9fd5Xl3jqjuW3kURx6Ti4u7W4aWXA+5ZaKx
0mMjlmvkmSmP2pFSKBeVC72ENKGlf4oKWQ/N7xfru333+e/7+drJ0yIT6QRB
cJa7Qhk32oNTby9U3f685deQsTA4M9ddpKFj0mWcUyKdE1ZZuY87aIxBH2Xl
5A4RCPmiy1+n2YjqNmXGRIMhtFc6SowUzlB9aGy332yCwKCjfwyZLrhgpxLG
HTIDczAtQV/Dhfgye+leuA0S2P1G+hZeILU/looNbFGR49Stp/DGQpN/QfsL
JqyXdXrMLXiu9DjI4dsj9ozPCEO5DaWMnnhZhAMGvj3roScDT3UPF1+SOWJ1
oGM6XbMDnaqp60HxzmiYGwylz+xE2kh1f5SIheDyHCe6RQDED8crUzzYyF8Y
e0tTBIEfWUZYjnPAqjqnpl3dBUu7pMreuk3oDfE+R9PuxsnI9JSmZBfoXSvy
pTFFqPPzFQ2PuKIuDCY0USgKQu5lT+W6IWDx6zShDEPNwPn8Bxx3dN+oDSOS
w0F7r1YU8DxArEQTCV+Wm51PhCdeDe+doaKjkB08mTVf5Imqxpuj1HQUhvJE
oeWDnhDGxDVT5tGQDHRmOYi4OHXrrpxKi4G9+H5OKIeHsLy1eyiGGFk60aen
9/OwIfaAH1UmxnfXcJllIQ+dDGNTqncfOn8bl0tnefgrSX1C2krAshpdNK3h
o4/7uJm8I8FYOjNG3c9HqYF1BRmyH9rE0jYs8OHbqj1BZsSjReeTOmmH1/+9
JCnaY1Mde994oVaxdRXVIsWR+mwd/Z9euDiWTFBLUij77mzMNhdA0tw1QxbL
YNB2bIQrFsDfZvojOSEDa80j/cwMAVzOmr0j2XIYFM52mJYIYDq//SV5XI6s
9XwVo1Xw/2+XHEWPHYmo1wL8A4m5HlQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#8"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljntQywEAx38b1ZRHkcmYVpSWZWtP5rEva63WNiwVGWmFed26HprHJaeT
5DjpnPO6kA5dsckjuTYS87qS0+NSd7qco+F0OWr8fnK+d9/7/vG5+94nxGQx
bKITBBE92n+bLkwSRF6brcgttg5PiGcrNHsP8rVOOpZ0V3E8hhFFBYvfM8c5
GfW/tzZq+hk4m3/u0mzOTKQGt4dW1wUg4fNYcYAzFEHKah4rhwnX6YZT/llz
YXPP2z/sYCFWnT08icODf+gte+H1WejbE1jrYxbApblyvCo4BJw2S5qPU4hm
qOR5j0ORxn3h7xMkwccbjUXsuDm4UBj+yDtLhpYMozyzNgzvOg7keLsWwn5b
ufTASDhmjOp5cxYD69uNC/gRSD20oN3LuhS6Y4N+X/RcvPz6rIluBsbc7Ymx
r4uEX2xYHt25HLlTS1OylTxc/96mo7uVsNVy75lDoqA5XxhOD1LB19q6etdg
FA4PdXfQstRoYjYFTc/mI6Ki5CbtXBzatP1hygABnibISmiueGRomZL3mQJ4
Xy6T0zhacFk5sTZKgCo9ptC0OmyOGD+0Tx0N1ciXAcKqx6lAzY4PpdF4dLVS
T5hXYtuhqPn5fkKUFXjkBLkSx1XNTxhqIdJXG+YS5avgu3aon1EoBPEvTgMm
yiIdPz8L0fo22U0lJcIy5bWTzxahorqmkxpIBD/Pd+9WnQiKlHU2aloSutwn
PMlXRZgYZT9P1SQhrbuvXvFGhF76uCOUMhmTGjqLy3+LUFB7x0RZUtB1mhXf
qRFDXzRhBeW1Bq8836xfLWKwUzMXUWfXYLeHm+M4KcYDr8mB1NO1KKkv2NzW
IYbHuLOZDDaiD8zsuEQJngsf28jbRrAzLj58ZpHgDGPGBTJhPWR36+SWUgnk
da5dZP4GfMovX6xzSv7/bdmIK5bLNaoQKSqzlvhS9o3Y0fDrxzuZFEe7zQT1
Z5TH+jzs1ElhtDnc5Ml0mBu3a5lWKWJmDvSRvemoVOt3ZxyVglfM7CK5JtSw
DeN5FVIEDi5rIXNN8IgVjLxb0v++DhPuC8YJlE+k+Au7XUq1
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#9"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljnlIkwEAxbcPp6YdXuXUzOXZUlOXc5vns3kfU4w1U1dzlUkHG6GdEpJl
WmKxwvvKxNQo8+pAoWXJ1OxStGQ4MpEoD6gM59H3lfTg8fvv/d52uSLpCEGj
0Tz/dY3pHLH3zmanEP/um65Vn21DYi7kecWpCVxxTXKaztGH1Nl6TTirLaBh
dkuUSiNUnqmqd2JtxQG7nPIKrRlivxv4mqsdESxkOkSXbkZ/WXeJmdINC7b2
O80WbRAReWppE8sDH8pDuwjGNrCGFQeN1BxkuYf9PtHoiIPs12ZGTC70wVpd
SowzanJdew2VPFgJ9TWXRlxg909vyAqE6nHodVbtDqTk88cYZ4MxVNyh65hm
Y2h+4CWRCTTMZdS8s3GHaYRLNqHeA/FGsrA40RMtP4bjiVkhfvPZuj7xLsRU
57oSzHCMv7VffRLvhYIF7Ue6MhKjYyqDkSJv7KgrfESvikK30CGiZdEbmlhe
Ib0/GvXrLbxuS31geFflT2fFYchytnTOjoNGESzpcfEYlcbN/MjiIHx5boZ2
VoT9ppPmvoMc9DY1iGiZibBUmDxLPbYbtLWok2D9IondlO+L96P7ZinxXgj1
jAUfjS/q7j/4RM3sxflfzF8ZDC5CJKltlLUY7qqlQwkXuNjo2V5NPRCjpH3w
a0AHFzpi3TVKuA9lAwGsiG9cXHz4WE4pJPjoN/HHPNEPossbEihGMsIzewgq
1w/2KYcDqMpkONxvfSp75IcehoUVpdkPRuDxgUETHlbSTvaRDmnQlK9OLbfy
MMh51UZ2paH4UNEzyRgPFcZ2NWSsFG8mliV3Vnjw7+w/TZ45gLdR+p9uQv7/
vaMyENwgF3sNHw3KIBOqXYb8gs5aapqPIm0mjfojw3QrXWdrIEBa2/NZ8lY6
pCorY5tgAcK2znwhdemolBWo16UI4HF1yzjJliNQ6jgpyhbA6mfoOzJLDsam
qbz5G4L/f5/LEXav4tx8swB/AZE0NnM=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#10"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljn0wkwEAxrdXG32SFLHOaiXh0CxzJI9tb/KRb021si2Vu65tpXBXETkZ
lVAo0/ku8hFHf8TVzueou1JXKaev61QbScc5uvbG9dw99/vv+T0b5crIowSN
RnNe6CJl3Bh3pzqO36Q5p1thwvELOnfJLURLwMX0s9g5nY5yW7fRzVpLjDTX
NPfoLVCarKnksFmgJs/rI6/aIFi/hLdauwnfNSOape320JV0FFmotiLQsywv
35OD3QGn58zZLijmxU50xTmA/VIZZ6rlIq15cEjj5IK4bU8tTG12YL/z9FjF
K1fcuejQxVTxkRXmZBLZ4A67BT2TvRPR6Z3tnTQPHMjyesNI2YUk9fyA6Voe
nv0c6CYSgAvfhhJYrB1YvnvLWUIrwLEh63Qw+aifermXGBcimlOrMOj5CCq7
6EDYkHjgoY4o7fVC9vTIW7oqANuzK9fnxnnDsVz9gK7Zg3V0dYfe3gf9wXw1
XRcIRuCYIn/YB8yqAm86OwSb3xcMXeD5ojYUa+gheyGqcHxUMOwLcn7CQEsJ
RWbhbNe1pF3oulcdSksIx6mIX49zK/xAW4w2Eo+zZYy+UeDF633jVEwUZqIH
dal2/ii/3zhMGaIw1R0v8xL7w098sIWyjoGt82XXVQP+SG16KKeUYhQ3Kqtu
lggQmrkyjGLEQmjte71VJ8CGA/E+VGksijJ2NilmBehkWFpR/fth1sdVUeFC
/JGc7DXaS/Dmk4QzPSPEILenxdguwYuwQG4GS4TbZnZ3jMGHkEi437IUiODd
pksyJh9GxBSRL80R/d87LkW+LqOs0oJEtcp3GdUqBbXiRLmXO4krIwk06q8U
cz/qPSzDSEhanowbC2VIa6garMshIWIZvhg/yPCjJW868S4Jl8vr3hm3yWG4
cd7kdjcJq9/+z41n5JAqbY9s/Ej+//tEjravNQLzeRL/ALZeKpM=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#11"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljltMkgEAhYEFlua0NGWBE0INb5gooqBwung3appiigmUS9sM5vKyNHXZ
ypYPZs0sDa2sJMvCyJcuENU0bd1maTld07ZaYi2nLY3+P11nO/vezne4Wl16
AY1CoQQvdZkaYeamICNPfqCtAErSW55SWReWZqVBqZ6Xslm/5B3rw8b9rGtR
UJ/cwlPT0VredpnHYUPToOGOrnJD6rcVkWusG3BTZvwY6uqJgZb7ze76jfDu
fWR/uIOJhMSSBTdOCDii7gVzOhuct7p8J6sQHZajhboRLvIDh9ydmCIYotyY
zfU8GGoDbAy9GF8c900+PH+wlvQMTizOrrshXs3iI+d49Ht6hQzFhmpGUWUg
Xnx//oRWCNiLkvexh4LgkuBfSrNuQSlRkuUcF4obP99up9m3gudm+JqgESDl
Ym0AjRkPmYBeP1URhvq5sRGqPhFd/BrHbdsm8DtO3qG2JaG9jpI6HBeO/lTx
SepAMvh+/s4e5nAwrjRJqJw0qBR+tWSTENcU8KCmbUdLTc+pMIcQ8Ysz05QK
Ba6bzbdrNBGwdXUqKIU74SKvupPBjQRlOdZ0nPMZxsvDIrx+l2UnMzPg7Ps4
mTsoQkf3rVFyOgP2QEveV68oyJW5JtI7E1dz5nelGaNQ3dOnJXVKiBSnq3LN
YiiOue4g6dnw6N/IUMyK4ZOzT0q2ZiNysi/viCAaD+hrPcn+3XitZ+SOX4rG
H1XxM8JXhdE3wcPlZTEYFD41EfdUaLQbEwVdMbiwkmUgUvMwkD7R2T4aA4l5
oIwo34PGkCHTlEjyf2+/Gi0fxz77TUnQqY9zJnvV+La3M2LaRYqGsUIK+VcN
1idHsyVCCpXJYifOaNBuS6q6WyvFNvb0JDGhQfcPl7rJq1KEnPD6QARqYV08
2CsblMJzdvMr4pAW64K9f7+ckf7/a9FC1jQ0d949Fv8AZiIk/Q==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#12"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAYTJVMCqpIz+Ha/dsVRseP0p7gy9M
wAJAnjvtuzXD+z+gGi/dJMASQJnd/awT3wpAS+oENBHAIkBFlvy0XkAZQMiY
u5YQcCdAstfdGw6kHkBGR3L5DyAsQEYb1BWo3CFAINJvXwfAMkCynCTS7Ygm
QF8pyxAHGDVAlvbMQRKwKECegCbCBnA3QB04hSMVuypAGy/dJAYgPEDMc4yZ
6IQuQFqGONYFeD5AvFY1AKsjMEDM7snDAmhAQMnFp4Fz+jBAC0YldQLAQkAb
cBMWf4syQKrx0k0C7ENAI1uVWf5GM0BKnYAmAhhFQH5GRQ2L+jNAiPTb1wFw
R0DQM90qvUs1QCigibABnEhASx0CDULqNUDHSzeJAchJQKC+ij6VgjZABqOS
OgEgTEDJcyxYDKI3QKZOQBMBTE1AZKp4otIpOEBF+u3rAHhOQD0X4TKtrDhA
wqikTgBoUEDskFCAp6Q5QAAAAAAAwFJAsKQwUfljO0DQ1Vbs/1VTQD1hHtrP
yjtAoKut2P/rU0B3tWMOZS48QD9XW7H/F1VACThY4mTsPEB+rrZi/29XQMFa
SOxvRz5AToQNT/8FWEBWJ0JbBJg+QB1aZDv/m1hApElaNVXmPkC8BRIU/8dZ
QOcirTOLfD9A+1xtxf4fXEDMimhRzkhAQMoyxLH+tVxAXWU5fTlpQECaCBue
/ktdQCa56QrTiEBAOrTIdv53XkC35thHsMVAQLwFEhT/Z2BAlpoKzdc2QUCk
cD0K/7JgQNZVMYp9UUFAjNtoAP/9YECLebHJhmtBQFyxv+z+k2FAq/4s3tid
QUBEHOvi/t5hQMwR8qQrtkFALIcW2f4pYkA6CTLY9c1BQBTyQc/+dGJAbhLE
6TvlQUD7XG3F/r9iQOOYpxoC/EFA190iMw==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#13"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj31QkwUAxrflRiIm0DRCaBv7ePcSie1CidA9G/IRQ0BwSGO6DzSmpzFI
B8ll6yBxXHacIuGGsISoUCiQqWddexVTBvgRVyCfdZz/8KlYnpLn+6bnc/fc
78/n94jMhVm7OCwWK+ZZn9Ok0K6N/EGsbCMEbTqvSJlaVh6dRnFwIMg22G9/
qnSHRo9LqGAoBgK6vpX4w1VSf1osDMPO/r2xOmcQNNNL3gmiIqA5K/kxVrMS
PXU/1wZaCVxyXBOczwtBUnLx4gphFNS7iXDbQigmD/Lb/SxrUfvXxpFoIhzC
gUKDH6VA9Y7WRUOgAAayL9AvJAY2Y16Bb7sQDXbZFZ51Pe6/2V8+/7oIY0Of
f8zreReGG273NCXC6md6PGE8XNqR+2/kREB3OHaQW7oRj/nqCxvGItA/7+vm
WIA90e36/Vox9jpL6jk1KngWv5p3dIuxLEl6gEOpkdj19YmHhAStCwObObMJ
2KVuMN0rlyD1lF3GCUlE1lTpkk/vSDCVsoZhb0rC20fLastkUhz5d3SIbU3G
ilW9kd99JIXc7fiJXZ8C67XTlLtDiuua9Q52z/uw8xyPHtyTgtd0LI4tTAP/
4oKnyChDSzpeZadtRma8YtZ0XIbE/+ZmWKXpaGwOrF3XLcOV75vTWZZMjNzs
vdQYSuDYoSdxLDoT1dxbCa1qAqatWQSrZgs8shPFlRYCrOehsnCjYGvMh+0E
bv+ZM8tos3Hki0dR524ScJ9pu8PMZONueN83e+YIKLfldTCvafG4ppiqksnx
yludp5g2LYKZ/F6pSo4JztIqJiEH1ZdVLdU6OQ61nzczhduQ0nVxWFwlR3rF
8gyGm4tPxhMEhW45wnU732NcuehzZlhue+T4hRvMZ65/gMo15oyACTme6Pf9
Rgv0qBgbenhOSqJXcbWD9uhxId87wFlHwvny6gZasx1nU31NvyaSiOvqsdEl
O/D34WmZK5+Ef5Ugn15ugPP3xZO+IhLDBlsG3WTAvnhVnf0z8sVegRFSb8Wy
xpMkmq0b/JlOI4pcc9ygFhJfjlpYzFMj6nYfbRZ2ktB3eGfp4yaELZ0+GOkj
sSlsZpKeMCE296XJqD9IRFWuGqZJM0bvUtrxCRL8B6pb9H4zGFGAXjlFvvjj
NSP76mByzj8k/gdVrm6G
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#14"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj31QkwUAxt/N2JAORCRAUBmb7PN9Q3d8GDl4GGMi4EBkKjQYG+zYWTYO
Y5iQB+hhUOmdoCsYC5I+FIVBmnUW7JBiBH0IZzAV4ry61KHdOLtM6n3T87l7
7vfn83tijJZ8E5sgiIQnfUqDXLtJelaQOuzfuIV+IErNqj0Sl+Niw7Kz+GFd
2Qp0RcbNbXSFQF+rvez0BKOjxv6RgLcOc38Y5tsKw5B977n41S4+jL9/sNZ4
KRLu96+cDq4UIaVZmXMgdQPU26r+WcUj8Z5Wnew9zcPtQ6F9XPMmpEwQGJ6K
AW/Koue65LDWBqWpFvjQSyaCuREJOGHLa/rbLYCjXjjCqUyCf+/6wLutG3Fr
puEAx/0Suu2TiVZ1LKKe6HF4W7H819Cj0d9iUdS05Re/gynIXKowhVcJMflg
/CrbDPgKVU4/nxCvtdfY2W1p6J7eV/BpmQjPq2Or2S4lOrgZU84JEc75pnaw
F9ORvq/pnWapGFmd9UJ2RAbOWj0hugYx7ma+yLBUajBmVyP/mhhvP7w5w6rc
htcfp/n6IyUQdzU7WfZMJAY4Ri6XSDCWndTMcm9HQ36QabpTAs6Zk8ksXg7e
cpzTqFZJ8YkGa1g5O1BSfSPQopQi4/F9L3FQA5Oi/FpxlRQjn/VoCHMeWNpG
V9+4FCcPLycTdB7W9DszT/ikMBTki4i2nZg9Nb8kD5eBeBpXPgZZ47mHdDL8
fH33IqPdhXtHf2jcXydDV++FWca7C3xb18rRdhlS97wywIRr0WuyM6unZQii
BjuZC1rUKbcuKu7LMM9e2cKk78bHGxImEjkkDvd9YWQse/Dmd59HLcST0BwN
zGX89sItl9guZpFYX1T+MtOxF90zN6odehJf+4WEMmOFuDPEDfU2kVjW7f+W
jtYhyZH+4VeTJL6Xjw7Ql3T4V5hkabtFot0/ykFnF2OoYUXRnJdE8kW3la4p
waMjP/46408hoCW6jA7U44XSGL0tjIJHb82lz+hhjts8uyCgnu1VlKL7im1A
rKDQU6kIYAZLofwzvmfzdgrv3jQTzH+liCqau+opoKAbGF6kWw0oj/lGsfZV
Cqp13tv0vAER0efHvqymQB4L89ASIyqEgjvcegqhS2k/0W8Y0do/yw9ooZ79
GTbi+PnrYyOtFP4HpshqDQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#15"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtj31QkwUAxt+tNhiefLmNuTH2vqAiRECkIMPag+CG8jHdHKAtxqbUrgKm
0cbHBZjyGeo1P1oIxLUdKAgFJ16ecuywcoF3eKIiCdxl15UD+zAvFeJ906vn
7rnfn8/voUylmiI2QRAbn/U5jQm6+OizEYqZObH6qVOg2F51KC7LzUb2bf9b
J9UPFZ3iuNk17mB8XDa8nFJG4LSt7YsIMhSqLfkTQ2YuMr0vbghyh6OcPKVN
0K+Ax3HpVKAlEi7eTEBncwCUqgNPA8gY7JVl1+w8FoR7lfx+H3M8Pu0K8QxK
VoG8UWrwcScgQns4VWLlwxA1Hugj2gjqTkVPSbcAHbXrRrmWJGgF78YfvyDE
zNTB97meZDgdJTVPzoRA8kyPS27GzXMt3L8/EmFP/abbnPLXwa1/lfTPWI1r
v31/hW0GeOl918KWVuO9Vlsb+0QqLn7Jc9Z1iLFCufYDtnsLRovPfy3fIEHP
nzey2QtpmJYt+/08LMH29tp1bNFW+KYWxXg3h+J+RizDSlfCMWTfXzkYisZH
d6dYFhXWdglqWmVSrO9s+orVloG62e9+iK6T4mpmUhPLsw036+8/fvCTFFyn
Xc4is3DAPpXYdiwMXTlYxcrKRu/B9tz22TBsXXwwT5TnwK16RfRCpAyjZ1w5
hHkHmnSV0oY+GezVS3KC3gE76+yCel4G4y5NJHFiJyzCaJc3mATxPG4NfrQq
PvHdRuL6rdwFRqdFv8pGi00kOnv77jDzWpwr8x1brCChyHtjgAnRoebkPwXW
LhL+Lw+2M306dGvExUmXSMyxec1MWi68jfvGAydIVPdfMDGleUiJaDmqfEQi
5/BKNcPJhzK2mzPMoSDdsy+FOZ0P6PfH1gopXOYE85mru+G60hskTKSwpC/+
lpbpseax9Y/yEgpjCd8M0EN6pFU783dVUWj1lXTQmW/iuvOt5eEGCvLzHitt
K8DkJseY5nMKfs2yvfRKAxxVce809lCYNljVtNOA5PXx6cah//feLkTgZ38J
/McouCyv+TGDheg9sijyTlJouWsmmOVC/KorslXMUtAPjCzQx404FDU+OfI7
hfTQ+Xv0nBHTiXXiD59QiGkQTtNRJky+lKdbJMLBf5g6QZeZkOxTIJfzwv/7
M2LCLyr+bkVQOP4F8aZg6g==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#16"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj3lMUwcAxl8LLQMCck3OStv3Hogrgs0MwsR+5SgoUCg3WmypGsm00ihQ
1IRweOGWuCEqStWmNURcQMucmKBS8aAqQcR4cGbBbAuCGhWcU3lvGr/ky+/P
7/eJdGXZm7gEQSz/3C8skeZFL2kjZVStNd+aGyRbs7s+Kt3OhdMvTPKM7J3M
HBQ1Ttl9MF9ZsOyv905oMZospDAEU+62elWkO9KeO3/vbReD9vBcIm3ygqO5
+6iXIRyXn9XYRgN9oUjZ/t8CoQQNt8PdeuXfYnKXX4dLaTTcFwc9frXIH8Kh
Mo2LXQq5hGds6QmAJuKel0vAcix4mt18bGkQTtWE9fINMdh1uj0jpTwYY09q
d/Adsdid6PJd0rEQBH/W4wtXQlbdNffAJMDafSse86pW4cc/7z+PbliE/pd3
bnBLgX6xf9GwJhRbTxhN3CY5CnmGGw+9hXBX0BVcewLMD+zy6i1CnHs9lMGd
ScTvind101eFWHOyJowbkIx/GvfjrasIU6lLWU6SApbNd96nZ4lwYHb0CceQ
Aku8/sqRX0VYbG64wDGlYtNg7O3cARH60mIaOI7VcFUN0SxfDL61MY4jTIe2
+G25WS9GqxK+nPQMSAaaGleZxEj+8GKaqFJCoh54E+gQo/fsGSVRmoW+jbpD
FQEkGqs/xhFMFnL552PU8SRKcrPDiSYVUlX680otCeJL7NkYcb767wszicFH
+TNsXg6691o+jV0jYf6t/Sk7nYNLkTtDikdJyArW2Vj/PAgWhidUeFHwjOw8
ybbnAXP3ZmMjKExwXQ+yifl45LAcnwKF6o5LOrasAHv046pMPQXlHo9MllcI
abCzmaqjIFi78Qe2pRCz/YrT5FEKV3g+fmxfEeZu7Swe7KbwUa2/xYSqUXH2
ZocnS+Gu9KaN+UONLT4X4zd40jjxTfApJq0Y2w51vYoS0Ii76KhkjOtR193m
lBFLw+1g6AbGQ4PCqgtTbQoaw5rKTMaqQVrgEY/mHPrr3mYtOieK/l65lcYZ
Q7wb26nF68T5FfNGGj+PlhLsvBa+op+8dfU01LaeGeZwCSYDn+2LOE4jKWR6
kpkoQa0guvWwlYZk/8JhJkKH1BbvIls7Db838vtMuQ75IyNje7vor396dAgb
b4XfdRr/A7qPZIc=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#17"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj2tMUwcAhe/tpLA6GI+KDKq09nl7KyX4wuLGEXmoxVaBAiJaWkXq5izO
8YgmrLr5Ipq4yhoCyJrRuA2Gocz5QzR0ILbqCFuZY8TOZG66VepiZWZsyL3T
eJKT7+f5jshsLarmEASx4nlf0JRhSFd+Kc4WtCqWPusSZW889KG60MPBgRK7
OKt7LtuZrP5F4olHMCdwkH+Mh/aGjs/EQgFWPz504pW5OGgfzlse51kCx7Jk
qf23BfC1Djhia+VI21t2tId6A/kF7/37ulCFkURqu2A6BfcO8i9EWtJREhi9
6d26GEK/1RjpyUCCKsm0L1MII3UrNjJpBUaTYx5YxSJ02mRD3NpV6M+P7bFN
ixCYOHyA61sNV6TewOldgpTnelzhGtSH+vzWYjEqjmX+FNH4FhL26Uc+CYrx
3V83hjkWgM0Uygb2S7C3raGD07IWtwfDvMFHEszPl9ZxPDn4oCM4mmaUojvs
38QJrcPYce5IqVeKjedsMk5SHq5u+ThKL5chuD6NJXPzYeSdLY6wyXDi7zsT
ZG0B2NlTA7l+GRTOk31kx3o8Dtd7BxbL4dWuOkn6NmBSw99A7paD22XXkMJC
yB1NUdMP5DivQwJZuAk3/tQF6kQK5P33aIpo1GHleTfTWK7A0BcuHWHZjLdj
juxRX1XA3jSrIZjNuG7ZfaR6SgFTSZGcaNkC6SX7sHghBeJFPEWYWWl8OlND
4fvbpSHWUIzQr+Opu05TcPb0/sxOFeN0/NB80k0hu2ybm11owGjFjh/10xRi
lvafY3sNiLp/q1wTr8RdzqvN7LpSQEKe8amVaLpwycxay+AIq9MUNUroPorW
sxHl8LskC0SHlVhUsSuLbS+HZv/sa9FtSlyJiOez3q3o9CU+fOZTYrby3REm
tRJlGaXJFwU0bmZcczPfVIJsG9d51TTaolI6Ge129PWGbek5NDQXffVMww44
89rV8moavObUnUy0EX7izJ5rdTQmjfV6psuI1qxPl00cpV/u1VRB//u8zxtc
NFy1b/LY/iq0XP5hZ9zXNE7dsRDsXBXiCpr/yPyWRqV7MMScNSFUqHXkBWjk
CqbuMXdNGNO2qJYHaaiOJ04ylBlPZrLeGX5Kg/9k7RjzvhnONV+Z/iFVL/8M
mhHqXnR/PFqF/wG9tmT8
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#18"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj31QkwUAxt+t+EjDjW3CgH28iaIWxeAkYaB7QD4McMBwCLraB3rtrojd
SiG4mwj5AYJHfHglmzeV5COwwULy9I4FeL4gNmKamuQfU+tkhK7LruR83/R8
7p77/fn8njcMFao9bIIgEp/3BfUJatmbvdEKzynGTz3mKXJq6uPyXGxkptSH
Bq15rLBHxv222sVDwmGO7mrcM0VnpfV0NCkCleYg+/99Bbnzr24Ida2CoLiz
ubUmGNRXF49zTWsx86PtWIrqdWRlm//jkLEwXK/urbNz4K0WnAsyyvBTqq+0
GqEgZyu0Qa4EeDyzD2bredCuv8oNEibi4fKQlsDTfJysjRkLNG1E7CHrjVWn
BJi7eeDTQCoZVPD4vScHVyLquV4gmYqnk9yfNdvDsPNQ0i8BVZvhcffN13DC
Mb04Oc42Aobm7sU/LoTj4xOVVnZ7GqbDtMMTaiGWZ63Zy3alI798d+HcfSH6
/LPb2Atb4D/6zQWHMQI5ttoYtjATlk3xpgZvBB5ufYdhZWThWj/zlqUoEkf+
vnOTZcqG2JOcvv9SJNbZGxws61a4ne+WaCRRuJK7sYFFvYf7TXnjk59HIfBM
q5xF5uGWP+LsiFSEs0rwWXnbsBRvsaR8JELm0z99RJUSQ0ljF3cNiTDW06Uk
jAUYdauG720Qo9WyJCfoAizu6fnVZxJDv121lmgvRLSwf8rTKwbxIi4V0v/p
7pPxJZi5UbzAqIvQ7eHzVmRIYP924BbjK4J2aW+zzSyBYseuQSZcjcL2mRjz
pAQr3h6yMQNqOHUd8bRfgrvs1xqZLcVIlzX4poRSWM6dNzAVO1CcelDZoZdC
+UVIPhNQAnlL5PREvRTinbtTmM4SrMx9xP+6S4pLATwBc6UUSbXXD+z3SrGk
Kb9MSzUon7/sbFlHYiphYpAe1qAu8zurLJHEieCok3Tu+/i9ijenTyMh/57a
R1d+AII7WHqshMSyRmkZHaJF6peNjrYyEre1+/LpM1pQTyjb5k/Il3sf6iDP
7uQfryPRZdq0jBnSoeOBuSyniUTTHSPBPNPByF3tdXaQ0AyOLtBteozoJo46
u0lkiHxe+q4eZZzGa/kOErGHw27T6w1oSz5vHviBhOCvNDf9mQGPCnpEbhf5
8s+oAfb45uwRisT/AIRwPA==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#19"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj31QkwUAxt9NGLhusoD4hg22vXshFUSBwnIPOhBlGxMYMxqMzUq60E0U
phg7Qs+QGRfiVwqGiDuUk5OlpmfpAjmmRBlIgxPwWnRXgZCd5hXwvun53D33
+/P5PdFGU877bIIgkp73BQ2JmoS48yIZ636Oo3YhXLZx7754hZMNy9Mhdf3E
M1lLWPy42OkPpWJwsemoN05ZmlpFwgjYPQ6veRsPWX96rXrVGYPSxMqgvZH+
cJ24cYxvliLWUv/59aeByFhf9q+fcCmE2hRf8sNgeCoDO31KEiBqmN2ksYVC
OGjS+zgTETBt4Yd+FA59bD/fJyQJITp11HhAJE5Xk90ccwomi5PUjfVRGHN/
spPjehO1N+/syfcIEP5cjyN8C7NJvw5srxOi4MAbP3vvXoO8gh2lW1+Lxvcz
d3rYJYBneJGAboxG6UlLE/tIGjZwVVaXTwxeyZCUs51rMdZn6w0ti8GFx4NK
9vQ6WNb2j/ndj8HG5mqSHZIO7Zh7W/NyEf7IXM6w5Bn4SzV7u6FGhNonD9ws
83q0zgf7fnlPBKrl4CVWUybuziTH6UPF6MtKOchybUA1WTapLRSDc/ZwKkuo
gP1h+YmvR8SwqxDAUihRZHg4N8GXIP2/R1PEbhXsy7jXetIl6G5vUxElaih3
BHFH7BIcts6lErQa5zi/dFqHJDDk5UiJI5uQZ/rdMbggAfEizhx0zkTKVypI
3BvOn2Y0uSiv+sH4mZlES8fFEWYqF9fi9nitaCQh077bxQRrIGv9dmX/EIkl
yxzNzEUNCsztpn8ek5hgL65j1uWj8kpP2PASKaydV42MSYvX89qiGLkUqv28
bMZ7M84IUGUqkiKy4L3VzKnN8OXJO8YrpPjG2z+Q6XsH1rDu2pk2KeZ023pp
gQ7brWdWpT+T4m7i7S76ig67jI5kPpfCSd/w03RWITqOHjieHEEh9bKrgrYU
QVeYIb66hgK3TrCF5umh2hefG5VNYVRfkU2f1cMdf26eKaJe7m0thvZ6TX9m
FYU289tcxlEMAUdQc8NG4dCDEoJZKEbDIdPkzS8o6LpuTdONBmg+cCfYLlOQ
R0x56AkDhga2xBZ+R2Hpp0GjdKwRytW9T34aoBD4d9qP9C4jVvAaPn40Sr38
c8uItHa/nV/9RuF/QzFmWw==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#20"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj2tMUwcAhe+9g3awqbyCOFAKpc97EUJGxG7KEbAwClUqCFSgDzU22wx1
iFQlBTN0tTH8KI0yXmM8DOo01Ok00Yym08jQDTUblNXKJm7ZRjGKQpjovdN4
kpPv5/lOgrFas5MiCCL9VV/TkFaSKj8lzNS3P+qy+xMy8w9+nlLgpuDYPib7
JYrN7H4vxZ/kjsAKi89dFAhFe11Hj1AQBzrvqwGpMgKqf4PeD3cn4ntn/4Vd
iMZw65XjYWYJ9tgul0e3roAy97P/lgkYRK4aJbL2xOHBgahzfFMq0hXmO6F/
rYLgbrWO706Dv2U/Od0kgE52M4wfkw5F8dSxM7UJ6GoUe3jmNbB9vHTb0/xE
3Bs/VMMbXovVWlFKeogQsa/0eIIP4fVW2Z5/K4T2SMZYsGU9rl201MSpk3Dr
0Y8/UCZA2CA6EphIwqdtdR2UcwNqXkgea8pFeEcpqqXcWbg9af3j4U8inH5y
t5AKZINnH6+dyxAjv7NRTMVsxBg309/TLsY/eas5MkeJ+YUG1eS8GLZnvnHS
nItm7875AyoJpN1HB8mOPNiezMZK2yS4oVpzlBz+CE3JJ4IOTUnA63UoSEEB
ev88bFhnkuKkGpFkQSF+vpLcXN8nxcbnM9OERQ1BltMl9EvhGehTE6bNuN7x
d9fvOTI4rIsKgt0Mqz/xcP1eGQzFGgnhLEJRWPhk89cyEK/j1kDk8sffeybD
7V+3BriSLdA4j9fujpWj+8xZLze9BSj8Jk8IOTJLt7m45SX4xHHJ2tAkx9Lk
853c2RLcKi0L1/fJcZ8KsXPZW/G0LEP8m0cO67nvjFx1KcQDxdq5RTnUTUs2
ccFlaG3tCR+KprFSu+MDrr0MI8xVX00qjavBEVHcjXIcXKgUT+ppLFbsvs7G
V+DOyeUv11+iMZJ2zcVerMAgufLFzAiNtrdju1hVJWJKLTdn/DQUF4b3sXVV
8Gpn6bcoBqH2+O3sEh0Kaf5jaSSDCd2+TWyvDlKin3ILmTd7u/T4suoyvzKb
QZ95XSh3Xg/SM2eq1jA45jMR3Es9shydvHcNDCpcQwG2xQDG0PJwoZ5BTtz0
A/a+AaNrE70aOwPmi+gJVmZEiMe3P/8Eg6jZDaPsXiOCcncsTPUyb/4MGZHc
3KgUDjL4HwMwabU=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#21"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtj2tMUwcAhW/voFBmBSpiBbTtfdDxcLBGYCLYo6VAeRQoloeipd0I7Alh
Kjg3hlG3gds0FA2xYHA4pyyAECQxGqn4AIRlRl0rUdhwbusAmY+x8dB7p9lO
cvL9PN9RWEoNRSRBEFHP+4JmlTEy9BStPvjbk91tc1J1yq49EWl2EtMCkXgo
ckbdHBAxytglcI6rcsxLX4KtovFrWh6EB0pp6FsiL6ROuK32tVMIG19qjnd4
Y6Dh3GGfMiX6PR2/OEwSJCaVz3nLw+GTsvxb2S4/3PvQr92jJBLz9K/3B/X+
kN8oNXnYVTg0vGV/tGsZTCFDPh7SKMxebP24JWs5jlYH9wnLYpAcrnWJrAG4
69z9gXBgDVxF3g09XYEIfK4nlMfB1/ClvftMEDZ9+rrDvXIdUtZ8khPQvALD
04OXyBJgZb7ohHr7Srx7pKKRrF8P3UeacleMDC8nsttJ+waY175/0zIhQ+uj
G+nklAbKKGteRpIcKU3VwaRUC2l68YTMKscfya/ygoRECKOXPDOOyPH5X3ec
grIkbIh+Ol0boMArzTWnBY3JuPAwhNTkKtCfGlMjGNAhLD76p4cHFBC21MUK
5GlwVzOSzr8VOKHHEkFaOnTtpzuKWQra+QeTRKUeVVSNf2EWhb6Tx/VESSaS
n3j9yR+jUFe1EEtwmfDZ2bBtUT8F80aDkqjPwtu2zdbgCQrEi9gNCGK/cUnD
aFz/MWeKN2ZjEUO1q3Q0mr9ru81PZmMmW+I5VkRDnbu5k19mRKbZok230Vi8
qquJbzPicUvevvhuGmOkqJbX5GD2vMdX0mEaVe09Fr40F/nvGF67NUtDv1ec
wbvnoTLC+fNNMYMVm95cy9vy0HhXPPRUweC8u8SP789HdQN3fSGJwULBe1c4
WQEcDHnWuZ/BNdXlTu5MAZrSWimDjcERz8CjXOoWqDSD4oRWBrHdAzu4iq1I
TZhrO3WVgVet7A1ObELkhX9+D7nFYMS0I4NrMUG0s7s3dvz/veJCKEJvs/Q8
g+Nl8V58VyFOWnuMbkIWX9wpIfhnhTh3qaO8xpdFQWfvFGc1o0s/2nFAySIh
aPIeN2ZG8Pf1uVIVi/DP/Ee4EAvqdG5uG+NY+D1e/wO3zYKK1eEz2kT2vz+9
FvTdH417lMHiX15bXdA=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#22"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtj31QkwUAxt9Nt/HhYJ/vKARnIDAPGs1xNCT28DXkQ1hT/NpwbCJih0EL
GWcJlpwglaJxXQ1YS70+6KCGkHWNXCACpSfgEeEU7jyP42OSGVwB9b7p1XP3
3O/P5/dsNJfpDjIJgoh70qc0KfJjN38Rpg64Ub3VxvRTZ71xUp7jZqKxWHf2
unJa7XhWfi/cLcBKzaY+xTOL6mZry4Uw6Xq0Kz8TTdavqrPn1ir57udgCC1N
tzwgMPjh9x/wyiPBHUnOyjizBpoMy3KgNBrHUy9Pae+wcP+YqINTEoupWu5Q
2x0OpKNlRo5bASLmO1tgqy+Msp95nKA49H2VqA+K9of9REQvuzweE3MrTlHj
Otwdf+t19qAKnoNJlx23uAh+oseWJiLlo7bZgEcB2HfqxV9YVUnwLHvGupYC
cWNhqI9ZAsi5BfV8Cw+lNmsLsykZ5tjDZyOnePDXbDrKdKegyDFSuzeVj7bf
R7czval4zRZ/vfNjPrJaT0Qwg9IhC/2tiFziY3bb8zQjTYMZr59VkyZA/aJn
nFGegbga++TsewJEOU5/zWjZhs2n6h40jgowkB1/mjGYCRyyz38rEIJ98XwC
Q5qDMlWEVVknxKe5EDJytkP5V3VTokuI9JWH80RVLir3z5xRLAjR+/mlXKJE
i3C9NnMuU4Tz1asJBKVFg/baQnCFCKadukii6WVEVfBYIS0iEE/j1uGoy2vZ
Mi3C8NguL52/A8UvZPaf8xHD8WX7r/T8DoQff/NVnUwM9W69k5bkY7FnneqV
YjECYjpb6fZ8+Minlx6/LcYk07eBTt2FT3rkA8l2Mao7vjHTZbthyHmUUjMi
Rm4tN49m7cEVl3O4cVaMkH1FW+nmPfhh5+36DoKEiyUQ0QN7MX2hSqaJJrFq
ONJPbTDgiqnbozxG4ifFNSfVbUBAmiqEfoeEzSfYTmUXoDehqz+mlURC12Al
Zd0PjjMlbLyHhF/DhgMU1wiX75E1hTdJTBgr86iLRvyYhO7Dd//fO1SIbKZt
i2SZxKXyl/zozkLMhPK9/WwJ3vWUEPQ/hRj48w+9v0gCg/Oql3rfhKnhheHS
GAnS1s/fpyZNaF47ceCcSoLoOnKCkpnRHmW5XZAugehx8i2qwoybGx+OjGkl
//25asZQT969v/US/AtBJ2Z7
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#23"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj3tMU3cAhW8bC5VZFKwWLW3vzwePBSh0Y0xG18OovC1IqVJkKxSVqlvo
ZCtuLsSJAXkYIsgUpAQVFEFh4JzJRrRiJxVxAj6QWTEyYhCQTHFLkHDvNJ7k
5PvzfIcYc1O2cSmKCn3Tt8xS6ILfP7tataumfr6KFari9xbKE21caPbLD3/k
eKFqWCl/tMbmiZ2W8Zni16zqeH7dydW0N+Kmc1LP3uAhYWLBhx62Vfhuusyf
b3WD49jvPy0x+6L4arw+pMMd0TG7ZxfTAbCTscPnRB4Y/V7Y5moKxmjIA8+7
tZ6gB3MNrjYF7o0nt+ifL4XB/+YSV69QxFheVThFy1C/z6fbxRyGFrkybTFZ
DufQj3kujnW4w5etCncXQfxGz4WOwD+i5orqv0VIL/r4Pm/Pp+jN6T9T1uiF
vukb17gmIKRm7X9PtSvwZW1+HfdIJKqnm1P/nVmB96LXfsu1fYaeyxNzJ4pW
ouXF4AbuVBQutv+ZWCIQI966z4frtR4V6Vd5/FIxnsUGsRx1NK6NQxgzL8bB
Vw+HOOYYbLWrnGqTN/waSn7m1MUi4klXpfOmN3oSwko4jjjs7fpL2ucngcup
ynAOnYhjlyz6DwYkOK3BUk7iBuxQXu/8TSLF+tfPJ6k9GuT1PJ25vE2K7uZG
DWVKhvNC+yLbMykqC+bCKSYZqi75hWwfGbJSU3ypIxsRpb/UcNcgA/U2thTY
AwN3Cntl6L+3aYrVadHEfxSXNCdDQ+v5B+ykFgMFrXley2ioNm/pYEU6fF3e
mnwdNNwDO63seR3yBH4jvjoaI9yFpWzUJmT/MBF02kSjoO1XI5u7GQNlYRzF
IRqaA4IklpeGAdwX6OtpSNK3fsIeT0OV/qC8v41GF89TyPbokWbfnz50i8Zc
xld/MLIMbBFnK5Q8gl6FvYO5mIGgbuO6xx4EtXxxPZPwOSRR4moPKUH4Lw4L
k/8FjhY1nVGGEriVyrIZgQE+hdTJSBAMGyxJzCkDXg5riyfiybu9nEwUuocE
RBgIGs1KN7YzEzVug7enTATlD00UO58J9eyd4JTdBBkdV6aYqizM3hqzxB4g
UHtPjjIjWRjTmoselxMEFC8fZvyNsKq3t4dVEwhfRt5mvjGibM1krdZK3v25
YsT2Q5F9oU0E/wPVXWpS
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#24"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj2tMUwcAhW8bKJPFiYi8GYU+7y0bpbNhMFgPYAF5VAfyXEdpO6Vmc+2U
hwpomSi2Gk2KGiYtQUWHIsaSwhZR6cBFnESMokhQmbjpJowxZ7Jh473TeJKT
7+f5TpTOmLeOTRCE/FVfUysrkFKneArq3dDgia8iFFm1O2Nz3GxMl54OUycs
KNpDY+/z3f6gxh4RlscctNbYj/G44biRUCaSVy5B9lOvFUvd0TgTvTvlVOEy
DLf0H/YziSC76FKPbAxEesamhSXcGPjdOt+9OTQE09sCzvoYpND/YHQPmcLA
vWnU+LhliA/6ryfEHAENec3PJ1gOzw79ee3aSLSZhYMcUzzSnhiLzLVc3Btv
2MwZTgC85I398VEIe6XH4Sbhi+aHdU8fRqF094d3vLd8jL67tYVNddEYmbs6
xDYAO67/EudYxMOXR2rs7IMpYCVJ66asPLydLqhiu1OR1Ljf1s/i4/TfN3PZ
s2m4uiJatd7IR5bDLGQHK4G4MsvjMT7+yHyfYa1MR2a3QhvxgQB7nk+Os0wZ
qLLHDYxYBRC3W86x7JmwZR2y2e8JcCU73sIaXgWvhCROJCkE57gtkcXNQeLc
199IXEKcVGEZKycXfWcqru35Rwjliz9niC0qKGU2Q1qsCIOdHSrCsAYLUqWD
sYtg2+5JJOg12ODT62wcFUG7Nk9EHPwEyiE9z8SIQLyOOw/M4Rh7crEYN24X
zjIF+fBfJ+utahCjvav7LjOTjyZB6vofO8VQFH3qZIIKkNs5lhn0TIx33utx
MN0FuF+ZKlYHkHjAXmRl0gohndzWQslJbD/bp2OMRfg+pD3KvYmEqnHxasa7
GEZFxrfnDpCIKP38I6a1GEfrvS7Ud5G44O0fwFwpwSPPX4L5KRIe9caf6Eg1
0uldZUPJFH6WXXbSvWo0aDtS4/IpHHkrrI3O/gwlLa2Xfq2gkOgarqZryjBY
V6JIOUDB1xqppxdr4BqvF3uOUpjQVK+mj2tgCdxgDXdRb/YqyiHeOzfvvEOh
w5Tsy/SU4+X8Vkb2hMK+SQPBvCyHwhXYJf+Xgto5MEs3a3Hi9+dTt5dLsDJ8
Zpp+oEW1/rtj9XwJYpoCJ2hSh8vJTnO/TIKAZymjdKUOy/eO/tYMyZs/Azq0
aRyMr0qC/wEoAWbC
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#25"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAYTJVMCqpIz8SyoKIT/sUP0p7gy9M
wAJA5RImHRBu8T+gGi/dJMASQAkcx7hX4P4/m3ecoiMgHECgMP0qX8gEQEvq
BDQRwCJAqwSpLxkiCUDImLuWEHAnQE9EiENOvgxARkdy+Q8gLEB6SYBPk8kP
QOJ6FK4HaDBA5pwL8cIxEUAg0m9fB8AyQPNB6JKYURJAXynLEAcYNUDRX4Mv
40wTQJ6AJsIGcDdAXZ5G/C0qFEDc14FzBsg5QP7d3LyK7hRAGy/dJAYgPECb
YrNl9p0VQFqGONYFeD5A64AnLZ87FkDM7snDAmhAQI/u11oWyhZAbJp3nAKU
QUCFnN5ZdEsXQAtGJXUCwEJAfxH7R3PBF0Cq8dJNAuxDQFdxSM+CLRhASp2A
JgIYRUAQ4y0w15AYQOlILv8BREZAWIhYynTsGECI9NvXAXBHQKsCcA85QRlA
KKCJsAGcSEAp2I+G4Y8ZQMdLN4kByElAC0YWWRHZGUAGo5I6ASBMQJcKjJkp
XRpApk5AEwFMTUDSHGZE+JgaQEX67esAeE5Ab0jIBSDRGkDCqKROAGhQQCqb
gZ29NxtAkn77OgD+UEDTrexJvmYbQGFUUicAlFFA3njwLTCTG0AAAAAAAMBS
QK4CAF4y5RtA0NVW7P9VU0B/V3JKGwscQKCrrdj/61NAXTiu7ycvHEA/V1ux
/xdVQJXpJhMychxADi2ynf+tVUA61EXFapEcQN4CCYr/Q1ZAffu4Rj6vHEB+
rrZi/29XQLwOa2UR5xxAToQNT/8FWEAYQN0MOgEdQB1aZDv/m1hAKqHZ/E8a
HUC8BRIU/8dZQOfwjaqESR1A+1xtxf4fXEAn+ut6lZ0dQMoyxLH+tVxArPOA
LrewHUCaCBue/ktdQCtLXUkswx1AOrTIdv53XkBCJGb1M+YdQAqKH2P+DV9A
PvY8rdb2HUDZX3ZP/qNfQP7NizLtBh5AvAUSFP9nYEDJ0790kCUeQKRwPQr/
smBAw54ajCk0HkCM22gA//1gQLCreDZPQh5AXLG/7P6TYUC0UisEVV0eQEQc
6+L+3mFAd5h1wz5qHkAshxbZ/iliQHC0FVnIdh5AFPJBz/50YkDRVdLn9YIe
QPtcbcX+v2JAE6qWVsuOHkBvHGME
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#26"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj3lM03cAxX9tSlEQ5RIrben3N6CIY6CkhgmOviJUrhaotkWolrYeECVU
UWtGUvGCQZZtAeZQjrHBFA8YKDrD3Gg4RrVsbmwOmMxFcIkCHmOHUcbvp8aX
vHz+fJ9Hm4s027kURa152Vc0RWtXrTwbLM/p2tO8Z9pPnlpyNCrdwYWH8Uuf
wdkn8qbAqN9DHL441D2bEF/LyOts9Z8HExGUesXIrfs8pE3xZD6ON2AMsFTr
6hbCWfv1CW9rGMzGuJ6Pa72g3LD32RISAdY+fEl/1BsT7/q3u+evwpmHqX/c
pXxBhouM7o5ojFZJM49l+MEY7vJ2F6zBkUWCpdtt/mgslfbyrTFY/HS05K59
KcZHDhfznWvBiwv4hLcrAMKXenyyDqWtlvbf5MuQU/b2r24H48E27AhpowQY
enS9j5sPdIu3rY3sEGD3KVs9t0aBieP08ZOZy+GpDN3PdSRA6qMqGJpcjnN/
Dau4M+uxRDN6OXtXIFIbSqVcQRL+5Cd5Vt8PxIPkSJaTqISU95Vvo0GI9/65
PcKxbsB8VuGmYqcQK5oqOjj1ydB+Wxg/FSHCYFpMBceZAlfNF999UykCv7kq
lkPS8XNwR+usTIzTavhx0lVYebW5NO+IGEnPH05TB9UQfk/bU1xi9La2qKn8
TJRXPL7gmRWEKvtcLMVkot7lqqr8IAimTZowqiYL2mD9lWFnEKhXcWiwVfD8
3iWZBD/e0s2w2o0gCvbC1R0SNJ1vG2WnN0J83VRjPCGBXJ/byS7TouDfe/Mx
jyVY/NbFBrZNi89+Wq3cvIjgDndhJbteh/DEca/VhMDefsXMFumh6Ps0oiCJ
QH3MK4N1ywbd2xo6qSMQ52yLY+uyccP6n/j8ToJrbr7+7OBm9N+UTanKCeYM
hQOMxADb4XDdLz0EN6L7O5nLBuweaBF0DxGcWiBsZNK24O99k2WRYwSxXc4D
jG0rHnUlPB17QuBRKbEwXkasG3+mFf5PMGY8kME0G+H5w8AKyp1+vbczD9EJ
yXsHhDRarO94sBfzsH/KMtkWSuP92/kUO5+Hcw9qB1OiaBg6e2aYahNKQua2
nFXQSBRNTzB3TFD1v6kuTqURUR4wxoSb8WHcR7J5DQ3/WcVNZp8ZosL4vpRc
+vWfHjOuhQWW5VpovADEPmaK
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#27"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtj31Q03UAxn9bvAyKHLADzgEOtv2+wGHYLiIx4RFhMBgwRzBeJmPLCrwU
RrpxIYQvoZB5OV8qmMjbUVKQqFFIJ1MpJ0EQZYtz+sfEjoA4IekOPH+/9Oq5
e+7z5/N5wgzl6je4FEXFPulT6mW5G6LOiRMdB2ILkmSSxPTqgzFKGxedXrxM
twQKrWtj7khsfjCUpN4fETyHZrO1XSwKxqnAX1b5R/2QMev2kq8tHDs3yhq/
DQyA/ZPB0/wKAiNvv7nqYRDkqZUra0TRIIdmBnephHC9K+j1LN2A7lDH0E/p
IRBNlus8bTI4BRf/3rcSCl3kj3zPoFgYP7MMh70sQksdfc2jIg57+u/xyhwi
OB373/Gwb0To7rPXmR1hED7R8xC9CuHUlQSFKwyF9a/85l6VgJCvmMLFbeEY
Xbh5nVsKCGqv7PbvD8fbTWYr9+QWjJwzXNXzxXhWLt3LtSVh4puMgs0GMboX
JzO581vR1JUttn8pRvqZOpoblIKuF03GpQdi/Jn2AstJlkMzbSTvx0hw5OFt
B6ciFXL3ovciyySIaG04z7GmwWLz9S5vkeBGRlwDx64AOb5QPDEugUeHJZ4j
UuKDuensmggpurLgz1Fmwrgyc69SJUXK6l9zVFUWBn7oMTn3SnHt884sqlQF
64CaXR6QwlL7KJ5iVOCNrgR7T0mhf01NqJPbIN6kNGn/kYJ6GpsaCzwFlNE0
Jm7lzbO5Oeh9M6k6IoVG6xc9v7NzOVjtWFt9VUsjUVPUxwbm4uea/PrDR2g8
v/7CGbYnFw1dH8/csdK4y/VqZLfmwexaTEw+T6O2t9/AlmvwkdE3re5XGlmH
fLJZ93z4hywpKu/TCCncsYltzodcE7S+Z5nGd+5+AvZGAZQ57YFRAoJH2l3f
M+u0mIwaUynSCUZkw33M11r4D/LbLXkETTxhC5OxHcqzp4p2GgjiL9lNjLkY
ActuN51VBN6N615nfHRwPaMqOHCQYEpnymY6dOA/iAge/ZD8t/dWCeqPxUUX
txF0Vmz2Zi+UYPxy2+XeboKjt0sp9nEJjs+2eV26SKDtG5pnTujRaBIOzA4T
JAfPuZi7etRo5PvCxwiiDwdMMZEGPPZRjwlvEQiWtowzewz41NhcNuX8/8+Q
AUvH1vyxfZrgX3NgZ0A=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#28"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtj2tMUwcAhW/rCqWGxwCFtYXe9t6iZVVI52PDuR7eWLAgDihYaKmalQRH
BRQczkBkDtgyCBKjPJthFsWBA63LwtSCEKogKHE8xIGpLHGjmNjo4mC7d5rt
JCffz/Mdqako/SCXIIitr/uG+aqMyPCLlDr6+MaVY2ywWlNxMiLFzgWkP1bE
Kl+qrcKIX2m7P3TbasRVgjVoKWv9liLF+LuHN8S4vZD8x1tb3rbLULoqTwu9
4gvH2f4zfpYNKHY6Ph9P9EdCYvFfvqQSASszSTf0gXB+FtjjaY5EljRrT2r4
epCTRQZPuwr0/Vclz68HwaAY9fMM3op976kET6XvoL0ybNDDsh2REFqUeUI8
mq4q8XB8gMa12kH+MRFEr/U8yA+Rs6aJX10mRs6p96d45R8hIkhsvJwbgrFn
t29xzUDXgEQwvzkUhc1lrdymaOzMDL83vhyKtQnyI1x7DBTfe/NHWyXoej65
m+uKBdHZ7rcQSkLTVhnGDY7H/Q7rAlVA4vekzSwnLgHTh578tthNoubF3DTH
kgijsmrgp2USG621P3BakzCYOiKUK6QYSd5ey3HsgnCinD5rlMKjszGKQ6bA
lhQdETAsxXdaBHBSduNWsDzsuluK+JXlJaJci+qnD6hrITIMXjivJcxp6A+K
SawolKHxxGoUwaRh0emz2NUgQ/7H6RuIpj0oUCqE7j4ZiDexp+PxBd91OW4Z
7v2S6WIz9kJ9vCeu35eC9VL3DLu0F8iU3LC9S0Gdta+XDcpATOGnNTMGCj6b
+trY7gycqx83KcspzHO96tjYTGjyagMO11M40XPNxBZl4WLDlod+/RS01d6p
LE+HR8P7C+omKITkHNjBtuhgfFzLVz2h8DPPP5AdycZBztyrHXwaq/pDw4xE
j6mUoY5cDY07qqFexqZHpPWArjibRjNf1M4k56K5o/k2x0wj6qrjKFOWhyPf
kF9cOklDUCfZz3gb4Lo85TPZQGPWcDSV6TSg8gHf+VUb/d/eJ0bM2krG7tpo
nLfsFLB9RrRcydYaBmh8PWcm2H+MENXvWj0zRkPfe9PFnM5HPK/iKt9JI068
5GTm8xFbWi3WuGgov1w/yyhMyKtpKsKfNALd0RNMqQmi0caHz9j//9w0YWFZ
lavzkuNf+K9hlQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#29"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtj3tMU3cAhW8v8lScIArjsd72p0CJDIMQFMd6eAq0FIQVO1YtrW7UZApT
oYxtBBQZoGgsCEYRcep0xZKVyKaBaSkzVjHIkMe00Jm6JVa6Ja7bHw69d5rt
JCffn+c7Ak154Yc0RVGJr/qa6nj52phviLhRW2e1ZQaLcz87ECc103hsrhmb
sLjFPaFxc6vMgbiePfzy8BgPp3RdXxEmHGXPpeI2mQ8kTxclBJiFUA66mn8b
9If1xGDHsoootKxO8DXGBCBr057nbzBr4DHVvfEFWQ5HTVCft3YtEoyxtt0P
g8BMlKu8zfFYmiRW6EpWQiUaXeYdkgi3/fKuM8ZgdNdFWrwqkpC6odIot4Vg
dqZ+r5d1AyKPb2+qcb6JsFd6Xsw7EMd1ZIzMhqKkcf20Z/W7cOT4TFHXwnD3
j9sjtBY4cPtOdVF9OD4+qeui21Nx+ZrbXbA+AouzVlfS5jRc3M1mCh5FwPBs
Io92pWPrE1FDe81byD1dF0mHZOJYw8G+db58OLPf5ngZWRhY8sVoXisfTX/Z
ZngVmzAuvhDGW8Qguqf5W15XNno/Gdq5KoXBLUlSM8+aA3vl3tzP9zDwOqdP
5jFSWNyd1xPuM/hahuU8aR5+GZZo4zgGmf/8Pk9Vy9DG9Xt3RAtguXReRmkL
8Cj0mG7/PgH0tQvJFFsA95L0mLJOAdTvFUZR7ZsRG8AR3VUBqNcxF0JgWkcu
/C3A+FSxi5MXQdyy8wcqUIieXuPP3HwRmnrLOz1ihRBv+cDEBctR68ebUKqE
WBrbf5ozyjFWPPJ4tkoIO+3bwqUXw5QfvVjRKkRt33carnwLXvDrjXXfCyFr
8M/nPBWQjs+oJaNCRJTs2MidUsBwN8MhsQsx5BkYxN16H8yRg9PhNMGCctdN
lq9EYMw8tyKN4E78jyZ2QInhhqNzxgKCkz5h3axkK/Sdk6Kb2wiSr1irWN02
HNUXXT30KYFfC387669CzpVJS1YjwQNVVT57ToXWnvtzJ/Tkv72yUoT8FO1c
YSA4X5Hix/WX4qx2x9OcAYLDNi3FvSxFaEqHKMpMoDTdcLFtajw8dMngmiTI
CJ93sHY1FOMfeczaCdZ8ufIBK9Igxem8t/8JQdCfqffYfRo4hgz8X5/9/+eG
Bolpxml6geBftsBtmw==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#30"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj31QkwUAxt/N2BrcaIzBBvt4XwVBOQyPQgqFPbqNIYMXRDeRgMEwW17E
LNlID7LDRMzp3cSP4+tICPkQE0XuujInRrDEs3aXyiGYdF6Hw8islK/3Tc/n
7rnfn8/vWWopy3mXSxBEwvO+YHG8cXVMZ4T62W9O3bU9YnX63uq4DDcXHQ1R
739eNaNuCY8bj3SLUVC78IbSvqBucDSejqAUsB/3pHdULIHh4StvBrmXYUbT
H3hmnI/hU9+eENmicZbnGqurD0Cq/qPZ16hYOKc9RKU3EJN7JOf41tXYNcXL
O3NTBMpbZua74/Hj4iCd4y+GeeV1EV+WgNkhQ+l1KhjN+6IGeLZEBHwdUjEn
k+Du7c8+5g2/jZ2itPSjTyWQP9fjUevQJ5CaaHcI8g68dcuvIgW7J4736O2h
GPnTc41rBZyPvjSwcik+qHc0cuvWY+C+kP/FRSkCUpeXc90boM92RHemyND1
2JvJndZgkv699ZfvZUhv2hfFlelweefRck1CGKbSXmc52lTo6g+wga1hOPjP
2G2OTY854zqNShCOFS215zmNaZiJ1FvXWsMxZEis5QxvxHgsby7kajh4ra4k
DpWB3F3iGKNFjnYawZyMTDjTmhL6u+XQzT3yERU0Plyk+7x/yTHQ0UYT1mzE
nlyzrb1MAVfVfBLBZIMWuI/MdipQvCUnmqjbBK1g8M6G+woQL+LOQeWI5kaz
XomffzVNs8bN+PSuIFjqUKKlu+cO69uMHY9X/bupTQn11nd6WakR3YlCV9cz
JQJXXWhie4w4trFfK6RUmOAKDrEaEwo9ElzWqVB1rt/Clm3FQebJPdthFej9
wizWLxd01oP/2npUUOZtX8s25OJJqLGr5oYK3/mJJezQNqhKlsW1C0jM55cO
MmQ+TK4wn7ScxE/xP/Qyl/JRENOd1OQkUf+qvJkxFCD4QfV+w1ckkvqG7Yyj
EHvv1V7N9JLwP0SWMEIzEk9Vbbn0B4lRsz2LaTUjghxNLl0gX+69V4TTzTus
T4MotNmS/dkLRXB6UkZK5BQOj1kJdrEIjVP86ppICvm9V6aZY8U4uyKoi7OG
glbhm2QmiuH5ZolfYQqF2JrQUWalBWLj/JHKVAqSv9ffZHZb8Ikv+ZaFpl7+
uWLBdt5DrchE4X/ysWMt
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#31"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtj31QkwUAxt+9xza2se19x6eCMT7GlyTyFYHp+5jASHB8BaItxhblrg9Z
fjAPkUA9iWlX4o7jS+SCFkSYcGLnAccOUYaWGlcwU+nSUhC0AOswj/dNr567
535/Pr8nwFCS8zZJEET8sz6nPiZvbURnEGP3qq9zEboym/cfisqwkzgh7BM5
5L8xrSujbgfbFegcTtD8ODHPNJmbPw9S+kF89+HeIO8lJv2BSxxtD4RPS+0g
E7/MOOr76yhTKPg7icqRAQKp6l1P5MpI/HxoudT9KIk7ZR6nhca1sKb9GlHm
7QLleIlOaI9BF19ToyzhQxd+hRL6xKPzjyTJvSYBWipDhgWmBLxEbysr+EKI
W5NVuwWORKRENtcVHHeF7zM9gfIVrGjr+8FSLML2Iy9P8PdtgPuF1BRboBjf
PRq7QBqBwoXjAd1XxXi/0dxMWjfi2hHtoOd7EkhSVXtJ+6v41ixZnH4iwVfz
41vIuU3wMI9PO8vdsPlkZQjpkwJRx5gh5y83zKSt4XjJqRB9fd/LUizFx49v
TvJMaiyOWSXVV6QIa605w2tOA93BDkaslmE0PaGG53gNXhtiGxIOyyBoq03i
KTMQc/aBaoVKDpsG7ryMLYiOc1vJ2ylHyj8PZ4l9Gjyy3LpX0SvHcEe7hjBm
4d13zjf84k2htuJpEsFmgfsoOt4aR0H/ek4oYc1G8q5T9/szKRDPY8+BSmRs
nKqicP2n/DkuLxdrjIGEvIFCa1e3k5vNRVz3Zf4L31Bgtr7Rw3nnIUv+YXuY
k4Lsxd6TXHcebDIVmTZLYYoUWbhN+TgQu2P+k2UKFafPGbiSrfCMquBG/Glo
DkszOX4Bsk8dWLoaRWPV9uJ1XFMBApxndkczNAb4Cg9udBvU55y5oVoaT7Uf
XGT9tWB+D9cOf0rjcsxID9unRdnBUf3BJhqNrr4tbPqb+Lt+YMZpo5F01lHK
mguxJ8S2UDhAQ2zxf4uV6nCsf1Fdf4nGDV1pJtumQ3m2enL/9f/3dhQhzHZ0
KfsujXbTejHXW4T8qmo6Y47GsZtGglsuQuNMZzn3mIa2Z2iOPaFH7PquP1v4
CiT7zd5hp/T4MjF44jOpApHVXjfYcAOSHbe/V3sq4LGw8Rq7x4BEk2/hJT/F
f3+GDBi62D8tC1bgX3ObYSw=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#32"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljn1MjAEAxt+7dVeRnD5cXHR9XF3p3N17iKgecqW6rlyuL0fd0bSMS0lt
SM1XyNj5mCUWmhTS3ciW6B1aR41WU5EyhOlSyzTy8b4yz/bs+eO3Pft5G4ya
LDZBELKp/ls9qZUF1fpGvD17uKa0jh8Ru3u/VEWxoZZoukVpExFVc6UDfpQL
VPJlhQLY4Xxh5WVfoSf6+6Iqfrx3Qtyw3aJZlA/c95wJ7dG5wHru3llebgAW
9eZXZ466Iyo6b3KmMBhbxN4n7ck5EHYZM+wpEp3nonv13+YjI7CdZ++xGLBY
lb8pIS6W+D/k5obAzl86PDnmjde9pflc6zIUWD6E33D0hWBKhytcgXFPR2M4
zw/ph5b2cIrCkbjyRrOJI0LH6JNH7Gzg/r6jfLVNhOlRogI2tQrProS4mY4H
oG68K549EomEWN5gsUqM2Asl/mwPJZa3jt2/SgSi7Ft/Lys3GmHOLRNzVUEQ
Vx1pYFWuwYHkY8WfhoLQFhdyhGWNgeWlYO1EwQJwr5hCWUIVOqJ5TS77g3FV
DVeWKh7zd3QVeRESKH9+sRFFajhxU0dzCiV4eK1aTWQnIqam7POq5IUwFf8K
JehEjNamfd/zYCH06zQBxOm1GK9+fkLjIwXxL5QGWs6MxW8HpOh8kTzCaJMw
1tR8appAhqrrN/sYWxKyG3MebFPKEJGy3szwtahqbxDnnZHBWWK5wNzU4pba
5oN7MgyyHY8ykcmo0On55jcyFNc3GhhjChJz6rof+8mhPjAjgeGkgqptGytT
yjEvffNy5nwqDnplDZFZcjRzXNyYtjSU9HVsN16S45duWyvtpYOwTFA+4Ezi
KfnYTN/RoXTvLXGQmESFg+AiHbcBQx/5VCNIhN627qILN6K+R+RkNpL//7Zk
guPg7DDZSqI6N2waY8nEoZidSzxekSjvzyaYP1Pc/e7r+i8kdOaWEfqUHiyy
6W6KqwKrPW3v6EE9Yis3deeLFAg+PPslHWiAKXNrmCBEAbevK5/TOw1wXXEn
QbNG8d+3xYDByDzJvDQF/gJTEEDD
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#33"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljntQywEAx7fRQh5J1JGzVq3Xeu2FlH2V9NhaiVUyqp1HR9lI5U0eqS5/
lDumtunSpaKuhjxPO2STXZJHqMXVXZOFPBKm/XB97r73+e97H1epLGEzhUQi
+f/bf6ezxIE+dW78wfzmalPUfH7M/mMBQi0FKeTCsl8PxviV8wOM7loHDM32
GhpVUFGRp6xyo7mAEflT8IlhD8GHyZzZWjoybdVtw6WO0Ctun7GXe+L8mxuj
nRXOWBW569csGhNZNWa5It4FtC5Zqq2Whfze3B3P5a5I9X5sb+vMBWP/+DbT
IB3qI4x7VPlizK2/kFMU5o7e7vxsqn4pjsbp7soKPLDgXw6VFoLUCubIt6sM
pBQseWmzZzm0m04Y6J2eMHx6dJ+SAaiy85z0r71gt8ojh6INQ1JHp0lx1wf1
X7piKcPhUNwyqrcofRGjOsKgOEfgYozfdksWE4Xfe7rJ8kjc1xXfEY34wauy
qImsjMJG2z8uN6v8oRMsLiLro2HObNoXJQwA9UJZMJkmhPOMd02XwwNRI8Ic
sjAWnkEHmywlgYj4/dFM2iNCacfQaktXIO7VVotIGfGgDkQsei8OAuk/2gQY
0n1eHQ9hofNF4jAhXgP6mxeSU3IWKi81vCLMazDaSN6pqGKBn7S+mXAS47D+
81sGmY2ZfhoV0SCGUV4kM/qx0UeZWkyEJ4K62bx2PJmNQ40tUkKWBOa5hG5D
PRui4zPiCJtktNaO6KqesrEwZdMyoiIZ/Ya9X/zH2Lhj4+BI6Nbh2NSPOXXL
ObBIstqsiyTIVu2LbtRy0M560Gy9JkHQwwPBbX0clE9ZoLYKNsC3J+TsbwsH
wVf1uda8jXB74jHPxOZO/G1Nw49JfM31ci6q5aHTCE0alLgy0KLhoqQng0SM
p+GGMdlubjsXkubWYevpdIwz28zUMS5Wupj7rX3p8Nii5NRM54F5ct5rq7cU
z85oVLddeXD8uuKJdbcUfaziUCGPN9HbKkVWbqJZEsPDX2a8S34=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#34"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljntQywEAx3/bWYXDVJIU26pVVFt7/MJU32St2ppeS7JeS+w4V1doOF2J
HiISeVQuwnmfpXCUplJJKt1VEu74I5deV3KJ7Ifzufve57/vfdia5LAkOkEQ
7n/3zwkCFX/VTXuf3p2Dj6ymbXyCDmbzFAY6KmfjdoUk/vCpsOF9cDCYg5M2
wRTyTVGaXnbFnmWLswr5jkPFTMi/zhEtNnDQnpjNr7FdgtbzT0uYKU44I4jR
7d6wDP6y1JlFLFeMR3Czh5h2YHUnx5kaBFByGj2/f2EjzuUV09RajLD+O2Mq
rT0uZXIbTFI84dcheVzy2gHv+7LSTFrXIuBcbOEhGy6W/80xYa2HIHP0TWqo
E6Jz1vQydN6gDXivPbXHGe1jLxvpWkA2r2jmzlEXzPd33Es3bMBsz/5Rd91q
3JroDqaP+EF/ULlTpnZFUHkml24tRVlDhrpb6Ia8qYE+WooMXIZ2m9tzdzhX
5N+nlQWgkKtIrdbx0CL3zKe1BoLgWq8osuDDpPL0OhpLgeiYAxaVNXxcV8KC
pghGkfAJh0nzgPTn6DChU2K6UCq1CvRAw42rSkIbgqZlkqDOTg8Q/zCEoXmC
vcKhToCunsgRShUOq47ypVWTAlTcvvuWGg7Hon0xQhFXCJ/NW/XUUhXCvXIy
83KFWOhWVU7dVSH6WsGmkzVCfKTPPUb5ReIyz2zg2ychMu491FDJm1EXIOO5
kiIojyzYRDGiUDDLVjvFimAXvU1ClUbB7IGjvPOICLUMc0uqZQuaclJrt3eI
8Eu9+4VxpRqrPOoGpRFitAma9MYaNdgnvI77polx0Wz5JaM8BkRTgYWqSIx1
1a37jOmxWODYHD/cJv7/tyMe/IiZ0HYRiaspXvOoqng8M3v27nAwieMDWoL6
HY+soyHXipNIqPX1I8biBFSMchI/FJPYaDv82fgxAV3eEgnnFgnXXKt+o4sG
F2RzXPrrSVhO+nYa92jAGNdqTXvI/731GoR+Wj+lHyLxB0bZMYk=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#35"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljnss1AEAx39361zc5HEXcq5+d7inFmJeyTe9PC8Rh4i7al3D7qZDq2Ye
peix3qtQKitl5KzaUpuryKVQSY95VCxtnZhiLfT7Veuzfff577uPUKOL384k
CMLn7/5Z7ZvoLb/hHpYvefjxjAMvLGpv6bIYExNGhiXKdWgyrMZ12aCHyRH+
56sjukwEKguqrriTbkgIdfhSeZ2N6K/z/BxMIow4RX6s6LSF+dz9s/Z6CZxn
3utCah2wbn3uLzvSC1mcli5rAQ/De3iNbK035soHI40pTiBf6TLYJl8svDc8
qta4IEP2zJ7t4o9DdaVtH0JdcbFI/MhKH4C8JFV39yQfA2+Ld1mZg5Bd5RYx
ViIA/2+eFbkCda37nUOmFyO1LPANa/dKDHovFnDFJJ6PP33M1ALcGcF4bDsJ
zjrPPKYpHKKl4vHpESFuTr6KZY6txpPZqWbddhGiqovETJe1yI0g818PiXBo
qv8tQ78ear6XKvCBO6Q15U2Mqgh8UnH5eqEHOqIDyhnmSJx4OTFhXewBq6sn
gxlkDCoaOTtkPp64pgSXEROLrp17Og0lnlg7881C7FZCxVxU19TjiUd1tUpC
GwfJ6N0KUYYYJwtngwkqDoPCb7f6L4uh3hQvIU5vxLHZQvLoJzGIf5ji0RJj
7Xg1WYIXfUljdGICRgayLerjEtTUN7yjLQkIuMC51t0uQZhqs5F2TkT4M1Ug
5FIsWNpcTTckYpOdX/yBFCmGmNYV9OokRPnMpP4qk6Kw8a6G1qkQlNNQ2Dcg
hXK/7QaalYxmat/hbJYMgtRtIXRlMgwGo+m4lwwPWI48uiMFBklxXFe+DLNp
Oe3UkjRMse3Lvs7J0OnbZqTupIF76SfnKV+OC/P5F6nodKjbctubguQIvm3O
pwq2wKN1b705V/7/b0cmbq4IT/Dul6NWH2pDN2eC1df7fdcPOY70awn6dyZK
0o8s4XAUSDO2jlGn1HCxK+LGBSqwxs0yTA2p0asb/myjVMDroNN7SqbB5vA1
2uVbFeB9X9VDGTTISvWP7SlQ/O9t1YAUls6NHFbgD6FWSxE=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#36"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljn1QiwEAh7edVlGWitKXoa+Nadbq3WbaL61oZZzUqGjtlFyXraRcklyO
VQ5H4vRxYVwSUz7vfLQrbD4yV0e50oVznOJEpRrvi/Pc/e7573fPfI12XQaD
RqMt+bt/Thck8rkXF8qyP1irAjP9ZIrdZSHxJga653ZG3q+0yRq8Qt74m1yR
22k0qaXTUVNYe3Yh2wcn3yZUGS2uiPs8TTjLtABtGiI6ZswDllN3ql10QXjY
zbnddM0HMSvzJlnsxRi3z0nS69lgd2nT7E0CFCUtXzS+zR9pnKcu9p5hsCoK
avUBgagvDWxn6gissRs1HG4PQn/Pvh1MixjPh5mRs+UceP/NYbKlMOdMWB40
c5F8QPTKblcEWoVV57+Ri/Ds6+MORhaQv/4E1yDlYUZMwE6GaQWOSMjHhn0h
aBrpWs0YjkLjLa8UWzQfirrSQIZnNDr8vht/dPChH+3roetWolOoEOmblyK4
ofwqvXYVTlU5THl7CmCOI8rpllhoRZsac0sEYJ47JqGz4xEsH5zolYbighJu
9PjVUMtK8o+eCEX01Jch2i4lCM+iPNXnULQ3GpS0rLUg6reJZ5cLQfuHaR0I
1Y+KiDNhePEyaZhKTACvmxdweDAMDZcu91JDCXAZK6sp8g2HTJXSQnkk4mLp
+mTj0XDM5LXWUZcTccudtVZoDscAw7GCikpCR5PXR6stHCVXbmoorQoVwSzd
lTQCyv3Oayi7DUjh8Cf9jhDwTd6yjKrZgL0XDp2k3yNw187VnTJvRG61sSvL
XQRbas5Dcl4qnFhy4bFrIjwRPGghb6SC0fiF0vaKcNrBu56M24QoZ32G9JcI
kuuWArJwM9z2+vKsEP//26pG2Z6R4t/3xTDolk+nWtXoK25mFfSLcagvi0b9
VqPyfewj7qQYqS1tw+TxdKhjilMy+RLIfYbekQPpcDDv5NoUEiw+OOc1ydHg
BrPH8dMWCdy/R1rJfA2ynW76hpZI/ve2aeDxc3vEu2oJ/gBGujv/
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#37"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj3lMUwcAxl/fpGCZnAVKXx9UGSAI2BBAh0g/DvEAClKq6CqFwhQQQzOU
GpxYBWGweh8o15qVeKCoIJubzFA5tCLbkHiAqBFUonI4kS1T4ntq/JIvvz+/
3zdbnZf0LUkQRPDHfmJ6oELie9pDOpwdGtjtby9dsa14fpyJRIql8YEW41KD
cP7Dr0wOOPvnJes9Oe+k1dqanz3EIjx/q/u/y5ZE7MsZQfamOZgIzr6sF3Nh
PtZ61E7jjX46Vcc7MhMxS797ayv2Q+ab7Y3v93yJ4UL+OcssCZj6wqFKD1uI
+/JUlqZASAIuxtq02EHlc9POUhCM2c3jl2622KNO59XO1SxAR3JPwc7jDnhw
b2c+1/w1nBz9b5evdwT1UY8rDoNcqGvLcOdjbenCuxZbw9Eil4ePXOOjZ+JG
B5kF3LdZxFuvckJulbaGPByBObn/6G69dIJ1jOcW0hSJYs3g+a4cZzS87osn
x6KwUftUXffYGStqdV6kYAmKJW4Vu+Jd8GJZAMuJjkFHRPbIpmYX/DA1eI+j
WYoff1OeXmgnwFxD+QVOzTIkyFt3124Q4HrsgnKOeTm6hOf14b8LwDUeDOWI
41AlmcdfE++KEzI4cuLiIeh7ld+63xVL3o2PEltlYAf2l0l6XdF+ql5GZCUi
V5Y3WRctxMGi6VCCScTQZjU9t1CI9OQkb+LwSviFhP337KwQxKeYklDheKHy
No9C751VY6xCjt7RM6/VIRQMZxr72VE5Duz7InlYRUG6+psm1kWBp4tHHkc2
UrDxb65lGxVQlhIlGbcoPCJnVrBRqxD9qvKvqTcUis79qmbzViMsvKGsJ0gE
WcmsBNYiBSN993dL5SLQazMXsdUp6KiNbPpeI8IfFg589voa+G7T/1RzUoRp
5aYuxl2JJ9nWBppHozuws4n5RYkdV82TlWIaVVZUHRO7DiZ3/URcCI3QFnMB
o03Fv9XFHntVNHgV7hnMLBVEVp6Zfvk0BlQFCYxRhU77qQKfUvrz3oY0XPRS
eKY20KjXLOaxzWkY2pJmNLbS0A9mEez7NAQkruzO6KGhbGobYw6lI6e/umjj
GI1o0egw8ygdGqsjL65M0/Arcx5gfNQ42cB2Gnhu4E9G/M1sVoOggtoFrm6f
/7SpURUlSPT1dsMH5YdoNg==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#38"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljntQywEAx38bbdSlJFq1NK22fmurdFjy2FdZ0WPyq5EKbeexzu3qvHIe
uxzHOOfIKHpIOo95ltofyfW7LVpFeSUd5m6OnIrTcRfx++F87r73+e97n1n6
ImojlyCI2X/3z7o4bazsqlj19o6rhRBPU6XuORCTTnMxTFnl2XO+qmqDYt6E
035IUYf1JKoJVJZU1YlFQnRNuLybkvCR9mninKl0GOh7SZ3cPG84K+6e8S2W
Qth9VtiybyqSU7b+8BHJEbDf9qvV2x/u3f43+YZYyL0mb7NvnAHR06L1fDoO
7ZmnDdZjAqwnu335grkof5/yS2UOQk2pxM4rVuKSLc5lXCvE6/7923jO+bAH
ZSk3+85E8N88nmghRkyWLx31ocg9FP/CY9di7PV8FNN/XISHnzsdXANwYmBg
bHDxLHglR+zg0okY7TYkl5jCYP36NIM7nIS2AnHFRx8xUqtLJVyBGu8euNSD
FWKYv73q5xSn4LhFN1FrCUdk7ZHbnKploPtU1jF+BDrSlEc4zuWIie7qLN8R
Ad7FsgSOKB2xvWesJyHBJQ2mcdIz4C0cLWqukUD9c2SI2KVBKPkhs3BMAvuV
eg1hyETT72xZ03kpykzjCQSTiYhzAxefjUihy6akhGUlemwZt07HR4L4B02h
1L7l04v2SDzuWzXMarPgfOLJs/FI1F678ZIdyoK+4/qmMTUJ1eq8BjZAC/fL
4Am4R2KKorGavaEFpemvPPqdhIs7+SibtAqJhdIWR5QMpps2PVu0GuNDyplb
y2TQHPRewXrkwLjwjjPIIUNI7oYFbGUO2PRgQeCoDK0efv5sxxpc017QbEmL
wni+8T4Tmo8cMx1uHIlCV1x7A9OcD3MjuaLPT45zk4JrmLS1cFwmo0OUciQ0
OXcyJeuwgaouN+2V///bXICd8Sfd9nE56osXebKNBXC4A9cVBipw7JWBYH8X
IMQn733SPAXyG9qGmVM6tFpzhM1GBZYKh9yMS4cey/QHuWYF5IdnDDCkHoIl
XvuoOgX8R5f0Mtv1CCjzelZ3V/G/t02PVF81j3quwB8W/Uyw
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#39"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljntQywEAx3+bWuRYCFFjExVCVqntt9VXr7VWk2qVVGp0vY7mUQqXOs+o
9CCd0pI8w2nJI48msVacdNdL5Ox0joXLeZzS74fzufve57/vfXjKtJAEJkEQ
K//un+P5Cqcll2w9Y3v0A7cCbD0Ddu9bEahlIvVg0e+EKAaq5654vVA7HSPP
n2V4pVqgYmdljS3XBp19J8u+xM6G7KOJyzTtAuzxkUhvn+OgrfxumYXKHuS7
oIcv6njwk2z7xeY6Yt67mgzSZyEMuyyvmSU5IcM774O81g7crrQNZlo+htJ/
dhu7HLBhcYeFmZUrNqrYbwa7l6Aqx66FpXJDv0Yqm6lxxKve3O2sNgF0Szk5
j1OXw/pvHosrwlGZeK9kghOiDrr3mGZ6oDU9ZkTf4oSnn/WPmEmAV/EEzZP0
lZjstyidqfVCVfXb8o4mPi6PdAUxh72h7nOe1y53RsDpHDumlS/o8bp+wUtn
HP420MtQSTDKS8kmX7rAoTrvOqPSH5G5Zwwmwa7QydzyGG1SwNE+saHZFayz
JUIGNxAp6sKhgsJVOC/HDEZgENTOeQsOfF4F39FPRiJTjvKsT2dGpW5ouVgr
J5KCMRahMJZ9c0NJ9piQoIJxbnLTF4mPO+LDQuyJ42uRqDvBKyhyB/EPbQjY
R5kxV+YL0NkdPkwrQmHzKPn8e6UA1XVX+2hjKHr8GrN2nRXAM2J9PT1bgRmJ
TSZeHCGmLtOcpq8qcKw4nHc/XIhB5qQjtHc4kktz5nAKhci+dlNJp0VgS9XW
kfEfQsj3T1lDm0aCNmebNjiQ4ERtIumKSLypvKBpjCRxz3S6Ja1bh2JG5tCv
BhJj0ZsfU/OjoXNnhxWsE6Gd31pPNUZDqreOaN8rwqmJ1lWULAaGWXfC3taK
ILzRlkHtjMUdtf56p1H0/y8xDpms1LDvm8WoVYnNaU0cWkvpfP98MfIHkgh6
PA4Jof4VHZfEiK5vHqZK46E+dKsn1yCGj43RQA3Gg7Rr8G0dF8Px0Kx+arES
fqMPrBVWHrD8uvo5tUOJu/dqzEm+x//eZiWyjs9M2yPzwB8kK1ki
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#40"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljntQywEAx3/7sQpHySLazlq1qVbttw3JY19Gb5NY2Xpu1pm7qcljyV0i
hwjXg1wPV6mOnEeT4nCmBymOSyoqR+cPp3Ce3cTvh/O5+97nv+99PPUZsWkk
QRDU3/2zTqqW+F3wUiyqXDSSf4KriNybFxRtI1EsVkm4OXZF1bygYW+bK7L6
SvMN3x1Rbqmo8eJzMbBx2In91QVR7yfLZ9oEaDlY+vKm3g2dZ26ddjGL4JVW
bbMmz0VoWKbdmS9GWEIA2THOxUg257KjUQL30aemXh4f/J6MFEebFDGZx7t7
yzyR4tvt4ui+EFXe3/NKxgU4mytsdTAvhrGWvY0V7I2h/v07HDqXIJsKTDKl
+MDjb54DfxlsEyN19WYhtIeC+9hZKyB880M0N12ERx8ftpFGwBRRXNinWYBp
oT67SNsqbB9GqGCSHxo+96wlx5RY2mRRVLT5IbIyV0i6r8HvIepaRJY/jnwb
7GeZw6DbJepVt4qxoCr/KqsiHO6n9m3frQnAg6jF+azOCCRHR2bEvQuAw7mi
EBY/Gjyq/PXbT4GoV2EWK3otyqPsbtatQVjz88MokaWCIVOszB0OQuv5WhVh
jMG5H0t6t2glKMqZCCHoGATS2jlHCiTQbYwVESXrET7fiq23JSD+YYuFv+ln
ODmbwtPncWOMegNKGkyGXwoKVRcvDTCjG7BH03RgmZGCIj6hkZmjhv1Z07Hx
axRmBFgrmUtqUGRtR3U/hVfklKOMMg7OdQWTPtsp5Fxu1jMZ8XhxsrS9K0QK
1cHp6xj2JjTsMYxbNFLwtIalTPkmGGbt6Ha2SHGb7cphHmhQ5rqXF3xFionE
bR30/ES0Zb92vs+RoUva3khfT4RS+7HLTyxDmZPHWToqCcbu9ZK+VTKENHXu
pi3JcKvISxCky/7/bUlFs8e9tJQ7MtSal09lrKlw8iTqHz2RoWDQSDC/U/F8
8Djd8kaGxMa7Y3SxDr53hEO8yXKs5o6O0K90+NAuE9Rw5BAfnv2C9tWjrubx
tBvecnC+rHxC79Sj0KVnaLNc/r/3rh5JjUXVF5Ry/AGYU01Q
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#41"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljn1MjAEAh997VVRTV0qp6Oq+3nuJls8K98vpg6vTVdd3dIfKaHe+KqFd
MhXNjIZ0WqU5tEqKSdFRJh/5uC2hOsZmKFkNG+V9ZZ7tt+e/3x4fjTZmK0kQ
hP/U/lkdoPKnL/Ol1IFclfg5V7p+f9GiSBOJ2s1WXa6KUWm1x6IhgckZ7n30
HW7bpLQy11DL53lhZN2hR6H7rCD/YrXEyeSL9mJ+EUXaoeds+2muToxzLo2J
i+0dERa+65cjbwHsBpZG5JudwDNrN003BUA9tvBg31tXbJI85k53X4p9vcNK
+3o3VOlF92x0yzFZcyZtV9wcDPYX7rbpCYSkonNv3VsPeE7l2PBW4l31B/L2
Bi8kH1nx0jpvNRxO/PiebZyLJ6MPu8gsgGd0beJ+ngf7MOFe0rQGls0Z/rMq
eLgyZo4iR2Ro8q836uf5YP15vYh0D4UlSZmfYPBByfeBfo4uHNHmpOzWIl9Q
1aVXOYYIZI6XucpHffFAvryU07MOXkt+JOti+bC5cDKIw4sEXu35MukgwEUF
ZnEio/CtxG2ZW4YAob+/DhN5CtzyU6RRbQLcu1SnILKiYUzJ6wiJE+JkwUQQ
wUTDUuMT320QQh0XIybKlXiqKXyx+L0QxD9MMWCDFUcrtojwvC9+hFXFwlsZ
LvtYI0J1fcMrdjgWacbL5b2DIkgTUppZNxUOqJndP+ViOPhdO882qBA40dGf
oxfDQtoeZWXxcCrw+OnYIkZB4w0Nq01AKfW4ftyZguLwzA2sdSL4wSvI7aAw
N3lLMFuZiN6dx4eSdlDosHZ2YR8kIeONQPWpk8JEavZ9xjsVZcnt0bUJEjwK
6G5mrqfCECib1pIvwbkZnlWMPA3fZGu23TRIENTak8PkbkRQVWvTsyHJ/7/M
dOgqhRFKFY063So79lo6FIFXZy7cSaNsIItg/6Rj/7Fm26gyGqnNnSPMKTUG
TeWU1kRjrdfwe8aixv3u45761zQWFM9+zUg0SNFuHRsdo+EyHvKM2aPBVzPd
ftd2/v/eTg1ywzJXMbz5+AtwskX6
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#42"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljntMzAEAx39300OSSjgqd3Xp6rrc/cLS8756v6SH63GO6ugx1sqjh+JW
8kqJifTe5ZHSMr3n0TpklcdYlDjORmZTVArTze+n1mf77vPfdx8reVpEIpMg
CNHc5p3gJBHxG7niE60Bmc+bVoiDcguEISomDFOV2dqSabFyjfCDjcoUsa/c
surPMVGVVX2Fy7FAxV7vwt6jBgj+tmijicoat+yn0wxHjNFffq/MOJ2HoIGn
GY/ZZvDzP/B3GUeA8EsTSOSsAmcwLU5P5QQvxZn311MtEGf/1FiPtQnxRXU5
z/rWojbP9qFuujMKeqfaBLkcvH+Tf1C33wWBh/MCJxRWMJ/L0eW4owE+f3j7
rSE9uXlYJ9sTmUeSa0siuXj2Y+ARMwUY0u7OvcqzwRK/dRlMlRccolXOM43r
cHNqcCtz3Bvusb7P46S2CKrJs2WyfPG7Uq38TPBwekb9hpHuDzYdNiTbYAc7
ZeFtRnUA9NrLfFpVdugLdi5k9AeikfUu+oufPXSvXnBlcEJQc7xj9qeYj/pQ
LGeEbMU+97qJjjY+fGe/jxHZoRh197DjWzvgYcO1UCIlDA8Kjg0UTTrggkLr
SlBh6DFU3GWFC5CwPYJHXAzHorNfqy43C0DMo4qAdR7bJWmHI14ORY3TkkgU
JzUt5zU7QtnUPEKPRSIiwMi0W+sIcfSOFnqVBEme1KTl+fUwcmytoZsl0HTc
8HQbXg8Nc/EZ2jsKwV8CuK9WC6G41Smn06LxLfXcmr8VQoQeX7qN1onBEwtJ
fe+wEJbSPW50VQwKhJ+NHumLcF/H1Izui4VJXLJHA0TQylIfU2wZJjXCcZd6
EZ449bZQHTIYJM7kdHaLUKlvXksF74TOC+dN+a9FcG3vz6SyduGX+uMgmyAX
/pLjUTd6cxJhJK6lexjQrfHo9E2qmJKTKFanEPS/eEinxF3cDBKylp5xqjQB
LqX7P7HLSfhYjH2iNAkYLa9iTTeQEJxa+ZaylyPG/LSl9A4Js59bXlCH5IgK
VP+JGSAXenvk0PC7cqdHSPwH6ZtNLA==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#43"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljntQywEAx3+barXCVCpCa4/fr6WUeUSxfWtSqqXXehltE+Y8mlJz6ogc
ed0h51Etlcd5FXXFia5JXfO6OuQVUe6ca8MJh1y/H87n7nuf/7738dXlJK1i
EwQx8+/+WStVBftfEMqXnCoc4v0cL48pLAmKM7PRmUgRo5U2efXkoNcisyu+
M69+uHwbkVcYK2uF/ClYVC/xy/Ieg9ghu9kTzAL0xYUpv5COsJy4eYxnoMAp
HJz1qdEFi6Nyf43nB0AjsLNc1vMwuNW9nqMPxm19+nBRtCv4j3KyOGYpfHeF
bLRn3JAluc/jeM2Bbe5wm/bwRFQVk+0OhhA0V61R9I/xxKtnO/IcLPPRUnOl
1ifTC95/8xz4C7B0iFcZfnwSMnfPe2q/RYaZrWWyz62T8eDT3TtsPRDr2BxY
0OMN58XifLY5AlUeas+H5qm4+OWRkm1TYIfM6jJYMw0xpmKS7RWJjXMet63P
90Hpt75nLEMU3MKDWuVFfPhV773KqoyG0qNpIruXj67YkL0syxLMa6ZUhMQX
DqePhLL4cQgxdB0Td/jiXDzcWHFKlGaf/vrZWYDIkY9WYks89pkmBcgTBGg/
fyae0CegJmND/spuAY5s+x1K0AlILTEGn+MKoU1JooijiXhuOJsWoxCC+Ic5
CUPJ5WHaOiF6elNtjCoZe9ZeVfLfCFF9qe45Y03G3WjujJfjRJCnLWtgPFXI
jBrYfF0vwrjARhNTp4LhQ6lpQpkI/WynfYwiFSnfQ0uf3BRhW/01HZOThuUZ
Rq+PjmLE7xq7lLFPR0TLW6d1gWJMzcwOYyrS8X766oraBDFu2bu6M10Z+CE9
eaO4TIzf6g2dtI8aA5ITHgddSNyTdjTQzWqY3/ko8v1IlDt6V9GxyxHZsiJ3
p4JEaJOlgDauADdr1CY1kv//1mjgZCmi3vSSOGNYyGUaNSi3bRp4byVxoE9P
MKMaSKITTSksCuqGNhtdpsVL5/MXtvpTWDTFOkj3a6EpX5snk1EI2OPxgpbo
0CpLXbA9kYL7cHg3vVmHQzkLuRHZ1P/eNh1GHnNq9xdQ+ANQ7UV/
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#44"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljnlQTAEAh98+tds6d4lS0Wv3vXKX1FDU+5FsdOiwXZbaVdppUIMwamqL
JDJMIdpFlKtLGTUMpp2yJPealClXw2BbjMaZ8R7GN/Ob77/ffG6ajOhUkiCI
2X/3z2pvpde083L2h8vLjdXeEnZZ9g7PMCMJZWr55ez7VrbSyfMZbRyLgguJ
fT+Hhlj9VsMpOeUCNlK8KFc0DKEWGx+pUYb3pzcZBIMidBy5eliS6YH0Avax
LnYklig2/hxDzcAOoyT7LC1B/3b7BpHWC3tnOt1L/yAFZc5IEhm9cT1/SlJA
yTgkTb0jETn6YqDzgvS0cDyO69zbhJlzcaBO99VPPQF93fmbhB1+UBSOUTw5
4QDnv3lCagGiTzmzV02OSNw174nttkBciemvqu+aiLsfb7eTWuBdzatZI81O
GLGEySKNi5DaM2va53IX1Hw2h5PWICSEjIo0pUzCsmM6d9IxGG8bzbXN9GTs
/tLbLchUYIVZ6plX4IoplcWNAkMIWlsLx3tIKdwKnVss6FgK6cSieeUqCsKq
Un8BFYas9qSynLcUzkRgnCAsHMEir6/7PdwQPPRhgNgWAR9xSU16ihvazlVH
ENpIuM+Jsmi63FCa+8uf4CLRcq5u+HuxDOoV0R7EwSg4Rs3+aLdABuIfxmhY
bV5wLUdleNgVa+WVMWi0FEr3mWSorK3v4QdiEEs1p+/7JAMbt7KJd1Di0Gvf
6bmBcoyeefEYX6/E3eybhpNr5HhOivfwQbHI0xztVhbJkdvQouEz4pAXojjS
1ilHxM5Ry3nbeHxvLo6vtMgxKTFlPq+Px2R1vj5BTOOa7Vh7/lYCen35NH0Q
jV+q9SbOVYXSQXLh/Toand43mrhmFTJyKtpJE40KO+fjXOgqrKHDf2zuo+F/
qWMLt3U1pvfYWXzFzP+/tGT4sSP0tisZVGcGDOcvJiMw7dF50QYGJb1agv+d
DIdaL7pAx0DV1GrlytQQS29rv1UxWOwy0M89V4Mre5QzdInBjKIJT7mpGqyz
savYa2JgP7jwAbdZg4CsuMCGLuZ/b6sGBp/ddWvfMPgDY6RK6w==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#45"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljntQywEAx3/bqRnSxpRUrIapK7XVHr88+ooS1VC2UrHaleY8itK60OXy
KMd1VoaSQkeFGOo8rx26JfLIo7lUdHGxqUvOs34/nM/d9z7/fe/joUmPTmUS
BCH6u39OFiv9vWsFwZsZI8OupwTBy3cU+EWamBheYe4wrGegappf10zTJLAl
j2t/gINy3YnTAr4bnk2O45b1OCHi05hArskTuULOy4Hrbmg5dsvAyRBitCdr
0b1vfIQt3fbTke+D4TUTHUsiBOjN5dWztP6Y0Lpx+7zUWeC3p6tZJjGK2poN
7pFCqL0eclhTJbgsqzE6s7xwMn/2XfsMGdZ3lxos5d5407E7076FxNXcyrTp
jj5w/Ztnz58P9nRuyocUX8Tvk7+yy1kIclpd0+GquXg08OAeUwuEqdpimc1+
GB82azvTFAIHd6vubb8/6obao5i2xRhaxztqpxZheUX+bObUUFT2sfWGNhEK
v3Z2MDKWopPKab9hEGNOVdFlxolw+J6rrtR9EcMcIStitCzD9ULnuVR4AOzP
6IMY/EjsCq4v5PUH4KwCkxmRUfjIcTmuFgUi9NdnK5GjQEX89xe27EDcralW
ENqVaKw4NNj3PRD6vN9BBLUSygTP560BEiSvjhYSpatg+4msT5skIP5hika6
i8VQ0iHB05cqG62MAZc4KNnKlqLq/EULbY1BMWOwVkRKERybYKSdlYg9v4/f
o5diou+VCvqiEvKGd6WsO1J0M9kH6MUqcI92hh14L0VefaOGTo+Fts5SPCqS
QbHHYQVtF4ed5ktxLioZ3ONT5tHlcThUGcX7kCPDbbtJPNq8BtkFTg2WmzL8
TtzcTM1IxMiULt1jkRyt4vtGqiERaeq8emGUHGVjXU9SEWshOWINOZMmR9C1
lmxKtw5PM0NivMvk///SkjDfvOFC1jc5qjMWjKOvJKGguG9L73gSBzu1BD2a
hJFmb4dGPolEY5ONKkmGNqBfUBNOYombtZfqTsbNvcbU9gQSPvudXlNeGnSN
7PHI3UKC92XREypLg1OK0B3V+eT/3iYNzo47Ha3Sk/gDYIlSSA==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#46"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljnsw0wEAx7dlU+QRxQ7NSi2PYa3N9hP2LY9VHpXHlFZjUnqyVlmnh+Iq
jrjq0kvpQeJ0bSHUaVFtlY6bE51yx13OYV25/inaL8737nvfu88f3/ssU2bF
Z9AoFErATGc3jZ/E833sJelsdFZM6jwkm3LzA2P0NAwRxaPnbP5KKt0Cv63Q
O8HPrzo8pXc+buXcvu/F9kBci7fU2LkI0WNWgkX65fDl3PP41+IC4/UX1xyz
V+Eqa15+GdwRJT3yx4HNxTvfn67FBz3BNmUprPV85H2v1Tkf9oLC56OjNVOI
yY49tnTmStzJ47QzskWwa1NxfKo4+Np3Vs0wEvAc3bIvgekN9xkdBjsEphBe
+ZTaBynnxZ/pmjCwBRFD0a2+6PzxvoOWCSRWdau5Zj/YRq08RtOvR1cyvYnr
GYDaX6ZY2kQ4YlX9JvayQGyqyOPQmJEo62KtqLfh4eLvgT5qthQOYUWq9Ake
vCsLn1Jvb0BpGnljJHE1DNGiQqpxIzLuNrYrm1eD8eByMJUdA21vT26Nio/q
ODhTY2KxObVE4WDkI/KveZyimYGnntfUua1Be83DOErmFjziFRAnGteAMht9
PJwk6VxHgwDdvbIJMikBbQsZht9WQlTW1feT4wnQjI6OFUIISfIOLemaBJbG
Lj9SK4S9v66CrE+CdJjhXz0ixCBtQREZLgN1vy2P6xaE00+alGRWMr70NgxY
nwxCXIHdZpK+DaFLShSFtUFYmrJ7LXlrG2R1asHFviC8pDstJg3boXlc9CnK
X4Qp+aG3Fk85tiZUcIrei/CB/0ZraZSj/qe857VZhJvz3e9YoneCZd88/cNR
jOAG43FLzi50nilXyxLFc397U1HJIm+qusV4mB1qQ+pSIei5ZFSZxSgeyKSQ
/1Jx4MazUt0CAnLtqwnLlTRMu+cbnEAgwmN82DKYBllz/GtJCgHuBZcvFh8l
WlrDjhjVBBZPruuyHFXC5kmASVdMzPm+UoLKHCu1qiLwH+hnNm8=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#47"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljntQywEAx7cfLaGnrNLDkpbSVs2ytV/qqzdr49YtYrStoThXF5HrUh6n
By6PPK6SrocwUZHrbZdHUUIipO7E5U7zyOPO0H7q+tx97/Pf9z6u6mTZFoJG
o3EnN2UVT+7rdcUtuDesJUEczgpenXHIJ1pHgF0Q9a4hbSK4bIHP0GKdDcyc
tzszzOaieG9JuRvLCZqdTbJCC1uIP83kW+sWwT9G4ZdwwgFd51vOWqV4QKjV
7PEtdkFEZKrBkuWN2tcrmhtLXcHqS4431fHQZP1RVt3ijnjPbitTe398T6qQ
M096oDSb3cFIEWB7UGxbT7gn3g4c2MXoCkDV0NK39kNecJzMYbAC0VTZ2/gm
zhsbjghfmqQHQSv9uvtMOwc9Xx7eJRIBtkPUwUxzH8yJcE8jdCHolqgNtY2+
uDreJyH0ochmzDjXG+aH1Rey2YR9OL4d/TF/1UM/5P4cHKCnRKJ50ZjVzTYe
lpTl1dJLoqB//ilXy12GTrEgj961Cgw5t5hZtAyMilMiOisaoyG/5/Wr+Lgk
xTx6tATtWo5qoJ2P8D+fx2jpUmxd/sC1zs4fHZcrpbTEtXjJX/zC0OYP2hQ6
GZR9x5O475fj6YtYPSWPgSuDzNa4C1CmrXlFjcXAEFYTaLdFgOB1G+soOzlk
a1t7s4YEsODUX6Bq5Mjw4oykMYUYJszyqdBYZL7JzEuSCLH/+m01lbwOS2TX
dfUNQkgPm6+hTNbjRoEqS/hRCOcNGpIqXo+aUf0+J7sAtJrY2FKdcYhxVDqs
SQ3AX8XO+8aFClQMPysR24vwiHevztiggNJgyWwOEqFolmOpUbwJ1fmNTrM1
Iohude0x7t0MDz6RmqUVTf9tU4JTbsr+yiVRmbJiNlWvxIdzo0kXJSSODSbS
qAklSvuLHh/cQUJRd0dvPK1CxchWHlFFIsxpbMQ4rEL6v/yBazoS3jnM10ZP
NRL7545XD5Kw/b7yiXG3Gi6swHHDL3K6944a4pzCP5ctA/EffD06/w==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#48"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljmtMUgEARi9MMbOUtKEJBoIKCCU5zNKSL0tTQUoJtaJStGWtBmalznRm
VtpqrZdz2YNSW49p4rLVavMOc9JjPXQWZVFray0fpdVmJN5brrN9O/++nVCj
KXMrkyCIhf827bxovSLyuki1eJ4lhnOIrUorPxilIZngSq7F1gyPqizBUe/D
SH/ods7ShpS7VY0l56+IBDwYRYeSKvI8oB7yUM4hhRBSSv6JSW/YG+7Xs81i
hHxc5RsW4ofk1btdfgI5RKcndduG5kDQZ9riRUZDxiVefAnmYIv0CdsrKAYt
VSUTalcgLlZF2FjmWNjdG1tL78zDu9cHiln2pUgYuuvs0XPB/ZfDEixDP/VB
x3vLw4bDS155liag40+l1Ct5Pp5+e9TNLATcYycDbY18+CSH72WSifDLyUgT
s0JxY7wvnTmyEmX24NSYs6FIu1AVwQxKQlHON0UFT4jaX4OvGebVELgGxEKO
CBJLXTvjfApSOvuTjtWJ0KuOrWPYUxGcZlVqJ0RgNZ2KYwg0cIw5q03dYbiq
RQBDkw43v6CzWhiOpD+jw0SpFp/d3ebsinDYrjVricK18LYK2AZxBIhpyEyQ
nK/2ZToxXgxkjdB6HYwnIhp+14thudnqoId1WOTT3iJyiKHK3milA/W4taIo
NVsnge+Cjgt0qx6jvEz95eMSOJneR+mVWfCw/KTe90hQ2XbHSJuyMeXtazyn
kEJbM3sN7ZmDqa2l8ep8KUI2FMTTjTnw7yQSMs5I8cDTfy7dux6cz6SmbVyK
ScOuHopvgLO3PbCpMRKPox9aqU4DyKwdCsoWiXMzuBcp9SY01Jp2Kr9GIu62
fR9VshlnxS/H8qNl//+25SIorr/Y854MzeblM+mOXGT6zK/a65Dh2GAhQU/l
Qr7/mStgQgaDtWuEOp2HNgeb714kxyre8CfKmYeT+uNd67RyyI9w3lBSI8oG
v3e7tssx98eK59QeI64qimzjNfL/vV1GMIsH6MRLcvwFsME3kA==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#49"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj3tQywEAx38bWyqP1HoQNj2tov1+y1GxfUMrStJD0ajtKolUhHC6XElc
nJsuXVt0SUe7pvK48zh2eWwel27ePeZKiFYOlej8fnK+d9/7/ve5z3e+Mjsm
jU0QBDnRf6ug4kU+l9ylqszKXffKXKVrDhb5R+rZcKucd9WtfExaM9u/20Nv
j/rhobp1TlZQ79PUugvm4AjnfkNArB0ivkwOmKl3A/fRDtPLCh6Mlbcq7HK8
cce6n7Mz0wWysF2/Zgj80B9kckwzu6L3AE9nlSFC3xdPwpHgQ2DKTrbSU9BJ
yPfBgwIkC5/YWbksxixDfVZcsBvOFnq1cnOW4PK5aVnuO93R9frwbq4xEA7z
t8x7V+oB1wk9rmAZXvi0qUJOemJTydJXnHwJGsp4snOFXng69OgeOwNwGHr2
fUzhDVuZ5x62fgXM9TbGmLEFaPhmWsu2rIRXcKOTR5MQa6oLvdguoTA8/JBV
J/dB6XDna1ZOGH5z7ANrz/hiQc2xJpYmHAUt6dp2bz8YIpYcYxlX49MIM+Dc
5AfueVUQSxCJan7mxa3ahaiPggMrci0eU5s1RfxFCP09OEDkR4Ev+4H3Jxah
9WJdFJERjfyeS9FTk/yhKhgPIuhodJT1S07c9IciLsabKF+PzKTU4h4bEYh/
0ccgUWrIC0gRof3lBgsTH4uuVtOob6kINdrGN8xALNL3V+Ue0okgTUhqZpzj
oZWU1KhGRZi+sKWaaYwH2ZFcXeRCwsy2Ps6s3ABJcXqRMJBEge66kslOgHzS
85GuvSSiiqetYziJGAyt0tmWk5i7KTWYUSeip/1dH9lE4jbHnscYNqL7yswZ
6g8kxuVZD2i+HG25eWpfGTXx+34zfU2OPEstZ5ucQtUU17N0xGaMXmjsGsml
EHTVuJfetwWrezovz1VT/3lbUyD+XKLb/pFCXc5yG6YlBRsdbzoP/aRQ1plB
MH9ScONr+IvhKWLIm+9a6NMKzNbZBpwXirFqzkAvbVbArNV4xAWK4XfU6S0t
VOKz9aypmnAxeN9DntF5SjCq4+MFCeL/vneVODViaSPSxfgLWC1TIQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#50"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAYTJVMCqpIz8bntxw7rQcP0p7gy9M
wAJAHwKPFJgw+z+gGi/dJMASQMur4ge1AAtAS+oENBHAIkAPl2adM6MaQCDS
b18HwDJAgM8QArvvKUALRiV1AsBCQKGVGJnHozhAqvHSTQLsQ0ADQXf+ZAQ6
QEqdgCYCGEVAAaavJ6hgO0CI9NvXAXBHQB67dklxDD5ABqOSOgEgTEB+vRMd
l5lBQAAAAAAAwFJAlg/m621mRkDQ1Vbs/1VTQAUTIaM5+EZAoKut2P/rU0DE
FPgNYohHQD9XW7H/F1VAydhV8eSjSEB+rrZi/29XQEf3mhFuyEpA+1xtxf4f
XEClCnbd8cxOQMoyxLH+tVxAq2xoy4NHT0CaCBue/ktdQAg8CUrSwE9AOrTI
dv53XkAOIvZi3FdQQLwFEhT/Z2BA8vqpYpg/UUCkcD0K/7JgQKrhOIIWeFFA
jNtoAP/9YEB7l6N2BbBRQFyxv+z+k2FAHg2wST4eUkBEHOvi/t5hQEzF2kOM
VFJALIcW2f4pYkC04HVKU4pSQBTyQc/+dGJAG6UfUpW/UkD7XG3F/r9iQFoc
1kVU9FJA2xu9yw==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#51"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAYTJVMCqpIz/RFDHGiS4eP0p7gy9M
wAJAemuErB9w/D+gGi/dJMASQNJxLpcUGQxAS+oENBHAIkBh57zsaXEbQCDS
b18HwDJAxBK+yqE4KkBfKcsQBxg1QJ27UySXLC1AnoAmwgZwN0B2Zz9/Cwgw
QBsv3SQGIDxAw+GKc+jTMkALRiV1AsBCQCT1DRPaEzhAqvHSTQLsQ0C1ikRB
2FI5QEqdgCYCGEVAPCq/5XKLOkCI9NvXAXBHQPBU5j8+6jxABqOSOgEgTEAN
4QAIhrFAQAAAAAAAwFJARNqJYayxREDQ1Vbs/1VTQNJT/japJ0VAoKut2P/r
U0BZPiOlnJtFQD9XW7H/F1VAhmDRYZx9RkB+rrZi/29XQLHFppNaK0hAToQN
T/8FWEDNSoLRapJIQB1aZDv/m1hA/eaXBtH3SEC8BRIU/8dZQP5NJPXHvUlA
+1xtxf4fXEAW6F62ajdLQMoyxLH+tVxAc7Bx8TeSS0CaCBue/ktdQDQZRpmk
60tAOrTIdv53XkBnL5fKe5pMQLwFEhT/Z2BAPI7EHPLoTUCkcD0K/7JgQHXA
Ce6MOU5AjNtoAP/9YEDfoCOrAIlOQFyxv+z+k2FA56DS3oskT0BEHOvi/t5h
QBm4k2CvcE9ALIcW2f4pYkBdYp3nw7tPQBTyQc/+dGJAWYRKiOcCUED7XG3F
/r9iQJoXXShrJ1BAFYjoQg==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#52"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAYTJVMCqpIz9qv14AUvIUP0p7gy9M
wAJALuEhmzrD8z+gGi/dJMASQLzCeGA+jQNAS+oENBHAIkD9v5314SQTQCDS
b18HwDJAmJi0MsxgIkBfKcsQBxg1QKq7bw18eCRAnoAmwgZwN0DTkG/OqoUm
QBsv3SQGIDxAdajUT7uBKkALRiV1AsBCQPykU8BBBDFAqvHSTQLsQ0DB0sZP
DuoxQEqdgCYCGEVA8Qi0M63LMkCI9NvXAXBHQH1cHpbUgjRABqOSOgEgTEAE
t6+7tMM3QAAAAAAAwFJAv/x5Vj+kPUDQ1Vbs/1VTQGqcgQfGUj5AoKut2P/r
U0CTqimAh/4+QD9XW7H/F1VAyLw6o/4mQEB+rrZi/29XQJh877E0Z0FA+1xt
xf4fXEDOrDB/u7BDQMoyxLH+tVxAu8VhU0D1Q0CaCBue/ktdQAgpBxfOOERA
OrTIdv53XkDyw54DGb1EQLwFEhT/Z2BA4CMTyPS6RUCkcD0K/7JgQEKdYYBK
+EVAjNtoAP/9YEBqF0nbzjRGQFyxv+z+k2FAMpxuAHSrRkBEHOvi/t5hQPEi
Tcmc5UZALIcW2f4pYkCCbdEzBB9HQBTyQc/+dGJAVmQh/q1XR0D7XG3F/r9i
QH1O0c2dj0dA5Y7WxQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#53"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAYTJVMCqpIz8r4er4XG4iP0p7gy9M
wAJAoiPaCxFvAUCgGi/dJMASQPqqx7eIShFAS+oENBHAIkBH1pDHbwMhQCDS
b18HwDJA5uSjpfl7MEALRiV1AsBCQDDIqvjICT9AqvHSTQLsQ0AnS7KKh15A
QEqdgCYCGEVAJuTz3wY1QUCI9NvXAXBHQMyikfLe2EJABqOSOgEgTEB8GGUz
uv1FQAAAAAAAwFJAISqme+TIS0DQ1Vbs/1VTQMYr9pltd0xAoKut2P/rU0DZ
nizbtCNNQD9XW7H/F1VAwZsZC6p1TkB+rrZi/29XQOSP98kqgFBA+1xtxf4f
XEC1rS2uidxSQMoyxLH+tVxAaqs1ghMkU0CaCBue/ktdQIYZ87DGalNAOrTI
dv53XkD6NfYJuPVTQLwFEhT/Z2BAunEcXyoCVUCkcD0K/7JgQNHL8WFjQ1VA
jNtoAP/9YECS8yF24YNVQFyxv+z+k2FA6XGJPbkCVkBEHOvi/t5hQIdje/oY
QVZALIcW2f4pYkD+pjLdyX5WQBTyQc/+dGJAaa7swM67VkD7XG3F/r9iQBeS
D3Eq+FZA7R7JBw==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#54"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAYTJVMCqpIz/IXjsW4eIaP0p7gy9M
wAJA6ws1NKpO+T+gGi/dJMASQFvBLb3n+ghAS+oENBHAIkCnOmnxAFoYQCDS
b18HwDJAorawx3QvJ0BfKcsQBxg1QFphLi9lxilAnoAmwgZwN0DPd3Z11U0s
QBsv3SQGIDxAoszbyiqYMEALRiV1AsBCQNb4BpCzKDVAqvHSTQLsQ0CsXQ/o
DD02QEqdgCYCGEVAYWNkl31LN0CI9NvXAXBHQDlkQftiVzlABqOSOgEgTECq
E2HuBDA9QAAAAAAAwFJAv9FrscQCQkDQ1Vbs/1VTQJdfp9YLZ0JAoKut2P/r
U0Cu7xxEfslCQD9XW7H/F1VA93ZBZReJQ0B+rrZi/29XQPa5Hk5j9ERAToQN
T/8FWEB3LKm1UEtFQB1aZDv/m1hAlWlNdMOgRUC8BRIU/8dZQFmKEPpeR0ZA
+1xtxf4fXEAY3JICZ4RHQMoyxLH+tVxAMU3MZ3rQR0CaCBue/ktdQATzfodX
G0hAOrTIdv53XkAGD9InjK1IQLwFEhT/Z2BAKRcG2Z7ESUCkcD0K/7JgQLnL
mbnBB0pAjNtoAP/9YECHPJYx40lKQFyxv+z+k2FARLcFsjjLSkBEHOvi/t5h
QL/Zw7R3CktALIcW2f4pYkADP5xGy0hLQBTyQc/+dGJAI7bAgDiGS0D7XG3F
/r9iQOzc+FbEwktA8FLkkg==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#55"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAYTJVMCqpIz8RJagGhyAcP0p7gy9M
wAJAl5pX/Q5w+j+gGi/dJMASQAVBHhtaDwpAS+oENBHAIkDp/O0ZS1YZQCDS
b18HwDJABMePU30BKEBfKcsQBxg1QPE9YIcLqCpAnoAmwgZwN0CnzXOfOz0t
QBsv3SQGIDxAUU/9nQ0bMUALRiV1AsBCQPpuC6YouTVAqvHSTQLsQ0DBMEZ2
VM82QEqdgCYCGEVAvQiA4grfN0CI9NvXAXBHQLYEaKn46zlABqOSOgEgTEDl
r7zadsE9QAAAAAAAwFJA3ApBaZxAQkDQ1Vbs/1VTQK06TJ38okJAoKut2P/r
U0CJzzSwbwNDQD9XW7H/F1VAigFGRce+Q0B+rrZi/29XQAlzE4KsIEVAToQN
T/8FWEBuELwxGHVFQB1aZDv/m1hAZz39cPvHRUC8BRIU/8dZQJDk25xSaUZA
+1xtxf4fXED1qGNgVZtHQMoyxLH+tVxAG/kXHpLkR0CaCBue/ktdQEWc9nWR
LEhAOrTIdv53XkCuPheo97hIQLwFEhT/Z2BAmocLtDHESUCkcD0K/7JgQMsB
tuFUBEpAjNtoAP/9YEDzb2e6c0NKQFyxv+z+k2FAy8j+zby+SkBEHOvi/t5h
QAdzosDy+kpALIcW2f4pYkBdO3/ROzZLQBTyQc/+dGJArOLWa51wS0D7XG3F
/r9iQK3X7NAcqktAHrfmoA==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#56"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAYTJVMCqpIz+ThjK4fFAaP0p7gy9M
wAJAh8Xdegq3+D+gGi/dJMASQEaNyiAAWAhAS+oENBHAIkC9KvlRgqIXQCDS
b18HwDJA3J9Xop1VJkBfKcsQBxg1QEsX0KEMyShAnoAmwgZwN0AR/9HXrysr
QBsv3SQGIDxAqKUPhDPBL0ALRiV1AsBCQK0djbzgHjRAqvHSTQLsQ0Bl8L1p
1B01QEqdgCYCGEVAFQ1V5p0WNkCI9NvXAXBHQNrQNt2R9jdABqOSOgEgTEBy
IZeOjXU7QKZOQBMBTE1A9S3TGtRIPEBF+u3rAHhOQPeEBipyFz1AwqikTgBo
UEBFxD0qT6c+QAAAAAAAwFJAVWRt4LXKQEDQ1Vbs/1VTQG0kWyutI0FAoKut
2P/rU0DrbFgD13pBQD9XW7H/F1VANsP9VfkjQkB+rrZi/29XQDyGx/7bYkNA
ToQNT/8FWECkoXtdz65DQB1aZDv/m1hAUMy4U1b5Q0C8BRIU/8dZQFX5S0BH
ikRA+1xtxf4fXEAiow2wupxFQMoyxLH+tVxA8aMlNVPeRUCaCBue/ktdQJCz
XfPGHkZAOrTIdv53XkCWzWk1XpxGQLwFEhT/Z2BAoE6NkBCLR0CkcD0K/7Jg
QNYFNZVJxEdAjNtoAP/9YEDeMsLYk/xHQFyxv+z+k2FAUSi5FXNqSEBEHOvi
/t5hQLcCxBYToEhALIcW2f4pYkDaoadp2tRIQBTyQc/+dGJAuUlnJc4ISUD7
XG3F/r9iQIfPhzjzO0lAHLX7oA==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#57"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAYTJVMCqpIz87tJd8QoshP0p7gy9M
wAJACXDw19SBAECgGi/dJMASQI5/oVmYSRBAS+oENBHAIkBzmgjJXLsfQCDS
b18HwDJAT7yzYL0rLkBfKcsQBxg1QDUF3hvTwzBAnoAmwgZwN0DMy0+OdWcy
QBsv3SQGIDxA7+CkGjiRNUALRiV1AsBCQBQymd/zdztAqvHSTQLsQ0AhlIuF
utw8QEqdgCYCGEVAk3+c6bA5PkCI9NvXAXBHQKuyQBCXbkBABqOSOgEgTEAf
WYNcb+hCQAAAAAAAwFJAPs6ArrBLR0DQ1Vbs/1VTQD2FgUA2zEdAoKut2P/r
U0B7VaCwVkpIQD9XW7H/F1VAulFjeKs/SUB+rrZi/29XQAMIJ4BaEEtAToQN
T/8FWEDRvCSRcX9LQB1aZDv/m1hAzU37bJvsS0C8BRIU/8dZQOCca/dZwUxA
+1xtxf4fXED69vgtzFVOQMoyxLH+tVxA9v/ZsMa2TkCaCBue/ktdQJIlcJMu
Fk9AOrTIdv53XkBM1S0FbdBPQLwFEhT/Z2BAdFKr49CZUECkcD0K/7JgQBcD
/mODxFBAjNtoAP/9YECklJ5sj+5QQFyxv+z+k2FAKdd/EsNAUUBEHOvi/t5h
QNf9N+bxaFFALIcW2f4pYkBHJ0mxiJBRQBTyQc/+dGJAPfI1zIq3UUD7XG3F
/r9iQDMZjnb73VFAJLHrRw==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#58"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAYTJVMCqpIz8IAW4sB7cTP0p7gy9M
wAJAFygcgCaO8j+gGi/dJMASQD8erDRHUAJAS+oENBHAIkAzf15bdNkRQCDS
b18HwDJAbdc/Zhn9IEBfKcsQBxg1QNbzLDJ14iJAnoAmwgZwN0ADzYUMZLwk
QBsv3SQGIDxAyCSajI5PKEALRiV1AsBCQNzHwJwn/S5AqvHSTQLsQ0DHs6xv
qEgwQEqdgCYCGEVA9rc4D2QOMUCI9NvXAXBHQLvBTO9cjTJABqOSOgEgTEDd
NrAn3lw1QAAAAAAAwFJAjXn9025aOkDQ1Vbs/1VTQJX6TtDQ7DpAoKut2P/r
U0Btmp/zgnw7QD9XW7H/F1VAgXm7EiKUPEB+rrZi/29XQO9CuS4wpj5AToQN
T/8FWECsb3D8/CQ/QB1aZDv/m1hAWAYJt56hP0C8BRIU/8dZQPRKf3hMSkBA
+1xtxf4fXEBqsVF1azFBQMoyxLH+tVxA1ORpkt5oQUCaCBue/ktdQKFuxX1u
n0FAOrTIdv53XkAQN5k4+glCQLwFEhT/Z2BAgyI/YU7VQkCkcD0K/7JgQAYf
O1o2BkNAjNtoAP/9YEAgJJP/YTZDQFyxv+z+k2FAmgwWDpWUQ0BEHOvi/t5h
QK18zYekwkNALIcW2f4pYkBhZEfRB/BDQBTyQc/+dGJA7McOqcIcRED7XG3F
/r9iQKUlF7LYSERADsfhXg==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#59"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAYTJVMCqpIz+bPEAzaLYWP0p7gy9M
wAJAzppwrIVf9T+gGi/dJMASQCanM11rFwVAS+oENBHAIkC2InIJAo0UQCDS
b18HwDJAsHHTPYuMI0BfKcsQBxg1QP6wUEpUuiVAnoAmwgZwN0B0ACw62Non
QBsv3SQGIDxAPjQQaer1K0ALRiV1AsBCQFPnj4QC0DFAqvHSTQLsQ0AqVQqL
zrcyQEqdgCYCGEVATTLcgpGaM0CI9NvXAXBHQKHT3LegUTVABqOSOgEgTEA8
SJRpBYo4QAAAAAAAwFJA2t/xbEVAPkDQ1Vbs/1VTQMaTSiCw5z5AoKut2P/r
U0DB3zmkAYw/QD9XW7H/F1VAJ8rny9dlQEB+rrZi/29XQNa6kAe1lEFAToQN
T/8FWEAY1Q4UIt1BQB1aZDv/m1hAmDGqo08kQkC8BRIU/8dZQMgY/sQMr0JA
+1xtxf4fXEDAceh347ZDQMoyxLH+tVxARZ3rGyv2Q0CaCBue/ktdQNnEY5tt
NERAOrTIdv53XkCNSDUI/K1EQLwFEhT/Z2BAtvIj5uGVRUCkcD0K/7JgQIet
QDClzUVAjNtoAP/9YEBQVMVLkARGQFyxv+z+k2FAN+iWUPFvRkBEHOvi/t5h
QGk6/IpwpEZALIcW2f4pYkCVRKw7KthGQBTyQc/+dGJAhXN5tSILR0D7XG3F
/r9iQJlEJStePUdApB3lBw==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#60"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAYTJVMCqpIz8zM7Kx6iASP0p7gy9M
wAJAA6zybUgw8T+gGi/dJMASQI4tZ6+HFgFAS+oENBHAIkCw19rtHuQQQCDS
b18HwDJAFFcZWs6CIEALRiV1AsBCQMLMPj6XmS9AqvHSTQLsQ0BuHTtulrIw
QEqdgCYCGEVAQ7DxwO6VMUCI9NvXAXBHQGUrL41vVTNABqOSOgEgTEDcN9+S
u7g2QAAAAAAAwFJAB1XG0C0YPUDQ1Vbs/1VTQBp9sz0P2z1AoKut2P/rU0Dy
9aQSB5w+QD9XW7H/F1VAx9VpQCsMQEB+rrZi/29XQCaIrlKafUFA+1xtxf4f
XEDjhdPvwjdEQMoyxLH+tVxAwzeBC3GLRECaCBue/ktdQMackjpc3kRAOrTI
dv53XkCU4aVe9IFFQLwFEhT/Z2BAlIJj83LARkCkcD0K/7JgQOEbPzhRDkdA
jNtoAP/9YEApt/14gFtHQFyxv+z+k2FAZbXJEdvzR0BEHOvi/t5hQE4yUuIK
P0hALIcW2f4pYkCf2SOglIlIQBTyQc/+dGJANdEdb3rTSED7XG3F/r9iQO+p
v2m+HElAmTnBxQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#61"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAYTJVMCqpIz/EFQ7x+U8UP0p7gy9M
wAJA2hf4ea008z+gGi/dJMASQI0fyJWJCgNAS+oENBHAIkA2VNwgnLgSQCDS
b18HwDJA7/J+GtocIkBfKcsQBxg1QOyrmBNsNiRAnoAmwgZwN0AvLPcOZkcm
QBsv3SQGIDxAhnLuvmFQKkALRiV1AsBCQEJRCJfmATFAqvHSTQLsQ0A4j2Je
AO8xQEqdgCYCGEVAsOtCI4rYMkCI9NvXAXBHQBlGUqY+oTRABqOSOgEgTECm
yev6QQs4QAAAAAAAwFJABnfUOLFQPkDQ1Vbs/1VTQESwrU8tDT9AoKut2P/r
U0BiVIIwIsc/QD9XW7H/F1VAYALq2tSZQEB+rrZi/29XQFpEUIRC+EFA+1xt
xf4fXEADqx7IjYFEQMoyxLH+tVxAAwoCt0PORECaCBue/ktdQDUlkMQLGkVA
OrTIdv53XkB5cbVQ465FQLwFEhT/Z2BABI0uKSLORkCkcD0K/7JgQM8G8Mvb
E0dAjNtoAP/9YEC9c+g0x1hHQFyxv+z+k2FA/BBpe0HgR0BEHOvi/t5hQJKy
ijbXIkhALIcW2f4pYkDkHD90rGRIQBTyQc/+dGJA/2aKcsSlSED7XG3F/r9i
QMND51wi5khAJhPNfg==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#62"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAYTJVMCqpIz+mREDvxXshP0p7gy9M
wAJAzzLuzeiLAECgGi/dJMASQOnF+019axBAS+oENBHAIkC9+roGTywgQCDS
b18HwDJA7fZknCNnL0ALRiV1AsBCQDr2gNkvrD1AqvHSTQLsQ0D/HA8bvk8/
QEqdgCYCGEVAZeVMh8x2QECI9NvXAXBHQM+4BzVVDEJABqOSOgEgTEAuRkLQ
ohdFQAAAAAAAwFJARowK6je6SkDQ1Vbs/1VTQIZJayeJZEtAoKut2P/rU0AZ
tDsSxAxMQD9XW7H/F1VAcF8fwB1XTUB+rrZi/29XQMK9J1Rj1E9A+1xtxf4f
XEAtvPNmTzxSQMoyxLH+tVxAhsYy8dKCUkCaCBue/ktdQBzMLQSNyFJAOrTI
dv53XkAF9eIbslFTQLwFEhT/Z2BAoKBTbhlbVECkcD0K/7JgQEZC+yWrm1RA
jNtoAP/9YEDuCqBEjNtUQFyxv+z+k2FA+4k66kdZVUBEHOvi/t5hQFjNLOUn
l1VALIcW2f4pYkBpKd8vYtRVQBTyQc/+dGJAUldgYPkQVkD7XG3F/r9iQJQO
Cv/vTFZA6Fy/Tg==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#63"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAYTJVMCqpIz+dVoT09aIXP0p7gy9M
wAJAAJZI0JVm9j+gGi/dJMASQAZanvFwQgZAS+oENBHAIkCph7oxxPsVQCDS
b18HwDJA5Bh6laxzJUALRiV1AsBCQKAsFcZhdjRAqvHSTQLsQ0BTkq+V4J01
QEqdgCYCGEVAsE5TJQHCNkCI9NvXAXBHQAYXwdJhADlABqOSOgEgTEDUFUuK
J1c9QAAAAAAAwFJAhulMOf+7QkDQ1Vbs/1VTQJQ4PHDnN0NAoKut2P/rU0Da
2AhPhLJDQD9XW7H/F1VAz36fkfCjREB+rrZi/29XQOqrazQdeEZA+1xtxf4f
XEAqSQWfxulJQMoyxLH+tVxA+WrZ8y1TSkCaCBue/ktdQHNgfyiRu0pAOrTI
dv53XkCvA0MYWolLQLwFEhT/Z2BAx+zkeVoZTUCkcD0K/7JgQBrpXbsFe01A
jNtoAP/9YECIA17myNtNQFyxv+z+k2FASYiJx6OaTkBEHOvi/t5hQK8ne7/B
+E5ALIcW2f4pYkBvXi8lBFZPQBTyQc/+dGJAEDiK9W2yT0D7XG3F/r9iQBOI
zw8BB1BAI5q//Q==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#64"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAYTJVMCqpIz8GwVIyt0ETP0p7gy9M
wAJAxMeAXB5A8j+gGi/dJMASQBad53/SIgJAS+oENBHAIkAxg7xliOkRQCDS
b18HwDJAC6DgCDJ7IUALRiV1AsBCQII41/nDrTBAqvHSTQLsQ0DnLqSGvp4x
QEqdgCYCGEVAMzsJNP2MMkCI9NvXAXBHQGUbnAt2YTRABqOSOgEgTEAug13y
kOs3QAAAAAAAwFJAqSgy8n6NPkDQ1Vbs/1VTQDga1VvAVz9AoKut2P/rU0Am
j5Se8w9AQD9XW7H/F1VAscXoVAPVQEB+rrZi/29XQO2acs01U0JA+1xtxf4f
XEBcLW2wIyNFQMoyxLH+tVxAEHh6MDl5RUCaCBue/ktdQB/gGhZ7zkVAOrTI
dv53XkCrOkElkHZGQLwFEhT/Z2BAP8uKsVC9R0CkcD0K/7JgQOCSmigbDUhA
jNtoAP/9YEC4jXi+KFxIQFyxv+z+k2FA1EK4qBf4SEBEHOvi/t5hQILn2A/+
RElALIcW2f4pYkD7cNK7MZFJQBTyQc/+dGJAEEXwGLXcSUD7XG3F/r9iQBha
VIiKJ0pAAi29oA==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#65"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAYTJVMCqpIz+J+Xm/WQwcP0p7gy9M
wAJAymuAL66k+j+gGi/dJMASQJdo3Og4iQpAS+oENBHAIkAQwOxGSFMaQCDS
b18HwDJAmlMKFBbqKUALRiV1AsBCQBb2TRNSITlAAAAAAADAUkA/4IAFMrJH
QNDVVuz/VVNAPSdvF4hZSECgq63Y/+tTQL6SlMKu/0hAP1dbsf8XVUApnu+x
ekhKQH6utmL/b1dAtGtlFmTMTED7XG3F/h9cQN0Qol0J0FBAyjLEsf61XEBB
pU7w7RpRQJoIG57+S11AIP65AFJlUUA6tMh2/ndeQJXzCr2d+FFAvAUSFP9n
YECIPH2hZhlTQKRwPQr/smBAhpy8P2pgU0CM22gA//1gQAjKDjL3plNAXLG/
7P6TYUAZGBOxsTJUQEQc6+L+3mFA95BLg+F3VEAshxbZ/iliQLoLwzSfvFRA
FPJBz/50YkALqPXe6wBVQPtcbcX+v2JASNDEl8hEVUArfqW8
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#66"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAYTJVMCqpIz8DdvtnKXoSP0p7gy9M
wAJAx67cElp68T+gGi/dJMASQG5xylbZVQFAS+oENBHAIkA6Z7HhzQ4RQCDS
b18HwDJA1169HGyHIEALRiV1AsBCQKZDo7TTIC9AqvHSTQLsQ0ABfj30xWow
QEqdgCYCGEVARffNDP5BMUCI9NvXAXBHQA5EM6BG5zJABqOSOgEgTEBRFlW0
/Q42QAAAAAAAwFJAxOQRA8TfO0DQ1Vbs/1VTQCcUWJP9jjxAoKut2P/rU0D5
l56I9Ds9QD9XW7H/F1VAFr7H10aPPkB+rrZi/29XQH7ZRZBRjkBA+1xtxf4f
XECE/gUtTe1CQMoyxLH+tVxAxJxopyg1Q0CaCBue/ktdQO3aVwwtfENAOrTI
dv53XkB/XfV/vwdEQLwFEhT/Z2BA1ZI+vW4VRUCkcD0K/7JgQBiIw971VkVA
jNtoAP/9YEAD5EWgwZdFQFyxv+z+k2FArM6CbjMXRkBEHOvi/t5hQATnNIXf
VUZALIcW2f4pYkAQssdQ3JNGQBTyQc/+dGJAVgetrCzRRkD7XG3F/r9iQPJH
h2TTDUdATeTBXQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#67"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj39QUwUAx9+ebINtb4+MGxyzc4kMUEKONGUK7wvCxG1MAgc2V/shyeLO
2CkiyuVZWSin/jG75FKI5EeKznOT6LrRbVGdq7iTdo0JCyibd+iQI8/ObPpe
en7vvvf58/v5vmxrqn6bJAhi7dM+o7XAkL/qYgZT/E265MtrbLGm7cM1Oj+J
sPLPhfHuKaYnfc30Sv9SfNsWO3Vn9xxz9sC58xmKZUjdO/rHVHSR0d5NWPuC
fwW8O+cKXHcfMIFO76fJjiwcPBSkVA3/Muotex/RilxsJUn/puY4c+tQyhWh
PR9VbVzCrkyWUQSbzEJ/Ac7MzrqelBEw5/ySLExbh4PePh9Vx0P3EeWowLEe
oUCt+utKEr+H398nCBRiIhxZEc1dAvlTPYFiE4rnKFng4RIYP94wwW8thuzh
ydpEdwLGFn76nrQDM1POkkkjH2J15n7SXwrbdMd7unYBBv8OVpLzm6FME14L
SYTQdB1RkmnlyK4fag0dE+JORR7HK1PjQioMFY+FOPYgEuY5tmB4Nr4yyZ6I
7J7jV3nnKuA6P9I+MZaI69r1x3mBrcjRZmvqVidB0OtU8RQ6vBPt518OJ2FA
jxd5ukp8fvKj2/uUIpT/dy9GtOohLxloiThEGL3QpyfsVShd5WuMPRLBeTiu
ItgqvFpmJvIKxbBur84iPnkdp2OLi+r9YhDP4q+GqPe7/L+iYoyHauc5Qw08
GzuHxtIk6LnkusnFanBK07rOqJGAqdvp5lINEHMZI+yABNJXPF2cy4CFwa4s
U1CCGTKpg9tcC8ulImksLsHhK8M2rqkOk0e9WomGgv4otY3j78A/eSr3+LsU
XjLWb+TO7kDpnpL01U4KI/ylKdz1N+A0Vu2+/xuFuGnPj+xyE+p91ZqrOil+
LvjBzX5lgmTabZLZpfgsUd7Nat+EWPZrv/MDKVRDgRb2wFuwiUvl8SEpRB3L
d7GUGRf7HfLHY1JMmlu2sb1m0JagrCgqfb7XYIE3a8PcF8k0+hxFIs5jQaG+
8nYok8aJiJ3gnljQfHM706iiYXL75tnTVgyzZxpuWGmULYvdYmesqAlN3bvc
TCO3XTbJ5tjgKQ/qE9pppNwvucE227AY9VCRTvr5H58NpLHR+togjf8BRmVl
Lg==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#68"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAYTJVMCqpIz8njmRr9jApP0p7gy9M
wAJAlbZxhWNZB0CgGi/dJMASQL56auZ8tRZAS+oENBHAIkAu4RmGfIclQMiY
u5YQcCdA6lPmivg6KkBGR3L5DyAsQK4ra0MKsy5AINJvXwfAMkADpOsv2oAz
QF8pyxAHGDVApwcQbdxvNUCegCbCBnA3QIGgHbCgSDdAGy/dJAYgPEBjYwBZ
LL06QAtGJXUCwEJAvOe9ew9qQECq8dJNAuxDQFYimYIDGkFASp2AJgIYRUC1
T8fuQ8NBQIj029cBcEdAx1gNoyMDQ0AooImwAZxIQDEw2L5umkNAx0s3iQHI
SUDO9pAbXyxEQAajkjoBIExAbC0NuEhBRUCmTkATAUxNQEuIn7jCxEVARfrt
6wB4TkBN6ZdD5ENGQMKopE4AaFBA7BO7hvM1R0AAAAAAAMBSQIBBgdVl7khA
0NVW7P9VU0AX3iy1WlRJQKCrrdj/61NA1cRcolW3SUA/V1ux/xdVQA7Zj1Hf
dEpAfq62Yv9vV0BMd/VDbNFLQE6EDU//BVhASZ2fasoiTEAdWmQ7/5tYQFuj
CREIckxAvAUSFP/HWUBVMYEWdQpNQPtcbcX+H1xAG9zOGSQlTkDKMsSx/rVc
QBzRbaiUZ05Amggbnv5LXUA8lauycqhOQDq0yHb+d15AmbxfD68lT0C8BRIU
/2dgQK7z35nGB1BApHA9Cv+yYECxeAV4aSNQQIzbaAD//WBAdDJ3YnM+UEBc
sb/s/pNhQAuC0sfPclBARBzr4v7eYUBNLmR2K4xQQCyHFtn+KWJAK/P2nQCl
UEAU8kHP/nRiQKCYFWJTvVBA+1xtxf6/YkB1MUW7J9VQQF+tDmA=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#69"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAYTJVMCqpIz+VYl5VWIUUP0p7gy9M
wAJAy2TTZwYr8z+gGi/dJMASQHU3/bDGxwJAS+oENBHAIkDE07YcDw0SQMiY
u5YQcCdAqvqDpVEiFkBGR3L5DyAsQErVQ2GEEBpAINJvXwfAMkAhnXjsFcAg
QF8pyxAHGDVAnHSr1ryCIkCegCbCBnA3QOLa2UW4NSRAGy/dJAYgPECFQ/t8
1W8nQAtGJXUCwEJA7GzAxP1HLUCq8dJNAuxDQBHd/CcLoS5ASp2AJgIYRUD5
//QYkO8vQIj029cBcEdALYR88G83MUAGo5I6ASBMQL90pDkdgTNApk5AEwFM
TUDzkBUlcAk0QEX67esAeE5AmqHgqw2ONEDCqKROAGhQQN68u2e/jDVAAAAA
AADAUkBEaCNgs2M3QNDVVuz/VVNA/P4WryDSN0Cgq63Y/+tTQHi8X2zYPThA
P1dbsf8XVUAhlAXZig05QH6utmL/b1dAftyKSHWQOkBOhA1P/wVYQLLXSSq5
6zpAHVpkO/+bWEBk7GUO80Q7QLwFEhT/x1lAh3xjT43xO0D7XG3F/h9cQL6f
sq8SNT1AyjLEsf61XEDvEzhrw4E9QJoIG57+S11AsMIlgeHMPUA6tMh2/nde
QA08ZkmWXj5AvAUSFP9nYEDOeO3jG3E/QKRwPQr/smBA/h4+zHSyP0CM22gA
//1gQJQZ9Z+Q8j9AXLG/7P6TYUBGKJU2mjdAQEQc6+L+3mFAnl7eo+ZVQEAs
hxbZ/iliQECpvmulc0BAFPJBz/50YkCaI4Vm2pBAQPtcbcX+v2JAn6UySYmt
QECAfguQ
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#70"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljnss1AEAx+8ujzprnuWdI44rRR47nct974HiHMMhLo8rYquYV2TTtTOy
YRbRFGMe82zk0VBzM/LIxizDDNXSGletEkN+v5jv9t3nv+/nay1PDo6nUSgU
h4MeMs5F6nyu5SyvZWqYSCq15PnlKJ3EKhqIyPCgxOw9Xq2Z07KtygB/KEkF
ZRN0+K9ruOmrbHBmrvhDkNIU488GK/RS7PEwvX32AdMKPr6pO7oMR/ztz8/T
FdmAMZsco61ygbS9L3/T3x4xrPd62ibu4J3Spy80sVCjYA5rpbDhmrNeVP/t
PMwPdFoMLnKbOXE5hs7Q8bHLoKkEcF+MHmUvuqL112wATS0EY/set7/HDX7V
CibNxBsdRg7V8Y/d8XhzaZ6a4ov08q2KZVM2HGoLO6kvrmJbUPgpYYGNMX92
IXX8GrbSduorSz2gVf+EQ2WIEdwbNcj6eRlNEhhSxQFoq5vsNK/gwHv3+wYl
S4K1ATZznu2J4eYGCSUxCJZZphrVd7igHEYVjEb66Kqwzgszc2FqUhqCfx+V
ilxbHmrbOhbIjRDIC1eqjBp44IVHdZHGUkxMGl/IEAO5L/vkZHI4PKxfd2dd
5EOSdzKQ1IzAW72S9oSbfFhG3vIkn0fArrrHglbJxxtNAyNy7DoM1L1rqbt8
7MnujhJWMqgHsjMyuwWYdBnpInplKOjO5OquClB13LyG8L+BL9LiR60nhOD0
jGcS96MhDb0kocuER3u3YzHlygrw3RKiIeUKnXwVi4x9Tb9pMxGKlhIp5H4s
0kp1isq9RJB1DamJsjiEcp/2/FCKILLY+EysxMFupGajpFEEx4LTiwRLDu7O
MV3lOxGMfvOniXQ5Ak3LODNfRUd/h+RQVMyH5Wh54z+c6hVu
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#71"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljmtIUwEAhe9Gc8tYWzo2mWXL1KmZ2po4dW1n5QOmmzqZWj43DCdkStka
SiIpKFEkBhZZKihSiymGhWHpNEWdPyaWpZiRSrCaBmlBat2b4oHD9+9855ix
THeRThBE0E53aZDoI0OfHlemfhUKKrN5SnVVbUSKnY5qx2B3O2tD2S6MWAyw
e+Ggzj4XbKMj+fs+6SG7P/4sprXmEF6YeDDQzC0X45K9c0Um5CMx6comRxSG
O0n9vCqOEKKZsgKmXQJL5fs0x6QIBSFTXKZPFMzptXmuJn+01gSNeJRHgzYQ
HybSBMB3R+chkuOup+Jqz30xDiQGXqPbz6LEOursaz4J688ZDX31HD7wc9qL
tsKhflwTRPdJgDrAfPlbSCQafi18pJUnYcoRw5mpOAWPjqZYmigFzM2hwPXZ
0+jSwpuWosGX+LFbqiIpErbW3IRFC8nSpPfKDylGnnRqCVMaGorb/lo3o0Ds
xq4Dc3va9M4VjenZzFVKnwH2PPtcUp4M7c9sc5Q7A37sxDbCKYMyK6eXEuhh
E31ydlhjUN390kiVZeHtiRtL3IQ4aOvYqRQjG9x8ltivKw5HLhTFUS3ZcLnV
4QKGHK8ZXjxq/Dxu+m5Ucd7IsZ1bOkYezcX+xojQCb4CDsloL/kiF4HB6YTL
pMBDlm8rmZwH+bCGVvJKgdi+CTN5PR+PGKG2Qb1yb6+4EP4lqVkWBdBZfsaT
el6ItSlLv9UA3F4wEdS/QtQ7JemyOiC3d2iVvGdAi5TjNo8D8Yfdy+RnA1Q9
ruJIFxBWz58nQ4xYb9EJMlkq8NZVTrLCCJ5ged4tVu39HTKisXG49HeiCv8B
JYcAoA==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#72"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAYTJVMCqpIz/8BK2zU/ElP0p7gy9M
wAJAALRl5RmbBECgGi/dJMASQP1jQ34YSxRAS+oENBHAIkCYpk3uYLIjQCDS
b18HwDJA3MfHhnyaMkBfKcsQBxg1QHYNuEt4pDRAnoAmwgZwN0Arotb9W6A2
QBsv3SQGIDxA+mqbUhRwOkALRiV1AsBCQN5yZmelvkBAqvHSTQLsQ0CmCiWC
YZJBQEqdgCYCGEVAywG9tvRgQkCI9NvXAXBHQDXKiPdc70NABqOSOgEgTECg
Miy85NVGQKZOQBMBTE1AqZ2VDBuFR0BF+u3rAHhOQGLWcGRtMEhAwqikTgBo
UED/s2r553tJQAAAAAAAwFJA67SntnXpS0DQ1Vbs/1VTQJk4SizYfExAoKut
2P/rU0C6QE4vOQ1NQD9XW7H/F1VAHIIEIlMlTkB+rrZi/29XQGiB9XmdGlBA
ToQNT/8FWEBsQfWSdllQQB1aZDv/m1hA+if9TiCXUEC8BRIU/8dZQBBUbl8H
D1FA+1xtxf4fXED8qPDX/vFRQMoyxLH+tVxA8EdcYTooUkCaCBue/ktdQFCs
wH+CXVJAOrTIdv53XkBuk9ylUcVSQLwFEhT/Z2BAudeTA5CKU0CkcD0K/7Jg
QEU/FkfWuVNAjNtoAP/9YEC/74dCVuhTQFyxv+z+k2FAudCnjhZDVEBEHOvi
/t5hQD5p6xNgb1RALIcW2f4pYkBMLGa99ZpUQBTyQc/+dGJAdVwhytvFVED7
XG3F/r9iQKvNMlcW8FRA8Tb+Vw==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#73"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAYTJVMCqpIz+SK2cZyQoPP0p7gy9M
wAJAD5yfxQoB7T+gGi/dJMASQNwUdCPgbPw/S+oENBHAIkBhVcNl6VULQMiY
u5YQcCdApGdcuHTDEEBGR3L5DyAsQIRxET+1vhNAINJvXwfAMkD03IvNtmMZ
QF8pyxAHGDVA3lCdblEQHECegCbCBnA3QIJ9d5FkpR5AGy/dJAYgPEDmpJic
0sYhQAtGJXUCwEJAWjbOPac5JkCq8dJNAuxDQCcKh1WGQCdASp2AJgIYRUCM
ZVUWdD8oQIj029cBcEdAxo0TZOEmKkAGo5I6ASBMQNj3SFa2pC1Apk5AEwFM
TUDtNimr53QuQEX67esAeE5AJCPoQHw/L0DCqKROAGhQQOZP2rtYYjBAAAAA
AADAUkA7QyEFb8oxQNDVVuz/VVNAa/pVYukeMkCgq63Y/+tTQEVEkYFVcTJA
P1dbsf8XVUAmnLYHThAzQH6utmL/b1dAT9ZUnZ04NEBOhA1P/wVYQCf4u2mK
fjRAHVpkO/+bWEAMyexC6sI0QLwFEhT/x1lA+BHKxjZHNUD7XG3F/h9cQC3w
161OPzZAyjLEsf61XECXjA3RI3o2QJoIG57+S11AGjIeL8azNkA6tMh2/nde
QM/3wlmXIzdAvAUSFP9nYEDe507bWPY3QKRwPQr/smBAXi6bGYgoOECM22gA
//1gQPg2UGHFWThAXLG/7P6TYUDsYEXjhLk4QEQc6+L+3mFAIkVh6xPoOEAs
hxbZ/iliQJI1U57KFTlAFPJBz/50YkB6YlDSrkI5QPtcbcX+v2JAqf9HKMZu
OUCGCALp
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#74"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAYTJVMCqpIz+0gIm4sKAZP0p7gy9M
wAJAYD2YtUzw9z+gGi/dJMASQDAJi/10dAdAS+oENBHAIkCLwbS0dYsWQMiY
u5YQcCdALceLCwylG0BGR3L5DyAsQA7XcxDxRiBAINJvXwfAMkCoBA596usk
QF8pyxAHGDVA9a8JKt8eJ0CegCbCBnA3QIV+HXBEPilAGy/dJAYgPEAXPzii
UUYtQAtGJXUCwEJAHHYx4clJMkCq8dJNAuxDQCgptKNZITNASp2AJgIYRUCp
ZX36VfIzQIj029cBcEdAlVOMZb+BNUAGo5I6ASBMQEhhpjqYXThApk5AEwFM
TUDxzqrz8gc5QEX67esAeE5AUufI+qutOUDCqKROAGhQQP4shED16zpAAAAA
AADAUkC+yLM8hjg9QNDVVuz/VVNAQ4MloIjCPUCgq63Y/+tTQF9q9qkoST5A
P1dbsf8XVUCz36Yavkw/QH6utmL/b1dARzEZ4iqYQEBOhA1P/wVYQAKnAig0
0UBAHVpkO/+bWED2OSte9whBQLwFEhT/x1lAdy7+VtZ0QUD7XG3F/h9cQK6C
OZIIP0JAyjLEsf61XEBi6X8P925CQJoIG57+S11AzWGQAeqdQkA6tMh2/nde
QOb4hZX7+EJAvAUSFP9nYECQfw5SkaRDQKRwPQr/smBAMgHRomnNQ0CM22gA
//1gQH0yx9d79UNAXLG/7P6TYUA69V4IZENEQEQc6+L+3mFAANO8jkRpREAs
hxbZ/iliQLbEiBN0jkRAFPJBz/50YkC+Sk9k97JEQPtcbcX+v2JA6B2HItPW
RED+7AfK
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#75"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAYTJVMCqpIz+CY5U4uPkYP0p7gy9M
wAJAhectGstP9z+gGi/dJMASQPQEXZDu0gZAS+oENBHAIkCA5hhhgOgVQMiY
u5YQcCdAs3srOsjYGkBGR3L5DyAsQI6PntlPmB9AINJvXwfAMkC2/XVT/Uck
QF8pyxAHGDVA8DwZooZmJkCegCbCBnA3QBOhU8yjcShAGy/dJAYgPECfm/jI
oFEsQAtGJXUCwEJAtSqa1ZioMUCq8dJNAuxDQFiAM0+7djJASp2AJgIYRUB+
VcpFaT4zQIj029cBcEdACO8supS7NEAGo5I6ASBMQF8LQeJzdDdApk5AEwFM
TUAH2pnyYBY4QEX67esAeE5A2D8IaMyzOEDCqKROAGhQQHXclerZ4TlAAAAA
AADAUkCM/Q5iaA88QNDVVuz/VVNAzrXou/WRPECgq63Y/+tTQANW4yg+ET1A
P1dbsf8XVUC2iEDpegY+QH6utmL/b1dAmANKva7OP0BOhA1P/wVYQEWPD5IV
HUBAHVpkO/+bWEAAqZacmlFAQLwFEhT/x1lAYg/8ByO3QED7XG3F/h9cQHjF
sfw4dUFAyjLEsf61XED6OhhKPaJBQJoIG57+S11AIKBFK1HOQUA6tMh2/nde
QFLHtyPFI0JAvAUSFP9nYEBduZATnMRCQKRwPQr/smBAdhT8d93qQkCM22gA
//1gQA3mCUliEENAXLG/7P6TYUC/dQ2RS1lDQEQc6+L+3mFAWgABOLp8Q0As
hxbZ/iliQCvSUbCAn0NAFPJBz/50YkCD/G+co8FDQPtcbcX+v2JAfImZcyfj
Q0BLXwa0
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#76"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljnlIkwEAxbc1DzLR5jDxwLVstph4NNG56d4885oyUWcuj5Ep6NiMtKjQ
jQ7DMihZqOGFS1pSpLmSFByaJAppVmhqElE63MryIgu/L8UHj99/7/cOK9Wy
IhqFQuHsdJeFIZlBx41HxKP9Mu6vu0xx0uWrgSlmGo4Z6O8eCtfEbZ6Bn/3M
DLRvNe0zzNOQvEznHzSzQfqX15VxGRht6L/vqvEHP82xbznRHfEJ57ZcWDxU
Wyt6m2M9wZpS5zuYQ6DRb9QILSzkc8ddHTxCcWW8q7ixh40WLWfIXhOG4NIv
S0aVH7x2dPYsEeQ8mfdsnz+c4o9W0MzRUApdykymADz+PZVKs8WgIyualegR
iKRmLYfmEYcDkuGB0PAg3Fyfm6ZqEmDJ0VbX64Jh33EvgspKgXm9/eeHhRPo
lMKNmpKK6302k1MZH3F/f1gpF6XQxRRTazf4GHpkkFJK0jEs58+ubIeCshuz
DEWdrRHkUhgmP2bZyMwM8GfEjb654WjrejJDWjNQqR6+pBsPhzg7t5s8lImM
usHFUoMAVU9fKEl1NizfYzmpAiGk15zTSDs59HRB/HqDED6nzgjJB3KssqNr
b2wKMWDHYJJvctDrPK1/1iXCP4VqhPBVQOs2XzpJRmIs5HU3YVJAzq79cys9
Ck2OXi1E8mno7pwdM7ZGIaJ3tJK4kAeGVLUhEoj39ooLMKEXZVUFAAZN5H6y
pwDQBBjp6cDtuRIKuV2Adoc83lI5oOgetBH1hRD7+HROPQdiva1fiYVCbFpG
ON/eA7wa908EVwlCVb+iXAOYq5IJ4rwSua+qFmUMyd7fQSVOllS8fRkkwX97
NQrL
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#77"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAYTJVMCqpIz//xZoFPdIXP0p7gy9M
wAJAHRzwME069j+gGi/dJMASQDE1YjiowQVAS+oENBHAIkBZw9iqU98UQMiY
u5YQcCdAKEwwXC6SGUBGR3L5DyAsQIrYeOIUFh5AINJvXwfAMkCIV9p2zU0j
QF8pyxAHGDVAMAjEJgRRJUCegCbCBnA3QLJiuCGTQSdAGy/dJAYgPECTaGs+
o+4qQAtGJXUCwEJAe9VzqCzIMECq8dJNAuxDQAz0OdFWizFASp2AJgIYRUBl
BJfJVEgyQIj029cBcEdAGcl01e6wM0AGo5I6ASBMQMSUQvWiQzZApk5AEwFM
TUAnA2Xgltw2QEX67esAeE5A5x7gdT9xN0DCqKROAGhQQCDgacFijjhAAAAA
AADAUkBAD8UqXJw6QNDVVuz/VVNAPUpMLXMXO0Cgq63Y/+tTQGO3/s9ujztA
P1dbsf8XVUA8BrFziXY8QH6utmL/b1dA4f2yczUkPkBOhA1P/wVYQEg+ygpm
iT5AHVpkO/+bWEDjvrq7ROw+QLwFEhT/x1lAyIeKSFyrP0D7XG3F/h9cQOu+
wpF5iEBAyjLEsf61XEC0zi9JzbJAQJoIG57+S11Anm9Rcj3cQEA6tMh2/nde
QOxb8i6PLEFAvAUSFP9nYEDlxZNdrcNBQKRwPQr/smBAL4eY6JvnQUCM22gA
//1gQMVaMz/YCkJAXLG/7P6TYUAMIEGhTk9CQEQc6+L+3mFACuFTW5JwQkAs
hxbZ/iliQFROzUI3kUJAFPJBz/50YkA+rZ++QbFCQPtcbcX+v2JAyQJ5DLbQ
QkCaDwRg
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#78"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAYTJVMCqpIz+r9DISdkMeP0p7gy9M
wAJAYIRuK6lg/D+gGi/dJMASQF5m1kcy6AtAS+oENBHAIkBf2yDMLQMbQCDS
b18HwDJAQAEdD61iKUBfKcsQBxg1QMkcZ4OQIixAnoAmwgZwN0Cuebuk4M0u
QBsv3SQGIDxAiaTdQST1MUALRiV1AsBCQGhDYi4PqDZAqvHSTQLsQ0BusIAN
2sA3QEqdgCYCGEVAOaJDq0vSOECI9NvXAXBHQNxlTQJD4DpABqOSOgEgTED3
XGSjna8+QKZOQBMBTE1AmYET1daUP0BF+u3rAHhOQPZSb+dQOkBAwqikTgBo
UEBt+6ESVxJBQAAAAAAAwFJAuLUfDLilQkDQ1Vbs/1VTQO9ppVUMBUNAoKut
2P/rU0BR52CBUGJDQD9XW7H/F1VAHe34nesWREB+rrZi/29XQH8egpAcakVA
ToQNT/8FWECz3gEPpbpFQB1aZDv/m1hAKV6o8pIJRkC8BRIU/8dZQAXLIwXP
okZA+1xtxf4fXEACGC/I/8NHQMoyxLH+tVxA0uN1fO4ISECaCBue/ktdQE3d
c6qXTEhAOrTIdv53XkB8AgLUPNBIQLwFEhT/Z2BAJDrwr7jJSUCkcD0K/7Jg
QAnKiPZjBUpAjNtoAP/9YECtmoXSCEBKQFyxv+z+k2FAv30o4lmySkBEHOvi
/t5hQETrCdMS6kpALIcW2f4pYkBMKoLY3iBLQBTyQc/+dGJAd0kezcNWS0D7
XG3F/r9iQAWBdFrHi0tAKwr2XA==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#79"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljnlIkwEAxbe1o7TySPPKnNdEk5ZTM91sb9u3zWMuj9a0LHUYWXgMKRVE
HZVUIAQZFUlroFYeFWZJkeKHKzJNDM1miilGIW0RRglmfl+KDx6//97vBRrK
Mk+yGAyGYK3rLBDp9kW0BUsVZlF0p9VLmlJ9QaghWRhpb9g7LlmSWnyFMyGk
O6TdGcyMcQ5Sv7Nj3MggdLLm9FPOnhi89fKGqzEMLuwKYd+kD1Tq8mUXfiTk
+5Ufk6p3gz9WlscjRSjNGtEvtAQjL3zYlecdi4jyWLOtNxRmk2CAa4xDeXLt
eZM1DH5rOi5fggZhwAuxZQ+cVaHnWKQcy6ftnA5dFNoXx9JYDgXEMdVevQIR
Uu6YBCxvJWq28HgTiyJc/j1tYxrVcFhUHP/KGHCbryUw+Rp4lup6pEQc7mmx
g6lJQ/PsN8dXexyUf3/YGVVaEJlLelw9gIEHLVpGUTpaV6+097yNB2M9ZCai
ZNmmPjcJ3k8ccdC6LNTAQYY3SWDpeDhJ27NglaWmFwYmQqo/1kV76VA/NPWu
O+Qgah/1GOgyPbaqk5UDbEB7cdshmpMNsd6z2/cg4H+0UEw3ZeNuvf1nQgXQ
y3H3oN/koG5i1rY8D6zklrymAnLBqGNfL34sw5DoVRf1LBfOw42jzDkZbm/2
M1Opx8HlEinNLnIkPB2soCpPoPX+B5+wYvnG3ql82EhNzoKvAi3GRCf6ST6e
S2ZsNwkFGqaLGPRqPvwr/xXWlyiQ29XvoBoLYA2KNwr7FCB22eepzwUwVhVN
//miQOSlnZ+ocAMSQ85Eb3ci4PFLNkqdNSDJoGbVCImNv/0GbOpcaVMdJvAf
s/v/KQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#80"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAYTJVMCqpIz/aRgytyAIhP0p7gy9M
wAJAX0vbKSHy/z+gGi/dJMASQIU3/xtPdQ9AS+oENBHAIkBYVjTmHIceQCDS
b18HwDJAO66O1MnSLEBfKcsQBxg1QJPbUf3f+i9AnoAmwgZwN0A+1ZxsgoYx
QBsv3SQGIDxAQwEO1Hp5NEALRiV1AsBCQM+b8hWv7TlAqvHSTQLsQ0BGnhCq
GDU7QEqdgCYCGEVAcpX9Q310PECI9NvXAXBHQCzshgde3D5ABqOSOgEgTEAa
M0OO56tBQKZOQBMBTE1AueDD1j4zQkBF+u3rAHhOQIOHfTeRt0JAwqikTgBo
UECLditzjLdDQAAAAAAAwFJA4EI98GWXRUDQ1Vbs/1VTQH6ESqUnCUZAoKut
2P/rU0BdLTzulHhGQD9XW7H/F1VAhNBiDbpQR0B+rrZi/29XQDcE7m7+50hA
ToQNT/8FWEA23eE88khJQB1aZDv/m1hAUzGkNhCoSUC8BRIU/8dZQH6ReAz/
YEpA+1xtxf4fXED/NXCV/L5LQMoyxLH+tVxAmRtYzpkSTECaCBue/ktdQL42
Z1u+ZExAOrTIdv53XkDjsA+HxARNQLwFEhT/Z2BA38aWbcQ0TkCkcD0K/7Jg
QLlE2iKefU5AjNtoAP/9YEBNIk8+RcVOQFyxv+z+k2FAFFXNaBlRT0BEHOvi
/t5hQHe/k79UlU9ALIcW2f4pYkAqnOIQethPQBTyQc/+dGJAZGdJ+UcNUED7
XG3F/r9iQMD71GLOLVBA7lj6og==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#81"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwljmtIUwEARq/LaSjSXD6mUzeXSspqNpWZ0+1bUwud0zZ8b+qG6SCGC3oo
QhhbODJCCsJcmqFG0zIUk6hgSzSlB6kgFst+lCG4DdywsNe9KX5wOP8OX6K+
RXWGRhBE0g671gnL09Psh6RSi40XXMOUFrWbBQonDT6raNUv9kkHYgWrSU4m
vIz3VNovAsUbgZnhTh7i6f0hT9oY4C611Ac7hVDNhydQHA7qU98ygllZOOwe
6ZvJT0R/R8p0kEkEajCGNuPlgb2TC+LmQjA3oVUkpCC0MPkCzXkCgaa/5DE6
HyO+pRKaR44YRqTR3nwERX0dKTRWAb57z7KuvDoK65ZrJcB0EvxzzLWCsXQE
Dd7MCeAqsPho6s4mOwMPlDgYoChB3hZLMDyWgYLfXjfRqoTAfI0RI8nE9MMh
JWEog84eFz2qzgKxO6cKty285wKNCAvLFR6qXI3tbvXpeysiDIw+/ki51dBG
vavtKsuGtLJ2nIoux+TVtM/J4uO4PDalp1oqERbp7q34kQOlJayUoldhzbD9
+n6dGPE1jWLKVoX1hZ4K36wYL+nMCGquGvXGA57lG7n4ozHOkhwNXtB71nmh
ErwRzoyTTzWo1mbz9jVJ0Luf3U8WazG70e0vdkiQMzl/kbxUB6/L3yQzSvd6
zQ0IYUrk67XAkCkvhJpogKrU1WUxA9ddBoL61wC/otHVPgJoxh0e8pYOrZtl
PdafQH6c+yv5RQd526lnw2wZ+J1Rn8hUPe7aPIV8yBDhl30gz+vhMSkWOY2y
vb8OPb7xY+fNnTL8B/RQ9u4=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#82"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAYTJVMCqpIz8lA9iHbrARP0p7gy9M
wAJATPApBfqU8D+gGi/dJMASQDyW6FtkTQBAS+oENBHAIkCXFPo30ooPQMiY
u5YQcCdA3/P3SOJlE0BGR3L5DyAsQJnk7KwS6RZAINJvXwfAMkDTSFZt+Jwd
QF8pyxAHGDVAP3rN1hRoIECegCbCBnA3QH6od3+G9SFAGy/dJAYgPEBQ3vy/
Du4kQAtGJXUCwEJAkQ5vjs1iKkCq8dJNAuxDQO3F0qKGqCtASp2AJgIYRUD9
YTc7nOUsQIj029cBcEdA+2w6yTNHL0AGo5I6ASBMQEtGQyFE2DFApk5AEwFM
TUCpbGgb3lwyQEX67esAeE5AFi2SI0reMkDCqKROAGhQQAEpWbkK2DNAAAAA
AADAUkBc0K3aBqo1QNDVVuz/VVNAP+IslRQYNkCgq63Y/+tTQFFLZeS5gzZA
P1dbsf8XVUCZ6iNxGlQ3QH6utmL/b1dAQiKlDjDbOEBOhA1P/wVYQMC1isj9
NzlAHVpkO/+bWEAZPSGK7ZI5QLwFEhT/x1lA/wtTs2tDOkD7XG3F/h9cQH1i
Z3pQkDtAyjLEsf61XEAtaXuXoN87QJoIG57+S11AuBgnpHYtPEA6tMh2/nde
QEvTaQPexDxAvAUSFP9nYED0aBGip+M9QKRwPQr/smBAqQRv6TcoPkCM22gA
//1gQBc8RAWYaz5AXLG/7P6TYUDGK8vQ5u4+QEQc6+L+3mFAxgKxY+QuP0As
hxbZ/iliQJCYF5fPbT9AFPJBz/50YkAIdv1Ar6s/QPtcbcX+v2JAyWa5/Yno
P0BLAAd0
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#83"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAYTJVMCqpIz8v8oo+iU8fP0p7gy9M
wAJAaoH6uOVT/T+gGi/dJMASQKcaltKuzwxAS+oENBHAIkDznx84EdUbQMiY
u5YQcCdAw8qWPcsaIUBGR3L5DyAsQA+w6PQ9MCRAINJvXwfAMkB2Kklm0Q8q
QF8pyxAHGDVAlHhdwE3cLECegCbCBnA3QEr0G5m0ki9AGy/dJAYgPED8XGMG
nGAyQAtGJXUCwEJAUmRuUtgeN0Cq8dJNAuxDQMQXalVKOThASp2AJgIYRUBN
drNL/Es5QIj029cBcEdAkkwn/11bO0AGo5I6ASBMQJMtfkzoKT9Apk5AEwFM
TUBH/2qbJQdAQEX67esAeE5A5pPPPoR2QEDCqKROAGhQQNnkqbUxTUFAAAAA
AADAUkCUfFZ35txCQNDVVuz/VVNAkYqaUCQ7Q0Cgq63Y/+tTQE5GgFJDl0NA
P1dbsf8XVUDH2kd8bElEQH6utmL/b1dAghzZzzaXRUBOhA1P/wVYQPSrjHNP
5kVAHVpkO/+bWEBWrYMbxjNGQLwFEhT/x1lAtXQqMQDKRkD7XG3F/h9cQDrA
X+bu5EdAyjLEsf61XECpNDISQyhIQJoIG57+S11AwfzblE5qSEA6tMh2/nde
QNrbmYSw6khAvAUSFP9nYEBShqa0j91JQKRwPQr/smBARQJX4pAXSkCM22gA
//1gQHq2oPuKUEpAXLG/7P6TYUBDWI1rhb9KQEQc6+L+3mFARPy155L1SkAs
hxbZ/iliQJC5tJ+zKktAFPJBz/50YkA1av+Z7V5LQPtcbcX+v2JAnWMmqUaS
S0BDNAq0
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#84"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAYTJVMCqpIz8puNmFrDohP0p7gy9M
wAJATjBfXg0gAECgGi/dJMASQGc1N85+qA9AS+oENBHAIkCg94X+vIkeQMiY
u5YQcCdAb+JVUSvBIkBGR3L5DyAsQPaupUD9HiZAINJvXwfAMkC4Y/TeOoUs
QF8pyxAHGDVA2k1I8myQL0CegCbCBnA3QDAl5XdaQTFAGy/dJAYgPECrYNgu
lBA0QAtGJXUCwEJAM5AHKSAxOUCq8dJNAuxDQAtXhxqsYTpASp2AJgIYRUCg
8bjdlYk7QIj029cBcEdAIayRa/DAPUAGo5I6ASBMQDjJUpta60BApk5AEwFM
TUD33TeWpWVBQEX67esAeE5ArFtacdPcQUDCqKROAGhQQOpW94hOwkJAAAAA
AADAUkDNrqbasmxEQNDVVuz/VVNALOjDAhHRRECgq63Y/+tTQHozzGwdM0VA
P1dbsf8XVUDAtO18kfBFQH6utmL/b1dAYPIEGulSR0BOhA1P/wVYQOw3ze3C
pkdAHVpkO/+bWEBZ3UCx1vhHQLwFEhT/x1lAjwR2duSXSED7XG3F/h9cQK43
65YEw0lAyjLEsf61XECCTzoHHgpKQJoIG57+S11AujVPfdRPSkA6tMh2/nde
QDiQIjlB10pAvAUSFP9nYEAwzOkeItdLQKRwPQr/smBA2WWY6S4UTECM22gA
//1gQG/zKPUgUExAXLG/7P6TYUCHeWL00sRMQEQc6+L+3mFABfDaUKH9TEAs
hxbZ/iliQPc/w8VxNU1AFPJBz/50YkBE6a3qSmxNQPtcbcX+v2JAjYJCHTOi
TUDuMwtZ
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#85"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAYTJVMCqpIz98HoVKwx4iP0p7gy9M
wAJAFKNezWD0AECgGi/dJMASQOR3BfeWoxBAS+oENBHAIkA9mS345AogQMiY
u5YQcCdAvRAdLj+zI0BGR3L5DyAsQHGxFlw1OydAINJvXwfAMkDiAdAhdfAt
QF8pyxAHGDVA3OY0DF2QMECegCbCBnA3QJWsxBhLGzJAGy/dJAYgPEA84SyO
BQw1QAtGJXUCwEJA3WdmnkhoOkCq8dJNAuxDQIsEO0JspjtASp2AJgIYRUD1
OGbOcts8QIj029cBcEdA1dADeK4rP0AGo5I6ASBMQDVlXoM0t0FApk5AEwFM
TUAuvbP0qzZCQEX67esAeE5A9qmJt9yyQkDCqKROAGhQQAgFUUnooUNAAAAA
AADAUkDvGYsDxl1FQNDVVuz/VVNAeWLHyzLGRUCgq63Y/+tTQEKKio0wLEZA
P1dbsf8XVUDlAXQgNPFGQH6utmL/b1dAd3N9inthSEBOhA1P/wVYQNgCw6+X
uEhAHVpkO/+bWEDQIz1u2A1JQLwFEhT/x1lACZTdQAOzSUD7XG3F/h9cQOc0
7Jt96UpAyjLEsf61XEBlS+a1QjNLQJoIG57+S11AvKHM2JR7S0A6tMh2/nde
QHgShhoLCExAvAUSFP9nYEAkHzJwVRFNQKRwPQr/smBAXNcE35tQTUCM22gA
//1gQE87M0u7jk1AXLG/7P6TYUDEKKnEpAdOQEQc6+L+3mFA4FnY8n1CTkAs
hxbZ/iliQIVxgmZOfE5AFPJBz/50YkCPyGkKHbVOQPtcbcX+v2JARVwojPDs
TkC0zgCX
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#86"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAYTJVMCqpIz95hcctB9oUP0p7gy9M
wAJAeE/ThEuf8z+gGi/dJMASQMSgcNMnXQNAS+oENBHAIkDbitUEMN4SQCDS
b18HwDJAIHxIm+nyIUBfKcsQBxg1QMY4TkwX8yNAnoAmwgZwN0A27BkQGOcl
QBsv3SQGIDxA/jAHEEWsKUALRiV1AsBCQFvB+HEPWzBAqvHSTQLsQ0Azrk0y
7y8xQEqdgCYCGEVAu6ys9i8AMkCI9NvXAXBHQLaC+VlrkzNABqOSOgEgTEAs
++Mgk4g2QAAAAAAAwFJA30jaGqvHO0DQ1Vbs/1VTQHQY64VzYTxAoKut2P/r
U0B3goTKY/g8QD9XW7H/F1VAW+4RNwsePkB+rrZi/29XQGHBnwc9JUBAToQN
T/8FWEBFaR6cxWdAQB1aZDv/m1hAXJE33CipQEC8BRIU/8dZQBCRKSudKEFA
+1xtxf4fXECiDRLu/xpCQMoyxLH+tVxAPCfesyJVQkCaCBue/ktdQFXT5a9V
jkJAOrTIdv53XkDVEMUaA/5CQLwFEhT/Z2BAqTNimxHTQ0CkcD0K/7JgQFHe
vlBNBkRAjNtoAP/9YEBFmSOAwjhEQFyxv+z+k2FAr2C9D2ubREBEHOvi/t5h
QPvVMP2my0RALIcW2f4pYkD85qGBLftEQBTyQc/+dGJAYYkJlQIqRUD7XG3F
/r9iQBQh9REqWEVASDngnQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#87"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAYTJVMCqpIz+90Fi5UDPzPkp7gy9M
wAJAFIdRP2VP0j+gGi/dJMASQHJqZpK9TuI/S+oENBHAIkD80OXnp03yPyDS
b18HwDJAVgFbtZlLAkALRiV1AsBCQG9KMwyNRxJAAAAAAADAUkAtQMw+gD8i
QNDVVuz/VVNAK7/rv/fQIkCgq63Y/+tTQF1O5kFnYiNAP1dbsf8XVUAqsA9L
LoUkQH6utmL/b1dAjvakhFzKJkD7XG3F/h9cQDV6KCg6UytAyjLEsf61XEBJ
2e4FMuQrQJoIG57+S11AKDEU7yF1LEA6tMh2/ndeQJQ/Gubpli1AvAUSFP9n
YEDO/2R5GtovQKRwPQr/smBAYmc6Ymk1MECM22gA//1gQLZQD5DBfTBAXLG/
7P6TYUBhPe4FZg4xQEQc6+L+3mFACzSfTrJWMUAshxbZ/iliQDoT66D6njFA
FPJBz/50YkC5PSX9PucxQPtcbcX+v2JAMA2hY38vMkBdzqE9
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#88"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtz31Q03UABvDfdjKUl/2+CKEX0sabOA4bLjpogDw2BRo4YDQgGOzFt1ki
OydO4NqZIjpCTUfCwZAhaJmnBQhnL8ZO7RhCb6MiQuTkirMAE83Q0N8vveO5
e+759/OE6EuVW7gURcU/6/PVSVQxUefCkovcPpxiyZpkeeUBcYaTi4Z7n+Zv
O0PB8aJ4LNy5FBHxqliBgocms/10mHAF5oNKjtyNXIL0vxbF+jlD8YVr0d+2
cS+4Gr48SYyRiB6qsm738EFK6q7HtDAaLUPk0UfDPpioCLjoaYjBnSSL3Vrm
C6G7VOPplODhwK7Lpnu+0IgGiOfyV/F+68PTo0o+Tu1beZVnjMNBsWrwnTY+
bg6/Z+K5XoMtYFxWP8lH0DMeT5gISeHITpOARkF1/C8ee9ciQdTVHptFY/Bu
/zWuAbihuu1TXkFjR6PZzq1bhx8zQ8zmFhreKRFlXOfreHSkuzPYSeOTWfdG
7rQMtit3BsPHaMib963kLt+AZTvrZ16ao/Fn2sssZ30Kvs3dVA1PgsP/jA5z
jKkQTtbM/uRHsMph/YxjT0OOVlxpCiLoS4+zclxvYMLRH5UYTsBrOyHlCDNQ
2xWyv/MVgrMK+HMyNqKqVVZnlRJs+G9mitqrwJoWUeA4CH4/03Sdas8E1XT5
D2cKwdWP2xWUIQtj5ZfmpBkEJyzzUorJgvBgzLm8bALdm8pIqi4b/nZwhLkE
1PM4lXi8my93FxP88HPuNKvKwSD9IKNfT+A4f+FXdioHN9MOq6u3EiTnFXaw
y1QQmlO3bykh4K/ubGYvqDDljjp6zEhwi7ukhpXlIoLzofgDE4HlYo+eLc1D
giDaJ6ScQFHlm8l65GOx45ijp5IguGBzAtuUD2VbYNlqC8FXHksD2L63cOWJ
gvTtJ6gdNVBsUQH8tLPvzlQRqDt6p5kHBdhMyw88qSaYV5d8wwjUsHV107/V
ENyQXO9gutV4WjgQdb6WoHFx0CkmvQgj8kLvt48SSC+59jDmYrRbbid2Hyfw
qhFsYnw16NXN7ZDZCEY0ezKZNg38/80Jv1a34NmmxQuhhtjGeoJ2Y5IX26nF
d1zF7P2GBd9TLbJ7gik0LvhsOoRWbNV8bidYv2Jqgrmlg/Fk2NeTzQTRhwJH
GJEe1PGhWq8WgoD7675ndushDxatjXAs/OnVw3vYlRTXSvA/iTFzPg==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#89"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj31MlAUAxt97uffj+IgPmWDgPFEh8ghGEobA+xAHnBx38hFCdnkfKVyz
xg0VLgpHE0ERqQSh+AqELLBTwWorUE645ACZCYkgpY05x1duOIkF+L7pfLZn
vz+f37PRkJO6nyQIIuxZn1Mfmh7yatsmrv3UltmzD1ajEz85GpxkJWE79LF5
+fNxrunl4L82Wz3Q6Lj978qAh1xdfv3ZTVJfJHZdCliOfcQpZ8Xb3K1+SE2x
1DiXPObsX3VVu5kCMFSZtb8pa5GLT8j9z1Uqg9gS01x4f4mbKvC8wBhDEJl5
fb0PtcxJR3K0jDUUyRfzzFMPVzht4JAb4x2Guorshe++eMo1Fvn30qZwZFfV
Gc45Cdyfdz47SNvfxFX6da46mIDPMz1aGomchArVSTuBPSXbxyhzNDIKGPGa
NBFuPBroI42AbN3X+6S3RPiwNr+erIpBZNfqgWQ5Caf4LYdJ61uYXndlbMVC
on1hREXOx8J/MPO83NUBiQ1F/qR3HN4w9bRLP3DAjOI1QSSPx8Vh3UF9twOO
P5m8IzIlYCnIe+ZXiRivNJ24JKpXYPXK1iR7ihj9yvATIvtOHFMcVrmdEYNu
OR0hkibhcpyfwsuVwjk11oiSVNC4OJXXxFOIW/5njjCrcTPMg5oooND7faua
MCajOdBtsfMuhdNHViIIPhmyDlVtL01D/3ZqAFGVgtG1wdeOhtAgnseaCq+2
Y6ODhTR+v717XkhPw1JYVFBjM42m85ZxYS4NZT6V01f7aHAZ73YIXukQqmOL
9joweCmos0GwpGMgT/6H+0YG90hJmRC7G2PRw5JPoxgcufCzQcjJQP+BKaY/
l4G62GWXQGVC2bzYcOMkg/V79u0Q6jJBTpRQoy0MuikPT6H/HXS7ly343mKw
ovnoN36DBr/0UVmUH4vBUFsH/5MGcXe/mSnYxqKW9Wnkle9BZmtxVseziPjR
nsfn70Xxl6aKICMLx7IN7/MuWvSulg8ozCwmtHm7+BYtuNbC3Pul7Iu9bB2m
29jbNd+yaDVFOQqdOixtpQTbZRblk0ZCeKpD26yypPgaC01HzzxfqceO8PF/
hydZyH3npvh7ehSLB0d00yxkpWsn+EADSk8dX6l5wsLzccxN/pAB14c2q/MJ
yYs/PQb8YHtgIp0l+B85PmkS
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#90"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAAYTJVMCqpIz+ZxcbUUxwAP0p7gy9M
wAJA64kZxKbQ2z+gGi/dJMASQCcb7chsZ+k/m3ecoiMgHECDXrSykojxP0vq
BDQRwCJA66u3872m9T/ImLuWEHAnQDUFa5zpM/k/Rkdy+Q8gLEBGcx5tE0z8
P+J6FK4HaDBAjcoEPnQE/z8g0m9fB8AyQCbjbvy2tgBAXynLEAcYNUDnCl/b
7MkBQJ6AJsIGcDdAX/MYo/fAAkDc14FzBsg5QC6VE4j0nwNAGy/dJAYgPEAG
P/QqPWoEQFqGONYFeD5A/YLJ+pIiBUDM7snDAmhAQJB6gog/ywVAC0YldQLA
QkB9gO6W+PQGQKrx0k0C7ENARsfcgwF5B0BKnYAmAhhFQDQOo8xz8wdA6Ugu
/wFERkDnqbJ1UWUIQIj029cBcEdAb756k3nPCEAooImwAZxIQCSUsgKuMglA
x0s3iQHISUAm1xUKmI8JQAajkjoBIExA7nL/C804CkCmTkATAUxNQNa/CWgO
hgpARfrt6wB4TkBiUtHQ9s4KQMKopE4AaFBAD7lPiyBVC0CSfvs6AP5QQMHE
pKr8kgtAYVRSJwCUUUCBhJfHt80LQAAAAAAAwFJA+MmhXrI6DEDQ1Vbs/1VT
QIjKsfFXbQxAoKut2P/rU0COFyD0qZ0MQD9XW7H/F1VAWd/aNfD3DEAOLbKd
/61VQApAen4qIg1A3gIJiv9DVkCJWLH+nUoNQH6utmL/b1dALsX4zp6WDUBO
hA1P/wVYQPRDmMBdug1AHVpkO/+bWEAVDzGZudwNQLwFEhT/x1lAxW7TlZcd
DkD7XG3F/h9cQCdta2XMkQ5AyjLEsf61XECfZyNhXqwOQJoIG57+S11AE4A9
4QvGDkA6tMh2/ndeQEGeGPzl9g5ACoofY/4NX0CcEa0VJw4PQNlfdk/+o19A
HQ/+zawkD0C8BRIU/2dgQAY9rWmoTw9ApHA9Cv+yYEBn9nsqLmQPQIzbaAD/
/WBA4D1zWBh4D0Bcsb/s/pNhQBvwb9Q0ng9ARBzr4v7eYUBk9i2bc7APQCyH
Ftn+KWJA3Rkkzi/CD0AU8kHP/nRiQNr7xNNu0w9A+1xtxf6/YkArmlHHNeQP
QKEYakc=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#91"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwlj39QUwUAx9/e2Ht7cpogEQnEaCLgTaUFKSN83wljwgBhNERcjQ0WO7PA
FEdEHGbFjzO7IzRzuFuKXYKY0+T0knOnhiPoh1yBhGCsoMuREQFBi/fS83v3
vc+f38830lSmNZMEQSQ86EMa5bq4NaelbELrLUexVMhmvHlgfaaLhOX69sO5
1rusY+X6kVWuQEj0wc3zp7yszdpyQioJg32VKCe2ZprV3POLD3A9jbrA36wc
O8e6j355ZHl5NGwjl7xd+Qtsmvr1hcckMigmjs5oJ32spyroLG2JQ9tocRcf
zrGS/jID7ZLDKTe/W0oQMMT2LqdDEvCk1hYo7Sdgr119jSrfgA9S3XP+jQLc
Gdy/h3InolZoVztkJEIf6FGS53Fu4P1pYxeJwvc2DogqN+Hl4V8QwgrRd7/n
OmkB5tvHphYvCLHrmLWFbFZi+vKtdE+4H/zToipI12YUVM2kKGv80PZXfxY5
mYJnu2P26gb8kHG8djUZosIbGfH1UdEi/L5lHS9ITcNY+v5Dh3aLUD8zPCgo
VyNKs+5XTacIMY6Gc4KWLaj6mS5ZnBXhpmZDg8Cdjl6PQiV7hgJ1skkhkGSi
UybV9NkofJqNFYLMLAxXmAcXeymo/v3DS1Rm4+IapUS+QOHaZ63ZhCUHJWZq
xecaGk01PgXB5aDw7mDfzt00jC9oo4nmXEzNvV0dcJgG8TAuLc4MfcR1D9D4
/sf8SV6Xh6Q78z1PzdJwtHfc5r15+MF/08GZADHYbTuc/BM6RP4ZY69Ti7Fs
7fnjfIcOwYlJr1QUiTFKMo18Sj5WNt24srlSjJqznSa+bBumqKSe7lYxst9Z
upUXFWCPetl/9stihBeWJPG2AkQcSfzn42/EuCIKDOJvbsdOT3zY2r/F8Olf
/YqL0MPsa9glfI7B1/IbTu6iHvp51VCCisExcaid07yI8Ykz90fyGCi+cO/j
rC/hAh3a3F7GYEljRDG31IAJqjFutJrBkGHfVu6kAeTG8ROOBubRXmkRXuuN
OX3vEwat5clL+PNF2PFTpLy6g8HBYQvBLxZBWeyud15ioHdeneQ+NKK99JQ2
5FsGqWFeDzdqRLe3rTb3NgNZXfAQF2tCeniWL9nDIGha+R231wTZW3h8zMs8
+nPVhPFY91TyLIP/AXpAbg0=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#92"]& ], 
     TagBox[
      {GrayLevel[0.5], Thickness[0.015], Opacity[0.05], 
       LineBox[CompressedData["
1:eJwtj31Q03UAxr/fHS+CJ4Jhcg1kaLg0E8WMIvL78CrJHDTl1cnGJJmajEQ2
TpJQPA3D04BC3KCdjBoJGFZgZG3HS07iqCwgNPTk6C5hYMnOWoPfL73zuXvu
8+fzeUJUGtmbAkLIS4/6mDnhqevXNK9k7Mi3ysBjPmxrSXmYxCpA4/7Qso67
E8z4TNjYs9YlcO3tFNcl/sX0OsOFlaJAGNH/9vtuDpY06fain3UF5MalLVGG
h8x27puPfAvEyJp8Xjtd/i9L2HLQuVi0Fvd6OWG+08nGD/u3earXo2q3UNIk
cjHRDY3C0xqOUetM3s3Fc0yx+gdfz4BNqLzORRqG5lhD2apuj4IIpAykOX8t
mWe/jxwt9LC9gpY0P+FRL44JH+l5iKKQoQkNbS/nWNaJl4fdizfDHHRwWjzD
sYGZ6z0CNYDiOa0liWdvndcZBDXROCJtll5s4NnChNAigTUG81dO5zf9ybPP
/r6xTWCPRczo8ZYTSwm21petEgTEY+rMnM+7GwnuJa7jaVwCGiImll+SErzn
uDVCC7ZAWcGbi/IInjNWfE4NiTgQ9kF2SCnBtaSICmp7HbXiwiBHFYFHY1Uk
FUkgW3alcqKT4BMpnqKSbTB4z36XaSOI/296ihRL4Uo/3fHpCMFEk76XmJKx
wFibb/+DoNtskhJ1CnrcZx3RswRVpa5IwqXgWLXZy8IT5OyQiUnNG2B1d4y6
hRTkcawy1Ni/r7sjovhpKM3Op27HP4d6klvWUBgvtv7GT21H1MCezvsbKVj6
znZ+WSpChlt3usdT+LxwuZ5vTUWf7764SQnFbYHXKT42DXusMSX7d1CUtnWo
eE06HLmKB9kqCunxRcm8ewYS9cOmMTVFUFbuq7w+Ax/vut/mp6G46r7En7+W
iYALg16thylc8gN9XLAcv3z4c9yKMxT94b3t3Fdy9GeRs9ZqivMLhA1c0i7c
1YXf3HCOIvJLm5bTZWN23V5ZrZHC+1Twbm6RAuPBXfSsiWJUoU3mGhXIVnzd
lWt+spenhL5t3Nx8icJU8Jo3f1mJfe8oNwd9QVF5S034eSVEMQWNhR0U8naL
navOQbDeTTt4lSIucGqcu52D5YO8bshCsfbk06PcahW6NjiLersp/B9E/8gd
UmFTbGaFoe/JH4sKYw/ru7JtFP8DE7mBSg==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548336#93"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[0.02], Opacity[0.5], LineBox[CompressedData["
1:eJwV0Xk41AkAxnGJVRYlV7LmQZeUY8YM80vm90qJDjWRkGt+HWpi2RKPI7XO
h8kMmYfEiqSp1ogkmcTYamvmiaSkQ5tWhyukcj081v7xPt/n8/drTkXsPqiq
oqKyY27/t8Zn+scXqYIj7r+/LGSqmZPxd1AnVyghA6J/MX4eW0Jmv06Kpwnr
SIOArWzZiSpS/EHcoiZ8SB4QnTH+K1xO5vX9MTae1UmGuAsT5ge1kUZhFoKv
WZ/JI39+Y37hdJN7pQf2DGWNk8VxTKMVqiPkeEuqbDBLA/RnkZGpJrNkjf5T
7TTBUsiGJevMMnQQuZbZdtfJAvor81ovpxjAcMu4WKFnCVOT3/1DtU3w7a4R
/yLfBv/UL+Ebc8yQGkxbmm/FQP3hVGOlwAIVWcHJrsEshBcu61O2r4BJbEDY
RAobx+Sn1l18uwqSq29a0qKcEKWWKYkrtkRrekZdfBkHLsZJRGOwFTI7urRW
tgJTFQsvvO1Zi7YH7QmLXTdi/rmB4OVu1vig1W13vdMVp49O5VhV2CA92qZ0
PXcziN4NlsM9thh3EO+J7XfDk4PPqidFdvj5Raf7hgR3FMdFbtI2p6MyP2Bi
YNQDXkMzUawSOmhVEwOeGdvw/qR2poYFA6YDHYXFajvA0X00dwoD/QlKUekF
TxTO+OTrLrSHNNqTJzbeBe8y6dXdJ+xhjZe+rR278KzeZVStwx56teGj70u5
4Ffbvz/myITLneX9R0N2o9TphfVtIRPNVe7z2CZesHly3wvdTEi4sbK3H72Q
E/p8TTKThY5k5dPJi9749NBWGH+KBT5vtWA4Yg/upkxw1VtY4Np827+a8IH6
T3LzMgMHnDrz7nzHdx/QuefSf/NxgH5e5/FA+V6kGwcqGwocMGI3cm1foi9K
7Hq/DnY4gHYnZl4R2w9en2JainQcUTOiOVWr6g+h3/yuSg9HiOoad7k1+SMs
2yixLNER7WsSPaoE+yApVg99XuuIAOugkuytAbgXV6s89NkRbDOpYY16IFxj
olVdDdmIb9Swvd4WiM6m84XkFjbUh5LKzYVBWKtlGeF9nI2xRwsbw/cFQ2XR
FdnhUjaKFLNTJ5eEIO1Ngp1GCxu8cU2305EhYEr9Gb7f2Xg1ZUJFvAhB+DZR
XZYpgR9uztICFg+KRIGoeSMBmabhgo9neaianJ02OkSAcem7vekED0tYevaE
gIBnWo8w24fCsWbuaUUFgS1bhdsdfCl8KFfoBkoJQIfQ7PKjsCicJxqZMz1P
mLo6kAKjWmWn0XUC+peJhMb9FGT2v3bvrybw5oHoyGAkBauapJ2TtQQOq2/Y
5C6g4G3tFmfQRICn+DRv6AwF7cdh+Zfn7J+V05QrpLDqBr3UUU5gu8Hn9e9y
KOS9Lo/zayZgu/IsPfocBWftS5uL7hEY29RLu1RO4RrNl6Q9IjC8ILfLQ0Jh
5iHDsnLOvY+dzw9foSD165txVhB45Z1r4FRBoSBuMiJQSaDhAEer/QaFad/F
EYWPCdRa9iliblK4PcpssmohUDmYm256i8KhHq/p+jmXRPWpHqmn0PBF5Pyy
lUABWyzXuUNhKO+mS+gTAmenOYk3GyhY3/qXMTbnTHmfk38jBflimm5qG4Hk
FPHkbBOFAT6/S+8pgf8AkXIwpQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$3548527#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[0.015], Opacity[0.2], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1:eJwVx3k4lAkAx3GjHGlYMWbmXVIptIkcW4i8vzXlqmxy3zMvepYozyqtdVTG
sQxDY2K1qkHSxUx0PClSrVqKxe7QQeWpNpQjjbNaa//4Pt/ns4ravztKWUlJ
aedC/7/e7/PkSE2rE5NW4fzsdblTzv2wXi9hNalia5Wrv+cIWfg0PdlQeJ18
cE9NpEoVkuLX4vbFwgdkeoL9F1aQhCweOjk1nd9LDuytt4v1kJGsWCPBh/y3
ZBjZaZJs1kz610T6juZPk+eiiOLJ/j/J6fbMhvf5ajg4M/Cj+9Rzsp7RpZkl
YOMvl3vRRZGjZLzZt52NDkYQCRIt38RMkkzXaXGr7lqs1Bn4oDIyR35sZMVU
xFigTxEfeG6dEjLDDdkl66yRe/xnm5KDyriUH87nhG9E3iuZxfMbi6GfFBI7
k2EHrqRewrmriurzz9qzDjjAJ5Xep3xUHR3ZOdeTK51gLF1Tux4ayJX30Y07
ALPBlvTku0vR2dKdos1xRuULU1titSZe019aSns5KGsZ7E/I1kJ2okX5Zq9t
mI5VuN5r/ArTm8S+ScMuMFtZJTFJ0cbSnl43xxQ3kKMP8/Loy1BbEjLzbsId
7ttacwwEy2Aom3nnmbMdPflMB2+6Dpa/k/92avFOyHj1v9PSdDCc0lZQftoT
n9UNGt0mdFCT6MkTE7tgUUo4qofpwhyPAzrku2A86THr2qgL3atxEwPlXrgm
38PCCga+u7l6eC93N041HBo1SGTgjsyNZqfvjV+8/VM5Dxio9kpq6H/jDQuv
pT+t0teDnN/WNVvhg2KT8RXNUXqI4ZkKxvb7wrQomjFSpwcvi48RpvZ+KLv/
Zcbmkx4O5704IVf4gT7/+NEVByYYxb0Joc3+iC3w4UvTmBi3HL8QnBYAjnTu
dEkDE4Y3D9HK7AJxPCupfNFHJurHNeauKgfBykv0qcOchYLrTbtcbgdBnDCx
OYNiofubNHeZIBiqTy0YCaUshJiHSQo9QiCSqxi1tbFgt7KGWa8SClp1t/O+
WRaSm9Q2SDtDMbYp2t5yHRsqo+lVq4RhOFLAd9f2Y2PqjyVNccHh0FQEx43w
2ShrnZ9L1eFi9dm9Nf5SNnjTGi5H4rmglw2eTuph48mcPrW/h4v5fQ+7UufZ
mHTZUlO6kYcsiYlR5hoCDRpM9TciHnoiYzmXXQlYn1HYLJ/hofJfM/WzsQQ8
s14JC/0oWKe0r9USEnD1EO7YFEDhEa9ySfmCoWWv0RdIgauQ9dgUELAqFmaa
hlJ4+TV/Y2AhAcZZ+5SmCAp6GgmqlSICz1oKot/HUzCQz81YlxD4QcVxq5uA
wnDmFsetEgK81n9oo3kUYmzrLv694KD8Y7eLhBScI/rUosoJ7NB7u/nFMQqH
T3KzMisIbDAWWSX+SsFOIC5rOUNgauug4ZkqCtv3qFo5nycwpl7U515NYdJE
Ete14MFHW06MnaNgeWN9CfcCgSc+RXoOlyjwM8wvp10kcCvSid5dR8G335bW
UEPg6tqh1kNXKHwf0F3lVkug9n1R9vJrFJTHUm17Fyw5MKQcfYPCsaMsI4WU
QKmduFnrJoWRRZrJ6TICos9OaVduUaBJje5oXyaQ2zzkENREQcQJUZxaMD9D
PDt/m0LE0UaGeR2B/wA8KCZO
        "]]},
      Annotation[#, "Charting`Private`Tag$3548583#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[0.015], Opacity[0.2], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1:eJwV0Gs01AkYBnDUbOXSaUsomZW2WG3ooiaXmUfsuM9izDDzd5u/6hRa2uSy
ROUaZgixhAhp25SMYTOuddoap4QOU5uSFaWIJCO1a2c/POc5v/fD++HZSIZ7
HVBTUVFxV+b/FnO/fJysldEfpus+EnNG6Gf+DJB7imoY6b0NQqM/Ohk5f52O
o4qaGJ3/SI/eFPcy8l/mP1gqustYojHgZ/z7MKNgvHROIZQznC3dcmnF7xm6
YUaZ74WvGFmS+AZZjCp8avdz3gkVjOORXrYhe76G4kFK84RwGWyqYyPRbAix
dq9WaqYe9rto1aaFWiBi666eVmsjPHJ9xg/8dg90HBX5sjUmIDsd/lbXs8WH
Vt2QiyFmKCp/MTkabYeUQKpeoekOJJxL2KI7Y4+rwsAk+0BLsG5XsnQPMKEf
6xc2n0xDGGX+fHChE2p+e/ogNdIaj0h2nv4vLuhOO9MUV0mHplZ6I9PfDRn9
g5qbu4GDuTci6/51R8+dvvhV9vtgrramoD7uR7zUfGFxXW6Pl4fKiMAED6RF
mVVYef6AtLhEO8oWTyh253Ni3zBhE85bOvvQExoDciebeCfwTD8dWAj1wrVC
v/m3M87QMIraKZ31ArVu/i3rjCs6dN0J3kk2DN72ny9b6o5T8qSd5p/ZeBPf
lV1xgYXz6sELfTHeqI1iCfLXeeDccfMYxqQ3tuGxb3e/B4Y+L88x9eZgjeTI
zHCFJwI2mOh/1caBnXTTm9AgL9xv2hw+rM9FZ52TKk2fjbsNhq05x7io8Yxt
fjbKBts2+7h5Nxf9SV29ny56oyfxuW0P1QchAuPMqXAOFLdaVHf97ANPsw/B
xnu5aCsbk7p1+CAxa6i4f5YLkcVBk0WKL7QL5Mf8lfeYqsZTASxfTFtMXyES
fCHpSo1el+0LqjRatYTGA72IfWLVfV+Ip9UXJGp8fCl8fqtQg4fspjYPZjsf
jjvEMZkOPPR9l+Bcl0ngmjCxeiyRB79tAeU5Ln4I809u3S3hgWZYqyOm+CN0
Kp1Z8oqHuLZl5td7/CGgGDBdN/BBeXe6eqMoAGrPzKRiVz7m7q1oO0IEgkZN
t9t3go8S2eLCidVBmE1ZH7L1Kh8ChTrzZEQQRhpNFo8N8PFkQZ8MHwgCbdTg
8h01Ah+ZtrVFlgLMqzrY3DMl0Kyus3w0VwC3dT8FyDwI7Kia3WkwL8Cm/vrX
TTEEWKkjohwuiawR4+qeEgKOLiK33b4kGBdzeeGlBLByr/ogj4TEsXReq4zA
9gJRirE/iSsZlXMuFwhoX9ob3xZMwipjYuZ2BYGnd7IPT0SQOBexffrGJQKH
KDYOTpkkTGq99BPqCAhkY6rvskhs4qt+v/4GAb7wbHueiIRgUG7cqLTb2ldW
Q2dJXF+tNTxZT8B8c+72qF9JhI9p8v0kBOYcXlOrqkm4py4JsWwmMLU8b9C5
hoSDnpF5j9Kv79sWT10m8c3dK0MhUgJPvPPWWl8lMTGmvqS8hUDLfrpmXz2J
uuEY9op2AhKTcVl0Awn7tURkpdLXJvLSDBpJ0A3vnbTtIFAeOa52+CYJbQrb
72gngSJafsdKqXIvlditGrcI5H6hJzS0KPfQsRqrUjqjY9ya30ZCxCnOot8m
kJSc/2mxXfm/q5T6WOn/AIX7Mi8=
        "]]},
      Annotation[#, "Charting`Private`Tag$3548625#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 150}, {0., 91.87759043236325}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7880226949165697`*^9, {3.7895052823666077`*^9, 3.7895053177144613`*^9}, 
   3.789507047692379*^9, 3.789509403400429*^9, 3.7895784294193153`*^9, 
   3.789580041427582*^9, 3.789582749090768*^9, 3.792166155830947*^9, 
   3.7923401011074677`*^9, 3.792686077525319*^9, 3.792692728487245*^9, 
   3.792785497477397*^9, 3.7928617855794353`*^9, 3.79355635133386*^9, 
   3.8098705701392097`*^9, 3.8099136614258347`*^9, 3.809978673482871*^9, 
   3.81024335172889*^9, 3.8119767627245283`*^9, 3.812551104066073*^9, 
   3.812662751711102*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"78a0a393-bde1-4f91-9da8-f44e72c4de89"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Some code to facilitate automatic plotting and legending (evaluate cell \
below):\
\>", "Subsubsection",
 CellChangeTimes->{{3.743259275347341*^9, 3.743259282934416*^9}, {
  3.7432795299050817`*^9, 3.743279530202558*^9}, {3.752261513828857*^9, 
  3.75226151720041*^9}},ExpressionUUID->"396d1ce8-b256-49dd-8549-\
fb20bd3aa4d0"],

Cell["\<\
Just lists of colors, plotmarkers, and dashing types, so that each experiment \
gets its own plot marker, color, and dashing type:\
\>", "Text",
 CellChangeTimes->{{3.773587336521021*^9, 
  3.773587371334206*^9}},ExpressionUUID->"86d7fc4f-bf98-4b49-b718-\
2016a16249f2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xticks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "50"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"500", ",", "500"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5000", ",", "5000"}], "}"}]}], "}"}], ",", "None"}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xticks2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.01", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"50", ",", "50"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"500", ",", "500"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5000", ",", "5000"}], "}"}]}], "}"}], ",", "None"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorMap", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"datasetsIn", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "\[Rule]", 
       RowBox[{"ColorData", "[", 
        RowBox[{"24", ",", 
         RowBox[{"n", "-", "1"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "[", "datasetsIn", "]"}]}], "}"}]}], "]"}], "]"}]}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMarkerList", "=", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["\[FilledCircle]",
       FontSize->16], ",", 
      StyleBox["\[EmptyCircle]",
       FontSize->16], ",", 
      StyleBox["\[FilledDiamond]",
       FontSize->16], ",", 
      StyleBox["\[EmptyDiamond]",
       FontSize->16], ",", 
      StyleBox["\[FilledSquare]",
       FontSize->16], ",", 
      StyleBox["\[EmptySquare]",
       FontSize->16], 
      StyleBox[",",
       FontSize->16], "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]", ",", 
      "\[FilledCircle]", ",", "\[FilledCircle]", ",", "\[FilledCircle]"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dashingList", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "0.05", "]"}], ",", 
      RowBox[{"Dashing", "[", "0.015", "]"}], ",", 
      RowBox[{"Dashing", "[", "0.03", "]"}], ",", "Dotted", ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}], ",", 
      RowBox[{"Dashing", "[", "None", "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dashingListLeg", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", 
      RowBox[{"0.05", "*", "5"}], "]"}], ",", 
     RowBox[{"Dashing", "[", 
      RowBox[{"0.015", "*", "5"}], "]"}], ",", 
     RowBox[{"Dashing", "[", 
      RowBox[{"0.03", "*", "5"}], "]"}], ",", "Dotted", ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}], ",", 
     RowBox[{"Dashing", "[", "None", "]"}]}], "}"}]}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.7425914545432377`*^9, 3.742591667139607*^9}, {
   3.742591876339127*^9, 3.742592057294034*^9}, {3.742592101940528*^9, 
   3.742592102922435*^9}, {3.74259470067033*^9, 3.742594947309708*^9}, {
   3.742594998293972*^9, 3.7425950517686167`*^9}, {3.742599282752235*^9, 
   3.742599327709853*^9}, {3.7425994743294077`*^9, 3.742599554945395*^9}, {
   3.7426001964233418`*^9, 3.742600288525528*^9}, {3.742600359778319*^9, 
   3.742600360088299*^9}, {3.7426004416542273`*^9, 3.7426004693006887`*^9}, {
   3.742602596488267*^9, 3.742602614040298*^9}, {3.74265186592841*^9, 
   3.742651903840404*^9}, {3.7426519441063547`*^9, 3.742651967937471*^9}, {
   3.7426520018420353`*^9, 3.742652059768309*^9}, {3.7426524153652277`*^9, 
   3.7426524333003817`*^9}, {3.742652829032681*^9, 3.742652877657336*^9}, {
   3.7426553135035067`*^9, 3.742655380386664*^9}, 3.7426582629857197`*^9, {
   3.742658408798522*^9, 3.742658446764881*^9}, {3.742658477877447*^9, 
   3.742658608605546*^9}, {3.742658649243924*^9, 3.742658738744657*^9}, {
   3.74265893052599*^9, 3.742658935890411*^9}, {3.74265907520435*^9, 
   3.742659086632587*^9}, {3.7426592151964703`*^9, 3.7426592294294*^9}, {
   3.742659731527198*^9, 3.742659748126038*^9}, {3.7426598549966793`*^9, 
   3.7426600265383863`*^9}, {3.7426612480898943`*^9, 3.742661248788625*^9}, {
   3.74266133696312*^9, 3.742661341315137*^9}, {3.742661398768717*^9, 
   3.742661432442101*^9}, {3.7426615282275877`*^9, 3.74266153894592*^9}, {
   3.742661590295052*^9, 3.742661767162238*^9}, {3.742661807429188*^9, 
   3.742661824384169*^9}, {3.7426619313624973`*^9, 3.7426619335146523`*^9}, {
   3.7426619856947193`*^9, 3.742662030279921*^9}, {3.742662141508288*^9, 
   3.742662149925617*^9}, {3.742662269619837*^9, 3.742662272236483*^9}, {
   3.742662604672098*^9, 3.742662610341342*^9}, {3.742662659586391*^9, 
   3.742662662633902*^9}, {3.742682430573305*^9, 3.742682445339734*^9}, {
   3.7426886620039167`*^9, 3.7426887579525843`*^9}, {3.7426889077060757`*^9, 
   3.742688907933646*^9}, {3.74269501427703*^9, 3.742695014898448*^9}, {
   3.743092208886606*^9, 3.743092230662743*^9}, {3.743092898872183*^9, 
   3.743092903220434*^9}, {3.7430930811506777`*^9, 3.743093084883699*^9}, {
   3.743093175511035*^9, 3.743093299258327*^9}, {3.743093350118885*^9, 
   3.743093389193975*^9}, {3.743093471130022*^9, 3.743093521623749*^9}, {
   3.743093557176855*^9, 3.743093562880155*^9}, {3.743093619954481*^9, 
   3.743093638234531*^9}, {3.7430997863836727`*^9, 3.743099786799056*^9}, {
   3.743099900073164*^9, 3.7430999798299313`*^9}, {3.743102123304451*^9, 
   3.7431022303427258`*^9}, {3.7431023293052483`*^9, 3.743102391565547*^9}, {
   3.743102450169862*^9, 3.7431025240745983`*^9}, {3.743102630305284*^9, 
   3.743102636496277*^9}, {3.743108301191202*^9, 3.743108301495161*^9}, {
   3.743108422890047*^9, 3.743108433810557*^9}, {3.74310920181621*^9, 
   3.7431093156023073`*^9}, {3.743109467120476*^9, 3.743109512141564*^9}, {
   3.743109657914481*^9, 3.743109680100985*^9}, {3.743112231839115*^9, 
   3.7431122779886227`*^9}, {3.7431151745539637`*^9, 3.743115175313718*^9}, {
   3.743115342728895*^9, 3.743115491892744*^9}, {3.743115527313694*^9, 
   3.743115609625761*^9}, {3.743115946673133*^9, 3.743116094817903*^9}, {
   3.7431162145209227`*^9, 3.743116251165805*^9}, {3.743116380334476*^9, 
   3.743116403724792*^9}, {3.7431167103158913`*^9, 3.7431167126662617`*^9}, {
   3.7431170334152527`*^9, 3.743117052011339*^9}, {3.743117189976375*^9, 
   3.743117193142095*^9}, {3.743117275782197*^9, 3.743117298031682*^9}, {
   3.7431174433930807`*^9, 3.74311746755096*^9}, {3.7431175789674873`*^9, 
   3.743117625413801*^9}, {3.7431178652294807`*^9, 3.74311786666206*^9}, {
   3.743118051296143*^9, 3.7431180726965237`*^9}, {3.7431181037778597`*^9, 
   3.743118143637642*^9}, {3.743118392616659*^9, 3.74311840505999*^9}, {
   3.743123051218145*^9, 3.74312314955544*^9}, {3.743123224684244*^9, 
   3.743123325307993*^9}, {3.7431234674819508`*^9, 3.743123468902905*^9}, {
   3.743123511461581*^9, 3.743123591838922*^9}, {3.7431236402884502`*^9, 
   3.743123642277693*^9}, {3.74312374641459*^9, 3.743123766187716*^9}, {
   3.7431299751239843`*^9, 3.7431299848895283`*^9}, {3.7431766122141323`*^9, 
   3.743176617037027*^9}, {3.743176650872867*^9, 3.743176659389782*^9}, {
   3.743176898400235*^9, 3.743176925707369*^9}, {3.7431771139278717`*^9, 
   3.7431771428665333`*^9}, {3.743177222373611*^9, 3.7431772290067472`*^9}, {
   3.743177308414366*^9, 3.743177322132492*^9}, {3.743181660263192*^9, 
   3.743181661132303*^9}, {3.743181758621511*^9, 3.7431817662689962`*^9}, 
   3.7431820350895452`*^9, {3.7431821040943317`*^9, 3.743182194870325*^9}, {
   3.7431823613391848`*^9, 3.743182366373357*^9}, 3.743182482493999*^9, {
   3.743182601118969*^9, 3.743182605445724*^9}, {3.743190020792959*^9, 
   3.7431900348742037`*^9}, {3.7432581820593224`*^9, 3.743258234007949*^9}, {
   3.743258284229611*^9, 3.7432582894141903`*^9}, {3.743258338292344*^9, 
   3.7432585204879303`*^9}, {3.7432592345976763`*^9, 3.743259235134859*^9}, 
   3.743259289584239*^9, {3.74328204539364*^9, 3.743282051228516*^9}, {
   3.743282111197918*^9, 3.743282134805197*^9}, {3.773498304829896*^9, 
   3.773498306773699*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"ca28a57a-a7c6-47d5-a340-465c50ac479e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"190117_S3_d1_MeP_1_GlyScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.8941176470588236, 0.7098039215686275, 0.7490196078431373], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5960784313725491, 0.473202614379085, 0.4993464052287582],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.8941176470588236`", ",", "0.7098039215686275`", ",", 
            "0.7490196078431373`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.8941176470588236, 0.7098039215686275, 0.7490196078431373]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.8941176470588236, 0.7098039215686275, 0.7490196078431373],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"190123_S3_d1_MeP_1_GlyScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6143790849673203, 0.3294117647058824, 0.28758169934640526`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.9215686274509803`", ",", "0.49411764705882355`", ",", 
            "0.43137254901960786`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.9215686274509803, 0.49411764705882355`, 0.43137254901960786`],
     
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"190314_S3_d1_MeP_1_ValScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 0.7215686274509804, 0.2196078431372549], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666667, 0.48104575163398694`, 0.14640522875816994`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"1.`", ",", "0.7215686274509804`", ",", 
            "0.2196078431372549`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1., 0.7215686274509804, 0.2196078431372549]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1., 0.7215686274509804, 0.2196078431372549],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"190318_S3_d1_MeP_1_ValScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.9490196078431372, 0.8627450980392157, 0.43529411764705883`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6326797385620915, 0.5751633986928105, 0.2901960784313726],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.9490196078431372`", ",", "0.8627450980392157`", ",", 
            "0.43529411764705883`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.9490196078431372, 0.8627450980392157, 0.43529411764705883`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.9490196078431372, 0.8627450980392157, 0.43529411764705883`],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"190321_S2_d2_MeP_1_ValScan.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.6705882352941176, 0.8784313725490196, 0.9372549019607843], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.44705882352941173`, 0.5856209150326798, 0.6248366013071895],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.6705882352941176`", ",", "0.8784313725490196`", ",", 
            "0.9372549019607843`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.6705882352941176, 0.8784313725490196, 0.9372549019607843]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.6705882352941176, 0.8784313725490196, 0.9372549019607843],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"190913_S2_d1_MeP_1_SlowMeP.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.3176470588235294, 0.6549019607843137, 0.7529411764705882], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.21176470588235294`, 0.4366013071895425, 0.5019607843137255],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.3176470588235294`", ",", "0.6549019607843137`", ",", 
            "0.7529411764705882`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.3176470588235294, 0.6549019607843137, 0.7529411764705882]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.3176470588235294, 0.6549019607843137, 0.7529411764705882],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"190913_S3_d1_MeP_1_SlowMeP.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.12941176470588237`, 0.5176470588235295, 0.6313725490196078], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.08627450980392158, 0.3450980392156863, 0.42091503267973857`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.12941176470588237`", ",", "0.5176470588235295`", ",", 
            "0.6313725490196078`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.12941176470588237`, 0.5176470588235295, 0.6313725490196078]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.12941176470588237`, 0.5176470588235295, 0.6313725490196078],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"190522_S2_d1_MeP_1_SlowChip.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.09019607843137255, 0.33725490196078434`, 0.49411764705882355`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.06013071895424837, 0.22483660130718958`, 0.3294117647058824],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.09019607843137255`", ",", "0.33725490196078434`", ",", 
            "0.49411764705882355`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.09019607843137255, 0.33725490196078434`, 0.49411764705882355`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.09019607843137255, 0.33725490196078434`, 0.49411764705882355`],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"190605_S2_d1_MeP_1_SlowChip.csv\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.7058823529411765, 0.49411764705882355`, 0.5450980392156862], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.4705882352941177, 0.3294117647058824, 0.3633986928104575],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.7058823529411765`", ",", "0.49411764705882355`", ",", 
            "0.5450980392156862`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.7058823529411765, 0.49411764705882355`, 0.5450980392156862]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.7058823529411765, 0.49411764705882355`, 0.5450980392156862],
     Editable->False,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7895053226645193`*^9, 3.7895070493077583`*^9, 
  3.789509404999537*^9, 3.789578430886849*^9, 3.789580043446024*^9, 
  3.78958275060798*^9, 3.792166160492589*^9, 3.792340102471406*^9, 
  3.79268608037146*^9, 3.7926927304174643`*^9, 3.792785498809792*^9, 
  3.792861786932603*^9, 3.793556353185498*^9, 3.809870573403266*^9, 
  3.8099136641408377`*^9, 3.809978676773308*^9, 3.810243355540168*^9, 
  3.8119767657277107`*^9, 3.8125511094364243`*^9, 3.812662754034403*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"9d49684c-1589-434c-b607-28b5d43de8b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expIndexAssociation", "=", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{
    "\"\<190117_S3d1_PafA_GlyScan_MeP_reprocessed_190210\>\"", "\[Rule]", 
     "1"}], ",", 
    RowBox[{"\"\<190123_S3d1_PafA_GlyScan_MeP_190205\>\"", "\[Rule]", "2"}], 
    ",", 
    RowBox[{"\"\<190314_S3d1_PafA_ValScan_MeP\>\"", "\[Rule]", "3"}], ",", 
    RowBox[{"\"\<190318_S3d1_PafA_ValScan_MeP\>\"", "\[Rule]", "4"}], ",", 
    RowBox[{"\"\<190321_S2d2_PafA_ValScan_MeP\>\"", "\[Rule]", "5"}], ",", 
    RowBox[{"\"\<190913_S2d1PafA_SlowMePChip\>\"", "\[Rule]", "6"}], ",", 
    RowBox[{"\"\<190913_S3d1PafA_SlowMePChip\>\"", "\[Rule]", "7"}], ",", 
    RowBox[{"\"\<190522_S2d1PafA_MeP_SlowChip\>\"", "\[Rule]", "8"}], ",", 
    RowBox[{"\"\<190605_S2d1PafA_MeP_SlowChip\>\"", "\[Rule]", "9"}]}], 
   "\[RightAssociation]"}]}]], "Input",
 CellChangeTimes->{{3.7813692127122393`*^9, 3.78136922038372*^9}, {
  3.784348571843069*^9, 3.784348573981441*^9}, {3.7895053270125303`*^9, 
  3.7895053476105843`*^9}, {3.7921661667695704`*^9, 3.792166169141569*^9}, {
  3.8119767717401457`*^9, 3.811976771878501*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"6209c83b-05da-4dcd-86d7-b7e6f818f6b3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"190117_S3d1_PafA_GlyScan_MeP_reprocessed_190210\"\>", 
    "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"190123_S3d1_PafA_GlyScan_MeP_190205\"\>", "\[Rule]", "2"}], 
   ",", 
   RowBox[{"\<\"190314_S3d1_PafA_ValScan_MeP\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"190318_S3d1_PafA_ValScan_MeP\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"190321_S2d2_PafA_ValScan_MeP\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"190913_S2d1PafA_SlowMePChip\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"190913_S3d1PafA_SlowMePChip\"\>", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"190522_S2d1PafA_MeP_SlowChip\"\>", "\[Rule]", "8"}], ",", 
   RowBox[{"\<\"190605_S2d1PafA_MeP_SlowChip\"\>", "\[Rule]", "9"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.789505348609168*^9, 3.789507049418728*^9, 3.789509405105308*^9, 
   3.789578431151867*^9, 3.789580043945414*^9, 3.7895827508806868`*^9, 
   3.792166169915512*^9, 3.792340102541068*^9, 3.792686081059538*^9, 
   3.792692731761303*^9, 3.7927854988318977`*^9, 3.792861786956026*^9, 
   3.793556353282937*^9, 3.8098705750461397`*^9, 3.809913665752614*^9, 
   3.809978678116477*^9, 3.810243358051812*^9, {3.811976768003648*^9, 
   3.811976772233263*^9}, 3.81255111100071*^9, 3.812662755634179*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"b03feb3f-a428-4a2a-8d74-8949890eca64"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Bootstrap functions (for ",
 StyleBox["p",
  FontSlant->"Italic"],
 "-value calculation and parameter error estimates) (evaluate hidden cell \
below):"
}], "Subsubsection",
 CellChangeTimes->{{3.747071301233356*^9, 3.747071304996008*^9}, {
  3.752261806906311*^9, 
  3.7522618541426287`*^9}},ExpressionUUID->"c280a725-40e6-4e75-9cc0-\
ef3c4ed335fc"],

Cell["\<\
'bsMedian' returns p-values for the following parameters, in the same order: \
{kcat, KM, kcat/KM}\
\>", "Text",
 CellChangeTimes->{{3.747071318361149*^9, 3.7470713560258427`*^9}, {
  3.75304762036412*^9, 
  3.75304762239002*^9}},ExpressionUUID->"4ac0c6c6-f5cc-4191-b040-\
43c4c63c668e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<HypothesisTesting`\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsMedianIteration", "[", 
    RowBox[{"mutantKIswithCIs_", ",", "wtIn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sample", ",", "tobs", ",", "bs1", ",", "bs2", ",", "tstar", ",", 
       "weightedMean", ",", "weightedWTMean", ",", "wtRS", ",", "mutRS"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"wtRS", "=", 
       RowBox[{"median2", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"wtIn", ",", "mutantKIswithCIs"}], "]"}], ",", 
          RowBox[{"Length", "[", "wtIn", "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mutRS", "=", 
       RowBox[{"median2", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"wtIn", ",", "mutantKIswithCIs"}], "]"}], ",", 
          RowBox[{"Length", "[", "mutantKIswithCIs", "]"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tstar", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"mutRS", "-", "wtRS"}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsMedian", "[", 
    RowBox[{"mutantKIswithCIs_", ",", "wtIn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sample", ",", "tobs", ",", "bs1", ",", "bs2", ",", "tstar", ",", 
       "weightedMean", ",", "weightedWTMean", ",", "wtRS", ",", "mutRS", ",", 
       "checkpoint1", ",", "checkpoint2", ",", "checkpoint3"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"weightedMean", "=", 
       RowBox[{"median2", "[", "mutantKIswithCIs", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "weightedMean", "]"}], "\[Equal]", "Median"}], 
        ",", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{
           "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
            "Indeterminate"}], "}"}], "]"}], ";", 
         RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"weightedWTMean", "=", 
       RowBox[{"median2", "[", "wtIn", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tobs", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"(", 
         RowBox[{"weightedMean", "-", "weightedWTMean"}], ")"}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tstar", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"bsMedianIteration", "[", 
          RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
         RowBox[{"{", "100", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"calculate", " ", "for", " ", "kcat"}], ",", " ", "Km", ",", 
        " ", 
        RowBox[{"and", " ", 
         RowBox[{"kcat", "/", "Km"}], " ", "simultaneously", " ", "for", " ", 
         "speed"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"checkpoint1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"tstar", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", ">", 
                RowBox[{"tobs", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], "/",
            "100"}], "*", "1.0"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ">", "0.1"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "checkpoint1", "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tstar", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"bsMedianIteration", "[", 
             RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
            RowBox[{"{", "1000", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"checkpoint2", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"tstar", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", ">", 
                   RowBox[{"tobs", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], 
              "/", "1000"}], "*", "1.0"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "4", "]"}], "]"}], ">", "0.01"}]}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "checkpoint2", "]"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tstar", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"bsMedianIteration", "[", 
                RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
               RowBox[{"{", "numStatsBootstraps", "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"checkpoint3", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"tstar", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", ">", 
                    RowBox[{"tobs", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], 
                 "/", "numStatsBootstraps"}], "*", "1.0"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "checkpoint3", "]"}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsMeanIteration", "[", 
    RowBox[{"mutantKIswithCIs_", ",", "wtIn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sample", ",", "tobs", ",", "bs1", ",", "bs2", ",", "tstar", ",", 
       "weightedMean", ",", "weightedWTMean", ",", "wtRS", ",", "mutRS"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"wtRS", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"wtIn", ",", "mutantKIswithCIs"}], "]"}], ",", 
          RowBox[{"Length", "[", "wtIn", "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mutRS", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"wtIn", ",", "mutantKIswithCIs"}], "]"}], ",", 
          RowBox[{"Length", "[", "mutantKIswithCIs", "]"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tstar", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"mutRS", "-", "wtRS"}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsMean", "[", 
    RowBox[{"mutantKIswithCIs_", ",", "wtIn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sample", ",", "tobs", ",", "bs1", ",", "bs2", ",", "tstar", ",", 
       "weightedMean", ",", "weightedWTMean", ",", "wtRS", ",", "mutRS", ",", 
       "checkpoint1", ",", "checkpoint2", ",", "checkpoint3"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"weightedMean", "=", 
       RowBox[{"Mean", "[", "mutantKIswithCIs", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"weightedWTMean", "=", 
       RowBox[{"Mean", "[", "wtIn", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tobs", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"(", 
         RowBox[{"weightedMean", "-", "weightedWTMean"}], ")"}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tstar", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"bsMeanIteration", "[", 
          RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
         RowBox[{"{", "100", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"calculate", " ", "for", " ", "kcat"}], ",", " ", "Km", ",", 
        " ", 
        RowBox[{"and", " ", 
         RowBox[{"kcat", "/", "Km"}], " ", "simultaneously", " ", "for", " ", 
         "speed"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"checkpoint1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"tstar", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", ">", 
                RowBox[{"tobs", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], "/",
            "100"}], "*", "1.0"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ">", "0.1"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "checkpoint1", "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tstar", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"bsMeanIteration", "[", 
             RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
            RowBox[{"{", "1000", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"checkpoint2", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"tstar", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", ">", 
                   RowBox[{"tobs", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], 
              "/", "1000"}], "*", "1.0"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "4", "]"}], "]"}], ">", "0.01"}]}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "checkpoint2", "]"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tstar", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"bsMeanIteration", "[", 
                RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
               RowBox[{"{", "numStatsBootstraps", "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"checkpoint3", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"tstar", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", ">", 
                    RowBox[{"tobs", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], 
                 "/", "numStatsBootstraps"}], "*", "1.0"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "checkpoint3", "]"}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"function", " ", "for", " ", "bootstrapping", " ", "residuals"}], 
    " ", "-", " ", 
    RowBox[{
    "to", " ", "get", " ", "parameter", " ", "estimate", " ", "errors"}]}], 
   " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsResidual", "[", 
    RowBox[{"fitModel_", ",", "numBootstraps_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "model", ",", "data", ",", "residuals", ",", "bootstraps", ",", 
       "concentrations", ",", "reshuffled", ",", "newData", ",", "newFit", 
       ",", "newParams"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "extract", " ", "input", " ", "experimental", " ", "data", " ", "from", 
       " ", "FittedModel"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"model", "=", "fitModel"}], ";", "\[IndentingNewLine]", 
      RowBox[{"data", "=", 
       RowBox[{"model", "[", "\"\<Data\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"extract", " ", "residuals"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"residuals", "=", 
       RowBox[{"model", "[", "\"\<FitResiduals\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "reshuffle", " ", "residuals", " ", "and", " ", "bootstrap", " ", 
        RowBox[{"(", "looped", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"bootstraps", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"concentrations", "=", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"reshuffled", "=", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{"residuals", ",", 
             RowBox[{"Length", "[", "residuals", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"newData", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"concentrations", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"model", "[", 
                 RowBox[{"concentrations", "[", 
                  RowBox[{"[", "n", "]"}], "]"}], "]"}], "+", 
                RowBox[{"reshuffled", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", "concentrations", "]"}]}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"newFit", "=", 
           RowBox[{"NonlinearModelFit", "[", 
            RowBox[{"newData", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Vmax", "*", 
                RowBox[{"substrate", "/", 
                 RowBox[{"(", 
                  RowBox[{"KM", "+", "substrate"}], ")"}]}]}], ",", 
               RowBox[{
                RowBox[{"KM", ">", "0"}], "&&", 
                RowBox[{"Vmax", ">", "0"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Vmax", ",", "KM"}], "}"}], ",", "substrate"}], "]"}]}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"newParams", "=", 
           RowBox[{"newFit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Vmax", "/.", "newParams"}], ",", 
            RowBox[{"KM", "/.", "newParams"}]}], "}"}]}], ",", 
         RowBox[{"{", "numBootstraps", "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsStdDevIteration", "[", 
    RowBox[{"mutantKIswithCIs_", ",", "wtIn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sample", ",", "tobs", ",", "bs1", ",", "bs2", ",", "tstar", ",", 
       "weightedMean", ",", "weightedWTMean", ",", "wtRS", ",", "mutRS"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"wtRS", "=", 
       RowBox[{"StandardDeviation", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"wtIn", ",", "mutantKIswithCIs"}], "]"}], ",", 
          RowBox[{"Length", "[", "wtIn", "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mutRS", "=", 
       RowBox[{"StandardDeviation", "[", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"wtIn", ",", "mutantKIswithCIs"}], "]"}], ",", 
          RowBox[{"Length", "[", "mutantKIswithCIs", "]"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tstar", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"mutRS", "-", "wtRS"}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsStdDev", "[", 
    RowBox[{"mutantKIswithCIs_", ",", "wtIn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sample", ",", "tobs", ",", "bs1", ",", "bs2", ",", "tstar", ",", 
       "weightedMean", ",", "weightedWTMean", ",", "wtRS", ",", "mutRS", ",", 
       "checkpoint1", ",", "checkpoint2", ",", "checkpoint3"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"weightedMean", "=", 
       RowBox[{"StandardDeviation", "[", "mutantKIswithCIs", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "weightedMean", "]"}], "\[Equal]", 
         "StandardDeviation"}], ",", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{
           "Indeterminate", ",", "Indeterminate", ",", "Indeterminate"}], 
           "}"}], "]"}], ";", 
         RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"weightedWTMean", "=", 
       RowBox[{"StandardDeviation", "[", "wtIn", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tobs", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"(", 
         RowBox[{"weightedMean", "-", "weightedWTMean"}], ")"}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tstar", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"bsStdDevIteration", "[", 
          RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
         RowBox[{"{", "100", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"calculate", " ", "for", " ", "kcat"}], ",", " ", "Km", ",", 
        " ", 
        RowBox[{"and", " ", 
         RowBox[{"kcat", "/", "Km"}], " ", "simultaneously", " ", "for", " ", 
         "speed"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"checkpoint1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"tstar", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", ">", 
                RowBox[{"tobs", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], "/",
            "100"}], "*", "1.0"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", "0.1"}], "&&", 
         RowBox[{
          RowBox[{"checkpoint1", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ">", "0.1"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "checkpoint1", "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tstar", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"bsStdDevIteration", "[", 
             RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
            RowBox[{"{", "1000", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"checkpoint2", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"tstar", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", ">", 
                   RowBox[{"tobs", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], 
              "/", "1000"}], "*", "1.0"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">", "0.01"}], "&&", 
            RowBox[{
             RowBox[{"checkpoint2", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ">", "0.01"}]}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "checkpoint2", "]"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tstar", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"bsStdDevIteration", "[", 
                RowBox[{"mutantKIswithCIs", ",", "wtIn"}], "]"}], ",", 
               RowBox[{"{", "numStatsBootstraps", "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"checkpoint3", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"tstar", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "n"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", ">", 
                    RowBox[{"tobs", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], 
                 "/", "numStatsBootstraps"}], "*", "1.0"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "checkpoint3", "]"}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorPVal", "[", 
   RowBox[{"pvalue_", ",", "cutoff_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"pvalue", "\[NotEqual]", "\"\<N/A\>\""}], ",", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"pvalue", "<", "cutoff"}], "&&", 
       RowBox[{"pvalue", "\[NotEqual]", "0."}]}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "pvalue", "]"}], ",", "Bold", ",", 
        RowBox[{"ColorData", "[", 
         RowBox[{"20", ",", "8"}], "]"}]}], "]"}], ",", 
      RowBox[{"pvalue", "\[Equal]", "0."}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<<\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"1.0", "/", "numStatsBootstraps"}], "]"}]}], ",", "Bold", 
        ",", 
        RowBox[{"ColorData", "[", 
         RowBox[{"20", ",", "8"}], "]"}]}], "]"}], ",", 
      RowBox[{"pvalue", "\[GreaterEqual]", "cutoff"}], ",", 
      RowBox[{"ToString", "[", "pvalue", "]"}]}], "]"}], ",", "\"\<N/A\>\""}],
    "]"}]}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.747071312931332*^9, 3.747071315688757*^9}, {
   3.747072094835073*^9, 3.747072121825633*^9}, {3.7470721613021317`*^9, 
   3.747072161473365*^9}, {3.747072452202002*^9, 3.747072477377877*^9}, {
   3.747075812139269*^9, 3.747075823354884*^9}, {3.747077267115733*^9, 
   3.747077267554206*^9}, {3.7476634825316*^9, 3.747663524953813*^9}, {
   3.7476651939446774`*^9, 3.7476652296610327`*^9}, 3.747665582999374*^9, {
   3.7476656190157137`*^9, 3.7476657008126087`*^9}, {3.7476691599789867`*^9, 
   3.747669161431737*^9}, {3.7522628113254137`*^9, 3.7522628231152687`*^9}, {
   3.752262862685484*^9, 3.752262885289198*^9}, {3.752263082209503*^9, 
   3.7522630834158497`*^9}, {3.752263219885839*^9, 3.752263245446314*^9}, {
   3.752285294140671*^9, 3.752285325337244*^9}, {3.752338751729974*^9, 
   3.7523387702503777`*^9}, {3.7523388275364733`*^9, 3.752338835717732*^9}, {
   3.75233887145965*^9, 3.7523388735063257`*^9}, {3.773448117875702*^9, 
   3.773448121391088*^9}, {3.7737859801785727`*^9, 3.773785986879698*^9}, {
   3.774126487741969*^9, 3.774126489369727*^9}, {3.774126600635477*^9, 
   3.774126603179907*^9}, {3.774191421376882*^9, 3.7741914308971786`*^9}, {
   3.774200738318223*^9, 3.774200802029101*^9}, {3.7742009056402893`*^9, 
   3.774200915480854*^9}, {3.774201239051526*^9, 3.774201240466277*^9}, {
   3.774201273047916*^9, 3.774201289123909*^9}, {3.77435605293355*^9, 
   3.774356060870812*^9}, {3.7743631966547813`*^9, 3.774363207735347*^9}, {
   3.774380063731043*^9, 3.774380085888908*^9}, {3.774916730392088*^9, 
   3.774916738805901*^9}, {3.7843196963701057`*^9, 3.784319726445236*^9}, {
   3.788022497744402*^9, 3.788022542231883*^9}, {3.788022835705707*^9, 
   3.788022851552636*^9}, {3.78813269732345*^9, 3.788132697893067*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"48142aec-924c-4a15-a62f-44d9791edd73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Function for statistical analysis, make aggregate plots, and output a \
dataset with aggregate plots, kinetic parameters, ",
 StyleBox["p",
  FontSlant->"Italic"],
 "-values etc. (evaluate hidden cell below):"
}], "Subsubsection",
 CellChangeTimes->{{3.747071301233356*^9, 3.747071304996008*^9}, {
  3.752261806906311*^9, 
  3.752261936370757*^9}},ExpressionUUID->"378de959-2bbd-4d67-a134-\
da657d765354"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "association", " ", "containing", " ", "expression", " ", "numbers"}], 
    ",", " ", 
    RowBox[{"applied", " ", "to", " ", "1000", 
     RowBox[{"uM", " ", "[", "cMUP", "]"}], " ", "only"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"allData", "=", 
     RowBox[{"Join", "@@", "datasets"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"highestSonly", "=", 
     RowBox[{"allData", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#ExpIndex", "\[Equal]", "1"}], "&"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allGroupedByMutantFast", "=", 
     RowBox[{
      RowBox[{"highestSonly", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowChip\>\""}], "&&", 
          RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowestChip\>\""}]}], 
         "&"}], "]"}], "]"}], "[", 
      RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allGroupedByMutantSlow", "=", 
     RowBox[{
      RowBox[{"highestSonly", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#ChipType", "\[Equal]", "\"\<SlowChip\>\""}], "&"}], "]"}], 
       "]"}], "[", 
      RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allGroupedByMutantSlowest", "=", 
     RowBox[{
      RowBox[{"highestSonly", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#ChipType", "\[Equal]", "\"\<SlowestChip\>\""}], "&"}], 
        "]"}], "]"}], "[", 
      RowBox[{"GroupBy", "[", "\"\<MutantID\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"expressionDataFast", "=", 
     RowBox[{"Association", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"allGroupedByMutantFast", "[", 
          RowBox[{"mut", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"allGroupedByMutantFast", "[", "mut", "]"}], "]"}], ",", 
           RowBox[{"Length", "[", 
            RowBox[{
             RowBox[{"allGroupedByMutantFast", "[", "mut", "]"}], "[", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"#EnzymeConc", ">", "0.3"}], "&"}], "]"}], "]"}], 
            "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
               RowBox[{"allGroupedByMutantFast", "[", "mut", "]"}], "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"#EnzymeConc", ">", "0.3"}], "&"}], "]"}], "]"}], 
              "]"}], "/", 
             RowBox[{"Length", "[", 
              RowBox[{"allGroupedByMutantFast", "[", "mut", "]"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{"allGroupedByMutantFast", "[", "mut", "]"}], "[", 
             RowBox[{"All", ",", "\"\<EnzymeConc\>\""}], "]"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"mut", ",", "1", ",", 
          RowBox[{"Length", "[", "allGroupedByMutantFast", "]"}]}], "}"}]}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"expressionDataSlow", "=", 
     RowBox[{"Association", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"allGroupedByMutantSlow", "[", 
          RowBox[{"mut", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"allGroupedByMutantSlow", "[", "mut", "]"}], "]"}], ",", 
           RowBox[{"Length", "[", 
            RowBox[{
             RowBox[{"allGroupedByMutantSlow", "[", "mut", "]"}], "[", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"#EnzymeConc", ">", "0.3"}], "&"}], "]"}], "]"}], 
            "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
               RowBox[{"allGroupedByMutantSlow", "[", "mut", "]"}], "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"#EnzymeConc", ">", "0.3"}], "&"}], "]"}], "]"}], 
              "]"}], "/", 
             RowBox[{"Length", "[", 
              RowBox[{"allGroupedByMutantSlow", "[", "mut", "]"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{"allGroupedByMutantSlow", "[", "mut", "]"}], "[", 
             RowBox[{"All", ",", "\"\<EnzymeConc\>\""}], "]"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"mut", ",", "1", ",", 
          RowBox[{"Length", "[", "allGroupedByMutantSlow", "]"}]}], "}"}]}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"expressionDataSlowest", "=", 
     RowBox[{"Association", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"allGroupedByMutantSlowest", "[", 
          RowBox[{"mut", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"allGroupedByMutantSlowest", "[", "mut", "]"}], "]"}], 
           ",", 
           RowBox[{"Length", "[", 
            RowBox[{
             RowBox[{"allGroupedByMutantSlowest", "[", "mut", "]"}], "[", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"#EnzymeConc", ">", "0.3"}], "&"}], "]"}], "]"}], 
            "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
               RowBox[{"allGroupedByMutantSlowest", "[", "mut", "]"}], "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"#EnzymeConc", ">", "0.3"}], "&"}], "]"}], "]"}], 
              "]"}], "/", 
             RowBox[{"Length", "[", 
              RowBox[{"allGroupedByMutantSlowest", "[", "mut", "]"}], "]"}]}],
             "]"}], ",", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{"allGroupedByMutantSlowest", "[", "mut", "]"}], "[", 
             RowBox[{"All", ",", "\"\<EnzymeConc\>\""}], "]"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"mut", ",", "1", ",", 
          RowBox[{"Length", "[", "allGroupedByMutantSlowest", "]"}]}], 
         "}"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "WT", " ", "fast", " ", "and", " ", "slow", " ", "chip", " ", "data", " ",
      "separated"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sortedWTbyChipType", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"groupedbyMutant", "[", "\"\<WT\>\"", "]"}], "[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<UniqueExptID\>\"", ",", "\"\<ChipType\>\"", ",", "kcatKey", ",",
           "KmKey"}], "}"}]}], "]"}], "[", 
      RowBox[{"GroupBy", "[", "\"\<ChipType\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fastChipDataWT", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", 
          RowBox[{"normalizationData", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", 
            RowBox[{"normalizationData", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ")"}], "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ")"}]}]}], "}"}], "&"}], "/@", 
      RowBox[{"Values", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"sortedWTbyChipType", "[", 
           RowBox[{"\"\<GlyScan\>\"", ",", "All", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<UniqueExptID\>\"", ",", "kcatKey", ",", "KmKey"}], 
             "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"Normal", "[", 
          RowBox[{"sortedWTbyChipType", "[", 
           RowBox[{"\"\<ValScan\>\"", ",", "All", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<UniqueExptID\>\"", ",", "kcatKey", ",", "KmKey"}], 
             "}"}]}], "]"}], "]"}]}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slowChipDataWT", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", 
          RowBox[{"normalizationData", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", 
            RowBox[{"normalizationData", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ")"}], "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ")"}]}]}], "}"}], "&"}], "/@", 
      RowBox[{"Values", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{"sortedWTbyChipType", "[", 
         RowBox[{"\"\<SlowChip\>\"", ",", "All", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<UniqueExptID\>\"", ",", "kcatKey", ",", "KmKey"}], 
           "}"}]}], "]"}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"no", " ", "WT", " ", "on", " ", "Slowest", " ", "Chip"}], " ", 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"determine", " ", "the", " ", "per"}], "-", 
     RowBox[{
     "chip", " ", "replacement", " ", "value", " ", "for", " ", "negative", 
      " ", "kobs", " ", 
      RowBox[{"(", "limit", ")"}], " ", "values"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"groupedByExptSlowOnly", "=", 
     RowBox[{"slow", "[", 
      RowBox[{"GroupBy", "[", "\"\<UniqueExptID\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kobsLimitReplacementValues", "=", 
     RowBox[{"Association", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"groupedByExptSlowOnly", "[", 
          RowBox[{"expt", ",", "1", ",", "\"\<UniqueExptID\>\""}], "]"}], "->", 
         RowBox[{"Median", "[", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{
                 RowBox[{"groupedByExptSlowOnly", "[", 
                  RowBox[{"expt", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"normalizationData", "[", 
                  RowBox[{"groupedByExptSlowOnly", "[", 
                   RowBox[{"expt", ",", "1", ",", "\"\<UniqueExptID\>\""}], 
                   "]"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"Normal", "[", 
                   RowBox[{
                    RowBox[{"groupedByExptSlowOnly", "[", 
                    RowBox[{
                    "expt", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], ")"}], 
                 "*", 
                 RowBox[{
                  RowBox[{"Normal", "[", 
                   RowBox[{"groupedByExptSlowOnly", "[", 
                    RowBox[{"expt", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}],
                     "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "*", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "9"}]}]}], ")"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"groupedByExptSlowOnly", "[", "expt", "]"}], "]"}]}],
                "}"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"expt", ",", "1", ",", 
          RowBox[{"Length", "[", "groupedByExptSlowOnly", "]"}]}], "}"}]}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"makeAggDataset", "[", "mutant_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "mutantID", ",", "enzymeConcs", ",", "expts", ",", "chipTypes"}], 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"mutantID", "=", 
        RowBox[{"Normal", "[", 
         RowBox[{"groupedbyMutant", "[", 
          RowBox[{"mutant", ",", "1", ",", "\"\<MutantID\>\""}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"expts", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"exptsTrimmedNames", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{"Normal", "[", 
             RowBox[{"groupedbyMutant", "[", 
              RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], 
              "]"}], "]"}], ",", "11"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"chipTypes", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{"mutant", ",", "n", ",", "\"\<ChipType\>\""}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{"mutant", ",", "n", ",", "\"\<LocalBackgroundRatio\>\""}],
             "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"r2s", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{"mutant", ",", "n", ",", "\"\<FitR2\>\""}], "]"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "normalization", " ", "of", " ", "fitted", " ", "kcats", " ", 
         RowBox[{"(", 
          RowBox[{"lagoon", " ", "and", " ", "chip", " ", "corrected"}], 
          ")"}], " ", "to", " ", "internal", " ", "WT", " ", "kcat", " ", 
         "standard"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"normalizationFactors", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"normalizationData", "[", "#", "]"}], "&"}], "/@", 
         "expts"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"chambers", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"Normal", "[", 
            RowBox[{"groupedbyMutant", "[", 
             RowBox[{"mutant", ",", "n", ",", "\"\<Indices\>\""}], "]"}], 
            "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"enzymeConcs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Normal", "[", 
            RowBox[{"groupedbyMutant", "[", 
             RowBox[{"mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], 
             "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "kobs", " ", "fits", " ", "obtained", " ", "by", " ", "scaling", " ", 
         "exponential", " ", "fit", " ", "k", " ", "by", " ", 
         "normalizationFactor", " ", 
         RowBox[{"and", " ", "[", "E", "]"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"kobs", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ToExpression", "[", 
               RowBox[{"Normal", "[", 
                RowBox[{"groupedbyMutant", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<ExponentialFit\>\""}], 
                 "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"normalizationFactors", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "*", 
               RowBox[{"enzymeConcs", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "*", 
               RowBox[{"10", "^", 
                RowBox[{"-", "9"}]}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
             "}"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "kobs", " ", "determined", " ", "by", " ", "scaling", " ", "linear", 
         " ", "fit", " ", "at", " ", 
         RowBox[{"lowest", " ", "[", "S", "]"}], " ", 
         RowBox[{"by", " ", "[", "S", "]"}], " ", 
         RowBox[{"and", " ", "[", "E", "]"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"kobsRaw", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{"groupedbyMutant", "[", 
              RowBox[{"mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
              "]"}], "[", 
             RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"normalizationFactors", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"Normal", "[", 
               RowBox[{
                RowBox[{"groupedbyMutant", "[", 
                 RowBox[{
                 "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], ")"}], "*", 
             RowBox[{"enzymeConcs", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "9"}]}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"correct", " ", "negative", " ", "kobs"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"kobs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"kobsRaw", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "<", "0"}], ",", 
            RowBox[{"kobsLimitReplacementValues", "[", 
             RowBox[{"expts", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
            RowBox[{"kobsRaw", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"get", " ", "min", " ", "and", " ", 
         RowBox[{"max", " ", "[", "S", "]"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"highLowSlimits", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"#", "\[NotEqual]", "0"}], "&"}]}], "]"}], "]"}], ",", 
            RowBox[{"Max", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], "&"}],
          "/@", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{"mutant", ",", "All", ",", "\"\<DataPoints\>\""}], "]"}], 
           "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "apply", " ", "normalization", " ", "factors", " ", "directly", " ", 
          "to", " ", "kcats"}], ",", " ", 
         RowBox[{
         "to", " ", "simplify", " ", "downstream", " ", "calculations"}]}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"mutantkcatsRaw", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"groupedbyMutant", "[", 
            RowBox[{"mutant", ",", "n", ",", "kcatKey"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mutantkcatsIn", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Normal", "[", 
            RowBox[{"groupedbyMutant", "[", 
             RowBox[{"mutant", ",", "n", ",", "kcatKey"}], "]"}], "]"}], "/", 
           
           RowBox[{"normalizationFactors", "[", 
            RowBox[{"[", "n", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mutantkcats", "=", 
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Replace", "[", 
            RowBox[{"#1", ",", "#2", ",", "Infinity"}], "]"}], "&"}], ",", 
          "mutantkcatsIn", ",", 
          RowBox[{"{", 
           RowBox[{"_Times", "\[Rule]", "Indeterminate"}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"mutantKmsRaw", "=", 
        RowBox[{"Normal", "[", 
         RowBox[{"groupedbyMutant", "[", 
          RowBox[{"mutant", ",", "All", ",", "KmKey"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "check", " ", "mutant", " ", "Km", " ", "data", " ", "for", " ", 
          "tight", " ", "and", " ", "weak", " ", "Km", " ", "limits", " ", 
          RowBox[{"(", 
           RowBox[{"Km", "<", "KmFlag"}], ")"}]}], ",", " ", 
         RowBox[{"and", " ", "if", " ", "so"}], ",", " ", 
         RowBox[{
          RowBox[{"replace", " ", "with", " ", "Km"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"lowest", " ", "[", "S", "]"}], "/", "2"}], " ", "and", 
           " ", "a", " ", "limit", " ", "flag"}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"modified", " ", 
         RowBox[{
          RowBox[{"20", "/", "02"}], "/", "25"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"mutantKmDataIn", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"#", "<", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"highLowSlimits", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "/", "2"}], ")"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"highLowSlimits", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "/", "2"}], ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"#", ">", 
             RowBox[{
              RowBox[{"highLowSlimits", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", "2"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"#", ",", "1"}], "}"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"highLowSlimits", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "/", "2"}], ")"}], 
             "\[LessEqual]", "#", "\[LessEqual]", " ", 
             RowBox[{
              RowBox[{"highLowSlimits", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", "2"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"#", ",", "0"}], "}"}]}], "]"}], "&"}], "/@", 
         RowBox[{"Normal", "[", 
          RowBox[{"groupedbyMutant", "[", 
           RowBox[{"mutant", ",", "All", ",", "KmKey"}], "]"}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"mutantKmData", "=", 
        RowBox[{"mutantKmDataIn", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"mutantKmLimitTable", "=", 
        RowBox[{"mutantKmDataIn", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"kcatOverKmRaw", "=", 
        RowBox[{"mutantkcatsRaw", "/", 
         RowBox[{"(", 
          RowBox[{"mutantKmData", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "6"}]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"kcatOverKmData", "=", 
        RowBox[{"mutantkcats", "/", 
         RowBox[{"(", 
          RowBox[{"mutantKmData", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "6"}]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "determine", " ", "if", " ", "enough", " ", "Kms", " ", "are", " ", 
         "limits", " ", "to", " ", "define", " ", "the", " ", "aggregate", 
         " ", "estimate", " ", "as", " ", "a", " ", "limit"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"aggKmLimit", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"Select", "[", 
              RowBox[{"mutantKmLimitTable", ",", 
               RowBox[{
                RowBox[{"#", "\[Equal]", "0"}], "&"}]}], "]"}], "]"}], "/", 
            RowBox[{"Length", "[", "mutantKmLimitTable", "]"}]}], ">", 
           "0.5"}], ",", "0", ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"mutantKmLimitTable", ",", 
             RowBox[{
              RowBox[{"#", "\[NotEqual]", "0"}], "&"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"kcat", "/", "Km"}], " ", "limits"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"kcatKmLimitTable", "=", 
        RowBox[{"-", 
         RowBox[{"Replace", "[", 
          RowBox[{"mutantKmLimitTable", ",", 
           RowBox[{"1", "\[Rule]", "0"}], ",", "1"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"aggkcatKmLimit", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"aggKmLimit", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"aggKmLimit", "\[NotEqual]", "1"}]}], ",", 
          RowBox[{"-", "aggKmLimit"}], ",", "0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Normal", "[", 
          RowBox[{"groupedbyMutant", "[", 
           RowBox[{"mutant", ",", "All", ",", "\"\<DataPoints\>\""}], "]"}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"merged", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"chipTypes", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"mutantkcats", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"mutantKmData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"kcatOverKmData", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "chipTypes", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"bootstrap", " ", "hypothesis", " ", "testing"}], " ", "-", 
         " ", "median"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "adding", " ", "4", "th", " ", "element", " ", "to", " ", "bootstrap",
          " ", "input", " ", "list", " ", "to", " ", "test", " ", "kobs"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"mutantNormDataAll", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"mutantkcats", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"mutantKmData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"kcatOverKmData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"kobs", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pvaluesMedian", "=", 
        RowBox[{"bsMedian", "[", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"mutantNormDataAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}], 
          ",", 
          RowBox[{"Replace", "[", 
           RowBox[{"wtDataNormAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}]}],
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"bootstrap", " ", "hypothesis", " ", "testing"}], " ", "-", 
         " ", "mean"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"pvaluesMean", "=", 
        RowBox[{"bsMean", "[", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"mutantNormDataAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}], 
          ",", 
          RowBox[{"Replace", "[", 
           RowBox[{"wtDataNormAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}]}],
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"bootstrap", " ", "hypothesis", " ", "test"}], " ", "-", " ", 
         RowBox[{"standard", " ", "deviation", " ", 
          RowBox[{"(", 
           RowBox[{"in", " ", "log2", " ", "space"}], ")"}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"pvaluesStdDev", "=", 
        RowBox[{"bsStdDev", "[", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"Replace", "[", 
             RowBox[{"mutantNormDataAll", ",", 
              RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], 
             "]"}]}], "]"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"Replace", "[", 
             RowBox[{"wtDataNormAll", ",", 
              RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], 
             "]"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"tooSlowFastChip", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"tooSlow", "[", "mutant", "]"}], "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowChip\>\""}], "&&", 
              
              RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowestChip\>\""}]}], 
             "&"}], "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tooSlowSlowChip", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"tooSlow", "[", "mutant", "]"}], "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"#ChipType", "\[Equal]", "\"\<SlowChip\>\""}], "&"}], 
            "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tooSlowSlowestChip", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"tooSlow", "[", "mutant", "]"}], "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"#ChipType", "\[Equal]", "\"\<SlowestChip\>\""}], "&"}], 
            "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsFast", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"groupedbyMutant", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
              "\"\<SlowChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
              "\"\<SlowestChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", 
              "rSqaredCutoff"}]}], "&"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlow", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"groupedbyMutant", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              "\"\<SlowChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", 
              "rSqaredCutoff"}]}], "&"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlowest", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"groupedbyMutant", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              "\"\<SlowestChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", 
              "rSqaredCutoff"}]}], "&"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"lbrsFastlowR2", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"groupedbyMutant", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
              "\"\<SlowChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
              "\"\<SlowestChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "rSqaredCutoff"}]}], 
            "&"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlowlowR2", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"groupedbyMutant", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              "\"\<SlowChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "rSqaredCutoff"}]}], 
            "&"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlowestlowR2", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"groupedbyMutant", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              "\"\<SlowestChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "rSqaredCutoff"}]}], 
            "&"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"fractionCulledFast", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsFast", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsFastlowR2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsFast", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsFastlowR2", "]"}], "+", 
               RowBox[{"Length", "[", "tooSlowFastChip", "]"}]}], ")"}]}]}], 
           "]"}], ",", "0.01"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulledSlow", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlow", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowlowR2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlow", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowlowR2", "]"}], "+", 
               RowBox[{"Length", "[", "tooSlowSlowChip", "]"}]}], ")"}]}]}], 
           "]"}], ",", "0.01"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulledSlowest", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlowest", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowestlowR2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlowest", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowestlowR2", "]"}], "+", 
               RowBox[{"Length", "[", "tooSlowSlowestChip", "]"}]}], 
              ")"}]}]}], "]"}], ",", "0.01"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"forCSV", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Association", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<Version\>\"", "\[Rule]", "notebookVersion"}], ",", 
               RowBox[{"\"\<RunDate\>\"", "\[Rule]", 
                RowBox[{"DateString", "[", "\"\<ISODate\>\"", "]"}]}], ",", 
               RowBox[{"\"\<MutantID\>\"", "\[Rule]", "mutantID"}], ",", 
               RowBox[{"\"\<Experiment\>\"", "\[Rule]", 
                RowBox[{"expts", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<ChipType\>\"", "\[Rule]", 
                RowBox[{"chipTypes", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Column\>\"", "\[Rule]", 
                RowBox[{"chambers", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Row\>\"", "\[Rule]", 
                RowBox[{"chambers", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<EnzymeConc\>\"", "\[Rule]", 
                RowBox[{"enzymeConcs", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<AllSubstrateConcs\>\"", "->", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"groupedbyMutant", "[", 
                   RowBox[{
                   "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                   "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<AllInitialRates\>\"", "->", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"groupedbyMutant", "[", 
                   RowBox[{
                   "mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
                   "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat\>\"", "->", 
                RowBox[{"mutantkcatsRaw", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcatNormalized\>\"", "\[Rule]", 
                RowBox[{"mutantkcats", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcatLimit\>\"", "\[Rule]", "0"}], ",", 
               RowBox[{"\"\<KMFit\>\"", "\[Rule]", 
                RowBox[{"mutantKmsRaw", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMLimitValue\>\"", "->", 
                RowBox[{"mutantKmData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMLimit\>\"", "->", 
                RowBox[{"mutantKmLimitTable", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<FitRSquared\>\"", "\[Rule]", 
                RowBox[{"groupedbyMutant", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<FitR2\>\""}], "]"}]}], 
               ",", 
               RowBox[{"\"\<kcatFitError\>\"", "\[Rule]", 
                RowBox[{"groupedbyMutant", "[", 
                 RowBox[{
                 "mutant", ",", "n", ",", "\"\<fit_mm_kcat_param_error\>\""}],
                  "]"}]}], ",", 
               RowBox[{"\"\<KMFitError\>\"", "\[Rule]", 
                RowBox[{"groupedbyMutant", "[", 
                 RowBox[{
                 "mutant", ",", "n", ",", "\"\<fit_mm_KM_param_error\>\""}], 
                 "]"}]}], ",", 
               RowBox[{"\"\<kcatoverKMFitError\>\"", "\[Rule]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Around", "[", 
                    RowBox[{
                    RowBox[{"mutantKmData", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", 
                    RowBox[{"groupedbyMutant", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", 
                    "\"\<fit_mm_kcat_param_error\>\""}], "]"}]}], "]"}], "/", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Around", "[", 
                    RowBox[{
                    RowBox[{"mutantKmData", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", 
                    RowBox[{"groupedbyMutant", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", 
                    "\"\<fit_mm_KM_param_error\>\""}], "]"}]}], "]"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "6"}]}]}], ")"}]}], ")"}], "[", 
                 "\"\<Uncertainty\>\"", "]"}]}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"\"\<kcatNormMean\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"mutantkcats", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcatNormMedian\>\"", "\[Rule]", 
                RowBox[{"median2", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"mutantkcats", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMMean\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", "mutantKmData", "]"}]}], ",", 
               RowBox[{"\"\<KMMedian\>\"", "\[Rule]", 
                RowBox[{"median2", "[", "mutantKmData", "]"}]}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"\"\<kcat/KM\>\"", "\[Rule]", 
                RowBox[{"kcatOverKmRaw", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", "\[IndentingNewLine]",
                "\[IndentingNewLine]", 
               RowBox[{"\"\<kcat/KMNorm\>\"", "\[Rule]", 
                RowBox[{"kcatOverKmData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kobs\>\"", "\[Rule]", 
                RowBox[{"kobsRaw", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kobsNegCorrected\>\"", "\[Rule]", 
                RowBox[{"kobs", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMean\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMedian\>\"", "\[Rule]", 
                RowBox[{"median2", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{
               "\"\<kcatNormBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{
               "\"\<kcat/KMBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kobsBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]",
                "\[IndentingNewLine]", 
               RowBox[{"\"\<Log2StdDevkcat\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", 
               RowBox[{"\"\<Log2StdDevKM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", 
               RowBox[{"\"\<Log2StdDevkcat/KM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", 
               RowBox[{"\"\<Log2StdDevkcat/KMLimit\>\"", "->", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
               "\"\<kcatNormBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{
               "\"\<kcat/KMBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kobsBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<NumCulledReps\>\"", "\[Rule]", 
                RowBox[{"Length", "[", "mutantkcatsIn", "]"}]}], ",", 
               RowBox[{"\"\<LBR\>\"", "\[Rule]", 
                RowBox[{"lbrs", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{
               "\"\<FractionCulled\>\"", "\[Rule]", "fractionCulled"}], ",", 
               RowBox[{"\"\<StdDevkcat\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], ",", 
               RowBox[{"\"\<StdDevKM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], ",", 
               RowBox[{"\"\<StdDevkcat/KM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMLimit\>\"", "\[Rule]", 
                RowBox[{"kcatKmLimitTable", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcatAggLimit\>\"", "\[Rule]", "0"}], ",", 
               RowBox[{"\"\<KMAggLimit\>\"", "->", "aggKmLimit"}], ",", 
               RowBox[{
               "\"\<kcat/KMAggLimit\>\"", "\[Rule]", "aggkcatKmLimit"}], ",", 
               
               RowBox[{"\"\<KMMedianLimit\>\"", "\[Rule]", 
                RowBox[{"median2", "[", "mutantKmData", "]"}]}], ",", 
               RowBox[{"\"\<KMMeanLimit\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", "mutantKmData", "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMedianLimit\>\"", "\[Rule]", 
                RowBox[{"median2", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMeanLimit\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"groupedbyMutant", "[", "mutant", "]"}], "]"}]}], 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Association", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<Version\>\"", "\[Rule]", "notebookVersion"}], ",", 
               RowBox[{"\"\<RunDate\>\"", "\[Rule]", 
                RowBox[{"DateString", "[", "\"\<ISODate\>\"", "]"}]}], ",", 
               RowBox[{"\"\<MutantID\>\"", "\[Rule]", "mutantID"}], ",", 
               RowBox[{"\"\<Experiment\>\"", "\[Rule]", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], 
                 "]"}]}], ",", 
               RowBox[{"\"\<ChipType\>\"", "\[Rule]", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<ChipType\>\""}], 
                 "]"}]}], ",", 
               RowBox[{"\"\<Column\>\"", "\[Rule]", 
                RowBox[{
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"tooSlow", "[", 
                   RowBox[{"mutant", ",", "n", ",", "\"\<Indices\>\""}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Row\>\"", "\[Rule]", 
                RowBox[{
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"tooSlow", "[", 
                   RowBox[{"mutant", ",", "n", ",", "\"\<Indices\>\""}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<EnzymeConc\>\"", "\[Rule]", 
                RowBox[{
                 RowBox[{"Normal", "[", 
                  RowBox[{"tooSlow", "[", 
                   RowBox[{
                   "mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], "]"}],
                   "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<AllSubstrateConcs\>\"", "->", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"tooSlow", "[", 
                   RowBox[{
                   "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                   "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<AllInitialRates\>\"", "->", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"tooSlow", "[", 
                   RowBox[{
                   "mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
                   "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<kcatNormalized\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<kcatLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<KMFit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<KMLimitValue\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<KMLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<FitRSquared\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<kcatFitError\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<KMFitError\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<kcatoverKMFitError\>\"", "\[Rule]", "\"\<\>\""}], 
               ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"\"\<kcatNormMean\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"mutantkcats", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcatNormMedian\>\"", "\[Rule]", 
                RowBox[{"median2", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"mutantkcats", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMMean\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", "mutantKmData", "]"}]}], ",", 
               RowBox[{"\"\<KMMedian\>\"", "\[Rule]", 
                RowBox[{"median2", "[", "mutantKmData", "]"}]}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"\"\<kcat/KM\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"\"\<kcat/KMNorm\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<kobsRaw\>\"", "\[Rule]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], ")"}], 
                   "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ")"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "9"}]}], "*", 
                    RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}]}], 
                    ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"normalizationData", "[", 
                   RowBox[{"Normal", "[", 
                    RowBox[{"tooSlow", "[", 
                    RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}],
                     "]"}], "]"}], "]"}], ")"}]}]}], ",", 
               RowBox[{"\"\<kobsNegCorrected\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], ")"}], 
                    "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ")"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "9"}]}], "*", 
                    RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}]}], 
                    ")"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"normalizationData", "[", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"tooSlow", "[", 
                    RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}],
                     "]"}], "]"}], "]"}], ")"}]}], "<", "0"}], ",", 
                  RowBox[{"kobsLimitReplacementValues", "[", 
                   RowBox[{"tooSlow", "[", 
                    RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}],
                     "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], ")"}], 
                    "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ")"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "9"}]}], "*", 
                    RowBox[{"Normal", "[", 
                    RowBox[{
                    RowBox[{"tooSlow", "[", 
                    RowBox[{
                    "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}]}], 
                    ")"}]}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"normalizationData", "[", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"tooSlow", "[", 
                    RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}],
                     "]"}], "]"}], "]"}], ")"}]}]}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMean\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMedian\>\"", "\[Rule]", 
                RowBox[{"median2", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{
               "\"\<kcatNormBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{
               "\"\<kcat/KMBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kobsBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
                RowBox[{"pvaluesMedian", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]",
                "\[IndentingNewLine]", 
               RowBox[{"\"\<Log2StdDevkcat\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", 
               RowBox[{"\"\<Log2StdDevKM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", 
               RowBox[{"\"\<Log2StdDevkcat/KM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", 
               RowBox[{"\"\<Log2StdDevkcat/KMLimit\>\"", "->", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
               ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
               "\"\<kcatNormBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<KMBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{
               "\"\<kcat/KMBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kobsBootstrapHypothesisTestMean\>\"", "\[Rule]", 
                RowBox[{"pvaluesMean", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<NumCulledReps\>\"", "\[Rule]", 
                RowBox[{"Length", "[", "mutantkcatsIn", "]"}]}], ",", 
               RowBox[{"\"\<LBR\>\"", "\[Rule]", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{
                 "mutant", ",", "n", ",", "\"\<LocalBackgroundRatio\>\""}], 
                 "]"}]}], ",", 
               RowBox[{
               "\"\<FractionCulled\>\"", "\[Rule]", "fractionCulled"}], ",", 
               RowBox[{"\"\<StdDevkcat\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"mutantkcats", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], ",", 
               RowBox[{"\"\<StdDevKM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"mutantKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], ",", 
               RowBox[{"\"\<StdDevkcat/KM\>\"", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                  RowBox[{"StandardDeviation", "[", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"kcatOverKmData", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMLimit\>\"", "\[Rule]", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{"\"\<kcatAggLimit\>\"", "\[Rule]", "0"}], ",", 
               RowBox[{"\"\<KMAggLimit\>\"", "->", "aggKmLimit"}], ",", 
               RowBox[{
               "\"\<kcat/KMAggLimit\>\"", "\[Rule]", "aggkcatKmLimit"}], ",", 
               
               RowBox[{"\"\<KMMedianLimit\>\"", "\[Rule]", 
                RowBox[{"median2", "[", "mutantKmData", "]"}]}], ",", 
               RowBox[{"\"\<KMMeanLimit\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", "mutantKmData", "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMedianLimit\>\"", "\[Rule]", 
                RowBox[{"median2", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"\"\<kcat/KMNormMeanLimit\>\"", "\[Rule]", 
                RowBox[{"Mean", "[", 
                 RowBox[{"Replace", "[", 
                  RowBox[{"kcatOverKmData", ",", 
                   RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                   "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MissingQ", "[", 
                 RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", "0", 
                ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "]"}]}], 
             "}"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "forCSV"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"makeAggDatasetSlow", "[", "mutant_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "fractionculled", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fractionCulled", "=", "1.0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"tooSlowFastChip", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"tooSlow", "[", "mutant", "]"}], "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowChip\>\""}], "&&", 
              
              RowBox[{"#ChipType", "\[NotEqual]", "\"\<SlowestChip\>\""}]}], 
             "&"}], "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tooSlowSlowChip", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"tooSlow", "[", "mutant", "]"}], "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"#ChipType", "\[Equal]", "\"\<SlowChip\>\""}], "&"}], 
            "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tooSlowSlowestChip", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"tooSlow", "[", "mutant", "]"}], "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"#ChipType", "\[Equal]", "\"\<SlowestChip\>\""}], "&"}], 
            "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsFast", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Values", "[", 
                RowBox[{"Normal", "[", 
                 RowBox[{"tooSlow", "[", 
                  RowBox[{"mutant", ",", "n", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                    ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
                "\"\<SlowChip\>\""}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
                "\"\<SlowestChip\>\""}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", 
                "rSqaredCutoff"}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ">", "5.0"}]}], "&"}]}], 
            "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlow", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Values", "[", 
                RowBox[{"Normal", "[", 
                 RowBox[{"tooSlow", "[", 
                  RowBox[{"mutant", ",", "n", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                    ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
                "\"\<SlowChip\>\""}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", 
                "rSqaredCutoff"}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ">", "5.0"}]}], "&"}]}], 
            "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlowest", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"tooSlow", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              "\"\<SlowestChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", 
              "rSqaredCutoff"}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">", "5.0"}]}], "&"}]}], "]"}],
          "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"lbrsFastlowR2", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Values", "[", 
                RowBox[{"Normal", "[", 
                 RowBox[{"tooSlow", "[", 
                  RowBox[{"mutant", ",", "n", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                    ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
                "\"\<SlowChip\>\""}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
                "\"\<SlowestChip\>\""}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "<", "rSqaredCutoff"}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ">", "5.0"}]}], "&"}]}], 
            "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlowlowR2", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Values", "[", 
                RowBox[{"Normal", "[", 
                 RowBox[{"tooSlow", "[", 
                  RowBox[{"mutant", ",", "n", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                    ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
                "\"\<SlowChip\>\""}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "<", "rSqaredCutoff"}], "&&", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ">", "5.0"}]}], "&"}]}], 
            "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lbrsSlowestlowR2", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Values", "[", 
              RowBox[{"Normal", "[", 
               RowBox[{"tooSlow", "[", 
                RowBox[{"mutant", ",", "n", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<LocalBackgroundRatio\>\"", ",", "\"\<ChipType\>\"", 
                   ",", "\"\<FitR2\>\""}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              "\"\<SlowestChip\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "rSqaredCutoff"}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">", "5.0"}]}], "&"}]}], "]"}],
          "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"fractionCulledFast", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsFast", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsFastlowR2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsFast", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsFastlowR2", "]"}], "+", 
               RowBox[{"Length", "[", "tooSlowFastChip", "]"}]}], ")"}]}]}], 
           "]"}], ",", "0.01"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulledSlow", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlow", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowlowR2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlow", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowlowR2", "]"}], "+", 
               RowBox[{"Length", "[", "tooSlowSlowChip", "]"}]}], ")"}]}]}], 
           "]"}], ",", "0.01"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fractionCulledSlowest", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlowest", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowestlowR2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "lbrsSlowest", "]"}], "+", 
               RowBox[{"Length", "[", "lbrsSlowestlowR2", "]"}], "+", 
               RowBox[{"Length", "[", "tooSlowSlowestChip", "]"}]}], 
              ")"}]}]}], "]"}], ",", "0.01"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"kobsRaw", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Normal", "[", 
               RowBox[{
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}],
                  "]"}], "[", 
                RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Normal", "[", 
                  RowBox[{"tooSlow", "[", 
                   RowBox[{
                   "mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], "]"}],
                   "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ")"}], "*", 
               RowBox[{"10", "^", 
                RowBox[{"-", "9"}]}], "*", 
               RowBox[{"Normal", "[", 
                RowBox[{
                 RowBox[{"tooSlow", "[", 
                  RowBox[{
                  "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "kobsExptIndex", "]"}], "]"}], "]"}]}], ")"}]}],
             ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"normalizationData", "[", 
             RowBox[{"Normal", "[", 
              RowBox[{"tooSlow", "[", 
               RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], 
               "]"}], "]"}], "]"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"correct", " ", "negative", " ", "kobs"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"kobs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"kobsRaw", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "<", "0"}], ",", 
            RowBox[{"kobsLimitReplacementValues", "[", 
             RowBox[{"Normal", "[", 
              RowBox[{"tooSlow", "[", 
               RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], 
               "]"}], "]"}], "]"}], ",", 
            RowBox[{"kobsRaw", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"bootstrap", " ", "hypothesis", " ", "testing"}], " ", "-", 
         " ", "median"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "adding", " ", "4", "th", " ", "element", " ", "to", " ", 
            "bootstrap", " ", "input", " ", "list", " ", "to", " ", "test", 
            " ", "kobs"}], " ", "-", " ", 
           RowBox[{
           "adding", " ", "1", "s", " ", "because", " ", "function", " ", 
            "expects", " ", "a", " ", "list", " ", "of", " ", "length"}]}], 
          "=", "4"}], ",", " ", 
         RowBox[{
         "but", " ", "only", " ", "kobs", " ", "can", " ", "be", " ", 
          "measured", " ", "for", " ", "undetectably", " ", "slow", " ", 
          "mutants"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"mutantNormDataAll", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.0", ",", "1.0", ",", "1.0", ",", 
            RowBox[{"kobs", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pvaluesMedian", "=", 
        RowBox[{"bsMedian", "[", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"mutantNormDataAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}], 
          ",", 
          RowBox[{"Replace", "[", 
           RowBox[{"wtDataNormAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}]}],
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"bootstrap", " ", "hypothesis", " ", "testing"}], " ", "-", 
         " ", "mean"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"pvaluesMean", "=", 
        RowBox[{"bsMean", "[", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"mutantNormDataAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}], 
          ",", 
          RowBox[{"Replace", "[", 
           RowBox[{"wtDataNormAll", ",", 
            RowBox[{"Indeterminate", "\[Rule]", "None"}], ",", "1"}], "]"}]}],
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"forCSV", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Association", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Version\>\"", "\[Rule]", "notebookVersion"}], ",", 
             RowBox[{"\"\<RunDate\>\"", "\[Rule]", 
              RowBox[{"DateString", "[", "\"\<ISODate\>\"", "]"}]}], ",", 
             RowBox[{"\"\<MutantID\>\"", "\[Rule]", "mutant"}], ",", 
             RowBox[{"\"\<Experiment\>\"", "\[Rule]", 
              RowBox[{"tooSlow", "[", 
               RowBox[{"mutant", ",", "n", ",", "\"\<UniqueExptID\>\""}], 
               "]"}]}], ",", 
             RowBox[{"\"\<ChipType\>\"", "\[Rule]", 
              RowBox[{"tooSlow", "[", 
               RowBox[{"mutant", ",", "n", ",", "\"\<ChipType\>\""}], "]"}]}],
              ",", 
             RowBox[{"\"\<Column\>\"", "\[Rule]", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<Indices\>\""}], "]"}], 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<Row\>\"", "\[Rule]", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<Indices\>\""}], "]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<EnzymeConc\>\"", "\[Rule]", 
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<AllEnzymeConcs\>\""}], 
                 "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<AllSubstrateConcs\>\"", "->", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"Normal", "[", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{
                 "mutant", ",", "n", ",", "\"\<AllSubstrateConcs\>\""}], 
                 "]"}], "]"}], "]"}]}], ",", 
             RowBox[{"\"\<AllInitialRates\>\"", "->", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"Normal", "[", 
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<AllInitialRates\>\""}],
                  "]"}], "]"}], "]"}]}], ",", 
             RowBox[{"\"\<kcat\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcatNormalized\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcatLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMFit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMLimitValue\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<FitRSquared\>\"", "\[Rule]", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"tooSlow", "[", 
                 RowBox[{"mutant", ",", "n", ",", "\"\<FitR2\>\""}], "]"}], 
                ",", "0.01"}], "]"}]}], ",", 
             RowBox[{"\"\<kcatFitError\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMFitError\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcatoverKMFitError\>\"", "\[Rule]", "\"\<\>\""}], 
             ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"\"\<kcatNormMean\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcatNormMedian\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMMean\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMMedian\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcat/KM\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"\"\<kcat/KMNorm\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kobsRaw\>\"", "\[Rule]", 
              RowBox[{"kobsRaw", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<kobsNegCorrected\>\"", "\[Rule]", 
              RowBox[{"kobs", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<kcat/KMNormMean\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             
             RowBox[{"\"\<kcat/KMNormMedian\>\"", "\[Rule]", "\"\<\>\""}], 
             ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
             "\"\<kcatNormBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
              "\"\<\>\""}], ",", 
             RowBox[{
             "\"\<KMBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
              "\"\<\>\""}], ",", 
             RowBox[{
             "\"\<kcat/KMBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
              "\"\<\>\""}], ",", 
             RowBox[{"\"\<kobsBootstrapHypothesisTestMedian\>\"", "\[Rule]", 
              RowBox[{"pvaluesMedian", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Log2StdDevkcat\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<Log2StdDevKM\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<Log2StdDevkcat/KM\>\"", "\[Rule]", "\"\<\>\""}], 
             ",", 
             RowBox[{"\"\<Log2StdDevkcat/KMLimit\>\"", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"Replace", "[", 
                   RowBox[{"kobs", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}], "]"}], ">", "1"}], ",", 
                RowBox[{"StandardDeviation", "[", 
                 RowBox[{"Log", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"Replace", "[", 
                    RowBox[{"kobs", ",", 
                    RowBox[{"Indeterminate", "\[Rule]", "Nothing"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}], ",", "\"\<\>\""}], "]"}]}], 
             ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
             "\"\<kcatNormBootstrapHypothesisTestMean\>\"", "\[Rule]", 
              "\"\<\>\""}], ",", 
             RowBox[{
             "\"\<KMBootstrapHypothesisTestMean\>\"", "\[Rule]", "\"\<\>\""}],
              ",", 
             RowBox[{
             "\"\<kcat/KMBootstrapHypothesisTestMean\>\"", "\[Rule]", 
              "\"\<\>\""}], ",", 
             RowBox[{"\"\<kobsBootstrapHypothesisTestMean\>\"", "\[Rule]", 
              RowBox[{"pvaluesMean", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<NumCulledReps\>\"", "\[Rule]", "0"}], ",", 
             RowBox[{"\"\<LBR\>\"", "\[Rule]", 
              RowBox[{"tooSlow", "[", 
               RowBox[{
               "mutant", ",", "n", ",", "\"\<LocalBackgroundRatio\>\""}], 
               "]"}]}], ",", 
             RowBox[{"\"\<FractionCulled\>\"", "\[Rule]", "fractionCulled"}], 
             ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"\"\<StdDevkcat\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<StdDevKM\>\"", "->", "\"\<\>\""}], ",", 
             RowBox[{"\"\<StdDevkcat/KM\>\"", "->", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcatLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcat/KMLimit\>\"", "\[Rule]", 
              RowBox[{"-", "1"}]}], ",", 
             RowBox[{"\"\<kcatAggLimit\>\"", "\[Rule]", "0"}], ",", 
             RowBox[{"\"\<KMAggLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcat/KMAggLimit\>\"", "\[Rule]", 
              RowBox[{"-", "1"}]}], ",", 
             RowBox[{"\"\<KMMedianLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<KMMeanLimit\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<kcat/KMNormMedianLimit\>\"", "\[Rule]", 
              RowBox[{"median2", "[", "kobs", "]"}]}], ",", 
             RowBox[{"\"\<kcat/KMNormMeanLimit\>\"", "\[Rule]", 
              RowBox[{"Mean", "[", "kobs", "]"}]}]}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MissingQ", "[", 
               RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}], ",", "0", ",", 
              
              RowBox[{"Length", "[", 
               RowBox[{"tooSlow", "[", "mutant", "]"}], "]"}]}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "forCSV"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.747067754613985*^9, 3.747067811925461*^9}, {
   3.7470680380050993`*^9, 3.747068038403015*^9}, {3.7470681190599747`*^9, 
   3.7470681269963903`*^9}, {3.747068174331408*^9, 3.747068182886363*^9}, {
   3.747068361578245*^9, 3.747068604404655*^9}, {3.747068646485807*^9, 
   3.747068648722151*^9}, {3.747068703560166*^9, 3.7470687922467527`*^9}, {
   3.747068839153412*^9, 3.747068889385664*^9}, {3.747069598595805*^9, 
   3.747069600970718*^9}, {3.747069753101821*^9, 3.747069753304667*^9}, {
   3.7470698984495287`*^9, 3.747069900828637*^9}, {3.747069938136796*^9, 
   3.7470699421919518`*^9}, {3.747069973481848*^9, 3.747069993704544*^9}, {
   3.747070033533175*^9, 3.7470701369560823`*^9}, {3.747070184097206*^9, 
   3.7470702048475933`*^9}, {3.747070432039337*^9, 3.747070440109912*^9}, {
   3.747070505653037*^9, 3.74707050957561*^9}, {3.7470706419151363`*^9, 
   3.747070700154666*^9}, {3.74707074475382*^9, 3.747070813808011*^9}, {
   3.747071166677784*^9, 3.74707118785301*^9}, {3.7470718728162527`*^9, 
   3.747071903662456*^9}, {3.7470719771319838`*^9, 3.747071998101192*^9}, {
   3.747072167359892*^9, 3.747072193459359*^9}, {3.747072262629809*^9, 
   3.747072316397326*^9}, {3.7470724267482033`*^9, 3.747072443427525*^9}, {
   3.747072488340426*^9, 3.747072492584972*^9}, {3.747072858513359*^9, 
   3.747072900094203*^9}, {3.747073142816628*^9, 3.747073316959484*^9}, {
   3.747073349624456*^9, 3.747073413708961*^9}, {3.747073457011438*^9, 
   3.747073482947873*^9}, {3.747074170988983*^9, 3.7470742521565027`*^9}, {
   3.747076221173622*^9, 3.747076228646811*^9}, {3.74707630840445*^9, 
   3.7470763085761547`*^9}, {3.747076343937747*^9, 3.747076344082209*^9}, {
   3.7470774379644003`*^9, 3.747077456589376*^9}, {3.747077552943758*^9, 
   3.7470775670774384`*^9}, {3.747077607775754*^9, 3.7470776536880827`*^9}, 
   3.747082877946821*^9, {3.747666548650743*^9, 3.747666581640584*^9}, {
   3.747666626140806*^9, 3.747666744543981*^9}, {3.747667953065434*^9, 
   3.747667955495146*^9}, {3.747667988976575*^9, 3.747667992293331*^9}, {
   3.7476680256038322`*^9, 3.747668084018404*^9}, {3.747668273973873*^9, 
   3.747668281867723*^9}, {3.747668923236554*^9, 3.7476689390624247`*^9}, {
   3.747669232183519*^9, 3.747669292525609*^9}, {3.747669690999913*^9, 
   3.747669731878264*^9}, {3.7476706211742907`*^9, 3.747670626104241*^9}, {
   3.747670787785573*^9, 3.747670792372733*^9}, {3.747670851584339*^9, 
   3.747670905520009*^9}, 3.7476709729427233`*^9, {3.747671011959038*^9, 
   3.747671020520237*^9}, {3.747671077112616*^9, 3.7476710848135557`*^9}, {
   3.747671126958084*^9, 3.747671152448769*^9}, {3.74767132364948*^9, 
   3.747671407188401*^9}, {3.747671443223633*^9, 3.7476714514938498`*^9}, {
   3.74767158946596*^9, 3.747671619907713*^9}, {3.7476716742523003`*^9, 
   3.7476716761154327`*^9}, {3.747671749518221*^9, 3.747671752255916*^9}, {
   3.747671860425227*^9, 3.747671862578939*^9}, {3.747671912932605*^9, 
   3.7476719205337057`*^9}, {3.7476720385318947`*^9, 3.747672038727265*^9}, {
   3.747692482937421*^9, 3.747692484490404*^9}, {3.750701853092002*^9, 
   3.750701877706271*^9}, {3.7507026393549213`*^9, 3.7507027169672318`*^9}, {
   3.7507027741455173`*^9, 3.7507028629483137`*^9}, 3.750703356980011*^9, {
   3.750703488845305*^9, 3.750703546700734*^9}, {3.750703576942937*^9, 
   3.750703628125442*^9}, {3.75070370540065*^9, 3.750703747960985*^9}, {
   3.7507037814583406`*^9, 3.750703785053453*^9}, {3.750703833424511*^9, 
   3.7507038895635138`*^9}, {3.751039604526244*^9, 3.7510396156902018`*^9}, 
   3.7510396745205517`*^9, {3.752261557200303*^9, 3.7522616069078283`*^9}, {
   3.752262721987405*^9, 3.75226272252638*^9}, {3.752263004846327*^9, 
   3.752263039432066*^9}, {3.752263111812489*^9, 3.752263121239008*^9}, {
   3.75226319374507*^9, 3.752263206238761*^9}, {3.7522632759910793`*^9, 
   3.7522632946640673`*^9}, 3.752263982648287*^9, 3.752264418372241*^9, 
   3.752264468371561*^9, {3.752284327811084*^9, 3.752284332314314*^9}, {
   3.7522844015036297`*^9, 3.752284420971858*^9}, {3.75228450811873*^9, 
   3.752284527287215*^9}, {3.752284658422394*^9, 3.75228469483171*^9}, {
   3.752285438779673*^9, 3.752285457069786*^9}, {3.752285518261519*^9, 
   3.7522855351723757`*^9}, {3.752285597045803*^9, 3.752285598025413*^9}, {
   3.752338880100966*^9, 3.752338884006879*^9}, {3.752338916941098*^9, 
   3.7523389405035048`*^9}, {3.7523390711450233`*^9, 3.752339073257514*^9}, {
   3.753047818012454*^9, 3.753047825147278*^9}, {3.753048067177478*^9, 
   3.7530480963956203`*^9}, {3.7729267795328827`*^9, 
   3.7729267895205097`*^9}, {3.772926831498526*^9, 3.772926835249332*^9}, {
   3.7729268672310762`*^9, 3.772926867975029*^9}, {3.772926919753875*^9, 
   3.7729269224174757`*^9}, {3.772926970180925*^9, 3.77292703390792*^9}, {
   3.772927712899725*^9, 3.772927731336864*^9}, {3.7734107452292957`*^9, 
   3.773410747743465*^9}, {3.7734107994543743`*^9, 3.773410802116394*^9}, {
   3.773410974304475*^9, 3.7734109772596893`*^9}, {3.7734264235754633`*^9, 
   3.7734264346820107`*^9}, {3.773426721725668*^9, 3.773426747537566*^9}, {
   3.773426874664173*^9, 3.773426875849717*^9}, {3.773429304245307*^9, 
   3.773429306921763*^9}, {3.773429381273458*^9, 3.77342941238336*^9}, {
   3.773429493237088*^9, 3.77342950827966*^9}, {3.773429874434908*^9, 
   3.773429878762101*^9}, {3.773429976742043*^9, 3.7734299792215137`*^9}, {
   3.773430010022204*^9, 3.773430010385947*^9}, {3.773430113285634*^9, 
   3.7734301137610903`*^9}, {3.7734304520308237`*^9, 3.773430509759945*^9}, {
   3.7734329339316196`*^9, 3.773432942509046*^9}, {3.773445577687229*^9, 
   3.773445593291212*^9}, {3.773445703272143*^9, 3.773445705994381*^9}, {
   3.773446494655649*^9, 3.7734465058528137`*^9}, {3.773446672212674*^9, 
   3.773446676740239*^9}, {3.7734981163787193`*^9, 3.773498119715828*^9}, {
   3.773498154816537*^9, 3.7734982108809032`*^9}, {3.773587764665236*^9, 
   3.773587779917344*^9}, {3.773588008825523*^9, 3.7735880253982563`*^9}, {
   3.773588545128314*^9, 3.773588590658305*^9}, {3.7735886307945127`*^9, 
   3.77358863207452*^9}, {3.77358954145583*^9, 3.773589546161459*^9}, {
   3.773589582929682*^9, 3.773589593733018*^9}, {3.773590463304533*^9, 
   3.7735904634739113`*^9}, {3.773595735271052*^9, 3.773595745137464*^9}, {
   3.773596126499175*^9, 3.773596130756967*^9}, {3.773596301899007*^9, 
   3.773596324047113*^9}, {3.773597861007235*^9, 3.773597977799374*^9}, {
   3.77361895885717*^9, 3.7736189607012444`*^9}, {3.773618996182212*^9, 
   3.773619021161125*^9}, {3.773619070595908*^9, 3.773619072091066*^9}, {
   3.774125038464374*^9, 3.774125074767164*^9}, {3.774125756137867*^9, 
   3.7741257826071787`*^9}, {3.774125827279807*^9, 3.774125919450686*^9}, {
   3.774125981871212*^9, 3.774125992127709*^9}, {3.7741264473538027`*^9, 
   3.774126461554945*^9}, {3.7741265773848877`*^9, 3.774126577667035*^9}, {
   3.774126712769109*^9, 3.774126721717861*^9}, {3.774126804732353*^9, 
   3.774126817392836*^9}, 3.774127303032473*^9, {3.77412750092057*^9, 
   3.774127521898427*^9}, {3.774127649894998*^9, 3.774127662112167*^9}, {
   3.774127919576722*^9, 3.774127923578343*^9}, {3.774129158047497*^9, 
   3.774129160390751*^9}, {3.774129407475257*^9, 3.774129411654025*^9}, {
   3.774129891443625*^9, 3.77412994904841*^9}, {3.774134253570993*^9, 
   3.774134460763418*^9}, {3.774134496426463*^9, 3.774134530325692*^9}, {
   3.77413595342813*^9, 3.7741360977626133`*^9}, 3.77413683842295*^9, {
   3.77419056267232*^9, 3.7741905639391003`*^9}, {3.774190622231287*^9, 
   3.774190627666915*^9}, {3.774191811730833*^9, 3.774191814963616*^9}, {
   3.7741920297145433`*^9, 3.774192053142373*^9}, {3.774193015768139*^9, 
   3.774193040612277*^9}, {3.774193240043605*^9, 3.7741932577656403`*^9}, {
   3.77419329347408*^9, 3.774193379909507*^9}, {3.774193432488493*^9, 
   3.774193525417131*^9}, {3.774193795807849*^9, 3.7741938523091793`*^9}, {
   3.77419421368998*^9, 3.7741942524864893`*^9}, {3.774194290240694*^9, 
   3.774194345447191*^9}, {3.7741943958978367`*^9, 3.774194408166787*^9}, {
   3.774194619405491*^9, 3.774194626578595*^9}, {3.774195404829773*^9, 
   3.7741954129450808`*^9}, {3.7741954956233187`*^9, 3.774195559257935*^9}, {
   3.774195658674385*^9, 3.7741956899182653`*^9}, {3.7741959706356773`*^9, 
   3.774196061415111*^9}, {3.774196128004733*^9, 3.774196139666897*^9}, 
   3.7741962072634563`*^9, {3.774196275055434*^9, 3.7741962980558863`*^9}, {
   3.774196355006118*^9, 3.774196372945332*^9}, {3.774196453712788*^9, 
   3.774196505302314*^9}, 3.774197045902749*^9, {3.774199831133946*^9, 
   3.774199896418159*^9}, {3.774199930806212*^9, 3.774199999178689*^9}, {
   3.774200498753151*^9, 3.774200527420957*^9}, {3.7742008220829477`*^9, 
   3.774200847676157*^9}, {3.774202742253796*^9, 3.774202745218801*^9}, {
   3.7742029121076393`*^9, 3.774203023196858*^9}, {3.7742030862726994`*^9, 
   3.7742030939157553`*^9}, {3.774203153284631*^9, 3.7742031535356407`*^9}, {
   3.774203277165395*^9, 3.774203277338196*^9}, 3.774203345104631*^9, {
   3.774203388481759*^9, 3.774203427908743*^9}, {3.774212677774679*^9, 
   3.7742126786076403`*^9}, {3.774213312312838*^9, 3.7742133183617373`*^9}, {
   3.774213413402659*^9, 3.774213417414815*^9}, {3.774213599610276*^9, 
   3.774213616870775*^9}, {3.774213653644184*^9, 3.774213653820445*^9}, {
   3.774217369050811*^9, 3.774217427531932*^9}, {3.774224683034082*^9, 
   3.774224731317877*^9}, {3.774224987604001*^9, 3.774225003201565*^9}, {
   3.774225056866312*^9, 3.774225076079948*^9}, {3.774357172362846*^9, 
   3.774357173028305*^9}, {3.774360320613474*^9, 3.77436047421903*^9}, {
   3.7743605875866203`*^9, 3.7743606427078733`*^9}, {3.774360735358486*^9, 
   3.774360824322959*^9}, {3.774363446436907*^9, 3.774363465695613*^9}, {
   3.7743643323156357`*^9, 3.774364389859241*^9}, {3.7743644279544773`*^9, 
   3.77436449060085*^9}, {3.7743645288907824`*^9, 3.774364531137577*^9}, 
   3.77436457218266*^9, {3.774364608606709*^9, 3.7743646101145773`*^9}, {
   3.774364745310357*^9, 3.7743647467205153`*^9}, 3.77437098353153*^9, {
   3.774372451741227*^9, 3.7743724564633493`*^9}, {3.774372490475089*^9, 
   3.774372495388307*^9}, {3.774373416775334*^9, 3.774373532688501*^9}, {
   3.7743775411892014`*^9, 3.774377566926187*^9}, {3.774378391453409*^9, 
   3.774378484072048*^9}, {3.774378641387855*^9, 3.7743786446609077`*^9}, {
   3.7743786752283583`*^9, 3.7743787522494793`*^9}, {3.7743789893974257`*^9, 
   3.774378993931265*^9}, {3.7743790439494543`*^9, 3.774379046311895*^9}, {
   3.774379763836186*^9, 3.774379863570098*^9}, {3.774379921971702*^9, 
   3.774379927058247*^9}, {3.774379965459968*^9, 3.774379971723411*^9}, {
   3.774380097435555*^9, 3.774380109726384*^9}, {3.7743894924102573`*^9, 
   3.774389494517465*^9}, {3.774532117541523*^9, 3.7745321584852552`*^9}, {
   3.7745322111399097`*^9, 3.7745322658848553`*^9}, {3.7745334545229053`*^9, 
   3.774533468555025*^9}, {3.774533509943967*^9, 3.774533512092572*^9}, {
   3.7745339162890663`*^9, 3.77453392435754*^9}, {3.774534363292841*^9, 
   3.774534374551546*^9}, {3.774534917508617*^9, 3.77453491774762*^9}, {
   3.7746198085049973`*^9, 3.774619902738553*^9}, {3.774620109893052*^9, 
   3.774620163986319*^9}, 3.774620322081851*^9, {3.774625227087247*^9, 
   3.774625273505422*^9}, {3.774625312107168*^9, 3.774625364214937*^9}, {
   3.7746268573608313`*^9, 3.774626953516035*^9}, {3.774627007439268*^9, 
   3.774627015494466*^9}, {3.774627050662875*^9, 3.7746270606040773`*^9}, {
   3.7746270995400953`*^9, 3.77462710034613*^9}, {3.774627208622931*^9, 
   3.774627238640821*^9}, {3.774627271008924*^9, 3.7746272862709713`*^9}, {
   3.774627414179368*^9, 3.774627442305615*^9}, {3.7746274752657223`*^9, 
   3.774627476177203*^9}, {3.7746275378096952`*^9, 3.774627577697288*^9}, {
   3.774627621642824*^9, 3.7746276258985987`*^9}, 3.77462832105758*^9, {
   3.77462884737672*^9, 3.7746288903347178`*^9}, {3.7746297216310873`*^9, 
   3.7746297363791924`*^9}, {3.774629766561267*^9, 3.774629768612607*^9}, {
   3.774631072898065*^9, 3.7746311550535583`*^9}, {3.774631185734908*^9, 
   3.774631198635809*^9}, {3.77463691955583*^9, 3.774636946448743*^9}, {
   3.774636986909234*^9, 3.7746369990096493`*^9}, {3.7746383521506557`*^9, 
   3.774638371166205*^9}, {3.7746413624099407`*^9, 3.774641367473652*^9}, {
   3.774655080143661*^9, 3.774655081381507*^9}, {3.774655351729128*^9, 
   3.7746553534452267`*^9}, {3.7746553851821117`*^9, 3.774655391425198*^9}, {
   3.7747300049514837`*^9, 3.774730005585928*^9}, {3.774960994067375*^9, 
   3.774961037924823*^9}, {3.7749837176979513`*^9, 3.774983725089834*^9}, {
   3.774983759444394*^9, 3.774983807624177*^9}, {3.774983863131978*^9, 
   3.77498402031229*^9}, 3.774984052634267*^9, {3.774984092541703*^9, 
   3.774984173915556*^9}, {3.7749843540511293`*^9, 3.7749843641433907`*^9}, 
   3.775066270952539*^9, {3.775067432675967*^9, 3.7750674489722567`*^9}, 
   3.775070738723229*^9, {3.775164916750616*^9, 3.775164937481785*^9}, {
   3.7779402533930902`*^9, 3.777940255647478*^9}, {3.777948839652609*^9, 
   3.7779488414669333`*^9}, {3.778185105791501*^9, 3.77818510665939*^9}, {
   3.778185183822072*^9, 3.778185191131853*^9}, 3.778185543792693*^9, {
   3.7781943040893297`*^9, 3.778194333053368*^9}, {3.778263354944819*^9, 
   3.778263359278173*^9}, {3.7782635235334997`*^9, 3.7782635255220423`*^9}, {
   3.778263559275909*^9, 3.7782635724215117`*^9}, 3.778265459724057*^9, {
   3.778265513918746*^9, 3.7782655284929457`*^9}, {3.778266170595997*^9, 
   3.7782662278421288`*^9}, {3.7782663783620243`*^9, 3.778266378730014*^9}, {
   3.779299109526073*^9, 3.7792992321223297`*^9}, {3.779299262756668*^9, 
   3.779299310028708*^9}, {3.779301616794731*^9, 3.779301621454356*^9}, 
   3.779302245291009*^9, {3.779302282733005*^9, 3.779302298291857*^9}, {
   3.779302337546762*^9, 3.779302338098793*^9}, {3.779302394418303*^9, 
   3.779302476403463*^9}, {3.779304158219887*^9, 3.7793042021109343`*^9}, {
   3.77931013279283*^9, 3.779310141100142*^9}, {3.779316826684443*^9, 
   3.779316827469964*^9}, {3.779316903745689*^9, 3.779316907579447*^9}, {
   3.779459662985982*^9, 3.779459673920691*^9}, {3.7794597380990343`*^9, 
   3.779459738430484*^9}, {3.779459793550468*^9, 3.779459841947901*^9}, {
   3.7798292851541452`*^9, 3.7798292906993313`*^9}, {3.781366928576489*^9, 
   3.781366942178136*^9}, {3.7813672070803747`*^9, 3.781367210306526*^9}, {
   3.781367308382773*^9, 3.781367397783065*^9}, {3.7813674359522448`*^9, 
   3.78136743614203*^9}, {3.781367471099197*^9, 3.781367490556182*^9}, {
   3.781367525756015*^9, 3.781367587365041*^9}, {3.781367629592236*^9, 
   3.781367730272603*^9}, {3.7813679116729383`*^9, 3.781367920705081*^9}, {
   3.7813689045399303`*^9, 3.7813689091069508`*^9}, {3.781369092171319*^9, 
   3.7813690979378433`*^9}, {3.78136915928232*^9, 3.7813691637193108`*^9}, {
   3.7813692342979183`*^9, 3.781369348308792*^9}, {3.781369381720235*^9, 
   3.7813693823249073`*^9}, {3.781369455414365*^9, 3.781369510457514*^9}, {
   3.781369647834371*^9, 3.7813696548846292`*^9}, {3.7813697719549837`*^9, 
   3.781369830905128*^9}, {3.781370154708507*^9, 3.781370190185391*^9}, {
   3.781370248660707*^9, 3.781370256732489*^9}, {3.781370362276045*^9, 
   3.7813703795217123`*^9}, {3.7813704491863413`*^9, 3.781370449415968*^9}, {
   3.781370598670138*^9, 3.781370656844431*^9}, {3.781370718979138*^9, 
   3.781370734266397*^9}, {3.781377662505136*^9, 3.781377682597782*^9}, {
   3.781378441882413*^9, 3.781378559998126*^9}, {3.7813931029826*^9, 
   3.7813931177155848`*^9}, {3.781393303299677*^9, 3.781393316371215*^9}, {
   3.781394761808234*^9, 3.781394769374127*^9}, 3.7813948398079777`*^9, {
   3.781396892550602*^9, 3.781396899040501*^9}, {3.781397113963971*^9, 
   3.781397129206937*^9}, {3.7813972012721357`*^9, 3.781397259880682*^9}, {
   3.7824037375659513`*^9, 3.782403753495489*^9}, {3.782404051788312*^9, 
   3.782404135878335*^9}, {3.782404918436921*^9, 3.7824049687987757`*^9}, {
   3.782413759504097*^9, 3.7824137843801193`*^9}, {3.782413819671974*^9, 
   3.782413820272964*^9}, {3.782413946721327*^9, 3.782413951607821*^9}, {
   3.782414240113329*^9, 3.782414243935927*^9}, {3.782414298785821*^9, 
   3.7824143078024178`*^9}, {3.782414561942727*^9, 3.782414709344677*^9}, {
   3.7824147878144217`*^9, 3.782414803114959*^9}, {3.782414986068342*^9, 
   3.7824149862813797`*^9}, {3.78241502849669*^9, 3.782415052513653*^9}, {
   3.782415152522455*^9, 3.782415180533958*^9}, {3.782415251704377*^9, 
   3.7824152594833097`*^9}, {3.782415355565584*^9, 3.782415393192349*^9}, {
   3.782415437789873*^9, 3.782415469384603*^9}, {3.782415591360708*^9, 
   3.78241563582654*^9}, {3.782415959524373*^9, 3.7824159641359043`*^9}, {
   3.782416037382265*^9, 3.7824160594943132`*^9}, {3.7824161789245367`*^9, 
   3.782416258592401*^9}, {3.782416324563312*^9, 3.78241633561754*^9}, {
   3.782416493053933*^9, 3.782416701967313*^9}, {3.782416776259534*^9, 
   3.782416777476593*^9}, {3.7824169271291943`*^9, 3.7824169939281607`*^9}, {
   3.7824170814794064`*^9, 3.7824171488044*^9}, {3.7824171877429132`*^9, 
   3.7824172095592213`*^9}, {3.782417342585174*^9, 3.782417428651422*^9}, {
   3.782417499262578*^9, 3.782417505490962*^9}, {3.782417705868536*^9, 
   3.78241772082159*^9}, {3.782417795788864*^9, 3.782417804160268*^9}, {
   3.7824178691487513`*^9, 3.782417916899622*^9}, {3.7824180387972317`*^9, 
   3.782418062400217*^9}, {3.782418105773514*^9, 3.782418108668351*^9}, {
   3.7824181549800587`*^9, 3.782418196137595*^9}, 3.782418654444276*^9, {
   3.782419853195723*^9, 3.782419855935508*^9}, {3.782419917865335*^9, 
   3.782419922949664*^9}, {3.782420008861915*^9, 3.7824200285350323`*^9}, {
   3.782420108453547*^9, 3.7824201526353073`*^9}, {3.782420200313347*^9, 
   3.782420243446433*^9}, {3.782420543190735*^9, 3.7824205692916613`*^9}, {
   3.782421222884289*^9, 3.782421290051198*^9}, {3.782421321578783*^9, 
   3.7824213300080347`*^9}, {3.782421379337824*^9, 3.782421390703059*^9}, {
   3.782421592978985*^9, 3.782421641040188*^9}, {3.782421791620818*^9, 
   3.782421800069236*^9}, {3.782421948490246*^9, 3.782421949898383*^9}, {
   3.7824231669135942`*^9, 3.782423210058854*^9}, {3.782423542723866*^9, 
   3.782423558094363*^9}, {3.782423591195148*^9, 3.782423652836376*^9}, {
   3.782423716776577*^9, 3.782423717042509*^9}, {3.7824246625557737`*^9, 
   3.7824247021369877`*^9}, {3.7824248065140877`*^9, 3.782424845692246*^9}, {
   3.782425007781856*^9, 3.7824250199229393`*^9}, {3.7824253766615133`*^9, 
   3.782425390639127*^9}, {3.782425446513225*^9, 3.78242550268329*^9}, {
   3.782425539087638*^9, 3.7824255453015738`*^9}, {3.784318938453122*^9, 
   3.7843189602355967`*^9}, {3.784318996220036*^9, 3.784319018421536*^9}, {
   3.784319048651957*^9, 3.784319079901005*^9}, {3.784348586809849*^9, 
   3.7843485978001347`*^9}, {3.78439858022274*^9, 3.784398588093199*^9}, {
   3.7843988237947598`*^9, 3.784398971766088*^9}, {3.784399028780594*^9, 
   3.784399120135153*^9}, {3.7843991551393414`*^9, 3.784399189358799*^9}, {
   3.784500489623784*^9, 3.784500534953164*^9}, {3.7845005692677727`*^9, 
   3.7845006194269953`*^9}, {3.784500650600515*^9, 3.7845006775514097`*^9}, {
   3.784500744858898*^9, 3.7845007739724216`*^9}, {3.784500810434121*^9, 
   3.784500874456831*^9}, 3.784505402674095*^9, {3.7845055114926443`*^9, 
   3.784505526338972*^9}, {3.784774525161364*^9, 3.784774529845031*^9}, {
   3.784774561665278*^9, 3.7847746418500967`*^9}, {3.7847749028017397`*^9, 
   3.7847749548628902`*^9}, {3.784775416516285*^9, 3.7847754170838633`*^9}, {
   3.784826409823677*^9, 3.78482648942176*^9}, {3.784826528156838*^9, 
   3.784826535662917*^9}, {3.784826610640966*^9, 3.784826647891843*^9}, {
   3.789505405212411*^9, 3.7895055539044237`*^9}, {3.789505681650721*^9, 
   3.7895056867516203`*^9}, {3.789508439382016*^9, 3.789508443460216*^9}, {
   3.789510058904825*^9, 3.7895100853358717`*^9}, {3.7895102006376553`*^9, 
   3.7895102495631437`*^9}, {3.789510320270069*^9, 3.789510326465893*^9}, {
   3.7895103618511267`*^9, 3.789510390406879*^9}, 3.789510437879436*^9, {
   3.789511117204369*^9, 3.789511154731394*^9}, {3.7895113684387903`*^9, 
   3.789511393363785*^9}, {3.78957639908959*^9, 3.7895763998531923`*^9}, {
   3.789581972619234*^9, 3.789581978672724*^9}, {3.789582092182646*^9, 
   3.7895821025378227`*^9}, {3.7895821583812237`*^9, 3.789582174681635*^9}, {
   3.7895822063734417`*^9, 3.7895822374306097`*^9}, {3.7895825066181183`*^9, 
   3.7895825067792177`*^9}, {3.7895833652313147`*^9, 3.789583410252893*^9}, {
   3.792163326868699*^9, 3.7921633281413183`*^9}, {3.792166199529779*^9, 
   3.7921661997485447`*^9}, 3.792169339251408*^9, {3.7921697624840193`*^9, 
   3.79216978363326*^9}, {3.7921698251846457`*^9, 3.792169867672656*^9}, 
   3.792175142385026*^9, 3.7921751787077303`*^9, {3.7921772280644703`*^9, 
   3.792177251236988*^9}, {3.792179062995117*^9, 3.7921791399063663`*^9}, {
   3.79217925854195*^9, 3.792179304610474*^9}, {3.792180128334229*^9, 
   3.79218012932227*^9}, 3.792180161191978*^9, 3.79218021654988*^9, {
   3.792180250465559*^9, 3.7921802610058613`*^9}, 3.79218031020603*^9, 
   3.79218115180088*^9, {3.7923422526913548`*^9, 3.792342270117077*^9}, {
   3.792687592757945*^9, 3.792687612736616*^9}, {3.792687698714044*^9, 
   3.792687707076418*^9}, {3.792693846267099*^9, 3.792693888377007*^9}, {
   3.792695799632083*^9, 3.792695807633237*^9}, {3.792696897712159*^9, 
   3.792696967788206*^9}, {3.7926970061348047`*^9, 3.792697050131979*^9}, {
   3.792860808379498*^9, 3.792860820228519*^9}, {3.7928608568382397`*^9, 
   3.7928608606859703`*^9}, {3.793555508404065*^9, 3.793555517546048*^9}, {
   3.793555581907579*^9, 3.7935555906871758`*^9}, {3.79355565479006*^9, 
   3.79355566277603*^9}, 3.812550430556303*^9, {3.812550497318305*^9, 
   3.812550603223585*^9}, {3.812550706032165*^9, 3.8125507311434803`*^9}, {
   3.8126513795729313`*^9, 3.8126514492222*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"10e7ea23-cbc7-4ad7-a61b-e42864d4b1a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "2020", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dynamic", "[", "mutantIterator", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"culledLength", "=", 
   RowBox[{"Length", "[", "mutantsWithData", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dropLength", "=", 
    RowBox[{"Length", "[", "unmeasured", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"culledLength", "=", "5"}], ";", "\[IndentingNewLine]", 
    RowBox[{"dropLength", "=", "1"}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"start1", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"total", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"makeAggDataset", "[", 
      RowBox[{"mutantsWithData", "[", 
       RowBox[{"[", "mutantIterator", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"mutantIterator", ",", "1", ",", "culledLength"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"totalSlow", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"makeAggDatasetSlow", "[", 
       RowBox[{"unmeasured", "[", 
        RowBox[{"[", "mutantIterator", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"mutantIterator", ",", "1", ",", "dropLength"}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"outForCSV", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Values", "[", 
         RowBox[{"total", "[", 
          RowBox[{"[", "mutantIterator", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"mutantIterator", ",", "1", ",", "culledLength"}], "}"}]}], 
       "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Values", "[", 
         RowBox[{"totalSlow", "[", 
          RowBox[{"[", "mutantIterator", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"mutantIterator", ",", "1", ",", "dropLength"}], "}"}]}], 
       "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTime", "[", "]"}], "-", "start1"}]}], "Input",
 CellChangeTimes->{{3.79166920542492*^9, 3.791669211377818*^9}, {
  3.791669835145688*^9, 3.791669837493372*^9}, {3.792078596894453*^9, 
  3.792078600186351*^9}, {3.792084712521851*^9, 3.792084716364587*^9}, {
  3.792107749952457*^9, 3.792107753329445*^9}, {3.7921104025972652`*^9, 
  3.7921104057243557`*^9}, {3.792166573041135*^9, 3.7921665761555653`*^9}, {
  3.792166627672723*^9, 3.7921666316536903`*^9}, {3.792342302086018*^9, 
  3.79234232996233*^9}, {3.79278474084295*^9, 3.792784741807794*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"2e7d8305-aab9-4efc-97e1-b0d7f37ddfc5"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`mutantIterator, StandardForm],
  ImageSizeCache->{109., {1., 9.}}]], "Output",
 CellChangeTimes->{
  3.789505590572715*^9, 3.789507237077614*^9, 3.7895094180041933`*^9, 
   3.789511181930314*^9, 3.789511609821536*^9, 3.789512031823587*^9, 
   3.789583170582876*^9, 3.789583447676594*^9, 3.789583478571055*^9, 
   3.789583510242086*^9, 3.7921662628152733`*^9, 3.792166576523303*^9, 
   3.7921666332512217`*^9, 3.792173130872562*^9, 3.7921752300093603`*^9, 
   3.7921772609397984`*^9, 3.792179399457678*^9, 3.792180390761948*^9, 
   3.792181258268076*^9, 3.7923401085626307`*^9, {3.7923423066145363`*^9, 
   3.7923423303469954`*^9}, 3.7926927645797358`*^9, 3.792693906888467*^9, 
   3.792695853588306*^9, 3.792697069633328*^9, 3.792785514939147*^9, 
   3.7928618027694683`*^9, 3.793556372782867*^9, 3.809870781053068*^9, 
   3.8099136892101707`*^9, 3.809978733336048*^9, 3.810243378673913*^9, 
   3.811976793022987*^9, 3.812551246828627*^9, 3.8126627763011923`*^9, 
   3.812662829933548*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"83988f77-58e8-46b7-9d2d-f4828873754d"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 185, 25, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.812662830037539*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"19d8b057-f4f8-4e25-bd7e-743ac6358dda"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 185, 26, 
   24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.8126628300430613`*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"6bffd9c3-c0a5-4323-ab2b-2cc22452f6ae"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 185, 27, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.812662830047223*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"1d046ae6-11fb-41a2-8a02-9cd32004bc42"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 185, 28, 
   24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.8126628300512257`*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"773ee616-aee9-4232-a381-a792fae7c0bd"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 185, 29, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.81266283027807*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"eb251d8e-da23-4f83-8a91-f24e2a906afa"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 185, 30, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.812662830282289*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"0811392c-657e-4f6e-a585-5c571d2d2b06"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 185, 31, 
   24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.812662830286482*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"6e6b6ee5-109b-439c-bbc8-51f584fe30c9"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 185, 32, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.812662830290423*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"550a251c-0df6-4bf2-a345-50a8fa3ee9cc"],

Cell[BoxData[
 TemplateBox[{
  "StandardDeviation", "shlen", 
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"3.087462404772267`\\\"}], \\\",\\\", \
\\\"3.086090958108846`\\\", \\\",\\\", \\\"13.758015206443062`\\\", \
\\\",\\\", \\\"13.202959236491223`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\) should \
have at least two elements.\"", 2, 185, 33, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.812663150674876*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"1c69869c-9c76-4c00-94ab-c674284042f0"],

Cell[BoxData[
 TemplateBox[{
  "StandardDeviation", "shlen", 
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.017874084708938`\\\", \\\",\\\", \\\"5.432536649962839`\\\", \\\
\",\\\", \\\"17.51690600407027`\\\", \\\",\\\", \
\\\"17.277012351368615`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\) should have at \
least two elements.\"", 2, 185, 34, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.8126633687588053`*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"f70ed409-6896-43b9-9f05-c8ee53cdb234"],

Cell[BoxData[
 TemplateBox[{
  "StandardDeviation", "shlen", 
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"10.45515473098583`\\\", \\\",\\\", \\\"14.45851963827218`\\\", \\\
\",\\\", \\\"15.928203662037827`\\\", \\\",\\\", \
\\\"17.359189136201007`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\) should have at \
least two elements.\"", 2, 185, 35, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.8126634053741283`*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"371a6c95-fd2c-41f4-8207-2b4142f5d259"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StandardDeviation\\\", \
\\\"::\\\", \\\"shlen\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 185, 36, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.81266340537887*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"7322f290-e21f-4dbf-b062-ee1f0240cf77"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 186, 37, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.8126634279779778`*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"0d648410-9308-4cff-bc9f-ca700a960bfe"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 186, 38, 
   24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.812663427984477*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"e22b0fee-c734-4ac6-b31d-1cf651fb54c7"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 186, 39, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.8126634279891443`*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"e54187fa-16ae-46e5-b8de-bf79abdca931"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 186, 40, 
   24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.812663427993778*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"5d8152eb-1b9c-4479-bf55-249ccb9d7c48"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 186, 41, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.8126634290185823`*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"70f72eda-47ae-442b-bcb0-20ef61603e0b"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 186, 42, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.812663429023451*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"14104134-c2dd-466f-96a0-c4f78a1e19d5"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 186, 43, 
   24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.812663429028226*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"d76df946-968e-47bc-a597-22b4a26c3dbc"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 186, 44, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8098707811777477`*^9, 3.809913689278612*^9, 
  3.809978733473811*^9, 3.8102433787965813`*^9, 3.811976793150154*^9, 
  3.8125512469565687`*^9, 3.812662776418022*^9, 3.812663429032604*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"54b4f91a-128e-426c-8679-39fe35852133"],

Cell[BoxData["724.978564`9.311870159137113"], "Output",
 CellChangeTimes->{
  3.789505590572715*^9, 3.789507237077614*^9, 3.7895094180041933`*^9, 
   3.789511181930314*^9, 3.789511609821536*^9, 3.789512031823587*^9, 
   3.789583170582876*^9, 3.789583447676594*^9, 3.789583478571055*^9, 
   3.789583510242086*^9, 3.7921662628152733`*^9, 3.792166576523303*^9, 
   3.7921666332512217`*^9, 3.792173130872562*^9, 3.7921752300093603`*^9, 
   3.7921772609397984`*^9, 3.792179399457678*^9, 3.792180390761948*^9, 
   3.792181258268076*^9, 3.7923401085626307`*^9, {3.7923423066145363`*^9, 
   3.7923423303469954`*^9}, 3.7926927645797358`*^9, 3.792693906888467*^9, 
   3.792695853588306*^9, 3.792697069633328*^9, 3.792785514939147*^9, 
   3.7928618027694683`*^9, 3.793556372782867*^9, 3.809870781053068*^9, 
   3.8099136892101707`*^9, 3.809978733336048*^9, 3.810243378673913*^9, 
   3.811976793022987*^9, 3.812551246828627*^9, 3.8126627763011923`*^9, 
   3.812663554881897*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"afd86887-8daf-4788-96f6-17a4fbb2099a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"maxExponent", "=", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", "$MaxMachineNumber"}], "]"}], "]"}], "+", "1"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testF2", "[", "in_", "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"NumberQ", "[", "in", "]"}], ",", 
    RowBox[{"ToString", "[", 
     RowBox[{"NumberForm", "[", 
      RowBox[{"in", ",", 
       RowBox[{"ScientificNotationThreshold", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "maxExponent"}], ",", "maxExponent"}], "}"}]}]}], 
      "]"}], "]"}], ",", 
    RowBox[{"ListQ", "[", "in", "]"}], ",", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NumberForm", "[", 
        RowBox[{"#", ",", 
         RowBox[{"ScientificNotationThreshold", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "maxExponent"}], ",", "maxExponent"}], "}"}]}]}], 
        "]"}], "&"}], "/@", "in"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"NumberQ", "[", "in", "]"}], "\[Equal]", "False"}], "&&", 
     RowBox[{
      RowBox[{"ListQ", "[", "in", "]"}], "\[Equal]", "False"}]}], ",", "in"}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.79217273945196*^9, 3.792172782510269*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"a9963db4-468d-40fa-917f-be32441084a5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"keys", "=", 
   RowBox[{"Keys", "[", 
    RowBox[{"forCSV", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"out2", "=", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"outForCSV", ",", "1"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"StringDrop", "[", 
            RowBox[{
             RowBox[{"StringDrop", "[", 
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}], "]"}], "<", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"StringDrop", "[", 
            RowBox[{
             RowBox[{"StringDrop", "[", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], 
         "&"}]}], "]"}], ",", "keys"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/Desktop/PafA_MeP_aggData_WTT79SNorm_v.2.0_201025.csv\>\"", ",", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"testF2", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"outForCSV", ",", "1"}], "]"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", "keys"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.79216630161093*^9, 3.792166307925428*^9}, {
  3.7921663441001263`*^9, 3.79216634453519*^9}, {3.7921666379742107`*^9, 
  3.792166638424667*^9}, {3.792693739079856*^9, 3.7926937394175777`*^9}, {
  3.7935557106421833`*^9, 3.793555712199727*^9}, {3.8098707868506927`*^9, 
  3.809870790049933*^9}, {3.809978745752428*^9, 3.809978746266768*^9}, {
  3.810243378554614*^9, 3.8102433793160677`*^9}, {3.811976790138156*^9, 
  3.8119767919010897`*^9}, {3.812551253862899*^9, 3.8125512549868517`*^9}, {
  3.8126627717776327`*^9, 3.812662772065213*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"8b53935c-450c-43a3-a60b-eaad62a99ae1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Version\"\>", ",", "\<\"RunDate\"\>", ",", "\<\"MutantID\"\>", 
   ",", "\<\"Experiment\"\>", ",", "\<\"ChipType\"\>", ",", "\<\"Column\"\>", 
   ",", "\<\"Row\"\>", ",", "\<\"EnzymeConc\"\>", 
   ",", "\<\"AllSubstrateConcs\"\>", ",", "\<\"AllInitialRates\"\>", 
   ",", "\<\"kcat\"\>", ",", "\<\"kcatNormalized\"\>", 
   ",", "\<\"kcatLimit\"\>", ",", "\<\"KMFit\"\>", 
   ",", "\<\"KMLimitValue\"\>", ",", "\<\"KMLimit\"\>", 
   ",", "\<\"FitRSquared\"\>", ",", "\<\"kcatFitError\"\>", 
   ",", "\<\"KMFitError\"\>", ",", "\<\"kcatoverKMFitError\"\>", 
   ",", "\<\"kcatNormMean\"\>", ",", "\<\"kcatNormMedian\"\>", 
   ",", "\<\"KMMean\"\>", ",", "\<\"KMMedian\"\>", ",", "\<\"kcat/KM\"\>", 
   ",", "\<\"kcat/KMNorm\"\>", ",", "\<\"kobsRaw\"\>", 
   ",", "\<\"kobsNegCorrected\"\>", ",", "\<\"kcat/KMNormMean\"\>", 
   ",", "\<\"kcat/KMNormMedian\"\>", 
   ",", "\<\"kcatNormBootstrapHypothesisTestMedian\"\>", 
   ",", "\<\"KMBootstrapHypothesisTestMedian\"\>", 
   ",", "\<\"kcat/KMBootstrapHypothesisTestMedian\"\>", 
   ",", "\<\"kobsBootstrapHypothesisTestMedian\"\>", 
   ",", "\<\"Log2StdDevkcat\"\>", ",", "\<\"Log2StdDevKM\"\>", 
   ",", "\<\"Log2StdDevkcat/KM\"\>", ",", "\<\"Log2StdDevkcat/KMLimit\"\>", 
   ",", "\<\"kcatNormBootstrapHypothesisTestMean\"\>", 
   ",", "\<\"KMBootstrapHypothesisTestMean\"\>", 
   ",", "\<\"kcat/KMBootstrapHypothesisTestMean\"\>", 
   ",", "\<\"kobsBootstrapHypothesisTestMean\"\>", 
   ",", "\<\"NumCulledReps\"\>", ",", "\<\"LBR\"\>", 
   ",", "\<\"FractionCulled\"\>", ",", "\<\"StdDevkcat\"\>", 
   ",", "\<\"StdDevKM\"\>", ",", "\<\"StdDevkcat/KM\"\>", 
   ",", "\<\"kcat/KMLimit\"\>", ",", "\<\"kcatAggLimit\"\>", 
   ",", "\<\"KMAggLimit\"\>", ",", "\<\"kcat/KMAggLimit\"\>", 
   ",", "\<\"KMMedianLimit\"\>", ",", "\<\"KMMeanLimit\"\>", 
   ",", "\<\"kcat/KMNormMedianLimit\"\>", 
   ",", "\<\"kcat/KMNormMeanLimit\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.792166308978468*^9, 3.792166584107953*^9, 3.7921681835211067`*^9, 
   3.792174791119426*^9, 3.792177015226169*^9, 3.792183298246673*^9, 
   3.7923419980014877`*^9, 3.792342314431135*^9, 3.792344141290489*^9, 
   3.792693785832199*^9, 3.7926949421296043`*^9, 3.7926981371826963`*^9, 
   3.792786389302063*^9, 3.792862729091065*^9, 3.793557452711873*^9, 
   3.809871672161866*^9, 3.809914842205203*^9, {3.809980096138049*^9, 
   3.809980125718081*^9}, 3.810244254689781*^9, 3.811977825796215*^9, 
   3.812551998323332*^9, 3.812663554969555*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"3365fe8c-3e3e-4be4-a456-ec86e47a860f"],

Cell[BoxData[
 TemplateBox[{
  "NumberForm", "reqsigz", 
   "\"Requested number precision is lower than number of digits shown; \
padding with zeros.\"", 2, 193, 45, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811977827773478*^9, 3.812551999978109*^9, 
  3.812663556784297*^9},
 CellLabel->
  "During evaluation of \
In[191]:=",ExpressionUUID->"26831342-7923-4c7c-837d-c829ba483523"],

Cell[BoxData[
 TemplateBox[{
  "NumberForm", "reqsigz", 
   "\"Requested number precision is lower than number of digits shown; \
padding with zeros.\"", 2, 193, 46, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811977827773478*^9, 3.812551999978109*^9, 
  3.812663556835121*^9},
 CellLabel->
  "During evaluation of \
In[191]:=",ExpressionUUID->"f77b5b90-dd47-499d-b655-a40b193f3b37"],

Cell[BoxData[
 TemplateBox[{
  "NumberForm", "reqsigz", 
   "\"Requested number precision is lower than number of digits shown; \
padding with zeros.\"", 2, 193, 47, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811977827773478*^9, 3.812551999978109*^9, 
  3.8126635574067297`*^9},
 CellLabel->
  "During evaluation of \
In[191]:=",ExpressionUUID->"f782b207-aa86-4b25-af26-0a2eee4372a4"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NumberForm\\\", \
\\\"::\\\", \\\"reqsigz\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 193, 48, 24432410981842871645, "Spare"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811977827773478*^9, 3.812551999978109*^9, 
  3.812663557469372*^9},
 CellLabel->
  "During evaluation of \
In[191]:=",ExpressionUUID->"e55012a2-cd92-4853-b928-9296b2894de0"],

Cell[BoxData["\<\"~/Desktop/PafA_MeP_aggData_WTT79SNorm_v.2.0_201025.csv\"\>"]\
, "Output",
 CellChangeTimes->{
  3.792166308978468*^9, 3.792166584107953*^9, 3.7921681835211067`*^9, 
   3.792174791119426*^9, 3.792177015226169*^9, 3.792183298246673*^9, 
   3.7923419980014877`*^9, 3.792342314431135*^9, 3.792344141290489*^9, 
   3.792693785832199*^9, 3.7926949421296043`*^9, 3.7926981371826963`*^9, 
   3.792786389302063*^9, 3.792862729091065*^9, 3.793557452711873*^9, 
   3.809871672161866*^9, 3.809914842205203*^9, {3.809980096138049*^9, 
   3.809980125718081*^9}, 3.810244254689781*^9, 3.811977825796215*^9, 
   3.812551998323332*^9, 3.812663561159185*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"d81a752f-6784-420b-8ac9-db9da5e5bde3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Spare",
WindowSize->{1648, 921},
WindowMargins->{{-1667, Automatic}, {Automatic, -37}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8d8183fa-fe55-4e3f-89b9-939550e8f9d5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 262, 6, 98, "Title",ExpressionUUID->"782b1cc7-d04b-432e-b5ad-8b99260e1037"],
Cell[845, 30, 27931, 621, 2404, "Input",ExpressionUUID->"ef91ebdd-454e-4834-934b-a7047deae98a"],
Cell[CellGroupData[{
Cell[28801, 655, 209, 4, 45, "Subsubsection",ExpressionUUID->"ee7b5872-b4d2-4e36-913e-0186fbfddcc9"],
Cell[29013, 661, 672, 14, 127, "Text",ExpressionUUID->"3e811395-7530-4332-ad36-ea1669944b46"],
Cell[CellGroupData[{
Cell[29710, 679, 4029, 83, 325, "Input",ExpressionUUID->"c8a20d18-6231-4865-a82e-7ff4854f3562"],
Cell[33742, 764, 1909, 32, 119, "Output",ExpressionUUID->"bb4cb253-ea90-44b5-ae84-6091b5127eda"],
Cell[35654, 798, 1159, 18, 34, "Output",ExpressionUUID->"b38d3b53-f6ae-44c3-a56e-9462c2620661"]
}, Open  ]],
Cell[36828, 819, 250, 6, 35, "Text",ExpressionUUID->"37d66d06-a935-4b50-87d4-ef0e3f9ddbd0"],
Cell[CellGroupData[{
Cell[37103, 829, 5645, 128, 304, "Input",ExpressionUUID->"5b68b4b5-40fa-45c9-b6bd-f3d3b5a90f32"],
Cell[42751, 959, 987, 15, 37, "Output",ExpressionUUID->"b77c21bd-081f-4449-a62d-61d5158d894e"],
Cell[CellGroupData[{
Cell[43763, 978, 331, 7, 24, "Print",ExpressionUUID->"41c90120-d2db-4a56-a990-50eada3d7de1"],
Cell[44097, 987, 331, 7, 24, "Print",ExpressionUUID->"135c9b35-b8bc-41eb-86b5-dd104d9f7420"],
Cell[44431, 996, 1067, 32, 24, "Print",ExpressionUUID->"2ddfec6e-999d-4760-943b-728f864bab07"],
Cell[45501, 1030, 331, 7, 24, "Print",ExpressionUUID->"59550fa3-eed1-45e4-9ff4-4028d6a116ce"],
Cell[45835, 1039, 331, 7, 24, "Print",ExpressionUUID->"98a90be9-f248-4003-b841-f41224effaf6"],
Cell[46169, 1048, 2523, 80, 44, "Print",ExpressionUUID->"df9b9949-89fd-474b-9804-da02bd45ab94"],
Cell[48695, 1130, 2331, 74, 44, "Print",ExpressionUUID->"e21b2427-3cd0-4a3b-becb-9eb0f36b80dc"],
Cell[51029, 1206, 3474, 112, 63, "Print",ExpressionUUID->"ca1469ce-a937-4f19-9ec8-c0aab1f46e0f"],
Cell[54506, 1320, 1789, 56, 24, "Print",ExpressionUUID->"1b5c7d89-fc9d-4e2e-8f0b-d6dbfd0416e1"]
}, Open  ]]
}, Open  ]],
Cell[56322, 1380, 3101, 71, 157, "Input",ExpressionUUID->"f7038fa3-e7d2-40c3-ab3b-4c6475dcc885"],
Cell[59426, 1453, 1312, 25, 30, "Input",ExpressionUUID->"236f7ae3-a7a0-4536-94b1-6e03d2385e78"],
Cell[60741, 1480, 360, 7, 35, "Text",ExpressionUUID->"e766ea3e-071e-4526-80bd-f4bc7806b1a2"],
Cell[CellGroupData[{
Cell[61126, 1491, 6406, 166, 577, "Input",ExpressionUUID->"6e4105fc-8044-4aea-a762-4ed2910f1673"],
Cell[67535, 1659, 255203, 4655, 735, "Output",ExpressionUUID->"70b5b5c0-6e45-4fd9-9fa5-aa6cdf39b737"],
Cell[322741, 6316, 243548, 4452, 695, "Output",ExpressionUUID->"84fbeec5-9b65-4275-85b8-98c13a52a21f"]
}, Open  ]],
Cell[566304, 10771, 346, 7, 35, "Text",ExpressionUUID->"ea54a65e-72e9-4948-94bb-32b36da21aa3"],
Cell[CellGroupData[{
Cell[566675, 10782, 13636, 304, 976, "Input",ExpressionUUID->"a84f9e35-926d-491a-89c1-d7caff7c26d7"],
Cell[580314, 11088, 1012, 15, 34, "Output",ExpressionUUID->"0baeba16-a4ae-477a-94de-30b3cb0f98c1"],
Cell[581329, 11105, 7221, 171, 182, "Output",ExpressionUUID->"ee0872b8-806b-463b-ac36-99127c726968"],
Cell[588553, 11278, 3755, 84, 98, "Output",ExpressionUUID->"88734e5a-b3a0-4a1a-ae56-2a609accd445"],
Cell[592311, 11364, 1352, 24, 34, "Output",ExpressionUUID->"e2694f26-21e6-4aaf-90e4-ca433f01ed8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593700, 11393, 1009, 19, 94, "Input",ExpressionUUID->"93b6fdc7-c6f1-4f78-8ac7-c669b71ede98"],
Cell[594712, 11414, 1884, 29, 56, "Output",ExpressionUUID->"139bc1f3-d85e-46e7-ae93-12fdc5751340"],
Cell[596599, 11445, 2018, 31, 56, "Output",ExpressionUUID->"89ba0a3d-7c07-4333-8ce2-d29b85fefc63"],
Cell[598620, 11478, 1351, 21, 34, "Output",ExpressionUUID->"250e6073-ded6-4440-b457-d72e460b1c7f"],
Cell[599974, 11501, 891, 15, 34, "Output",ExpressionUUID->"1abfe8aa-b413-425d-8ca2-0560b7ee0a5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600902, 11521, 5639, 136, 367, "Input",ExpressionUUID->"166a1636-e9a1-4a89-8e8d-fc2162cb545d"],
Cell[606544, 11659, 92987, 1683, 175, "Output",ExpressionUUID->"04166acf-1e5e-4720-9182-586fdb7a6fd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[699568, 13347, 1685, 47, 199, "Input",ExpressionUUID->"a687ef75-622e-4429-acba-4d760a026b8e"],
Cell[701256, 13396, 1218, 20, 56, "Output",ExpressionUUID->"e059d5ac-1860-4f40-926d-f5c896dcdca4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[702511, 13421, 4336, 118, 451, "Input",ExpressionUUID->"eb69a54d-027d-4d82-ad65-84f5aa47cfaa"],
Cell[706850, 13541, 822, 13, 24, "Print",ExpressionUUID->"60b7882e-0e6b-4583-a4fb-71879e687708"],
Cell[707675, 13556, 740, 10, 34, "Output",ExpressionUUID->"31b04d21-e059-4fa9-9a89-d4850b0d184c"],
Cell[708418, 13568, 825, 13, 24, "Print",ExpressionUUID->"9da7ab7c-118c-40bd-b498-01873c211c10"],
Cell[709246, 13583, 737, 10, 34, "Output",ExpressionUUID->"0dacdc5e-5bd8-400b-ae69-e2c7d8bbd78c"],
Cell[709986, 13595, 819, 13, 24, "Print",ExpressionUUID->"24a574e0-dcd9-430c-bf35-07709f77c8c5"],
Cell[710808, 13610, 2867, 42, 98, "Output",ExpressionUUID->"93d6afcb-0df8-4325-b8de-831ec0679051"],
Cell[713678, 13654, 803, 12, 24, "Print",ExpressionUUID->"b2ecc7a8-a17a-4b8e-9d96-1c42bd4b834c"],
Cell[714484, 13668, 90569, 1617, 577, "Output",ExpressionUUID->"af00c1f5-eb76-4ed9-a6a7-968f86969739"],
Cell[805056, 15287, 796, 12, 24, "Print",ExpressionUUID->"70f99d52-ca53-4a10-af94-476791f4bf83"],
Cell[805855, 15301, 752, 10, 34, "Output",ExpressionUUID->"0efd8775-5237-421d-ab31-cb397c5304a7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[806656, 15317, 168, 3, 45, "Subsubsection",ExpressionUUID->"8bb6935a-4c26-40e5-973b-08813908dea9"],
Cell[806827, 15322, 235, 6, 35, "Text",ExpressionUUID->"ab11eaff-86e5-476b-80dc-96377aa06615"],
Cell[807065, 15330, 2706, 56, 325, "Input",ExpressionUUID->"841f0066-b8fd-44ff-b35c-e9d95fd220d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[809808, 15391, 184, 3, 45, "Subsubsection",ExpressionUUID->"dc717689-22d6-42c4-ace3-04f2e82310b7"],
Cell[CellGroupData[{
Cell[810017, 15398, 1988, 41, 136, "Input",ExpressionUUID->"04993163-8cae-4248-a08c-c8a5e0dd41f9"],
Cell[812008, 15441, 2193, 37, 122, "Output",ExpressionUUID->"b9bc7eff-19a1-4288-b077-dd173f35fa53"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[814250, 15484, 300, 4, 45, "Subsubsection",ExpressionUUID->"9f372d5f-5300-4b08-b860-be7df5f2eaef"],
Cell[814553, 15490, 1029, 17, 127, "Text",ExpressionUUID->"d08e8ff2-448b-4711-a00e-f793db62dda2"],
Cell[CellGroupData[{
Cell[815607, 15511, 23699, 628, 1690, "Input",ExpressionUUID->"fb57d180-2fb3-49fa-bf1f-1cf5440a6ce7"],
Cell[839309, 16141, 773, 13, 24, "Print",ExpressionUUID->"d6562a8e-f346-47f2-a9b0-1141be1da1ac"],
Cell[840085, 16156, 713, 10, 34, "Output",ExpressionUUID->"407b1275-bb7e-4928-9978-cabad6a82fbc"],
Cell[840801, 16168, 906, 14, 24, "Print",ExpressionUUID->"f1c2d9b9-ec53-4f7d-845a-e6990ea86114"],
Cell[841710, 16184, 1255, 22, 60, "Output",ExpressionUUID->"2c488e3b-7517-4422-8651-05b592bba8d9"],
Cell[842968, 16208, 778, 13, 24, "Print",ExpressionUUID->"bffc12ac-1330-4bdf-998c-8ba12c4907b3"],
Cell[843749, 16223, 713, 10, 34, "Output",ExpressionUUID->"b6ed0856-3abf-4f5a-ae7a-e78260873a8f"],
Cell[844465, 16235, 797, 13, 24, "Print",ExpressionUUID->"fc644e11-fb6e-4dbf-a85c-5391434d3cdd"],
Cell[845265, 16250, 1156, 20, 37, "Output",ExpressionUUID->"79541bb6-13ad-41a5-be22-ea40d6cf777d"],
Cell[846424, 16272, 719, 11, 34, "Output",ExpressionUUID->"0d87a543-4b68-4d9f-88ce-1d62826aad0e"],
Cell[847146, 16285, 717, 11, 34, "Output",ExpressionUUID->"5cda0d1c-3cc9-44fc-a24c-fda2e7fa3a0b"],
Cell[847866, 16298, 992, 18, 37, "Output",ExpressionUUID->"0d6e7261-bc85-4ccf-9104-b98ad6d5a21a"],
Cell[848861, 16318, 163216, 3096, 323, "Output",ExpressionUUID->"e2c96b04-c91b-45cd-b2b8-33577e67258f"],
Cell[1012080, 19416, 807, 15, 24, "Print",ExpressionUUID->"8fde5eb5-1a88-4b1e-9984-6efc99f0d721"],
Cell[1012890, 19433, 1659, 31, 80, "Output",ExpressionUUID->"a2e790c9-3638-4fb4-92f8-fad8309a8e18"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1014598, 19470, 283, 6, 45, "Subsubsection",ExpressionUUID->"2f08aa52-682b-4b59-bc27-593eb87d1d86"],
Cell[1014884, 19478, 377, 8, 35, "Text",ExpressionUUID->"4a7bf699-b3b8-42a7-835a-18348b7513a0"],
Cell[CellGroupData[{
Cell[1015286, 19490, 11630, 267, 934, "Input",ExpressionUUID->"9105699b-dbc7-4026-ba09-b16bc8b67ec8"],
Cell[1026919, 19759, 3582, 57, 123, "Output",ExpressionUUID->"40c1cee1-ceae-49b0-bc00-8e76fcfeebfa"],
Cell[1030504, 19818, 787, 12, 34, "Output",ExpressionUUID->"fe1c71f9-adc4-46c7-8ec5-16fc277a1ed6"],
Cell[1031294, 19832, 788, 12, 34, "Output",ExpressionUUID->"d71bf7ad-296b-4253-a8eb-855f1cef748b"],
Cell[1032085, 19846, 863, 14, 24, "Print",ExpressionUUID->"9de6c2cb-3ed1-45d8-acb2-945774a8ce12"],
Cell[1032951, 19862, 858, 15, 37, "Output",ExpressionUUID->"23c2b986-3154-4a58-93d9-f2a0dd3eeca8"],
Cell[1033812, 19879, 852, 15, 34, "Output",ExpressionUUID->"c9ef4fdb-af13-4568-9447-3ebbca947ee9"],
Cell[1034667, 19896, 847, 13, 24, "Print",ExpressionUUID->"7d3ef1ef-ba54-4623-b005-6c206fabb395"],
Cell[1035517, 19911, 5399, 93, 325, "Output",ExpressionUUID->"93c78776-542c-4d13-ba4b-22e93b3bf00a"],
Cell[1040919, 20006, 860, 15, 37, "Output",ExpressionUUID->"905ecf97-a42e-475e-8910-2c0f80a25cdd"],
Cell[1041782, 20023, 844, 13, 24, "Print",ExpressionUUID->"161f9661-e1c9-4264-8db2-6f65a918b957"],
Cell[1042629, 20038, 4394, 79, 325, "Output",ExpressionUUID->"6129f99a-5f82-4b2b-b635-106553d83603"],
Cell[1047026, 20119, 866, 14, 24, "Print",ExpressionUUID->"21dabb1a-348a-4a64-8d5a-291a492636d1"],
Cell[1047895, 20135, 8267, 135, 325, "Output",ExpressionUUID->"6292a62e-07a4-4570-ba32-6dfb6907f943"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1056211, 20276, 411, 10, 45, "Subsubsection",ExpressionUUID->"13ea18d9-566c-43be-b78b-d1ec65111118"],
Cell[1056625, 20288, 501, 11, 58, "Text",ExpressionUUID->"da7fbc95-43d8-4428-9c05-0b9a7a27a936"],
Cell[1057129, 20301, 2346, 61, 94, "Input",ExpressionUUID->"12c8b33b-021f-473e-8f60-75f400ffa05b"],
Cell[CellGroupData[{
Cell[1059500, 20366, 5368, 131, 262, "Input",ExpressionUUID->"5492d03f-5809-4030-bceb-579dc9582f08"],
Cell[1064871, 20499, 745, 14, 34, "Output",ExpressionUUID->"a7b63ad8-3c98-4889-8f7c-9bcc61d85f19"],
Cell[1065619, 20515, 746, 14, 34, "Output",ExpressionUUID->"0cc6a35b-e8fe-4414-8ece-1b5ed868db6d"],
Cell[1066368, 20531, 114591, 2143, 247, "Output",ExpressionUUID->"78a0a393-bde1-4f91-9da8-f44e72c4de89"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1181008, 22680, 336, 7, 45, "Subsubsection",ExpressionUUID->"396d1ce8-b256-49dd-8549-fb20bd3aa4d0"],
Cell[1181347, 22689, 280, 6, 35, "Text",ExpressionUUID->"86d7fc4f-bf98-4b49-b718-2016a16249f2"],
Cell[CellGroupData[{
Cell[1181652, 22699, 29487, 495, 19, "Input",ExpressionUUID->"ca28a57a-a7c6-47d5-a340-465c50ac479e",
 CellOpen->False],
Cell[1211142, 23196, 18846, 469, 60, "Output",ExpressionUUID->"9d49684c-1589-434c-b607-28b5d43de8b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1230025, 23670, 1208, 22, 73, "Input",ExpressionUUID->"6209c83b-05da-4dcd-86d7-b7e6f818f6b3"],
Cell[1231236, 23694, 1398, 24, 60, "Output",ExpressionUUID->"b03feb3f-a428-4a2a-8d74-8949890eca64"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1232683, 23724, 367, 10, 45, "Subsubsection",ExpressionUUID->"c280a725-40e6-4e75-9cc0-ef3c4ed335fc"],
Cell[1233053, 23736, 297, 7, 35, "Text",ExpressionUUID->"4ac0c6c6-f5cc-4191-b040-43c4c63c668e"],
Cell[1233353, 23745, 30747, 724, 19, "Input",ExpressionUUID->"48142aec-924c-4a15-a62f-44d9791edd73",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[1264137, 24474, 423, 10, 45, "Subsubsection",ExpressionUUID->"378de959-2bbd-4d67-a134-da657d765354"],
Cell[1264563, 24486, 133554, 2819, 6604, "Input",ExpressionUUID->"10e7ea23-cbc7-4ad7-a61b-e42864d4b1a3"],
Cell[CellGroupData[{
Cell[1398142, 27309, 3039, 79, 388, "Input",ExpressionUUID->"2e7d8305-aab9-4efc-97e1-b0d7f37ddfc5"],
Cell[1401184, 27390, 1119, 18, 34, "Output",ExpressionUUID->"83988f77-58e8-46b7-9d2d-f4828873754d"],
Cell[1402306, 27410, 538, 11, 41, "Message",ExpressionUUID->"19d8b057-f4f8-4e25-bd7e-743ac6358dda"],
Cell[1402847, 27423, 575, 12, 24, "Message",ExpressionUUID->"6bffd9c3-c0a5-4323-ab2b-2cc22452f6ae"],
Cell[1403425, 27437, 538, 11, 41, "Message",ExpressionUUID->"1d046ae6-11fb-41a2-8a02-9cd32004bc42"],
Cell[1403966, 27450, 575, 12, 24, "Message",ExpressionUUID->"773ee616-aee9-4232-a381-a792fae7c0bd"],
Cell[1404544, 27464, 537, 11, 41, "Message",ExpressionUUID->"eb251d8e-da23-4f83-8a91-f24e2a906afa"],
Cell[1405084, 27477, 618, 12, 24, "Message",ExpressionUUID->"0811392c-657e-4f6e-a585-5c571d2d2b06"],
Cell[1405705, 27491, 573, 12, 24, "Message",ExpressionUUID->"6e6b6ee5-109b-439c-bbc8-51f584fe30c9"],
Cell[1406281, 27505, 622, 12, 24, "Message",ExpressionUUID->"550a251c-0df6-4bf2-a345-50a8fa3ee9cc"],
Cell[1406906, 27519, 779, 14, 24, "Message",ExpressionUUID->"1c69869c-9c76-4c00-94ab-c674284042f0"],
Cell[1407688, 27535, 759, 14, 24, "Message",ExpressionUUID->"f70ed409-6896-43b9-9f05-c8ee53cdb234"],
Cell[1408450, 27551, 760, 14, 24, "Message",ExpressionUUID->"371a6c95-fd2c-41f4-8207-2b4142f5d259"],
Cell[1409213, 27567, 630, 12, 24, "Message",ExpressionUUID->"7322f290-e21f-4dbf-b062-ee1f0240cf77"],
Cell[1409846, 27581, 540, 11, 41, "Message",ExpressionUUID->"0d648410-9308-4cff-bc9f-ca700a960bfe"],
Cell[1410389, 27594, 573, 12, 24, "Message",ExpressionUUID->"e22b0fee-c734-4ac6-b31d-1cf651fb54c7"],
Cell[1410965, 27608, 540, 11, 41, "Message",ExpressionUUID->"e54187fa-16ae-46e5-b8de-bf79abdca931"],
Cell[1411508, 27621, 573, 12, 24, "Message",ExpressionUUID->"5d8152eb-1b9c-4479-bf55-249ccb9d7c48"],
Cell[1412084, 27635, 540, 11, 41, "Message",ExpressionUUID->"70f72eda-47ae-442b-bcb0-20ef61603e0b"],
Cell[1412627, 27648, 618, 12, 24, "Message",ExpressionUUID->"14104134-c2dd-466f-96a0-c4f78a1e19d5"],
Cell[1413248, 27662, 573, 12, 24, "Message",ExpressionUUID->"d76df946-968e-47bc-a597-22b4a26c3dbc"],
Cell[1413824, 27676, 622, 12, 24, "Message",ExpressionUUID->"54b4f91a-128e-426c-8679-39fe35852133"],
Cell[1414449, 27690, 1049, 16, 34, "Output",ExpressionUUID->"afd86887-8daf-4788-96f6-17a4fbb2099a"]
}, Open  ]],
Cell[1415513, 27709, 1459, 41, 94, "Input",ExpressionUUID->"a9963db4-468d-40fa-917f-be32441084a5"],
Cell[CellGroupData[{
Cell[1416997, 27754, 2243, 56, 115, "Input",ExpressionUUID->"8b53935c-450c-43a3-a60b-eaad62a99ae1"],
Cell[1419243, 27812, 2592, 44, 119, "Output",ExpressionUUID->"3365fe8c-3e3e-4be4-a456-ec86e47a860f"],
Cell[1421838, 27858, 433, 10, 24, "Message",ExpressionUUID->"26831342-7923-4c7c-837d-c829ba483523"],
Cell[1422274, 27870, 433, 10, 24, "Message",ExpressionUUID->"f77b5b90-dd47-499d-b655-a40b193f3b37"],
Cell[1422710, 27882, 435, 10, 24, "Message",ExpressionUUID->"f782b207-aa86-4b25-af26-0a2eee4372a4"],
Cell[1423148, 27894, 507, 11, 24, "Message",ExpressionUUID->"e55012a2-cd92-4853-b928-9296b2894de0"],
Cell[1423658, 27907, 741, 12, 34, "Output",ExpressionUUID->"d81a752f-6784-420b-8ac9-db9da5e5bde3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

